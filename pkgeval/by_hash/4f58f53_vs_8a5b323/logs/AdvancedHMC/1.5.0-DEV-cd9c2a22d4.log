Julia Version 1.5.0-DEV.613
Commit cd9c2a22d4 (2020-04-10 02:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Parameters ─────────────────── v0.12.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.11
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Rmath ──────────────────────── v0.6.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed LazyArrays ─────────────────── v0.15.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StatsBase ──────────────────── v0.32.2
  Installed StaticArrays ───────────────── v0.12.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_CBAJjR/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_CBAJjR/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.15344125
│   t_steps = 0.008072888
└   t_step / t_steps = 19.006983622217973
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:43:08[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               1.2152262273349946e-140
  log_density:                   -10.722200458697557
  hamiltonian_energy:            28.015265629319074
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  322.16698276436864
  tree_depth:                    1
  numerical_error:               false
  step_size:                     3.2
  nom_step_size:                 3.2
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:26[K
  iterations:                    1354
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.34029736851474784
  log_density:                   -15.28679010569047
  hamiltonian_energy:            18.672142977313968
  hamiltonian_energy_error:      0.9293033303016607
  max_hamiltonian_energy_error:  1.3139047268312751
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9163981017155824
  nom_step_size:                 0.9163981017155824
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2027710361078796, 0.8598 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:23[K
  iterations:                    1548
  n_steps:                       35
  is_accept:                     true
  acceptance_rate:               0.9277805572184268
  log_density:                   -20.08743950016694
  hamiltonian_energy:            24.143697708782586
  hamiltonian_energy_error:      0.41792008846566375
  max_hamiltonian_energy_error:  -0.5741761795403484
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8129260822309445
  nom_step_size:                 0.8129260822309445
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2027710361078796, 0.8598 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:20[K
  iterations:                    1766
  n_steps:                       71
  is_accept:                     true
  acceptance_rate:               0.9458473736700748
  log_density:                   -13.716000809932169
  hamiltonian_energy:            18.015677965637146
  hamiltonian_energy_error:      -0.06429384583938003
  max_hamiltonian_energy_error:  0.3442795006475734
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.831672924132355
  nom_step_size:                 0.831672924132355
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2027710361078796, 0.8598 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:18[K
  iterations:                    2025
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7823711287161208
  log_density:                   -13.46555393290339
  hamiltonian_energy:            21.602943824443457
  hamiltonian_energy_error:      -0.07487044831170664
  max_hamiltonian_energy_error:  0.4807363930874686
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▍                        |  ETA: 0:00:14[K
  iterations:                    2475
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6397511991712567
  log_density:                   -14.070000887657995
  hamiltonian_energy:            21.17192441943818
  hamiltonian_energy_error:      0.275040689134439
  max_hamiltonian_energy_error:  0.9022244242418864
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:13[K
  iterations:                    2790
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.234403572315458
  hamiltonian_energy:            18.346616073646317
  hamiltonian_energy_error:      -0.16349295578802625
  max_hamiltonian_energy_error:  -0.17750182699246864
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▍                      |  ETA: 0:00:11[K
  iterations:                    3219
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4423306373113018
  log_density:                   -23.29014729861197
  hamiltonian_energy:            27.51955799930962
  hamiltonian_energy_error:      1.135708798354699
  max_hamiltonian_energy_error:  1.135708798354699
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████▏                     |  ETA: 0:00:10[K
  iterations:                    3530
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.90180047429749
  log_density:                   -14.228715585072397
  hamiltonian_energy:            17.550528897828116
  hamiltonian_energy_error:      0.060728335492918006
  max_hamiltonian_energy_error:  -0.2950221112589375
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:09[K
  iterations:                    3868
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7611779904501351
  log_density:                   -16.65761210097675
  hamiltonian_energy:            19.89481988641473
  hamiltonian_energy_error:      0.40940499998187363
  max_hamiltonian_energy_error:  0.4894116558503896
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▏                   |  ETA: 0:00:08[K
  iterations:                    4298
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7139004631453886
  log_density:                   -18.399177883795645
  hamiltonian_energy:            22.597374381255545
  hamiltonian_energy_error:      0.5402739452402336
  max_hamiltonian_energy_error:  0.5402739452402336
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:07[K
  iterations:                    4597
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8302550552466842
  log_density:                   -14.461166740867455
  hamiltonian_energy:            20.9326335104029
  hamiltonian_energy_error:      0.05670806440127052
  max_hamiltonian_energy_error:  0.41680974951440675
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|████████████▉                  |  ETA: 0:00:06[K
  iterations:                    5008
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7126094154212245
  log_density:                   -19.49570820608082
  hamiltonian_energy:            21.984206009589116
  hamiltonian_energy_error:      0.6317601342621657
  max_hamiltonian_energy_error:  0.6762031653539182
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▌                 |  ETA: 0:00:06[K
  iterations:                    5209
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9725970398668616
  log_density:                   -17.77408139414971
  hamiltonian_energy:            20.560734248868233
  hamiltonian_energy_error:      0.04322108831375715
  max_hamiltonian_energy_error:  -0.6913776021787434
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8441082638761718
  log_density:                   -14.764174076530852
  hamiltonian_energy:            22.156198596713253
  hamiltonian_energy_error:      0.01933542308308489
  max_hamiltonian_energy_error:  0.33933671951517397
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▍               |  ETA: 0:00:05[K
  iterations:                    5951
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8691482158854983
  log_density:                   -10.532532965370669
  hamiltonian_energy:            13.685262002726333
  hamiltonian_energy_error:      0.02226553510116247
  max_hamiltonian_energy_error:  0.2868460985351504
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:04[K
  iterations:                    6367
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9891529695204925
  log_density:                   -12.181060309964616
  hamiltonian_energy:            18.103874775747798
  hamiltonian_energy_error:      -0.3351700048171402
  max_hamiltonian_energy_error:  -0.3351700048171402
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▏             |  ETA: 0:00:04[K
  iterations:                    6609
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8711512866943675
  log_density:                   -12.813447071365584
  hamiltonian_energy:            14.771838081715686
  hamiltonian_energy_error:      0.22921383656164274
  max_hamiltonian_energy_error:  0.29465858492491215
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▏            |  ETA: 0:00:04[K
  iterations:                    7039
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7289772242058318
  log_density:                   -11.363498633603015
  hamiltonian_energy:            18.54006158093688
  hamiltonian_energy_error:      -0.0965879835214416
  max_hamiltonian_energy_error:  0.5697301059337612
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7398
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8248903834682685
  log_density:                   -14.538815581405359
  hamiltonian_energy:            17.395070837966657
  hamiltonian_energy_error:      0.277120249119136
  max_hamiltonian_energy_error:  0.3902120831384259
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▎          |  ETA: 0:00:03[K
  iterations:                    7844
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.232740338786723
  hamiltonian_energy:            20.748915481151077
  hamiltonian_energy_error:      -0.6477720605878083
  max_hamiltonian_energy_error:  -0.7694161841434344
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:03[K
  iterations:                    8155
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9919932398377822
  log_density:                   -12.1310752530228
  hamiltonian_energy:            19.10917952831285
  hamiltonian_energy_error:      -0.5185192712298559
  max_hamiltonian_energy_error:  -0.5752475267759962
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8576
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7380767775069964
  log_density:                   -12.14719533032332
  hamiltonian_energy:            19.255512798733353
  hamiltonian_energy_error:      -0.0461774815004965
  max_hamiltonian_energy_error:  0.5396596354190315
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████        |  ETA: 0:00:02[K
  iterations:                    8889
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8066387611558582
  log_density:                   -12.082144219531514
  hamiltonian_energy:            19.38565719510119
  hamiltonian_energy_error:      -0.11022993835090489
  max_hamiltonian_energy_error:  0.4784157859709808
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:02[K
  iterations:                    9291
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9913305750633096
  log_density:                   -14.40113480090858
  hamiltonian_energy:            19.12858085825682
  hamiltonian_energy_error:      -0.06994682449698786
  max_hamiltonian_energy_error:  -0.19195511363066586
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9614
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8978937187501559
  log_density:                   -14.105218861821122
  hamiltonian_energy:            16.43798203550547
  hamiltonian_energy_error:      0.14684479160862907
  max_hamiltonian_energy_error:  0.2675260801818986
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9950
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.995200955722869
  log_density:                   -12.29173221266757
  hamiltonian_energy:            14.196883476115215
  hamiltonian_energy_error:      -0.03343261530628716
  max_hamiltonian_energy_error:  -0.2076235546606533
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10382
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8138762104552273
  log_density:                   -15.1068302623524
  hamiltonian_energy:            23.00522540936356
  hamiltonian_energy_error:      -0.03355480268044886
  max_hamiltonian_energy_error:  0.5884716164053145
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▋   |  ETA: 0:00:01[K
  iterations:                    10708
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9773995677705505
  log_density:                   -12.023751312066594
  hamiltonian_energy:            13.683233594137848
  hamiltonian_energy_error:      0.0673245533092448
  max_hamiltonian_energy_error:  0.0673245533092448
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 93%|████████████████████████████▊  |  ETA: 0:00:00[K
  iterations:                    11148
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9780586068206871
  log_density:                   -17.434654549823932
  hamiltonian_energy:            25.62201332644854
  hamiltonian_energy_error:      -0.01885267967107751
  max_hamiltonian_energy_error:  -0.09721570306515304
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7711199883160644
  log_density:                   -17.12043633383224
  hamiltonian_energy:            18.559325809641372
  hamiltonian_energy_error:      0.6381318738217381
  max_hamiltonian_energy_error:  0.6381318738217381
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11926
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8376105519468712
  log_density:                   -15.092299713819216
  hamiltonian_energy:            21.31457841541551
  hamiltonian_energy_error:      0.11989505340844175
  max_hamiltonian_energy_error:  0.3673996549724414
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9975008263187572
  log_density:                   -11.032542682797136
  hamiltonian_energy:            15.035312789484472
  hamiltonian_energy_error:      -0.31869835380358147
  max_hamiltonian_energy_error:  -0.33153077056521063
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6637410040260971
  nom_step_size:                 0.6637410040260971
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.015078310398286, 1.00550 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.478403024 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.015078310398286, 1.00550 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.664), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0860396274452964
└   average_acceptance_rate = 0.879150608441795
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.209671948 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠈⡆⠀⠀⠀⡜⠣⡀⡜⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠘⠤⡀⡜⠀⠀⠘⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⢡⡄⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⢀⠎⢡⠃⠘⡄⠀⠀⢀⡠⠒⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⡠⠃⣀⠇⠀⠀⠘⠒⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠚⢦⡴⠓⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
