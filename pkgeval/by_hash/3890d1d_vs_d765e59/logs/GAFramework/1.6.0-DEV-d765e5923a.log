Julia Version 1.6.0-DEV.199
Commit d765e5923a (2020-06-09 02:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_3bz9e8/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_3bz9e8/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172296680890135
curgen: 20 fitness: 0.21723218693055707
curgen: 30 fitness: 0.21723218693055707
curgen: 40 fitness: 0.21723280364434186
curgen: 50 fitness: 0.21723362215209216
CoordinateCreature{Array{Float64,1}}([0.2225598566665584], -0.21723362215209216) 0.2225598566665584 -0.21723362215209216
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257937701063871
curgen: 100 fitness: 3.2582100581595546
curgen: 150 fitness: 3.258242220926165
curgen: 200 fitness: 3.2583476574043067
curgen: 250 fitness: 3.2583618528603746
curgen: 300 fitness: 3.2583626453159478
curgen: 350 fitness: 3.2583801682546283
curgen: 400 fitness: 3.2583837897164227
curgen: 450 fitness: 3.258397047287705
curgen: 500 fitness: 3.258409614624805
CoordinateCreature{Array{Float64,1}}([-0.22255450281701208, 0.221751306725541, -0.2229745714583928, -0.22291678404011403, -0.22220776079668964, 0.2221140349576108, -0.22292046641943095, 0.22252161016503597, 0.2224516922757708, -0.2224863900990186, 0.22242781198483905, 0.2222062456413253, 0.22185836160481692, 0.22270316230898593, -0.22223936476957837], -3.258409614624805) [-0.22255450281701208, 0.221751306725541, -0.2229745714583928, -0.22291678404011403, -0.22220776079668964, 0.2221140349576108, -0.22292046641943095, 0.22252161016503597, 0.2224516922757708, -0.2224863900990186, 0.22242781198483905, 0.2222062456413253, 0.22185836160481692, 0.22270316230898593, -0.22223936476957837] -3.258409614624805
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002911494093893907
curgen: 100 fitness: -0.002855721931240396
curgen: 150 fitness: -0.002209254481442713
curgen: 200 fitness: -0.0019650741031114194
curgen: 250 fitness: -0.0016191185966363264
curgen: 300 fitness: -0.001398773867890668
curgen: 350 fitness: -0.0013677600303765303
curgen: 400 fitness: -0.0013677600303765303
curgen: 450 fitness: -0.0005470877904372173
curgen: 500 fitness: -0.0005365147821407845
CoordinateCreature{Array{Float64,1}}([-0.0005780944351999372, -0.0002938728248576266, -1.559330257467441e-5, -0.0004970116131043337, -0.0011616611077195373, -3.043367694690127e-5, -0.00025693796174278594, 0.00013613260026019286, -0.00028439377385839574, 0.0002285776827352154, 7.169271547199799e-5, -0.00018510235698851547, 0.000569174783631261, -0.0002472500422672588, 0.00020964138573726938], 0.0005365147821407845) [-0.0005780944351999372, -0.0002938728248576266, -1.559330257467441e-5, -0.0004970116131043337, -0.0011616611077195373, -3.043367694690127e-5, -0.00025693796174278594, 0.00013613260026019286, -0.00028439377385839574, 0.0002285776827352154, 7.169271547199799e-5, -0.00018510235698851547, 0.000569174783631261, -0.0002472500422672588, 0.00020964138573726938] 0.0005365147821407845
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
