Julia Version 1.6.0-DEV.203
Commit 357143117f (2020-06-09 07:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_5koyli/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_5koyli/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172304267109551
curgen: 20 fitness: 0.2172304267109551
curgen: 30 fitness: 0.2172304267109551
curgen: 40 fitness: 0.2172304267109551
curgen: 50 fitness: 0.21723138876653986
CoordinateCreature{Array{Float64,1}}([-0.22277319995039024], -0.21723138876653986) -0.22277319995039024 -0.21723138876653986
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258275144745138
curgen: 100 fitness: 3.258385631567445
curgen: 150 fitness: 3.2584152888824978
curgen: 200 fitness: 3.2584353136058466
curgen: 250 fitness: 3.258463236280752
curgen: 300 fitness: 3.258463236280752
curgen: 350 fitness: 3.258463236280752
curgen: 400 fitness: 3.258463236280752
curgen: 450 fitness: 3.258463236280752
curgen: 500 fitness: 3.2584635871060508
CoordinateCreature{Array{Float64,1}}([-0.22236407762307447, 0.22265528319072048, -0.22241245584206618, -0.22251554132774146, -0.22243158134036894, 0.2224691885009829, 0.22185773157100366, 0.22228917666684656, -0.22254172049328558, -0.22301719822059718, 0.22278136379660013, -0.22255536548502983, 0.22265142458373968, -0.22247890731231634, 0.22259755324566552], -3.2584635871060508) [-0.22236407762307447, 0.22265528319072048, -0.22241245584206618, -0.22251554132774146, -0.22243158134036894, 0.2224691885009829, 0.22185773157100366, 0.22228917666684656, -0.22254172049328558, -0.22301719822059718, 0.22278136379660013, -0.22255536548502983, 0.22265142458373968, -0.22247890731231634, 0.22259755324566552] -3.2584635871060508
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0033289713610713534
curgen: 100 fitness: -0.0032710725491540416
curgen: 150 fitness: -0.0032376799375413157
curgen: 200 fitness: -0.0029805021394508913
curgen: 250 fitness: -0.0025592477700513427
curgen: 300 fitness: -0.0022453539590685523
curgen: 350 fitness: -0.0021162662852134417
curgen: 400 fitness: -0.0021160620661930807
curgen: 450 fitness: -0.001931859050841922
curgen: 500 fitness: -0.0015756916924090092
CoordinateCreature{Array{Float64,1}}([0.0005885480836244941, 0.0002455801494606948, -0.00033764963023818063, 0.00018236249104534646, -0.000348237507497573, -0.00016355687536468875, -0.00019603197003431345, 0.0002200425221128609, 0.00032202736876380846, -0.00031437188161083195, -0.0008253473979756539, 0.002364677493676157, 0.000290645124643755, -0.0006938503453700093, -0.00033504474114431264], 0.0015756916924090092) [0.0005885480836244941, 0.0002455801494606948, -0.00033764963023818063, 0.00018236249104534646, -0.000348237507497573, -0.00016355687536468875, -0.00019603197003431345, 0.0002200425221128609, 0.00032202736876380846, -0.00031437188161083195, -0.0008253473979756539, 0.002364677493676157, 0.000290645124643755, -0.0006938503453700093, -0.00033504474114431264] 0.0015756916924090092
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
