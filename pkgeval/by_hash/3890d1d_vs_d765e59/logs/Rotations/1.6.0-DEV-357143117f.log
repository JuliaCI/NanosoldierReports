Julia Version 1.6.0-DEV.203
Commit 357143117f (2020-06-09 07:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rotations ──── v1.0.1
  Installed StaticArrays ─ v0.12.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6038ab10] + Rotations v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6038ab10] + Rotations v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing Rotations
Status `/tmp/jl_0NaN3K/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [f6369f11] ForwardDiff v0.10.10
  [6038ab10] Rotations v1.0.1
  [90137ffa] StaticArrays v0.12.3
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_0NaN3K/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [f6369f11] ForwardDiff v0.10.10
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.5
  [6038ab10] Rotations v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 200933  200933
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:         | Pass  Total
Principal Value (MRP) | 2000   2000
Test Summary:                    | Pass  Total
Principal Value (UnitQuaternion) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                     | Pass  Total
Principal Value (Rotation Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
Test Summary:    | Pass  Total
Unit Quaternions |   70     70
Test Summary:              | Pass  Total
RodriguesParam basic tests |   23     23
Test Summary:   | Pass  Total
MRP basic tests |   23     23
Test Summary: | Pass  Total
kinematics    |    9      9
Test Summary:   | Pass  Total
Quaternion Maps |   35     35
Test Summary:  | Pass  Total
Rotation Error |   24     24
Test Summary: | Pass  Total
Deprecations  |    3      3
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.68725285 seconds)
done (took 3.114238987 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.082354054 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.200154516 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.133887333 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.041804203 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.989475358 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.144853827 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.058147648 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.875146798 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.062399105 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.059783139 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.02544674 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.110881497 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994775717 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.949760083 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.11356631 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.935353146 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.973021212 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.054801802 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.032290827 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994521623 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.224326909 seconds)
done (took 22.721038647 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.123838393 seconds)
  (2/20) tuning "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.064506532 seconds)
  (3/20) tuning "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 0.968251335 seconds)
  (4/20) tuning "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.088822372 seconds)
  (5/20) tuning "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.978966891 seconds)
  (6/20) tuning "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.004210163 seconds)
  (7/20) tuning "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.077465962 seconds)
  (8/20) tuning "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.004864271 seconds)
  (9/20) tuning "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.003584773 seconds)
  (10/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994730464 seconds)
  (11/20) tuning "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 1.034180219 seconds)
  (12/20) tuning "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.988957361 seconds)
  (13/20) tuning "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 0.972805442 seconds)
  (14/20) tuning "MRP{Float64} -> RotationVec{Float64}"...
  done (took 1.116205727 seconds)
  (15/20) tuning "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.052182441 seconds)
  (16/20) tuning "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.005792076 seconds)
  (17/20) tuning "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.99474582 seconds)
  (18/20) tuning "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.261037523 seconds)
  (19/20) tuning "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.342024681 seconds)
  (20/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.167368265 seconds)
done (took 22.018293661 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 0.959769243 seconds)
done (took 1.815263044 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.887022522 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.795763471 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.621701548 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.893720607 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.479815813 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.933444608 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.891170242 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.13872377 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.830372434 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.782898048 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.526377759 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.833537647 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.454784907 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.507044072 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.823143194 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.289724888 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.533061895 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.928723534 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.879028457 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.17950855 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.920914023 seconds)
done (took 35.801301536 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.916273948 seconds)
  (2/20) benchmarking "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.428640004 seconds)
  (3/20) benchmarking "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.787076974 seconds)
  (4/20) benchmarking "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.27609143 seconds)
  (5/20) benchmarking "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.888705338 seconds)
  (6/20) benchmarking "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.921942876 seconds)
  (7/20) benchmarking "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.424148205 seconds)
  (8/20) benchmarking "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.989581823 seconds)
  (9/20) benchmarking "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.144685095 seconds)
  (10/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.268495534 seconds)
  (11/20) benchmarking "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.812450121 seconds)
  (12/20) benchmarking "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.111401514 seconds)
  (13/20) benchmarking "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.190055135 seconds)
  (14/20) benchmarking "MRP{Float64} -> RotationVec{Float64}"...
  done (took 2.030958668 seconds)
  (15/20) benchmarking "RotationVec{Float64} -> MRP{Float64}"...
  done (took 2.132256487 seconds)
  (16/20) benchmarking "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.543347365 seconds)
  (17/20) benchmarking "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.904847091 seconds)
  (18/20) benchmarking "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.946412188 seconds)
  (19/20) benchmarking "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.46196442 seconds)
  (20/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.884058553 seconds)
done (took 28.741399063 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 9.448 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 58.043 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 64.478 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  37.246 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 63.128 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  38.131 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 65.634 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 64.787 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   20.170 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 59.424 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 63.982 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  40.556 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 63.894 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  25.181 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  41.113 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 64.274 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   20.378 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  41.468 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 64.172 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 64.166 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   20.383 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 48.791 ns

Group: Non-Euler conversions
UnitQuaternion{Float64} -> RotMatrix{3,Float64,9} 8.296 ns
UnitQuaternion{Float64} -> RotationVec{Float64}   36.116 ns
RotMatrix{3,Float64,9} -> RotationVec{Float64}    82.591 ns
UnitQuaternion{Float64} -> MRP{Float64}           2.959 ns
MRP{Float64} -> UnitQuaternion{Float64}           5.797 ns
UnitQuaternion{Float64} -> AngleAxis{Float64}     37.430 ns
RotMatrix{3,Float64,9} -> MRP{Float64}            38.361 ns
MRP{Float64} -> AngleAxis{Float64}                102.932 ns
MRP{Float64} -> RotMatrix{3,Float64,9}            35.306 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}      29.463 ns
AngleAxis{Float64} -> RotationVec{Float64}        2.467 ns
AngleAxis{Float64} -> UnitQuaternion{Float64}     18.222 ns
RotMatrix{3,Float64,9} -> UnitQuaternion{Float64} 36.410 ns
MRP{Float64} -> RotationVec{Float64}              107.153 ns
RotationVec{Float64} -> MRP{Float64}              103.570 ns
AngleAxis{Float64} -> MRP{Float64}                62.861 ns
RotationVec{Float64} -> RotMatrix{3,Float64,9}    87.882 ns
RotationVec{Float64} -> AngleAxis{Float64}        12.340 ns
RotationVec{Float64} -> UnitQuaternion{Float64}   56.005 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}      63.433 ns

    Testing Rotations tests passed 
