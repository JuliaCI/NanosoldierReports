Julia Version 1.6.0-DEV.199
Commit d765e5923a (2020-06-09 02:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MbedTLS_jll ──────── v2.16.0+2
  Installed IniFile ──────────── v0.5.0
  Installed UnPack ───────────── v1.0.1
  Installed MbedTLS ──────────── v1.0.2
  Installed OrderedCollections ─ v1.2.0
  Installed StructTypes ──────── v1.1.0
  Installed Parameters ───────── v0.12.1
  Installed WebDriver ────────── v0.1.0
  Installed JSON3 ────────────── v1.0.3
  Installed Parsers ──────────── v1.0.5
  Installed HTTP ─────────────── v0.8.15
Updating `~/.julia/environments/v1.6/Project.toml`
  [05625dda] + WebDriver v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [cd3eb016] + HTTP v0.8.15
  [83e8ac13] + IniFile v0.5.0
  [0f8b85d8] + JSON3 v1.0.3
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.0+2
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.5
  [856f2bd8] + StructTypes v1.1.0
  [3a884ed6] + UnPack v1.0.1
  [05625dda] + WebDriver v0.1.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing WebDriver
Status `/tmp/jl_qOt9zh/Project.toml`
  [e30172f5] Documenter v0.24.11
  [cd3eb016] HTTP v0.8.15
  [0f8b85d8] JSON3 v1.0.3
  [d96e819e] Parameters v0.12.1
  [05625dda] WebDriver v0.1.0
  [ade2ca70] Dates
  [8dfed614] Test
Status `/tmp/jl_qOt9zh/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.11
  [cd3eb016] HTTP v0.8.15
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [0f8b85d8] JSON3 v1.0.3
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.0+2
  [bac558e1] OrderedCollections v1.2.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.5
  [856f2bd8] StructTypes v1.1.0
  [3a884ed6] UnPack v1.0.1
  [05625dda] WebDriver v0.1.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ session = Session(wd)
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│  [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│  [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│  [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│  [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│  [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│  [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│  [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│  [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined]
│  [19] #post#14 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405 [inlined]
│  [20] post(::String, ::Array{Pair{String,String},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405
│  [21] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:26
│  [22] top-level scope at none:1
│ 
│ Expected output:
│ 
│ Session
│ 
│   diff =
│    Warning: Diff output requires color.
│    SessionERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│     [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│     [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│     [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│     [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│     [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│     [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│     [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│     [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined]
│     [19] #post#14 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405 [inlined]
│     [20] post(::String, ::Array{Pair{String,String},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405
│     [21] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:26
│     [22] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ isa(session, Session)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ delete!(session);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/04_WebDriver.jl:10-18
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> status(wd) # Ready to accept new sessions?
│ true
│ ```
│ 
│ Subexpression:
│ 
│ status(wd) # Ready to accept new sessions?
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/status))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│  [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│  [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│  [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│  [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│  [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│  [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│  [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::Array{UInt8,1}; headers::Array{Pair{String,String},1}, body::Array{UInt8,1}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│  [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined] (repeats 2 times)
│  [19] #get#12 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:391 [inlined]
│  [20] get at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:391 [inlined]
│  [21] status(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/02_commands/01_Sessions/03_Status.jl:8
│  [22] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/status))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│     [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│     [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│     [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│     [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│     [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│     [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│     [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::Array{UInt8,1}; headers::Array{Pair{String,String},1}, body::Array{UInt8,1}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│     [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined] (repeats 2 times)
│     [19] #get#12 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:391 [inlined]
│     [20] get at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:391 [inlined]
│     [21] status(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/02_commands/01_Sessions/03_Status.jl:8
│     [22] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ session = Session(wd)
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│  [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│  [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│  [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│  [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│  [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│  [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│  [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│  [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined]
│  [19] #post#14 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405 [inlined]
│  [20] post(::String, ::Array{Pair{String,String},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405
│  [21] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:26
│  [22] top-level scope at none:1
│ 
│ Expected output:
│ 
│ Session
│ 
│   diff =
│    Warning: Diff output requires color.
│    SessionERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:525
│     [2] connect at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction),Tuple{Bool,Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:616
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:583 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionPool.jl:527
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:iofunction,),Tuple{Nothing}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:51
│     [12] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/MessageRequest.jl:28 [inlined]
│     [13] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:28
│     [14] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/BasicAuthRequest.jl:21 [inlined]
│     [15] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:24
│     [16] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/RedirectRequest.jl:21
│     [17] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314
│     [18] request at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:314 [inlined]
│     [19] #post#14 at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405 [inlined]
│     [20] post(::String, ::Array{Pair{String,String},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/BOJmV/src/HTTP.jl:405
│     [21] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/3oQAo/src/01_structs/05_Session.jl:26
│     [22] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ isa(session, Session)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/3oQAo/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ delete!(session);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Builder.jl:204
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Utilities/Selectors.jl:167
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:240 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:239
│     [7] (::Documenter.var"#all_doctests#30"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:728
│     [8] macro expansion at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
│     [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
│     [10] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:687
│     [12] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:674
│     [13] top-level scope at /home/pkgeval/.julia/packages/WebDriver/3oQAo/test/runtests.jl:9
│     [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115
│     [15] top-level scope at /home/pkgeval/.julia/packages/WebDriver/3oQAo/test/runtests.jl:9
│     [16] include(::String) at ./client.jl:444
│     [17] top-level scope at none:6
│     [18] eval(::Module, ::Any) at ./boot.jl:331
│     [19] exec_options(::Base.JLOptions) at ./client.jl:260
│     [20] _start() at ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:737
Doctests: WebDriver: Test Failed at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1115 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
Test Summary:         | Fail  Total
WebDriver             |    1      1
  Doctests: WebDriver |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/WebDriver/3oQAo/test/runtests.jl:8
ERROR: Package WebDriver errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
