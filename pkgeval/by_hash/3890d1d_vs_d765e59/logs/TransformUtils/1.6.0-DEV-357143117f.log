Julia Version 1.6.0-DEV.203
Commit 357143117f (2020-06-09 07:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_9ddp8Q/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_9ddp8Q/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.215654328456946 -0.09660598258962137; 0.215654328456946 0.0 -0.0031523005833632455; 0.09660598258962137 0.0031523005833632455 0.0])
dAA = so3([0.0 -0.04306041222505499 0.0568339203868172; 0.04306041222505499 0.0 -0.10107812626134179; -0.0568339203868172 0.10107812626134179 0.0])
dAA = so3([0.0 0.12493475722023065 -0.030134589843824514; -0.12493475722023065 0.0 -0.15736784736209464; 0.030134589843824514 0.15736784736209464 0.0])
dAA = Quaternion(0.9952159175667264, [0.052111368322133096, -0.004809830936407058, 0.08250180749399966])
dAA = SO3([0.9999180834407843 0.007681303275976467 -0.010238358661978184; -0.006085001611087296 0.9890108158676275 0.14771790295100487; 0.011260513465286365 -0.14764350197970752 0.9889765402473741])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9842377993104142 -0.08813393532750703 0.1533243746189093; 0.12375287798737789 0.9625778269856952 -0.2410998801022893; -0.12633756210420555 0.2562739480305868 0.9583123102425337]), [0.031523005833632455, -0.9660598258962136, 2.1565432845694597])
xj = SE3(SO3([0.9161057832451988 -0.40085046053847284 0.008312772750119686; 0.3893667988443344 0.8845335611060595 -0.2568927309885365; 0.09562264304241205 0.23857763424748588 0.9664041714388739]), [1.5736784736209461, -0.3013458984382451, -1.2493475722023064])
Dx = SE3(SO3([0.9377704703825774 -0.31520991795306963 -0.14570261666304526; 0.3185614315318666 0.9479021539508892 -0.0003476717314492006; 0.138221413749126 -0.04608919785897858 0.9893283714833558]), [2.030399913008273, -0.3689184388294886, -3.18771956093569])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
