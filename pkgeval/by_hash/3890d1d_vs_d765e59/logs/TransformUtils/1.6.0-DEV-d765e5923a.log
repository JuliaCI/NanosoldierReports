Julia Version 1.6.0-DEV.199
Commit d765e5923a (2020-06-09 02:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ajM5dg/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ajM5dg/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.047958308579646225 0.01607183180670504; -0.047958308579646225 0.0 -0.024889099142842104; -0.01607183180670504 0.024889099142842104 0.0])
dAA = so3([0.0 -0.1274282986755124 -0.09059874678175413; 0.1274282986755124 0.0 0.053891392988835676; 0.09059874678175413 -0.053891392988835676 0.0])
dAA = so3([0.0 -0.009397648604297013 -0.06257831053737588; 0.009397648604297013 0.0 -0.03916051344888719; 0.06257831053737588 0.03916051344888719 0.0])
dAA = Quaternion(0.9935800812043339, [0.09223198458017481, -0.06093716402066642, -0.02405296853841805])
dAA = SO3([0.9965706791323927 0.07581580904316744 0.03314882490725399; -0.07507749131567397 0.9969128995947016 -0.022979140963697565; -0.03478867331972736 0.020411607501971903 0.9991862261299638])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9246879755194237 -0.294530251668641 -0.24125521503544042; 0.3246136059680496 0.9410277460055947 0.09535611185471977; 0.19894259159418184 -0.16648937533559607 0.9657655684223545]), [0.24889099142842103, 0.16071831806705042, -0.47958308579646225])
xj = SE3(SO3([0.9476862436173804 0.07361576340775237 -0.31059862046743364; -0.20769466895517383 0.8811027998190326 -0.4248773712951332; 0.2423916420712146 0.4671601176566291 0.8502986042121112]), [0.3916051344888719, -0.6257831053737588, 0.09397648604297013])
Dx = SE3(SO3([0.8571155800627004 0.4470276128056848 -0.25596717719862316; -0.5149243470948074 0.7296829162193028 -0.44990638864843907; -0.014345702588823922 0.5174255068770235 0.8556079976544682]), [-0.009237583482181178, -0.8776448690362646, 0.4444958369414259])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
