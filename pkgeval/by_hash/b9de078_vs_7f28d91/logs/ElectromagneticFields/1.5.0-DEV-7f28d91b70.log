Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed VersionParsing ─────────────── v1.2.0
  Installed SymEngine ──────────────────── v0.7.1
  Installed Parsers ────────────────────── v0.3.12
  Installed Compat ─────────────────────── v3.8.0
  Installed RecipesBase ────────────────── v0.8.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed Documenter ─────────────────── v0.24.6
  Installed Combinatorics ──────────────── v1.0.0
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed Conda ──────────────────────── v1.4.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed JSON ───────────────────────── v0.21.0
  Installed DataStructures ─────────────── v0.17.10
  Installed SpecialFunctions ───────────── v0.10.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SymPy ──────────────────────── v1.0.7
  Installed BinaryProvider ─────────────── v0.5.8
  Installed PyCall ─────────────────────── v1.91.4
  Installed Polynomials ────────────────── v0.6.1
  Installed ElectromagneticFields ──────── v0.3.0
  Installed DocStringExtensions ────────── v0.8.1
#=#=#                                                                         ##                                                                         3.8%########                                                                  11.7%###############                                                           21.2%########################                                                  33.5%###################################                                       49.1%#################################################                         69.0%###################################################################       94.0%######################################################################## 100.0%
#=#=#                                                                         ##############################                                            42.2%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   d6c1ba6f + ElectromagneticFields v0.3.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   b99e7846 + BinaryProvider v0.5.8
   861a8166 + Combinatorics v1.0.0
   34da2185 + Compat v3.8.0
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   8f4d0f93 + Conda v1.4.1
   864edb3b + DataStructures v0.17.10
   ffbed154 + DocStringExtensions v0.8.1
   e30172f5 + Documenter v0.24.6
   d6c1ba6f + ElectromagneticFields v0.3.0
   682c06a0 + JSON v0.21.0
   1914dd2f + MacroTools v0.5.4
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   69de0a69 + Parsers v0.3.12
   f27b6e38 + Polynomials v0.6.1
   438e738f + PyCall v1.91.4
   3cdcf5f2 + RecipesBase v0.8.0
   276daf66 + SpecialFunctions v0.10.0
   123dc426 + SymEngine v0.7.1
   24249f21 + SymPy v1.0.7
   81def892 + VersionParsing v1.2.0
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8bb1440f + DelimitedFiles
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   a63ad114 + Mmap
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   1a1011a3 + SharedArrays
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
   Building SymEngine → `~/.julia/packages/SymEngine/RK5Ks/deps/build.log`
   Building Conda ────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall ───→ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing ElectromagneticFields
     Status `/tmp/jl_7pwBwF/Project.toml`
   861a8166 Combinatorics v1.0.0
   e30172f5 Documenter v0.24.6
   d6c1ba6f ElectromagneticFields v0.3.0
   1bc83da4 SafeTestsets v0.0.1
   123dc426 SymEngine v0.7.1
   24249f21 SymPy v1.0.7
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_7pwBwF/Manifest.toml`
   b99e7846 BinaryProvider v0.5.8
   861a8166 Combinatorics v1.0.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   8f4d0f93 Conda v1.4.1
   864edb3b DataStructures v0.17.10
   ffbed154 DocStringExtensions v0.8.1
   e30172f5 Documenter v0.24.6
   d6c1ba6f ElectromagneticFields v0.3.0
   682c06a0 JSON v0.21.0
   1914dd2f MacroTools v0.5.4
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   438e738f PyCall v1.91.4
   3cdcf5f2 RecipesBase v0.8.0
   1bc83da4 SafeTestsets v0.0.1
   276daf66 SpecialFunctions v0.10.0
   123dc426 SymEngine v0.7.1
   24249f21 SymPy v1.0.7
   81def892 VersionParsing v1.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
WARNING: importing deprecated binding Compat.invokelatest into SymEngine.
WARNING: Compat.MathConstants is deprecated, use Base.MathConstants instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/SymEngine.jl:6
WARNING: Compat.MathConstants is deprecated, use Base.MathConstants instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/SymEngine.jl:6
WARNING: Compat.MathConstants is deprecated, use Base.MathConstants instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/SymEngine.jl:6
WARNING: Compat.MathConstants is deprecated, use Base.MathConstants instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/SymEngine.jl:6
WARNING: importing deprecated binding Compat.LinearAlgebra into SymEngine.
WARNING: importing deprecated binding Compat.Libdl into SymEngine.
WARNING: Compat.LinearAlgebra is deprecated, use LinearAlgebra instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/dense-matrix.jl:162
WARNING: Compat.LinearAlgebra is deprecated, use LinearAlgebra instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/dense-matrix.jl:166
WARNING: Compat.LinearAlgebra is deprecated, use LinearAlgebra instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/dense-matrix.jl:168
WARNING: Compat.LinearAlgebra is deprecated, use LinearAlgebra instead.
  likely near /home/pkgeval/.julia/packages/SymEngine/RK5Ks/src/dense-matrix.jl:168
ERROR: LoadError: LoadError: InitError: PyError (PyImport_ImportModule

The Python package sympy could not be found by pyimport. Usually this means
that you did not install sympy in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the sympy module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the sympy module, you can use `pyimport_conda("sympy", PKG)`,
where PKG is the Anaconda package the contains the module sympy,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'sympy'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:693 [inlined]
 [4] __init__() at /home/pkgeval/.julia/packages/SymPy/1Cwgd/src/SymPy.jl:99
 [5] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [6] _require_from_serialized(::String) at ./loading.jl:748
 [7] _require(::Base.PkgId) at ./loading.jl:1039
 [8] require(::Base.PkgId) at ./loading.jl:927
 [9] require(::Module, ::Symbol) at ./loading.jl:922
 [10] include(::Function, ::Module, ::String) at ./Base.jl:380
 [11] include at ./Base.jl:368 [inlined]
 [12] include(::String) at /home/pkgeval/.julia/packages/ElectromagneticFields/MmuPa/src/ElectromagneticFields.jl:1
 [13] top-level scope at /home/pkgeval/.julia/packages/ElectromagneticFields/MmuPa/src/ElectromagneticFields.jl:41
 [14] include(::Function, ::Module, ::String) at ./Base.jl:380
 [15] include(::Module, ::String) at ./Base.jl:368
 [16] top-level scope at none:2
 [17] eval at ./boot.jl:331 [inlined]
 [18] eval(::Expr) at ./client.jl:451
 [19] top-level scope at ./none:3
during initialization of module SymPy
in expression starting at /home/pkgeval/.julia/packages/ElectromagneticFields/MmuPa/src/analytic/solovev.jl:3
in expression starting at /home/pkgeval/.julia/packages/ElectromagneticFields/MmuPa/src/ElectromagneticFields.jl:41
ERROR: LoadError: Failed to precompile ElectromagneticFields [d6c1ba6f-ee03-53af-b876-68cefeb88ec8] to /home/pkgeval/.julia/compiled/v1.5/ElectromagneticFields/yIIiH_cdRtt.ji.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1288
 [3] _require(::Base.PkgId) at ./loading.jl:1029
 [4] require(::Base.PkgId) at ./loading.jl:927
 [5] require(::Module, ::Symbol) at ./loading.jl:922
 [6] include(::String) at ./client.jl:441
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/ElectromagneticFields/MmuPa/test/runtests.jl:2
ERROR: Package ElectromagneticFields errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1523
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
