Julia Version 1.5.0-DEV.485
Commit 7206b56e94 (2020-03-18 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_eUOn81/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_eUOn81/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0321860921924014 -0.1457013031667129; 0.0321860921924014 0.0 -0.09354896402449447; 0.1457013031667129 0.09354896402449447 0.0])
dAA = so3([0.0 0.16589662076193845 0.09249205345878089; -0.16589662076193845 0.0 0.06387965147660819; -0.09249205345878089 -0.06387965147660819 0.0])
dAA = so3([0.0 -0.03700892681388724 0.06653480102797091; 0.03700892681388724 0.0 0.1750672783836266; -0.06653480102797091 -0.1750672783836266 0.0])
dAA = Quaternion(0.9960856609206893, [0.00843283696421431, 0.040601700324830875, -0.07806244487371265])
dAA = SO3([0.9971518172977352 0.03597000809122718 -0.06629035961390771; -0.03839842527244273 0.9986235117012661 -0.035730138735080595; 0.06491389833017878 0.038173818191903804 0.9971604411569037])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8895993484204067 0.37952853474757975 0.2541084229267952; -0.4156898793608175 0.9032911344926431 0.10614636378125622; -0.1892483117149974 -0.2000580357280081 0.9613333755017945]), [0.9354896402449446, -1.457013031667129, 0.321860921924014])
xj = SE3(SO3([0.9043691575370247 0.3800655286250074 0.19407890366231437; -0.3747539561037596 0.9248525254213474 -0.0648635383427185; -0.20414675917181158 -0.014071253417857919 0.9788391596921819]), [-1.750672783836266, 0.665348010279709, 0.3700892681388724])
Dx = SE3(SO3([0.9989420695945637 -0.04368282714403984 0.014371924256469965; 0.045563174706510244 0.9824718674323561 -0.18075681678609834; -0.006224042480076408 0.18122041914939668 0.9834228088561517]), [-3.2809794807989734, 0.8879861562674437, -0.41093207121323944])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
