Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_gvBnJ1/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_gvBnJ1/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.1181105426599999 -0.06216184187224077; -0.1181105426599999 0.0 -0.11669108896558614; 0.06216184187224077 0.11669108896558614 0.0])
dAA = so3([0.0 -0.13859529635934556 0.054597567169764605; 0.13859529635934556 0.0 -0.05378074575145721; -0.054597567169764605 0.05378074575145721 0.0])
dAA = so3([0.0 0.04770808724649789 0.16650352337203242; -0.04770808724649789 0.0 0.1737180832977648; -0.16650352337203242 -0.1737180832977648 0.0])
dAA = Quaternion(0.9997722443109546, [0.0101902206799478, 0.018741090132872475, -0.0006248588344228731])
dAA = SO3([0.9922403601400678 -0.12364254023867735 0.013099234803436752; 0.12390096735567369 0.9920680628336 -0.021201627152563657; -0.010373909457711689 0.02266011802518013 0.9996894022913556])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9315587881210832 -0.3284495489115337 0.15594588194046305; 0.34656292034952896 0.9318318359258746 -0.10762700308853665; -0.10996529685853126 0.15430594082803104 0.9818845706660184]), [1.1669108896558613, -0.6216184187224076, -1.181105426599999])
xj = SE3(SO3([0.9956084159613491 0.00455042936972455 0.093504949919694; 0.00021820221709082635 0.9987024405902158 -0.05092531342013391; -0.09361535373391373 0.05072207361393619 0.9943155619789809]), [-1.737180832977648, 1.665035233720324, -0.4770808724649788])
Dx = SE3(SO3([0.9378378303775537 0.34477455895800146 -0.0398836734521599; -0.3412492125763375 0.93695485957474 0.07526331134961602; 0.06331807663497589 -0.05697450846295289 0.9963657594260515]), [-1.9902810672016238, 3.1932594585708527, -0.007715977560749487])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
