Julia Version 1.5.0-DEV.485
Commit 7206b56e94 (2020-03-18 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Parameters ─────────────────── v0.12.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed LazyArrays ─────────────────── v0.15.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed StatsBase ──────────────────── v0.32.2
  Installed CompilerSupportLibraries_jll ─ v0.3.0+0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed DataAPI ────────────────────── v1.1.0
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed DataStructures ─────────────── v0.17.10
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SpecialFunctions ───────────── v0.10.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed MacroTools ─────────────────── v0.5.4
  Installed Requires ───────────────────── v1.0.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed FillArrays ─────────────────── v0.8.5
#=#=#                                                                         ###################                                                       27.5%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.7%###                                                                        4.4%#######                                                                   10.0%############                                                              17.0%##################                                                        26.3%###########################                                               38.2%####################################                                      51.0%##################################################                        70.6%#####################################################################     97.1%######################################################################## 100.0%
#=#=#                                                                         #########################                                                 35.1%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
   0bf59076 + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   0bf59076 + AdvancedHMC v0.2.21
   dce04be8 + ArgCheck v2.0.0
   4c555306 + ArrayLayouts v0.1.5
   e66e0078 + CompilerSupportLibraries_jll v0.3.0+0
   9a962f9c + DataAPI v1.1.0
   864edb3b + DataStructures v0.17.10
   1a297f60 + FillArrays v0.8.5
   505f98c9 + InplaceOps v0.3.0
   5078a376 + LazyArrays v0.15.0
   1914dd2f + MacroTools v0.5.4
   e1d29d7a + Missings v0.4.3
   efe28fd5 + OpenSpecFun_jll v0.5.3+3
   bac558e1 + OrderedCollections v1.1.0
   d96e819e + Parameters v0.12.0
   92933f4c + ProgressMeter v1.2.0
   ae029012 + Requires v1.0.1
   79098fc4 + Rmath v0.6.1
   f50d1b31 + Rmath_jll v0.2.2+0
   a2af1166 + SortingAlgorithms v0.3.1
   276daf66 + SpecialFunctions v0.10.0
   90137ffa + StaticArrays v0.12.1
   2913bbd2 + StatsBase v0.32.2
   4c63d2b9 + StatsFuns v0.9.4
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   10745b16 + Statistics
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing AdvancedHMC
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      ######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       6.2%########                                                                  11.7%#############                                                             18.9%################                                                          22.2%######################                                                    31.4%############################                                              39.6%######################################                                    54.0%################################################                          67.4%###############################################################           88.5%######################################################################## 100.0%
#=#=#                                                                         ############                                                              17.5%#################################################                         69.1%######################################################################## 100.0%
#=#=#                                                                         ######                                                                     9.2%######################################################################## 100.0%
     Status `/tmp/jl_kIInR8/Project.toml`
   0bf59076 AdvancedHMC v0.2.21
   dce04be8 ArgCheck v2.0.0
   76274a88 Bijectors v0.5.2
   31c24e10 Distributions v0.22.6
   f6369f11 ForwardDiff v0.10.9
   505f98c9 InplaceOps v0.3.0
   5078a376 LazyArrays v0.15.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   d96e819e Parameters v0.12.0
   92933f4c ProgressMeter v1.2.0
   ae029012 Requires v1.0.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   fce5fe82 Turing v0.9.0
   b8865327 UnicodePlots v1.2.0
   e88e6eb3 Zygote v0.4.10
   8ba89e20 Distributed
   37e2e46d LinearAlgebra
   9a3f8284 Random
   10745b16 Statistics
   8dfed614 Test
     Status `/tmp/jl_kIInR8/Manifest.toml`
   621f4979 AbstractFFTs v0.5.0
   80f14c24 AbstractMCMC v0.4.0
   1520ce14 AbstractTrees v0.3.2
   79e6a3ab Adapt v1.0.1
   0bf59076 AdvancedHMC v0.2.21
   5b7e9947 AdvancedMH v0.4.1
   dce04be8 ArgCheck v2.0.0
   ec485272 ArnoldiMethod v0.0.4
   7d9fca2a Arpack v0.4.0
   68821587 Arpack_jll v3.5.0+2
   4fba245c ArrayInterface v2.5.1
   4c555306 ArrayLayouts v0.1.5
   39de3d68 AxisArrays v0.4.2
   6e4b80f9 BenchmarkTools v0.5.0
   76274a88 Bijectors v0.5.2
   b99e7846 BinaryProvider v0.5.8
   d360d2e6 ChainRulesCore v0.7.1
   861a8166 Combinatorics v0.7.0
   bbf7d656 CommonSubexpressions v0.2.0
   34da2185 Compat v3.8.0
   e66e0078 CompilerSupportLibraries_jll v0.3.0+0
   88cd18e8 ConsoleProgressMonitor v0.1.2
   a8cc5b0e Crayons v4.0.1
   9a962f9c DataAPI v1.1.0
   864edb3b DataStructures v0.17.10
   2b5f629d DiffEqBase v6.24.0
   163ba53b DiffResults v1.0.2
   b552c78f DiffRules v1.0.1
   b4f34e82 Distances v0.8.2
   31c24e10 Distributions v0.22.6
   ced4e74d DistributionsAD v0.4.6
   ffbed154 DocStringExtensions v0.8.1
   366bfd00 DynamicPPL v0.4.2
   da5c29d0 EllipsisNotation v0.4.0
   d4d017d3 ExponentialUtilities v1.6.0
   7a1cc6ca FFTW v1.2.0
   f5851436 FFTW_jll v3.3.9+4
   1a297f60 FillArrays v0.8.5
   6a86dc24 FiniteDiff v2.2.1
   59287772 Formatting v0.4.1
   f6369f11 ForwardDiff v0.10.9
   069b7b12 FunctionWrappers v1.1.1
   01680d73 GenericSVD v0.2.2
   7869d1d1 IRTools v0.3.1
   d25df0c9 Inflate v0.1.1
   505f98c9 InplaceOps v0.3.0
   1d5cc7b8 IntelOpenMP_jll v2018.0.3+0
   8197267c IntervalSets v0.4.0
   c8e1da08 IterTools v1.3.0
   42fd0dbc IterativeSolvers v0.8.1
   82899510 IteratorInterfaceExtensions v1.0.0
   682c06a0 JSON v0.21.0
   5078a376 LazyArrays v0.15.0
   1d6d02ad LeftChildRightSiblingTrees v0.1.2
   6f1fad26 Libtask v0.3.3
   093fc24a LightGraphs v1.3.1
   d3d80556 LineSearches v7.0.1
   6fdf6af0 LogDensityProblems v0.10.3
   e6f89c97 LoggingExtras v0.4.0
   c7f686f2 MCMCChains v3.0.4
   856f044c MKL_jll v2019.0.117+2
   1914dd2f MacroTools v0.5.4
   dbb5928d MappedArrays v0.2.2
   e1d29d7a Missings v0.4.3
   46d2c3a1 MuladdMacro v0.2.2
   d41bc354 NLSolversBase v7.6.1
   2774e3e8 NLsolve v4.3.0
   872c559c NNlib v0.6.6
   77ba4419 NaNMath v0.3.3
   4536629a OpenBLAS_jll v0.3.7+7
   efe28fd5 OpenSpecFun_jll v0.5.3+3
   bac558e1 OrderedCollections v1.1.0
   1dea7af3 OrdinaryDiffEq v5.31.0
   90014a1f PDMats v0.9.12
   d96e819e Parameters v0.12.0
   69de0a69 Parsers v0.3.12
   f27b6e38 Polynomials v0.6.1
   33c8b6b6 ProgressLogging v0.1.2
   92933f4c ProgressMeter v1.2.0
   1fd47b50 QuadGK v2.3.1
   b3c3ace0 RangeArrays v0.3.2
   3cdcf5f2 RecipesBase v0.8.0
   731186ca RecursiveArrayTools v2.1.0
   f2c3362d RecursiveFactorization v0.1.0
   189a3867 Reexport v0.2.0
   ae029012 Requires v1.0.1
   37e2e3b7 ReverseDiff v1.1.0
   79098fc4 Rmath v0.6.1
   f50d1b31 Rmath_jll v0.2.2+0
   f2b01f46 Roots v0.8.4
   699a6c99 SimpleTraits v0.9.1
   a2af1166 SortingAlgorithms v0.3.1
   47a9eef4 SparseDiffTools v1.4.0
   276daf66 SpecialFunctions v0.10.0
   90137ffa StaticArrays v0.12.1
   2913bbd2 StatsBase v0.32.2
   4c63d2b9 StatsFuns v0.9.4
   3783bdb8 TableTraits v1.0.0
   5d786b92 TerminalLoggers v0.1.1
   9f7883ad Tracker v0.2.6
   84d833dd TransformVariables v0.3.8
   a2a6695c TreeViews v0.3.0
   fce5fe82 Turing v0.9.0
   3a884ed6 UnPack v0.1.0
   b8865327 UnicodePlots v1.2.0
   19fa3120 VertexSafeGraphs v0.1.1
   e88e6eb3 Zygote v0.4.10
   700de1a5 ZygoteRules v0.2.0
   2a0f44e3 Base64
   ade2ca70 Dates
   8bb1440f DelimitedFiles
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   a63ad114 Mmap
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   1a1011a3 SharedArrays
   6462fe0b Sockets
   2f01184e SparseArrays
   10745b16 Statistics
   4607b0f0 SuiteSparse
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.147524354
│   t_steps = 0.013045022
└   t_step / t_steps = 11.30886203181566
Sampling  0%|                               |  ETA: 7:01:01[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.014344171071968368
  log_density:                   -10.582301682559903
  hamiltonian_energy:            13.892728768674079
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.244411616372261
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██                             |  ETA: 0:00:46[K
  iterations:                    793
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8517022738219326
  log_density:                   -12.747523540565783
  hamiltonian_energy:            20.486052315933655
  hamiltonian_energy_error:      -0.14813315676590122
  max_hamiltonian_energy_error:  0.4020703845015312
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6701097134831876
  nom_step_size:                 0.6701097134831876
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9692522824824905, 0.8090 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:32[K
  iterations:                    1148
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.687323542625062
  hamiltonian_energy:            20.98779396372741
  hamiltonian_energy_error:      -0.050115442314815795
  max_hamiltonian_energy_error:  -0.12174622964367288
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7080275638918586
  nom_step_size:                 0.7080275638918586
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0522287892890778, 1.2288 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:26[K
  iterations:                    1446
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.9058758798159584
  log_density:                   -12.561751638145461
  hamiltonian_energy:            15.564668737919291
  hamiltonian_energy_error:      0.0551525881124153
  max_hamiltonian_energy_error:  0.37962444988972877
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8402864816851525
  nom_step_size:                 0.8402864816851525
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0522287892890778, 1.2288 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:21[K
  iterations:                    1772
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.733052186548837
  log_density:                   -14.653718618428094
  hamiltonian_energy:            16.55127415593234
  hamiltonian_energy_error:      0.5590132839475821
  max_hamiltonian_energy_error:  0.6233101682115567
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8173707490566142
  nom_step_size:                 0.8173707490566142
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0522287892890778, 1.2288 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:18[K
  iterations:                    2079
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.12317536763233
  hamiltonian_energy:            17.040290760635443
  hamiltonian_energy_error:      -0.29647473845542294
  max_hamiltonian_energy_error:  -0.31611062217550057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▋                        |  ETA: 0:00:14[K
  iterations:                    2552
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8194496931228675
  log_density:                   -13.166951267996826
  hamiltonian_energy:            14.722069747532286
  hamiltonian_energy_error:      0.3390693578654176
  max_hamiltonian_energy_error:  0.4092964805450432
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▉                       |  ETA: 0:00:12[K
  iterations:                    3046
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9469810695803312
  log_density:                   -15.210629567078868
  hamiltonian_energy:            18.273905035380306
  hamiltonian_energy_error:      0.1363530890399396
  max_hamiltonian_energy_error:  0.1363530890399396
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▏                     |  ETA: 0:00:10[K
  iterations:                    3555
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7563390904997414
  log_density:                   -12.366969100800723
  hamiltonian_energy:            19.029928977144493
  hamiltonian_energy_error:      0.05542998017002532
  max_hamiltonian_energy_error:  0.5717232407393986
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:08[K
  iterations:                    4071
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9335040043979215
  log_density:                   -11.894179353886702
  hamiltonian_energy:            16.36420464595985
  hamiltonian_energy_error:      -0.07503730346226689
  max_hamiltonian_energy_error:  0.15217906132376058
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:07[K
  iterations:                    4587
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9892264894797043
  log_density:                   -12.744990925316749
  hamiltonian_energy:            15.997953040108115
  hamiltonian_energy_error:      -0.08160741838104713
  max_hamiltonian_energy_error:  -0.2379075585137116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▏                 |  ETA: 0:00:06[K
  iterations:                    5103
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8680083233826524
  log_density:                   -12.09289585821752
  hamiltonian_energy:            16.26268373129335
  hamiltonian_energy_error:      0.02008588403889533
  max_hamiltonian_energy_error:  0.25189363607923454
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5619
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7716673542306063
  log_density:                   -14.669093093130751
  hamiltonian_energy:            23.145242056985175
  hamiltonian_energy_error:      0.03187703675928688
  max_hamiltonian_energy_error:  0.5397638803307245
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6103
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9786664071700741
  log_density:                   -12.149114342430119
  hamiltonian_energy:            13.640402099870322
  hamiltonian_energy_error:      0.04956351149661131
  max_hamiltonian_energy_error:  -0.10131343270759352
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6549
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9030140922939377
  log_density:                   -13.231242458616306
  hamiltonian_energy:            17.525580870691325
  hamiltonian_energy_error:      0.016008243867023708
  max_hamiltonian_energy_error:  0.1947298304002416
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▏            |  ETA: 0:00:03[K
  iterations:                    7033
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980674377306274
  log_density:                   -14.16808405437996
  hamiltonian_energy:            18.533730385855577
  hamiltonian_energy_error:      -0.027348627194385244
  max_hamiltonian_energy_error:  -0.06733665594237692
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7523
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8149210679683788
  log_density:                   -16.997622825536972
  hamiltonian_energy:            20.13065540007031
  hamiltonian_energy_error:      0.40422263965319516
  max_hamiltonian_energy_error:  0.40422263965319516
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:02[K
  iterations:                    8010
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9815683680624276
  log_density:                   -15.755726942474357
  hamiltonian_energy:            20.82646165760288
  hamiltonian_energy_error:      0.035352013920075365
  max_hamiltonian_energy_error:  0.057532001331512816
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8508
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7542900635950323
  log_density:                   -11.079498260817534
  hamiltonian_energy:            16.341805637222837
  hamiltonian_energy_error:      -0.024757951509247533
  max_hamiltonian_energy_error:  0.5294838890419697
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    8988
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.593659248287846
  log_density:                   -18.780667749233423
  hamiltonian_energy:            21.11251543687121
  hamiltonian_energy_error:      0.7187737065410644
  max_hamiltonian_energy_error:  0.7187737065410644
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9465
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.02455849862549
  hamiltonian_energy:            20.722715170910565
  hamiltonian_energy_error:      -0.05142186952290473
  max_hamiltonian_energy_error:  -0.24367061202168117
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9948
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9690380207514906
  log_density:                   -14.065215887492744
  hamiltonian_energy:            18.207072848932167
  hamiltonian_energy_error:      0.027135531956663073
  max_hamiltonian_energy_error:  0.06521121495219262
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10436
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9952247466189458
  log_density:                   -15.341108582609213
  hamiltonian_energy:            19.657954611691796
  hamiltonian_energy_error:      -0.08199364082733851
  max_hamiltonian_energy_error:  -0.31754827533135455
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10920
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7234948421061478
  log_density:                   -12.367496493000665
  hamiltonian_energy:            18.026350391418877
  hamiltonian_energy_error:      0.1309586477337632
  max_hamiltonian_energy_error:  0.6484076774822718
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11413
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9557840838317946
  log_density:                   -15.104682994348416
  hamiltonian_energy:            18.22475115366686
  hamiltonian_energy_error:      0.09132835774294534
  max_hamiltonian_energy_error:  -0.2078288346391659
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 99%|██████████████████████████████▊|  ETA: 0:00:00[K
  iterations:                    11909
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9351663307026021
  log_density:                   -10.48708457182082
  hamiltonian_energy:            12.782118784153338
  hamiltonian_energy_error:      -0.006406186939559078
  max_hamiltonian_energy_error:  0.1416702762256623
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9472239709263232
  log_density:                   -15.279538696733326
  hamiltonian_energy:            22.172058634125808
  hamiltonian_energy_error:      -0.17747919437081805
  max_hamiltonian_energy_error:  -0.31775710239628197
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6720261475806153
  nom_step_size:                 0.6720261475806153
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9907986006453712, 1.0106 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.851838002 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9907986006453712, 1.0106 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.672), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0802787079304794
└   average_acceptance_rate = 0.8775285667591952
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.222799289 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠑⠢⡄⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⢣⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⡀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⡎⠀⠀⠀⠀⠈⡆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⡰⠃⢸⡇⠀⠀⠀⠀⠀⢠⠃⠱⡀⡸⠀⠀⠀⠀⠀⠀⢱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢇⠀⠀⠀⡰⠁⠀⡜⢸⠀⠀⢀⣀⣀⠇⠀⠀⠱⠇⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠸⡀⠀⡰⠁⠀⠀⡇⠈⡆⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢇⢠⠃⠀⠀⢸⠀⠀⢱⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠸⠇⠀⡀⠀⡜⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⡸⠑⢄⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⢠⠃⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢀⠔⢆⠀⠀⠀⡰⠁⠀⢀⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠃⠀⠈⢢⣀⣰⢇⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            1 │⠀⠀⡀⠀⠀⣠⠎⠀⠀⠉⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
