Julia Version 1.5.0-DEV.485
Commit 7206b56e94 (2020-03-18 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_mQ5tRw/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_mQ5tRw/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723054812318063
curgen: 20 fitness: 0.21723250495250934
curgen: 30 fitness: 0.21723250495250934
curgen: 40 fitness: 0.21723250495250934
curgen: 50 fitness: 0.21723346019184647
CoordinateCreature{Array{Float64,1}}([-0.22248657002712105], -0.21723346019184647) -0.22248657002712105 -0.21723346019184647
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257944267601767
curgen: 100 fitness: 3.2581997960746025
curgen: 150 fitness: 3.2582288486417252
curgen: 200 fitness: 3.2582599503460097
curgen: 250 fitness: 3.25833258650767
curgen: 300 fitness: 3.258396119500121
curgen: 350 fitness: 3.2584309274690533
curgen: 400 fitness: 3.25843317742951
curgen: 450 fitness: 3.2584360801415704
curgen: 500 fitness: 3.2584360801415704
CoordinateCreature{Array{Float64,1}}([-0.22214733624654784, -0.22256245563874794, 0.222281317082935, -0.2223862773298683, 0.22271683055648242, 0.22240262929891033, 0.22252041677316606, -0.22236000275247936, -0.22254045349572546, -0.22253880557450545, -0.22236551371109026, 0.22277291748876346, 0.2229623755797497, 0.2216013659292766, -0.22234290202274123], -3.2584360801415704) [-0.22214733624654784, -0.22256245563874794, 0.222281317082935, -0.2223862773298683, 0.22271683055648242, 0.22240262929891033, 0.22252041677316606, -0.22236000275247936, -0.22254045349572546, -0.22253880557450545, -0.22236551371109026, 0.22277291748876346, 0.2229623755797497, 0.2216013659292766, -0.22234290202274123] -3.2584360801415704
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003009267770835322
curgen: 100 fitness: -0.001998043032017449
curgen: 150 fitness: -0.001998043032017449
curgen: 200 fitness: -0.001995130379100374
curgen: 250 fitness: -0.001995130379100374
curgen: 300 fitness: -0.001995130379100374
curgen: 350 fitness: -0.0018289565333589053
curgen: 400 fitness: -0.0010313261372516536
curgen: 450 fitness: -0.0009097346638782255
curgen: 500 fitness: -0.0006598688629537719
CoordinateCreature{Array{Float64,1}}([-0.0010721831802837575, 0.00018132496872245443, -0.0003380429124176699, -0.0007987333780264075, 0.00024507341323514505, 9.677472764451363e-5, -0.00025615610447163296, 5.2530134144804436e-5, -0.0002693357820236582, 0.00028891359951902483, 5.920270053161531e-5, -2.750209470203679e-5, -0.0006203193821464885, -0.0008399741962918338, 5.4408510778010746e-5], 0.0006598688629537719) [-0.0010721831802837575, 0.00018132496872245443, -0.0003380429124176699, -0.0007987333780264075, 0.00024507341323514505, 9.677472764451363e-5, -0.00025615610447163296, 5.2530134144804436e-5, -0.0002693357820236582, 0.00028891359951902483, 5.920270053161531e-5, -2.750209470203679e-5, -0.0006203193821464885, -0.0008399741962918338, 5.4408510778010746e-5] 0.0006598688629537719
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
