Julia Version 1.5.0-DEV.483
Commit 7f28d91b70 (2020-03-18 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.3
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_ZK8UI2/Project.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_ZK8UI2/Manifest.toml`
   5789e2e9 FileIO v1.2.3
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723328168627615
curgen: 20 fitness: 0.21723328168627615
curgen: 30 fitness: 0.21723328168627615
curgen: 40 fitness: 0.21723328168627615
curgen: 50 fitness: 0.21723328168627615
CoordinateCreature{Array{Float64,1}}([-0.22245971784089136], -0.21723328168627615) -0.22245971784089136 -0.21723328168627615
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257889793235263
curgen: 100 fitness: 3.2580792640973826
curgen: 150 fitness: 3.2582925660691666
curgen: 200 fitness: 3.2584161329359023
curgen: 250 fitness: 3.258437110415348
curgen: 300 fitness: 3.258437110415348
curgen: 350 fitness: 3.2584424598917305
curgen: 400 fitness: 3.2584424598917305
curgen: 450 fitness: 3.258456259772707
curgen: 500 fitness: 3.258456259772707
CoordinateCreature{Array{Float64,1}}([-0.22256458483402394, -0.22251004603884592, -0.2229762332020293, -0.22301561939614437, -0.22252818756661977, 0.22224923565076438, -0.22281694166138244, 0.22264462868420157, 0.22274194181701806, -0.22196505650359533, -0.2226865820841201, 0.2228187425099129, 0.22234206158895511, -0.22255775635217667, -0.2225281794367652], -3.258456259772707) [-0.22256458483402394, -0.22251004603884592, -0.2229762332020293, -0.22301561939614437, -0.22252818756661977, 0.22224923565076438, -0.22281694166138244, 0.22264462868420157, 0.22274194181701806, -0.22196505650359533, -0.2226865820841201, 0.2228187425099129, 0.22234206158895511, -0.22255775635217667, -0.2225281794367652] -3.258456259772707
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001958017695557146
curgen: 100 fitness: -0.0017158986980234658
curgen: 150 fitness: -0.00160757303160608
curgen: 200 fitness: -0.0011786509179785298
curgen: 250 fitness: -0.0011527756119278365
curgen: 300 fitness: -0.0005716647957854093
curgen: 350 fitness: -0.0005716647957854093
curgen: 400 fitness: -0.0004998478300990428
curgen: 450 fitness: -0.0004765836018805203
curgen: 500 fitness: -0.0004408276016079071
CoordinateCreature{Array{Float64,1}}([0.000102907582920615, -2.1159831566189716e-5, 0.0004922798734352193, 0.0006026143220745882, -0.00010494125752708373, -0.00019993650739706138, 0.0005142789716901259, -0.00024461465799493576, -0.00023620056552197473, -0.00046820932371130324, 7.913615712943945e-5, -7.33319156876436e-5, -0.0006032528947075176, -0.0007429511486713222, -0.00016623923525518718], 0.0004408276016079071) [0.000102907582920615, -2.1159831566189716e-5, 0.0004922798734352193, 0.0006026143220745882, -0.00010494125752708373, -0.00019993650739706138, 0.0005142789716901259, -0.00024461465799493576, -0.00023620056552197473, -0.00046820932371130324, 7.913615712943945e-5, -7.33319156876436e-5, -0.0006032528947075176, -0.0007429511486713222, -0.00016623923525518718] 0.0004408276016079071
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
