Julia Version 1.6.0-DEV.729
Commit 4978cd5a4f (2020-08-26 13:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed XML2_jll ───── v2.9.10+1
  Installed Mocking ────── v0.7.1
  Installed Zlib_jll ───── v1.2.11+15
  Installed CurveFit ───── v0.3.2
  Installed ExprTools ──── v0.1.1
  Installed RecipesBase ── v1.0.2
  Installed Intervals ──── v1.4.2
  Installed TimeZones ──── v1.3.2
  Installed Libiconv_jll ─ v1.16.0+5
  Installed Polynomials ── v0.8.0
  Installed EzXML ──────── v1.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [5a033b19] + CurveFit v0.3.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5a033b19] + CurveFit v0.3.2
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.4.2
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [78c3b35d] + Mocking v0.7.1
  [f27b6e38] + Polynomials v0.8.0
  [3cdcf5f2] + RecipesBase v1.0.2
  [f269a46b] + TimeZones v1.3.2
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
    Testing CurveFit
Status `/tmp/jl_7nVv4k/Project.toml`
  [5a033b19] CurveFit v0.3.2
  [f27b6e38] Polynomials v0.8.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_7nVv4k/Manifest.toml`
  [5a033b19] CurveFit v0.3.2
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [d8418881] Intervals v1.4.2
  [94ce4f54] Libiconv_jll v1.16.0+5
  [78c3b35d] Mocking v0.7.1
  [f27b6e38] Polynomials v0.8.0
  [3cdcf5f2] RecipesBase v1.0.2
  [f269a46b] TimeZones v1.3.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly(a::Vector{Float64}) at Poly.jl:26
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Poly at Poly.jl:26 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:26
    Testing CurveFit tests passed 
