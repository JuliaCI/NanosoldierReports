Julia Version 1.6.0-DEV.729
Commit 4978cd5a4f (2020-08-26 13:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_BqU42x/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_BqU42x/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.707550 seconds (1.35 M allocations: 71.154 MiB, 2.23% gc time)
Running: chebyshev_quadrature with k=1
  1.532346 seconds (2.24 M allocations: 128.429 MiB, 2.71% gc time)
Running: chebyshev_quadrature with k=2
  0.202855 seconds (424.54 k allocations: 24.359 MiB, 6.61% gc time)
Running: chebyshev_quadrature with k=3
  0.242318 seconds (544.36 k allocations: 29.865 MiB, 4.53% gc time)
Running: chebyshev_quadrature with k=4
  0.235038 seconds (487.28 k allocations: 26.379 MiB)
Running: jacobi_quadrature with α=β=1
 33.509959 seconds (39.34 M allocations: 3.136 GiB, 8.97% gc time)
Running: laguerre_quadrature with k=1
  2.669314 seconds (3.33 M allocations: 185.566 MiB, 1.79% gc time)
Running: legendre_quadrature
  0.233463 seconds (214.64 k allocations: 12.289 MiB)
Running: lobatto_quadrature
  0.330490 seconds (342.98 k allocations: 20.566 MiB)
Running: radau_quadrature
  0.261127 seconds (325.40 k allocations: 19.560 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 62.080816 seconds (100.02 M allocations: 1.491 GiB, 1.01% gc time)
Running: rectangle_rule_midpoint.
  0.148409 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 63.472424 seconds (100.02 M allocations: 1.491 GiB, 0.81% gc time)
Running: rombergs_method
  0.448728 seconds (751.48 k allocations: 43.251 MiB, 6.00% gc time)
Running: simpsons_rule
  0.032287 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.080042 seconds (112.93 k allocations: 5.964 MiB)
Running: trapezoidal_rule
  0.216492 seconds (1.52 M allocations: 25.788 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.082459 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.387983 seconds (256.55 k allocations: 12.928 MiB, 6.08% gc time)
Running: chebyshev_quadrature with k=2
  0.159208 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.141451 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.112433 seconds (65.31 k allocations: 2.150 MiB)
Running: jacobi_quadrature with α=β=1
  1.783317 seconds (513.56 k allocations: 162.403 MiB, 6.77% gc time)
Running: legendre_quadrature
  0.114057 seconds (43.16 k allocations: 2.478 MiB)
Running: lobatto_quadrature
  0.013853 seconds (16.73 k allocations: 1.033 MiB)
Running: radau_quadrature
  0.025346 seconds (16.71 k allocations: 1.032 MiB)
Running: rectangle_rule_left
 24.032267 seconds (471.41 M allocations: 7.025 GiB, 3.36% gc time)
Running: rectangle_rule_midpoint
  0.000042 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 23.339816 seconds (476.96 M allocations: 7.107 GiB, 3.37% gc time)
Running: rombergs_method
  0.280341 seconds (338.90 k allocations: 19.214 MiB, 2.15% gc time)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.043944 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.038025 seconds (18.33 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.021370 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.093852 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.070397 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.070718 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.068286 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.239898 seconds (378.55 k allocations: 19.805 MiB, 7.82% gc time)
Running: legendre_quadrature
  0.049437 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000125 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000718 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000513 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000708 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079692 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000025 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.036399 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.016418 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.054849 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.136148 seconds (239.83 k allocations: 13.485 MiB)
Running: chebyshev_quadrature with k=2
  0.170600 seconds (295.00 k allocations: 16.524 MiB)
Running: chebyshev_quadrature with k=3
  0.155134 seconds (274.98 k allocations: 14.958 MiB)
Running: chebyshev_quadrature with k=4
  0.152401 seconds (275.02 k allocations: 14.874 MiB, 11.73% gc time)
Running: jacobi_quadrature with α=β=1
  1.594865 seconds (465.17 k allocations: 164.175 MiB, 13.79% gc time)
Running: legendre_quadrature
  0.227926 seconds (192.58 k allocations: 11.082 MiB, 50.86% gc time)
Running: lobatto_quadrature
  0.135226 seconds (203.77 k allocations: 11.787 MiB)
Running: radau_quadrature
  0.162752 seconds (203.77 k allocations: 11.806 MiB)
Running: rectangle_rule_left
  0.774058 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.017278 seconds (25.91 k allocations: 1.614 MiB)
Running: rectangle_rule_right
  0.697009 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.107125 seconds (139.53 k allocations: 8.040 MiB)
Running: simpsons_rule
  0.022288 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.025908 seconds (44.60 k allocations: 2.786 MiB)
Running: trapezoidal_rule
  0.020117 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.029547 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.144285 seconds (246.92 k allocations: 13.562 MiB, 9.32% gc time)
Running: chebyshev_quadrature with k=2
  0.138226 seconds (302.62 k allocations: 16.552 MiB)
Running: chebyshev_quadrature with k=3
  0.179367 seconds (282.39 k allocations: 14.975 MiB)
Running: chebyshev_quadrature with k=4
  0.204417 seconds (282.43 k allocations: 14.977 MiB, 8.57% gc time)
Running: hermite_quadrature with k=2
 10.778410 seconds (22.07 M allocations: 1.145 GiB, 9.03% gc time)
Running: jacobi_quadrature with α=β=1
  0.352217 seconds (475.17 k allocations: 50.418 MiB, 8.13% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.202009 seconds (287.89 k allocations: 15.874 MiB, 14.76% gc time)
Running: legendre_quadrature
  0.136424 seconds (199.64 k allocations: 11.432 MiB)
Running: lobatto_quadrature
  0.174902 seconds (225.17 k allocations: 37.596 MiB, 10.48% gc time)
Running: radau_quadrature
  0.176114 seconds (221.77 k allocations: 30.262 MiB)
Running: rectangle_rule_left
  0.019214 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.018429 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.016755 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.140072 seconds (142.35 k allocations: 8.102 MiB, 26.34% gc time)
Running: simpsons_rule
  0.030913 seconds (41.23 k allocations: 2.156 MiB)
Running: simpsons38_rule
  0.030356 seconds (59.97 k allocations: 3.194 MiB)
Running: trapezoidal_rule
  0.022314 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028486 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.182958 seconds (242.05 k allocations: 13.329 MiB)
Running: chebyshev_quadrature with k=2
  0.202259 seconds (297.34 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.330035 seconds (277.25 k allocations: 14.747 MiB, 44.30% gc time)
Running: chebyshev_quadrature with k=4
  0.157587 seconds (277.29 k allocations: 14.825 MiB)
Running: hermite_quadrature with k=2
  0.133926 seconds (177.31 k allocations: 10.201 MiB)
Running: jacobi_quadrature with α=β=1
  9.301339 seconds (467.77 k allocations: 1.176 GiB, 17.39% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.135725 seconds (282.75 k allocations: 15.672 MiB)
Running: legendre_quadrature
  0.108814 seconds (194.81 k allocations: 11.207 MiB)
Running: lobatto_quadrature
  0.157981 seconds (215.54 k allocations: 23.307 MiB, 7.15% gc time)
Running: radau_quadrature
  0.132313 seconds (214.69 k allocations: 21.243 MiB)
Running: rectangle_rule_left
  0.017051 seconds (20.45 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.017112 seconds (26.63 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.016342 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.075925 seconds (137.82 k allocations: 7.902 MiB)
Running: simpsons_rule
  0.023148 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.037091 seconds (50.51 k allocations: 2.938 MiB, 32.01% gc time)
Running: trapezoidal_rule
  0.019007 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026075 seconds (32.45 k allocations: 1.955 MiB)
Running: chebyshev_quadrature with k=1
  0.136702 seconds (240.38 k allocations: 13.544 MiB)
Running: chebyshev_quadrature with k=2
  0.186937 seconds (295.58 k allocations: 16.630 MiB)
Running: chebyshev_quadrature with k=3
  0.159318 seconds (275.58 k allocations: 14.954 MiB, 8.42% gc time)
Running: chebyshev_quadrature with k=4
  0.152369 seconds (275.62 k allocations: 14.788 MiB)
Running: jacobi_quadrature with α=β=1
  2.151439 seconds (465.81 k allocations: 195.279 MiB, 14.02% gc time)
Running: legendre_quadrature
  0.132039 seconds (193.14 k allocations: 11.135 MiB, 11.72% gc time)
Running: lobatto_quadrature
  0.134736 seconds (204.34 k allocations: 11.815 MiB)
Running: radau_quadrature
  0.173533 seconds (204.34 k allocations: 11.822 MiB)
Running: rectangle_rule_left
  0.291831 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.023810 seconds (26.27 k allocations: 1.634 MiB)
Running: rectangle_rule_right
  0.086486 seconds (18.62 k allocations: 1.125 MiB)
Running: rombergs_method
  0.136988 seconds (150.88 k allocations: 8.789 MiB, 23.61% gc time)
Running: simpsons_rule
  0.022883 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.025608 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.019444 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028185 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.161850 seconds (240.95 k allocations: 13.495 MiB)
Running: chebyshev_quadrature with k=2
  0.160166 seconds (296.18 k allocations: 16.534 MiB)
Running: chebyshev_quadrature with k=3
  0.180868 seconds (276.12 k allocations: 14.985 MiB, 10.19% gc time)
Running: chebyshev_quadrature with k=4
  0.146614 seconds (276.15 k allocations: 14.966 MiB)
Running: jacobi_quadrature with α=β=1
  1.560702 seconds (466.48 k allocations: 149.898 MiB, 15.08% gc time)
Running: legendre_quadrature
  0.111653 seconds (193.71 k allocations: 11.127 MiB)
Running: lobatto_quadrature
  0.119646 seconds (204.91 k allocations: 11.833 MiB)
Running: radau_quadrature
  0.125168 seconds (204.91 k allocations: 11.899 MiB)
Running: rectangle_rule_left
  0.753856 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.021646 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.671652 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.146382 seconds (140.83 k allocations: 8.101 MiB, 22.33% gc time)
Running: simpsons_rule
  0.026224 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.028680 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.020941 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.125258 seconds (152.73 k allocations: 9.078 MiB)
Running: chebyshev_quadrature with k=1
  0.104037 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.103475 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.103487 seconds (93.21 k allocations: 2.682 MiB)
Running: chebyshev_quadrature with k=4
  0.098547 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  2.037088 seconds (487.28 k allocations: 168.200 MiB, 14.44% gc time)
Running: legendre_quadrature
  0.072100 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000214 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 30.625420 seconds (590.00 M allocations: 8.792 GiB, 2.83% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 28.419926 seconds (592.75 M allocations: 8.833 GiB, 2.59% gc time)
Running: rombergs_method
  0.104444 seconds (21.09 k allocations: 1.190 MiB)
Running: simpsons_rule
  0.000031 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.021642 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.017277 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.315450 seconds (629.34 M allocations: 9.388 GiB, 3.77% gc time)
Running: chebyshev_quadrature with k=1
  0.329655 seconds (438.62 k allocations: 24.246 MiB, 6.51% gc time)
Running: chebyshev_quadrature with k=2
  9.398922 seconds (495.96 k allocations: 4.042 GiB, 4.19% gc time)
Running: chebyshev_quadrature with k=3
  4.433942 seconds (290.07 k allocations: 1.643 GiB, 4.75% gc time)
Running: chebyshev_quadrature with k=4
  5.980959 seconds (290.10 k allocations: 2.262 GiB, 2.50% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 48.060930 seconds (504.63 k allocations: 13.255 GiB, 4.05% gc time)
Running: legendre_quadrature.
  4.063657 seconds (232.41 k allocations: 1.976 GiB, 2.05% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.752277 seconds (8.24 M allocations: 13.384 GiB, 5.45% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.132671 seconds (7.24 M allocations: 13.369 GiB, 3.79% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.663687 seconds (23.33 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.695467 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.834774 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.721169 seconds (455.75 k allocations: 153.652 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.338296 seconds (600.04 M allocations: 8.943 GiB, 9.61% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.768386 seconds (600.05 M allocations: 8.944 GiB, 9.06% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.324143 seconds (600.04 M allocations: 8.943 GiB, 9.59% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.043130 seconds (182.49 k allocations: 4.516 MiB)
Running: chebyshev_quadrature with k=1
  0.160306 seconds (257.54 k allocations: 13.995 MiB)
Running: chebyshev_quadrature with k=2
  0.147204 seconds (283.70 k allocations: 15.185 MiB)
Running: chebyshev_quadrature with k=3
  0.153952 seconds (260.23 k allocations: 13.437 MiB)
Running: chebyshev_quadrature with k=4
  0.164952 seconds (260.26 k allocations: 13.430 MiB)
Running: jacobi_quadrature with α=β=1
  0.270378 seconds (404.81 k allocations: 35.830 MiB)
Running: laguerre_quadrature with k=2
  0.142679 seconds (187.56 k allocations: 10.852 MiB)
Running: legendre_quadrature
  0.097091 seconds (151.36 k allocations: 8.368 MiB)
Running: lobatto_quadrature
  0.034770 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.031603 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.043693 seconds (19.80 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.029055 seconds (26.75 k allocations: 1.639 MiB)
Running: rectangle_rule_right
  0.047252 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.161899 seconds (179.14 k allocations: 10.222 MiB)
Running: simpsons_rule
  0.001356 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.044517 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.141547 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001395 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.069495 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.071858 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.078725 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.076203 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.180742 seconds (401.65 k allocations: 906.517 MiB, 5.93% gc time)
Running: legendre_quadrature
  0.046668 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000148 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000112 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.256407 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000255 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.377787 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.061651 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000476 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000531 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.068494 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.072441 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.072551 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.074252 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.452706 seconds (387.92 k allocations: 253.738 MiB)
Running: legendre_quadrature
  0.043784 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000107 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000032 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  7.701121 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000780 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  7.888029 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071789 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001451 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
