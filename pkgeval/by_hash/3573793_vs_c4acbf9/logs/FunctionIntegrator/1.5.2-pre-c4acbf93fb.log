Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_HTfFWo/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_HTfFWo/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.940780 seconds (1.27 M allocations: 59.255 MiB, 5.72% gc time)
Running: chebyshev_quadrature with k=1
  1.896094 seconds (2.15 M allocations: 111.787 MiB, 2.22% gc time)
Running: chebyshev_quadrature with k=2
  0.276315 seconds (356.11 k allocations: 20.584 MiB)
Running: chebyshev_quadrature with k=3
  0.345671 seconds (517.30 k allocations: 27.245 MiB, 4.78% gc time)
Running: chebyshev_quadrature with k=4
  0.324367 seconds (476.56 k allocations: 24.349 MiB)
Running: jacobi_quadrature with α=β=1
 47.753001 seconds (46.28 M allocations: 3.232 GiB, 7.83% gc time)
Running: laguerre_quadrature with k=1
  3.356450 seconds (3.55 M allocations: 177.132 MiB, 8.17% gc time)
Running: legendre_quadrature
  0.212811 seconds (193.52 k allocations: 9.775 MiB)
Running: lobatto_quadrature
  0.359459 seconds (315.77 k allocations: 16.787 MiB, 6.67% gc time)
Running: radau_quadrature
  0.266581 seconds (297.90 k allocations: 15.866 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 85.711538 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.153051 seconds (26.53 k allocations: 1.473 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 83.191644 seconds (19.38 k allocations: 1.042 MiB)
Running: rombergs_method
  1.015120 seconds (1.37 M allocations: 70.887 MiB, 9.23% gc time)
Running: simpsons_rule
  0.049204 seconds (44.95 k allocations: 1.890 MiB)
Running: simpsons38_rule
  0.099286 seconds (108.33 k allocations: 5.242 MiB)
Running: trapezoidal_rule
  0.315687 seconds (1.30 M allocations: 22.133 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081373 seconds (32.69 k allocations: 1.754 MiB)
Running: chebyshev_quadrature with k=1
  0.529933 seconds (268.41 k allocations: 12.439 MiB, 22.14% gc time)
Running: chebyshev_quadrature with k=2
  0.155938 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.155994 seconds (90.34 k allocations: 2.750 MiB)
Running: chebyshev_quadrature with k=4
  0.159298 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  1.869000 seconds (489.58 k allocations: 159.056 MiB, 1.69% gc time)
Running: legendre_quadrature
  0.158107 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.018207 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.019651 seconds (15.06 k allocations: 845.060 KiB)
Running: rectangle_rule_left
 30.565444 seconds (471.41 M allocations: 7.025 GiB, 3.13% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.967854 seconds (476.96 M allocations: 7.107 GiB, 3.14% gc time)
Running: rombergs_method
  0.431833 seconds (371.84 k allocations: 19.003 MiB, 1.64% gc time)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.067074 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.054892 seconds (18.27 k allocations: 1011.216 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000219 seconds (1.51 k allocations: 24.328 KiB)
Running: chebyshev_quadrature with k=1
  0.101101 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.114287 seconds (3.34 k allocations: 166.016 KiB)
Running: chebyshev_quadrature with k=3
  0.127028 seconds (4.38 k allocations: 194.406 KiB)
Running: chebyshev_quadrature with k=4
  0.128326 seconds (4.38 k allocations: 194.406 KiB)
Running: jacobi_quadrature with α=β=1
  0.211678 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.077625 seconds (1.36 k allocations: 72.609 KiB)
Running: lobatto_quadrature
  0.000129 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000076 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000591 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000382 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000525 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.097566 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000029 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000022 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000612 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066668 seconds (77.44 k allocations: 4.008 MiB)
Running: chebyshev_quadrature with k=1
  0.204229 seconds (217.40 k allocations: 10.842 MiB)
Running: chebyshev_quadrature with k=2
  0.267693 seconds (279.07 k allocations: 14.012 MiB, 10.01% gc time)
Running: chebyshev_quadrature with k=3
  0.221100 seconds (270.36 k allocations: 13.057 MiB)
Running: chebyshev_quadrature with k=4
  0.206877 seconds (270.37 k allocations: 12.972 MiB)
Running: jacobi_quadrature with α=β=1
  2.468070 seconds (445.19 k allocations: 160.690 MiB, 9.20% gc time)
Running: legendre_quadrature
  0.146322 seconds (172.34 k allocations: 8.733 MiB)
Running: lobatto_quadrature
  0.170243 seconds (181.34 k allocations: 9.277 MiB)
Running: radau_quadrature
  0.162258 seconds (181.33 k allocations: 9.261 MiB)
Running: rectangle_rule_left
  0.914563 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.025529 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  1.089292 seconds (18.92 k allocations: 1.021 MiB, 14.99% gc time)
Running: rombergs_method
  0.124781 seconds (120.85 k allocations: 6.263 MiB)
Running: simpsons_rule
  0.028591 seconds (29.01 k allocations: 1.612 MiB)
Running: simpsons38_rule
  0.032147 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.028544 seconds (44.86 k allocations: 1.654 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043104 seconds (102.01 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=1
  0.198981 seconds (223.47 k allocations: 10.882 MiB)
Running: chebyshev_quadrature with k=2
  0.225312 seconds (286.19 k allocations: 13.973 MiB)
Running: chebyshev_quadrature with k=3
  0.437454 seconds (276.72 k allocations: 13.031 MiB, 45.88% gc time)
Running: chebyshev_quadrature with k=4
  0.235722 seconds (276.72 k allocations: 13.033 MiB)
Running: hermite_quadrature with k=2
 16.986630 seconds (24.29 M allocations: 1.130 GiB, 8.86% gc time)
Running: jacobi_quadrature with α=β=1
  0.499123 seconds (454.47 k allocations: 46.889 MiB, 15.66% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.228895 seconds (269.06 k allocations: 13.151 MiB)
Running: legendre_quadrature
  0.205301 seconds (178.32 k allocations: 9.021 MiB, 18.85% gc time)
Running: lobatto_quadrature
  0.244506 seconds (201.02 k allocations: 35.022 MiB)
Running: radau_quadrature
  0.264102 seconds (197.60 k allocations: 27.654 MiB, 8.14% gc time)
Running: rectangle_rule_left
  0.030425 seconds (23.95 k allocations: 1.258 MiB)
Running: rectangle_rule_midpoint
  0.030847 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.025332 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.174974 seconds (124.01 k allocations: 6.339 MiB)
Running: simpsons_rule
  0.058355 seconds (41.85 k allocations: 1.965 MiB)
Running: simpsons38_rule
  0.048038 seconds (60.33 k allocations: 2.889 MiB)
Running: trapezoidal_rule
  0.036408 seconds (31.74 k allocations: 1.597 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044118 seconds (61.72 k allocations: 2.169 MiB)
Running: chebyshev_quadrature with k=1
  0.206030 seconds (219.32 k allocations: 10.691 MiB)
Running: chebyshev_quadrature with k=2
  0.301891 seconds (281.27 k allocations: 13.754 MiB, 13.29% gc time)
Running: chebyshev_quadrature with k=3
  0.217988 seconds (272.35 k allocations: 12.855 MiB)
Running: chebyshev_quadrature with k=4
  0.224965 seconds (272.35 k allocations: 12.855 MiB)
Running: hermite_quadrature with k=2
  0.164219 seconds (171.22 k allocations: 8.677 MiB)
Running: jacobi_quadrature with α=β=1
  8.272441 seconds (447.63 k allocations: 1.172 GiB, 15.97% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.218956 seconds (264.39 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.156247 seconds (174.27 k allocations: 8.826 MiB)
Running: lobatto_quadrature
  0.189814 seconds (192.16 k allocations: 20.748 MiB)
Running: radau_quadrature
  0.384440 seconds (191.30 k allocations: 18.670 MiB, 44.78% gc time)
Running: rectangle_rule_left
  0.027380 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.027022 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.026439 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.125609 seconds (119.48 k allocations: 6.151 MiB)
Running: simpsons_rule
  0.048739 seconds (33.69 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.043496 seconds (50.47 k allocations: 2.633 MiB)
Running: trapezoidal_rule
  0.030170 seconds (26.08 k allocations: 1.423 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035770 seconds (32.40 k allocations: 1.750 MiB)
Running: chebyshev_quadrature with k=1
  0.216553 seconds (217.90 k allocations: 10.919 MiB)
Running: chebyshev_quadrature with k=2
  0.236444 seconds (279.63 k allocations: 14.096 MiB)
Running: chebyshev_quadrature with k=3
  0.226898 seconds (270.92 k allocations: 13.114 MiB)
Running: chebyshev_quadrature with k=4
  0.227088 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  2.614591 seconds (445.78 k allocations: 191.733 MiB, 16.04% gc time)
Running: legendre_quadrature
  0.172163 seconds (172.85 k allocations: 8.750 MiB)
Running: lobatto_quadrature
  0.173821 seconds (181.84 k allocations: 9.287 MiB)
Running: radau_quadrature
  0.174053 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.326090 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.072078 seconds (26.44 k allocations: 1.470 MiB, 61.86% gc time)
Running: rectangle_rule_right
  0.103803 seconds (19.30 k allocations: 1.040 MiB)
Running: rombergs_method
  0.139957 seconds (131.62 k allocations: 6.889 MiB)
Running: simpsons_rule
  0.033199 seconds (29.80 k allocations: 1.644 MiB)
Running: simpsons38_rule
  0.034973 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.028008 seconds (45.88 k allocations: 1.689 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036334 seconds (33.33 k allocations: 1.714 MiB)
Running: chebyshev_quadrature with k=1
  0.187049 seconds (218.34 k allocations: 10.852 MiB)
Running: chebyshev_quadrature with k=2
  0.241738 seconds (280.15 k allocations: 14.005 MiB)
Running: chebyshev_quadrature with k=3
  0.263692 seconds (271.33 k allocations: 13.047 MiB, 15.12% gc time)
Running: chebyshev_quadrature with k=4
  0.220234 seconds (271.33 k allocations: 13.064 MiB)
Running: jacobi_quadrature with α=β=1
  1.621985 seconds (446.39 k allocations: 146.405 MiB, 6.91% gc time)
Running: legendre_quadrature
  0.195162 seconds (173.29 k allocations: 8.761 MiB)
Running: lobatto_quadrature
  0.172059 seconds (182.29 k allocations: 9.297 MiB)
Running: radau_quadrature
  0.180095 seconds (182.28 k allocations: 9.292 MiB)
Running: rectangle_rule_left
  0.967849 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.033517 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  1.087869 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.164128 seconds (122.15 k allocations: 6.297 MiB)
Running: simpsons_rule
  0.041572 seconds (30.61 k allocations: 1.672 MiB)
Running: simpsons38_rule
  0.040828 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.055398 seconds (58.19 k allocations: 1.890 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.211060 seconds (155.15 k allocations: 8.246 MiB, 24.44% gc time)
Running: chebyshev_quadrature with k=1
  0.145462 seconds (77.50 k allocations: 2.461 MiB)
Running: chebyshev_quadrature with k=2
  0.149036 seconds (112.77 k allocations: 3.132 MiB)
Running: chebyshev_quadrature with k=3
  0.166465 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.177486 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  1.603857 seconds (468.09 k allocations: 165.432 MiB, 11.33% gc time)
Running: legendre_quadrature
  0.110313 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000151 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000059 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 43.193067 seconds (590.00 M allocations: 8.792 GiB, 3.36% gc time)
Running: rectangle_rule_midpoint
  0.000035 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 41.319636 seconds (592.75 M allocations: 8.833 GiB, 3.23% gc time)
Running: rombergs_method
  0.118617 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000047 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.018565 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.014188 seconds (174 allocations: 9.719 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.098384 seconds (629.34 M allocations: 9.387 GiB, 5.09% gc time)
Running: chebyshev_quadrature with k=1
  0.406586 seconds (426.05 k allocations: 21.108 MiB)
Running: chebyshev_quadrature with k=2
 12.218367 seconds (491.02 k allocations: 4.039 GiB, 4.46% gc time)
Running: chebyshev_quadrature with k=3
  5.814875 seconds (283.70 k allocations: 1.641 GiB, 4.48% gc time)
Running: chebyshev_quadrature with k=4
  7.732321 seconds (283.70 k allocations: 2.260 GiB, 2.55% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 49.812645 seconds (482.00 k allocations: 13.252 GiB, 4.71% gc time)
Running: legendre_quadrature.
  6.336989 seconds (210.19 k allocations: 1.974 GiB, 2.10% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.219644 seconds (8.21 M allocations: 13.381 GiB, 5.66% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.175959 seconds (7.21 M allocations: 13.366 GiB, 4.08% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.988583 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.778285 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.990280 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.055433 seconds (466.51 k allocations: 151.599 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.796454 seconds (600.04 M allocations: 8.943 GiB, 8.78% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.759215 seconds (600.05 M allocations: 8.943 GiB, 8.35% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.678746 seconds (600.04 M allocations: 8.943 GiB, 8.67% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063168 seconds (184.62 k allocations: 4.370 MiB)
Running: chebyshev_quadrature with k=1
  0.205400 seconds (231.69 k allocations: 11.186 MiB)
Running: chebyshev_quadrature with k=2
  0.223354 seconds (266.13 k allocations: 12.736 MiB)
Running: chebyshev_quadrature with k=3
  0.219889 seconds (253.76 k allocations: 11.727 MiB)
Running: chebyshev_quadrature with k=4
  0.216143 seconds (253.76 k allocations: 11.693 MiB)
Running: jacobi_quadrature with α=β=1
  0.364620 seconds (383.23 k allocations: 32.797 MiB)
Running: laguerre_quadrature with k=2
  0.185613 seconds (168.36 k allocations: 8.635 MiB)
Running: legendre_quadrature
  0.119564 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.035746 seconds (10.14 k allocations: 15.085 MiB)
Running: radau_quadrature
  0.031121 seconds (8.91 k allocations: 13.159 MiB)
Running: rectangle_rule_left
  0.055705 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.054351 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.050810 seconds (19.11 k allocations: 1.015 MiB)
Running: rombergs_method
  0.263025 seconds (184.38 k allocations: 9.651 MiB)
Running: simpsons_rule
  0.001993 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057210 seconds (82.91 k allocations: 3.274 MiB)
Running: trapezoidal_rule
  0.211754 seconds (2.40 M allocations: 37.631 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002505 seconds (30.72 k allocations: 480.688 KiB)
Running: chebyshev_quadrature with k=1
  0.109879 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.115946 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.138061 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.131938 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  6.536257 seconds (380.30 k allocations: 903.492 MiB, 6.16% gc time)
Running: legendre_quadrature
  0.065184 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000214 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000123 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.319644 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000429 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.167724 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098964 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000787 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000792 seconds (6.35 k allocations: 99.891 KiB)
Running: chebyshev_quadrature with k=1
  0.107282 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.111514 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.120224 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.109341 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.355626 seconds (368.89 k allocations: 250.910 MiB, 8.64% gc time)
Running: legendre_quadrature
  0.048647 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000127 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000039 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.383879 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001058 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  9.665582 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.106426 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001727 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
