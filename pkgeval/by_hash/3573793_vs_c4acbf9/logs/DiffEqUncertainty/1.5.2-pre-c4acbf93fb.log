Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed DiffEqUncertainty ──────────── v1.5.0
  Installed Combinatorics ──────────────── v1.0.2
  Installed UnPack ─────────────────────── v1.0.2
  Installed ChainRulesCore ─────────────── v0.9.6
  Installed IterativeSolvers ───────────── v0.8.4
  Installed Zygote ─────────────────────── v0.5.5
  Installed ReverseDiff ────────────────── v1.4.2
  Installed RecursiveArrayTools ────────── v2.6.0
  Installed MonteCarloIntegration ──────── v0.0.1
  Installed Missings ───────────────────── v0.4.3
  Installed CpuId ──────────────────────── v0.2.2
  Installed OrderedCollections ─────────── v1.3.0
  Installed CommonSubexpressions ───────── v0.3.0
  Installed SIMDPirates ────────────────── v0.8.24
  Installed MacroTools ─────────────────── v0.5.5
  Installed RecursiveFactorization ─────── v0.1.4
  Installed HCubature ──────────────────── v1.4.0
  Installed ArrayLayouts ───────────────── v0.4.4
  Installed ArrayInterface ─────────────── v2.12.0
  Installed ChainRules ─────────────────── v0.7.14
  Installed CommonSolve ────────────────── v0.2.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed VectorizationBase ──────────── v0.12.32
  Installed StatsFuns ──────────────────── v0.9.5
  Installed RecipesBase ────────────────── v1.0.2
  Installed NNlib ──────────────────────── v0.7.4
  Installed LoopVectorization ──────────── v0.8.24
  Installed Reexport ───────────────────── v0.2.0
  Installed LabelledArrays ─────────────── v1.3.0
  Installed QuadGK ─────────────────────── v2.4.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed IRTools ────────────────────── v0.4.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed Parameters ─────────────────── v0.12.1
  Installed NaNMath ────────────────────── v0.3.4
  Installed Quadrature ─────────────────── v1.3.0
  Installed PDMats ─────────────────────── v0.10.0
  Installed Roots ──────────────────────── v1.0.5
  Installed DiffRules ──────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.20
  Installed StaticArrays ───────────────── v0.12.4
  Installed ForwardDiff ────────────────── v0.10.12
  Installed DataAPI ────────────────────── v1.3.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed FillArrays ─────────────────── v0.9.5
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed ZygoteRules ────────────────── v0.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OffsetArrays ───────────────── v1.1.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed TreeViews ──────────────────── v0.3.0
  Installed DiffResults ────────────────── v1.0.2
  Installed DocStringExtensions ────────── v0.8.2
  Installed StatsBase ──────────────────── v0.33.0
  Installed TableTraits ────────────────── v1.0.0
  Installed DiffEqBase ─────────────────── v6.45.1
  Installed Distributions ──────────────── v0.23.9
Updating `~/.julia/environments/v1.5/Project.toml`
  [ef61062a] + DiffEqUncertainty v1.5.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4fba245c] + ArrayInterface v2.12.0
  [4c555306] + ArrayLayouts v0.4.4
  [082447d4] + ChainRules v0.7.14
  [d360d2e6] + ChainRulesCore v0.9.6
  [861a8166] + Combinatorics v1.0.2
  [38540f10] + CommonSolve v0.2.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [2b5f629d] + DiffEqBase v6.45.1
  [ef61062a] + DiffEqUncertainty v1.5.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [31c24e10] + Distributions v0.23.9
  [ffbed154] + DocStringExtensions v0.8.2
  [1a297f60] + FillArrays v0.9.5
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [19dc6840] + HCubature v1.4.0
  [7869d1d1] + IRTools v0.4.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.24
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [4886b29c] + MonteCarloIntegration v0.0.1
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.4
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.10.0
  [d96e819e] + Parameters v0.12.1
  [1fd47b50] + QuadGK v2.4.1
  [67601950] + Quadrature v1.3.0
  [3cdcf5f2] + RecipesBase v1.0.2
  [731186ca] + RecursiveArrayTools v2.6.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [37e2e3b7] + ReverseDiff v1.4.2
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [e88e6eb3] + Zygote v0.5.5
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing DiffEqUncertainty
Status `/tmp/jl_D6dKPn/Project.toml`
  [8a292aeb] Cuba v2.1.0
  [667455a9] Cubature v1.5.1
  [2b5f629d] DiffEqBase v6.45.1
  [071ae1c0] DiffEqGPU v1.7.1
  [a077e3f3] DiffEqProblemLibrary v4.5.1
  [41bf760c] DiffEqSensitivity v4.3.0
  [ef61062a] DiffEqUncertainty v1.5.0
  [31c24e10] Distributions v0.23.9
  [6a86dc24] FiniteDiff v2.6.0
  [f6369f11] ForwardDiff v0.10.12
  [1dea7af3] OrdinaryDiffEq v5.42.3
  [67601950] Quadrature v1.3.0
  [189a3867] Reexport v0.2.0
  [e88e6eb3] Zygote v0.5.5
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_D6dKPn/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.10.0
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.12.0
  [4c555306] ArrayLayouts v0.4.4
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [a603d957] CanonicalTraits v0.2.2
  [7057c7e9] Cassette v0.3.3
  [324d7699] CategoricalArrays v0.8.1
  [082447d4] ChainRules v0.7.14
  [d360d2e6] ChainRulesCore v0.9.6
  [861a8166] Combinatorics v1.0.2
  [38540f10] CommonSolve v0.2.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.14.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [a8cc5b0e] Crayons v4.0.3
  [8a292aeb] Cuba v2.1.0
  [3bed1096] Cuba_jll v4.2.0+1
  [667455a9] Cubature v1.5.1
  [7bc98958] Cubature_jll v1.0.3+0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.45.1
  [eb300fae] DiffEqBiological v4.0.2
  [459566f4] DiffEqCallbacks v2.13.5
  [01453d9d] DiffEqDiffTools v1.7.0
  [071ae1c0] DiffEqGPU v1.7.1
  [c894b116] DiffEqJump v6.10.1
  [9fdde737] DiffEqOperators v3.5.0
  [a077e3f3] DiffEqProblemLibrary v4.5.1
  [41bf760c] DiffEqSensitivity v4.3.0
  [ef61062a] DiffEqUncertainty v1.5.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.9
  [ffbed154] DocStringExtensions v0.8.2
  [7c1d4256] DynamicPolynomials v0.3.13
  [fdbdab4c] ElasticArrays v1.2.4
  [d4d017d3] ExponentialUtilities v1.8.0
  [e2ba6199] ExprTools v0.1.1
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.9.5
  [6a86dc24] FiniteDiff v2.6.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [38e38edf] GLM v1.3.10
  [781609d7] GMP_jll v6.1.2+5
  [0c68f7d7] GPUArrays v5.1.0
  [61eb1bfa] GPUCompiler v0.4.1
  [6b9d7cbe] GeneralizedGenerated v0.2.7
  [01680d73] GenericSVD v0.3.0
  [19dc6840] HCubature v1.4.0
  [f213a82b] HomotopyContinuation v2.0.5
  [7869d1d1] IRTools v0.4.0
  [d25df0c9] Inflate v0.1.2
  [41ab1584] InvertedIndices v1.0.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.3
  [63c18a36] KernelAbstractions v0.3.3
  [929cbde3] LLVM v1.7.0
  [8ac3fa9e] LRUCache v1.1.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.13.5
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.1.0
  [bdcacae8] LoopVectorization v0.8.24
  [d8e11817] MLStyle v0.4.6
  [2ce0c516] MPC_jll v1.1.0+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [291d046c] MixedSubdivisions v1.0.0
  [961ee093] ModelingToolkit v3.17.0
  [4886b29c] MonteCarloIntegration v0.0.1
  [46d2c3a1] MuladdMacro v0.2.2
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [d41bc354] NLSolversBase v7.7.0
  [2774e3e8] NLsolve v4.4.1
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.5
  [6fe1bfb0] OffsetArrays v1.1.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.3
  [90014a1f] PDMats v0.10.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [e409e4f3] PoissonRandom v0.4.0
  [2dfb63ee] PooledArrays v0.5.3
  [8162dcfd] PrettyPrint v0.2.0
  [08abe8d2] PrettyTables v0.9.1
  [92933f4c] ProgressMeter v1.3.2
  [01f381cc] ProjectiveVectors v1.1.2
  [1fd47b50] QuadGK v2.4.1
  [67601950] Quadrature v1.3.0
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.0.2
  [731186ca] RecursiveArrayTools v2.6.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.4.2
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [1277b4bf] ShiftedArrays v1.0.0
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [3eaba693] StatsModels v0.6.13
  [09ab397b] StructArrays v0.4.4
  [123dc426] SymEngine v0.8.2
  [3428059b] SymEngine_jll v0.6.0+1
  [d1185830] SymbolicUtils v0.5.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.11
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.4.0
  [3d5dd08c] VectorizationBase v0.12.32
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.5.5
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary:  |
ProbInts tests | No tests
1004.109979 seconds (114.94 M allocations: 6.712 GiB, 0.57% gc time)
[ Info: HCubatureJL()
[ Info: CubatureJLh()
[ Info: CubatureJLp()
[ Info: CubaSUAVE()
[ Info: CubaDivonne()
[ Info: CubaCuhre()
[ Info: HCubatureJL()
[ Info: CubatureJLh()
[ Info: CubatureJLp()
[ Info: CubaSUAVE()
[ Info: CubaDivonne()
[ Info: CubaCuhre()
[ Info: nout = 1, batch mode = EnsembleSerial(), CubatureJLh()
[ Info: nout = 1, batch mode = EnsembleSerial(), CubatureJLp()
[ Info: nout = 1, batch mode = EnsembleSerial(), CubaSUAVE()
[ Info: nout = 1, batch mode = EnsembleSerial(), CubaDivonne()
[ Info: nout = 1, batch mode = EnsembleSerial(), CubaCuhre()
[ Info: nout = 1, batch mode = EnsembleThreads(), CubatureJLh()
[ Info: nout = 1, batch mode = EnsembleThreads(), CubatureJLp()
[ Info: nout = 1, batch mode = EnsembleThreads(), CubaSUAVE()
[ Info: nout = 1, batch mode = EnsembleThreads(), CubaDivonne()
[ Info: nout = 1, batch mode = EnsembleThreads(), CubaCuhre()
[ Info: nout = 1, batch mode = EnsembleCPUArray(), CubatureJLh()
[ Info: nout = 1, batch mode = EnsembleCPUArray(), CubatureJLp()
[ Info: nout = 1, batch mode = EnsembleCPUArray(), CubaSUAVE()
[ Info: nout = 1, batch mode = EnsembleCPUArray(), CubaDivonne()
[ Info: nout = 1, batch mode = EnsembleCPUArray(), CubaCuhre()
[ Info: nout = 2, batch mode = EnsembleSerial(), CubatureJLh()
[ Info: nout = 2, batch mode = EnsembleSerial(), CubatureJLp()
[ Info: nout = 2, batch mode = EnsembleSerial(), CubaSUAVE()
[ Info: nout = 2, batch mode = EnsembleSerial(), CubaDivonne()
[ Info: nout = 2, batch mode = EnsembleSerial(), CubaCuhre()
[ Info: nout = 2, batch mode = EnsembleThreads(), CubatureJLh()
[ Info: nout = 2, batch mode = EnsembleThreads(), CubatureJLp()
[ Info: nout = 2, batch mode = EnsembleThreads(), CubaSUAVE()
[ Info: nout = 2, batch mode = EnsembleThreads(), CubaDivonne()
[ Info: nout = 2, batch mode = EnsembleThreads(), CubaCuhre()
[ Info: nout = 2, batch mode = EnsembleCPUArray(), CubatureJLh()
[ Info: nout = 2, batch mode = EnsembleCPUArray(), CubatureJLp()
[ Info: nout = 2, batch mode = EnsembleCPUArray(), CubaSUAVE()
[ Info: nout = 2, batch mode = EnsembleCPUArray(), CubaDivonne()
[ Info: nout = 2, batch mode = EnsembleCPUArray(), CubaCuhre()
[ Info: HCubatureJL(), ForwardDiff
[ Info: HCubatureJL(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [3] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [4] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:277
   [5] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:274
   [6] #adjoint#468 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:241 [inlined]
   [7] adjoint at ./none:0 [inlined]
   [8] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [9] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [10] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [11] #solve#456 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:74 [inlined]
   [12] _pullback(::Zygote.Context, ::DiffEqBase.var"##solve#456", ::Nothing, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [13] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [14] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [15] solve at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:72 [inlined]
   [16] _pullback(::Zygote.Context, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [18] adjoint(::Zygote.Context, ::typeof(Core._apply_iterate), ::typeof(iterate), ::Function, ::Tuple{ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}}, ::Tuple{Tsit5}) at ./none:0
   [19] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [20] #6 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:14 [inlined]
   [21] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #10 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:62 [inlined]
   [23] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}}, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] #40 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429 [inlined]
   [25] _pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:38 [inlined]
   [26] pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:44 [inlined]
   [27] (::Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}})(::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429
   [28] (::Quadrature.var"#10#12"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}})(::StaticArrays.SArray{Tuple{2},Float64,1,2}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:93
   [29] (::HCubature.GenzMalik{2,Float64})(::Quadrature.var"#10#12"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::typeof(LinearAlgebra.norm)) at /home/pkgeval/.julia/packages/HCubature/tBwgL/src/genz-malik.jl:121
   [30] hcubature_(::Function, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::StaticArrays.SArray{Tuple{2},Float64,1,2}, ::typeof(LinearAlgebra.norm), ::Float64, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/HCubature/tBwgL/src/HCubature.jl:60
   [31] hcubature_(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::Float64, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/HCubature/tBwgL/src/HCubature.jl:130
   [32] #hcubature#3 at /home/pkgeval/.julia/packages/HCubature/tBwgL/src/HCubature.jl:180 [inlined]
   [33] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::HCubatureJL, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:102
   [34] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},HCubatureJL,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [35] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [36] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [37] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},HCubatureJL,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [38] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [39] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [40] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [41] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [42] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [43] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [44] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [45] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [46] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [47] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [48] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [49] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [50] #7 at ./none:0 [inlined]
   [51] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [52] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [53] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [54] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [55] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
  
[ Info: CubatureJLh(), ForwardDiff
[ Info: CubatureJLh(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] #17 at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:215 [inlined]
   [2] disable_sigint(::Cubature.var"#17#18"{Bool,Bool,Int64,Float64,Float64,Int64,Int32,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Cubature.IntegrandData{Quadrature.var"#74#86"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}},Array{Float64,1}}},Ptr{Nothing}}) at ./c.jl:446
   [3] cubature(::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Quadrature.var"#74#86"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}},Array{Float64,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int32) at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:169
   [4] #hcubature#21 at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:227 [inlined]
   [5] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::CubatureJLh, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:243
   [6] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubatureJLh,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [7] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [8] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [9] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubatureJLh,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [10] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [11] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [12] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [13] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [14] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [15] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [16] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [18] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [19] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [20] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [21] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #7 at ./none:0 [inlined]
   [23] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [25] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [26] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [27] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [28] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:79
  
[ Info: CubatureJLp(), ForwardDiff
[ Info: CubatureJLp(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] #17 at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:215 [inlined]
   [2] disable_sigint(::Cubature.var"#17#18"{Bool,Bool,Int64,Float64,Float64,Int64,Int32,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Cubature.IntegrandData{Quadrature.var"#74#86"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}},Array{Float64,1}}},Ptr{Nothing}}) at ./c.jl:446
   [3] cubature(::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Quadrature.var"#74#86"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}},Array{Float64,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int32) at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:169
   [4] #pcubature#25 at /home/pkgeval/.julia/packages/Cubature/5zwuu/src/Cubature.jl:227 [inlined]
   [5] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::CubatureJLp, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:247
   [6] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubatureJLp,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [7] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [8] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [9] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubatureJLp,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [10] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [11] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [12] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [13] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [14] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [15] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [16] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [18] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [19] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [20] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [21] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #7 at ./none:0 [inlined]
   [23] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [25] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [26] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [27] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [28] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:79
  
[ Info: CubaSUAVE(), ForwardDiff
[ Info: CubaSUAVE(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [3] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [4] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:277
   [5] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:274
   [6] #adjoint#468 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:241 [inlined]
   [7] adjoint at ./none:0 [inlined]
   [8] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [9] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [10] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [11] #solve#456 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:74 [inlined]
   [12] _pullback(::Zygote.Context, ::DiffEqBase.var"##solve#456", ::Nothing, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [13] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [14] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [15] solve at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:72 [inlined]
   [16] _pullback(::Zygote.Context, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [18] adjoint(::Zygote.Context, ::typeof(Core._apply_iterate), ::typeof(iterate), ::Function, ::Tuple{ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}}, ::Tuple{Tsit5}) at ./none:0
   [19] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [20] #6 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:14 [inlined]
   [21] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #10 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:62 [inlined]
   [23] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] #40 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429 [inlined]
   [25] _pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:38 [inlined]
   [26] pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:44 [inlined]
   [27] (::Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429
   [28] (::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:317
   [29] generic_integrand!(::Int32, ::Ptr{Float64}, ::Int32, ::Ptr{Float64}, ::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:92
   [30] dointegrate! at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/suave.jl:43 [inlined]
   [31] dointegrate at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:195 [inlined]
   [32] suave(::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}, ::Int64, ::Int64; nvec::Int64, rtol::Float64, atol::Float64, flags::Int64, seed::Int64, minevals::Int64, maxevals::Int64, nnew::Int64, nmin::Int64, flatness::Float64, statefile::String, spin::Ptr{Nothing}, reltol::Missing, abstol::Missing) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/suave.jl:104
   [33] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::CubaSUAVE, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:368
   [34] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaSUAVE,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [35] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [36] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [37] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaSUAVE,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [38] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [39] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [40] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [41] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [42] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [43] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [44] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [45] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [46] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [47] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [48] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [49] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [50] #7 at ./none:0 [inlined]
   [51] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [52] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [53] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [54] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [55] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
  
[ Info: CubaDivonne(), ForwardDiff
[ Info: CubaDivonne(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [3] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [4] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:277
   [5] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:274
   [6] #adjoint#468 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:241 [inlined]
   [7] adjoint at ./none:0 [inlined]
   [8] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [9] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [10] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [11] #solve#456 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:74 [inlined]
   [12] _pullback(::Zygote.Context, ::DiffEqBase.var"##solve#456", ::Nothing, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [13] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [14] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [15] solve at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:72 [inlined]
   [16] _pullback(::Zygote.Context, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [18] adjoint(::Zygote.Context, ::typeof(Core._apply_iterate), ::typeof(iterate), ::Function, ::Tuple{ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}}, ::Tuple{Tsit5}) at ./none:0
   [19] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [20] #6 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:14 [inlined]
   [21] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #10 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:62 [inlined]
   [23] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] #40 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429 [inlined]
   [25] _pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:38 [inlined]
   [26] pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:44 [inlined]
   [27] (::Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429
   [28] (::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:317
   [29] generic_integrand!(::Int32, ::Ptr{Float64}, ::Int32, ::Ptr{Float64}, ::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:92
   [30] dointegrate! at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/divonne.jl:52 [inlined]
   [31] dointegrate at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:195 [inlined]
   [32] divonne(::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}, ::Int64, ::Int64; nvec::Int64, rtol::Float64, atol::Float64, flags::Int64, seed::Int64, minevals::Int64, maxevals::Int64, key1::Int64, key2::Int64, key3::Int64, maxpass::Int64, border::Float64, maxchisq::Float64, mindeviation::Float64, ngiven::Int64, ldxgiven::Int64, xgiven::Array{Float64,2}, nextra::Int64, peakfinder::Ptr{Nothing}, statefile::String, spin::Ptr{Nothing}, reltol::Missing, abstol::Missing) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/divonne.jl:145
   [33] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::CubaDivonne, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:372
   [34] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaDivonne,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [35] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [36] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [37] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaDivonne,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [38] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [39] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [40] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [41] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [42] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [43] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [44] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [45] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [46] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [47] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [48] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [49] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [50] #7 at ./none:0 [inlined]
   [51] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [52] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [53] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [54] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [55] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
  
[ Info: CubaCuhre(), ForwardDiff
[ Info: CubaCuhre(), Zygote
Koopman Expectation AD: Error During Test at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
  Test threw exception
  Expression: ≈((Zygote.gradient((p->(loss(p, alg);)), p))[1], dp1, rtol = 0.01)
  No adjoint rules exist. Check that you added `using DiffEqSensitivity`
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [3] _concrete_solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:290
   [4] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:277
   [5] _solve_adjoint(::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::Tsit5) at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:274
   [6] #adjoint#468 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:241 [inlined]
   [7] adjoint at ./none:0 [inlined]
   [8] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [9] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [10] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [11] #solve#456 at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:74 [inlined]
   [12] _pullback(::Zygote.Context, ::DiffEqBase.var"##solve#456", ::Nothing, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [13] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [14] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [15] solve at /home/pkgeval/.julia/packages/DiffEqBase/AMw6H/src/solve.jl:72 [inlined]
   [16] _pullback(::Zygote.Context, ::typeof(solve), ::ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [17] adjoint at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:175 [inlined]
   [18] adjoint(::Zygote.Context, ::typeof(Core._apply_iterate), ::typeof(iterate), ::Function, ::Tuple{ODEProblem{SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},Tuple{Float64,Float64},true,SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem}}, ::Tuple{Tsit5}) at ./none:0
   [19] _pullback at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:47 [inlined]
   [20] #6 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:14 [inlined]
   [21] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}, ::SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [22] #10 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:62 [inlined]
   [23] _pullback(::Zygote.Context, ::DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [24] #40 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429 [inlined]
   [25] _pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:38 [inlined]
   [26] pullback at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:44 [inlined]
   [27] (::Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:429
   [28] (::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:317
   [29] generic_integrand!(::Int32, ::Ptr{Float64}, ::Int32, ::Ptr{Float64}, ::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:92
   [30] dointegrate! at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/cuhre.jl:40 [inlined]
   [31] dointegrate at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/Cuba.jl:195 [inlined]
   [32] cuhre(::Quadrature.var"#93#109"{QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}}, ::Int64, ::Int64; nvec::Int64, rtol::Float64, atol::Float64, flags::Int64, minevals::Int64, maxevals::Int64, key::Int64, statefile::String, spin::Ptr{Nothing}, abstol::Missing, reltol::Missing) at /home/pkgeval/.julia/packages/Cuba/S4YWA/src/cuhre.jl:97
   [33] __solvebp_call(::QuadratureProblem{false,Array{Float64,1},Quadrature.var"#39#48"{Float64,QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}}}, ::CubaCuhre, ::Quadrature.ReCallVJP{Quadrature.ZygoteVJP}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}; reltol::Float64, abstol::Float64, maxiters::Int64, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:376
   [34] (::Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaCuhre,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:442
   [35] #60#back at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:55 [inlined]
   [36] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [37] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{Quadrature.var"#60#back#53"{Quadrature.var"#quadrature_adjoint#43"{Base.Iterators.Pairs{Symbol,Real,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:reltol, :abstol, :maxiters),Tuple{Float64,Float64,Int64}}},QuadratureProblem{false,Array{Float64,1},DiffEqUncertainty.var"#10#23"{DiffEqUncertainty.var"#20#33",DiffEqUncertainty.var"#21#34",var"#g#8",Int64,Array{Bool,1},Array{Any,1},Array{Float64,1},DiffEqUncertainty.var"#6#7"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(eom!),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}},DiffEqBase.StandardODEProblem},Tuple{Tsit5}}},Array{Float64,1},Array{Float64,1},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}},CubaCuhre,Quadrature.ReCallVJP{Quadrature.ZygoteVJP},Array{Float64,1},Array{Float64,1},Array{Float64,1},Tuple{}}},Tuple{NTuple{8,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [38] #solve#3 at /home/pkgeval/.julia/packages/Quadrature/L8aMP/src/Quadrature.jl:60 [inlined]
   [39] (::typeof(∂(#solve#3)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [40] #177 at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178 [inlined]
   [41] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#solve#3)),Tuple{NTuple{5,Nothing},Tuple{}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [42] (::typeof(∂(solve##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [43] #expectation#8 at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/src/koopman.jl:102 [inlined]
   [44] (::typeof(∂(#expectation#8)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [45] (::Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/lib/lib.jl:178
   [46] (::Zygote.var"#1730#back#179"{Zygote.var"#177#178"{typeof(∂(#expectation#8)),Tuple{NTuple{15,Nothing},Tuple{Nothing}}}})(::Array{Float64,0}) at /home/pkgeval/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49
   [47] (::typeof(∂(expectation##kw)))(::Array{Float64,0}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [48] loss at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:80 [inlined]
   [49] (::typeof(∂(loss)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [50] #7 at ./none:0 [inlined]
   [51] (::typeof(∂(#7)))(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface2.jl:0
   [52] (::Zygote.var"#41#42"{typeof(∂(#7))})(::Float64) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:45
   [53] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/rqvFi/src/compiler/interface.jl:54
   [54] top-level scope at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/koopman.jl:86
   [55] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
  
[ Info: EnsembleSerial(), CubatureJLh(), ForwardDiff
[ Info: EnsembleSerial(), CubatureJLh(), Zygote
[ Info: EnsembleSerial(), CubatureJLp(), ForwardDiff
[ Info: EnsembleSerial(), CubatureJLp(), Zygote
[ Info: EnsembleSerial(), CubaSUAVE(), ForwardDiff
[ Info: EnsembleSerial(), CubaSUAVE(), Zygote
[ Info: EnsembleSerial(), CubaDivonne(), ForwardDiff
[ Info: EnsembleSerial(), CubaDivonne(), Zygote
[ Info: EnsembleSerial(), CubaCuhre(), ForwardDiff
[ Info: EnsembleSerial(), CubaCuhre(), Zygote
[ Info: EnsembleThreads(), CubatureJLh(), ForwardDiff
[ Info: EnsembleThreads(), CubatureJLh(), Zygote
[ Info: EnsembleThreads(), CubatureJLp(), ForwardDiff
[ Info: EnsembleThreads(), CubatureJLp(), Zygote
[ Info: EnsembleThreads(), CubaSUAVE(), ForwardDiff
[ Info: EnsembleThreads(), CubaSUAVE(), Zygote
[ Info: EnsembleThreads(), CubaDivonne(), ForwardDiff
[ Info: EnsembleThreads(), CubaDivonne(), Zygote
[ Info: EnsembleThreads(), CubaCuhre(), ForwardDiff
[ Info: EnsembleThreads(), CubaCuhre(), Zygote
[ Info: EnsembleCPUArray(), CubatureJLh(), ForwardDiff
[ Info: EnsembleCPUArray(), CubatureJLh(), Zygote
[ Info: EnsembleCPUArray(), CubatureJLp(), ForwardDiff
[ Info: EnsembleCPUArray(), CubatureJLp(), Zygote
[ Info: EnsembleCPUArray(), CubaSUAVE(), ForwardDiff
[ Info: EnsembleCPUArray(), CubaSUAVE(), Zygote
[ Info: EnsembleCPUArray(), CubaDivonne(), ForwardDiff
[ Info: EnsembleCPUArray(), CubaDivonne(), Zygote
[ Info: EnsembleCPUArray(), CubaCuhre(), ForwardDiff
[ Info: EnsembleCPUArray(), CubaCuhre(), Zygote
[ Info: batch mode = EnsembleSerial(), alg = CubatureJLh()
[ Info: batch mode = EnsembleSerial(), alg = CubatureJLp()
[ Info: batch mode = EnsembleSerial(), alg = CubaSUAVE()
[ Info: batch mode = EnsembleThreads(), alg = CubatureJLh()
[ Info: batch mode = EnsembleThreads(), alg = CubatureJLp()
[ Info: batch mode = EnsembleThreads(), alg = CubaSUAVE()
[ Info: batch mode = EnsembleCPUArray(), alg = CubatureJLh()
[ Info: batch mode = EnsembleCPUArray(), alg = CubatureJLp()
[ Info: batch mode = EnsembleCPUArray(), alg = CubaSUAVE()
Test Summary:                          | Pass  Error  Broken  Total
Koopman Tests                          |   57      6      34     97
  Koopman Expectation, nout = 1        |    6                     6
  Koopman Expectation, nout > 1        |    6                     6
  Koopman Expectation, nout = 1, batch |   15                    15
  Koopman Expectation, nout > 1, batch |   15                    15
  Koopman Expectation AD               |    6      6             12
  Koopman Expectation AD, batch        |                  30     30
  Koopman Central Moment               |    3              1      4
  Koopman Central Moment, batch        |    6              3      9
ERROR: LoadError: Some tests did not pass: 57 passed, 0 failed, 6 errored, 34 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqUncertainty/FPK4O/test/runtests.jl:4
ERROR: Package DiffEqUncertainty errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:328
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:315
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:16
