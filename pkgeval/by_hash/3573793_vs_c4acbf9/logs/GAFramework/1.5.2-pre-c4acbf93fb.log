Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.4.1
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_zDrWGB/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_zDrWGB/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171603596508774
curgen: 20 fitness: 0.21722061164514972
curgen: 30 fitness: 0.21722061164514972
curgen: 40 fitness: 0.21722061164514972
curgen: 50 fitness: 0.21722061164514972
CoordinateCreature{Array{Float64,1}}([-0.22200685020940716], -0.21722061164514972) -0.22200685020940716 -0.21722061164514972
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258133642555608
curgen: 100 fitness: 3.2582436804828183
curgen: 150 fitness: 3.2583997064164287
curgen: 200 fitness: 3.2584307114349915
curgen: 250 fitness: 3.2584316522958487
curgen: 300 fitness: 3.2584654200075
curgen: 350 fitness: 3.2584698272955825
curgen: 400 fitness: 3.2584707610706927
curgen: 450 fitness: 3.258472748436603
curgen: 500 fitness: 3.258472748436603
CoordinateCreature{Array{Float64,1}}([0.22280289675745368, -0.22253661847387238, 0.22277323676502228, -0.22275154285335744, -0.22215068298531696, 0.22236463502604803, -0.22247697591274623, -0.22269879826590874, -0.22239533877456835, 0.22270665170942452, -0.22307998840422028, 0.22251348564799323, 0.22254941207582, 0.22247528455018561, 0.22250627843889526], -3.258472748436603) [0.22280289675745368, -0.22253661847387238, 0.22277323676502228, -0.22275154285335744, -0.22215068298531696, 0.22236463502604803, -0.22247697591274623, -0.22269879826590874, -0.22239533877456835, 0.22270665170942452, -0.22307998840422028, 0.22251348564799323, 0.22254941207582, 0.22247528455018561, 0.22250627843889526] -3.258472748436603
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.006359982630669947
curgen: 100 fitness: -0.006178897474910627
curgen: 150 fitness: -0.006178897474910627
curgen: 200 fitness: -0.005393561268533631
curgen: 250 fitness: -0.0039829774609074775
curgen: 300 fitness: -0.0027202001939485854
curgen: 350 fitness: -0.002064435157109301
curgen: 400 fitness: -0.0019322986810834664
curgen: 450 fitness: -0.0019316887440368191
curgen: 500 fitness: -0.0019316887440368191
CoordinateCreature{Array{Float64,1}}([-0.0013144394363003896, -0.00026437061105436405, 0.0002132728558044173, 0.0008214343395591892, -0.0013276995198300983, 0.0011274424590432324, 0.0007267108810593316, -0.00012702085833083825, 5.846413787385872e-5, -0.00014801686295489797, 0.0008881455785186637, 0.00012894161337318502, -0.0006675655340662548, 0.0015049871982870146, 0.00031519206748280976], 0.0019316887440368191) [-0.0013144394363003896, -0.00026437061105436405, 0.0002132728558044173, 0.0008214343395591892, -0.0013276995198300983, 0.0011274424590432324, 0.0007267108810593316, -0.00012702085833083825, 5.846413787385872e-5, -0.00014801686295489797, 0.0008881455785186637, 0.00012894161337318502, -0.0006675655340662548, 0.0015049871982870146, 0.00031519206748280976] 0.0019316887440368191
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
