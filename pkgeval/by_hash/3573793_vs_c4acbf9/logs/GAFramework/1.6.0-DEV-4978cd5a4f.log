Julia Version 1.6.0-DEV.729
Commit 4978cd5a4f (2020-08-26 13:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_6zqPTk/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_6zqPTk/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172327570176492
curgen: 20 fitness: 0.2172327570176492
curgen: 30 fitness: 0.21723360083629517
curgen: 40 fitness: 0.21723360083629517
curgen: 50 fitness: 0.21723360083629517
CoordinateCreature{Vector{Float64}}([-0.22257302458215794], -0.21723360083629517) -0.22257302458215794 -0.21723360083629517
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579727861666252
curgen: 100 fitness: 3.2581516964471775
curgen: 150 fitness: 3.2581741182150967
curgen: 200 fitness: 3.2582775313851986
curgen: 250 fitness: 3.2583208980203433
curgen: 300 fitness: 3.258380872609723
curgen: 350 fitness: 3.258383757278666
curgen: 400 fitness: 3.258386066873377
curgen: 450 fitness: 3.2584123876458664
curgen: 500 fitness: 3.258418744578147
CoordinateCreature{Vector{Float64}}([0.22294876617002174, 0.22247745454266693, -0.2227805393610705, 0.22352185172853228, -0.2224821616783794, -0.22251623911879675, -0.22201851250335908, 0.22267239653390786, -0.22258824648844755, 0.2227036816592248, 0.22231351694134838, 0.22263570759542536, -0.22255399476453663, -0.2226716199115168, -0.2231553445699162], -3.258418744578147) [0.22294876617002174, 0.22247745454266693, -0.2227805393610705, 0.22352185172853228, -0.2224821616783794, -0.22251623911879675, -0.22201851250335908, 0.22267239653390786, -0.22258824648844755, 0.2227036816592248, 0.22231351694134838, 0.22263570759542536, -0.22255399476453663, -0.2226716199115168, -0.2231553445699162] -3.258418744578147
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003227351803190004
curgen: 100 fitness: -0.003227351803190004
curgen: 150 fitness: -0.002817395693995195
curgen: 200 fitness: -0.002411718776215821
curgen: 250 fitness: -0.002054368051375377
curgen: 300 fitness: -0.002054368051375377
curgen: 350 fitness: -0.0018312851867676727
curgen: 400 fitness: -0.0018312851867676727
curgen: 450 fitness: -0.0018312851867676727
curgen: 500 fitness: -0.001369254008778853
CoordinateCreature{Vector{Float64}}([0.0001570294448022668, 0.0001668136586236435, -0.0009901201618703088, -0.0003667631683432298, 0.00024252671800837483, -9.740973019496668e-5, 0.0017878486475827677, -0.0005453205531037683, 8.008703672481021e-5, 0.0010761373027509144, 0.0003182737051106474, 0.00027468774948052194, 0.0005365165235601838, -0.00027685571973336146, 0.000683110655458511], 0.001369254008778853) [0.0001570294448022668, 0.0001668136586236435, -0.0009901201618703088, -0.0003667631683432298, 0.00024252671800837483, -9.740973019496668e-5, 0.0017878486475827677, -0.0005453205531037683, 8.008703672481021e-5, 0.0010761373027509144, 0.0003182737051106474, 0.00027468774948052194, 0.0005365165235601838, -0.00027685571973336146, 0.000683110655458511] 0.001369254008778853
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
