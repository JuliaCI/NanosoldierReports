Julia Version 1.6.0-DEV.729
Commit 4978cd5a4f (2020-08-26 13:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed PositiveFactorizations ─────── v0.2.3
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DiffRules ──────────────────── v1.0.1
  Installed JuLIP ──────────────────────── v0.8.2
  Installed JSON ───────────────────────── v0.21.0
  Installed IterativeSolvers ───────────── v0.8.4
  Installed Optim ──────────────────────── v0.22.0
  Installed Mocking ────────────────────── v0.7.1
  Installed UnPack ─────────────────────── v1.0.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Requires ───────────────────── v1.0.1
  Installed LineSearches ───────────────── v7.1.0
  Installed AlgebraicMultigrid ─────────── v0.3.0
  Installed DataStructures ─────────────── v0.17.20
  Installed Parsers ────────────────────── v1.0.10
  Installed DiffResults ────────────────── v1.0.2
  Installed MbedTLS_jll ────────────────── v2.16.6+1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FiniteDiff ─────────────────── v2.6.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed MbedTLS ────────────────────── v1.0.2
  Installed FillArrays ─────────────────── v0.8.14
  Installed OrderedCollections ─────────── v1.3.0
  Installed Parameters ─────────────────── v0.12.1
  Installed CompatHelper ───────────────── v1.13.6
  Installed Reexport ───────────────────── v0.2.0
  Installed FunctionWrappers ───────────── v1.1.1
  Installed NeighbourLists ─────────────── v0.5.0
  Installed IniFile ────────────────────── v0.5.0
  Installed ArrayInterface ─────────────── v2.12.0
  Installed HTTP ───────────────────────── v0.8.17
  Installed NLSolversBase ──────────────── v7.7.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed BinaryProvider ─────────────── v0.5.10
  Installed ExprTools ──────────────────── v0.1.1
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed StatsBase ──────────────────── v0.33.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed Compat ─────────────────────── v3.14.0
  Installed Dierckx ────────────────────── v0.4.2
  Installed TimeZones ──────────────────── v1.3.2
  Installed Calculus ───────────────────── v0.5.1
  Installed Missings ───────────────────── v0.4.3
  Installed EzXML ──────────────────────── v1.1.0
  Installed RecipesBase ────────────────── v1.0.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ForwardDiff ────────────────── v0.10.12
  Installed StaticArrays ───────────────── v0.12.4
  Installed GitHub ─────────────────────── v5.1.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [945c410c] + JuLIP v0.8.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [2169fc97] + AlgebraicMultigrid v0.3.0
  [4fba245c] + ArrayInterface v2.12.0
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.14.0
  [aa819f21] + CompatHelper v1.13.6
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [39dd38d3] + Dierckx v0.4.2
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.6.0
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [bc5e4493] + GitHub v5.1.7
  [cd3eb016] + HTTP v0.8.17
  [83e8ac13] + IniFile v0.5.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [682c06a0] + JSON v0.21.0
  [945c410c] + JuLIP v0.8.2
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.5
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.6+1
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.0
  [77ba4419] + NaNMath v0.3.4
  [2fcf5ba9] + NeighbourLists v0.5.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [85a6dd25] + PositiveFactorizations v0.2.3
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.3.2
  [3a884ed6] + UnPack v1.0.2
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Dierckx ──→ `~/.julia/packages/Dierckx/ZTanR/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
    Testing JuLIP
Status `/tmp/jl_7XdIXm/Project.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [39dd38d3] Dierckx v0.4.2
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [682c06a0] JSON v0.21.0
  [945c410c] JuLIP v0.8.2
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.5
  [2fcf5ba9] NeighbourLists v0.5.0
  [429524aa] Optim v0.22.0
  [189a3867] Reexport v0.2.0
  [90137ffa] StaticArrays v0.12.4
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_7XdIXm/Manifest.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [4fba245c] ArrayInterface v2.12.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.14.0
  [aa819f21] CompatHelper v1.13.6
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [39dd38d3] Dierckx v0.4.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.6.0
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.17
  [83e8ac13] IniFile v0.5.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [682c06a0] JSON v0.21.0
  [945c410c] JuLIP v0.8.2
  [94ce4f54] Libiconv_jll v1.16.0+5
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.6+1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.0
  [77ba4419] NaNMath v0.3.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [85a6dd25] PositiveFactorizations v0.2.3
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.3.2
  [3a884ed6] UnPack v1.0.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
     JuLIP Tests     
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
[ Info: preparing the tests...
[ Info: Loading some interatomic potentials . .
 . . done.
[ Info: on CI : don't run solver tests
=======================
 Testset Miscellaneous 
=======================
==========
 Test Aux 
==========
--------------------------
matrix <-> vec conversions
--------------------------
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Atoms 
===============
check that `bulk` evaluates ok...
Test Passed
... and that we can repeat it.
Test Passed
check deepcopy and == ...
Test Passed
Check setindex! and getindex ...
Test Passed
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = top-level scope at test_atoms.jl:23
└ @ Core ~/.julia/packages/JuLIP/WO5HB/test/test_atoms.jl:23
Test Passed
Test Passed
set_positions ...
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
test set_positions!
Test Passed
Test Passed
test set_momenta!
Test Passed
test set_dofs!, etc
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Build 
===============
=================
 Testset File IO 
=================
Testing single `Atoms` <-> `Dict`
Test Passed
Test Passed
Test JSON fio
Test Passed
Test array of Atoms <-> Dict
Test Passed
Test JSON fio for array
Test Passed
============================
 Testset Analytic Potential 
============================
generate hand-coded morse potential
generate AD morse potential
typeof(morse1) = AnalyticFunction{var"#3#6"{Float64,Float64,Float64},var"#4#7"{Float64,Float64,Float64},var"#5#8"{Float64,Float64,Float64}}
Check consistency of hand-coded and analytic Morse potentials...
Test Passed
Test Passed
------------------------------------------
Performance tests: @analytic vs hand-coded
------------------------------------------
Evaluations of @analytic Potential
  85.406 μs (1000 allocations: 109.38 KiB)
Evaluations hand-coded Potential
  122.558 μs (1000 allocations: 109.38 KiB)
Grad of @analytic Potential
  123.032 μs (2000 allocations: 218.75 KiB)
Grad of hand-coded Potential
  124.214 μs (2000 allocations: 218.75 KiB)
====================
 Testset Potentials 
====================
--------------------------------------
Testing pair potential implementations
--------------------------------------
AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
AnalyticFunction{JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64},JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64},JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}}(JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}(4.0, 1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.19e+00  
 1.0e-03 | 1.23e-01  
 1.0e-04 | 1.23e-02  
 1.0e-05 | 1.23e-03  
 1.0e-06 | 1.23e-04  
 1.0e-07 | 1.23e-05  
 1.0e-08 | 1.13e-06  
 1.0e-09 | 3.33e-07  
 1.0e-10 | 4.64e-06  
 1.0e-11 | 3.61e-05  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SWCutoff{Float64},AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SWCutoff{Float64}(1.0, 3.0, 1.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 7.17e-04  
 1.0e-03 | 8.77e-05  
 1.0e-04 | 8.96e-06  
 1.0e-05 | 8.98e-07  
 1.0e-06 | 8.98e-08  
 1.0e-07 | 8.98e-09  
 1.0e-08 | 8.85e-10  
 1.0e-09 | 1.34e-10  
 1.0e-10 | 4.96e-10  
 1.0e-11 | 9.95e-10  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SplineCutoff(2.0, 3.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
C2Shift{AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}},Float64}(Val{2}(), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)), 2.0, -0.0615234375, 0.181640625, -0.6181640625)
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.84e-05  
 1.0e-09 | 2.90e-05  
 1.0e-10 | 4.62e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
ZBLPotential{AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}}(5, 8, AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}(JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274), JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274), JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 3.84e+00  
 1.0e-03 | 3.90e-01  
 1.0e-04 | 3.91e-02  
 1.0e-05 | 3.91e-03  
 1.0e-06 | 3.91e-04  
 1.0e-07 | 3.92e-05  
 1.0e-08 | 3.01e-06  
 1.0e-09 | 2.23e-05  
 1.0e-10 | 2.15e-04  
 1.0e-11 | 1.27e-03  
---------|----------- 
passed
Test Passed
-----------------------
testing shift-cutoffs: 
-----------------------
HS
Test Passed
Test Passed
V0
Test Passed
Test Passed
V1
Test Passed
Test Passed
V2
Test Passed
Test Passed
----------------------------------
Testing calculator implementations
----------------------------------
--------------------------------
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}
length(at_) = 72
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64,Int32}, ns_vec::StaticArrays.SVector{3,Int32}, bins::StaticArrays.SMatrix{3,3,Float64,9}, xyz_range::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{StaticArrays.SVector{3,Int32}}) at cell_list.jl:235
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:235
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64,Int32}, ns_vec::StaticArrays.SVector{3,Int32}, bins::StaticArrays.SMatrix{3,3,Float64,9}, xyz_range::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{StaticArrays.SVector{3,Int32}}) at cell_list.jl:266
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:266
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.76e-01  
