Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CUDAapi ──────────── v4.0.0
  Installed CEnum ────────────── v0.3.0
  Installed Adapt ────────────── v1.1.0
  Installed Cthulhu ──────────── v1.2.2
  Installed TimerOutputs ─────── v0.5.6
  Installed ExprTools ────────── v0.1.1
  Installed DataStructures ───── v0.17.20
  Installed CUDAnative ───────── v3.2.0
  Installed CodeTracking ─────── v1.0.0
  Installed FoldingTrees ─────── v1.0.1
  Installed OrderedCollections ─ v1.3.0
  Installed GPUCompiler ──────── v0.2.0
  Installed BinaryProvider ───── v0.5.10
  Installed AbstractTrees ────── v0.3.3
  Installed CUDAdrv ──────────── v6.3.0
  Installed LLVM ─────────────── v1.7.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [be33ccc6] + CUDAnative v3.2.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.1.0
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.3.0
  [3895d2a7] + CUDAapi v4.0.0
  [c5f51814] + CUDAdrv v6.3.0
  [be33ccc6] + CUDAnative v3.2.0
  [da1fd8a2] + CodeTracking v1.0.0
  [f68482b8] + Cthulhu v1.2.2
  [864edb3b] + DataStructures v0.17.20
  [e2ba6199] + ExprTools v0.1.1
  [1eca21be] + FoldingTrees v1.0.1
  [61eb1bfa] + GPUCompiler v0.2.0
  [929cbde3] + LLVM v1.7.0
  [bac558e1] + OrderedCollections v1.3.0
  [a759f4b9] + TimerOutputs v0.5.6
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing CUDAnative
Status `/tmp/jl_Vyp17v/Project.toml`
  [79e6a3ab] Adapt v1.1.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.3.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.2.0
  [e2ba6199] ExprTools v0.1.1
  [61eb1bfa] GPUCompiler v0.2.0
  [929cbde3] LLVM v1.7.0
  [8f399da3] Libdl
  [44cfe95a] Pkg
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_Vyp17v/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.3.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.2.0
  [da1fd8a2] CodeTracking v1.0.0
  [f68482b8] Cthulhu v1.2.2
  [864edb3b] DataStructures v0.17.20
  [e2ba6199] ExprTools v0.1.1
  [1eca21be] FoldingTrees v1.0.1
  [61eb1bfa] GPUCompiler v0.2.0
  [929cbde3] LLVM v1.7.0
  [bac558e1] OrderedCollections v1.3.0
  [a759f4b9] TimerOutputs v0.5.6
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
[ Info: Testing using device Tesla T4 (compute capability 7.5.0, 14.366 GiB available memory) on CUDA driver 11.0.0 and toolkit 10.2.89
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.
│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176
└ @ CUDAnative ~/.julia/packages/CUDAnative/C91oY/src/compatibility.jl:176
┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
CUDAnative    |  666    666
    Testing CUDAnative tests passed 
