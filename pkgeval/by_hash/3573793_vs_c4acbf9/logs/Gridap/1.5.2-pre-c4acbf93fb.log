Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed UnPack ─────────────────────── v1.0.2
  Installed Combinatorics ──────────────── v1.0.2
  Installed JLD2 ───────────────────────── v0.1.14
  Installed Distances ──────────────────── v0.9.0
  Installed WriteVTK ───────────────────── v1.7.3
  Installed JSON ───────────────────────── v0.21.0
  Installed Gridap ─────────────────────── v0.13.4
  Installed CodecZlib ──────────────────── v0.7.0
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed LightXML ───────────────────── v0.9.0
  Installed ArrayInterface ─────────────── v2.12.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed CommonSubexpressions ───────── v0.3.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed Reexport ───────────────────── v0.2.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed Parsers ────────────────────── v1.0.10
  Installed QuadGK ─────────────────────── v2.4.1
  Installed LineSearches ───────────────── v7.1.0
  Installed Parameters ─────────────────── v0.12.1
  Installed BSON ───────────────────────── v0.2.6
  Installed NaNMath ────────────────────── v0.3.4
  Installed AbstractTrees ──────────────── v0.3.3
  Installed DataStructures ─────────────── v0.17.20
  Installed StaticArrays ───────────────── v0.12.4
  Installed DiffRules ──────────────────── v1.0.1
  Installed FileIO ─────────────────────── v1.4.1
  Installed ForwardDiff ────────────────── v0.10.12
  Installed FiniteDiff ─────────────────── v2.6.0
  Installed FillArrays ─────────────────── v0.9.5
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DiffResults ────────────────── v1.0.2
  Installed NLSolversBase ──────────────── v7.7.0
  Installed NLsolve ────────────────────── v4.4.1
  Installed DocStringExtensions ────────── v0.8.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [56d4f2e9] + Gridap v0.13.4
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.12.0
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.4.1
  [1a297f60] + FillArrays v0.9.5
  [6a86dc24] + FiniteDiff v2.6.0
  [f6369f11] + ForwardDiff v0.10.12
  [56d4f2e9] + Gridap v0.13.4
  [033835bb] + JLD2 v0.1.14
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.5
  [d41bc354] + NLSolversBase v7.7.0
  [2774e3e8] + NLsolve v4.4.1
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [1fd47b50] + QuadGK v2.4.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [64499a7a] + WriteVTK v1.7.3
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Gridap
Status `/tmp/jl_URHHYt/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.2
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.4.1
  [1a297f60] FillArrays v0.9.5
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.13.4
  [033835bb] JLD2 v0.1.14
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.1.0
  [2774e3e8] NLsolve v4.4.1
  [1fd47b50] QuadGK v2.4.1
  [90137ffa] StaticArrays v0.12.4
  [64499a7a] WriteVTK v1.7.3
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_URHHYt/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [4fba245c] ArrayInterface v2.12.0
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.4.1
  [1a297f60] FillArrays v0.9.5
  [6a86dc24] FiniteDiff v2.6.0
  [f6369f11] ForwardDiff v0.10.12
  [56d4f2e9] Gridap v0.13.4
  [033835bb] JLD2 v0.1.14
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.5
  [d41bc354] NLSolversBase v7.7.0
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [1fd47b50] QuadGK v2.4.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [64499a7a] WriteVTK v1.7.3
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   14     14
254.392871 seconds (16.09 M allocations: 905.715 MiB, 0.57% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  1.029498 seconds (1.28 M allocations: 65.899 MiB, 1.43% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 28.141960 seconds (31.57 M allocations: 1.451 GiB, 3.82% gc time)
Test Summary: | Pass  Total
Algebra       |  723    723
 81.587554 seconds (72.89 M allocations: 3.487 GiB, 2.94% gc time)
Test Summary: | Pass  Total
TensorValues  |  349    349
 19.705677 seconds (16.28 M allocations: 910.582 MiB, 2.81% gc time)
Test Summary: | Pass  Total
Arrays        |  557    557
 94.830695 seconds (47.99 M allocations: 2.474 GiB, 1.71% gc time)
Test Summary: | Pass  Total
Fields        |  793    793
 67.352179 seconds (46.59 M allocations: 2.335 GiB, 2.87% gc time)
Test Summary: | Pass  Total
Polynomials   |  115    115
 13.959861 seconds (12.83 M allocations: 639.717 MiB, 3.38% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.637866 seconds (26.31 M allocations: 1.208 GiB, 9.87% gc time)
Test Summary: | Pass  Total
ReferenceFEs  | 1226   1226
180.938212 seconds (110.60 M allocations: 5.633 GiB, 2.53% gc time)
Test Summary: | Pass  Total
Geometry      | 2483   2483
216.274902 seconds (162.44 M allocations: 8.324 GiB, 3.28% gc time)
Test Summary: | Pass  Total
FESpaces      | 1327   1327
515.922984 seconds (387.98 M allocations: 19.537 GiB, 2.66% gc time)
Test Summary: | Pass  Total
MultiField    |  352    352
150.504655 seconds (84.50 M allocations: 4.317 GiB, 3.37% gc time)
Test Summary: | Pass  Total
Visualization |    4      4
127.100094 seconds (55.65 M allocations: 2.875 GiB, 4.31% gc time)
Test Summary: | Pass  Total
Poisson       |    4      4
Test Summary: | Pass  Total
PoissonDG     |    2      2
Test Summary: | Pass  Total
PLaplacian    |    2      2
Test Summary:          | Pass  Total
PLaplacianWithAutodiff |    2      2
Test Summary:    | Pass  Total
StokesTaylorHood |    6      6
Test Summary: | Pass  Total
StokesDG      |    3      3
Test Summary: | Pass  Total
StokesNitsche |    3      3
Test Summary: | Pass  Total
Darcy         |    3      3
Test Summary: | Pass  Total
PeriodicDarcy |    2      2
Test Summary:          | Pass  Total
PeriodicCoupledPoisson |    4      4
Test Summary:   | Pass  Total
SurfaceCoupling |    3      3
Test Summary:   | Pass  Total
IsotropicDamage |    1      1
Test Summary:   | Pass  Total
PhysicalPoisson |    4      4
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000047 seconds
  0.000030 seconds
  0.000000 seconds
  0.000024 seconds
  0.000031 seconds
  0.000027 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.005329 seconds
  0.003143 seconds
  0.000000 seconds
  0.002979 seconds
  0.003529 seconds
  0.002279 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000004 seconds
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000005 seconds
  0.000000 seconds
  0.000002 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000003 seconds
  0.000005 seconds
  0.000070 seconds
  0.000416 seconds
  0.000006 seconds
  0.000134 seconds
  0.000208 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000386 seconds
  0.000520 seconds
  0.007163 seconds
  0.033728 seconds
  0.000525 seconds
  0.010767 seconds
  0.016252 seconds (2 allocations: 288 bytes)
Warm up ...
  0.113212 seconds
  0.591472 seconds (115.51 k allocations: 5.914 MiB)
  0.091844 seconds
  2.046370 seconds (213.05 k allocations: 11.021 MiB)
  0.089323 seconds
 15.638995 seconds (193.43 k allocations: 9.993 MiB)
Run ...
  0.081730 seconds
  0.403006 seconds (1 allocation: 64 bytes)
  0.077034 seconds
  1.622651 seconds (1 allocation: 64 bytes)
  0.079801 seconds
 15.307584 seconds (1 allocation: 64 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000024 seconds
  0.000026 seconds
  0.000081 seconds
  0.000103 seconds
+++ running suite for n = 100000 +++
  0.002491 seconds
  0.002598 seconds
  0.008060 seconds
  0.010287 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000020 seconds
  0.000000 seconds
  0.000059 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001890 seconds
  0.000000 seconds
  0.005711 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000006 seconds
  0.000002 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000080 seconds
  0.000088 seconds
  0.000093 seconds
+++ running suite for n = 100000 +++
  0.012144 seconds
  0.011327 seconds
  0.013117 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 96 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000022 seconds (30 allocations: 960 bytes)
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000005 seconds
+++ running suite for n = 1000 +++
  0.000049 seconds
  0.000006 seconds
  0.000090 seconds
  0.000137 seconds
  0.000030 seconds
  0.000002 seconds
  0.000132 seconds
  0.000133 seconds
  0.000030 seconds
  0.000007 seconds
  0.000359 seconds (3.49 k allocations: 101.391 KiB)
  0.000109 seconds
  0.000086 seconds
  0.000002 seconds
  0.000434 seconds
  0.000457 seconds
+++ running suite for n = 100000 +++
  0.002941 seconds
  0.000472 seconds
  0.007246 seconds
  0.008951 seconds
  0.002883 seconds
  0.000140 seconds
  0.009364 seconds
  0.008727 seconds
  0.003013 seconds
  0.000598 seconds
  0.033764 seconds (399.49 k allocations: 10.673 MiB)
  0.009776 seconds
  0.007204 seconds
  0.000172 seconds
  0.044749 seconds
  0.044756 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000004 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000004 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000004 seconds
  0.000004 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000071 seconds
  0.000007 seconds
  0.000270 seconds
  0.000212 seconds (1 allocation: 112 bytes)
  0.000008 seconds
  0.000243 seconds
  0.000237 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.007945 seconds
  0.000690 seconds
  0.023632 seconds
  0.020179 seconds (1 allocation: 112 bytes)
  0.000606 seconds
  0.023116 seconds
  0.022704 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000088 seconds
  0.000099 seconds
  0.000356 seconds
  0.000091 seconds
  0.000096 seconds
  0.000303 seconds
  0.000097 seconds
  0.000106 seconds
  0.000101 seconds
  0.000098 seconds
  0.000108 seconds
  0.000094 seconds
  0.000330 seconds
+++ running suite for n = 100000 +++
  0.008518 seconds
  0.009123 seconds
  0.035104 seconds
  0.008640 seconds
  0.009219 seconds
  0.029080 seconds
  0.009203 seconds
  0.010115 seconds
  0.009136 seconds
  0.009630 seconds
  0.010673 seconds
  0.009419 seconds
  0.032611 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000030 seconds
+++ running suite for n = 1000 +++
  0.000088 seconds
  0.000311 seconds
  0.001048 seconds
+++ running suite for n = 100000 +++
  0.008697 seconds
  0.025017 seconds
  0.093802 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000007 seconds (3 allocations: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000003 seconds (3 allocations: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000009 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1000 +++
  0.000081 seconds
  0.000867 seconds (3.49 k allocations: 148.266 KiB)
+++ running suite for n = 100000 +++
  0.006594 seconds
  0.080712 seconds (399.49 k allocations: 15.251 MiB)
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000001 seconds
  0.000008 seconds (3 allocations: 96 bytes)
  0.339739 seconds (160.48 k allocations: 8.241 MiB)
  0.000000 seconds
  0.000013 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000005 seconds (3 allocations: 96 bytes)
  0.000009 seconds (3 allocations: 96 bytes)
  0.000001 seconds
  0.000007 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000034 seconds (30 allocations: 960 bytes)
  0.000054 seconds (30 allocations: 960 bytes)
  0.000001 seconds
  0.000019 seconds (50 allocations: 1.250 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000028 seconds
  0.000166 seconds
  0.002637 seconds (3.49 k allocations: 101.391 KiB)
  0.004711 seconds (3.49 k allocations: 101.391 KiB)
  0.000036 seconds
  0.001206 seconds (5.49 k allocations: 132.641 KiB)
  0.000004 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.002536 seconds
  0.014556 seconds
  0.221995 seconds (399.49 k allocations: 10.673 MiB)
  0.449992 seconds (399.49 k allocations: 10.673 MiB)
  0.003250 seconds
  0.122131 seconds (599.49 k allocations: 13.725 MiB)
  0.000098 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000006 seconds
  0.000008 seconds
  0.000003 seconds
  0.000006 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000008 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000038 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000773 seconds
  0.001462 seconds
  0.001210 seconds
  0.004046 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.074830 seconds
  0.158118 seconds
  0.170086 seconds
  0.771119 seconds (3.00 M allocations: 137.329 MiB, 33.50% gc time)
    Testing Gridap tests passed 
