################################################################################
# PkgEval set-up: 2020-10-30T00:56:25.297
#

Julia Version 1.6.0-DEV.1398
Commit 209631fa02 (2020-10-29 23:03 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-30T00:56:26.174
#

   Resolving package versions...
   Installed WeakRefStrings ─────────────── v0.6.1
   Installed DataValueInterfaces ────────── v1.0.0
   Installed IteratorInterfaceExtensions ── v1.0.0
   Installed CodecZlib ──────────────────── v0.6.0
   Installed TextParse ──────────────────── v0.9.1
   Installed OnlineStatsBase ────────────── v1.0.2
   Installed JuliaDB ────────────────────── v0.13.1
   Installed LossFunctions ──────────────── v0.5.1
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed XML2_jll ───────────────────── v2.9.10+3
   Installed StructArrays ───────────────── v0.4.1
   Installed Nullables ──────────────────── v0.0.8
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed DataAPI ────────────────────── v1.3.0
   Installed GenericSchur ───────────────── v0.4.0
   Installed OnlineStats ────────────────── v1.0.2
   Installed OffsetArrays ───────────────── v1.3.1
   Installed Compat ─────────────────────── v2.2.1
   Installed LearnBase ──────────────────── v0.2.2
   Installed ExprTools ──────────────────── v0.1.3
   Installed Tables ─────────────────────── v0.2.11
   Installed Requires ───────────────────── v1.1.0
   Installed BinaryProvider ─────────────── v0.5.10
   Installed DataStructures ─────────────── v0.17.20
   Installed MemPool ────────────────────── v0.2.0
   Installed SweepOperator ──────────────── v0.3.0
   Installed RecipesBase ────────────────── v0.7.0
   Installed Libiconv_jll ───────────────── v1.16.0+7
   Installed DataValues ─────────────────── v0.4.12
   Installed PenaltyFunctions ───────────── v0.1.2
   Installed Mocking ────────────────────── v0.7.1
   Installed GenericSVD ─────────────────── v0.3.0
   Installed TranscodingStreams ─────────── v0.9.5
   Installed Dagger ─────────────────────── v0.8.0
   Installed TableTraitsUtils ───────────── v1.0.1
   Installed Intervals ──────────────────── v1.5.0
   Installed Polynomials ────────────────── v1.1.10
   Installed JLLWrappers ────────────────── v1.1.3
   Installed StatsBase ──────────────────── v0.32.0
   Installed Glob ───────────────────────── v1.2.0
   Installed EzXML ──────────────────────── v1.1.0
   Installed Missings ───────────────────── v0.4.4
   Installed TableTraits ────────────────── v1.0.0
   Installed PooledArrays ───────────────── v0.5.2
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed Zlib_jll ───────────────────── v1.2.11+18
   Installed TimeZones ──────────────────── v1.4.0
   Installed IndexedTables ──────────────── v0.12.4
   Installed Quadmath ───────────────────── v0.5.4
   Installed OrderedCollections ─────────── v1.3.1
   Installed Reexport ───────────────────── v0.2.0
   Installed SpecialFunctions ───────────── v0.10.3
   Installed DoubleFloats ───────────────── v1.1.13
Updating `~/.julia/environments/v1.6/Project.toml`
  [a93385a2] + JuliaDB v0.13.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.10
  [944b1d66] + CodecZlib v0.6.0
  [34da2185] + Compat v2.2.1
  [d58978e5] + Dagger v0.8.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [e7dc6d0d] + DataValues v0.4.12
  [497a8b3b] + DoubleFloats v1.1.13
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [01680d73] + GenericSVD v0.3.0
  [c145ed77] + GenericSchur v0.4.0
  [c27321d9] + Glob v1.2.0
  [6deec6e2] + IndexedTables v0.12.4
  [d8418881] + Intervals v1.5.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [a93385a2] + JuliaDB v0.13.1
  [7f8f8fb0] + LearnBase v0.2.2
  [30fc2ffe] + LossFunctions v0.5.1
  [f9f48841] + MemPool v0.2.0
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [4d1e1d77] + Nullables v0.0.8
  [6fe1bfb0] + OffsetArrays v1.3.1
  [a15396b6] + OnlineStats v1.0.2
  [925886fa] + OnlineStatsBase v1.0.2
  [bac558e1] + OrderedCollections v1.3.1
  [06bb1623] + PenaltyFunctions v0.1.2
  [f27b6e38] + Polynomials v1.1.10
  [2dfb63ee] + PooledArrays v0.5.2
  [be4d8f0f] + Quadmath v0.5.4
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [2913bbd2] + StatsBase v0.32.0
  [09ab397b] + StructArrays v0.4.1
  [7522ee7d] + SweepOperator v0.3.0
  [3783bdb8] + TableTraits v1.0.0
  [382cd787] + TableTraitsUtils v1.0.1
  [bd369af6] + Tables v0.2.11
  [e0df1984] + TextParse v0.9.1
  [f269a46b] + TimeZones v1.4.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [ea10d353] + WeakRefStrings v0.6.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [9abbd945] + Profile
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building CodecZlib → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/05916673a2627dd91b4969ff8ba6941bc85a960e/build.log`
    Building TimeZones → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`


################################################################################
# Testing: 2020-10-30T00:56:48.862
#


     Testing JuliaDB
Status `/tmp/jl_LQXGpc/Project.toml`
  [d58978e5] Dagger v0.8.0
  [e7dc6d0d] DataValues v0.4.12
  [c27321d9] Glob v1.2.0
  [6deec6e2] IndexedTables v0.12.4
  [a93385a2] JuliaDB v0.13.1
  [f9f48841] MemPool v0.2.0
  [4d1e1d77] Nullables v0.0.8
  [a15396b6] OnlineStats v1.0.2
  [925886fa] OnlineStatsBase v1.0.2
  [2dfb63ee] PooledArrays v0.5.2
  [3cdcf5f2] RecipesBase v0.7.0
  [2913bbd2] StatsBase v0.32.0
  [e0df1984] TextParse v0.9.1
  [ea10d353] WeakRefStrings v0.6.1
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_LQXGpc/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.10
  [944b1d66] CodecZlib v0.6.0
  [34da2185] Compat v2.2.1
  [d58978e5] Dagger v0.8.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.12
  [497a8b3b] DoubleFloats v1.1.13
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [01680d73] GenericSVD v0.3.0
  [c145ed77] GenericSchur v0.4.0
  [c27321d9] Glob v1.2.0
  [6deec6e2] IndexedTables v0.12.4
  [d8418881] Intervals v1.5.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [a93385a2] JuliaDB v0.13.1
  [7f8f8fb0] LearnBase v0.2.2
  [30fc2ffe] LossFunctions v0.5.1
  [f9f48841] MemPool v0.2.0
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [4d1e1d77] Nullables v0.0.8
  [6fe1bfb0] OffsetArrays v1.3.1
  [a15396b6] OnlineStats v1.0.2
  [925886fa] OnlineStatsBase v1.0.2
  [bac558e1] OrderedCollections v1.3.1
  [06bb1623] PenaltyFunctions v0.1.2
  [f27b6e38] Polynomials v1.1.10
  [2dfb63ee] PooledArrays v0.5.2
  [be4d8f0f] Quadmath v0.5.4
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [2913bbd2] StatsBase v0.32.0
  [09ab397b] StructArrays v0.4.1
  [7522ee7d] SweepOperator v0.3.0
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v0.2.11
  [e0df1984] TextParse v0.9.1
  [f269a46b] TimeZones v1.4.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.6.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
WARNING: could not import Printf.ini_hex into Quadmath
WARNING: could not import Printf.ini_HEX into Quadmath
WARNING: could not import Printf.ini_hex into DoubleFloats
WARNING: could not import Printf.ini_HEX into DoubleFloats
┌ Warning: `@get!(dict, key, default)` at /home/pkgeval/.julia/packages/Dagger/sdZXi/src/compute.jl:74 is deprecated, use `get!(()->default, dict, key)` instead.
└ @ Base deprecated.jl:204
Test Summary: | Pass  Total
iteration     |   20     20
Test Summary: | Pass  Total
Utilities     |    3      3
Test Summary: | Pass  Total
Interval      |   10     10
Test Summary:                             | Pass  Total
vcat PooledArray Vector{Union{T,Missing}} |    2      2
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:97
  Test threw exception
  Expression: join(l, r) == table([1, 1], [1, 2], [1, 2], [2, 3], names = [:a, :b, :c, :d])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] join(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:116
   [12] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:97 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:98
  Test threw exception
  Expression: isequal(join(l, r, how = :left), table([1, 1, 2, 2], [1, 2, 1, 2], [1, 2, 3, 4], [2, 3, missing, missing], names = [:a, :b, :c, :d]))
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:98 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:102
  Test threw exception
  Expression: isequal(join(l, r, how = :outer), table([0, 1, 1, 2, 2, 3], [1, 1, 2, 1, 2, 2], [missing, 1, 2, 3, 4, missing], [1, 2, 3, missing, missing, 4], names = Symbol[:a, :b, :c, :d]))
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:102 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:106
  Test threw exception
  Expression: join(l, r, how = :anti) == table([2, 2], [1, 2], [3, 4], names = Symbol[:a, :b, :c])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::JuliaDB.var"#274#275", left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:106 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:109
  Test threw exception
  Expression: join(l1, r1, lkey = :x, rkey = :x) == table([2, 2, 2, 2, 3, 3], [2, 2, 3, 3, 4, 4], [5, 6, 5, 6, 7, 8], names = Symbol[:x, :y, :z])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, Tuple{Int64}}, right::JuliaDB.DIndexedTable{NamedTuple{(:x, :z), Tuple{Int64, Int64}}, Tuple{Int64}}, lkey::Symbol, rkey::Symbol, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, Tuple{Int64}}, right::JuliaDB.DIndexedTable{NamedTuple{(:x, :z), Tuple{Int64, Int64}}, Tuple{Int64}}; how::Symbol, lkey::Symbol, rkey::Symbol, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:109 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:110
  Test threw exception
  Expression: isequal(join(l, r, lkey = :a, rkey = :a, lselect = :b, rselect = :d, how = :outer), table((a = [0, 1, 1, 1, 1, 2, 2, 3], b = [missing, 1, 1, 2, 2, 1, 2, missing], d = [1, 2, 3, 2, 3, missing, missing, 4])))
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Symbol, rkey::Symbol, lselect::Symbol, rselect::Symbol; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Symbol, rkey::Symbol, lselect::Symbol, rselect::Symbol, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:110 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:116
  Test threw exception
  Expression: groupjoin(l, r) == table([1, 2], [2, 1], [Columns((c = [2, 2, 3, 3], d = [2, 3, 2, 3])), Columns((c = [4], d = [4]))], names = Symbol[:a, :b, :groups])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:group,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] #groupjoin#277
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:125 [inlined]
   [12] groupjoin(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:125
   [13] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:116 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:117
  Test threw exception
  Expression: groupjoin(l, r, how = :left) == table([1, 1, 2], [1, 2, 1], [Columns((c = [], d = [])), Columns((c = [2, 2, 3, 3], d = [2, 3, 2, 3])), Columns((c = [4], d = [4]))], names = Symbol[:a, :b, :groups])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:group,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] #groupjoin#277
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:125 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:117 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:118
  Test threw exception
  Expression: groupjoin(l, r, how = :outer) == table([0, 1, 1, 2], [1, 1, 2, 1], [Columns((c = [], d = [])), Columns((c = [], d = [])), Columns((c = [2, 2, 3, 3], d = [2, 3, 2, 3])), Columns((c = [4], d = [4]))], names = Symbol[:a, :b, :groups])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Tuple{Symbol, Symbol}, rkey::Tuple{Symbol, Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:group,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] #groupjoin#277
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:125 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:118 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:119
  Test threw exception
  Expression: groupjoin(l, r, lkey = :a, rkey = :a, lselect = :c, rselect = :d, how = :outer) == table([0, 1, 2], [Columns((c = [], d = [])), Columns((c = [1, 1, 2, 2, 3, 3], d = [2, 3, 2, 3, 2, 3])), Columns((c = [4], d = [4]))], names = Symbol[:a, :groups])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, lkey::Symbol, rkey::Symbol, lselect::Symbol, rselect::Symbol; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] join(f::typeof(IndexedTables.concat_tup), left::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :c), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:a, :b, :d), Tuple{Int64, Int64, Int64}}, NamedTuple{(:a, :b), Tuple{Int64, Int64}}}; how::Symbol, lkey::Symbol, rkey::Symbol, lselect::Symbol, rselect::Symbol, broadcast::Nothing, chunks::Int64, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:group,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:59
   [10] #join#273
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:117 [inlined]
   [11] #groupjoin#277
      @ ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:125 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:119 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:125
  Test threw exception
  Expression: merge(a, b) == table([1, 2, 3, 3, 4, 5], [1, 1, 2, 2, 3, 3], names = Symbol[:x, :y])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] rechunk_together(left::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, lkey::Tuple{Symbol}, rkey::Tuple{Symbol}, lselect::Tuple{Int64}, rselect::Tuple{Int64}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:9
    [9] merge(left::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}; chunks::Int64)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:265
   [10] merge(left::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, right::JuliaDB.DIndexedTable{NamedTuple{(:x, :y), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/join.jl:265
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:125 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:154
  Test threw exception
  Expression: groupby(mean, t, :x, select = :z) == table([1, 2], [2.0, 5.0], names = Symbol[:x, :mean])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :z), Tuple{Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, by::Tuple{Symbol}; select::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Symbol; select::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:154 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:155
  Test threw exception
  Expression: groupby(identity, t, (:x, :y), select = :z) == table([1, 1, 2, 2], [1, 2, 1, 2], [[1, 2], [3], [5, 6], [4]], names = Symbol[:x, :y, :identity])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, NamedTuple{(:x, :y), Tuple{Int64, Int64}}}, by::Tuple{Symbol, Symbol}; select::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Tuple{Symbol, Symbol}; select::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:155 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:156
  Test threw exception
  Expression: groupby(mean, t, (:x, :y), select = :z) == table([1, 1, 2, 2], [1, 2, 1, 2], [1.5, 3.0, 5.5, 4.0], names = Symbol[:x, :y, :mean])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, NamedTuple{(:x, :y), Tuple{Int64, Int64}}}, by::Tuple{Symbol, Symbol}; select::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Tuple{Symbol, Symbol}; select::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:156 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:158
  Test threw exception
  Expression: groupby((q25 = (z->begin
                        quantile(z, 0.25)
                    end), q50 = median, q75 = (z->begin
                        quantile(z, 0.75)
                    end)), t, :y, select = :z) == table([1, 2], [1.75, 3.25], [3.5, 3.5], [5.25, 3.75], names = Symbol[:y, :q25, :q50, :q75])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::NamedTuple{(:q25, :q50, :q75), Tuple{var"#8#28", typeof(median), var"#9#29"}}, t::JuliaDB.DIndexedTable{NamedTuple{(:y, :z), Tuple{Int64, Int64}}, NamedTuple{(:y,), Tuple{Int64}}}, by::Tuple{Symbol}; select::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::NamedTuple{(:q25, :q50, :q75), Tuple{var"#8#28", typeof(median), var"#9#29"}}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Symbol; select::Symbol, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:158 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:160
  Test threw exception
  Expression: groupby(identity, t, :x, select = (:y, :z), flatten = true) == rechunk(t, :x)
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, by::Tuple{Symbol}; select::Tuple{Int64, Int64}, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:flatten,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Symbol; select::Tuple{Symbol, Symbol}, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:flatten,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:160 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:161
  Test threw exception
  Expression: groupby((xmean = :z => mean,), t, :x) == table([1, 2], [2.0, 5.0], names = Symbol[:x, :xmean])
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::NamedTuple{(:xmean,), Tuple{Pair{Symbol, typeof(mean)}}}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, by::Tuple{Symbol}; select::Tuple{Int64, Int64}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] groupby(f::NamedTuple{(:xmean,), Tuple{Pair{Symbol, typeof(mean)}}}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Symbol; select::Not{Symbol}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:97
   [10] groupby(f::NamedTuple{(:xmean,), Tuple{Pair{Symbol, typeof(mean)}}}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{Int64, Int64, Int64}}, Tuple{Int64}}, by::Symbol)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:75
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:161 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:168
  Test threw exception
  Expression: unstack(long; variable = :var, value = :val) == t
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::Tuple{Pair{Symbol, typeof(identity)}}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :var, :val), Tuple{Int64, Symbol, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, by::Tuple{Symbol}; select::Tuple{Symbol, Symbol}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] unstack(t::JuliaDB.DIndexedTable{NamedTuple{(:x, :var, :val), Tuple{Int64, Symbol, Int64}}, NamedTuple{(:x,), Tuple{Int64}}}, by::Tuple{Symbol}; variable::Symbol, value::Symbol)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reshape.jl:20
   [10] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:168 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
table: Error During Test at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:234
  Test threw exception
  Expression: summarize(mean, b) == table(["a", "b"], [2.0, 6.0], [2.0, 2.0], names = [:x, :y, :z], pkey = :x)
  TypeError: in typeassert, expected DataType, got Vararg{Any}
  Stacktrace:
    [1] typejoin_union_tuple(T::Type)
      @ Base.Broadcast ./broadcast.jl:728
    [2] promote_typejoin_union(#unused#::Type{Tuple})
      @ Base.Broadcast ./broadcast.jl:700
    [3] promote_typejoin_union(#unused#::Type{Union{Tuple, NamedTuple}})
      @ Base.Broadcast ./broadcast.jl:698
    [4] combine_eltypes(f::Function, args::Tuple{Vector{JuliaDB.IndexSpace}})
      @ Base.Broadcast ./broadcast.jl:738
    [5] copy
      @ ./broadcast.jl:903 [inlined]
    [6] materialize
      @ ./broadcast.jl:881 [inlined]
    [7] has_overlaps(domains::Vector{JuliaDB.IndexSpace}; closed::Bool)
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/ndsparse.jl:337
    [8] groupby(f::ApplyColwise{typeof(mean)}, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{String, Int64, Int64}}, NamedTuple{(:x,), Tuple{String}}}, by::Tuple{Symbol}; select::Tuple{Int64, Int64}, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:flatten,), Tuple{Bool}}})
      @ JuliaDB ~/.julia/packages/JuliaDB/Ve2iH/src/reduce.jl:85
    [9] summarize(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{String, Int64, Int64}}, NamedTuple{(:x,), Tuple{String}}}, by::Tuple{Symbol}; select::Tuple{Int64, Int64}, stack::Bool, variable::Symbol)
      @ IndexedTables ~/.julia/packages/IndexedTables/5U0Ap/src/reduce.jl:260
   [10] summarize(f::Function, t::JuliaDB.DIndexedTable{NamedTuple{(:x, :y, :z), Tuple{String, Int64, Int64}}, NamedTuple{(:x,), Tuple{String}}}, by::Tuple{Symbol})
      @ IndexedTables ~/.julia/packages/IndexedTables/5U0Ap/src/reduce.jl:259
   [11] macro expansion
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:234 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:6
Test Summary: | Pass  Error  Total
table         |  107     19    126
ERROR: LoadError: LoadError: Some tests did not pass: 107 passed, 0 failed, 19 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/test_table.jl:5
in expression starting at /home/pkgeval/.julia/packages/JuliaDB/Ve2iH/test/runtests.jl:10

PkgEval failed: Package JuliaDB errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:369 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:369
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-30T01:01:39.965
CPU usage: 314.04s (307.11s user, 7.20s kernel)

Network usage:
- eth0: 2.282 MiB received, 152.053 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":13,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":13,"op":"Async","minor":0},{"major":259,"value":13,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":13,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":13,"op":"Async","minor":2},{"major":253,"value":13,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":77824,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":77824,"op":"Async","minor":0},{"major":259,"value":77824,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":77824,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":77824,"op":"Async","minor":2},{"major":253,"value":77824,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":250671104,"max_usage":1539883008,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":216031232,"inactive_file":8192,"inactive_anon":10772480,"total_pgfault":3827932,"total_cache":26427392,"total_rss_huge":0,"total_active_anon":231624704,"total_pgmajfault":0,"pgpgin":2246168,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":2186974,"hierarchical_memsw_limit":0,"cache":26427392,"active_file":0,"pgfault":3827932,"total_mapped_file":0,"total_pgpgout":2186974,"total_writeback":0,"rss":216031232,"unevictable":0,"total_inactive_anon":10772480,"total_pgpgin":2246168,"active_anon":231624704,"total_active_file":0},"limit":540972998656},"name":"/JuliaDB-4qtfXL9u","networks":{"eth0":{"rx_bytes":2392788,"rx_packets":1469,"tx_packets":1073,"tx_bytes":155702,"tx_dropped":0,"rx_dropped":11,"tx_errors":0,"rx_errors":0}},"id":"8ee0a3912815e824a717f18a732e8b398e827202739668c665ab4d02a22387d1","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":111272469540000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":307110000000,"usage_in_kernelmode":7200000000,"total_usage":314037905336,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,314037856966,0,48370,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-30T01:01:39.967876542Z"}