Julia Version 1.4.0-DEV.626
Commit 630a551f42 (2019-12-17 17:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed KCenters ──────────────────── v0.1.8
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed OrderedCollections ────────── v1.1.0
 Installed Compat ────────────────────── v3.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed Tables ────────────────────── v0.2.11
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed Reexport ──────────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MLDataPattern ─────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_wJsf57/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_wJsf57/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_wJsf57/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 156.84999999999994
[ Info: 76.8500000000001
[ Info: 42.42
[ Info: 25.799999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.083015863565432
inertia(cdnet.distances) = 33.476946711039005
inertia(crand.distances) = 21.626916941258663
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.3515625,"distances_sum":565.8954384835289}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3349609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.6796875,"distances_sum":1006.3110718197182}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3349609375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.6796875,"distances_sum":1006.3110718197182}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8441943473193481,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1484375,"distances_sum":2389.8102086497424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.895198031135532,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.625,"distances_sum":2686.5365602627708}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7738853160728167,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.71875,"distances_sum":1997.2538411456808}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5390625,"f1":null,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1328125,"distances_sum":1586.049878529407}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8389584373959382,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.109375,"distances_sum":2353.8087067019264}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.895198031135532,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.625,"distances_sum":2686.5365602627708}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9409746503496507,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":3059.929371645022}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9424049908424914,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":3032.9678143154692}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9391311813186818,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.75,"distances_sum":3009.541668714022}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9409746503496507,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":3059.929371645022}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9409746503496507,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":3059.929371645022}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.9169023036956787e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.8984375,"distances_sum":559.2882849534983}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8737783050283057,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.21875,"distances_sum":2241.673873473398}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8737783050283057,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.21875,"distances_sum":2241.673873473398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9631581959706965,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2933.227679038851}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9631581959706965,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8359375,"distances_sum":2933.227679038851}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750918,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9296875,"distances_sum":2926.430905777336}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750918,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9296875,"distances_sum":2926.430905777336}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750918,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9296875,"distances_sum":2926.430905777336}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":2.902001142501831e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.3828125,"distances_sum":512.5267616780063}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8530365467865476,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1171875,"distances_sum":2150.357363236984}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8530365467865476,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1171875,"distances_sum":2150.357363236984}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9307921245421251,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.609375,"distances_sum":2752.422279262548}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9406681859806865,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6875,"distances_sum":2799.9158558804033}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.959100274725275,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.765625,"distances_sum":2954.722378206172}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.959100274725275,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.765625,"distances_sum":2954.722378206172}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9769574175824179,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":3074.4581103946357}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657222985347989,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8203125,"distances_sum":2997.981348796879}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9769574175824179,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":3074.4581103946357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9769574175824179,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":3074.4581103946357}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6878621378621383,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.421875,"distances_sum":1385.5581349819622}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.375,"distances_sum":1019.8238810180527}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.78125,"distances_sum":1075.8724696731265}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6878621378621383,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.421875,"distances_sum":1385.5581349819622}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9136103479853489,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":2464.9886654849815}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6890935453435459,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.3125,"distances_sum":1395.2832383264313}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8556323884448893,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4453125,"distances_sum":2101.917152054046}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9136103479853489,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":2464.9886654849815}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9552000083250086,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2840.8081752986595}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9246909340659349,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.953125,"distances_sum":2571.6204317581632}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9552000083250086,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2840.8081752986595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9552000083250086,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2840.8081752986595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.59375,"distances_sum":599.6385681999226}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2529296875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.59375,"distances_sum":599.6385681999226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7032311438561443,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3984375,"distances_sum":1432.8064100414172}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.865974130036631,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5859375,"distances_sum":2168.900322378802}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.72181845931846,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.7109375,"distances_sum":1508.7255150076642}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.4453125,"distances_sum":1396.2041992639752}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.865974130036631,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5859375,"distances_sum":2168.900322378802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8706767191142198,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.609375,"distances_sum":2205.889954976167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630036630036631,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2893.701716967858}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490041208791216,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2774.9580532880336}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9513710248085253,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.875,"distances_sum":2802.121449812401}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8677000083250092,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6171875,"distances_sum":2202.3050675167374}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9127206127206134,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2475.67403680839}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630036630036631,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2893.701716967858}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630036630036631,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2893.701716967858}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7127585955710963,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.3828125,"distances_sum":1426.208002443648}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.7127585955710963,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.3828125,"distances_sum":1426.208002443648}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8145760489510497,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2578125,"distances_sum":1888.738817841888}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9079904470529478,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.703125,"distances_sum":2420.174405884584}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9079904470529478,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.703125,"distances_sum":2420.174405884584}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9698489010989015,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2908.309950408455}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9698489010989015,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2908.309950408455}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9698489010989015,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2908.309950408455}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9890997023809524,"recall":0.7392578125,"f1":0.8406999250749259,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.2421875,"distances_sum":1285.2639183497631}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.996484375,"recall":0.572265625,"f1":0.7141416742979249,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.9765625,"distances_sum":888.433174638702}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9890997023809524,"recall":0.7392578125,"f1":0.8406999250749259,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.2421875,"distances_sum":1285.2639183497631}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9857700892857143,"recall":0.8115234375,"f1":0.8837346247502504,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.6875,"distances_sum":1493.6904492103201}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":2,"bsize":6},"perf":{"precision":0.9857700892857143,"recall":0.8115234375,"f1":0.8837346247502504,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.6875,"distances_sum":1493.6904492103201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9900483630952382,"recall":0.888671875,"f1":0.9335436698717954,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9375,"distances_sum":1665.2767907670934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9865606398809523,"recall":0.919921875,"f1":0.9492867158882786,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":1765.9336486060174}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":11,"bsize":9}, perf: {"precision":0.9915829613095238,"recall":0.9169921875,"f1":0.94978751717033,"seconds":7.027760148048401e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9375,"distances_sum":1745.1372809591319}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":0.985946800595238,"recall":0.859375,"f1":0.913422189789378,"seconds":7.243826985359192e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8125,"distances_sum":1625.9158846158962}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":11,"bsize":7}, perf: {"precision":0.989462425595238,"recall":0.861328125,"f1":0.9164284283424914,"seconds":6.875023245811462e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8046875,"distances_sum":1612.8842996553826}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9865606398809523,"recall":0.919921875,"f1":0.9492867158882786,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":1765.9336486060174}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9865606398809523,"recall":0.919921875,"f1":0.9492867158882786,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":1765.9336486060174}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.83681682900433,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.046875,"distances_sum":1104.427522139347}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7801760739260748,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":7.265625,"distances_sum":945.8026597687726}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.732421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.732421875,"f1":0.83681682900433,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.046875,"distances_sum":1104.427522139347}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949410485347986,"seconds":6.988644599914551e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.828125,"distances_sum":1509.1089501875103}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555689102564106,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.84375,"distances_sum":1549.2587707653697}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9555689102564106,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.84375,"distances_sum":1549.2587707653697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.96178456959707,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":1562.5837620427747}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.96178456959707,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":1562.5837620427747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.96178456959707,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":1562.5837620427747}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.2265625,"distances_sum":550.5932229210033}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4384765625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4384765625,"f1":null,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.2265625,"distances_sum":550.5932229210033}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7883710039960048,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.765625,"distances_sum":917.2575327790863}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8612476065601075,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.0390625,"distances_sum":1112.4967530321328}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8612476065601075,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.0390625,"distances_sum":1112.4967530321328}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9593578296703299,"seconds":7.031485438346863e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.875,"distances_sum":1480.6992744898853}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.886830357142858,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8125,"distances_sum":1177.142522211506}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467948717948721,"seconds":7.094815373420715e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8125,"distances_sum":1438.711023726645}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9593578296703299,"seconds":7.031485438346863e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.875,"distances_sum":1480.6992744898853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9593578296703299,"seconds":7.031485438346863e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.875,"distances_sum":1480.6992744898853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":6.4609375,"distances_sum":555.6999341087324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7905890984015993,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.8515625,"distances_sum":957.5665057159555}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7905890984015993,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":7.8515625,"distances_sum":957.5665057159555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9022836538461547,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.765625,"distances_sum":1305.705608661763}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9022836538461547,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.765625,"distances_sum":1305.705608661763}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575008325008328,"seconds":7.148832082748413e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8203125,"distances_sum":1526.2040228354022}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9341460622710628,"seconds":6.841495633125305e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.84375,"distances_sum":1412.264768444034}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9575008325008328,"seconds":7.148832082748413e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8203125,"distances_sum":1526.2040228354022}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9575008325008328,"seconds":7.148832082748413e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.8203125,"distances_sum":1526.2040228354022}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.0234375,"distances_sum":566.3525142636253}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2646484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2646484375,"f1":null,"seconds":3.894791007041931e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":5.7890625,"distances_sum":389.09666782552085}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4033203125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4033203125,"f1":null,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.0234375,"distances_sum":566.3525142636253}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8493740634365644,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.09375,"distances_sum":1153.5128960077188}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8885567557442566,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.5859375,"distances_sum":1301.036921593199}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7916661463536472,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.546875,"distances_sum":1004.1279396890833}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7092896686646694,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.8828125,"distances_sum":841.6521723974474}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7017487720612728,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.734375,"distances_sum":825.489519907004}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8885567557442566,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.5859375,"distances_sum":1301.036921593199}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702781593406599,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":1637.4722786660986}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652529761904767,"seconds":7.146969437599182e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.9296875,"distances_sum":1609.7086099162054}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9002034423909432,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.6796875,"distances_sum":1343.5870406215683}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558836996337001,"seconds":6.847083568572998e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.7734375,"distances_sum":1589.390921368604}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8998428654678664,"seconds":6.4391642808914185e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.625,"distances_sum":1345.8696581750346}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702781593406599,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":1637.4722786660986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702781593406599,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.890625,"distances_sum":1637.4722786660986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2890625,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.5859375,"distances_sum":398.24493349477405}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.1328125,"distances_sum":532.7873084633578}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.4609375,"distances_sum":596.960358860266}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4404296875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4404296875,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.4609375,"distances_sum":596.960358860266}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8488157675657684,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.15625,"distances_sum":1066.527874067107}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7859328171828178,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.859375,"distances_sum":926.3467161720002}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8869453463203474,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.578125,"distances_sum":1229.7836032331024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8430361305361315,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.15625,"distances_sum":1068.558838302556}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.5546875,"f1":null,"seconds":3.824010491371155e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.7265625,"distances_sum":743.6002857711568}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8095703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8095703125,"f1":0.8869453463203474,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.578125,"distances_sum":1229.7836032331024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966409111721612,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.84375,"distances_sum":1519.1876298686632}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8900302822177831,"seconds":9.847432374954224e-5,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":1230.2217569406077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.936673222610723,"seconds":7.1302056312561035e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7578125,"distances_sum":1390.5715644891413}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479395604395608,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7890625,"distances_sum":1435.338217765632}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9159944222444232,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7265625,"distances_sum":1316.4450118026484}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9262934981684987,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8125,"distances_sum":1352.8590479107502}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966409111721612,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.84375,"distances_sum":1519.1876298686632}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966409111721612,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.84375,"distances_sum":1519.1876298686632}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8579727564102572,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.109375,"distances_sum":1141.6092388223137}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.40234375,"f1":0.5513160450660449,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.0078125,"distances_sum":566.131071855293}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8579727564102572,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.109375,"distances_sum":1141.6092388223137}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9386618589743598,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.734375,"distances_sum":1458.8147199610826}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9235176282051288,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":1387.2593412266299}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9386618589743598,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.734375,"distances_sum":1458.8147199610826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9527758699633707,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8359375,"distances_sum":1485.416175109123}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978028,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.921875,"distances_sum":1576.4812292887138}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749255952380955,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.921875,"distances_sum":1582.5681521107729}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9651098901098905,"seconds":6.81169331073761e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8984375,"distances_sum":1545.8157646937289}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9776270604395609,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":1598.5582912916018}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451694139194146,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.75,"distances_sum":1477.3704558682805}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395604395604401,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7578125,"distances_sum":1434.9494784213834}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9776270604395609,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":1598.5582912916018}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9776270604395609,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":1598.5582912916018}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7996633574758584,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.4921875,"distances_sum":1006.0927118359838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.0078125,"distances_sum":346.6460601127594}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.787673264235765,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.40625,"distances_sum":990.5187621484722}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7996633574758584,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.4921875,"distances_sum":1006.0927118359838}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8984146062271069,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.5546875,"distances_sum":1290.418620577038}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8934638278388287,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.515625,"distances_sum":1279.287163576278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9181464368964375,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7578125,"distances_sum":1393.3940301218972}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8460627913752924,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.0234375,"distances_sum":1118.2847905516546}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8464837246087256,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.9765625,"distances_sum":1131.2300309874092}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8428920038295047,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.078125,"distances_sum":1092.0962788042916}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9181464368964375,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7578125,"distances_sum":1393.3940301218972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9379724442224447,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.84375,"distances_sum":1461.372611461683}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447458791208795,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":1494.8279915444446}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428576,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.921875,"distances_sum":1602.5119880959214}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538003663003665,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7890625,"distances_sum":1543.7905348609636}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660027472527477,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9140625,"distances_sum":1565.003144503215}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428576,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.921875,"distances_sum":1602.5119880959214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428576,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.921875,"distances_sum":1602.5119880959214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6734612609612614,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.78125,"distances_sum":709.1550997423352}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7971653346653356,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.5,"distances_sum":955.5678755780062}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2607421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2607421875,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.9375,"distances_sum":358.5957038874731}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7971653346653356,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.5,"distances_sum":955.5678755780062}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8835398976023985,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.484375,"distances_sum":1224.812358806168}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405620421245426,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.703125,"distances_sum":1464.9487815650978}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8536310911310919,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.109375,"distances_sum":1120.0566999156067}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9405620421245426,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.703125,"distances_sum":1464.9487815650978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690132783882787,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9375,"distances_sum":1534.270888575142}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654819139194144,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.921875,"distances_sum":1536.0459595824395}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.952761821511822,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.78125,"distances_sum":1492.50153374598}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9565533424908429,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.84375,"distances_sum":1494.0974588471622}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690132783882787,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9375,"distances_sum":1534.270888575142}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690132783882787,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9375,"distances_sum":1534.270888575142}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.109375,"distances_sum":588.7726051687016}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.25,"distances_sum":634.931337937444}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.0234375,"distances_sum":604.2251153835343}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.416015625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.416015625,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.25,"distances_sum":634.931337937444}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.838954795204796,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.875,"distances_sum":1148.2770853865732}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9057806776556784,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.546875,"distances_sum":1351.1815275780862}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7082700285825293,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.015625,"distances_sum":842.4994563116772}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.708823468198469,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.984375,"distances_sum":834.1316081550043}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8367367007992016,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.875,"distances_sum":1146.539806129449}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7120310245310252,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.09375,"distances_sum":899.1018037248259}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9040724900099908,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5625,"distances_sum":1349.6397094360336}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9057806776556784,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.546875,"distances_sum":1351.1815275780862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9336658133533137,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.75,"distances_sum":1480.0266512985397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516457500832507,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7890625,"distances_sum":1575.0114713941675}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9225191475191483,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.765625,"distances_sum":1429.4212433413102}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595467032967039,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.921875,"distances_sum":1568.878999316563}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.921071116383617,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":1430.1937581035495}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490556318681325,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8359375,"distances_sum":1549.5461373164705}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595467032967039,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.921875,"distances_sum":1568.878999316563}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595467032967039,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.921875,"distances_sum":1568.878999316563}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.271484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.271484375,"f1":null,"seconds":3.5762786865234375e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":6.2109375,"distances_sum":356.42873966545505}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4228515625,"f1":0.5643798909423908,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":6.15625,"distances_sum":595.0153051491656}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4228515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4228515625,"f1":0.5643798909423908,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":6.15625,"distances_sum":595.0153051491656}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8473994755244764,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.0234375,"distances_sum":1077.8391150926393}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8503350815850824,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.0390625,"distances_sum":1077.9050026547136}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8029989108114116,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.515625,"distances_sum":953.3667639332259}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8503350815850824,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.0390625,"distances_sum":1077.9050026547136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8533971237096246,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.0234375,"distances_sum":1113.5010903147852}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9303545412920421,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8359375,"distances_sum":1347.9857919473343}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9511618589743596,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.828125,"distances_sum":1444.9017157913818}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9236721611721621,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8515625,"distances_sum":1323.5483904191037}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8634589368964375,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.1171875,"distances_sum":1128.0814651088237}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9511618589743596,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.828125,"distances_sum":1444.9017157913818}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9511618589743596,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.828125,"distances_sum":1444.9017157913818}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8218739593739601,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.015625,"distances_sum":1419.06368687373}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7053970335220341,"seconds":4.190951585769653e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.1328125,"distances_sum":1087.3413263891516}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8218739593739601,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.015625,"distances_sum":1419.06368687373}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9291271228771235,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8515625,"distances_sum":1896.3053935388928}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9291271228771235,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8515625,"distances_sum":1896.3053935388928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376659798534805,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.828125,"distances_sum":1939.4801847920328}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672847985347988,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.875,"distances_sum":2133.926835972113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.963581730769231,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8984375,"distances_sum":2097.407483067191}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504006410256416,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.78125,"distances_sum":2043.3906794670938}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672847985347988,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.875,"distances_sum":2133.926835972113}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672847985347988,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.875,"distances_sum":2133.926835972113}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.7492642402648926e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.8203125,"distances_sum":397.882626467683}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1806640625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.7492642402648926e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.8203125,"distances_sum":397.882626467683}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1806640625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.7492642402648926e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.8203125,"distances_sum":397.882626467683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7845654345654353,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0546875,"distances_sum":1298.7047301074736}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.7976428085803093,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0625,"distances_sum":1351.3727633728254}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1552734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1552734375,"f1":null,"seconds":2.7082860469818115e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":4.6484375,"distances_sum":322.43599078976473}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.7976428085803093,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0625,"distances_sum":1351.3727633728254}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503434065934071,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":1960.4451132204144}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9503434065934071,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8203125,"distances_sum":1960.4451132204144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2112.020428207948}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741071428571431,"seconds":1.3120472431182861e-5,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9375,"distances_sum":2076.1056441054334}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2112.020428207948}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977901785714286,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2112.020428207948}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8374453671328678,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0625,"distances_sum":1636.4759636746342}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3173828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3173828125,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.1875,"distances_sum":609.6669809389297}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7676276848151855,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4453125,"distances_sum":1400.261953417906}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8374453671328678,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0625,"distances_sum":1636.4759636746342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.846547723110224,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1875,"distances_sum":1634.0757920276635}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9539835164835171,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2179.891979035056}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8979234307359315,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3828125,"distances_sum":1856.3263253762955}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8946293290043297,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3984375,"distances_sum":1822.3761619218885}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9539835164835171,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2179.891979035056}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658539377289381,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2277.510257154701}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9576694139194143,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2216.5106174605125}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658539377289381,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2277.510257154701}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658539377289381,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2277.510257154701}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.58984375,"f1":0.7276423229548237,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8515625,"distances_sum":1281.7662245775298}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.58984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.58984375,"f1":0.7276423229548237,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8515625,"distances_sum":1281.7662245775298}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9349046786546793,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5625,"distances_sum":2120.3961196025853}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9349046786546793,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5625,"distances_sum":2120.3961196025853}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9725274725274727,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2317.5077584843016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9441506410256415,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.625,"distances_sum":2187.904877382102}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622825091575096,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2265.238755348811}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9725274725274727,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2317.5077584843016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9725274725274727,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2317.5077584843016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0,"distances_sum":423.4657670372187}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0,"distances_sum":423.4657670372187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1416015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1416015625,"f1":null,"seconds":2.8330832719802856e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.265625,"distances_sum":324.49162519031387}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1416015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1416015625,"f1":null,"seconds":2.8330832719802856e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.265625,"distances_sum":324.49162519031387}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.796875,"distances_sum":369.7713714970101}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.4375,"distances_sum":349.37575737743464}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7019955738705743,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.421875,"distances_sum":1013.8586091772586}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7019955738705743,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.421875,"distances_sum":1013.8586091772586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9248090451215455,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.734375,"distances_sum":1821.305772560515}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.58984375,"f1":null,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4765625,"distances_sum":1098.1058425481024}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9248090451215455,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.734375,"distances_sum":1821.305772560515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9585050366300369,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2006.7691024569313}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548248626373633,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":1983.5708661737153}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9585050366300369,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2006.7691024569313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9585050366300369,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2006.7691024569313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.6640625,"distances_sum":1037.2483501379807}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8175400987900997,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.15625,"distances_sum":1318.8173358595293}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8175400987900997,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.15625,"distances_sum":1318.8173358595293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9057093947718956,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":1665.933854920145}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931596528471529,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":1819.0254089633427}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8686469780219789,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3828125,"distances_sum":1544.4608606377867}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8650282009657018,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.453125,"distances_sum":1474.6362497064417}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.931596528471529,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":1819.0254089633427}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087914,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":1957.1773276839856}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9557520604395607,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9453125,"distances_sum":1953.007150302652}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662774725274729,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2009.159258000394}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629667207792211,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.859375,"distances_sum":2002.7642850175775}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543014277389283,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8203125,"distances_sum":1985.5794976335362}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513679029304034,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":1920.1287528183896}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946008158508159,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":1897.419825263579}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662774725274729,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2009.159258000394}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662774725274729,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":2009.159258000394}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7056936119436126,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6640625,"distances_sum":1005.646031790763}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.7056936119436126,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6640625,"distances_sum":1005.646031790763}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9189820596070605,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":1703.0440116090672}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9189820596070605,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":1703.0440116090672}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767857142857146,"seconds":7.996335625648499e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2009.3851090696003}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9476591117216122,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":1826.4700818401625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680116758241759,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.96875,"distances_sum":1966.6017586655012}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9767857142857146,"seconds":7.996335625648499e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2009.3851090696003}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9767857142857146,"seconds":7.996335625648499e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2009.3851090696003}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":2.7976930141448975e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.734375,"distances_sum":376.9047818916938}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7753220737595744,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.578125,"distances_sum":1203.432050991049}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9140625,"distances_sum":672.737442616049}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7753220737595744,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.578125,"distances_sum":1203.432050991049}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.939274267399268,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.78125,"distances_sum":1797.6974590385428}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9003075049950056,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.609375,"distances_sum":1644.3672917766105}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9147326631701638,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.703125,"distances_sum":1658.1843263406024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7879547535797544,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.671875,"distances_sum":1224.707611417124}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8622455669330679,"seconds":7.1320682764053345e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3125,"distances_sum":1440.6949002103452}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8580513236763244,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.125,"distances_sum":1486.0179545858678}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.939274267399268,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.78125,"distances_sum":1797.6974590385428}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718750000000002,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":1999.192622265838}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520718864468869,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.828125,"distances_sum":1899.3936361333397}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567364926739931,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":1930.5172895813644}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718750000000002,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":1999.192622265838}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718750000000002,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":1999.192622265838}}, n: 9
inertia(cfft.distances) = 18.759151515151512
inertia(cdnet.distances) = 20.304851370851374
inertia(crand.distances) = 19.395161776257925
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.888888888888889
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> k=7
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8666666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9444444444444443
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8444444444444444
===> k=11
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 3, 3, 2, 2, 1, 2, 3, 3, 3, 2, 1, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
nc.class_map = [2, 1, 3, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
acc = 0.9333333333333333
*** starting iteration: 1; err: [Inf, 0.33346666894443594] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295] ***
*** starting iteration: 2; err: [Inf, 0.33346666894443594, 0.17758834562267295] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317] ***
*** starting iteration: 3; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732] ***
*** starting iteration: 4; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564] ***
*** starting iteration: 5; err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564, 0.16145448597363093] ***
*** finished computation of 12 references, err: [Inf, 0.33346666894443594, 0.17758834562267295, 0.1667138760240317, 0.16389289383910732, 0.16177414548735564, 0.16145448597363093] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.3455000112739992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3455000112739992, 0.576900676261186] ***
*** starting iteration: 2; err: [Inf, 1.3455000112739992, 0.576900676261186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3455000112739992, 0.576900676261186, 0.5035200772906013] ***
*** starting iteration: 3; err: [Inf, 1.3455000112739992, 0.576900676261186, 0.5035200772906013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3455000112739992, 0.576900676261186, 0.5035200772906013, 0.5020096938871059] ***
*** finished computation of 3 references, err: [Inf, 1.3455000112739992, 0.576900676261186, 0.5035200772906013, 0.5020096938871059] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 9]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8571000071378535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8571000071378535, 0.5500237010035951] ***
*** starting iteration: 2; err: [Inf, 0.8571000071378535, 0.5500237010035951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8571000071378535, 0.5500237010035951, 0.5426377274415828] ***
*** starting iteration: 3; err: [Inf, 0.8571000071378535, 0.5500237010035951, 0.5426377274415828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8571000071378535, 0.5500237010035951, 0.5426377274415828, 0.5389232216665085] ***
*** finished computation of 3 references, err: [Inf, 0.8571000071378535, 0.5500237010035951, 0.5426377274415828, 0.5389232216665085] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 2]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 32]]
** centroid: 2, normalized-entropy: 0.5713549744279549, [(2, 5), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.316100022261709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.316100022261709, 1.2073883902522156] ***
*** starting iteration: 2; err: [Inf, 3.316100022261709, 1.2073883902522156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.316100022261709, 1.2073883902522156, 0.7516060032804488] ***
*** starting iteration: 3; err: [Inf, 3.316100022261709, 1.2073883902522156, 0.7516060032804488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.316100022261709, 1.2073883902522156, 0.7516060032804488, 0.6328602019376839] ***
*** finished computation of 3 references, err: [Inf, 3.316100022261709, 1.2073883902522156, 0.7516060032804488, 0.6328602019376839] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 11]]
** centroid: 2, normalized-entropy: 0.7849920887641585, [(2, 36), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9783592564335225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9783592564335225, 0.6616333985349825] ***
*** starting iteration: 2; err: [Inf, 0.9783592564335225, 0.6616333985349825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9783592564335225, 0.6616333985349825, 0.6600936423745807] ***
*** starting iteration: 3; err: [Inf, 0.9783592564335225, 0.6616333985349825, 0.6600936423745807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9783592564335225, 0.6616333985349825, 0.6600936423745807, 0.6580213124923309] ***
*** finished computation of 3 references, err: [Inf, 0.9783592564335225, 0.6616333985349825, 0.6600936423745807, 0.6580213124923309] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 1, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8852239055742682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8852239055742682, 0.3569017273598989] ***
*** starting iteration: 2; err: [Inf, 0.8852239055742682, 0.3569017273598989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8852239055742682, 0.3569017273598989, 0.3569017273598989] ***
*** finished computation of 3 references, err: [Inf, 0.8852239055742682, 0.3569017273598989, 0.3569017273598989] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9138416099852837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9138416099852837, 0.6364948644857357] ***
*** starting iteration: 2; err: [Inf, 0.9138416099852837, 0.6364948644857357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9138416099852837, 0.6364948644857357, 0.6318546627031716] ***
*** starting iteration: 3; err: [Inf, 0.9138416099852837, 0.6364948644857357, 0.6318546627031716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9138416099852837, 0.6364948644857357, 0.6318546627031716, 0.6310405898647926] ***
*** finished computation of 3 references, err: [Inf, 0.9138416099852837, 0.6364948644857357, 0.6318546627031716, 0.6310405898647926] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 32]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [16, 3, 0]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(1, 16), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2258390231708305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2258390231708305, 0.37074154921758107] ***
*** finished computation of 7 references, err: [Inf, 1.2258390231708305, 0.37074154921758107] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 27, 20]]
** centroid: 7, normalized-entropy: 0.9839393951635759, [(2, 27), (3, 20)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6397256626860329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6397256626860329, 0.22608457073258395] ***
*** finished computation of 7 references, err: [Inf, 0.6397256626860329, 0.22608457073258395] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 29, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3895804162130868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3895804162130868, 0.22213342643863257] ***
*** finished computation of 7 references, err: [Inf, 0.3895804162130868, 0.22213342643863257] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 5]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(2, 7), (3, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.657999997261049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685] ***
*** starting iteration: 2; err: [Inf, 4.657999997261049, 1.246381779554685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398] ***
*** starting iteration: 3; err: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734] ***
*** starting iteration: 4; err: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017] ***
*** starting iteration: 5; err: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017, 0.4984824593429974] ***
*** starting iteration: 6; err: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017, 0.4984824593429974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017, 0.4984824593429974, 0.49758123171465984] ***
*** finished computation of 3 references, err: [Inf, 4.657999997261049, 1.246381779554685, 0.5452665805769398, 0.5077105058026734, 0.5024854607898017, 0.4984824593429974, 0.49758123171465984] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.931500033986316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003] ***
*** starting iteration: 2; err: [Inf, 2.931500033986316, 0.7527125432641003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914] ***
*** starting iteration: 3; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429] ***
*** starting iteration: 4; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828] ***
*** starting iteration: 5; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085] ***
*** starting iteration: 6; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392] ***
*** starting iteration: 7; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392, 0.5325388822164452] ***
*** starting iteration: 8; err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392, 0.5325388822164452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392, 0.5325388822164452, 0.531841933633804] ***
*** finished computation of 3 references, err: [Inf, 2.931500033986316, 0.7527125432641003, 0.5814740489943914, 0.5501419295976429, 0.5426377274415828, 0.5389232216665085, 0.5348616683621392, 0.5325388822164452, 0.531841933633804] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 31]]
** centroid: 2, normalized-entropy: 0.32984607020714635, [(2, 2), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 3]]
** centroid: 3, normalized-entropy: 0.43055186701043935, [(2, 31), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6572000036954216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6572000036954216, 0.5774912195001106] ***
*** starting iteration: 2; err: [Inf, 0.6572000036954216, 0.5774912195001106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6572000036954216, 0.5774912195001106, 0.5767728611649605] ***
*** finished computation of 3 references, err: [Inf, 0.6572000036954216, 0.5774912195001106, 0.5767728611649605] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 29, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7322973494716274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7322973494716274, 0.5143784575970088] ***
*** finished computation of 3 references, err: [Inf, 1.7322973494716274, 0.5143784575970088] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 2, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 25]]
** centroid: 3, normalized-entropy: 0.9960383613659186, [(2, 29), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.416218645853597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.416218645853597, 1.6495751832719743] ***
*** finished computation of 3 references, err: [Inf, 7.416218645853597, 1.6495751832719743] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 26]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 13), (3, 26)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [33, 20, 1]]
** centroid: 3, normalized-entropy: 0.6760337214886167, [(1, 33), (2, 20), (3, 1)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1563448275987447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1563448275987447, 0.42056022426436585] ***
*** finished computation of 3 references, err: [Inf, 1.1563448275987447, 0.42056022426436585] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 32]]
** centroid: 2, normalized-entropy: 0.9687003436508602, [(2, 21), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.174183776345292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198] ***
*** starting iteration: 2; err: [Inf, 2.174183776345292, 0.51391814605198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065] ***
*** starting iteration: 3; err: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087] ***
*** starting iteration: 4; err: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793] ***
*** starting iteration: 5; err: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793, 0.3476232405306019] ***
*** starting iteration: 6; err: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793, 0.3476232405306019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793, 0.3476232405306019, 0.34774531253075686] ***
*** finished computation of 3 references, err: [Inf, 2.174183776345292, 0.51391814605198, 0.3985196926762065, 0.3717858929408087, 0.3548860614388793, 0.3476232405306019, 0.34774531253075686] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.169844126709817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.169844126709817, 0.8859522690879915] ***
*** starting iteration: 2; err: [Inf, 8.169844126709817, 0.8859522690879915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413] ***
*** starting iteration: 3; err: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514] ***
*** starting iteration: 4; err: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514, 0.6254410571509457] ***
*** starting iteration: 5; err: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514, 0.6254410571509457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514, 0.6254410571509457, 0.6245883501271908] ***
*** finished computation of 3 references, err: [Inf, 8.169844126709817, 0.8859522690879915, 0.6366364244377413, 0.6279856136886514, 0.6254410571509457, 0.6245883501271908] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 34]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 32), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7742642754893682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742642754893682, 0.6383536779743085] ***
*** starting iteration: 2; err: [Inf, 0.7742642754893682, 0.6383536779743085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742642754893682, 0.6383536779743085, 0.6323025974062924] ***
*** starting iteration: 3; err: [Inf, 0.7742642754893682, 0.6383536779743085, 0.6323025974062924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742642754893682, 0.6383536779743085, 0.6323025974062924, 0.6323025974062924] ***
*** finished computation of 3 references, err: [Inf, 0.7742642754893682, 0.6383536779743085, 0.6323025974062924, 0.6323025974062924] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 32]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [20, 3, 0]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(1, 20), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.6071999798719867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.6071999798719867, 0.652195255565497] ***
*** starting iteration: 2; err: [Inf, 2.6071999798719867, 0.652195255565497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.6071999798719867, 0.652195255565497, 0.28876775958578554] ***
*** starting iteration: 3; err: [Inf, 2.6071999798719867, 0.652195255565497, 0.28876775958578554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.6071999798719867, 0.652195255565497, 0.28876775958578554, 0.2771081820561023] ***
*** finished computation of 7 references, err: [Inf, 2.6071999798719867, 0.652195255565497, 0.28876775958578554, 0.2771081820561023] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6747000036061769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6747000036061769, 0.3494902124750004] ***
*** starting iteration: 2; err: [Inf, 0.6747000036061769, 0.3494902124750004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6747000036061769, 0.3494902124750004, 0.2820108275232548] ***
*** starting iteration: 3; err: [Inf, 0.6747000036061769, 0.3494902124750004, 0.2820108275232548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6747000036061769, 0.3494902124750004, 0.2820108275232548, 0.24064626410685006] ***
*** finished computation of 7 references, err: [Inf, 0.6747000036061769, 0.3494902124750004, 0.2820108275232548, 0.24064626410685006] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5259000003180618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259000003180618, 0.41653002915842147] ***
*** starting iteration: 2; err: [Inf, 0.5259000003180618, 0.41653002915842147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259000003180618, 0.41653002915842147, 0.3588348343005963] ***
*** starting iteration: 3; err: [Inf, 0.5259000003180618, 0.41653002915842147, 0.3588348343005963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5259000003180618, 0.41653002915842147, 0.3588348343005963, 0.3166739219189206] ***
*** finished computation of 7 references, err: [Inf, 0.5259000003180618, 0.41653002915842147, 0.3588348343005963, 0.3166739219189206] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 20, 11]]
** centroid: 4, normalized-entropy: 0.9383153522334071, [(2, 20), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0506470831486996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0506470831486996, 0.3641278828291862] ***
*** finished computation of 3 references, err: [Inf, 1.0506470831486996, 0.3641278828291862] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6385282791186105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6385282791186105, 0.384368104746393] ***
*** finished computation of 3 references, err: [Inf, 0.6385282791186105, 0.384368104746393] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 33]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7000201459154302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000201459154302, 0.49240646571485897] ***
*** finished computation of 3 references, err: [Inf, 0.7000201459154302, 0.49240646571485897] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 20]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(2, 36), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4181999979055901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4181999979055901, 0.5108980670676833] ***
*** finished computation of 3 references, err: [Inf, 1.4181999979055901, 0.5108980670676833] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 10]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.507299982703167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.507299982703167, 0.5103026355332245] ***
*** finished computation of 3 references, err: [Inf, 2.507299982703167, 0.5103026355332245] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.208700003157963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.208700003157963, 0.6180289270254308] ***
*** finished computation of 3 references, err: [Inf, 1.208700003157963, 0.6180289270254308] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 11]]
** centroid: 3, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4123999990737692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4123999990737692, 0.5108980670676833] ***
*** finished computation of 3 references, err: [Inf, 1.4123999990737692, 0.5108980670676833] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4651999983184112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4651999983184112, 0.5301544524272491] ***
*** finished computation of 3 references, err: [Inf, 1.4651999983184112, 0.5301544524272491] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2130000034591475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2130000034591475, 0.6180289270254308] ***
*** finished computation of 3 references, err: [Inf, 1.2130000034591475, 0.6180289270254308] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 11]]
** centroid: 3, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5456000045736686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5456000045736686, 0.26362824414813935] ***
*** starting iteration: 2; err: [Inf, 0.5456000045736686, 0.26362824414813935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5456000045736686, 0.26362824414813935, 0.24171815639999303] ***
*** starting iteration: 3; err: [Inf, 0.5456000045736686, 0.26362824414813935, 0.24171815639999303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5456000045736686, 0.26362824414813935, 0.24171815639999303, 0.237066666777889] ***
*** finished computation of 7 references, err: [Inf, 0.5456000045736686, 0.26362824414813935, 0.24171815639999303, 0.237066666777889] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 4]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6538000014567715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6538000014567715, 0.2662883571906145] ***
*** starting iteration: 2; err: [Inf, 0.6538000014567715, 0.2662883571906145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6538000014567715, 0.2662883571906145, 0.2305516926358948] ***
*** starting iteration: 3; err: [Inf, 0.6538000014567715, 0.2662883571906145, 0.2305516926358948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6538000014567715, 0.2662883571906145, 0.2305516926358948, 0.2245936603490776] ***
*** finished computation of 7 references, err: [Inf, 0.6538000014567715, 0.2662883571906145, 0.2305516926358948, 0.2245936603490776] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 1, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.565100001511439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.565100001511439, 0.2705027153646057] ***
*** starting iteration: 2; err: [Inf, 0.565100001511439, 0.2705027153646057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.565100001511439, 0.2705027153646057, 0.2678154414909375] ***
*** starting iteration: 3; err: [Inf, 0.565100001511439, 0.2705027153646057, 0.2678154414909375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.565100001511439, 0.2705027153646057, 0.2678154414909375, 0.2678154414909375] ***
*** finished computation of 7 references, err: [Inf, 0.565100001511439, 0.2705027153646057, 0.2678154414909375, 0.2678154414909375] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5078000056958163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5078000056958163, 0.2714555868548301] ***
*** finished computation of 7 references, err: [Inf, 0.5078000056958163, 0.2714555868548301] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 6]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 5), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 6]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 9), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6441999990374998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6441999990374998, 0.2553745704343481] ***
*** finished computation of 7 references, err: [Inf, 0.6441999990374998, 0.2553745704343481] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5445000090478463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5445000090478463, 0.24194248754001235] ***
*** finished computation of 7 references, err: [Inf, 0.5445000090478463, 0.24194248754001235] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5163000044306395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5163000044306395, 0.259312799489098] ***
*** starting iteration: 2; err: [Inf, 0.5163000044306395, 0.259312799489098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328] ***
*** starting iteration: 3; err: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244] ***
*** starting iteration: 4; err: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244, 0.23995712603489167] ***
*** starting iteration: 5; err: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244, 0.23995712603489167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244, 0.23995712603489167, 0.23942235133362977] ***
*** finished computation of 7 references, err: [Inf, 0.5163000044306395, 0.259312799489098, 0.24624731346143328, 0.2427539892587244, 0.23995712603489167, 0.23942235133362977] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5539000022291437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5539000022291437, 0.2841887698762005] ***
*** starting iteration: 2; err: [Inf, 0.5539000022291437, 0.2841887698762005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745] ***
*** starting iteration: 3; err: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745, 0.23984531559370464] ***
*** starting iteration: 4; err: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745, 0.23984531559370464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745, 0.23984531559370464, 0.2392538385929445] ***
*** finished computation of 7 references, err: [Inf, 0.5539000022291437, 0.2841887698762005, 0.25531700596931745, 0.23984531559370464, 0.2392538385929445] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5425000007108938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425000007108938, 0.27486083167899605] ***
*** starting iteration: 2; err: [Inf, 0.5425000007108938, 0.27486083167899605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752] ***
*** starting iteration: 3; err: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752, 0.23385267798795312] ***
*** starting iteration: 4; err: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752, 0.23385267798795312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752, 0.23385267798795312, 0.23385267798795312] ***
*** finished computation of 7 references, err: [Inf, 0.5425000007108938, 0.27486083167899605, 0.23882381073039752, 0.23385267798795312, 0.23385267798795312] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 21, 7]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46480000507999364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46480000507999364, 0.2831165957202767] ***
*** finished computation of 7 references, err: [Inf, 0.46480000507999364, 0.2831165957202767] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 4]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 8]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.605300001102426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.605300001102426, 0.264445999998281] ***
*** finished computation of 7 references, err: [Inf, 0.605300001102426, 0.264445999998281] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 2]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6263000045181767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000045181767, 0.24595410835390175] ***
*** finished computation of 7 references, err: [Inf, 0.6263000045181767, 0.24595410835390175] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 7]]
** centroid: 1, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6363000048051027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6363000048051027, 0.2641399429342735] ***
*** starting iteration: 2; err: [Inf, 0.6363000048051027, 0.2641399429342735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6363000048051027, 0.2641399429342735, 0.2397779709196596] ***
*** starting iteration: 3; err: [Inf, 0.6363000048051027, 0.2641399429342735, 0.2397779709196596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6363000048051027, 0.2641399429342735, 0.2397779709196596, 0.2375054474361181] ***
*** finished computation of 7 references, err: [Inf, 0.6363000048051027, 0.2641399429342735, 0.2397779709196596, 0.2375054474361181] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5581999989489455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5581999989489455, 0.25100315205301543] ***
*** starting iteration: 2; err: [Inf, 0.5581999989489455, 0.25100315205301543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5581999989489455, 0.25100315205301543, 0.24435901783039685] ***
*** starting iteration: 3; err: [Inf, 0.5581999989489455, 0.25100315205301543, 0.24435901783039685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5581999989489455, 0.25100315205301543, 0.24435901783039685, 0.2416480502871454] ***
*** finished computation of 7 references, err: [Inf, 0.5581999989489455, 0.25100315205301543, 0.24435901783039685, 0.2416480502871454] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5986000061601032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5986000061601032, 0.2635705306787518] ***
*** starting iteration: 2; err: [Inf, 0.5986000061601032, 0.2635705306787518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5986000061601032, 0.2635705306787518, 0.23545308679639593] ***
*** starting iteration: 3; err: [Inf, 0.5986000061601032, 0.2635705306787518, 0.23545308679639593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5986000061601032, 0.2635705306787518, 0.23545308679639593, 0.23386149125797318] ***
*** finished computation of 7 references, err: [Inf, 0.5986000061601032, 0.2635705306787518, 0.23545308679639593, 0.23386149125797318] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 22, 7]]
** centroid: 5, normalized-entropy: 0.7973265101474423, [(2, 22), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.428532754654031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.428532754654031, 0.19773828094095156] ***
*** starting iteration: 2; err: [Inf, 0.428532754654031, 0.19773828094095156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.428532754654031, 0.19773828094095156, 0.18078122832012983] ***
*** starting iteration: 3; err: [Inf, 0.428532754654031, 0.19773828094095156, 0.18078122832012983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.428532754654031, 0.19773828094095156, 0.18078122832012983, 0.1751977862706218] ***
*** finished computation of 7 references, err: [Inf, 0.428532754654031, 0.19773828094095156, 0.18078122832012983, 0.1751977862706218] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43300966850004485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43300966850004485, 0.18712345760448992] ***
*** starting iteration: 2; err: [Inf, 0.43300966850004485, 0.18712345760448992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43300966850004485, 0.18712345760448992, 0.16639905920285403] ***
*** starting iteration: 3; err: [Inf, 0.43300966850004485, 0.18712345760448992, 0.16639905920285403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43300966850004485, 0.18712345760448992, 0.16639905920285403, 0.15951080562764652] ***
*** finished computation of 7 references, err: [Inf, 0.43300966850004485, 0.18712345760448992, 0.16639905920285403, 0.15951080562764652] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36417690002749653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36417690002749653, 0.18110172965809024] ***
*** starting iteration: 2; err: [Inf, 0.36417690002749653, 0.18110172965809024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36417690002749653, 0.18110172965809024, 0.1664772819728751] ***
*** starting iteration: 3; err: [Inf, 0.36417690002749653, 0.18110172965809024, 0.1664772819728751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36417690002749653, 0.18110172965809024, 0.1664772819728751, 0.163391729883332] ***
*** finished computation of 7 references, err: [Inf, 0.36417690002749653, 0.18110172965809024, 0.1664772819728751, 0.163391729883332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 7]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.40549009481622245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40549009481622245, 0.1869323147763362] ***
*** finished computation of 7 references, err: [Inf, 0.40549009481622245, 0.1869323147763362] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 8]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42909688716133404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42909688716133404, 0.1893231993529228] ***
*** finished computation of 7 references, err: [Inf, 0.42909688716133404, 0.1893231993529228] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 5, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2976668593652182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2976668593652182, 0.18480140916150176] ***
*** finished computation of 7 references, err: [Inf, 0.2976668593652182, 0.18480140916150176] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 20]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 23, 6]]
** centroid: 5, normalized-entropy: 0.7355085815538399, [(2, 23), (3, 6)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 4.187400053205488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.187400053205488, 0.9731701601436044] ***
*** starting iteration: 2; err: [Inf, 4.187400053205488, 0.9731701601436044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.187400053205488, 0.9731701601436044, 0.9665618056319594] ***
*** starting iteration: 3; err: [Inf, 4.187400053205488, 0.9731701601436044, 0.9665618056319594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.187400053205488, 0.9731701601436044, 0.9665618056319594, 0.9659744880243778] ***
*** finished computation of 3 references, err: [Inf, 4.187400053205488, 0.9731701601436044, 0.9665618056319594, 0.9659744880243778] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 1, 0]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(1, 16), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 34]]
** centroid: 3, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.273100009261962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.273100009261962, 1.0471219539430927] ***
*** starting iteration: 2; err: [Inf, 3.273100009261962, 1.0471219539430927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682] ***
*** starting iteration: 3; err: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449] ***
*** starting iteration: 4; err: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449, 0.5058355539802215] ***
*** starting iteration: 5; err: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449, 0.5058355539802215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449, 0.5058355539802215, 0.5058355539802215] ***
*** finished computation of 3 references, err: [Inf, 3.273100009261962, 1.0471219539430927, 0.5855518979427682, 0.5154213982762449, 0.5058355539802215, 0.5058355539802215] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3626000157791305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678] ***
*** starting iteration: 2; err: [Inf, 1.3626000157791305, 0.9853777422733678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571] ***
*** starting iteration: 3; err: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777] ***
*** starting iteration: 4; err: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883] ***
*** starting iteration: 5; err: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883, 0.9406711770425695] ***
*** starting iteration: 6; err: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883, 0.9406711770425695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883, 0.9406711770425695, 0.939740248636246] ***
*** finished computation of 3 references, err: [Inf, 1.3626000157791305, 0.9853777422733678, 0.9645272132953571, 0.9473642685504777, 0.9423622098145883, 0.9406711770425695, 0.939740248636246] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 4, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 14), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 3, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1825969239361542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1825969239361542, 0.6154929981641674] ***
*** starting iteration: 2; err: [Inf, 1.1825969239361542, 0.6154929981641674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575] ***
*** starting iteration: 3; err: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575, 0.34779108621194227] ***
*** starting iteration: 4; err: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575, 0.34779108621194227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575, 0.34779108621194227, 0.34774531253075686] ***
*** finished computation of 3 references, err: [Inf, 1.1825969239361542, 0.6154929981641674, 0.40827416886566575, 0.34779108621194227, 0.34774531253075686] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 3, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5450518671547404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5450518671547404, 0.35862496374348474] ***
*** starting iteration: 2; err: [Inf, 0.5450518671547404, 0.35862496374348474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5450518671547404, 0.35862496374348474, 0.3571130650501966] ***
*** starting iteration: 3; err: [Inf, 0.5450518671547404, 0.35862496374348474, 0.3571130650501966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5450518671547404, 0.35862496374348474, 0.3571130650501966, 0.3569529213574684] ***
*** finished computation of 3 references, err: [Inf, 0.5450518671547404, 0.35862496374348474, 0.3571130650501966, 0.3569529213574684] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5640178897619641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5640178897619641, 0.39007219320119646] ***
*** starting iteration: 2; err: [Inf, 0.5640178897619641, 0.39007219320119646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5640178897619641, 0.39007219320119646, 0.38897430221609397] ***
*** starting iteration: 3; err: [Inf, 0.5640178897619641, 0.39007219320119646, 0.38897430221609397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5640178897619641, 0.39007219320119646, 0.38897430221609397, 0.3885509766395161] ***
*** finished computation of 3 references, err: [Inf, 0.5640178897619641, 0.39007219320119646, 0.38897430221609397, 0.3885509766395161] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 7]]
** centroid: 2, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.9, 0.8999999999999999, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2), 0.9733333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.051515151515151, 3.4303030303030306, 1.5, 0.24848484848484853], [7.633333333333334, 3.0, 6.516666666666667, 2.1333333333333333], [5.76, 2.84, 4.5600000000000005, 1.52], [5.633333333333333, 2.5666666666666664, 4.933333333333334, 1.8333333333333333], [6.499999999999999, 2.9444444444444446, 4.644444444444444, 1.4444444444444444], [6.266666666666667, 2.8000000000000003, 5.1499999999999995, 1.75], [6.65, 3.15, 5.720000000000001, 2.26], [5.6071428571428585, 2.642857142857143, 3.885714285714286, 1.2142857142857142], [4.4, 2.766666666666667, 1.2333333333333334, 0.20000000000000004]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.93448275862069, 3.3241379310344827, 1.4724137931034482, 0.23448275862068974], [7.639999999999999, 3.3, 6.42, 2.08], [5.675, 2.7750000000000004, 4.15, 1.2750000000000001], [5.25, 2.65, 4.7, 1.85], [6.307142857142858, 2.9071428571428575, 4.628571428571428, 1.4714285714285715], [6.06, 2.7600000000000002, 5.07, 1.8199999999999998], [5.466666666666668, 2.4, 3.5500000000000003, 1.0333333333333334], [5.475, 3.9750000000000005, 1.5, 0.35], [6.666666666666668, 3.1166666666666667, 5.5888888888888895, 2.1222222222222222]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.576923076923077, 2.9769230769230766, 4.7153846153846155, 1.4846153846153847], [6.271428571428571, 2.914285714285714, 5.042857142857144, 1.8714285714285717], [4.81, 3.255, 1.4249999999999998, 0.22500000000000003], [5.325, 2.3375, 3.5625, 1.0375], [7.6, 2.9799999999999995, 6.480000000000001, 2.0], [5.409090909090909, 3.9000000000000004, 1.4545454545454546, 0.26363636363636367], [6.466666666666666, 3.1333333333333333, 5.666666666666667, 2.2666666666666666], [5.8928571428571415, 2.864285714285714, 4.364285714285714, 1.342857142857143], [5.8999999999999995, 2.566666666666667, 4.933333333333334, 1.7666666666666666]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2))]
[49, 23, 1, 3, 1, 1, 15, 31, 3, 31, 1, 26, 41, 12, 14, 21, 28, 32, 19, 34, 5, 14, 25, 26, 32, 21, 32, 30, 46, 2, 43, 24, 26, 38, 29, 1, 46, 15, 43, 34, 20, 27, 25, 13, 37, 17, 22, 22, 44, 1, 32, 30, 37, 28, 29, 16, 33, 10, 39, 15, 25, 40, 39, 38, 65, 61, 53, 28, 39, 37, 34, 34, 27, 20, 36, 2, 28, 27, 14, 39, 24, 39, 36, 43, 36, 44, 39, 41, 51, 55, 24, 24, 50, 18, 22, 1, 24, 55, 36, 23, 35, 17, 51, 49, 51, 37, 25, 28, 47, 40, 32, 22, 18, 18, 21, 26, 33, 9, 42, 36, 49, 25, 24, 58, 31, 14, 30, 33, 17, 43, 50, 25, 30, 31, 49, 43, 15, 48, 36, 11, 40, 42, 37, 34, 30, 30, 25, 43, 22, 33, 26, 20, 41, 25, 43, 90, 34, 4, 48, 46, 21, 44, 38, 31, 26, 19, 27, 57, 62, 37, 27, 44, 44, 30, 25, 34, 46, 39, 31, 37, 38, 40, 66, 43, 40, 63, 59, 49, 44, 35, 25, 30, 36, 19, 52, 34, 27, 30, 39, 48, 36, 31, 42, 27, 29, 1, 37, 40, 22, 19, 41, 33, 34, 34, 21, 45, 27, 53, 28, 65, 50, 2, 50, 34, 45, 44, 35, 33, 47, 1, 23, 45, 37, 38, 50, 37, 39, 40, 52, 16, 33, 18, 37, 46, 30, 31, 2, 33, 30, 56, 1, 22, 50, 33, 30, 83, 48, 51, 43, 50, 47, 30, 55, 39, 21, 49, 59, 52, 30, 32, 55, 30, 21, 34, 38, 36, 24, 36, 34, 39, 30, 53, 28, 48, 38, 40, 42, 49, 35, 43, 42, 39, 44, 22, 39, 50, 39, 42, 39, 33]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.582, speedup = 0.3781140637048461, eval_ratio = 0.041814)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.36892361111111144,"recall":0.36892361111111144,"f1":null,"seconds":6.537139415740967e-5,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":338.34375,"distances_sum":1780.4706821253899}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5520833333333334,"recall":0.5520833333333334,"f1":0.5520833333333334,"seconds":8.068233728408813e-5,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":377.8046875,"distances_sum":1644.2670829083065}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6614583333333335,"recall":0.6614583333333335,"f1":0.6614583333333335,"seconds":0.00013010576367378235,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":417.0390625,"distances_sum":1599.0538005628991}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7404513888888886,"recall":0.7404513888888886,"f1":0.7404513888888886,"seconds":0.00016253069043159485,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":456.21875,"distances_sum":1570.1700791661124}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7864583333333328,"recall":0.7864583333333328,"f1":0.7864583333333328,"seconds":0.00018951110541820526,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":497.28125,"distances_sum":1557.7563318034731}
KCenters.DeloneInvIndex> reached performance {"precision":0.8272569444444435,"recall":0.8272569444444435,"f1":0.8272569444444435,"seconds":0.00022299401462078094,"exhaustive_search_seconds":0.0003426969051361084,"evaluations":536.640625,"distances_sum":1548.9359404212616}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7530000000000001, speedup = 1.645648455903708, eval_ratio = 0.053776)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
