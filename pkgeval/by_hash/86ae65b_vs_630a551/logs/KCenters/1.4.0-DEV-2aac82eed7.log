Julia Version 1.4.0-DEV.630
Commit 2aac82eed7 (2019-12-17 21:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Tables ────────────────────── v0.2.11
 Installed StatsBase ─────────────────── v0.32.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Reexport ──────────────────── v0.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed OrderedCollections ────────── v1.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MLLabelUtils ──────────────── v0.5.1
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_M1a1hY/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_M1a1hY/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_M1a1hY/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.33000000000004
[ Info: 75.75999999999996
[ Info: 43.209999999999994
[ Info: 25.679999999999996
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.80000116067464
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.043383246797177
inertia(cdnet.distances) = 25.230600397268127
inertia(crand.distances) = 23.88509462538191
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":1.989305019378662e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.9453125,"distances_sum":650.6015544003841}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8422998876123884,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5546875,"distances_sum":2203.5374760518457}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8422998876123884,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5546875,"distances_sum":2203.5374760518457}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501835,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9609375,"distances_sum":3134.1829949488297}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501835,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9609375,"distances_sum":3134.1829949488297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751888736263741,"seconds":3.5744160413742065e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9921875,"distances_sum":3188.5419299796613}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.984375,"distances_sum":3255.595865711477}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.984375,"distances_sum":3255.595865711477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.984375,"distances_sum":3255.595865711477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":2.464279532432556e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":6.03125,"distances_sum":997.2474977995055}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6866381882006888,"seconds":2.7455389499664307e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":7.1171875,"distances_sum":1433.415670039594}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7984258796758804,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":7.8203125,"distances_sum":1839.9906796018124}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7984258796758804,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":7.8203125,"distances_sum":1839.9906796018124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9097043581418589,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.53125,"distances_sum":2532.117174157377}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9348531676656682,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.59375,"distances_sum":2740.279915015857}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8991680194805203,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.390625,"distances_sum":2470.750736518015}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9348531676656682,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.59375,"distances_sum":2740.279915015857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743875915750919,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.953125,"distances_sum":3016.232093739244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9741872710622713,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.8828125,"distances_sum":3059.6347714465096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073265,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.8828125,"distances_sum":3017.3874845171576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513679029304036,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.7109375,"distances_sum":2913.960479781659}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741872710622713,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.8828125,"distances_sum":3059.6347714465096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741872710622713,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":8.67992639541626e-7,"evaluations":8.8828125,"distances_sum":3059.6347714465096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4990234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4990234375,"f1":0.6480873293373298,"seconds":2.639368176460266e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":6.828125,"distances_sum":1323.2114044908506}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3427734375,"f1":null,"seconds":2.0619481801986694e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":5.2109375,"distances_sum":933.3191716980268}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8394641816516826,"seconds":3.2186508178710938e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.0234375,"distances_sum":2118.3795484282628}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8394641816516826,"seconds":3.2186508178710938e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.0234375,"distances_sum":2118.3795484282628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9044648060273068,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.3984375,"distances_sum":2438.1569501517565}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9313192016317021,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.578125,"distances_sum":2624.059318008876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947773580586081,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.6640625,"distances_sum":2759.4247362092456}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.8992216117216125,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.453125,"distances_sum":2410.8093352434444}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947773580586081,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.6640625,"distances_sum":2759.4247362092456}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.859375,"distances_sum":2871.3306242512726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970203754578755,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.875,"distances_sum":2887.8326226255317}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9549736721611728,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.8125,"distances_sum":2765.8672921934367}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970203754578755,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.875,"distances_sum":2887.8326226255317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970203754578755,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":9.909272193908691e-7,"evaluations":8.875,"distances_sum":2887.8326226255317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7058288933288938,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":7.5859375,"distances_sum":1451.8896502457908}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.734233648296149,"seconds":2.9206275939941406e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":7.8984375,"distances_sum":1539.5524582519222}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5986328125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5986328125,"f1":0.734233648296149,"seconds":2.9206275939941406e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":7.8984375,"distances_sum":1539.5524582519222}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9364385614385619,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.671875,"distances_sum":2620.010414272061}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9364385614385619,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.671875,"distances_sum":2620.010414272061}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576751373626377,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.8671875,"distances_sum":2834.7685257331214}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633928571428576,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.8828125,"distances_sum":2833.754076606881}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451522435897443,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.8359375,"distances_sum":2708.0225500191264}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633928571428576,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.8828125,"distances_sum":2833.754076606881}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9633928571428576,"seconds":3.827735781669617e-6,"exhaustive_search_seconds":9.778887033462524e-7,"evaluations":8.8828125,"distances_sum":2833.754076606881}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7223973942723949,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.8828125,"distances_sum":1498.6475608584785}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":2.2444874048233032e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.0234375,"distances_sum":521.5792061514749}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7223973942723949,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.8828125,"distances_sum":1498.6475608584785}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9417124542124546,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.890625,"distances_sum":2703.3216173833193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8621430652680661,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.6796875,"distances_sum":2165.895051995059}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8271468115218124,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.3203125,"distances_sum":1955.248170471364}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9417124542124546,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.890625,"distances_sum":2703.3216173833193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609603937728941,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2880.1470329887106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.946920787545788,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.8828125,"distances_sum":2757.19367013585}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9609603937728941,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2880.1470329887106}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9609603937728941,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.9140625,"distances_sum":2880.1470329887106}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5576171875,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.359375,"distances_sum":1440.0343510765483}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5576171875,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.359375,"distances_sum":1440.0343510765483}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8122986388611397,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.046875,"distances_sum":1842.699053696129}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8988069222444232,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.421875,"distances_sum":2285.847203269362}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8953442390942399,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.453125,"distances_sum":2295.5548658938988}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8988069222444232,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.421875,"distances_sum":2285.847203269362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9447458791208798,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.7421875,"distances_sum":2704.341094715295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659626831501835,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8828125,"distances_sum":2827.1200626404943}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546531593406599,"seconds":7.015466690063477e-5,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8046875,"distances_sum":2746.9103904901813}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659626831501835,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8828125,"distances_sum":2827.1200626404943}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9659626831501835,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8828125,"distances_sum":2827.1200626404943}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8588565947940957,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.7265625,"distances_sum":1635.5207444615503}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":2.3599714040756226e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":6.9609375,"distances_sum":782.0713738699841}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8592553280053289,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.5859375,"distances_sum":1599.523705808422}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8588565947940957,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.7265625,"distances_sum":1635.5207444615503}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9080018939393949,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.8203125,"distances_sum":1830.259232693439}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9319310897435904,"seconds":3.5762786865234375e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.875,"distances_sum":1963.5146257312404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168504,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.9375,"distances_sum":2219.07723295007}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168504,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.9375,"distances_sum":2219.07723295007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.953125,"distances_sum":2228.4632308649952}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.953125,"distances_sum":2228.4632308649952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.953125,"distances_sum":2228.4632308649952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4599609375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4599609375,"f1":null,"seconds":2.2388994693756104e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":6.0546875,"distances_sum":883.3992014144211}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8627804487179496,"seconds":3.3136457204818726e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.234375,"distances_sum":1528.085293799153}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":2.173706889152527e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":5.921875,"distances_sum":755.2447360757442}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":2.553686499595642e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":6.8671875,"distances_sum":1044.9178807155154}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8627804487179496,"seconds":3.3136457204818726e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.234375,"distances_sum":1528.085293799153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8914033882783889,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.5625,"distances_sum":1645.0444883983635}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522378663003668,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.8203125,"distances_sum":2029.3151016511536}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9231747419247427,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.7890625,"distances_sum":1833.6359867808899}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.928823780386281,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.7265625,"distances_sum":1895.3270068673535}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9149896978021986,"seconds":3.160908818244934e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.671875,"distances_sum":1792.7833771629869}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9055746336996344,"seconds":3.125518560409546e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.609375,"distances_sum":1743.1913863072243}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9522378663003668,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.8203125,"distances_sum":2029.3151016511536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633705,"seconds":3.3043324947357178e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.8671875,"distances_sum":2125.3592466465966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9778273809523814,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.96875,"distances_sum":2158.7892654201023}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783882783882787,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9453125,"distances_sum":2196.0595748755013}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552312271062273,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.8359375,"distances_sum":2042.2214790143664}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549454,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9609375,"distances_sum":2203.5405608384926}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629521520146526,"seconds":3.375113010406494e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.8984375,"distances_sum":2089.2625660683384}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9779761904761908,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9296875,"distances_sum":2195.4376428397322}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972435897435898,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.96875,"distances_sum":2134.937704582237}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644691,"seconds":3.3676624298095703e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9453125,"distances_sum":2128.297876999378}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549454,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9609375,"distances_sum":2203.5405608384926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549454,"seconds":3.3620744943618774e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":8.9609375,"distances_sum":2203.5405608384926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.52734375,"f1":0.6755249958374964,"seconds":2.4884939193725586e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":6.9921875,"distances_sum":1111.46992080919}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7715976731601737,"seconds":2.8274953365325928e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":7.4140625,"distances_sum":1436.7733176775425}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4853515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.4853515625,"f1":0.6356428293928297,"seconds":2.4475157260894775e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":6.5234375,"distances_sum":1040.909404109048}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7715976731601737,"seconds":2.8274953365325928e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":7.4140625,"distances_sum":1436.7733176775425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8437942266067273,"seconds":3.3061951398849487e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.171875,"distances_sum":1610.7151100075037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8906655844155852,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.5234375,"distances_sum":1840.9456118410994}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358688186813193,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.6484375,"distances_sum":2105.472224475403}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9358688186813193,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.6484375,"distances_sum":2105.472224475403}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464743589743595,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.765625,"distances_sum":2152.7300116274273}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652186355311358,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.875,"distances_sum":2250.5476867118646}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589514652014655,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.828125,"distances_sum":2224.271199961618}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9484260531135538,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.8125,"distances_sum":2155.932590231347}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9432952464202469,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.78125,"distances_sum":2143.8877851549164}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652186355311358,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.875,"distances_sum":2250.5476867118646}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652186355311358,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":7.897615432739258e-7,"evaluations":8.875,"distances_sum":2250.5476867118646}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.447265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.447265625,"f1":0.5905629093129093,"seconds":2.3599714040756226e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.8203125,"distances_sum":951.1707281561991}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8136150308025315,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.0859375,"distances_sum":1463.8620387449562}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8136150308025315,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.0859375,"distances_sum":1463.8620387449562}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580070970695974,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8828125,"distances_sum":2213.5295527745584}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580070970695974,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8828125,"distances_sum":2213.5295527745584}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706501831501835,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.953125,"distances_sum":2287.155515371714}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967788461538462,"seconds":3.5855919122695923e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.984375,"distances_sum":2243.485417287456}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706501831501835,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.953125,"distances_sum":2287.155515371714}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706501831501835,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.953125,"distances_sum":2287.155515371714}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8491586538461547,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.125,"distances_sum":1670.8699744276546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7872299575424583,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.8046875,"distances_sum":1405.5478230623862}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8491586538461547,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.125,"distances_sum":1670.8699744276546}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8534954628704637,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.1953125,"distances_sum":1698.3610007503783}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9025691322566329,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.6796875,"distances_sum":1936.5403770154323}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9025691322566329,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.6796875,"distances_sum":1936.5403770154323}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636561355311359,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9453125,"distances_sum":2297.260512931511}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623511904761908,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.984375,"distances_sum":2294.2148108351007}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648294413919418,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9609375,"distances_sum":2329.784589114255}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9648294413919418,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9609375,"distances_sum":2329.784589114255}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9648294413919418,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9609375,"distances_sum":2329.784589114255}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4521484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4521484375,"f1":null,"seconds":2.123415470123291e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":6.6875,"distances_sum":871.381119506031}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4521484375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4521484375,"f1":null,"seconds":2.123415470123291e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":6.6875,"distances_sum":871.381119506031}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8540501165501175,"seconds":2.9616057872772217e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.109375,"distances_sum":1628.8154023729428}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6974452630702637,"seconds":2.51084566116333e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":7.078125,"distances_sum":1095.1659970484825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9062099358974366,"seconds":3.2335519790649414e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.4453125,"distances_sum":1869.0230812263437}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8586918290043299,"seconds":2.941116690635681e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":7.9765625,"distances_sum":1679.8585596347145}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4560546875, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.4560546875,"f1":null,"seconds":2.3636966943740845e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":6.609375,"distances_sum":847.0418266828882}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8626087454212463,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.0546875,"distances_sum":1652.8898101899908}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9062099358974366,"seconds":3.2335519790649414e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.4453125,"distances_sum":1869.0230812263437}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638621794871798,"seconds":3.3490359783172607e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.90625,"distances_sum":2268.3962700552734}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607200091575095,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.8828125,"distances_sum":2241.520634904585}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062276,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.9296875,"distances_sum":2272.6236808083186}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.918821803196804,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.578125,"distances_sum":1960.9988839421032}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522951007326013,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.8046875,"distances_sum":2201.3904211523127}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9342548076923084,"seconds":3.291293978691101e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.6171875,"distances_sum":2062.7839478833694}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9160917207792213,"seconds":3.2335519790649414e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.59375,"distances_sum":1935.2181903253788}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661687271062276,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.9296875,"distances_sum":2272.6236808083186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661687271062276,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.9296875,"distances_sum":2272.6236808083186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4072265625,"f1":0.5525987900987901,"seconds":1.993030309677124e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":5.859375,"distances_sum":856.3670385017215}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":1.7192214727401733e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":5.6640625,"distances_sum":487.5957243215422}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4072265625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4072265625,"f1":0.5525987900987901,"seconds":1.993030309677124e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":5.859375,"distances_sum":856.3670385017215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8870941558441566,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.6796875,"distances_sum":1813.1900764381005}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7733129717504726,"seconds":2.678483724594116e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":7.671875,"distances_sum":1439.8039612123816}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8663206585081593,"seconds":2.995133399963379e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.46875,"distances_sum":1726.7507187050692}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8870941558441566,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.6796875,"distances_sum":1813.1900764381005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9439846611721614,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.8203125,"distances_sum":2176.5964747040707}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972527472527473,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.921875,"distances_sum":2354.4253297326172}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9186183608058613,"seconds":3.257766366004944e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.7734375,"distances_sum":2017.0716511464268}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972527472527473,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.921875,"distances_sum":2354.4253297326172}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972527472527473,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":7.748603820800781e-7,"evaluations":8.921875,"distances_sum":2354.4253297326172}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8537124333999342,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":7.9765625,"distances_sum":1639.0285927212715}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":2.119690179824829e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":6.296875,"distances_sum":806.8361194797707}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8537124333999342,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":7.9765625,"distances_sum":1639.0285927212715}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8957193847818854,"seconds":3.2186508178710938e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.4453125,"distances_sum":1867.5525283875404}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9462168040293046,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.796875,"distances_sum":2112.6424780253506}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9132783882783889,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.5234375,"distances_sum":1904.3310021142613}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9462168040293046,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.796875,"distances_sum":2112.6424780253506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9507331210456216,"seconds":3.676861524581909e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.8125,"distances_sum":2190.9119272205244}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968343635531136,"seconds":3.548339009284973e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.9140625,"distances_sum":2277.4866065242813}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540407509157511,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.875,"distances_sum":2184.131980644585}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9471497252747259,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.78125,"distances_sum":2166.892517179812}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968343635531136,"seconds":3.548339009284973e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.9140625,"distances_sum":2277.4866065242813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968343635531136,"seconds":3.548339009284973e-6,"exhaustive_search_seconds":9.126961231231689e-7,"evaluations":8.9140625,"distances_sum":2277.4866065242813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":2.5760382413864136e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":6.1640625,"distances_sum":757.8217636883313}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7779019591519598,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.3046875,"distances_sum":1380.4094954516102}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7779019591519598,"seconds":3.166496753692627e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.3046875,"distances_sum":1380.4094954516102}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.838554154179155,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.890625,"distances_sum":1560.069022767774}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9038123334998343,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.1796875,"distances_sum":1936.5975925431715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9406879578754583,"seconds":3.91155481338501e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.78125,"distances_sum":2183.5317956572535}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9406879578754583,"seconds":3.91155481338501e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.78125,"distances_sum":2183.5317956572535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498054029304034,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.7734375,"distances_sum":2236.775028296671}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9498054029304034,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.7734375,"distances_sum":2236.775028296671}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9498054029304034,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.7734375,"distances_sum":2236.775028296671}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":2.0917505025863647e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":5.5078125,"distances_sum":571.1236523494017}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8355295745920754,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.796875,"distances_sum":1568.1107752809446}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.462416887283325e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":5.71875,"distances_sum":721.0585214018126}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7689841408591417,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.0234375,"distances_sum":1299.8251695731306}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8355295745920754,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.796875,"distances_sum":1568.1107752809446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9188072344322352,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.6484375,"distances_sum":2017.0581961319251}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495020604395611,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.78125,"distances_sum":2232.7046677133294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8472647144522154,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.9140625,"distances_sum":1599.1848471677172}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9379006410256415,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.703125,"distances_sum":2176.5147312048434}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8426458957708967,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":7.921875,"distances_sum":1570.450797380096}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9495020604395611,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.78125,"distances_sum":2232.7046677133294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520718864468871,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.796875,"distances_sum":2236.9372759638563}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629521520146523,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.875,"distances_sum":2300.142719707881}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960983287545788,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.765625,"distances_sum":2315.6173866688337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8828125,"distances_sum":2339.068214566707}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653159340659343,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8203125,"distances_sum":2335.049346832779}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962728937728938,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8203125,"distances_sum":2313.268114803263}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8828125,"distances_sum":2339.068214566707}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704842032967038,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":9.5367431640625e-7,"evaluations":8.8828125,"distances_sum":2339.068214566707}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8473110223110231,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.671875,"distances_sum":1645.3464300592543}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6772586788211794,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.96875,"distances_sum":1042.6383167093677}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8473110223110231,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.671875,"distances_sum":1645.3464300592543}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9566907051282053,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2202.332491849456}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9241217116217123,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2033.1678163842994}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9566907051282053,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8671875,"distances_sum":2202.332491849456}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809527,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.96875,"distances_sum":2330.1024330569467}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705586080586084,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2277.2601800265693}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527478,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2238.4603429451527}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700148809523814,"seconds":1.1801719665527344e-5,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2275.3933965504743}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":1.1578202247619629e-5,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2302.5039570349654}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809527,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.96875,"distances_sum":2330.1024330569467}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809527,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.96875,"distances_sum":2330.1024330569467}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8011015026640035,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.140625,"distances_sum":1367.9451437093182}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.71875,"distances_sum":717.656951602285}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8011015026640035,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.140625,"distances_sum":1367.9451437093182}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8024626415251422,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.1484375,"distances_sum":1375.1880682153399}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9405048076923084,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.734375,"distances_sum":2129.2777992323663}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8337839244089251,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.6953125,"distances_sum":1541.6193696932955}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.882323926073927,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.2421875,"distances_sum":1785.849674159169}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8500411047286054,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.65625,"distances_sum":1573.5003298834115}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8475077006327013,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.7109375,"distances_sum":1571.0222182175191}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9405048076923084,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.734375,"distances_sum":2129.2777992323663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487236721611727,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7421875,"distances_sum":2155.957086163815}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9784970238095239,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9296875,"distances_sum":2303.6946975643423}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433722527472532,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.65625,"distances_sum":2150.2124880654874}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9549736721611728,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7265625,"distances_sum":2218.1526876378944}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419929029304035,"seconds":3.4067779779434204e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7734375,"distances_sum":2096.6164177345127}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9784970238095239,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9296875,"distances_sum":2303.6946975643423}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9784970238095239,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9296875,"distances_sum":2303.6946975643423}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":2.1811574697494507e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":5.9453125,"distances_sum":742.6103561177972}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4287109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4287109375,"f1":null,"seconds":2.1811574697494507e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":5.9453125,"distances_sum":742.6103561177972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8483941405816414,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":7.8203125,"distances_sum":1555.724309290455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7690710331335338,"seconds":2.902001142501831e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":7.1171875,"distances_sum":1225.7741386110997}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8376614704739714,"seconds":3.073364496231079e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":7.8359375,"distances_sum":1539.348177367771}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6857881701631706,"seconds":2.766028046607971e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":6.5234375,"distances_sum":995.6899753205068}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7155273545898552,"seconds":2.5331974029541016e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":6.7109375,"distances_sum":1097.5813451615395}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7107279872904877,"seconds":2.60770320892334e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":6.5859375,"distances_sum":1086.1138826783783}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.796256868131869,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":7.34375,"distances_sum":1384.2092460744443}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8483941405816414,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":7.8203125,"distances_sum":1555.724309290455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9242647977022987,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.8203125,"distances_sum":1954.818890277461}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432380119880127,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.703125,"distances_sum":2124.8242247722055}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9190106768231775,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.6875,"distances_sum":1965.5877757408782}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9226476648351655,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.75,"distances_sum":1954.0894355881464}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9432380119880127,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.703125,"distances_sum":2124.8242247722055}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9432380119880127,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":8.437782526016235e-7,"evaluations":8.703125,"distances_sum":2124.8242247722055}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7835846445221455,"seconds":3.0212104320526123e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":6.9375,"distances_sum":1277.2646621504596}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7009481837606841,"seconds":2.6598572731018066e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":6.4140625,"distances_sum":1043.5789649005378}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8375645188145197,"seconds":3.2242387533187866e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":7.5859375,"distances_sum":1573.450908975747}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8375645188145197,"seconds":3.2242387533187866e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":7.5859375,"distances_sum":1573.450908975747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8959082584082592,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.34375,"distances_sum":1825.7304595597193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460622710622716,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.7578125,"distances_sum":2154.9703188084945}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9476648351648358,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.671875,"distances_sum":2175.892103121311}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9180777555777562,"seconds":3.824010491371155e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.6484375,"distances_sum":1967.7499399976937}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9476648351648358,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.671875,"distances_sum":2175.892103121311}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633702,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8828125,"distances_sum":2249.460869795378}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519116300366306,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8203125,"distances_sum":2162.316575392422}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9547275641025647,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8359375,"distances_sum":2181.872644802263}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443229,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8671875,"distances_sum":2208.521322394358}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560096153846159,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8515625,"distances_sum":2174.558904053467}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633702,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8828125,"distances_sum":2249.460869795378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633702,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":9.313225746154785e-7,"evaluations":8.8828125,"distances_sum":2249.460869795378}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8038940226440234,"seconds":5.7736411690711975e-5,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.203125,"distances_sum":1410.9133423397313}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8038940226440234,"seconds":5.7736411690711975e-5,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.203125,"distances_sum":1410.9133423397313}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9197349525474533,"seconds":3.3546239137649536e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.6171875,"distances_sum":1996.7758598381245}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436641483516489,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.6953125,"distances_sum":2150.9343952864097}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9436641483516489,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.6953125,"distances_sum":2150.9343952864097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":3.7103891372680664e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.9140625,"distances_sum":2284.4784805070963}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547676282051285,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.7734375,"distances_sum":2200.2031143134755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527478,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.8671875,"distances_sum":2241.2980306259547}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216123,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.7890625,"distances_sum":2242.55981870714}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":3.7103891372680664e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.9140625,"distances_sum":2284.4784805070963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":3.7103891372680664e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.9140625,"distances_sum":2284.4784805070963}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":2.1383166313171387e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":6.0234375,"distances_sum":781.4872120158457}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7848361707736714,"seconds":2.8796494007110596e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.265625,"distances_sum":1343.9856045603706}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7848361707736714,"seconds":2.8796494007110596e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.265625,"distances_sum":1343.9856045603706}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8528533966033974,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.9296875,"distances_sum":1586.2241930815865}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9497252747252753,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.8046875,"distances_sum":2192.5700936701955}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9497252747252753,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.8046875,"distances_sum":2192.5700936701955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672447344322349,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.9296875,"distances_sum":2278.647845099781}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565705128205132,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.8828125,"distances_sum":2204.7323636109923}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672447344322349,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.9296875,"distances_sum":2278.647845099781}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672447344322349,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.9296875,"distances_sum":2278.647845099781}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":2.078711986541748e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":5.7421875,"distances_sum":702.6446566839653}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.686954538517039,"seconds":2.382323145866394e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":6.5390625,"distances_sum":1042.0379327120265}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":2.0693987607955933e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":5.7890625,"distances_sum":720.8658840552894}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8548826173826183,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":7.9765625,"distances_sum":1659.7624494731185}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8548826173826183,"seconds":3.1013041734695435e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":7.9765625,"distances_sum":1659.7624494731185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953059440559441,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.8046875,"distances_sum":2209.55109457037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9129240551115557,"seconds":3.2801181077957153e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.609375,"distances_sum":1994.0885959536238}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9338458416583421,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.78125,"distances_sum":2081.1572206673836}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.953059440559441,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.8046875,"distances_sum":2209.55109457037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644917582417584,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.8828125,"distances_sum":2262.646308539374}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644917582417584,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.8828125,"distances_sum":2262.646308539374}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644917582417584,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":8.121132850646973e-7,"evaluations":8.8828125,"distances_sum":2262.646308539374}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.427734375,"f1":0.5775564713064716,"seconds":2.030283212661743e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":6.0625,"distances_sum":740.884481400452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.848481206293707,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":7.9765625,"distances_sum":1539.8643820211269}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.839882513320014,"seconds":2.987682819366455e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":7.875,"distances_sum":1548.8711242956433}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.848481206293707,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":7.9765625,"distances_sum":1539.8643820211269}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087919,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.7890625,"distances_sum":2156.526340907625}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9490212912087919,"seconds":3.4347176551818848e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.7890625,"distances_sum":2156.526340907625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645318223443228,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.8671875,"distances_sum":2229.3110190693037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560441,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.9140625,"distances_sum":2262.101711786737}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649610805860809,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.8828125,"distances_sum":2228.9075263754767}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9576522435897443,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.7578125,"distances_sum":2211.5538261190236}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720810439560441,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.9140625,"distances_sum":2262.101711786737}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720810439560441,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":7.80448317527771e-7,"evaluations":8.9140625,"distances_sum":2262.101711786737}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7957870254745263,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":7.234375,"distances_sum":1423.485776306865}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":2.3543834686279297e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":5.7421875,"distances_sum":654.5327537897385}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6794405247530254,"seconds":2.602115273475647e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":6.4296875,"distances_sum":1084.5911950382113}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8240998584748592,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":7.7109375,"distances_sum":1538.5079583197721}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8240998584748592,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":7.7109375,"distances_sum":1538.5079583197721}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8949326714951723,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.3828125,"distances_sum":1876.2204467214121}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9417467948717955,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.71875,"distances_sum":2188.094657992784}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405620421245426,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.71875,"distances_sum":2174.8776046340295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8534408300033309,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":7.9921875,"distances_sum":1665.5513813587731}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9417467948717955,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.71875,"distances_sum":2188.094657992784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626373626373629,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.8828125,"distances_sum":2268.0468452482396}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.977140567765568,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.9375,"distances_sum":2356.2160278049023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9474587912087916,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.796875,"distances_sum":2201.6348823798835}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764709249084252,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.9609375,"distances_sum":2344.0743271546903}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454498626373632,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.7265625,"distances_sum":2197.369986505178}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570741758241763,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.8984375,"distances_sum":2231.710005904189}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977140567765568,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.9375,"distances_sum":2356.2160278049023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977140567765568,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":9.294599294662476e-7,"evaluations":8.9375,"distances_sum":2356.2160278049023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":2.2333115339279175e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":5.9375,"distances_sum":767.2588238118029}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6901345182595187,"seconds":2.553686499595642e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":6.3828125,"distances_sum":1000.1862761022937}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6901345182595187,"seconds":2.553686499595642e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":6.3828125,"distances_sum":1000.1862761022937}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7022673507048514,"seconds":2.555549144744873e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":6.4609375,"distances_sum":1098.018829041304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.830019286269287,"seconds":3.3061951398849487e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":7.75,"distances_sum":1483.245790558263}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9089858058608066,"seconds":3.552064299583435e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.390625,"distances_sum":1880.6128873553869}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9089858058608066,"seconds":3.552064299583435e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.390625,"distances_sum":1880.6128873553869}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9508470695970701,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.765625,"distances_sum":2181.0368606424313}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9624484890109892,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.9296875,"distances_sum":2206.2809942566864}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636046245421249,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.8828125,"distances_sum":2228.8855562438803}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9231086621711627,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.6328125,"distances_sum":2019.158132633427}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9393486721611728,"seconds":3.5278499126434326e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.8125,"distances_sum":2093.553565795076}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9636046245421249,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.8828125,"distances_sum":2228.8855562438803}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9636046245421249,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":9.462237358093262e-7,"evaluations":8.8828125,"distances_sum":2228.8855562438803}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7842643467643474,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":7.3515625,"distances_sum":1340.325211006696}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7887877747252756,"seconds":2.682209014892578e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":7.28125,"distances_sum":1388.626864537943}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8451590076590085,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":7.9609375,"distances_sum":1536.0191880431414}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8451590076590085,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":7.9609375,"distances_sum":1536.0191880431414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9263335622710629,"seconds":3.4049153327941895e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.78125,"distances_sum":2010.172575541962}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9026561979686987,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.2421875,"distances_sum":1853.0678751394428}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604567307692311,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.9140625,"distances_sum":2193.760330112266}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604567307692311,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.9140625,"distances_sum":2193.760330112266}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.972155448717949,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.8984375,"distances_sum":2288.3681211897547}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972155448717949,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.8984375,"distances_sum":2288.3681211897547}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972155448717949,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":8.21426510810852e-7,"evaluations":8.8984375,"distances_sum":2288.3681211897547}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2451171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":1.7881393432617188e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":5.40625,"distances_sum":479.60776026104634}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2451171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":1.7881393432617188e-6,"exhaustive_search_seconds":8.288770914077759e-7,"evaluations":5.40625,"distances_sum":479.60776026104634}}, n: 9
inertia(cfft.distances) = 19.279377485931985
inertia(cdnet.distances) = 20.515825360913592
inertia(crand.distances) = 285.31654624763905
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.88
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 1, 2, 3, 3, 3, 3, 3, 3, 1, 3, 2, 3, 2, 2, 2, 3, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.441600002782324] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944] ***
*** starting iteration: 2; err: [Inf, 0.441600002782324, 0.17693396266604944] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384] ***
*** starting iteration: 3; err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926] ***
*** starting iteration: 4; err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926, 0.15936839373342052] ***
*** finished computation of 12 references, err: [Inf, 0.441600002782324, 0.17693396266604944, 0.16122384650137384, 0.159479040312926, 0.15936839373342052] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.25541154290977014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25541154290977014, 0.1548538783007915] ***
*** finished computation of 7 references, err: [Inf, 0.25541154290977014, 0.1548538783007915] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 5]]
** centroid: 5, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3371712919948623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3371712919948623, 0.20871778824568243] ***
*** finished computation of 7 references, err: [Inf, 0.3371712919948623, 0.20871778824568243] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3255344819044058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255344819044058, 0.1899980940858692] ***
*** finished computation of 7 references, err: [Inf, 0.3255344819044058, 0.1899980940858692] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8013802057932691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8013802057932691, 0.3357676131262153] ***
*** finished computation of 3 references, err: [Inf, 0.8013802057932691, 0.3357676131262153] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 30]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 3]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.058667281083386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.058667281083386, 0.6277779798848875] ***
*** finished computation of 3 references, err: [Inf, 3.058667281083386, 0.6277779798848875] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 32]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 1, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 15), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.100859048730689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.100859048730689, 1.0151422563205916] ***
*** finished computation of 3 references, err: [Inf, 9.100859048730689, 1.0151422563205916] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 35]]
** centroid: 3, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6489214178112753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6489214178112753, 0.5889602897114178] ***
*** starting iteration: 2; err: [Inf, 0.6489214178112753, 0.5889602897114178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6489214178112753, 0.5889602897114178, 0.5881827712276809] ***
*** finished computation of 3 references, err: [Inf, 0.6489214178112753, 0.5889602897114178, 0.5881827712276809] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5107813974439954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5107813974439954, 0.39083120636699653] ***
*** starting iteration: 2; err: [Inf, 1.5107813974439954, 0.39083120636699653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5107813974439954, 0.39083120636699653, 0.3815883868259127] ***
*** starting iteration: 3; err: [Inf, 1.5107813974439954, 0.39083120636699653, 0.3815883868259127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5107813974439954, 0.39083120636699653, 0.3815883868259127, 0.3805957386173746] ***
*** finished computation of 3 references, err: [Inf, 1.5107813974439954, 0.39083120636699653, 0.3815883868259127, 0.3805957386173746] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 31]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7842265076342942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7842265076342942, 0.6981591117189145] ***
*** starting iteration: 2; err: [Inf, 1.7842265076342942, 0.6981591117189145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7842265076342942, 0.6981591117189145, 0.6961126974775134] ***
*** starting iteration: 3; err: [Inf, 1.7842265076342942, 0.6981591117189145, 0.6961126974775134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7842265076342942, 0.6981591117189145, 0.6961126974775134, 0.6961126974775134] ***
*** finished computation of 3 references, err: [Inf, 1.7842265076342942, 0.6981591117189145, 0.6961126974775134, 0.6961126974775134] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 35]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 1, 0]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(1, 20), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0949130440730521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0949130440730521, 0.3725906240818622] ***
*** starting iteration: 2; err: [Inf, 1.0949130440730521, 0.3725906240818622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0949130440730521, 0.3725906240818622, 0.3335538062507119] ***
*** starting iteration: 3; err: [Inf, 1.0949130440730521, 0.3725906240818622, 0.3335538062507119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0949130440730521, 0.3725906240818622, 0.3335538062507119, 0.31122897032434244] ***
*** finished computation of 7 references, err: [Inf, 1.0949130440730521, 0.3725906240818622, 0.3335538062507119, 0.31122897032434244] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4758421416163394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4758421416163394, 0.349950105143278] ***
*** starting iteration: 2; err: [Inf, 1.4758421416163394, 0.349950105143278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4758421416163394, 0.349950105143278, 0.2338377306491952] ***
*** starting iteration: 3; err: [Inf, 1.4758421416163394, 0.349950105143278, 0.2338377306491952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4758421416163394, 0.349950105143278, 0.2338377306491952, 0.21988913411091332] ***
*** finished computation of 7 references, err: [Inf, 1.4758421416163394, 0.349950105143278, 0.2338377306491952, 0.21988913411091332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 14]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(2, 18), (3, 14)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.426932495440568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426932495440568, 0.21260120120114231] ***
*** starting iteration: 2; err: [Inf, 0.426932495440568, 0.21260120120114231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426932495440568, 0.21260120120114231, 0.1792822033933797] ***
*** starting iteration: 3; err: [Inf, 0.426932495440568, 0.21260120120114231, 0.1792822033933797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426932495440568, 0.21260120120114231, 0.1792822033933797, 0.16514967174529602] ***
*** finished computation of 7 references, err: [Inf, 0.426932495440568, 0.21260120120114231, 0.1792822033933797, 0.16514967174529602] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9986072049023852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9986072049023852, 0.616073795370169] ***
*** starting iteration: 2; err: [Inf, 0.9986072049023852, 0.616073795370169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421] ***
*** starting iteration: 3; err: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421, 0.588694811537657] ***
*** starting iteration: 4; err: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421, 0.588694811537657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421, 0.588694811537657, 0.5885539222778563] ***
*** finished computation of 3 references, err: [Inf, 0.9986072049023852, 0.616073795370169, 0.5948909135486421, 0.588694811537657, 0.5885539222778563] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5379549178716606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5379549178716606, 0.39061295080347364] ***
*** starting iteration: 2; err: [Inf, 0.5379549178716606, 0.39061295080347364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5379549178716606, 0.39061295080347364, 0.3815883868259127] ***
*** starting iteration: 3; err: [Inf, 0.5379549178716606, 0.39061295080347364, 0.3815883868259127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5379549178716606, 0.39061295080347364, 0.3815883868259127, 0.3805957386173746] ***
*** finished computation of 3 references, err: [Inf, 0.5379549178716606, 0.39061295080347364, 0.3815883868259127, 0.3805957386173746] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 31]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.255781892699503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.255781892699503, 0.856120041532658] ***
*** starting iteration: 2; err: [Inf, 8.255781892699503, 0.856120041532658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527] ***
*** starting iteration: 3; err: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527, 0.6957366592848129] ***
*** starting iteration: 4; err: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527, 0.6957366592848129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527, 0.6957366592848129, 0.6957366592848129] ***
*** finished computation of 3 references, err: [Inf, 8.255781892699503, 0.856120041532658, 0.6977306720090527, 0.6957366592848129, 0.6957366592848129] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 35]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9620999929522255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9620999929522255, 0.4682671988945995] ***
*** finished computation of 7 references, err: [Inf, 0.9620999929522255, 0.4682671988945995] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 33]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7004000031199257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7004000031199257, 0.49538391601488013] ***
*** finished computation of 7 references, err: [Inf, 0.7004000031199257, 0.49538391601488013] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 15]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 10), (3, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 16]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 10), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0802999910077467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0802999910077467, 0.37109524689171464] ***
*** finished computation of 7 references, err: [Inf, 1.0802999910077467, 0.37109524689171464] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5791156381358165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5791156381358165, 0.33157868892944514] ***
*** starting iteration: 2; err: [Inf, 0.5791156381358165, 0.33157868892944514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5791156381358165, 0.33157868892944514, 0.33113715533810795] ***
*** finished computation of 3 references, err: [Inf, 0.5791156381358165, 0.33157868892944514, 0.33113715533810795] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 5]]
** centroid: 3, normalized-entropy: 0.6024308020404452, [(2, 29), (3, 5)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8395730789568244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407] ***
*** starting iteration: 2; err: [Inf, 0.8395730789568244, 0.49991240093359407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904] ***
*** starting iteration: 3; err: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847] ***
*** starting iteration: 4; err: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274] ***
*** starting iteration: 5; err: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274, 0.37255432883540235] ***
*** starting iteration: 6; err: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274, 0.37255432883540235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274, 0.37255432883540235, 0.37255432883540235] ***
*** finished computation of 3 references, err: [Inf, 0.8395730789568244, 0.49991240093359407, 0.38831987817295904, 0.38066062606004847, 0.3749460964900274, 0.37255432883540235, 0.37255432883540235] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 5]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 27]]
** centroid: 3, normalized-entropy: 0.625262405223423, [(2, 5), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1340513241893142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127] ***
*** starting iteration: 2; err: [Inf, 1.1340513241893142, 0.4398110531316127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125] ***
*** starting iteration: 3; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296] ***
*** starting iteration: 4; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578] ***
*** starting iteration: 5; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624] ***
*** starting iteration: 6; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917] ***
*** starting iteration: 7; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023] ***
*** starting iteration: 8; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414] ***
*** starting iteration: 9; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414, 0.401122735572947] ***
*** starting iteration: 10; err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414, 0.401122735572947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414, 0.401122735572947, 0.4003750590184265] ***
*** finished computation of 3 references, err: [Inf, 1.1340513241893142, 0.4398110531316127, 0.42732088267644125, 0.4202899558420296, 0.4143105256277578, 0.41166224137513624, 0.40823041236529917, 0.40542611705267023, 0.4022345220971414, 0.401122735572947, 0.4003750590184265] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.105300006034304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.105300006034304, 0.9095967688169008] ***
*** starting iteration: 2; err: [Inf, 2.105300006034304, 0.9095967688169008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.105300006034304, 0.9095967688169008, 0.8980138564137964] ***
*** starting iteration: 3; err: [Inf, 2.105300006034304, 0.9095967688169008, 0.8980138564137964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.105300006034304, 0.9095967688169008, 0.8980138564137964, 0.8918549303802155] ***
*** finished computation of 3 references, err: [Inf, 2.105300006034304, 0.9095967688169008, 0.8980138564137964, 0.8918549303802155] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0874000083442932] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0874000083442932, 0.9313333423639358] ***
*** starting iteration: 2; err: [Inf, 1.0874000083442932, 0.9313333423639358] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0874000083442932, 0.9313333423639358, 0.9309662239301855] ***
*** finished computation of 3 references, err: [Inf, 1.0874000083442932, 0.9313333423639358, 0.9309662239301855] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 3, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.013000000311686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.013000000311686, 0.8218545875381094] ***
*** starting iteration: 2; err: [Inf, 2.013000000311686, 0.8218545875381094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.013000000311686, 0.8218545875381094, 0.670989749318493] ***
*** starting iteration: 3; err: [Inf, 2.013000000311686, 0.8218545875381094, 0.670989749318493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.013000000311686, 0.8218545875381094, 0.670989749318493, 0.6339718087850577] ***
*** finished computation of 3 references, err: [Inf, 2.013000000311686, 0.8218545875381094, 0.670989749318493, 0.6339718087850577] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1062070807333606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1062070807333606, 0.5885539222778563] ***
*** starting iteration: 2; err: [Inf, 1.1062070807333606, 0.5885539222778563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1062070807333606, 0.5885539222778563, 0.5882314699022986] ***
*** finished computation of 3 references, err: [Inf, 1.1062070807333606, 0.5885539222778563, 0.5882314699022986] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8837931387893079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8837931387893079, 0.38046145444595925] ***
*** starting iteration: 2; err: [Inf, 0.8837931387893079, 0.38046145444595925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8837931387893079, 0.38046145444595925, 0.37920356983663467] ***
*** starting iteration: 3; err: [Inf, 0.8837931387893079, 0.38046145444595925, 0.37920356983663467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8837931387893079, 0.38046145444595925, 0.37920356983663467, 0.37807233011308994] ***
*** finished computation of 3 references, err: [Inf, 0.8837931387893079, 0.38046145444595925, 0.37920356983663467, 0.37807233011308994] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 30]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0087598603191152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0087598603191152, 0.456888097566043] ***
*** starting iteration: 2; err: [Inf, 1.0087598603191152, 0.456888097566043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0087598603191152, 0.456888097566043, 0.4006348605997673] ***
*** starting iteration: 3; err: [Inf, 1.0087598603191152, 0.456888097566043, 0.4006348605997673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0087598603191152, 0.456888097566043, 0.4006348605997673, 0.39990450874860867] ***
*** finished computation of 3 references, err: [Inf, 1.0087598603191152, 0.456888097566043, 0.4006348605997673, 0.39990450874860867] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1869000031479942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1869000031479942, 0.5205985556955965] ***
*** finished computation of 3 references, err: [Inf, 1.1869000031479942, 0.5205985556955965] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2548999945896246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2548999945896246, 0.6596666648107987] ***
*** finished computation of 3 references, err: [Inf, 1.2548999945896246, 0.6596666648107987] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 19]]
** centroid: 1, normalized-entropy: 0.9357110512652843, [(2, 35), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9796000020546701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9796000020546701, 0.6698473510010888] ***
*** finished computation of 3 references, err: [Inf, 0.9796000020546701, 0.6698473510010888] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 20]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7319298930389405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7319298930389405, 0.3633062693706488] ***
*** finished computation of 3 references, err: [Inf, 0.7319298930389405, 0.3633062693706488] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1022142962534143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1022142962534143, 0.37597214317647926] ***
*** finished computation of 3 references, err: [Inf, 1.1022142962534143, 0.37597214317647926] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7532565094154638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7532565094154638, 0.4471103503024952] ***
*** finished computation of 3 references, err: [Inf, 0.7532565094154638, 0.4471103503024952] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 18]]
** centroid: 1, normalized-entropy: 0.9486131982385807, [(2, 31), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 2, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2317000099265045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** finished computation of 3 references, err: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 33]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.051100015816632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.051100015816632, 0.5676844023779054] ***
*** finished computation of 3 references, err: [Inf, 1.051100015816632, 0.5676844023779054] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 31]]
** centroid: 1, normalized-entropy: 0.9108783787500366, [(2, 15), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1542000064568763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1542000064568763, 0.6336046571223471] ***
*** finished computation of 3 references, err: [Inf, 1.1542000064568763, 0.6336046571223471] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2317000099265045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** finished computation of 3 references, err: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 33]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8873000059463811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8873000059463811, 0.5333522186228667] ***
*** finished computation of 3 references, err: [Inf, 1.8873000059463811, 0.5333522186228667] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1283999925237138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1283999925237138, 0.614958424950203] ***
*** finished computation of 3 references, err: [Inf, 1.1283999925237138, 0.614958424950203] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2317000099265045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** starting iteration: 2; err: [Inf, 1.2317000099265045, 0.5435457370240974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2317000099265045, 0.5435457370240974, 0.5084867611014174] ***
*** starting iteration: 3; err: [Inf, 1.2317000099265045, 0.5435457370240974, 0.5084867611014174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2317000099265045, 0.5435457370240974, 0.5084867611014174, 0.49365718369060707] ***
*** finished computation of 3 references, err: [Inf, 1.2317000099265045, 0.5435457370240974, 0.5084867611014174, 0.49365718369060707] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 30]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 3]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2861000052522369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2861000052522369, 0.6048305556127235] ***
*** starting iteration: 2; err: [Inf, 1.2861000052522369, 0.6048305556127235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2861000052522369, 0.6048305556127235, 0.5260135317665703] ***
*** starting iteration: 3; err: [Inf, 1.2861000052522369, 0.6048305556127235, 0.5260135317665703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2861000052522369, 0.6048305556127235, 0.5260135317665703, 0.5213596541508607] ***
*** finished computation of 3 references, err: [Inf, 1.2861000052522369, 0.6048305556127235, 0.5260135317665703, 0.5213596541508607] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.522699986619815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522699986619815, 0.5888547256239286] ***
*** starting iteration: 2; err: [Inf, 1.522699986619815, 0.5888547256239286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522699986619815, 0.5888547256239286, 0.5768649047850488] ***
*** starting iteration: 3; err: [Inf, 1.522699986619815, 0.5888547256239286, 0.5768649047850488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.522699986619815, 0.5888547256239286, 0.5768649047850488, 0.5759879767328379] ***
*** finished computation of 3 references, err: [Inf, 1.522699986619815, 0.5888547256239286, 0.5768649047850488, 0.5759879767328379] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4476000044888895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4476000044888895, 0.22893849995824078] ***
*** starting iteration: 2; err: [Inf, 0.4476000044888895, 0.22893849995824078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4476000044888895, 0.22893849995824078, 0.22156897182400698] ***
*** starting iteration: 3; err: [Inf, 0.4476000044888895, 0.22893849995824078, 0.22156897182400698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4476000044888895, 0.22893849995824078, 0.22156897182400698, 0.22038984782371895] ***
*** finished computation of 7 references, err: [Inf, 0.4476000044888895, 0.22893849995824078, 0.22156897182400698, 0.22038984782371895] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5717000084429605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5717000084429605, 0.25368409456057345] ***
*** starting iteration: 2; err: [Inf, 0.5717000084429605, 0.25368409456057345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5717000084429605, 0.25368409456057345, 0.23566515381644743] ***
*** starting iteration: 3; err: [Inf, 0.5717000084429605, 0.25368409456057345, 0.23566515381644743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5717000084429605, 0.25368409456057345, 0.23566515381644743, 0.22929383788109906] ***
*** finished computation of 7 references, err: [Inf, 0.5717000084429605, 0.25368409456057345, 0.23566515381644743, 0.22929383788109906] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6342000003904085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6342000003904085, 0.2765674097037996] ***
*** starting iteration: 2; err: [Inf, 0.6342000003904085, 0.2765674097037996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6342000003904085, 0.2765674097037996, 0.250583501348289] ***
*** starting iteration: 3; err: [Inf, 0.6342000003904085, 0.2765674097037996, 0.250583501348289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6342000003904085, 0.2765674097037996, 0.250583501348289, 0.2417407310693764] ***
*** finished computation of 7 references, err: [Inf, 0.6342000003904085, 0.2765674097037996, 0.250583501348289, 0.2417407310693764] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 4, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4881000076557413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4881000076557413, 0.2721848018348755] ***
*** finished computation of 7 references, err: [Inf, 0.4881000076557413, 0.2721848018348755] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 22]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 10), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.571600000220719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.571600000220719, 0.25306282156965043] ***
*** finished computation of 7 references, err: [Inf, 0.571600000220719, 0.25306282156965043] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49920000395085595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49920000395085595, 0.28739543022994096] ***
*** finished computation of 7 references, err: [Inf, 0.49920000395085595, 0.28739543022994096] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 5]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 20), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6909999945643551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6909999945643551, 0.5084867611014174] ***
*** starting iteration: 2; err: [Inf, 0.6909999945643551, 0.5084867611014174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6909999945643551, 0.5084867611014174, 0.49365718369060707] ***
*** starting iteration: 3; err: [Inf, 0.6909999945643551, 0.5084867611014174, 0.49365718369060707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6909999945643551, 0.5084867611014174, 0.49365718369060707, 0.4823802558424555] ***
*** finished computation of 3 references, err: [Inf, 0.6909999945643551, 0.5084867611014174, 0.49365718369060707, 0.4823802558424555] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 29]]
** centroid: 1, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 4]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.329800005064005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.329800005064005, 0.7467239867530283] ***
*** starting iteration: 2; err: [Inf, 2.329800005064005, 0.7467239867530283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.329800005064005, 0.7467239867530283, 0.6152285220075054] ***
*** starting iteration: 3; err: [Inf, 2.329800005064005, 0.7467239867530283, 0.6152285220075054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.329800005064005, 0.7467239867530283, 0.6152285220075054, 0.5589817032735008] ***
*** finished computation of 3 references, err: [Inf, 2.329800005064005, 0.7467239867530283, 0.6152285220075054, 0.5589817032735008] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 31]]
** centroid: 2, normalized-entropy: 0.8944518845341284, [(2, 14), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2413000114413664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2413000114413664, 1.0671199451428945] ***
*** starting iteration: 2; err: [Inf, 1.2413000114413664, 1.0671199451428945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2413000114413664, 1.0671199451428945, 1.0358378771336876] ***
*** starting iteration: 3; err: [Inf, 1.2413000114413664, 1.0671199451428945, 1.0358378771336876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2413000114413664, 1.0671199451428945, 1.0358378771336876, 1.0272440148079363] ***
*** finished computation of 3 references, err: [Inf, 1.2413000114413664, 1.0671199451428945, 1.0358378771336876, 1.0272440148079363] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 35]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 28), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 4, 0]]
** centroid: 2, normalized-entropy: 0.787126586201269, [(1, 13), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.70683568463126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.70683568463126, 1.3599244577003975] ***
*** starting iteration: 2; err: [Inf, 8.70683568463126, 1.3599244577003975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.70683568463126, 1.3599244577003975, 0.6168494851155708] ***
*** starting iteration: 3; err: [Inf, 8.70683568463126, 1.3599244577003975, 0.6168494851155708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.70683568463126, 1.3599244577003975, 0.6168494851155708, 0.6168494851155708] ***
*** finished computation of 3 references, err: [Inf, 8.70683568463126, 1.3599244577003975, 0.6168494851155708, 0.6168494851155708] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.792613775367003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.792613775367003, 0.632778821404576] ***
*** starting iteration: 2; err: [Inf, 6.792613775367003, 0.632778821404576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.792613775367003, 0.632778821404576, 0.6247834297847273] ***
*** starting iteration: 3; err: [Inf, 6.792613775367003, 0.632778821404576, 0.6247834297847273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.792613775367003, 0.632778821404576, 0.6247834297847273, 0.6245788583111996] ***
*** finished computation of 3 references, err: [Inf, 6.792613775367003, 0.632778821404576, 0.6247834297847273, 0.6245788583111996] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 1, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 16), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 32]]
** centroid: 3, normalized-entropy: 0.9985532860835362, [(2, 35), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7742995346749727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742995346749727, 0.7036204960729262] ***
*** starting iteration: 2; err: [Inf, 0.7742995346749727, 0.7036204960729262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742995346749727, 0.7036204960729262, 0.6977789736174423] ***
*** starting iteration: 3; err: [Inf, 0.7742995346749727, 0.7036204960729262, 0.6977789736174423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7742995346749727, 0.7036204960729262, 0.6977789736174423, 0.6954470552788746] ***
*** finished computation of 3 references, err: [Inf, 0.7742995346749727, 0.7036204960729262, 0.6977789736174423, 0.6954470552788746] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 35]]
** centroid: 1, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 3, 0]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4773040501783704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4773040501783704, 0.19818608851385974] ***
*** finished computation of 7 references, err: [Inf, 0.4773040501783704, 0.19818608851385974] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4120400773559503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4120400773559503, 0.1785251446795696] ***
*** finished computation of 7 references, err: [Inf, 0.4120400773559503, 0.1785251446795696] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 7, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38687132059546625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38687132059546625, 0.18574358768369265] ***
*** finished computation of 7 references, err: [Inf, 0.38687132059546625, 0.18574358768369265] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 6, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7400000096563182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7400000096563182, 0.3347702533273653] ***
*** starting iteration: 2; err: [Inf, 0.7400000096563182, 0.3347702533273653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7400000096563182, 0.3347702533273653, 0.3132244256976756] ***
*** starting iteration: 3; err: [Inf, 0.7400000096563182, 0.3347702533273653, 0.3132244256976756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7400000096563182, 0.3347702533273653, 0.3132244256976756, 0.3050835454944267] ***
*** finished computation of 7 references, err: [Inf, 0.7400000096563182, 0.3347702533273653, 0.3132244256976756, 0.3050835454944267] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 3]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 28), (3, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 21]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(2, 4), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8103999981786069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8103999981786069, 0.4317434932725922] ***
*** starting iteration: 2; err: [Inf, 0.8103999981786069, 0.4317434932725922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8103999981786069, 0.4317434932725922, 0.3704750387077171] ***
*** starting iteration: 3; err: [Inf, 0.8103999981786069, 0.4317434932725922, 0.3704750387077171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8103999981786069, 0.4317434932725922, 0.3704750387077171, 0.34047598726877454] ***
*** finished computation of 7 references, err: [Inf, 0.8103999981786069, 0.4317434932725922, 0.3704750387077171, 0.34047598726877454] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 11]]
** centroid: 2, normalized-entropy: 0.8980587934501658, [(2, 24), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5857999976073371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857999976073371, 0.3152389504273358] ***
*** starting iteration: 2; err: [Inf, 0.5857999976073371, 0.3152389504273358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857999976073371, 0.3152389504273358, 0.25533219672870233] ***
*** starting iteration: 3; err: [Inf, 0.5857999976073371, 0.3152389504273358, 0.25533219672870233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857999976073371, 0.3152389504273358, 0.25533219672870233, 0.23230872859277332] ***
*** finished computation of 7 references, err: [Inf, 0.5857999976073371, 0.3152389504273358, 0.25533219672870233, 0.23230872859277332] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 20
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.75750001035939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.75750001035939, 0.5272730043004771] ***
*** starting iteration: 2; err: [Inf, 0.75750001035939, 0.5272730043004771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457] ***
*** starting iteration: 3; err: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457] ***
*** starting iteration: 4; err: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457, 0.47367837258712214] ***
*** starting iteration: 5; err: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457, 0.47367837258712214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457, 0.47367837258712214, 0.47315549104853427] ***
*** finished computation of 3 references, err: [Inf, 0.75750001035939, 0.5272730043004771, 0.4891346076982457, 0.47577262604593457, 0.47367837258712214, 0.47315549104853427] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 7]]
** centroid: 1, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2507999856829255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2507999856829255, 0.9138814438095747] ***
*** starting iteration: 2; err: [Inf, 1.2507999856829255, 0.9138814438095747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2507999856829255, 0.9138814438095747, 0.9105212367393881] ***
*** starting iteration: 3; err: [Inf, 1.2507999856829255, 0.9138814438095747, 0.9105212367393881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2507999856829255, 0.9138814438095747, 0.9105212367393881, 0.9101915040631837] ***
*** finished computation of 3 references, err: [Inf, 1.2507999856829255, 0.9138814438095747, 0.9105212367393881, 0.9101915040631837] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 32]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [15, 3, 0]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.421300009666882] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058] ***
*** starting iteration: 2; err: [Inf, 2.421300009666882, 0.7006076842853058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212] ***
*** starting iteration: 3; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773] ***
*** starting iteration: 4; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759] ***
*** starting iteration: 5; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152] ***
*** starting iteration: 6; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341] ***
*** starting iteration: 7; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691] ***
*** starting iteration: 8; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691, 0.5758615916011783] ***
*** starting iteration: 9; err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691, 0.5758615916011783] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691, 0.5758615916011783, 0.5758615916011783] ***
*** finished computation of 3 references, err: [Inf, 2.421300009666882, 0.7006076842853058, 0.6017323196075212, 0.5981783256913773, 0.5940920955370759, 0.5853596244635152, 0.5812759116973341, 0.5768957645841691, 0.5758615916011783, 0.5758615916011783] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.220662135568144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.220662135568144, 0.9679985095727381] ***
*** starting iteration: 2; err: [Inf, 8.220662135568144, 0.9679985095727381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447] ***
*** starting iteration: 3; err: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663] ***
*** starting iteration: 4; err: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663, 0.5884405028523421] ***
*** starting iteration: 5; err: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663, 0.5884405028523421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663, 0.5884405028523421, 0.5884405028523421] ***
*** finished computation of 3 references, err: [Inf, 8.220662135568144, 0.9679985095727381, 0.5932026010801447, 0.5904030991090663, 0.5884405028523421, 0.5884405028523421] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5458117055538291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5458117055538291, 0.37458926258074826] ***
*** starting iteration: 2; err: [Inf, 0.5458117055538291, 0.37458926258074826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5458117055538291, 0.37458926258074826, 0.37237272217664524] ***
*** starting iteration: 3; err: [Inf, 0.5458117055538291, 0.37458926258074826, 0.37237272217664524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5458117055538291, 0.37458926258074826, 0.37237272217664524, 0.372142269602397] ***
*** finished computation of 3 references, err: [Inf, 0.5458117055538291, 0.37458926258074826, 0.37237272217664524, 0.372142269602397] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5751911155719999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735] ***
*** starting iteration: 2; err: [Inf, 0.5751911155719999, 0.41573343342660735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097] ***
*** starting iteration: 3; err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004] ***
*** starting iteration: 4; err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486] ***
*** starting iteration: 5; err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414] ***
*** starting iteration: 6; err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414, 0.401122735572947] ***
*** starting iteration: 7; err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414, 0.401122735572947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414, 0.401122735572947, 0.4003750590184265] ***
*** finished computation of 3 references, err: [Inf, 0.5751911155719999, 0.41573343342660735, 0.4127292508514097, 0.40995366324556004, 0.40693622728421486, 0.4022345220971414, 0.401122735572947, 0.4003750590184265] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8933333333333334, 0.8933333333333332, 0.8933333333333332, 0.8866666666666666, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1), 0.9666666666666667)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.0406249999999995, 2.7843750000000003, 4.3531249999999995, 1.3374999999999997], [6.25, 2.8916666666666675, 5.1000000000000005, 1.9333333333333333], [7.150000000000001, 3.13125, 6.025, 2.1312499999999996], [4.785714285714286, 3.242857142857143, 1.5857142857142856, 0.18571428571428572], [4.557142857142857, 2.957142857142857, 1.3428571428571427, 0.21428571428571433], [5.58, 3.84, 1.42, 0.21999999999999997], [5.19, 3.5499999999999994, 1.51, 0.28], [4.95, 3.4333333333333336, 1.366666666666667, 0.2333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5058823529411764, 2.6, 3.823529411764706, 1.188235294117647], [6.288888888888889, 2.8777777777777778, 4.638888888888889, 1.4666666666666666], [6.114285714285714, 2.8214285714285707, 5.1000000000000005, 1.9214285714285715], [6.918750000000001, 3.1125000000000003, 5.9125, 2.05], [5.366666666666667, 3.466666666666667, 1.4333333333333333, 0.26666666666666666], [5.300000000000001, 3.888888888888888, 1.5555555555555554, 0.30000000000000004], [4.961538461538462, 3.261538461538462, 1.5230769230769228, 0.2384615384615385], [4.571428571428571, 3.1142857142857143, 1.3571428571428572, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 3, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.611111111111111, 2.7555555555555555, 4.244444444444444, 1.311111111111111], [5.28, 2.4, 3.6399999999999997, 1.1300000000000001], [5.433333333333334, 3.988888888888889, 1.5222222222222221, 0.30000000000000004], [4.854166666666665, 3.233333333333334, 1.4249999999999998, 0.2333333333333334], [6.335714285714286, 3.0071428571428567, 4.564285714285715, 1.464285714285714], [6.039999999999999, 2.6900000000000004, 5.0, 1.7900000000000003], [7.410000000000001, 3.0800000000000005, 6.28, 2.13], [6.471428571428572, 3.0285714285714285, 5.47142857142857, 2.1714285714285713]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 1, 1, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1))]
[66, 8, 18, 1, 1, 36, 21, 1, 46, 1, 41, 27, 30, 25, 40, 23, 22, 20, 10, 27, 19, 28, 3, 27, 26, 34, 32, 18, 29, 31, 42, 55, 24, 22, 22, 17, 21, 24, 41, 56, 51, 40, 63, 30, 40, 32, 9, 27, 42, 44, 36, 29, 21, 27, 25, 1, 38, 35, 25, 25, 30, 27, 33, 1, 28, 54, 3, 1, 34, 30, 15, 24, 19, 33, 24, 42, 32, 33, 43, 38, 22, 19, 54, 44, 29, 32, 14, 1, 12, 27, 35, 18, 28, 52, 52, 25, 23, 53, 53, 36, 22, 31, 31, 40, 53, 41, 30, 21, 40, 32, 20, 36, 20, 52, 65, 20, 53, 37, 39, 38, 33, 37, 23, 30, 32, 36, 44, 35, 35, 33, 29, 29, 33, 30, 52, 41, 13, 24, 2, 83, 34, 45, 6, 26, 27, 41, 50, 38, 25, 48, 42, 1, 21, 34, 35, 40, 31, 23, 22, 21, 30, 33, 31, 20, 48, 34, 29, 30, 44, 44, 31, 50, 48, 50, 28, 44, 41, 42, 25, 28, 43, 106, 19, 36, 56, 59, 24, 41, 30, 42, 2, 18, 39, 42, 37, 31, 40, 37, 32, 51, 25, 33, 25, 45, 18, 33, 44, 40, 26, 67, 18, 48, 48, 44, 25, 32, 34, 26, 23, 28, 44, 54, 55, 28, 13, 36, 35, 44, 31, 11, 33, 49, 27, 34, 39, 53, 37, 40, 19, 40, 24, 28, 31, 51, 30, 35, 42, 50, 13, 44, 29, 32, 56, 34, 22, 37, 48, 38, 25, 21, 69, 35, 43, 44, 49, 47, 31, 39, 21, 20, 41, 35, 24, 59, 28, 38, 33, 50, 39, 35, 35, 48, 29, 47, 30, 34, 12, 47, 49, 48, 28, 24, 41, 47, 42, 54, 27, 53, 28, 35]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6, speedup = 0.340801931432465, eval_ratio = 0.041545)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.39236111111111127,"f1":null,"seconds":3.835558891296387e-5,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":339.4140625,"distances_sum":1750.5459944262457}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5651041666666666,"recall":0.5651041666666666,"f1":null,"seconds":5.285628139972687e-5,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":376.546875,"distances_sum":1659.0476844142663}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6605902777777777,"recall":0.6605902777777777,"f1":0.6605902777777777,"seconds":0.00014832429587841034,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":414.421875,"distances_sum":1614.7396959995424}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7352430555555554,"recall":0.7352430555555554,"f1":0.7352430555555554,"seconds":8.702091872692108e-5,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":455.5,"distances_sum":1592.5136117147435}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7803819444444433,"recall":0.7803819444444433,"f1":0.7803819444444433,"seconds":0.00010640919208526611,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":495.296875,"distances_sum":1579.869259015811}
KCenters.DeloneInvIndex> reached performance {"precision":0.8263888888888876,"recall":0.8263888888888876,"f1":0.8263888888888876,"seconds":0.00011947751045227051,"exhaustive_search_seconds":0.00020641274750232697,"evaluations":532.5859375,"distances_sum":1569.1419428181082}
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8099999999999997, speedup = 1.6486794449192204, eval_ratio = 0.053279999999999994)
   Testing KCenters tests passed 
