Current time is 2020-10-25T23:01:43.457
Julia Version 1.5.3-pre.0
Commit 5905edebb1 (2020-09-24 05:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T23:01:46.582
  Resolving package versions...
  Installed ZygoteRules ───────────────── v0.2.0
  Installed AbstractFFTs ──────────────── v0.5.0
  Installed FoldsCUDA ─────────────────── v0.1.0
  Installed MicroCollections ──────────── v0.1.0
  Installed MacroTools ────────────────── v0.5.6
  Installed NNlib ─────────────────────── v0.7.5
  Installed GPUArrays ─────────────────── v6.1.0
  Installed CUDA ──────────────────────── v2.0.2
  Installed Reexport ──────────────────── v0.2.0
  Installed FLoopsBase ────────────────── v0.1.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed NameResolution ────────────── v0.1.5
  Installed JuliaVariables ────────────── v0.2.3
  Installed ConstructionBase ──────────── v1.0.0
  Installed Compat ────────────────────── v3.22.0
  Installed Transducers ───────────────── v0.4.53
  Installed InitialValues ─────────────── v0.2.10
  Installed OrderedCollections ────────── v1.3.1
  Installed ArgCheck ──────────────────── v2.1.0
  Installed DefineSingletons ──────────── v0.1.0
  Installed Requires ──────────────────── v1.1.0
  Installed BFloat16s ─────────────────── v0.1.0
  Installed Tables ────────────────────── v1.1.0
  Installed Setfield ──────────────────── v0.7.0
  Installed CEnum ─────────────────────── v0.4.1
  Installed PrettyPrint ───────────────── v0.2.0
  Installed SplittablesBase ───────────── v0.1.10
  Installed ContextVariablesX ─────────── v0.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed FLoops ────────────────────── v0.1.4
  Installed BangBang ──────────────────── v0.3.29
  Installed MLStyle ───────────────────── v0.4.6
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed ExprTools ─────────────────── v0.1.3
  Installed TimerOutputs ──────────────── v0.5.6
  Installed CompositionsBase ──────────── v0.1.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Adapt ─────────────────────── v2.3.0
  Installed GPUCompiler ───────────────── v0.7.3
  Installed LLVM ──────────────────────── v3.2.0
  Installed DataStructures ────────────── v0.18.8
Updating `~/.julia/environments/v1.5/Project.toml`
  [6cd66ae4] + FoldsCUDA v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [dce04be8] + ArgCheck v2.1.0
  [ab4f0b2a] + BFloat16s v0.1.0
  [198e06fe] + BangBang v0.3.29
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v2.0.2
  [34da2185] + Compat v3.22.0
  [a33af91c] + CompositionsBase v0.1.0
  [187b0558] + ConstructionBase v1.0.0
  [6add18c4] + ContextVariablesX v0.1.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [e2ba6199] + ExprTools v0.1.3
  [cc61a311] + FLoops v0.1.4
  [b9860ae5] + FLoopsBase v0.1.0
  [6cd66ae4] + FoldsCUDA v0.1.0
  [0c68f7d7] + GPUArrays v6.1.0
  [61eb1bfa] + GPUCompiler v0.7.3
  [22cec73e] + InitialValues v0.2.10
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [b14d175d] + JuliaVariables v0.2.3
  [929cbde3] + LLVM v3.2.0
  [d8e11817] + MLStyle v0.4.6
  [1914dd2f] + MacroTools v0.5.6
  [128add7d] + MicroCollections v0.1.0
  [872c559c] + NNlib v0.7.5
  [71a1bf82] + NameResolution v0.1.5
  [bac558e1] + OrderedCollections v1.3.1
  [8162dcfd] + PrettyPrint v0.2.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [efcf1570] + Setfield v0.7.0
  [171d559e] + SplittablesBase v0.1.10
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [28d57a85] + Transducers v0.4.53
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Starting tests at 2020-10-25T23:01:52.646
    Testing FoldsCUDA
Status `/tmp/jl_GAmyrY/Project.toml`
  [4c88cf16] Aqua v0.5.0
  [052768ef] CUDA v2.0.2
  [e30172f5] Documenter v0.25.2
  [cc61a311] FLoops v0.1.4
  [6cd66ae4] FoldsCUDA v0.1.0
  [0c68f7d7] GPUArrays v6.1.0
  [22cec73e] InitialValues v0.2.10
  [171d559e] SplittablesBase v0.1.10
  [28d57a85] Transducers v0.4.53
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_GAmyrY/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [4c88cf16] Aqua v0.5.0
  [dce04be8] ArgCheck v2.1.0
  [ab4f0b2a] BFloat16s v0.1.0
  [198e06fe] BangBang v0.3.29
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.2
  [34da2185] Compat v3.22.0
  [a33af91c] CompositionsBase v0.1.0
  [187b0558] ConstructionBase v1.0.0
  [6add18c4] ContextVariablesX v0.1.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [e2ba6199] ExprTools v0.1.3
  [cc61a311] FLoops v0.1.4
  [b9860ae5] FLoopsBase v0.1.0
  [6cd66ae4] FoldsCUDA v0.1.0
  [0c68f7d7] GPUArrays v6.1.0
  [61eb1bfa] GPUCompiler v0.7.3
  [22cec73e] InitialValues v0.2.10
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [b14d175d] JuliaVariables v0.2.3
  [929cbde3] LLVM v3.2.0
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.6
  [128add7d] MicroCollections v0.1.0
  [872c559c] NNlib v0.7.5
  [71a1bf82] NameResolution v0.1.5
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [8162dcfd] PrettyPrint v0.2.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [efcf1570] Setfield v0.7.0
  [171d559e] SplittablesBase v0.1.10
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [28d57a85] Transducers v0.4.53
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ xs = CUDA.rand(10^8);
│ 
│ Evaluated output:
│ 
│ ┌ Error: Could not initialize CUDA
│ │   exception =
│ │    could not load library "libcuda"
│ │    libcuda.so: cannot open shared object file: No such file or directory
│ │    Stacktrace:
│ │     [1] dlopen(::String, ::UInt32; throw_error::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:109
│ │     [2] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:109 [inlined]
│ │     [3] #dlopen#2 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:105 [inlined]
│ │     [4] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:105 [inlined] (repeats 2 times)
│ │     [5] (::CUDA.var"#2966#cache_fptr!#615")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│ │     [6] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│ │     [7] __configure__(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:94
│ │     [8] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:29 [inlined]
│ │     [9] macro expansion at ./lock.jl:183 [inlined]
│ │     [10] _functional(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:26
│ │     [11] functional(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:19
│ │     [12] libcuda() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:50
│ │     [13] (::CUDA.var"#690#cache_fptr!#9")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│ │     [14] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│ │     [15] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│ │     [16] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│ │     [17] cuDeviceGet(::Base.RefValue{Int32}, ::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│ │     [18] CUDA.CuDevice(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25
│ │     [19] initialize_thread(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:121
│ │     [20] prepare_cuda_call() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:80
│ │     [21] context at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│ │     [22] default_rng() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│ │     [23] rand(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/random.jl:70
│ │     [24] top-level scope at none:1
│ │     [25] eval at ./boot.jl:331 [inlined]
│ │     [26] #7 at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:220 [inlined]
│ │     [27] (::Documenter.Utilities.var"#14#15"{Documenter.DocTests.var"#7#8"{Module},Base.PipeEndpoint,Base.PipeEndpoint,Pipe,Array{UInt8,1}})() at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Utilities.jl:569
│ │     [28] with_logstate(::Function, ::Any) at ./logging.jl:408
│ │     [29] with_logger at ./logging.jl:514 [inlined]
│ │     [30] withoutput at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Utilities.jl:567 [inlined]
│ │     [31] eval_repl(::Documenter.DocTests.MutableMD2CodeBlock, ::Module, ::Dict{Symbol,Any}, ::Documenter.Documents.Document, ::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:219
│ │     [32] doctest(::Documenter.DocTests.DocTestContext, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:169
│ │     [33] (::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext})(::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:111
│ │     [34] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:297
│ │     [35] walk(::Function, ::Array{Documenter.Utilities.Markdown2.MarkdownBlockNode,1}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:306
│ │     [36] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.MD) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:299
│ │     [37] doctest at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:108 [inlined]
│ │     [38] doctest(::Base.Docs.DocStr, ::Module, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:88
│ │     [39] doctest(::Documenter.Documents.DocumentBlueprint, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:56
│ │     [40] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Builder.jl:214
│ │     [41] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│ │     [42] #2 at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│ │     [43] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│ │     [44] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│ │     [45] (::Documenter.var"#all_doctests#31"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│ │     [46] macro expansion at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│ │     [47] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
│ │     [48] doctest(::Nothing, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│ │     [49] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│ │     [50] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│ │     [51] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
│ │     [52] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│ │     [53] include(::Function, ::Module, ::String) at ./Base.jl:380
│ │     [54] include at ./Base.jl:368 [inlined]
│ │     [55] include(::String) at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│ │     [56] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13
│ │     [57] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190
│ │     [58] include(::String) at ./client.jl:457
│ │     [59] top-level scope at none:6
│ │     [60] eval(::Module, ::Any) at ./boot.jl:331
│ │     [61] exec_options(::Base.JLOptions) at ./client.jl:272
│ └ @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:101
│ ERROR: CUDA.jl did not successfully initialize, and is not usable.
│ If you did not see any other error message, try again in a new session
│ with the JULIA_DEBUG environment variable set to 'CUDA'.
│ Stacktrace:
│  [1] error(::String) at ./error.jl:33
│  [2] libcuda() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:51
│  [3] (::CUDA.var"#690#cache_fptr!#9")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│  [4] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│  [5] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│  [6] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│  [7] cuDeviceGet(::Base.RefValue{Int32}, ::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│  [8] CuDevice(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25
│  [9] initialize_thread(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:121
│  [10] prepare_cuda_call() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:80
│  [11] context at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│  [12] default_rng() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│  [13] rand(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/random.jl:70
│  [14] top-level scope at none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Error: Could not initialize CUDA
│    │   exception =
│    │    could not load library "libcuda"
│    │    libcuda.so: cannot open shared object file: No such file or directory
│    │    Stacktrace:
│    │     [1] dlopen(::String, ::UInt32; throw_error::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:109
│    │     [2] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:109 [inlined]
│    │     [3] #dlopen#2 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:105 [inlined]
│    │     [4] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Libdl/src/Libdl.jl:105 [inlined] (repeats 2 times)
│    │     [5] (::CUDA.var"#2966#cache_fptr!#615")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│    │     [6] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│    │     [7] __configure__(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:94
│    │     [8] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:29 [inlined]
│    │     [9] macro expansion at ./lock.jl:183 [inlined]
│    │     [10] _functional(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:26
│    │     [11] functional(::Bool) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:19
│    │     [12] libcuda() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:50
│    │     [13] (::CUDA.var"#690#cache_fptr!#9")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│    │     [14] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│    │     [15] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│    │     [16] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│    │     [17] cuDeviceGet(::Base.RefValue{Int32}, ::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│    │     [18] CUDA.CuDevice(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25
│    │     [19] initialize_thread(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:121
│    │     [20] prepare_cuda_call() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:80
│    │     [21] context at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│    │     [22] default_rng() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│    │     [23] rand(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/random.jl:70
│    │     [24] top-level scope at none:1
│    │     [25] eval at ./boot.jl:331 [inlined]
│    │     [26] #7 at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:220 [inlined]
│    │     [27] (::Documenter.Utilities.var"#14#15"{Documenter.DocTests.var"#7#8"{Module},Base.PipeEndpoint,Base.PipeEndpoint,Pipe,Array{UInt8,1}})() at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Utilities.jl:569
│    │     [28] with_logstate(::Function, ::Any) at ./logging.jl:408
│    │     [29] with_logger at ./logging.jl:514 [inlined]
│    │     [30] withoutput at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Utilities.jl:567 [inlined]
│    │     [31] eval_repl(::Documenter.DocTests.MutableMD2CodeBlock, ::Module, ::Dict{Symbol,Any}, ::Documenter.Documents.Document, ::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:219
│    │     [32] doctest(::Documenter.DocTests.DocTestContext, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:169
│    │     [33] (::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext})(::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:111
│    │     [34] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:297
│    │     [35] walk(::Function, ::Array{Documenter.Utilities.Markdown2.MarkdownBlockNode,1}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:306
│    │     [36] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.MD) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Markdown2.jl:299
│    │     [37] doctest at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:108 [inlined]
│    │     [38] doctest(::Base.Docs.DocStr, ::Module, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:88
│    │     [39] doctest(::Documenter.Documents.DocumentBlueprint, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/DocTests.jl:56
│    │     [40] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Builder.jl:214
│    │     [41] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│    │     [42] #2 at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│    │     [43] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│    │     [44] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│    │     [45] (::Documenter.var"#all_doctests#31"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│    │     [46] macro expansion at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│    │     [47] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
│    │     [48] doctest(::Nothing, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│    │     [49] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│    │     [50] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│    │     [51] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
│    │     [52] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│    │     [53] include(::Function, ::Module, ::String) at ./Base.jl:380
│    │     [54] include at ./Base.jl:368 [inlined]
│    │     [55] include(::String) at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│    │     [56] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13
│    │     [57] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190
│    │     [58] include(::String) at ./client.jl:457
│    │     [59] top-level scope at none:6
│    │     [60] eval(::Module, ::Any) at ./boot.jl:331
│    │     [61] exec_options(::Base.JLOptions) at ./client.jl:272
│    └ @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:101
│    ERROR: CUDA.jl did not successfully initialize, and is not usable.
│    If you did not see any other error message, try again in a new session
│    with the JULIA_DEBUG environment variable set to 'CUDA'.
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] libcuda() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/initialization.jl:51
│     [3] (::CUDA.var"#690#cache_fptr!#9")() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│     [4] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│     [5] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│     [6] macro expansion at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│     [7] cuDeviceGet(::Base.RefValue{Int32}, ::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│     [8] CuDevice(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25
│     [9] initialize_thread(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:121
│     [10] prepare_cuda_call() at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:80
│     [11] context at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│     [12] default_rng() at /home/pkgeval/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│     [13] rand(::Int64) at /home/pkgeval/.julia/packages/CUDA/gKMm0/src/random.jl:70
│     [14] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[100] = 2;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[200] = 2;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│     @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│         if xmax < x
│             xmax = x
│             imax = i
│         end
│     end
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at /home/pkgeval/.julia/packages/FLoops/puZKi/src/reduce.jl:308
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at /home/pkgeval/.julia/packages/FLoops/puZKi/src/reduce.jl:308
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ xmax
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xmax not defined
│ 
│ Expected output:
│ 
│ 2.0f0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2.0f0ERROR: UndefVarError: xmax not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ imax  # the *first* position for the largest value
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: imax not defined
│ 
│ Expected output:
│ 
│ 100
│ 
│   diff =
│    Warning: Diff output requires color.
│    100ERROR: UndefVarError: imax not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[300] = -0.5;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at /home/pkgeval/.julia/packages/GPUArrays/Ck0bk/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), xs)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ (-0.5f0, 2.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-0.5f0, 2.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ (-1.0f0, 4.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-1.0f0, 4.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ (-1.0f0, 4.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-1.0f0, 4.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│     [7] (::Documenter.var"#all_doctests#31"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│     [8] macro expansion at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│     [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
│     [10] doctest(::Nothing, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│     [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
│     [14] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│     [15] include(::Function, ::Module, ::String) at ./Base.jl:380
│     [16] include at ./Base.jl:368 [inlined]
│     [17] include(::String) at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│     [18] top-level scope at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13
│     [19] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190
│     [20] include(::String) at ./client.jl:457
│     [21] top-level scope at none:6
│     [22] eval(::Module, ::Any) at ./boot.jl:331
│     [23] exec_options(::Base.JLOptions) at ./client.jl:272
│     [24] _start() at ./client.jl:506
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: FoldsCUDA: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
 [3] doctest(::Nothing, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:           | Fail  Total
test_doctest.jl         |    1      1
  doctest               |    1      1
    Doctests: FoldsCUDA |    1      1
Test Summary:           | Fail  Total
test_doctest.jl         |    1      1
  doctest               |    1      1
    Doctests: FoldsCUDA |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:9
caused by [exception 1]
Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
ERROR: Package FoldsCUDA errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:35
