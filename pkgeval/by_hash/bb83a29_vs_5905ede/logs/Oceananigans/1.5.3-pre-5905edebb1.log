Current time is 2020-10-25T19:23:15.285
Julia Version 1.5.3-pre.0
Commit 5905edebb1 (2020-09-24 05:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T19:23:18.601
  Resolving package versions...
  Installed FFTW_jll ───────────────────── v3.3.9+6
  Installed URIParser ──────────────────── v0.4.1
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed NNlib ──────────────────────── v0.7.5
  Installed GPUArrays ──────────────────── v5.2.1
  Installed KernelAbstractions ─────────── v0.4.4
  Installed CUDA ───────────────────────── v1.3.3
  Installed Conda ──────────────────────── v1.4.1
  Installed CodecZlib ──────────────────── v0.7.0
  Installed MacroTools ─────────────────── v0.5.6
  Installed VersionParsing ─────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed Reexport ───────────────────── v0.2.0
  Installed CondaBinDeps ───────────────── v0.2.0
  Installed SafeTestsets ───────────────── v0.0.1
  Installed Compat ─────────────────────── v3.22.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed Oceananigans ───────────────── v0.43.0
  Installed Zlib_jll ───────────────────── v1.2.11+18
  Installed Artifacts ──────────────────── v1.3.0
  Installed OrderedCollections ─────────── v1.3.1
  Installed OffsetArrays ───────────────── v1.3.1
  Installed JSON ───────────────────────── v0.21.1
  Installed StaticArrays ───────────────── v0.12.4
  Installed FFTW ───────────────────────── v1.2.4
  Installed SeawaterPolynomials ────────── v0.2.0
  Installed Requires ───────────────────── v1.1.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed JLD2 ───────────────────────── v0.2.4
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed BinDeps ────────────────────── v1.0.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Cassette ───────────────────── v0.3.3
  Installed JLLWrappers ────────────────── v1.1.3
  Installed Crayons ────────────────────── v4.0.4
  Installed CEnum ──────────────────────── v0.4.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed TimerOutputs ───────────────── v0.5.6
  Installed Adapt ──────────────────────── v2.3.0
  Installed Parsers ────────────────────── v1.0.11
  Installed LLVM ───────────────────────── v2.0.0
  Installed NCDatasets ─────────────────── v0.10.4
  Installed ExprTools ──────────────────── v0.1.3
  Installed GPUCompiler ────────────────── v0.6.1
  Installed CFTime ─────────────────────── v0.1.0
  Installed DataStructures ─────────────── v0.18.8
Updating `~/.julia/environments/v1.5/Project.toml`
  [9e8cae18] + Oceananigans v0.43.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [56f22d72] + Artifacts v1.3.0
  [9e28174c] + BinDeps v1.0.1
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [179af706] + CFTime v0.1.0
  [052768ef] + CUDA v1.3.3
  [7057c7e9] + Cassette v0.3.3
  [944b1d66] + CodecZlib v0.7.0
  [34da2185] + Compat v3.22.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [8f4d0f93] + Conda v1.4.1
  [a9693cdc] + CondaBinDeps v0.2.0
  [a8cc5b0e] + Crayons v4.0.4
  [864edb3b] + DataStructures v0.18.8
  [e2ba6199] + ExprTools v0.1.3
  [7a1cc6ca] + FFTW v1.2.4
  [f5851436] + FFTW_jll v3.3.9+6
  [0c68f7d7] + GPUArrays v5.2.1
  [61eb1bfa] + GPUCompiler v0.6.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [033835bb] + JLD2 v0.2.4
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [63c18a36] + KernelAbstractions v0.4.4
  [929cbde3] + LLVM v2.0.0
  [856f044c] + MKL_jll v2020.2.254+0
  [1914dd2f] + MacroTools v0.5.6
  [85f8d34a] + NCDatasets v0.10.4
  [872c559c] + NNlib v0.7.5
  [9e8cae18] + Oceananigans v0.43.0
  [6fe1bfb0] + OffsetArrays v1.3.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [1bc83da4] + SafeTestsets v0.0.1
  [d496a93d] + SeawaterPolynomials v0.2.0
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.1
  [81def892] + VersionParsing v1.2.0
  [83775a58] + Zlib_jll v1.2.11+18
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building FFTW ──────→ `~/.julia/packages/FFTW/DMUbN/deps/build.log`
   Building NCDatasets → `~/.julia/packages/NCDatasets/HhdCu/deps/build.log`
Starting tests at 2020-10-25T19:24:37.021
    Testing Oceananigans
Status `/tmp/jl_2PaLbX/Project.toml`
  [79e6a3ab] Adapt v2.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [052768ef] CUDA v1.3.3
  [a2441757] Coverage v1.1.1
  [a8cc5b0e] Crayons v4.0.4
  [7a1cc6ca] FFTW v1.2.4
  [033835bb] JLD2 v0.2.4
  [63c18a36] KernelAbstractions v0.4.4
  [85f8d34a] NCDatasets v0.10.4
  [9e8cae18] Oceananigans v0.43.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [91a5bcdd] Plots v1.7.3
  [1bc83da4] SafeTestsets v0.0.1
  [d496a93d] SeawaterPolynomials v0.2.0
  [90137ffa] StaticArrays v0.12.4
  [a759f4b9] TimerOutputs v0.5.6
  [bdfc003b] TimesDates v0.2.6
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_2PaLbX/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [56f22d72] Artifacts v1.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [9e28174c] BinDeps v1.0.1
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+5
  [fa961155] CEnum v0.4.1
  [179af706] CFTime v0.1.0
  [052768ef] CUDA v1.3.3
  [7057c7e9] Cassette v0.3.3
  [944b1d66] CodecZlib v0.7.0
  [35d6a980] ColorSchemes v3.10.1
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [34da2185] Compat v3.22.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [a216cea6] CompoundPeriods v0.4.0
  [8f4d0f93] Conda v1.4.1
  [a9693cdc] CondaBinDeps v0.2.0
  [d38c429a] Contour v0.5.5
  [a2441757] Coverage v1.1.1
  [c36e975a] CoverageTools v1.1.0
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [5ae413db] EarCut_jll v2.1.5+0
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.4.0
  [b22a6f82] FFMPEG_jll v4.3.1+4
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+6
  [53c48c17] FixedPointNumbers v0.8.4
  [59287772] Formatting v0.4.1
  [d7e528f0] FreeType2_jll v2.10.1+5
  [559328eb] FriBidi_jll v1.0.5+6
  [0c68f7d7] GPUArrays v5.2.1
  [61eb1bfa] GPUCompiler v0.6.1
  [28b8d3ca] GR v0.52.0
  [5c1252a2] GeometryBasics v0.3.3
  [4d00f742] GeometryTypes v0.8.3
  [42e2da0e] Grisu v1.0.0
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.2.4
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [63c18a36] KernelAbstractions v0.4.4
  [c1c5ebd0] LAME_jll v3.100.0+3
  [929cbde3] LLVM v2.0.0
  [b964fa9f] LaTeXStrings v1.2.0
  [23fbe1c1] Latexify v0.14.1
  [dd192d2f] LibVPX_jll v1.9.0+1
  [94ce4f54] Libiconv_jll v1.16.0+7
  [856f044c] MKL_jll v2020.2.254+0
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [85f8d34a] NCDatasets v0.10.4
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [9e8cae18] Oceananigans v0.43.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [e7412a2a] Ogg_jll v1.3.4+2
  [458c3c95] OpenSSL_jll v1.1.1+6
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [91d4177d] Opus_jll v1.3.1+3
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.7
  [91a5bcdd] Plots v1.7.3
  [3cdcf5f2] RecipesBase v1.1.0
  [01d81517] RecipesPipeline v0.1.13
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [1bc83da4] SafeTestsets v0.0.1
  [6c6a2e73] Scratch v1.0.3
  [d496a93d] SeawaterPolynomials v0.2.0
  [992d4aef] Showoff v0.3.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [f269a46b] TimeZones v1.4.0
  [a759f4b9] TimerOutputs v0.5.6
  [bdfc003b] TimesDates v0.2.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [30578b45] URIParser v0.4.1
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0ac62f75] libass_jll v0.14.0+4
  [f638f0a6] libfdk_aac_jll v0.1.6+4
  [f27f6e37] libvorbis_jll v1.3.6+6
  [1270edf5] x264_jll v2020.7.14+2
  [dfaa095f] x265_jll v3.0.0+3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Oceananigans will use 2 threads
[2020/10/25 19:29:10.546] INFO  Testing grids...
[2020/10/25 19:29:11.248] INFO    Testing grid utilities...
[2020/10/25 19:29:14.742] INFO    Testing regular Cartesian grid...
[2020/10/25 19:29:14.742] INFO      Testing grid initialization...
[2020/10/25 19:29:18.780] INFO      Testing grid constructor errors...
[2020/10/25 19:29:23.929] INFO      Testing construction of grids with Flat dimensions...
RegularCartesianGrid{Float64, Periodic, Periodic, Periodic}
                   domain: x ∈ [0.0, 1.0], y ∈ [-3.141592653589793, 3.141592653589793], z ∈ [1.1102230246251526e-17, 6.283185307179586]
                 topology: (Periodic, Periodic, Periodic)
  resolution (Nx, Ny, Nz): (3, 7, 9)
   halo size (Hx, Hy, Hz): (1, 1, 1)
grid spacing (Δx, Δy, Δz): (0.3333333333333333, 0.8975979010256552, 0.6981317007977318)
[2020/10/25 19:29:26.467] INFO    Testing vertically stretched Cartesian grid...
[2020/10/25 19:29:26.467] INFO      Testing grid initialization...
[2020/10/25 19:29:38.458] INFO  Testing operators...
[2020/10/25 19:29:38.458] INFO    Testing function differentiation...
[2020/10/25 19:29:38.929] INFO    Testing function interpolation...
[2020/10/25 19:29:39.078] INFO    Testing 2D operators...
[2020/10/25 19:30:02.880] INFO  Testing boundary conditions...
[2020/10/25 19:30:02.880] INFO    Testing boundary functions...
[2020/10/25 19:30:03.015] INFO    Testing field and coordinate boundary conditions...
[2020/10/25 19:30:07.770] INFO  Testing fields...
[2020/10/25 19:30:07.770] INFO    Testing field initialization...
[2020/10/25 19:30:13.793] INFO    Testing field setting...
[2020/10/25 19:30:39.654] INFO    Testing field utils...
[2020/10/25 19:30:39.839] INFO  Testing averaged fields...
[2020/10/25 19:30:39.850] INFO    Testing AveragedFields [CPU]
[2020/10/25 19:30:47.017] INFO    Testing conditional computation of AveragedFields [CPU]
[2020/10/25 19:30:52.082] INFO  Testing halo regions...
[2020/10/25 19:30:52.082] INFO    Testing initializing halo regions...
[2020/10/25 19:30:54.637] INFO    Testing filling halo regions...
[2020/10/25 19:31:14.792] INFO  Testing Solvers...
[2020/10/25 19:31:31.000] INFO    Testing vertically stretched Poisson solver [FACR, CPU()]...
[2020/10/25 19:31:34.688] INFO  Testing pressure solvers...
[2020/10/25 19:31:34.688] INFO    Testing pressure solver instantiation...
[2020/10/25 19:31:38.435] INFO    Testing divergence-free solution [CPU]...
[2020/10/25 19:31:38.482] INFO      Testing (Periodic, Periodic, Periodic) topology on square grids...
[2020/10/25 19:32:26.580] INFO      Testing (Periodic, Periodic, Bounded) topology on square grids...
[2020/10/25 19:33:18.718] INFO      Testing (Periodic, Bounded, Bounded) topology on square grids...
[2020/10/25 19:34:29.422] INFO      Testing (Bounded, Bounded, Bounded) topology on square grids...
[2020/10/25 19:35:46.772] INFO      Testing (Periodic, Periodic, Periodic) topology on rectangular grids...
[2020/10/25 19:36:29.703] INFO      Testing (Periodic, Periodic, Bounded) topology on rectangular grids...
[2020/10/25 19:37:14.536] INFO      Testing (Periodic, Bounded, Bounded) topology on rectangular grids...
[2020/10/25 19:38:00.300] INFO      Testing (Bounded, Bounded, Bounded) topology on rectangular grids...
[2020/10/25 19:38:46.789] INFO    Testing convergence to analytical solution...
[2020/10/25 19:44:32.963] INFO  Convergence of L¹-normed error, Float64, (64³ -> 128³), topology=(Periodic, Periodic, Periodic): 2.0018252684303977
[2020/10/25 19:44:45.300] INFO  Convergence of L¹-normed error, Float64, (64³ -> 128³), topology=(Periodic, Periodic, Bounded): 2.0014347724571695
[2020/10/25 19:46:31.970] INFO  Convergence of L¹-normed error, Float64, (64³ -> 128³), topology=(Periodic, Bounded, Bounded): 2.0009850079540596
[2020/10/25 19:47:06.724] INFO  Convergence of L¹-normed error, Float64, (64³ -> 128³), topology=(Bounded, Bounded, Bounded): 2.0004562752677315
[2020/10/25 19:47:07.797] INFO  Testing Coriolis...
FPlane{Float32}: f = 1.03e-04
NonTraditionalFPlane{Float32}: fz = 1.03e-04, fy = 1.03e-04
BetaPlane{Float32}: f₀ = 1.03e-04, β = 1.62e-11
NonTraditionalBetaPlane{Float32}: fz = 1.03e-04, fy = 1.03e-04, β = 1.62e-11, γ = -3.24e-11, R = 6.37e+06
FPlane{Float64}: f = 1.03e-04
NonTraditionalFPlane{Float64}: fz = 1.03e-04, fy = 1.03e-04
BetaPlane{Float64}: f₀ = 1.03e-04, β = 1.62e-11
NonTraditionalBetaPlane{Float64}: fz = 1.03e-04, fy = 1.03e-04, β = 1.62e-11, γ = -3.24e-11, R = 6.37e+06
[2020/10/25 19:47:10.740] INFO  Testing buoyancy...
[2020/10/25 19:47:10.741] INFO    Testing equations of state...
[2020/10/25 19:47:20.733] INFO  Testing surface waves...
[2020/10/25 19:47:20.867] INFO  Testing WENO reconstruction...
[2020/10/25 19:47:21.800] INFO  WENO-3 coefficients [Compare with Table 2.1 of Shu (1998)]:
u(i+1//2) = + 3//2 u(i+1) - 1//2 u(i+2) 
u(i+1//2) = + 1//2 u(i) + 1//2 u(i+1) 
u(i+1//2) = - 1//2 u(i-1) + 3//2 u(i) 
Optimal weights γ: Rational[2//3, 1//3]
[2020/10/25 19:47:27.887] INFO  WENO-5 coefficients [Compare with Table 2.1 of Shu (1998) and equation (2.15) from Shu (2009)]:
u(i+1//2) = + 11//6 u(i+1) - 7//6 u(i+2) + 1//3 u(i+3) 
u(i+1//2) = + 1//3 u(i) + 5//6 u(i+1) - 1//6 u(i+2) 
u(i+1//2) = - 1//6 u(i-1) + 5//6 u(i) + 1//3 u(i+1) 
u(i+1//2) = + 1//3 u(i-2) - 7//6 u(i-1) + 11//6 u(i) 
Optimal weights γ: Rational[3//10, 3//5, 1//10]
[2020/10/25 19:47:28.205] INFO  WENO-7 coefficients [Compare with Table 2.1 of Shu (1998)]:
u(i+1//2) = + 25//12 u(i+1) - 23//12 u(i+2) + 13//12 u(i+3) - 1//4 u(i+4) 
u(i+1//2) = + 1//4 u(i) + 13//12 u(i+1) - 5//12 u(i+2) + 1//12 u(i+3) 
u(i+1//2) = - 1//12 u(i-1) + 7//12 u(i) + 7//12 u(i+1) - 1//12 u(i+2) 
u(i+1//2) = + 1//12 u(i-2) - 5//12 u(i-1) + 13//12 u(i) + 1//4 u(i+1) 
u(i+1//2) = - 1//4 u(i-3) + 13//12 u(i-2) - 23//12 u(i-1) + 25//12 u(i) 
Optimal weights γ: Rational[4//35, 18//35, 12//35, 1//35]
[2020/10/25 19:47:28.503] INFO  WENO-9 coefficients [Compare with Table 2.1 of Shu (1998) and equation (2.14) of Shu (2009)]:
u(i+1//2) = + 137//60 u(i+1) - 163//60 u(i+2) + 137//60 u(i+3) - 21//20 u(i+4) + 1//5 u(i+5) 
u(i+1//2) = + 1//5 u(i) + 77//60 u(i+1) - 43//60 u(i+2) + 17//60 u(i+3) - 1//20 u(i+4) 
u(i+1//2) = - 1//20 u(i-1) + 9//20 u(i) + 47//60 u(i+1) - 13//60 u(i+2) + 1//30 u(i+3) 
u(i+1//2) = + 1//30 u(i-2) - 13//60 u(i-1) + 47//60 u(i) + 9//20 u(i+1) - 1//20 u(i+2) 
u(i+1//2) = - 1//20 u(i-3) + 17//60 u(i-2) - 43//60 u(i-1) + 77//60 u(i) + 1//5 u(i+1) 
u(i+1//2) = + 1//5 u(i-4) - 21//20 u(i-3) + 137//60 u(i-2) - 163//60 u(i-1) + 137//60 u(i) 
Optimal weights γ: Rational[5//126, 20//63, 10//21, 10//63, 1//126]
[2020/10/25 19:47:29.124] INFO  Testing utils...
[2020/10/25 19:47:30.010] INFO  Testing models...
[2020/10/25 19:47:30.076] INFO    Testing (Periodic, Periodic, Periodic) model construction...
[2020/10/25 19:47:37.035] INFO    Testing (Periodic, Periodic, Bounded) model construction...
[2020/10/25 19:47:39.061] INFO    Testing (Periodic, Bounded, Bounded) model construction...
[2020/10/25 19:47:41.498] INFO    Testing (Bounded, Bounded, Bounded) model construction...
[2020/10/25 19:47:43.948] INFO    Testing adjustment of halos in IncompressibleModel constructor...
[2020/10/25 19:47:45.459] INFO    Testing model construction with single tracer and nothing tracer...
[2020/10/25 19:47:46.903] INFO    Testing non-dimensional model construction...
[2020/10/25 19:47:53.885] INFO    Testing setting model fields...
[2020/10/25 19:48:08.461] INFO  Testing time stepping...
[2020/10/25 19:48:08.461] INFO    Testing time stepping with datetime clocks [CPU, Float32]
[2020/10/25 19:48:43.912] INFO    Testing time stepping with datetime clocks [CPU, Float64]
[2020/10/25 19:48:43.927] INFO    Testing that time stepping works with flat dimensions [CPU, Flat, Periodic, Periodic]...
[2020/10/25 19:49:04.302] INFO    Testing that time stepping works with flat dimensions [CPU, Periodic, Flat, Periodic]...
[2020/10/25 19:49:20.250] INFO    Testing that time stepping works with flat dimensions [CPU, Periodic, Periodic, Flat]...
[2020/10/25 19:49:36.505] INFO    Testing that time stepping works with flat dimensions [CPU, Flat, Flat, Bounded]...
[2020/10/25 19:49:50.818] INFO    Testing that time stepping works [CPU, Float64, FPlane]...
[2020/10/25 19:50:04.045] INFO    Testing that time stepping works [CPU, Float64, NonTraditionalFPlane]...
[2020/10/25 19:50:09.335] INFO    Testing that time stepping works [CPU, Float64, BetaPlane]...
[2020/10/25 19:50:14.201] INFO    Testing that time stepping works [CPU, Float64, NonTraditionalBetaPlane]...
[2020/10/25 19:50:19.716] INFO    Testing time stepping with advection schemes [CPU, CenteredSecondOrder]
[2020/10/25 19:50:24.044] INFO    Testing time stepping with advection schemes [CPU, UpwindBiasedThirdOrder]
[2020/10/25 19:50:39.011] INFO    Testing time stepping with advection schemes [CPU, CenteredFourthOrder]
[2020/10/25 19:51:03.948] INFO    Testing time stepping with advection schemes [CPU, UpwindBiasedFifthOrder]
[2020/10/25 19:51:28.331] INFO    Testing time stepping with advection schemes [CPU, WENO5]
[2020/10/25 19:53:44.663] INFO    Testing that time stepping works with background fields [CPU]...
[2020/10/25 19:53:59.577] INFO    Testing that time stepping works [CPU, Float64, nothing]...
[2020/10/25 19:54:09.498] INFO    Testing that time stepping works [CPU, Float64, IsotropicDiffusivity]...
[2020/10/25 19:54:09.639] INFO    Testing that time stepping works [CPU, Float64, AnisotropicDiffusivity]...
[2020/10/25 19:54:15.622] INFO    Testing that time stepping works [CPU, Float64, AnisotropicBiharmonicDiffusivity]...
[2020/10/25 19:54:26.278] INFO    Testing that time stepping works [CPU, Float64, TwoDimensionalLeith]...
[2020/10/25 19:54:26.279] INFO    Testing that time stepping works [CPU, Float64, SmagorinskyLilly]...
[2020/10/25 19:54:39.580] INFO    Testing that time stepping works [CPU, Float64, BlasiusSmagorinsky]...
[2020/10/25 19:54:50.201] INFO    Testing that time stepping works [CPU, Float64, VerstappenAnisotropicMinimumDissipation]...
[2020/10/25 19:55:18.735] INFO    Testing that time stepping works [CPU, Float64, RozemaAnisotropicMinimumDissipation]...
[2020/10/25 19:55:45.705] INFO    Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU, Float64, RoquetEquationOfState]
[2020/10/25 19:55:50.687] INFO    Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU, Float64, TEOS10EquationOfState]
[2020/10/25 19:55:55.222] INFO    Testing 2nd-order Adams-Bashforth...
[2020/10/25 19:56:45.834] INFO    Testing incompressibility...
[2020/10/25 19:57:15.223] INFO  Velocity divergence after 1 time steps [CPU, Float32, QuasiAdamsBashforth2]: min=-3.980754e-8, max=3.843312e-8, max_abs_div=3.980754e-8, sum=5.5333516e-11, abs_sum=3.5994177e-5
[2020/10/25 19:57:19.725] INFO  Velocity divergence after 1 time steps [CPU, Float32, RungeKutta3]: min=-1.3269859e-8, max=1.2811019e-8, max_abs_div=1.3269859e-8, sum=1.3709034e-12, abs_sum=1.19984e-5
[2020/10/25 19:57:21.150] INFO  Velocity divergence after 10 time steps [CPU, Float32, QuasiAdamsBashforth2]: min=-3.980688e-8, max=3.8432773e-8, max_abs_div=3.980688e-8, sum=7.0132344e-11, abs_sum=3.5996625e-5
[2020/10/25 19:57:22.800] INFO  Velocity divergence after 10 time steps [CPU, Float32, RungeKutta3]: min=-1.32697755e-8, max=1.28109825e-8, max_abs_div=1.32697755e-8, sum=-2.4954705e-11, abs_sum=1.2001282e-5
[2020/10/25 19:57:27.681] INFO  Velocity divergence after 100 time steps [CPU, Float32, QuasiAdamsBashforth2]: min=-3.9803332e-8, max=3.8436617e-8, max_abs_div=3.9803332e-8, sum=-1.2277255e-9, abs_sum=3.605276e-5
[2020/10/25 19:57:45.878] INFO  Velocity divergence after 100 time steps [CPU, Float32, RungeKutta3]: min=-1.3266691e-8, max=1.2812671e-8, max_abs_div=1.3266691e-8, sum=-3.700582e-10, abs_sum=1.2068536e-5
[2020/10/25 19:58:10.016] INFO  Velocity divergence after 1 time steps [CPU, Float64, QuasiAdamsBashforth2]: min=-3.9807493470274435e-8, max=3.843304892886209e-8, max_abs_div=3.9807493470274435e-8, sum=-4.317326932155169e-18, abs_sum=3.5959413510713314e-5
[2020/10/25 19:58:14.461] INFO  Velocity divergence after 1 time steps [CPU, Float64, RungeKutta3]: min=-1.3269164427932815e-8, max=1.2811016368938652e-8, max_abs_div=1.3269164427932815e-8, sum=-3.7121751627660364e-14, abs_sum=1.198647117992693e-5
[2020/10/25 19:58:15.212] INFO  Velocity divergence after 10 time steps [CPU, Float64, QuasiAdamsBashforth2]: min=-3.9807473454679864e-8, max=3.843306820505406e-8, max_abs_div=3.9807473454679864e-8, sum=-1.57595300437948e-11, abs_sum=3.595941708679306e-5
[2020/10/25 19:58:17.170] INFO  Velocity divergence after 10 time steps [CPU, Float64, RungeKutta3]: min=-1.3269157437378778e-8, max=1.281102310241966e-8, max_abs_div=1.3269157437378778e-8, sum=-5.566781788676062e-12, abs_sum=1.19864724319642e-5
[2020/10/25 19:58:23.251] INFO  Velocity divergence after 100 time steps [CPU, Float64, QuasiAdamsBashforth2]: min=-3.980532411643808e-8, max=3.843513817734529e-8, max_abs_div=3.980532411643808e-8, sum=-1.7140522350180077e-9, abs_sum=3.595980158291877e-5
[2020/10/25 19:58:41.464] INFO  Velocity divergence after 100 time steps [CPU, Float64, RungeKutta3]: min=-1.3268438703733371e-8, max=1.2811715324235334e-8, max_abs_div=1.3268438703733371e-8, sum=-5.74083566243225e-10, abs_sum=1.1986601080111645e-5
[2020/10/25 19:58:41.464] INFO    Testing tracer conservation in channel...
[2020/10/25 19:59:11.580] INFO  Tracer conservation after 10 time steps [CPU, Float32]: ⟨T⟩-T₀=2.1316282072803006e-14 °C
[2020/10/25 19:59:24.534] INFO  Tracer conservation after 10 time steps [CPU, Float64]: ⟨T⟩-T₀=1.0658141036401503e-14 °C
[2020/10/25 19:59:24.656] INFO  Testing stepping with boundary conditions...
[2020/10/25 19:59:24.664] INFO    Testing boundary condition instantiation and time-stepping [CPU, Float64]...
[2020/10/25 20:12:54.504] INFO    Testing flux budgets with custom diffusivity boundary conditions [CPU, Float64]...
[2020/10/25 20:13:33.945] INFO  Testing forcings...
[2020/10/25 20:13:33.945] INFO    Testing forcing function time stepping [CPU]...
[2020/10/25 20:13:33.945] INFO        Testing non-parameterized forcing functions [CPU]...
[2020/10/25 20:13:45.298] INFO        Testing parameterized forcing functions [CPU]...
[2020/10/25 20:13:55.744] INFO        Testing field-dependent forcing functions [CPU]...
[2020/10/25 20:14:27.352] INFO        Testing relaxation forcing functions [CPU]...
[2020/10/25 20:14:34.914] INFO  Testing turbulence closures...
[2020/10/25 20:14:34.914] INFO    Testing closure instantiation...
[2020/10/25 20:14:34.987] INFO    Testing constant isotropic diffusivity...
[2020/10/25 20:14:42.850] INFO    Testing constant anisotropic diffusivity...
[2020/10/25 20:14:45.323] INFO    Testing time-stepping with presribed variable diffusivities...
[2020/10/25 20:15:07.337] INFO    Testing calculation of nonlinear diffusivities...
[2020/10/25 20:15:07.337] INFO      Calculating diffusivities for IsotropicDiffusivity [Float64, CPU]
[2020/10/25 20:15:07.475] INFO      Calculating diffusivities for AnisotropicDiffusivity [Float64, CPU]
[2020/10/25 20:15:07.506] INFO      Calculating diffusivities for AnisotropicBiharmonicDiffusivity [Float64, CPU]
[2020/10/25 20:15:07.538] INFO      Calculating diffusivities for TwoDimensionalLeith [Float64, CPU]
[2020/10/25 20:15:10.742] INFO      Calculating diffusivities for SmagorinskyLilly [Float64, CPU]
[2020/10/25 20:15:14.222] INFO      Calculating diffusivities for BlasiusSmagorinsky [Float64, CPU]
[2020/10/25 20:15:17.061] INFO      Calculating diffusivities for RozemaAnisotropicMinimumDissipation [Float64, CPU]
[2020/10/25 20:16:56.139] INFO      Calculating diffusivities for VerstappenAnisotropicMinimumDissipation [Float64, CPU]
[2020/10/25 20:18:33.701] INFO    Testing time-stepping with a tuple of closures...
[2020/10/25 20:19:19.050] INFO    Testing turbulence closure diagnostics...
[2020/10/25 20:19:33.158] INFO  Testing dynamics...
[2020/10/25 20:19:33.158] INFO    Testing simple diffusion...
[2020/10/25 20:19:56.607] INFO    Testing model budgets with isotropic diffusion...
[2020/10/25 20:19:58.078] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:20:19.917] INFO      Initial <c>: 0.5309533249150428, final <c>: 0.5309533249150429, final - initial: 1.1102e-16
[2020/10/25 20:20:19.917] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:20:20.393] INFO      Initial <u>: 0.5110591306808299, final <u>: 0.5110591306808300, final - initial: 1.1102e-16
[2020/10/25 20:20:20.393] INFO      [QuasiAdamsBashforth2] Testing v budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:20:21.118] INFO      Initial <v>: 0.5196828852636947, final <v>: 0.5196828852636947, final - initial: 0.0000e+00
[2020/10/25 20:20:21.118] INFO      [QuasiAdamsBashforth2] Testing w budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:20:21.473] INFO      Initial <w>: 0.5464612532600328, final <w>: 0.5464612532600327, final - initial: -1.1102e-16
[2020/10/25 20:20:21.476] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:20:38.539] INFO      Initial <c>: 0.4671405877156111, final <c>: 0.4671405877156110, final - initial: -1.1102e-16
[2020/10/25 20:20:38.540] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:20:38.862] INFO      Initial <u>: 0.4318277313059845, final <u>: 0.4318277313059843, final - initial: -1.6653e-16
[2020/10/25 20:20:38.863] INFO      [QuasiAdamsBashforth2] Testing v budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:20:39.248] INFO      Initial <v>: 0.4427218554334290, final <v>: 0.4427218554334288, final - initial: -1.6653e-16
[2020/10/25 20:20:40.074] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:03.179] INFO      Initial <c>: 0.4790119131562234, final <c>: 0.4790119131562233, final - initial: -1.1102e-16
[2020/10/25 20:21:03.179] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:03.931] INFO      Initial <u>: 0.4971181797874836, final <u>: 0.4971181797874836, final - initial: 0.0000e+00
[2020/10/25 20:21:04.871] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Bounded, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:28.676] INFO      Initial <c>: 0.4295179884315772, final <c>: 0.4295179884315771, final - initial: -1.1102e-16
[2020/10/25 20:21:28.886] INFO      [RungeKutta3] Testing c budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:21:33.735] INFO      Initial <c>: 0.4738463510286126, final <c>: 0.4738463510286125, final - initial: -5.5511e-17
[2020/10/25 20:21:33.736] INFO      [RungeKutta3] Testing u budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:21:34.286] INFO      Initial <u>: 0.5647571607075641, final <u>: 0.5647571607075641, final - initial: 0.0000e+00
[2020/10/25 20:21:34.286] INFO      [RungeKutta3] Testing v budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:21:35.077] INFO      Initial <v>: 0.4473238917209940, final <v>: 0.4473238917209939, final - initial: -5.5511e-17
[2020/10/25 20:21:35.078] INFO      [RungeKutta3] Testing w budget in a (Periodic, Periodic, Periodic) domain with isotropic diffusion...
[2020/10/25 20:21:35.755] INFO      Initial <w>: 0.4825825203753894, final <w>: 0.4825825203753894, final - initial: 0.0000e+00
[2020/10/25 20:21:35.757] INFO      [RungeKutta3] Testing c budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:39.914] INFO      Initial <c>: 0.4781219574836298, final <c>: 0.4781219574836300, final - initial: 1.6653e-16
[2020/10/25 20:21:39.915] INFO      [RungeKutta3] Testing u budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:40.872] INFO      Initial <u>: 0.4851065824052103, final <u>: 0.4851065824052104, final - initial: 5.5511e-17
[2020/10/25 20:21:40.872] INFO      [RungeKutta3] Testing v budget in a (Periodic, Periodic, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:41.574] INFO      Initial <v>: 0.4480987154278971, final <v>: 0.4480987154278970, final - initial: -1.1102e-16
[2020/10/25 20:21:41.813] INFO      [RungeKutta3] Testing c budget in a (Periodic, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:46.829] INFO      Initial <c>: 0.4885041654498668, final <c>: 0.4885041654498666, final - initial: -1.6653e-16
[2020/10/25 20:21:46.829] INFO      [RungeKutta3] Testing u budget in a (Periodic, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:47.889] INFO      Initial <u>: 0.4222186938100396, final <u>: 0.4222186938100397, final - initial: 5.5511e-17
[2020/10/25 20:21:48.086] INFO      [RungeKutta3] Testing c budget in a (Bounded, Bounded, Bounded) domain with isotropic diffusion...
[2020/10/25 20:21:53.380] INFO      Initial <c>: 0.5448407022847291, final <c>: 0.5448407022847291, final - initial: 0.0000e+00
[2020/10/25 20:21:53.384] INFO    Testing model budgets with biharmonic diffusion...
[2020/10/25 20:21:53.903] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Periodic, Periodic) domain with biharmonic diffusion...
[2020/10/25 20:22:15.334] INFO      Initial <c>: 0.5830618227888623, final <c>: 0.5830618227888624, final - initial: 1.1102e-16
[2020/10/25 20:22:15.335] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Periodic, Periodic) domain with biharmonic diffusion...
[2020/10/25 20:22:15.622] INFO      Initial <u>: 0.6504676181466179, final <u>: 0.6504676181466179, final - initial: 0.0000e+00
[2020/10/25 20:22:15.622] INFO      [QuasiAdamsBashforth2] Testing v budget in a (Periodic, Periodic, Periodic) domain with biharmonic diffusion...
[2020/10/25 20:22:15.901] INFO      Initial <v>: 0.6280004174550148, final <v>: 0.6280004174550148, final - initial: 0.0000e+00
[2020/10/25 20:22:15.902] INFO      [QuasiAdamsBashforth2] Testing w budget in a (Periodic, Periodic, Periodic) domain with biharmonic diffusion...
[2020/10/25 20:22:16.250] INFO      Initial <w>: 0.4481165743820310, final <w>: 0.4481165743820310, final - initial: 0.0000e+00
[2020/10/25 20:22:16.533] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Periodic, Bounded) domain with biharmonic diffusion...
[2020/10/25 20:22:37.019] INFO      Initial <c>: 0.4973919693390821, final <c>: 0.4973919693390821, final - initial: 5.5511e-17
[2020/10/25 20:22:37.019] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Periodic, Bounded) domain with biharmonic diffusion...
[2020/10/25 20:22:37.311] INFO      Initial <u>: 0.5240696557740934, final <u>: 0.5240696557740934, final - initial: 0.0000e+00
[2020/10/25 20:22:37.311] INFO      [QuasiAdamsBashforth2] Testing v budget in a (Periodic, Periodic, Bounded) domain with biharmonic diffusion...
[2020/10/25 20:22:37.585] INFO      Initial <v>: 0.3937387496058774, final <v>: 0.3937387496058773, final - initial: -5.5511e-17
[2020/10/25 20:22:37.802] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Periodic, Bounded, Bounded) domain with biharmonic diffusion...
[2020/10/25 20:22:59.766] INFO      Initial <c>: 0.5227797918287648, final <c>: 0.5227797918287647, final - initial: -1.1102e-16
[2020/10/25 20:22:59.766] INFO      [QuasiAdamsBashforth2] Testing u budget in a (Periodic, Bounded, Bounded) domain with biharmonic diffusion...
[2020/10/25 20:23:00.146] INFO      Initial <u>: 0.5270566312923992, final <u>: 0.5270566312923991, final - initial: -1.1102e-16
[2020/10/25 20:23:00.420] INFO      [QuasiAdamsBashforth2] Testing c budget in a (Bounded, Bounded, Bounded) domain with biharmonic diffusion...
