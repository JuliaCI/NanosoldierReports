Current time is 2020-10-25T22:55:54.418
Julia Version 1.5.3-pre.0
Commit 5905edebb1 (2020-09-24 05:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T22:55:57.624
  Resolving package versions...
  Installed VersionParsing ────────────── v1.2.0
  Installed Missings ──────────────────── v0.4.4
  Installed DataAPI ───────────────────── v1.3.0
  Installed Conda ─────────────────────── v1.4.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed WeakRefStrings ────────────── v0.6.2
  Installed MacroTools ────────────────── v0.5.6
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v3.22.0
  Installed OrderedCollections ────────── v1.3.1
  Installed Tables ────────────────────── v1.1.0
  Installed JSON ──────────────────────── v0.21.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed StaticArrays ──────────────── v0.12.4
  Installed AutoHashEquals ────────────── v0.2.0
  Installed Geodesy ───────────────────── v0.5.0
  Installed FilePathsBase ─────────────── v0.7.0
  Installed PyCall ────────────────────── v1.92.1
  Installed CoordinateTransformations ─── v0.6.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed TableTraits ───────────────── v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataFrames ────────────────── v0.20.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Parsers ───────────────────── v0.3.12
  Installed DataStructures ────────────── v0.18.8
  Installed SyntheticGrids ────────────── v0.1.0
  Installed CSV ───────────────────────── v0.5.26
Updating `~/.julia/environments/v1.5/Project.toml`
  [34f115b4] + SyntheticGrids v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [15f4f7f2] + AutoHashEquals v0.2.0
  [336ed68f] + CSV v0.5.26
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.22.0
  [8f4d0f93] + Conda v1.4.1
  [150eb455] + CoordinateTransformations v0.6.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [48062228] + FilePathsBase v0.7.0
  [0ef565a4] + Geodesy v0.5.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v0.3.12
  [2dfb63ee] + PooledArrays v0.5.3
  [438e738f] + PyCall v1.92.1
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [90137ffa] + StaticArrays v0.12.4
  [34f115b4] + SyntheticGrids v0.1.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [81def892] + VersionParsing v1.2.0
  [ea10d353] + WeakRefStrings v0.6.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─────────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall ────────→ `~/.julia/packages/PyCall/BcTLp/deps/build.log`
   Building SyntheticGrids → `~/.julia/packages/SyntheticGrids/WgelH/deps/build.log`
┌ Error: Error building `SyntheticGrids`: 
│ Collecting package metadata (current_repodata.json): ...working... done
│ Solving environment: ...working... done
│ 
│ ## Package Plan ##
│ 
│   environment location: /home/pkgeval/.julia/conda/3
│ 
│   added / updated specs:
│     - conda
│ 
│ 
│ The following packages will be downloaded:
│ 
│     package                    |            build
│     ---------------------------|-----------------
│     python-3.8.5               |       h7579374_1        49.3 MB
│     ------------------------------------------------------------
│                                            Total:        49.3 MB
│ 
│ The following packages will be UPDATED:
│ 
│   python                                   3.8.3-hcff3b4d_0 --> 3.8.5-h7579374_1
│ 
│ 
│ Preparing transaction: ...working... done
│ Verifying transaction: ...working... done
│ Executing transaction: ...working... done
│ Collecting package metadata (current_repodata.json): ...working... done
│ Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
│ Solving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.
│ Collecting package metadata (repodata.json): ...working... done
│ Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
│ Solving environment: ...working... Building graph of deps:   0%|          | 0/5 [00:00<?, ?it/s]Examining @/linux-64::__glibc==2.31=0:   0%|          | 0/5 [00:00<?, ?it/s]Examining numpy==1.17.0:  20%|██        | 1/5 [00:00<00:00, 3898.05it/s]    Examining @/linux-64::__unix==0=0:  40%|████      | 2/5 [00:00<00:00,  5.33it/s]Examining @/linux-64::__unix==0=0:  60%|██████    | 3/5 [00:00<00:00,  7.99it/s]Examining @/linux-64::__archspec==1=x86_64:  60%|██████    | 3/5 [00:00<00:00,  7.99it/s]Examining python=3.8:  80%|████████  | 4/5 [00:00<00:00,  7.99it/s]                                                                                         Determining conflicts:   0%|          | 0/5 [00:00<?, ?it/s]Examining conflict for numpy python:   0%|          | 0/5 [00:00<?, ?it/s]                                                                          
│ Found conflicts! Looking for incompatible packages.
│ This can take several minutes.  Press CTRL-C to abort.
│ failed
│ 
│ UnsatisfiableError: The following specifications were found
│ to be incompatible with the existing python installation in your environment:
│ 
│ Specifications:
│ 
│   - numpy==1.17.0 -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0']
│ 
│ Your python: python=3.8
│ 
│ If python is on the left-most side of the chain, that's the version you've asked for.
│ When python appears to the right, that indicates that the thing on the left is somehow
│ not available for the python version you are constrained to. Note that conda will not
│ change your python version to a different minor version unless you explicitly specify
│ that.
│ 
│ 
│ 
│ [ Info: Running `conda update -q -y --all conda` in root environment
│ [ Info: Running `conda config --add channels conda-forge --file /home/pkgeval/.julia/conda/3/condarc-julia.yml --force` in root environment
│ [ Info: Running `conda install -q -y numpy==1.17.0` in root environment
│ ERROR: LoadError: failed process: Process(setenv(`/home/pkgeval/.julia/conda/3/bin/conda install -q -y numpy==1.17.0`,["PYTHONIOENCODING=UTF-8", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "PWD=/home/pkgeval", "DISPLAY=:99", "OPENBLAS_NUM_THREADS=8", "XAUTHORITY=/tmp/xvfb-run.srAhqo/Xauthority", "CI=true", "CONDARC=/home/pkgeval/.julia/conda/3/condarc-julia.yml", "R_HOME=*", "CONDA_PREFIX=/home/pkgeval/.julia/conda/3"  …  "DEBIAN_FRONTEND=noninteractive", "JULIA_LOAD_PATH=@:/tmp/jl_GHSmH0", "JULIA_MAX_NUM_PRECOMPILE_FILES=9223372036854775807", "PKGEVAL=true", "HOME=/home/pkgeval", "JULIA_PKGEVAL=true", "JULIA_DEPOT_PATH=::/usr/local/share/julia", "HOSTNAME=445074c3761a", "JULIA_NUM_THREADS=2", "OPENBLAS_MAIN_FREE=1"]), ProcessExited(1)) [1]
│ 
│ Stacktrace:
│  [1] pipeline_error at ./process.jl:525 [inlined]
│  [2] run(::Cmd; wait::Bool) at ./process.jl:440
│  [3] run at ./process.jl:438 [inlined]
│  [4] runconda(::Cmd, ::String) at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:114
│  [5] add(::String, ::String; channel::String) at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:188
│  [6] add at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:187 [inlined] (repeats 2 times)
│  [7] top-level scope at /home/pkgeval/.julia/packages/SyntheticGrids/WgelH/deps/build.jl:32
│  [8] include(::String) at ./client.jl:457
│  [9] top-level scope at none:5
│ in expression starting at /home/pkgeval/.julia/packages/SyntheticGrids/WgelH/deps/build.jl:32
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:949
Starting tests at 2020-10-25T22:59:17.373
    Testing SyntheticGrids
Status `/tmp/jl_vpFccZ/Project.toml`
  [15f4f7f2] AutoHashEquals v0.2.0
  [336ed68f] CSV v0.5.26
  [8f4d0f93] Conda v1.4.1
  [0ef565a4] Geodesy v0.5.0
  [682c06a0] JSON v0.21.1
  [438e738f] PyCall v1.92.1
  [34f115b4] SyntheticGrids v0.1.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_vpFccZ/Manifest.toml`
  [15f4f7f2] AutoHashEquals v0.2.0
  [336ed68f] CSV v0.5.26
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.22.0
  [8f4d0f93] Conda v1.4.1
  [150eb455] CoordinateTransformations v0.6.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [48062228] FilePathsBase v0.7.0
  [0ef565a4] Geodesy v0.5.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v0.3.12
  [2dfb63ee] PooledArrays v0.5.3
  [438e738f] PyCall v1.92.1
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.4
  [34f115b4] SyntheticGrids v0.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [81def892] VersionParsing v1.2.0
  [ea10d353] WeakRefStrings v0.6.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Installing pandapower via the Conda pandapower==2.1.0 package...
[ Info: Running `conda config --add channels invenia --file /home/pkgeval/.julia/conda/3/condarc-julia.yml --force` in root environment
[ Info: Running `conda install -q -y pandapower==2.1.0` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
Solving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.
Collecting package metadata (repodata.json): ...working... done
Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
Solving environment: ...working... Building graph of deps:   0%|          | 0/5 [00:00<?, ?it/s]Examining @/linux-64::__unix==0=0:   0%|          | 0/5 [00:00<?, ?it/s]Examining @/linux-64::__glibc==2.31=0:  20%|██        | 1/5 [00:00<00:00, 4271.19it/s]Examining @/linux-64::__archspec==1=x86_64:  40%|████      | 2/5 [00:00<00:00, 5008.12it/s]Examining python=3.8:  60%|██████    | 3/5 [00:00<00:00, 5482.75it/s]                      Examining pandapower==2.1.0:  80%|████████  | 4/5 [00:01<00:00,  3.43it/s]Examining pandapower==2.1.0: 100%|██████████| 5/5 [00:01<00:00,  4.29it/s]                                                                          Determining conflicts:   0%|          | 0/5 [00:00<?, ?it/s]Examining conflict for python pandapower:   0%|          | 0/5 [00:00<?, ?it/s]                                                                               
Found conflicts! Looking for incompatible packages.
This can take several minutes.  Press CTRL-C to abort.
failed

UnsatisfiableError: The following specifications were found
to be incompatible with the existing python installation in your environment:

Specifications:

  - pandapower==2.1.0 -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0']

Your python: python=3.8

If python is on the left-most side of the chain, that's the version you've asked for.
When python appears to the right, that indicates that the thing on the left is somehow
not available for the python version you are constrained to. Note that conda will not
change your python version to a different minor version unless you explicitly specify
that.



ERROR: LoadError: InitError: failed process: Process(setenv(`/home/pkgeval/.julia/conda/3/bin/conda install -q -y pandapower==2.1.0`,["PYTHONIOENCODING=UTF-8", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "PWD=/home/pkgeval", "DISPLAY=:99", "OPENBLAS_NUM_THREADS=8", "XAUTHORITY=/tmp/xvfb-run.srAhqo/Xauthority", "CI=true", "CONDARC=/home/pkgeval/.julia/conda/3/condarc-julia.yml", "R_HOME=*", "CONDA_PREFIX=/home/pkgeval/.julia/conda/3"  …  "DEBIAN_FRONTEND=noninteractive", "JULIA_LOAD_PATH=@:/tmp/jl_vpFccZ", "JULIA_MAX_NUM_PRECOMPILE_FILES=9223372036854775807", "PKGEVAL=true", "HOME=/home/pkgeval", "JULIA_PKGEVAL=true", "JULIA_DEPOT_PATH=::/usr/local/share/julia", "HOSTNAME=445074c3761a", "JULIA_NUM_THREADS=2", "OPENBLAS_MAIN_FREE=1"]), ProcessExited(1)) [1]

Stacktrace:
 [1] pipeline_error at ./process.jl:525 [inlined]
 [2] run(::Cmd; wait::Bool) at ./process.jl:440
 [3] run at ./process.jl:438 [inlined]
 [4] runconda(::Cmd, ::String) at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:114
 [5] add(::String, ::String; channel::String) at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:188
 [6] add at /home/pkgeval/.julia/packages/Conda/3rPhK/src/Conda.jl:187 [inlined] (repeats 2 times)
 [7] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/BcTLp/src/PyCall.jl:710
 [8] __init__() at /home/pkgeval/.julia/packages/SyntheticGrids/WgelH/src/SyntheticGrids.jl:21
 [9] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [10] _require_from_serialized(::String) at ./loading.jl:749
 [11] _require(::Base.PkgId) at ./loading.jl:1040
 [12] require(::Base.PkgId) at ./loading.jl:928
 [13] require(::Module, ::Symbol) at ./loading.jl:923
 [14] include(::String) at ./client.jl:457
 [15] top-level scope at none:6
during initialization of module SyntheticGrids
in expression starting at /home/pkgeval/.julia/packages/SyntheticGrids/WgelH/test/runtests.jl:1
caused by [exception 1]
PyError (PyImport_ImportModule

The Python package pandapower could not be imported by pyimport. Usually this means
that you did not install pandapower in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the pandapower module, you can
use `pyimport_conda("pandapower", PKG)`, where PKG is the Anaconda
package the contains the module pandapower, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'pandapower'")

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/BcTLp/src/PyCall.jl:547
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/BcTLp/src/PyCall.jl:705
 [3] __init__() at /home/pkgeval/.julia/packages/SyntheticGrids/WgelH/src/SyntheticGrids.jl:21
 [4] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [5] _require_from_serialized(::String) at ./loading.jl:749
 [6] _require(::Base.PkgId) at ./loading.jl:1040
 [7] require(::Base.PkgId) at ./loading.jl:928
 [8] require(::Module, ::Symbol) at ./loading.jl:923
 [9] include(::String) at ./client.jl:457
 [10] top-level scope at none:6
ERROR: Package SyntheticGrids errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:35
