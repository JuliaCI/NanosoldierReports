Current time is 2020-10-25T22:41:08.421
Julia Version 1.5.3-pre.13
Commit 3de1115e9c (2020-10-23 21:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T22:41:11.561
  Resolving package versions...
  Installed RBNF ─────────────── v0.2.1
  Installed PrettyPrint ──────── v0.2.0
  Installed OrderedCollections ─ v1.3.1
  Installed Compat ───────────── v3.22.0
  Installed DataStructures ───── v0.18.8
  Installed MLStyle ──────────── v0.4.6
Updating `~/.julia/environments/v1.5/Project.toml`
  [83ef0002] + RBNF v0.2.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [34da2185] + Compat v3.22.0
  [864edb3b] + DataStructures v0.18.8
  [d8e11817] + MLStyle v0.4.6
  [bac558e1] + OrderedCollections v1.3.1
  [8162dcfd] + PrettyPrint v0.2.0
  [83ef0002] + RBNF v0.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Starting tests at 2020-10-25T22:41:14.803
    Testing RBNF
Status `/tmp/jl_uK6p5X/Project.toml`
  [864edb3b] DataStructures v0.18.8
  [d8e11817] MLStyle v0.4.6
  [8162dcfd] PrettyPrint v0.2.0
  [83ef0002] RBNF v0.2.1
  [8dfed614] Test
Status `/tmp/jl_uK6p5X/Manifest.toml`
  [34da2185] Compat v3.22.0
  [864edb3b] DataStructures v0.18.8
  [d8e11817] MLStyle v0.4.6
  [bac558e1] OrderedCollections v1.3.1
  [8162dcfd] PrettyPrint v0.2.0
  [83ef0002] RBNF v0.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Main.QASM.MainProgram(
  ver=2.0,
  prog=[
         Main.QASM.S_gate(
           decl=Main.QASM.S_gatedecl(
                  id=Token{id}(str=cu1, lineno=3, colno=3),
                  arglist1=Token{id}(str=lambda, lineno=3, colno=3),
                  arglist2=(
                             Token{id}(str=a, lineno=3, colno=3),
                             Token{id}(str=b, lineno=3, colno=3),
                           ),
                ),
           goplist=[
                     Main.QASM.S_u(
                       exprs=(
                               (
                                 Token{nninteger}(str=0, lineno=5, colno=5),
                                 Token{nninteger}(str=0, lineno=5, colno=5),
                               ),
                               (
                                 Token{id}(str=theta, lineno=5, colno=5),
                                 Token{unnamed}(str=/, lineno=5, colno=5),
                                 Token{nninteger}(str=2, lineno=5, colno=5),
                               ),
                             ),
                       arg=Main.QASM.S_argument(
                             id=Token{id}(str=a, lineno=5, colno=5),
                             arg=nothing,
                           ),
                     ),
                     Main.QASM.S_cx(
                       arg1=Main.QASM.S_argument(
                              id=Token{id}(str=a, lineno=6, colno=6),
                              arg=nothing,
                            ),
                       arg2=Main.QASM.S_argument(
                              id=Token{id}(str=b, lineno=6, colno=6),
                              arg=nothing,
                            ),
                     ),
                     Main.QASM.S_u(
                       exprs=(
                               (
                                 Token{nninteger}(str=0, lineno=7, colno=7),
                                 Token{nninteger}(str=0, lineno=7, colno=7),
                               ),
                               Main.QASM.S_neg(
                                 value=(
                                         Token{id}(str=theta, lineno=7, colno=7),
                                         Token{unnamed}(str=/, lineno=7, colno=7),
                                         Token{nninteger}(str=2, lineno=7, colno=7),
                                       ),
                               ),
                             ),
                       arg=Main.QASM.S_argument(
                             id=Token{id}(str=b, lineno=7, colno=7),
                             arg=nothing,
                           ),
                     ),
                     Main.QASM.S_cx(
                       arg1=Main.QASM.S_argument(
                              id=Token{id}(str=a, lineno=8, colno=8),
                              arg=nothing,
                            ),
                       arg2=Main.QASM.S_argument(
                              id=Token{id}(str=b, lineno=8, colno=8),
                              arg=nothing,
                            ),
                     ),
                     Main.QASM.S_u(
                       exprs=(
                               (
                                 Token{nninteger}(str=0, lineno=9, colno=9),
                                 Token{nninteger}(str=0, lineno=9, colno=9),
                               ),
                               (
                                 Token{id}(str=theta, lineno=9, colno=9),
                                 Token{unnamed}(str=/, lineno=9, colno=9),
                                 Token{nninteger}(str=2, lineno=9, colno=9),
                               ),
                             ),
                       arg=Main.QASM.S_argument(
                             id=Token{id}(str=b, lineno=9, colno=9),
                             arg=nothing,
                           ),
                     ),
                   ],
         ),
         Main.QASM.S_decl(
           regtype=Token{id}(str=qreg, lineno=12, colno=12),
           id=Token{id}(str=q, lineno=12, colno=12),
           int=Token{nninteger}(str=3, lineno=12, colno=12),
         ),
         Main.QASM.S_decl(
           regtype=Token{id}(str=qreg, lineno=13, colno=13),
           id=Token{id}(str=a, lineno=13, colno=13),
           int=Token{nninteger}(str=2, lineno=13, colno=13),
         ),
         Main.QASM.S_decl(
           regtype=Token{id}(str=creg, lineno=14, colno=14),
           id=Token{id}(str=c, lineno=14, colno=14),
           int=Token{nninteger}(str=3, lineno=14, colno=14),
         ),
         Main.QASM.S_decl(
           regtype=Token{id}(str=creg, lineno=15, colno=15),
           id=Token{id}(str=syn, lineno=15, colno=15),
           int=Token{nninteger}(str=2, lineno=15, colno=15),
         ),
         Main.QASM.S_iduop(
           op=Token{id}(str=cu1, lineno=16, colno=16),
           lst1=(
                  Token{id}(str=pi, lineno=16, colno=16),
                  Token{unnamed}(str=/, lineno=16, colno=16),
                  Token{nninteger}(str=2, lineno=16, colno=16),
                ),
           lst2=(
                  Main.QASM.S_mixeditem(
                    id=Token{id}(str=q, lineno=16, colno=16),
                    arg=Token{nninteger}(str=0, lineno=16, colno=16),
                  ),
                  Main.QASM.S_mixeditem(
                    id=Token{id}(str=q, lineno=16, colno=16),
                    arg=Token{nninteger}(str=1, lineno=16, colno=16),
                  ),
                ),
         ),
       ],
)RModule(
  hd=Token{reserved}(str=module, lineno=1, colno=1),
  name=Token{id}(str=Poly, lineno=1, colno=1),
  stmts=[
          RDefine(
            hd=Token{reserved}(str=def, lineno=2, colno=2),
            name=Token{id}(str=a, lineno=2, colno=2),
            value=RExp(
                    hd=RComp(
                         forall=nothing,
                         value=RCall(
                                 fn=RAnnotate(
                                      value=RStr(
                                              value=Token{str}(str="12\"3", lineno=2, colno=2),
                                            ),
                                    ),
                                 args=[],
                               ),
                       ),
                    tl=[],
                  ),
          ),
          RClass(
            hd=Token{reserved}(str=class, lineno=4, colno=4),
            name=Token{id}(str=Monad, lineno=4, colno=4),
            ids=[
                  Token{id}(str=m, lineno=4, colno=4),
                ],
            constrains=RConstaints(
                         hd=Token{reserved}(str=that, lineno=4, colno=4),
                         elts=GoodSeq{Any}(
                                head=RCall(
                                       fn=RAnnotate(
                                            value=RVar(
                                                    value=Token{id}(str=Functor, lineno=4, colno=4),
                                                  ),
                                          ),
                                       args=[
                                              RAnnotate(
                                                value=RVar(
                                                        value=Token{id}(str=m, lineno=4, colno=4),
                                                      ),
                                              ),
                                            ],
                                     ),
                                tail=[],
                              ),
                       ),
            interfaces=[
                         RDecl(
                           hd=Token{reserved}(str=val, lineno=5, colno=5),
                           name=Token{id}(str=bind, lineno=5, colno=5),
                           typ=RExp(
                                 hd=RComp(
                                      forall=RForall(
                                               fresh=[
                                                       Token{id}(str=a, lineno=5, colno=5),
                                                       Token{id}(str=b, lineno=5, colno=5),
                                                     ],
                                               constraints=nothing,
                                             ),
                                      value=RCall(
                                              fn=RAnnotate(
                                                   value=RVar(
                                                           value=Token{id}(str=m, lineno=5, colno=5),
                                                         ),
                                                 ),
                                              args=[
                                                     RAnnotate(
                                                       value=RVar(
                                                               value=Token{id}(str=a, lineno=5, colno=5),
                                                             ),
                                                     ),
                                                   ],
                                            ),
                                    ),
                                 tl=[
                                      [
                                        ROp(name=nothing, 
                                            is_typeop=true),
                                        RComp(
                                          forall=nothing,
                                          value=RCall(
                                                  fn=RAnnotate(
                                                       value=RExp(
                                                               hd=RComp(
                                                                    forall=nothing,
                                                                    value=RCall(
                                                                            fn=RAnnotate(
                                                                                 value=RVar(
                                                                                         value=Token{id}(str=a, lineno=5, colno=5),
                                                                                       ),
                                                                               ),
                                                                            args=[],
                                                                          ),
                                                                  ),
                                                               tl=[
                                                                    [
                                                                      ROp(name=nothing, 
                                                                          is_typeop=true),
                                                                      RComp(
                                                                        forall=nothing,
                                                                        value=RCall(
                                                                                fn=RAnnotate(
                                                                                     value=RVar(
                                                                                             value=Token{id}(str=b, lineno=5, colno=5),
                                                                                           ),
                                                                                   ),
                                                                                args=[],
                                                                              ),
                                                                      ),
                                                                    ],
                                                                  ],
                                                             ),
                                                     ),
                                                  args=[],
                                                ),
                                        ),
                                      ],
                                      [
                                        ROp(name=nothing, 
                                            is_typeop=true),
                                        RComp(
                                          forall=nothing,
                                          value=RCall(
                                                  fn=RAnnotate(
                                                       value=RVar(
                                                               value=Token{id}(str=m, lineno=5, colno=5),
                                                             ),
                                                     ),
                                                  args=[
                                                         RAnnotate(
                                                           value=RVar(
                                                                   value=Token{id}(str=b, lineno=5, colno=5),
                                                                 ),
                                                         ),
                                                       ],
                                                ),
                                        ),
                                      ],
                                    ],
                               ),
                         ),
                       ],
          ),
          RDecl(
            hd=Token{reserved}(str=val, lineno=8, colno=8),
            name=Token{id}(str=a, lineno=8, colno=8),
            typ=RExp(
                  hd=RComp(
                       forall=nothing,
                       value=RCall(
                               fn=RAnnotate(
                                    value=RVar(
                                            value=Token{id}(str=Int, lineno=8, colno=8),
                                          ),
                                  ),
                               args=[],
                             ),
                     ),
                  tl=[],
                ),
          ),
          RDefine(
            hd=Token{reserved}(str=def, lineno=9, colno=9),
            name=Token{id}(str=a, lineno=9, colno=9),
            value=RExp(
                    hd=RComp(
                         forall=nothing,
                         value=RCall(
                                 fn=RAnnotate(
                                      value=RStr(
                                              value=Token{str}(str="12345", lineno=9, colno=9),
                                            ),
                                    ),
                                 args=[],
                               ),
                       ),
                    tl=[],
                  ),
          ),
          RDecl(
            hd=Token{reserved}(str=val, lineno=11, colno=11),
            name=Token{id}(str=f, lineno=11, colno=11),
            typ=RExp(
                  hd=RComp(
                       forall=nothing,
                       value=RCall(
                               fn=RAnnotate(
                                    value=RVar(
                                            value=Token{id}(str=Int, lineno=11, colno=11),
                                          ),
                                  ),
                               args=[],
                             ),
                     ),
                  tl=[
                       [
                         ROp(name=nothing, 
                             is_typeop=true),
                         RComp(
                           forall=nothing,
                           value=RCall(
                                   fn=RAnnotate(
                                        value=RVar(
                                                value=Token{id}(str=Int, lineno=11, colno=11),
                                              ),
                                      ),
                                   args=[],
                                 ),
                         ),
                       ],
                     ],
                ),
          ),
          RDefine(
            hd=Token{reserved}(str=def, lineno=12, colno=12),
            name=Token{id}(str=f, lineno=12, colno=12),
            value=RExp(
                    hd=RComp(
                         forall=nothing,
                         value=RFun(
                                 hd=Token{reserved}(str=fn, lineno=12, colno=12),
                                 args=[
                                        Token{id}(str=a, lineno=12, colno=12),
                                      ],
                                 body=RExp(
                                        hd=RComp(
                                             forall=nothing,
                                             value=RCall(
                                                     fn=RAnnotate(
                                                          value=RVar(
                                                                  value=Token{id}(str=a, lineno=12, colno=12),
                                                                ),
                                                        ),
                                                     args=[],
                                                   ),
                                           ),
                                        tl=[
                                             [
                                               ROp(
                                                 name=Token{id}(str=add, lineno=12, colno=12),
                                                 is_typeop=false,
                                               ),
                                               RComp(
                                                 forall=nothing,
                                                 value=RCall(
                                                         fn=RAnnotate(
                                                              value=RNum(
                                                                      neg=nothing,
                                                                      int=Token{integer}(str=1, lineno=12, colno=12),
                                                                      float=nothing,
                                                                    ),
                                                            ),
                                                         args=[],
                                                       ),
                                               ),
                                             ],
                                           ],
                                      ),
                               ),
                       ),
                    tl=[],
                  ),
          ),
          RDecl(
            hd=Token{reserved}(str=val, lineno=14, colno=14),
            name=Token{id}(str=g, lineno=14, colno=14),
            typ=RExp(
                  hd=RComp(
                       forall=nothing,
                       value=RCall(
                               fn=RAnnotate(
                                    value=RVar(
                                            value=Token{id}(str=Int, lineno=14, colno=14),
                                          ),
                                  ),
                               args=[],
                             ),
                     ),
                  tl=[],
                ),
          ),
          RDefine(
            hd=Token{reserved}(str=def, lineno=15, colno=15),
            name=Token{id}(str=g, lineno=15, colno=15),
            value=RExp(
                    hd=RComp(
                         forall=nothing,
                         value=RMatch(
                                 hd=Token{reserved}(str=match, lineno=15, colno=15),
                                 sc=RExp(
                                      hd=RComp(
                                           forall=nothing,
                                           value=RCall(
                                                   fn=RAnnotate(
                                                        value=RNum(
                                                                neg=nothing,
                                                                int=Token{integer}(str=1, lineno=15, colno=15),
                                                                float=nothing,
                                                              ),
                                                      ),
                                                   args=[],
                                                 ),
                                         ),
                                      tl=[],
                                    ),
                                 cases=[
                                         (
                                           RComp(
                                             forall=nothing,
                                             value=RCall(
                                                     fn=RAnnotate(
                                                          value=RNum(
                                                                  neg=nothing,
                                                                  int=Token{integer}(str=1, lineno=16, colno=16),
                                                                  float=nothing,
                                                                ),
                                                        ),
                                                     args=[],
                                                   ),
                                           ),
                                           RExp(
                                             hd=RComp(
                                                  forall=nothing,
                                                  value=RCall(
                                                          fn=RAnnotate(
                                                               value=RNum(
                                                                       neg=nothing,
                                                                       int=Token{integer}(str=2, lineno=16, colno=16),
                                                                       float=nothing,
                                                                     ),
                                                             ),
                                                          args=[],
                                                        ),
                                                ),
                                             tl=[],
                                           ),
                                         ),
                                         (
                                           RComp(
                                             forall=nothing,
                                             value=RCall(
                                                     fn=RAnnotate(
                                                          value=RVar(
                                                                  value=Token{id}(str=_, lineno=17, colno=17),
                                                                ),
                                                        ),
                                                     args=[],
                                                   ),
                                           ),
                                           RExp(
                                             hd=RComp(
                                                  forall=nothing,
                                                  value=RCall(
                                                          fn=RAnnotate(
                                                               value=RNum(
                                                                       neg=nothing,
                                                                       int=Token{integer}(str=0, lineno=17, colno=17),
                                                                       float=nothing,
                                                                     ),
                                                             ),
                                                          args=[],
                                                        ),
                                                ),
                                             tl=[],
                                           ),
                                         ),
                                       ],
                               ),
                       ),
                    tl=[],
                  ),
          ),
          RDefine(
            hd=Token{reserved}(str=def, lineno=20, colno=20),
            name=Token{id}(str=z, lineno=20, colno=20),
            value=RExp(
                    hd=RComp(
                         forall=nothing,
                         value=RFun(
                                 hd=Token{reserved}(str=fn, lineno=20, colno=20),
                                 args=[
                                        Token{id}(str=x, lineno=20, colno=20),
                                      ],
                                 body=RExp(
                                        hd=RComp(
                                             forall=nothing,
                                             value=RIf(
                                                     hd=Token{reserved}(str=if, lineno=20, colno=20),
                                                     cond=RExp(
                                                            hd=RComp(
                                                                 forall=nothing,
                                                                 value=RCall(
                                                                         fn=RAnnotate(
                                                                              value=RVar(
                                                                                      value=Token{id}(str=x, lineno=20, colno=20),
                                                                                    ),
                                                                            ),
                                                                         args=[],
                                                                       ),
                                                               ),
                                                            tl=[
                                                                 [
                                                                   ROp(
                                                                     name=Token{id}(str=equals, lineno=20, colno=20),
                                                                     is_typeop=false,
                                                                   ),
                                                                   RComp(
                                                                     forall=nothing,
                                                                     value=RCall(
                                                                             fn=RAnnotate(
                                                                                  value=RNum(
                                                                                          neg=nothing,
                                                                                          int=Token{integer}(str=1, lineno=20, colno=20),
                                                                                          float=nothing,
                                                                                        ),
                                                                                ),
                                                                             args=[],
                                                                           ),
                                                                   ),
                                                                 ],
                                                               ],
                                                          ),
                                                     br1=RExp(
                                                           hd=RComp(
                                                                forall=nothing,
                                                                value=RCall(
                                                                        fn=RAnnotate(
                                                                             value=RNum(
                                                                                     neg=nothing,
                                                                                     int=Token{integer}(str=1, lineno=20, colno=20),
                                                                                     float=nothing,
                                                                                   ),
                                                                           ),
                                                                        args=[],
                                                                      ),
                                                              ),
                                                           tl=[],
                                                         ),
                                                     br2=RExp(
                                                           hd=RComp(
                                                                forall=nothing,
                                                                value=RCall(
                                                                        fn=RAnnotate(
                                                                             value=RNum(
                                                                                     neg=nothing,
                                                                                     int=Token{integer}(str=2, lineno=20, colno=20),
                                                                                     float=nothing,
                                                                                   ),
                                                                           ),
                                                                        args=[],
                                                                      ),
                                                              ),
                                                           tl=[],
                                                         ),
                                                   ),
                                           ),
                                        tl=[],
                                      ),
                               ),
                       ),
                    tl=[],
                  ),
          ),
        ],
)    Testing RBNF tests passed 
Finished at 2020-10-25T22:43:06.725
