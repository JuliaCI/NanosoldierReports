Current time is 2020-10-25T21:20:10.777
Julia Version 1.5.3-pre.0
Commit 5905edebb1 (2020-09-24 05:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T21:20:13.911
  Resolving package versions...
  Installed Artifacts ──────────────────── v1.3.0
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed JLLWrappers ────────────────── v1.1.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Starting tests at 2020-10-25T21:20:16.359
    Testing FunctionIntegrator
Status `/tmp/jl_1SaIBY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_1SaIBY/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.551867 seconds (1.18 M allocations: 58.152 MiB, 2.74% gc time)
Running: chebyshev_quadrature with k=1
  1.592136 seconds (2.15 M allocations: 111.790 MiB, 2.06% gc time)
Running: chebyshev_quadrature with k=2
  0.212580 seconds (356.11 k allocations: 20.584 MiB)
Running: chebyshev_quadrature with k=3
  0.270291 seconds (517.31 k allocations: 27.245 MiB, 8.49% gc time)
Running: chebyshev_quadrature with k=4
  0.248166 seconds (476.56 k allocations: 24.345 MiB, 6.06% gc time)
Running: jacobi_quadrature with α=β=1
 34.205849 seconds (46.34 M allocations: 3.235 GiB, 9.92% gc time)
Running: laguerre_quadrature with k=1
  2.538767 seconds (3.55 M allocations: 177.152 MiB, 3.27% gc time)
Running: legendre_quadrature
  0.123337 seconds (193.52 k allocations: 9.774 MiB)
Running: lobatto_quadrature
  0.293965 seconds (315.76 k allocations: 16.787 MiB, 5.70% gc time)
Running: radau_quadrature
  0.305022 seconds (415.31 k allocations: 22.117 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 50.534284 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.085960 seconds (26.53 k allocations: 1.473 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.161958 seconds (19.38 k allocations: 1.042 MiB)
Running: rombergs_method
  0.650188 seconds (1.37 M allocations: 71.111 MiB, 10.72% gc time)
Running: simpsons_rule
  0.023929 seconds (44.22 k allocations: 2.280 MiB)
Running: simpsons38_rule
  0.072810 seconds (108.34 k allocations: 5.243 MiB)
Running: trapezoidal_rule
  0.383234 seconds (1.30 M allocations: 21.869 MiB, 7.19% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.062686 seconds (31.20 k allocations: 1.648 MiB)
Running: chebyshev_quadrature with k=1
  0.346250 seconds (268.41 k allocations: 12.439 MiB)
Running: chebyshev_quadrature with k=2
  0.154862 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.136641 seconds (90.34 k allocations: 2.750 MiB)
Running: chebyshev_quadrature with k=4
  0.142983 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  1.484586 seconds (489.58 k allocations: 159.056 MiB, 10.42% gc time)
Running: legendre_quadrature
  0.166442 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.018163 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.021277 seconds (15.18 k allocations: 851.437 KiB)
Running: rectangle_rule_left
 14.538714 seconds (471.41 M allocations: 7.025 GiB, 5.08% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.905115 seconds (476.96 M allocations: 7.107 GiB, 5.18% gc time)
Running: rombergs_method
  0.388473 seconds (371.82 k allocations: 19.003 MiB)
Running: simpsons_rule
  0.000024 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.055789 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.034643 seconds (17.19 k allocations: 954.039 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000088 seconds (659 allocations: 10.984 KiB)
Running: chebyshev_quadrature with k=1
  0.084303 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.108471 seconds (3.34 k allocations: 166.016 KiB)
Running: chebyshev_quadrature with k=3
  0.091836 seconds (4.38 k allocations: 194.406 KiB)
Running: chebyshev_quadrature with k=4
  0.086982 seconds (4.38 k allocations: 194.406 KiB)
Running: jacobi_quadrature with α=β=1
  0.178097 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.061772 seconds (1.35 k allocations: 70.484 KiB)
Running: lobatto_quadrature
  0.000104 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000032 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000341 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000239 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000326 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075069 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000647 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.105823 seconds (85.79 k allocations: 4.534 MiB)
Running: chebyshev_quadrature with k=1
  0.150567 seconds (217.40 k allocations: 10.841 MiB)
Running: chebyshev_quadrature with k=2
  0.190072 seconds (279.07 k allocations: 14.013 MiB)
Running: chebyshev_quadrature with k=3
  0.198877 seconds (270.36 k allocations: 13.057 MiB, 15.32% gc time)
Running: chebyshev_quadrature with k=4
  0.150669 seconds (270.37 k allocations: 12.974 MiB)
Running: jacobi_quadrature with α=β=1
  0.859843 seconds (445.19 k allocations: 160.690 MiB, 8.33% gc time)
Running: legendre_quadrature
  0.126378 seconds (172.34 k allocations: 8.732 MiB)
Running: lobatto_quadrature
  0.169387 seconds (181.33 k allocations: 9.277 MiB)
Running: radau_quadrature
  0.181383 seconds (181.33 k allocations: 9.259 MiB)
Running: rectangle_rule_left
  0.748501 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.036147 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  0.709818 seconds (18.92 k allocations: 1.021 MiB)
Running: rombergs_method
  0.141618 seconds (120.85 k allocations: 6.263 MiB)
Running: simpsons_rule
  0.070483 seconds (37.72 k allocations: 2.143 MiB, 55.45% gc time)
Running: simpsons38_rule
  0.033898 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.023045 seconds (42.82 k allocations: 1.547 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036667 seconds (69.16 k allocations: 2.783 MiB)
Running: chebyshev_quadrature with k=1
  0.151549 seconds (223.48 k allocations: 10.882 MiB)
Running: chebyshev_quadrature with k=2
  0.200650 seconds (286.19 k allocations: 13.974 MiB)
Running: chebyshev_quadrature with k=3
  0.165172 seconds (276.72 k allocations: 13.031 MiB)
Running: chebyshev_quadrature with k=4
  0.202562 seconds (276.72 k allocations: 13.033 MiB, 14.89% gc time)
Running: hermite_quadrature with k=2
 13.914772 seconds (24.29 M allocations: 1.130 GiB, 10.29% gc time)
Running: jacobi_quadrature with α=β=1
  0.418028 seconds (454.47 k allocations: 46.886 MiB, 17.38% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.181484 seconds (269.06 k allocations: 13.150 MiB)
Running: legendre_quadrature
  0.164570 seconds (178.32 k allocations: 9.025 MiB, 23.34% gc time)
Running: lobatto_quadrature
  0.159301 seconds (201.02 k allocations: 35.022 MiB)
Running: radau_quadrature
  0.193127 seconds (197.60 k allocations: 27.650 MiB, 10.14% gc time)
Running: rectangle_rule_left
  0.028738 seconds (23.95 k allocations: 1.258 MiB)
Running: rectangle_rule_midpoint
  0.029050 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.021178 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.155007 seconds (124.01 k allocations: 6.335 MiB)
Running: simpsons_rule
  0.027608 seconds (46.18 k allocations: 2.432 MiB)
Running: simpsons38_rule
  0.034891 seconds (60.33 k allocations: 2.890 MiB)
Running: trapezoidal_rule
  0.042824 seconds (29.69 k allocations: 1.489 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.029653 seconds (52.45 k allocations: 2.426 MiB)
Running: chebyshev_quadrature with k=1
  0.158242 seconds (219.32 k allocations: 10.691 MiB)
Running: chebyshev_quadrature with k=2
  0.210177 seconds (281.26 k allocations: 13.750 MiB, 11.15% gc time)
Running: chebyshev_quadrature with k=3
  0.189854 seconds (272.35 k allocations: 12.857 MiB)
Running: chebyshev_quadrature with k=4
  0.252826 seconds (272.35 k allocations: 12.856 MiB)
Running: hermite_quadrature with k=2
  0.158710 seconds (171.22 k allocations: 8.676 MiB)
Running: jacobi_quadrature with α=β=1
  5.401474 seconds (447.63 k allocations: 1.172 GiB, 21.26% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.175882 seconds (264.38 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.122813 seconds (174.27 k allocations: 8.826 MiB)
Running: lobatto_quadrature
  0.204260 seconds (192.16 k allocations: 20.748 MiB)
Running: radau_quadrature
  0.235293 seconds (191.30 k allocations: 18.670 MiB, 16.99% gc time)
Running: rectangle_rule_left
  0.032365 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.019098 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.019066 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.094311 seconds (119.48 k allocations: 6.151 MiB)
Running: simpsons_rule
  0.028912 seconds (40.84 k allocations: 2.247 MiB)
Running: simpsons38_rule
  0.048206 seconds (50.47 k allocations: 2.634 MiB)
Running: trapezoidal_rule
  0.033869 seconds (24.04 k allocations: 1.314 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022246 seconds (40.33 k allocations: 2.269 MiB)
Running: chebyshev_quadrature with k=1
  0.172877 seconds (217.90 k allocations: 10.919 MiB, 10.83% gc time)
Running: chebyshev_quadrature with k=2
  0.180677 seconds (279.63 k allocations: 14.096 MiB)
Running: chebyshev_quadrature with k=3
  0.165931 seconds (270.92 k allocations: 13.115 MiB)
Running: chebyshev_quadrature with k=4
  0.159922 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  1.326095 seconds (445.77 k allocations: 191.728 MiB, 8.58% gc time)
Running: legendre_quadrature
  0.151899 seconds (172.84 k allocations: 8.749 MiB)
Running: lobatto_quadrature
  0.169881 seconds (181.84 k allocations: 9.288 MiB)
Running: radau_quadrature
  0.143467 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.365871 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.052199 seconds (26.44 k allocations: 1.470 MiB, 37.95% gc time)
Running: rectangle_rule_right
  0.097519 seconds (19.30 k allocations: 1.040 MiB)
Running: rombergs_method
  0.118735 seconds (131.62 k allocations: 6.889 MiB)
Running: simpsons_rule
  0.020656 seconds (38.44 k allocations: 2.173 MiB)
Running: simpsons38_rule
  0.030693 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.017063 seconds (43.84 k allocations: 1.582 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022508 seconds (40.24 k allocations: 2.214 MiB)
Running: chebyshev_quadrature with k=1
  0.203537 seconds (218.34 k allocations: 10.852 MiB)
Running: chebyshev_quadrature with k=2
  0.234084 seconds (280.15 k allocations: 14.000 MiB)
Running: chebyshev_quadrature with k=3
  0.218209 seconds (271.33 k allocations: 12.985 MiB, 9.99% gc time)
Running: chebyshev_quadrature with k=4
  0.175935 seconds (271.33 k allocations: 13.064 MiB)
Running: jacobi_quadrature with α=β=1
  1.861355 seconds (446.39 k allocations: 146.405 MiB, 4.85% gc time)
Running: legendre_quadrature
  0.189070 seconds (173.29 k allocations: 8.761 MiB, 12.04% gc time)
Running: lobatto_quadrature
  0.160437 seconds (182.29 k allocations: 9.301 MiB)
Running: radau_quadrature
  0.229244 seconds (182.28 k allocations: 9.292 MiB)
Running: rectangle_rule_left
  0.853465 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.027995 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.771140 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.135559 seconds (122.15 k allocations: 6.301 MiB)
Running: simpsons_rule
  0.029098 seconds (38.99 k allocations: 2.193 MiB)
Running: simpsons38_rule
  0.027528 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.029274 seconds (56.04 k allocations: 1.781 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.117878 seconds (155.92 k allocations: 8.250 MiB)
Running: chebyshev_quadrature with k=1
  0.130839 seconds (77.50 k allocations: 2.461 MiB)
Running: chebyshev_quadrature with k=2
  0.144302 seconds (112.77 k allocations: 3.128 MiB)
Running: chebyshev_quadrature with k=3
  0.134647 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.136913 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  0.981345 seconds (468.09 k allocations: 165.432 MiB, 11.51% gc time)
Running: legendre_quadrature
  0.090377 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000135 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000043 seconds (149 allocations: 4.391 KiB)
Running: rectangle_rule_left
 23.507892 seconds (590.00 M allocations: 8.792 GiB, 5.78% gc time)
Running: rectangle_rule_midpoint
  0.000035 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 23.484516 seconds (592.75 M allocations: 8.833 GiB, 5.65% gc time)
Running: rombergs_method
  0.107068 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000033 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.029720 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.011934 seconds (166 allocations: 8.312 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  9.037025 seconds (209.95 M allocations: 3.137 GiB, 5.50% gc time)
Running: chebyshev_quadrature with k=1
  0.502446 seconds (426.05 k allocations: 21.108 MiB, 5.92% gc time)
Running: chebyshev_quadrature with k=2
  8.859780 seconds (491.02 k allocations: 4.039 GiB, 6.46% gc time)
Running: chebyshev_quadrature with k=3
  3.993756 seconds (283.70 k allocations: 1.641 GiB, 8.01% gc time)
Running: chebyshev_quadrature with k=4
  5.297978 seconds (283.70 k allocations: 2.260 GiB, 3.65% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.351676 seconds (482.00 k allocations: 13.252 GiB, 7.13% gc time)
Running: legendre_quadrature.
  4.807793 seconds (210.19 k allocations: 1.974 GiB, 2.14% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.864196 seconds (8.21 M allocations: 13.381 GiB, 8.94% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.512370 seconds (7.21 M allocations: 13.366 GiB, 6.51% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.975861 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.895106 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.041897 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.785123 seconds (466.50 k allocations: 151.598 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  8.560964 seconds (200.04 M allocations: 2.982 GiB, 6.93% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.154782 seconds (600.05 M allocations: 8.943 GiB, 10.09% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.428385 seconds (600.03 M allocations: 8.942 GiB, 9.40% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063419 seconds (157.72 k allocations: 4.485 MiB)
Running: chebyshev_quadrature with k=1
  0.148626 seconds (231.69 k allocations: 11.186 MiB)
Running: chebyshev_quadrature with k=2
  0.140174 seconds (266.13 k allocations: 12.740 MiB)
Running: chebyshev_quadrature with k=3
  0.155644 seconds (253.76 k allocations: 11.702 MiB)
Running: chebyshev_quadrature with k=4
  0.183435 seconds (253.76 k allocations: 11.707 MiB)
Running: jacobi_quadrature with α=β=1
  0.266635 seconds (383.23 k allocations: 32.797 MiB)
Running: laguerre_quadrature with k=2
  0.141041 seconds (168.36 k allocations: 8.619 MiB)
Running: legendre_quadrature
  0.087308 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.020909 seconds (10.14 k allocations: 15.085 MiB)
Running: radau_quadrature
  0.016941 seconds (8.91 k allocations: 13.159 MiB)
Running: rectangle_rule_left
  0.038283 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.029320 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.039772 seconds (19.11 k allocations: 1.014 MiB)
Running: rombergs_method
  0.185596 seconds (184.38 k allocations: 9.651 MiB)
Running: simpsons_rule
  0.000635 seconds (16.82 k allocations: 263.219 KiB)
Running: simpsons38_rule
  0.031040 seconds (82.91 k allocations: 3.271 MiB)
Running: trapezoidal_rule
  0.113019 seconds (2.40 M allocations: 37.636 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000633 seconds (12.67 k allocations: 198.609 KiB)
Running: chebyshev_quadrature with k=1
  0.095796 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.101608 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.087376 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.111039 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  5.258452 seconds (380.30 k allocations: 903.492 MiB, 3.96% gc time)
Running: legendre_quadrature
  0.056524 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000168 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000092 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.507324 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000300 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.394592 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.092255 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000908 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000213 seconds (3.06 k allocations: 48.547 KiB)
Running: chebyshev_quadrature with k=1
  0.094714 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.087581 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.111026 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.106940 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.138817 seconds (368.89 k allocations: 250.910 MiB)
Running: legendre_quadrature
  0.065771 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000151 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000049 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  3.263179 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000303 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  3.076319 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.089106 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000968 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
Finished at 2020-10-25T21:28:42.199
