Current time is 2020-10-25T21:28:25.983
Julia Version 1.5.3-pre.13
Commit 3de1115e9c (2020-10-23 21:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T21:28:29.386
  Resolving package versions...
  Installed Artifacts ──────────────────── v1.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed JLLWrappers ────────────────── v1.1.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Starting tests at 2020-10-25T21:28:32.397
    Testing FunctionIntegrator
Status `/tmp/jl_P8KFfY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_P8KFfY/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.657210 seconds (1.18 M allocations: 58.150 MiB, 2.02% gc time)
Running: chebyshev_quadrature with k=1
  1.460887 seconds (2.15 M allocations: 111.789 MiB, 2.60% gc time)
Running: chebyshev_quadrature with k=2
  0.228545 seconds (356.11 k allocations: 20.586 MiB)
Running: chebyshev_quadrature with k=3
  0.226432 seconds (517.30 k allocations: 27.244 MiB, 5.42% gc time)
Running: chebyshev_quadrature with k=4
  0.237786 seconds (476.56 k allocations: 24.347 MiB, 6.81% gc time)
Running: jacobi_quadrature with α=β=1
 33.882152 seconds (46.34 M allocations: 3.235 GiB, 11.02% gc time)
Running: laguerre_quadrature with k=1
  2.520120 seconds (3.55 M allocations: 177.160 MiB, 2.22% gc time)
Running: legendre_quadrature
  0.163450 seconds (193.52 k allocations: 9.774 MiB, 15.49% gc time)
Running: lobatto_quadrature
  0.272427 seconds (315.76 k allocations: 16.789 MiB)
Running: radau_quadrature
  0.269754 seconds (415.30 k allocations: 22.117 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 45.216953 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.093650 seconds (26.53 k allocations: 1.473 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 45.733123 seconds (19.38 k allocations: 1.042 MiB, 0.10% gc time)
Running: rombergs_method
  0.718627 seconds (1.37 M allocations: 71.109 MiB, 4.68% gc time)
Running: simpsons_rule
  0.027151 seconds (44.22 k allocations: 2.280 MiB)
Running: simpsons38_rule
  0.077036 seconds (108.34 k allocations: 5.243 MiB)
Running: trapezoidal_rule
  0.276181 seconds (1.30 M allocations: 21.869 MiB, 5.57% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.057853 seconds (31.20 k allocations: 1.648 MiB)
Running: chebyshev_quadrature with k=1
  0.343009 seconds (268.41 k allocations: 12.439 MiB)
Running: chebyshev_quadrature with k=2
  0.128788 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.125208 seconds (90.34 k allocations: 2.750 MiB)
Running: chebyshev_quadrature with k=4
  0.141266 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  1.002374 seconds (489.58 k allocations: 159.057 MiB, 13.15% gc time)
Running: legendre_quadrature
  0.151409 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.015111 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.016234 seconds (15.18 k allocations: 851.437 KiB)
Running: rectangle_rule_left
 12.480354 seconds (471.41 M allocations: 7.025 GiB, 5.90% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.227545 seconds (476.96 M allocations: 7.107 GiB, 5.78% gc time)
Running: rombergs_method
  0.400463 seconds (371.82 k allocations: 19.003 MiB)
Running: simpsons_rule
  0.000020 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.047096 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.041333 seconds (17.19 k allocations: 954.039 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000090 seconds (659 allocations: 10.984 KiB)
Running: chebyshev_quadrature with k=1
  0.072062 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.083394 seconds (3.34 k allocations: 167.156 KiB)
Running: chebyshev_quadrature with k=3
  0.099649 seconds (4.38 k allocations: 196.531 KiB)
Running: chebyshev_quadrature with k=4
  0.108066 seconds (4.38 k allocations: 194.406 KiB)
Running: jacobi_quadrature with α=β=1
  0.165658 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.061137 seconds (1.35 k allocations: 70.484 KiB)
Running: lobatto_quadrature
  0.000086 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000029 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000339 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000230 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000325 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.090658 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000640 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.048719 seconds (85.79 k allocations: 4.534 MiB)
Running: chebyshev_quadrature with k=1
  0.141894 seconds (217.40 k allocations: 10.841 MiB)
Running: chebyshev_quadrature with k=2
  0.177698 seconds (279.07 k allocations: 14.012 MiB, 15.43% gc time)
Running: chebyshev_quadrature with k=3
  0.201524 seconds (270.36 k allocations: 13.057 MiB)
Running: chebyshev_quadrature with k=4
  0.218127 seconds (270.37 k allocations: 12.972 MiB)
Running: jacobi_quadrature with α=β=1
  1.060750 seconds (445.19 k allocations: 160.690 MiB, 18.73% gc time)
Running: legendre_quadrature
  0.122398 seconds (172.34 k allocations: 8.729 MiB)
Running: lobatto_quadrature
  0.133273 seconds (181.34 k allocations: 9.277 MiB)
Running: radau_quadrature
  0.130160 seconds (181.33 k allocations: 9.263 MiB, 11.73% gc time)
Running: rectangle_rule_left
  0.588362 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.021848 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  0.565548 seconds (18.92 k allocations: 1.021 MiB)
Running: rombergs_method
  0.115022 seconds (120.85 k allocations: 6.263 MiB)
Running: simpsons_rule
  0.017548 seconds (37.72 k allocations: 2.143 MiB)
Running: simpsons38_rule
  0.031149 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.017446 seconds (42.82 k allocations: 1.547 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.030706 seconds (69.16 k allocations: 2.783 MiB)
Running: chebyshev_quadrature with k=1
  0.137744 seconds (223.48 k allocations: 10.882 MiB)
Running: chebyshev_quadrature with k=2
  0.150329 seconds (286.19 k allocations: 13.978 MiB)
Running: chebyshev_quadrature with k=3
  0.173413 seconds (276.72 k allocations: 13.031 MiB, 12.35% gc time)
Running: chebyshev_quadrature with k=4
  0.163382 seconds (276.72 k allocations: 13.033 MiB)
Running: hermite_quadrature with k=2
 17.399237 seconds (24.29 M allocations: 1.130 GiB, 7.81% gc time)
Running: jacobi_quadrature with α=β=1
  0.348395 seconds (454.47 k allocations: 46.885 MiB, 11.89% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.200394 seconds (269.06 k allocations: 13.158 MiB)
Running: legendre_quadrature
  0.129944 seconds (178.32 k allocations: 9.025 MiB)
Running: lobatto_quadrature
  0.214714 seconds (201.02 k allocations: 35.022 MiB, 13.70% gc time)
Running: radau_quadrature
  0.234858 seconds (197.60 k allocations: 27.650 MiB, 13.27% gc time)
Running: rectangle_rule_left
  0.037250 seconds (23.95 k allocations: 1.258 MiB)
Running: rectangle_rule_midpoint
  0.027126 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.020011 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.185549 seconds (124.01 k allocations: 6.335 MiB)
Running: simpsons_rule
  0.030333 seconds (46.18 k allocations: 2.432 MiB)
Running: simpsons38_rule
  0.031986 seconds (60.33 k allocations: 2.890 MiB)
Running: trapezoidal_rule
  0.021221 seconds (29.69 k allocations: 1.489 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043653 seconds (52.45 k allocations: 2.426 MiB)
Running: chebyshev_quadrature with k=1
  0.181509 seconds (219.32 k allocations: 10.691 MiB)
Running: chebyshev_quadrature with k=2
  0.163917 seconds (281.26 k allocations: 13.750 MiB)
Running: chebyshev_quadrature with k=3
  0.204749 seconds (272.35 k allocations: 12.857 MiB, 11.75% gc time)
Running: chebyshev_quadrature with k=4
  0.200434 seconds (272.35 k allocations: 12.856 MiB)
Running: hermite_quadrature with k=2
  0.150791 seconds (171.22 k allocations: 8.676 MiB)
Running: jacobi_quadrature with α=β=1
  5.474077 seconds (447.63 k allocations: 1.172 GiB, 16.83% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.169702 seconds (264.38 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.178298 seconds (174.27 k allocations: 8.826 MiB, 7.51% gc time)
Running: lobatto_quadrature
  0.176852 seconds (192.16 k allocations: 20.748 MiB)
Running: radau_quadrature
  0.204313 seconds (191.30 k allocations: 18.670 MiB)
Running: rectangle_rule_left
  0.022965 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.035240 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.029455 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.150416 seconds (119.49 k allocations: 6.152 MiB, 8.77% gc time)
Running: simpsons_rule
  0.026753 seconds (40.84 k allocations: 2.247 MiB)
Running: simpsons38_rule
  0.022671 seconds (50.47 k allocations: 2.634 MiB)
Running: trapezoidal_rule
  0.023404 seconds (24.04 k allocations: 1.314 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026598 seconds (40.33 k allocations: 2.269 MiB)
Running: chebyshev_quadrature with k=1
  0.123121 seconds (217.90 k allocations: 10.919 MiB)
Running: chebyshev_quadrature with k=2
  0.168561 seconds (279.63 k allocations: 14.096 MiB)
Running: chebyshev_quadrature with k=3
  0.170789 seconds (270.92 k allocations: 13.114 MiB, 9.00% gc time)
Running: chebyshev_quadrature with k=4
  0.176346 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  1.657802 seconds (445.78 k allocations: 191.729 MiB, 10.20% gc time)
Running: legendre_quadrature
  0.180695 seconds (172.84 k allocations: 8.749 MiB, 8.76% gc time)
Running: lobatto_quadrature
  0.129557 seconds (181.84 k allocations: 9.281 MiB)
Running: radau_quadrature
  0.162613 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.334819 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.020185 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.090897 seconds (19.30 k allocations: 1.040 MiB)
Running: rombergs_method
  0.109444 seconds (131.62 k allocations: 6.895 MiB)
Running: simpsons_rule
  0.020207 seconds (38.44 k allocations: 2.173 MiB)
Running: simpsons38_rule
  0.022525 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.015081 seconds (43.84 k allocations: 1.582 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023269 seconds (40.24 k allocations: 2.214 MiB)
Running: chebyshev_quadrature with k=1
  0.221065 seconds (218.34 k allocations: 10.852 MiB, 8.18% gc time)
Running: chebyshev_quadrature with k=2
  0.198107 seconds (280.15 k allocations: 14.001 MiB)
Running: chebyshev_quadrature with k=3
  0.174045 seconds (271.33 k allocations: 12.989 MiB)
Running: chebyshev_quadrature with k=4
  0.196609 seconds (271.33 k allocations: 13.064 MiB, 7.46% gc time)
Running: jacobi_quadrature with α=β=1
  1.600484 seconds (446.39 k allocations: 146.405 MiB, 5.72% gc time)
Running: legendre_quadrature
  0.126756 seconds (173.29 k allocations: 8.761 MiB)
Running: lobatto_quadrature
  0.181282 seconds (182.29 k allocations: 9.297 MiB)
Running: radau_quadrature
  0.171984 seconds (182.28 k allocations: 9.292 MiB, 8.20% gc time)
Running: rectangle_rule_left
  0.832925 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.020877 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.667483 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.120796 seconds (122.15 k allocations: 6.300 MiB)
Running: simpsons_rule
  0.029808 seconds (38.99 k allocations: 2.193 MiB)
Running: simpsons38_rule
  0.029070 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.021404 seconds (56.04 k allocations: 1.781 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.117939 seconds (155.92 k allocations: 8.250 MiB)
Running: chebyshev_quadrature with k=1
  0.141586 seconds (77.50 k allocations: 2.461 MiB)
Running: chebyshev_quadrature with k=2
  0.146449 seconds (112.77 k allocations: 3.128 MiB)
Running: chebyshev_quadrature with k=3
  0.140492 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.138413 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  0.760272 seconds (468.09 k allocations: 165.436 MiB, 7.73% gc time)
Running: legendre_quadrature
  0.122104 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000119 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000033 seconds (149 allocations: 4.391 KiB)
Running: rectangle_rule_left
 21.019736 seconds (590.00 M allocations: 8.792 GiB, 7.61% gc time)
Running: rectangle_rule_midpoint
  0.000059 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 19.444467 seconds (592.75 M allocations: 8.833 GiB, 7.91% gc time)
Running: rombergs_method
  0.125647 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000039 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.029197 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.019057 seconds (166 allocations: 8.312 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  8.563717 seconds (209.95 M allocations: 3.137 GiB, 6.23% gc time)
Running: chebyshev_quadrature with k=1
  0.346306 seconds (426.05 k allocations: 21.108 MiB)
Running: chebyshev_quadrature with k=2
  8.422000 seconds (491.02 k allocations: 4.039 GiB, 5.49% gc time)
Running: chebyshev_quadrature with k=3
  3.514706 seconds (283.70 k allocations: 1.641 GiB, 7.86% gc time)
Running: chebyshev_quadrature with k=4
  4.912169 seconds (283.70 k allocations: 2.260 GiB, 4.16% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.386243 seconds (482.00 k allocations: 13.252 GiB, 7.28% gc time)
Running: legendre_quadrature.
  4.128334 seconds (210.19 k allocations: 1.974 GiB, 2.36% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.944215 seconds (8.21 M allocations: 13.381 GiB, 8.79% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.175559 seconds (7.21 M allocations: 13.366 GiB, 4.99% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.094663 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.054885 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.925562 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.921326 seconds (466.50 k allocations: 151.599 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  8.945485 seconds (200.04 M allocations: 2.982 GiB, 7.56% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.460247 seconds (600.05 M allocations: 8.943 GiB, 9.96% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.649423 seconds (600.03 M allocations: 8.942 GiB, 8.83% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.068541 seconds (157.72 k allocations: 4.485 MiB)
Running: chebyshev_quadrature with k=1
  0.207597 seconds (231.69 k allocations: 11.201 MiB)
Running: chebyshev_quadrature with k=2
  0.161237 seconds (266.13 k allocations: 12.736 MiB)
Running: chebyshev_quadrature with k=3
  0.167566 seconds (253.76 k allocations: 11.702 MiB)
Running: chebyshev_quadrature with k=4
  0.142630 seconds (253.76 k allocations: 11.707 MiB)
Running: jacobi_quadrature with α=β=1
  0.312146 seconds (383.23 k allocations: 32.797 MiB)
Running: laguerre_quadrature with k=2
  0.251136 seconds (168.36 k allocations: 8.619 MiB)
Running: legendre_quadrature
  0.117977 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.019589 seconds (10.14 k allocations: 15.085 MiB)
Running: radau_quadrature
  0.016998 seconds (8.91 k allocations: 13.159 MiB)
Running: rectangle_rule_left
  0.048390 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.039004 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.041219 seconds (19.11 k allocations: 1.014 MiB)
Running: rombergs_method
  0.289707 seconds (184.38 k allocations: 9.651 MiB)
Running: simpsons_rule
  0.000637 seconds (16.82 k allocations: 263.219 KiB)
Running: simpsons38_rule
  0.046996 seconds (82.91 k allocations: 3.271 MiB)
Running: trapezoidal_rule
  0.146653 seconds (2.40 M allocations: 37.636 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000444 seconds (12.67 k allocations: 198.609 KiB)
Running: chebyshev_quadrature with k=1
  0.087565 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.102476 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.104045 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.101049 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  4.403414 seconds (380.30 k allocations: 903.492 MiB, 4.50% gc time)
Running: legendre_quadrature
  0.092514 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000194 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000108 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.421464 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000312 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.365102 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077954 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000994 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000210 seconds (3.06 k allocations: 48.547 KiB)
Running: chebyshev_quadrature with k=1
  0.102139 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.132253 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.121225 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.091688 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  1.619430 seconds (368.89 k allocations: 250.910 MiB)
Running: legendre_quadrature
  0.057427 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000160 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  3.265734 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000320 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  3.172061 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078377 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001010 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
Finished at 2020-10-25T21:36:35.196
