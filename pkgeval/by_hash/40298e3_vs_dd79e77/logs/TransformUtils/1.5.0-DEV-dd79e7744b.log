Julia Version 1.5.0-DEV.60
Commit dd79e7744b (2020-01-13 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_YrAn6n/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_YrAn6n/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_YrAn6n/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.017813558688486268 -0.11592484542958142; 0.017813558688486268 0.0 -0.009376822879936287; 0.11592484542958142 0.009376822879936287 0.0])
dAA = so3([0.0 -0.020247374886556674 -0.16300356558535978; 0.020247374886556674 0.0 0.007834191975723303; 0.16300356558535978 -0.007834191975723303 0.0])
dAA = so3([0.0 0.16923745196294226 0.020532798400476275; -0.16923745196294226 0.0 -0.10929980467252967; -0.020532798400476275 0.10929980467252967 0.0])
dAA = Quaternion(0.9875241758293968, [0.03919577099354519, 0.1486597462274972, -0.034058384287403834])
dAA = SO3([0.9794819687686236 -0.18868455548374544 0.0708040350477462; 0.18832819026215045 0.9820360259708392 0.011736117244846701; -0.07174653726643769 0.001839080559118073 0.9974212009843046])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9168679316142098 -0.04526986635449958 -0.39661547521210827; 0.053139346459341534 0.9985477194872715 0.00886914678214967; 0.3956379731969048 -0.02920772341376499 0.9179419932967607]), [0.09376822879936286, -1.1592484542958141, 0.17813558688486267])
xj = SE3(SO3([0.7214437338293285 0.19404617981051164 0.664729282504798; -0.0681765545827967 0.9751753428994346 -0.2106774976265595; -0.6891087695883836 0.10667300831005293 0.7167635404890984]), [1.0929980467252967, 0.20532798400476274, -1.6923745196294226])
Dx = SE3(SO3([0.3852081695455885 0.27193879272804905 0.8818525722165516; -0.08060990616975859 0.9618589944033913 -0.2613987718268772; -0.919302294755452 0.02960688931495986 0.39243690316081625]), [0.2486296491084644, 1.371993032049888, -2.101227156011511])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
