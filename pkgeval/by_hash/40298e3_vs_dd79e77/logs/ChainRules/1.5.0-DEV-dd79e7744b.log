Julia Version 1.5.0-DEV.60
Commit dd79e7744b (2020-01-13 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Requires ─────────── v1.0.0
 Installed MuladdMacro ──────── v0.2.1
 Installed Reexport ─────────── v0.2.0
 Installed OrderedCollections ─ v1.1.0
 Installed ChainRulesCore ───── v0.5.3
 Installed MacroTools ───────── v0.5.3
 Installed DataStructures ───── v0.17.7
 Installed ChainRules ───────── v0.3.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [082447d4] + ChainRules v0.3.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [082447d4] + ChainRules v0.3.1
  [d360d2e6] + ChainRulesCore v0.5.3
  [864edb3b] + DataStructures v0.17.7
  [1914dd2f] + MacroTools v0.5.3
  [46d2c3a1] + MuladdMacro v0.2.1
  [bac558e1] + OrderedCollections v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing ChainRules
 Installed NaNMath ─────────── v0.3.3
 Installed SpecialFunctions ── v0.9.0
 Installed OpenSpecFun_jll ─── v0.5.3+1
 Installed FiniteDifferences ─ v0.7.2
  Updating `/tmp/jl_FF6UiX/Project.toml`
  [26cc04aa] + FiniteDifferences v0.7.2
  [77ba4419] + NaNMath v0.3.3
  [276daf66] + SpecialFunctions v0.9.0
  Updating `/tmp/jl_FF6UiX/Manifest.toml`
  [26cc04aa] + FiniteDifferences v0.7.2
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [276daf66] + SpecialFunctions v0.9.0
Running sandbox
Status `/tmp/jl_FF6UiX/Project.toml`
  [082447d4] ChainRules v0.3.1
  [d360d2e6] ChainRulesCore v0.5.3
  [26cc04aa] FiniteDifferences v0.7.2
  [77ba4419] NaNMath v0.3.3
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.0
  [276daf66] SpecialFunctions v0.9.0
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
Testing ChainRules.jl
binary function (hypot): Test Failed at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:172
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(0.019276133094402466, 0.01927612903323225; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::Function, ::Float64, ::Tuple{Float64,Float64}, ::Vararg{Tuple{Float64,Float64},N} where N; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:172
 [2] rrule_test(::Function, ::Float64, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:152
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/Base/base.jl:128 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/Base/base.jl:121 [inlined]
 [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1116 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/Base/base.jl:2
  Matrix: Test Failed at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:172
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#274#277"{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}([-0.9827718177516547 -3.049187087985662 -0.45753014518031915 0.049550548181828; -1.1457095184571038 -1.281790532097414 -0.7991285413217107 -0.8913053693383933; 0.25819205428715203 2.8015194483397003 1.0753460926351635 -0.7053146611866707; -2.282547976724439 0.5639614209301308 -0.5569593865129592 1.3970437844025363], [-0.34807928510100733 0.8718983568753548 -1.3002596896606895 -0.4385362125324239; -0.19506959830062723 -0.007206357093314457 -1.0059040824152614 -0.09173118968880091; -0.5497606187369344 -0.6163495955240155 0.6796485760534101 1.22561207137653; 1.0808323747949233 -0.5801739513350528 -0.043207370167515954 -0.232131676978592; -2.2125060475463463 -1.5612897485472592 -0.039839626218822005 -1.2139396904067505], [-0.23690460123730323 -1.7170129974387656 1.604831121738095 -0.330419660506073; -0.3827075659919168 -2.446261897220929 1.7480788262457672 -0.2672312785080624; -1.9688978438045297 -0.26713540122649804 0.9166815687612451 1.200964147356692; -1.5797479817238906 0.6778692338783507 1.1341703209400371 1.3170491877286854; -0.5654974841550139 -0.1689008828898645 -2.1775754411288144 0.6023924017880021], [-0.3162341605832586 0.4410185608089526 0.6775190618538066 0.3336809981458051; 1.7116615245412652 0.35751648886194604 -0.8628870265065961 -1.195470375407145; 1.2683824885596202 2.106437022846627 -2.341581668062198 -0.3755709619578594; -1.272062789754402 -1.1597991843364066 1.7767909510594972 0.4986289544382589]))
, [0.26686096499751677 0.13347269753366897 0.3196430110849233 0.8419908676476237; 0.6559056115790607 3.0495029976204893 3.2920065204492985 -3.2227056808361954; … ; 0.3666734338983696 0.73123403794996 2.6655741007828295 -0.8833723751836531; -0.28814178663132756 -1.708809012952866 -1.9517852999988166 1.5653470879092373]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Vararg{Tuple{Array{Float64,2},Array{Float64,2}},N} where N; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:172
 [2] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:152
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/LinearAlgebra/dense.jl:74 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1116 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/LinearAlgebra/dense.jl:70 [inlined]
 [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
 [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/LinearAlgebra/dense.jl:67 [inlined]
 [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1116 [inlined]
 [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/rulesets/LinearAlgebra/dense.jl:7
 erfcinv at 6.9073843711746e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863445920734809:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:241
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
erfcinv at 6.9073843711746e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863445920734809:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:241
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
bessely0 at 2.0e-323, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012639196877009248:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:160 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:241
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
bessely0 at 2.0e-323, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012639196877009248:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:160 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:241
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
bessely1 at 2.0e-323, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
bessely1 at 2.0e-323, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
gamma at 2.0e-323, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
gamma at 2.0e-323, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
digamma at 2.0e-323, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
digamma at 2.0e-323, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
trigamma at 2.0e-323, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
trigamma at 2.0e-323, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:29
  
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = rrule at rule_definition_tools.jl:196 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/5n4Rp/src/rule_definition_tools.jl:196
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = frule at rule_definition_tools.jl:167 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/5n4Rp/src/rule_definition_tools.jl:167
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = macro expansion at test_util.jl:33 [inlined]
└ @ Core ~/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:33
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Float64, ::Val{true}) at methods.jl:222
└ @ FiniteDifferences ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = rrule at rule_definition_tools.jl:196 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/5n4Rp/src/rule_definition_tools.jl:196
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = frule at rule_definition_tools.jl:167 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/5n4Rp/src/rule_definition_tools.jl:167
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = macro expansion at test_util.jl:33 [inlined]
└ @ Core ~/.julia/packages/ChainRules/bT5Fo/test/test_util.jl:33
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Complex{Float64}, ::Val{true}) at methods.jl:222
└ @ FiniteDifferences ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:222
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:263 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kgtFk/src/methods.jl:263
Test Summary:                                      | Pass  Fail  Error  Total
ChainRules                                         | 7015     2     12   7029
  helper functions                                 |   12                  12
  rulesets                                         | 7003     2     12   7017
    Base                                           | 1056     1          1057
      base                                         |  884     1           885
        Trig                                       |  430                 430
        math                                       |  114                 114
        Unary complex functions                    |   96                  96
        *(x, y)                                    |   16                  16
        binary function (hypot)                    |   15     1            16
        binary function (atan)                     |   16                  16
        binary function (mod)                      |   16                  16
        binary function (rem)                      |   16                  16
        binary function (^)                        |   16                  16
        identity                                   |   19                  19
        Constants                                  |   12                  12
        Constants                                  |   12                  12
        Constants                                  |   12                  12
        Constants                                  |   12                  12
        Constants                                  |   12                  12
        sign                                       |   26                  26
        trinary (muladd)                           |   22                  22
        trinary (fma)                              |   22                  22
      reshape                                      |    9                   9
      hcat                                         |    5                   5
      vcat                                         |    5                   5
      fill                                         |    8                   8
      Maps and Reductions                          |  137                 137
      broadcast                                    |    8                   8
    Statistics                                     |   24                  24
    LinearAlgebra                                  | 5185     1          5186
      linalg                                       | 1302     1          1303
        dot                                        |   66                  66
        inv                                        |   13                  13
        det                                        |   13                  13
        logdet                                     |   13                  13
        tr                                         |   13                  13
        *                                          |  500                 500
        /                                          |  260                 260
        \                                          |  359     1           360
          Matrix                                   |  179     1           180
          Vector                                   |   20                  20
          Diagonal on LHS                          |   40                  40
          UpperTriangular on LHS                   |   40                  40
          LowerTriangular on LHS                   |   40                  40
          Matrix \ Vector                          |   20                  20
          Vector \ Matrix                          |   20                  20
        norm                                       |   65                  65
      Structured Matrices                          |  218                 218
      Factorizations                               |  155                 155
      BLAS                                         | 3510                3510
    packages                                       |  738           12    750
      SpecialFunctions                             |  102                 102
      SpecialFunctions                             |   72                  72
      SpecialFunctions                             |   72                  72
      SpecialFunctions                             |  102           12    114
        erf at 0.5, rrule                          |    3                   3
        erf at 0.5, frule                          |    2                   2
        erfc at 0.5, rrule                         |    3                   3
        erfc at 0.5, frule                         |    2                   2
        erfi at 0.5, rrule                         |    3                   3
        erfi at 0.5, frule                         |    2                   2
        airyai at 0.5, rrule                       |    3                   3
        airyai at 0.5, frule                       |    2                   2
        airyaiprime at 0.5, rrule                  |    3                   3
        airyaiprime at 0.5, frule                  |    2                   2
        airybi at 6.9073843891143e-310, rrule      |    3                   3
        airybi at 6.9073843891143e-310, frule      |    2                   2
        airybiprime at 6.9073843891143e-310, rrule |    3                   3
        airybiprime at 6.9073843891143e-310, frule |    2                   2
        besselj0 at 6.9073843891143e-310, rrule    |    3                   3
        besselj0 at 6.9073843891143e-310, frule    |    2                   2
        besselj1 at 6.9073843891143e-310, rrule    |    3                   3
        besselj1 at 6.9073843891143e-310, frule    |    2                   2
        erfcx at 6.9073843891143e-310, rrule       |    3                   3
        erfcx at 6.9073843891143e-310, frule       |    2                   2
        dawson at 6.9073843711746e-310, rrule      |    3                   3
        dawson at 6.9073843711746e-310, frule      |    2                   2
        invdigamma at 6.9073843711746e-310, rrule  |    3                   3
        invdigamma at 6.9073843711746e-310, frule  |    2                   2
        erfinv at 6.9073843711746e-310, rrule      |    3                   3
        erfinv at 6.9073843711746e-310, frule      |    2                   2
        erfcinv at 6.9073843711746e-310, rrule     |    2            1      3
        erfcinv at 6.9073843711746e-310, frule     |    1            1      2
        bessely0 at 2.0e-323, rrule                |    2            1      3
        bessely0 at 2.0e-323, frule                |    1            1      2
        bessely1 at 2.0e-323, rrule                |    2            1      3
        bessely1 at 2.0e-323, frule                |    1            1      2
        gamma at 2.0e-323, rrule                   |    2            1      3
        gamma at 2.0e-323, frule                   |    1            1      2
        digamma at 2.0e-323, rrule                 |    2            1      3
        digamma at 2.0e-323, frule                 |    1            1      2
        trigamma at 2.0e-323, rrule                |    2            1      3
        trigamma at 2.0e-323, frule                |    1            1      2
      SpecialFunctions                             |  102                 102
      SpecialFunctions                             |   72                  72
      SpecialFunctions                             |   96                  96
      log gamma and co                             |  120                 120
ERROR: LoadError: Some tests did not pass: 7015 passed, 2 failed, 12 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/runtests.jl:21
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/ChainRules/bT5Fo/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/ChainRules/bT5Fo/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package ChainRules errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
