Julia Version 1.5.0-DEV.82
Commit 67f5a10e9b (2020-01-16 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed OrderedCollections ─ v1.1.0
 Installed Graphs ───────────── v0.10.3
 Installed DataStructures ───── v0.17.9
  Updating `~/.julia/environments/v1.5/Project.toml`
  [86223c79] + Graphs v0.10.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [864edb3b] + DataStructures v0.17.9
  [86223c79] + Graphs v0.10.3
  [bac558e1] + OrderedCollections v1.1.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
   Testing Graphs
  Updating `/tmp/jl_bL2e5l/Project.toml`
 [no changes]
  Updating `/tmp/jl_bL2e5l/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_bL2e5l/Project.toml`
  [864edb3b] DataStructures v0.17.9
  [86223c79] Graphs v0.10.3
  [2f01184e] SparseArrays 
  [8dfed614] Test 
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/edgelist.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/adjlist.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/bellman_test.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/inclist.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/graph.jl ...
Test Summary:       | Pass  Total
SimpleDirectedGraph |   58     58
Test Summary:         | Pass  Total
SimpleUndirectedGraph |   34     34
Test Summary:                       | Pass  Total
Extended and General directed graph |  104    104
Test Summary:       | Pass  Total
graph() constructor | 2206   2206
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/gmatrix.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/bfs.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/dfs.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/conn_comp.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/dijkstra.jl ...
┌ Warning: `mutable_binary_minheap(::Type{T}) where T` is deprecated, use `MutableBinaryMinHeap{T}()` instead.
│   caller = create_dijkstra_states(::GenericIncidenceList{Int64,Edge{Int64},UnitRange{Int64},Array{Array{Edge{Int64},1},1}}, ::Type{Float64}) at dijkstra_spath.jl:33
└ @ Graphs ~/.julia/packages/Graphs/GQCid/src/dijkstra_spath.jl:33
┌ Warning: `mutable_binary_minheap(::Type{T}) where T` is deprecated, use `MutableBinaryMinHeap{T}()` instead.
│   caller = create_dijkstra_states(::GenericGraph{Int64,ExEdge{Int64},Array{Int64,1},Array{ExEdge{Int64},1},Array{Array{ExEdge{Int64},1},1}}, ::Type{Float64}) at dijkstra_spath.jl:33
└ @ Graphs ~/.julia/packages/Graphs/GQCid/src/dijkstra_spath.jl:33
┌ Warning: `mutable_binary_minheap(::Type{T}) where T` is deprecated, use `MutableBinaryMinHeap{T}()` instead.
│   caller = create_dijkstra_states(::GenericGraph{Int64,Edge{Int64},UnitRange{Int64},Array{Edge{Int64},1},Array{Array{Edge{Int64},1},1}}, ::Type{Float64}) at dijkstra_spath.jl:33
└ @ Graphs ~/.julia/packages/Graphs/GQCid/src/dijkstra_spath.jl:33
┌ Warning: `mutable_binary_minheap(::Type{T}) where T` is deprecated, use `MutableBinaryMinHeap{T}()` instead.
│   caller = create_dijkstra_states(::GenericIncidenceList{Int64,Edge{Int64},Array{Int64,1},Array{Array{Edge{Int64},1},1}}, ::Type{Float64}) at dijkstra_spath.jl:33
└ @ Graphs ~/.julia/packages/Graphs/GQCid/src/dijkstra_spath.jl:33
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/a_star_spath.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/mst.jl ...
┌ Warning: `mutable_binary_minheap(::Type{T}) where T` is deprecated, use `MutableBinaryMinHeap{T}()` instead.
│   caller = create_prim_states(::GenericIncidenceList{Int64,Edge{Int64},UnitRange{Int64},Array{Array{Edge{Int64},1},1}}, ::Type{Float64}) at prim_mst.jl:35
└ @ Graphs ~/.julia/packages/Graphs/GQCid/src/prim_mst.jl:35
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/floyd.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/dot.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/dot2.jl ...
implements_edge_list(sgd) == true = true
implements_vertex_map(sgd) == true = true
digraph graphname {
1
2
3
4
}

digraph graphname {
1
2
3
4
1 -> 3
3 -> 1
2 -> 3
}

implements_edge_list(ag) == true = true
implements_vertex_map(ag) == true = true
digraph graphname {
1	["label"="a","color"="bisque"]
2	["label"="b","color"="bisque"]
3	["label"="c","color"="bisque"]
4	["label"="d","color"="bisque"]
1 -> 3
3 -> 1
2 -> 3
}

graph graphname {
1	["label"="a","color"="bisque"]
2	["label"="b","color"="bisque"]
3	["label"="c","color"="bisque"]
4	["label"="d","color"="bisque"]
1 -- 3
2 -- 3
}

implements_edge_list(agu) == true = true
implements_vertex_map(agu) == true = true
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/cliques.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/random.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/generators.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/maximum_adjacency_visit.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/issue_related_tests.jl ...
running /home/pkgeval/.julia/packages/Graphs/GQCid/test/inclist_dict_delete.jl ...
ERROR: LoadError: LoadError: syntax: Assignment to `g` in top-level block is ambiguous because an outer global binding by the same name already exists. Use `global g` to assign to the outer global `g` variable or use `local g` to force a new local by the same name. At /home/pkgeval/.julia/packages/Graphs/GQCid/test/inclist_dict_delete.jl:7
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Graphs/GQCid/test/inclist_dict_delete.jl:5
 [2] include(::String) at ./client.jl:439
 [3] top-level scope at /home/pkgeval/.julia/packages/Graphs/GQCid/test/runtests.jl:30
 [4] include(::String) at ./client.jl:439
 [5] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/Graphs/GQCid/test/inclist_dict_delete.jl:5
in expression starting at /home/pkgeval/.julia/packages/Graphs/GQCid/test/runtests.jl:27
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Graphs/GQCid/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Graphs/GQCid/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Graphs errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
