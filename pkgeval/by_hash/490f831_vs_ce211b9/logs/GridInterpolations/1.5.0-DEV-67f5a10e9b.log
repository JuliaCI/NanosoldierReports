Julia Version 1.5.0-DEV.82
Commit 67f5a10e9b (2020-01-16 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed GridInterpolations ─ v1.1.1
 Installed StaticArrays ─────── v0.12.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [bb4c363b] + GridInterpolations v1.1.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [bb4c363b] + GridInterpolations v1.1.1
  [90137ffa] + StaticArrays v0.12.1
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4ec0a83e] + Unicode 
   Testing GridInterpolations
 Installed WoodburyMatrices ─ v0.5.0
 Installed Compat ─────────── v2.2.0
 Installed Ratios ─────────── v0.3.1
 Installed AxisAlgorithms ─── v1.0.0
 Installed OffsetArrays ───── v0.11.4
 Installed Interpolations ─── v0.12.6
  Updating `/tmp/jl_96ptQm/Project.toml`
  [a98d9a8b] + Interpolations v0.12.6
  [8bb1440f] + DelimitedFiles 
  [8dfed614] + Test 
  Updating `/tmp/jl_96ptQm/Manifest.toml`
  [13072b0f] + AxisAlgorithms v1.0.0
  [34da2185] + Compat v2.2.0
  [a98d9a8b] + Interpolations v0.12.6
  [6fe1bfb0] + OffsetArrays v0.11.4
  [c84ed2f1] + Ratios v0.3.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [3fa0cd96] + REPL 
  [ea8e919c] + SHA 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
Running sandbox
Status `/tmp/jl_96ptQm/Project.toml`
  [bb4c363b] GridInterpolations v1.1.1
  [a98d9a8b] Interpolations v0.12.6
  [90137ffa] StaticArrays v0.12.1
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
Test Summary: | Pass  Total
Comparisons   |    2      2
Test Summary: | Pass  Total
Magic         |    1      1
Test Summary: | Pass  Total
Repr          |    1      1
Test Summary: | Pass  Total
Counter       |    1      1
Test Summary: | Pass  Total
Mask          |    3      3
Test Summary: | Pass  Total
Duplicates    |    2      2
Test Summary: | Pass  Total
Rect Impl     |   17     17
Test Summary: | Pass  Total
Simplex Impl  |   19     19
Test Summary: | Pass  Total
Ordering      |   24     24
Test Summary: | Pass  Total
NaN           |    1      1
Test Summary:          | Pass  Total
Iteration and Indexing |   27     27
1000 interpolations of 6 dimensions with 15 cut points per dimension:
  Rectangle required 0.0044221215320000016 +/- 0.004844284174488819 sec
  Simplex   required 0.003288174004999997 +/- 0.0076056313458198205 sec
How large is the simplex grid speed up over the multilinear grid?
  limiting to 2 dimensions and therefore 316 points per dim:
    mean speed: 0.003139754433333333, std dev: 0.008041304966985838
  limiting to 3 dimensions and therefore 46 points per dim:
    mean speed: 0.0022797709333333338, std dev: 0.0003817878168414143
  limiting to 4 dimensions and therefore 18 points per dim:
    mean speed: 0.0025425385333333332, std dev: 0.0006430981456083449
  limiting to 5 dimensions and therefore 10 points per dim:
    mean speed: 0.002823945000000001, std dev: 0.0003943840883930984
100 interpolations of 4 dimensions with 10 cut points per dimension:
  Rectangle required 0.0016586928400000006 +/- 0.0022403993022549495 sec
  Simplex   required 0.0022837233099999997 +/- 0.001168816950044708 sec
All tests complete
   Testing GridInterpolations tests passed 
