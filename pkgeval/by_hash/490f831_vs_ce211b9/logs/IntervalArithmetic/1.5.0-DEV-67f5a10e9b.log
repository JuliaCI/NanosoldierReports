Julia Version 1.5.0-DEV.82
Commit 67f5a10e9b (2020-01-16 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed RecipesBase ───────── v0.7.0
 Installed SetRounding ───────── v0.2.0
 Installed FastRounding ──────── v0.2.0
 Installed ErrorfreeArithmetic ─ v0.4.1
 Installed CRlibm ────────────── v0.8.0
 Installed StaticArrays ──────── v0.12.1
 Installed IntervalArithmetic ── v0.16.2
  Updating `~/.julia/environments/v1.5/Project.toml`
  [d1acc4aa] + IntervalArithmetic v0.16.2
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [96374032] + CRlibm v0.8.0
  [90fa49ef] + ErrorfreeArithmetic v0.4.1
  [fa42c844] + FastRounding v0.2.0
  [d1acc4aa] + IntervalArithmetic v0.16.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [3cc68bcd] + SetRounding v0.2.0
  [90137ffa] + StaticArrays v0.12.1
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  Building CRlibm → `~/.julia/packages/CRlibm/NFCH5/deps/build.log`
  Updating `/tmp/jl_iJU3Ei/Project.toml`
 [no changes]
  Updating `/tmp/jl_iJU3Ei/Manifest.toml`
 [no changes]
   Testing IntervalArithmetic
 Installed Polynomials ─ v0.6.0
  Updating `/tmp/jl_5VVyQP/Project.toml`
  [f27b6e38] + Polynomials v0.6.0
  Updating `/tmp/jl_5VVyQP/Manifest.toml`
  [f27b6e38] + Polynomials v0.6.0
Running sandbox
Status `/tmp/jl_5VVyQP/Project.toml`
  [96374032] CRlibm v0.8.0
  [fa42c844] FastRounding v0.2.0
  [d1acc4aa] IntervalArithmetic v0.16.2
  [f27b6e38] Polynomials v0.6.0
  [3cdcf5f2] RecipesBase v0.7.0
  [3cc68bcd] SetRounding v0.2.0
  [90137ffa] StaticArrays v0.12.1
  [37e2e46d] LinearAlgebra 
  [d6f4376e] Markdown 
  [8dfed614] Test 
Test Summary:          | Pass  Total
Constructing intervals |   92     92
Test Summary: | Pass  Broken  Total
Big intervals |    6       1      7
Test Summary:     | Pass  Total
Complex intervals |    2      2
Test Summary: | Pass  Total
.. tests      |    4      4
Test Summary: | Pass  Total
± tests       |    5      5
Test Summary:                       | Pass  Total
Conversion to interval of same type |    2      2
Test Summary:                                   | Pass  Total
Conversions between different types of interval |    2      2
Test Summary:          | Pass  Total
Conversion to Interval |    3      3
Test Summary:           | Pass  Total
Interval{T} constructor |    4      4
Test Summary:                        | Pass  Total
Disallow a single NaN in an interval |    2      2
Test Summary:    | Pass  Total
Interval strings |    4      4
Test Summary: | Pass  Total
setdiff tests |    6      6
Test Summary:            | Pass  Total
Interval{T}(x::Interval) |    2      2
Test Summary:         | Pass  Total
@interval with fields |    1      1
Test Summary:                        | Pass  Total
@interval with user-defined function |    1      1
Test Summary:   | Pass  Total
a..b with a > b |    1      1
Test Summary:        | Pass  Total
Hashing of Intervals |    6      6
Test Summary:  | Pass  Total
force_interval |    5      5
Test Summary:     | Pass  Total
Consistency tests |  236    236
Test Summary: | Pass  Total
Numeric tests |   35     35
Test Summary:             | Pass  Total
Arithmetic with constants |    5      5
Test Summary: | Pass  Total
Power tests   |   40     40
Test Summary:     | Pass  Total
Exp and log tests |   18     18
Test Summary:    | Pass  Total
Comparison tests |    8      8
Test Summary:  | Pass  Total
Rational tests |    7      7
Test Summary:    | Pass  Total
Floor etc. tests |   53     53
Test Summary: | Pass  Total
Fast power    |   28     28
Test Summary: | Pass  Total
sin           |   14     14
Test Summary: | Pass  Total
cos           |   12     12
Test Summary: | Pass  Total
sinpi         |    5      5
Test Summary: | Pass  Total
cospi         |    5      5
Test Summary: | Pass  Total
tan           |   12     12
Test Summary: | Pass  Total
Inverse trig  |   15     15
Test Summary: | Pass  Total
atan          |   48     48
Test Summary: | Pass  Total
Trig          |    4      4
Test Summary:             | Pass  Total
Trig with large arguments |    7      7
Test Summary: | Pass  Total
Hyperb tests  |   41     41
Test Summary:                 | Pass  Total
Tests with rational intervals |    3      3
Test Summary:               | Pass  Total
Rounding rational intervals |    1      1
Test Summary:              | Pass  Total
Tests with float intervals |    4      4
Test Summary:                  | Pass  Total
Testing functions of intervals |    2      2
Test Summary:       | Pass  Total
Testing conversions |    2      2
Test Summary:                       | Pass  Total
Linear algebra with intervals tests |    2      2
Test Summary:       | Pass  Total
Interval loop tests |   12     12
Test Summary: | Pass  Total
Pi tests      |    7      7
Test Summary:            | Pass  Total
Parse string to Interval |   31     31
Test Summary:                     | Pass  Total
Parse string to DecoratedInterval |   20     20
Test Summary:                                  | Pass  Total
Tight, slow rounding by changing rounding mode |    2      2
Test Summary:                                         | Pass  Total
Accurate, fast rounding using prevfloat and nextfloat |    2      2
Test Summary: | Pass  Total
No rounding   |    3      3
Test Summary:                              | Pass  Total
Tight, fast rounding using FastRounding.jl |    2      2
Test Summary:     | Pass  Total
`bisect` function |   14     14
ERROR: LoadError: LoadError: LoadError: syntax: Assignment to `b` in top-level block is ambiguous because an outer global binding by the same name already exists. Use `global b` to assign to the outer global `b` variable or use `local b` to force a new local by the same name. At /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/interval_tests/complex.jl:8
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/interval_tests/complex.jl:6
 [2] include(::String) at ./client.jl:439
 [3] top-level scope at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/interval_tests/intervals.jl:15
 [4] include(::String) at ./client.jl:439
 [5] top-level scope at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/runtests.jl:15
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/interval_tests/complex.jl:6
in expression starting at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/interval_tests/intervals.jl:15
in expression starting at /home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/runtests.jl:15
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/IntervalArithmetic/W4cqS/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package IntervalArithmetic errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
