Julia Version 1.5.0-DEV.82
Commit 67f5a10e9b (2020-01-16 22:11 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed OrderedCollections ────── v1.1.0
 Installed MultivariatePolynomials ─ v0.3.6
 Installed MutableArithmetics ────── v0.2.1
 Installed DataStructures ────────── v0.17.9
  Updating `~/.julia/environments/v1.5/Project.toml`
  [102ac46a] + MultivariatePolynomials v0.3.6
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [864edb3b] + DataStructures v0.17.9
  [102ac46a] + MultivariatePolynomials v0.3.6
  [d8a4904e] + MutableArithmetics v0.2.1
  [bac558e1] + OrderedCollections v1.1.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
   Testing MultivariatePolynomials
 Installed Reexport ─────────── v0.2.0
 Installed JSON ─────────────── v0.21.0
 Installed MacroTools ───────── v0.5.3
 Installed Parsers ──────────── v0.3.10
 Installed BenchmarkTools ───── v0.4.3
 Installed DynamicPolynomials ─ v0.3.7
 Installed TypedPolynomials ─── v0.2.5
  Updating `/tmp/jl_Vi8E4A/Project.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [7c1d4256] + DynamicPolynomials v0.3.7
  [afbbf031] + TypedPolynomials v0.2.5
  Updating `/tmp/jl_Vi8E4A/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [7c1d4256] + DynamicPolynomials v0.3.7
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [69de0a69] + Parsers v0.3.10
  [189a3867] + Reexport v0.2.0
  [afbbf031] + TypedPolynomials v0.2.5
  [ade2ca70] + Dates 
  [9fa8497b] + Future 
  [76f85450] + LibGit2 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [ea8e919c] + SHA 
  [10745b16] + Statistics 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
Running sandbox
Status `/tmp/jl_Vi8E4A/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [864edb3b] DataStructures v0.17.9
  [7c1d4256] DynamicPolynomials v0.3.7
  [102ac46a] MultivariatePolynomials v0.3.6
  [d8a4904e] MutableArithmetics v0.2.1
  [afbbf031] TypedPolynomials v0.2.5
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                     | Pass  Total
MutableArithmetics with variables | 5613   5613
Test Summary:                     | Pass  Total
MutableArithmetics with monomials | 5645   5645
Test Summary:                          | Pass  Total
MutableArithmetics with terms in Int64 | 5645   5645
Test Summary:                           | Pass  Total
MutableArithmetics with terms in BigInt | 5656   5656
Test Summary:                                | Pass  Total
MutableArithmetics with polynomials in Int64 | 5645   5645
Test Summary:                                 | Pass  Total
MutableArithmetics with polynomials in BigInt | 5684   5684
ERROR: LoadError: LoadError: LoadError: syntax: Assignment to `x` in top-level block is ambiguous because an outer global binding by the same name already exists. Use `global x` to assign to the outer global `x` variable or use `local x` to force a new local by the same name. At /home/pkgeval/.julia/packages/DynamicPolynomials/hezBS/src/var.jl:36
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/zip.jl:3
 [2] include(::String) at ./client.jl:439
 [3] top-level scope at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/commutativetests.jl:3
 [4] include(::String) at ./client.jl:439
 [5] top-level scope at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/runtests.jl:21
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/zip.jl:3
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/commutativetests.jl:3
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/runtests.jl:19
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/MultivariatePolynomials/Mpv8c/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package MultivariatePolynomials errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
