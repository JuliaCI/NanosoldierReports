Julia Version 1.6.0-DEV.1190
Commit ebc63b9a56 (2020-10-12 21:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mCompilerSupportLibraries_jll[32m âœ“[39m[39m
  [90mOpenSpecFun_jll[32m âœ“[39m[39m
  [90mSpecialFunctions[32m âœ“[39m[39m
  [90mFastGaussQuadrature[32m âœ“[39m[39m
  FunctionIntegrator[32m âœ“[39m
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_C47GKZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_C47GKZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.311629 seconds (289.09 k allocations: 13.533 MiB, 93.35% compilation time)
Running: chebyshev_quadrature with k=1
  1.592701 seconds (2.20 M allocations: 126.860 MiB, 3.80% gc time, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.220132 seconds (409.39 k allocations: 23.583 MiB, 85.30% compilation time)
Running: chebyshev_quadrature with k=3
  0.380835 seconds (473.75 k allocations: 26.621 MiB, 5.61% gc time, 91.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.229978 seconds (418.56 k allocations: 23.272 MiB, 90.63% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 73.970867 seconds (34.87 M allocations: 2.927 GiB, 32.74% gc time, 58.34% compilation time)
Running: laguerre_quadrature with k=1
  2.635403 seconds (3.17 M allocations: 177.072 MiB, 4.26% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.328645 seconds (206.30 k allocations: 11.853 MiB, 99.46% compilation time)
Running: lobatto_quadrature
  0.875624 seconds (330.13 k allocations: 19.968 MiB, 99.28% compilation time)
Running: radau_quadrature
  1.084206 seconds (448.71 k allocations: 27.446 MiB, 1.95% gc time, 99.82% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 45.268308 seconds (100.02 M allocations: 1.491 GiB, 0.70% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.080350 seconds (172.46 k allocations: 3.827 MiB, 30.53% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.585940 seconds (100.02 M allocations: 1.491 GiB, 0.39% gc time, 0.05% compilation time)
Running: rombergs_method
  0.850960 seconds (722.97 k allocations: 41.735 MiB, 2.20% gc time, 99.75% compilation time)
Running: simpsons_rule
  0.110718 seconds (46.55 k allocations: 2.532 MiB, 98.60% compilation time)
Running: simpsons38_rule
  0.053875 seconds (108.54 k allocations: 5.757 MiB, 97.49% compilation time)
Running: trapezoidal_rule
  0.406022 seconds (1.72 M allocations: 28.605 MiB, 4.26% gc time, 14.77% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.065669 seconds (29.79 k allocations: 1.767 MiB, 99.74% compilation time)
Running: chebyshev_quadrature with k=1
  0.538483 seconds (290.95 k allocations: 15.426 MiB, 99.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.216604 seconds (93.80 k allocations: 2.675 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.131163 seconds (82.06 k allocations: 2.476 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.380247 seconds (64.67 k allocations: 2.122 MiB, 99.70% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.396728 seconds (504.04 k allocations: 161.839 MiB, 8.71% gc time, 32.67% compilation time)
Running: legendre_quadrature
  0.244714 seconds (41.35 k allocations: 2.385 MiB, 79.27% compilation time)
Running: lobatto_quadrature
  0.228836 seconds (15.74 k allocations: 1005.450 KiB, 99.92% compilation time)
Running: radau_quadrature
  0.030250 seconds (15.85 k allocations: 1012.665 KiB, 99.50% compilation time)
Running: rectangle_rule_left
 14.342799 seconds (471.41 M allocations: 7.025 GiB, 8.86% gc time)
Running: rectangle_rule_midpoint
  0.000068 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.433598 seconds (476.96 M allocations: 7.107 GiB, 6.27% gc time)
Running: rombergs_method
  0.449967 seconds (326.52 k allocations: 18.533 MiB, 1.63% gc time, 99.89% compilation time)
Running: simpsons_rule
  0.000034 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.053614 seconds (18.91 k allocations: 1.146 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.043022 seconds (16.49 k allocations: 1.000 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018723 seconds (1.03 k allocations: 34.125 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.108042 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.090236 seconds (2.71 k allocations: 124.266 KiB, 99.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.094959 seconds (2.31 k allocations: 109.297 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.094306 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.552063 seconds (363.65 k allocations: 18.962 MiB, 99.64% compilation time)
Running: legendre_quadrature
  0.084508 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000103 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000037 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000331 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000224 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000312 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.060012 seconds (1.04 k allocations: 56.531 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000017 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023148 seconds (923 allocations: 39.281 KiB, 99.66% compilation time)
Running: trapezoidal_rule
  0.015811 seconds (44.29 k allocations: 702.859 KiB, 91.52% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.260558 seconds (80.91 k allocations: 4.823 MiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=1
  0.246184 seconds (230.61 k allocations: 12.967 MiB, 14.18% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.195753 seconds (283.17 k allocations: 15.880 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.409097 seconds (234.76 k allocations: 13.158 MiB, 97.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.255829 seconds (234.76 k allocations: 13.045 MiB, 99.15% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.372963 seconds (446.74 k allocations: 163.206 MiB, 5.11% gc time, 20.27% compilation time)
Running: legendre_quadrature
  0.202980 seconds (185.44 k allocations: 10.707 MiB, 68.69% compilation time)
Running: lobatto_quadrature
  0.520831 seconds (196.62 k allocations: 11.411 MiB, 99.64% compilation time)
Running: radau_quadrature
  0.336828 seconds (196.62 k allocations: 11.411 MiB, 99.50% compilation time)
Running: rectangle_rule_left
  0.654595 seconds (18.82 k allocations: 1.147 MiB, 4.08% compilation time)
Running: rectangle_rule_midpoint
  0.319013 seconds (24.67 k allocations: 1.555 MiB, 99.93% compilation time)
Running: rectangle_rule_right
  0.583762 seconds (17.39 k allocations: 1.062 MiB, 5.12% compilation time)
Running: rombergs_method
  0.286347 seconds (134.27 k allocations: 7.778 MiB, 89.47% compilation time)
Running: simpsons_rule
  0.020710 seconds (36.49 k allocations: 2.341 MiB, 99.08% compilation time)
Running: simpsons38_rule
  0.270956 seconds (42.37 k allocations: 2.678 MiB, 31.11% gc time, 99.92% compilation time)
Running: trapezoidal_rule
  0.014071 seconds (42.32 k allocations: 1.671 MiB, 96.65% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024848 seconds (66.94 k allocations: 2.959 MiB, 96.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.535511 seconds (237.20 k allocations: 13.032 MiB, 99.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.275863 seconds (290.20 k allocations: 15.872 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.220303 seconds (241.33 k allocations: 13.118 MiB, 94.59% compilation time)
Running: chebyshev_quadrature with k=4
  0.352117 seconds (241.34 k allocations: 13.127 MiB, 98.94% compilation time)
Running: hermite_quadrature with k=2
 22.929399 seconds (20.10 M allocations: 1.056 GiB, 16.51% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.479538 seconds (455.91 k allocations: 49.394 MiB, 93.77% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.189487 seconds (276.26 k allocations: 15.248 MiB, 98.09% compilation time)
Running: legendre_quadrature
  0.202200 seconds (191.98 k allocations: 11.035 MiB, 98.84% compilation time)
Running: lobatto_quadrature
  0.356155 seconds (217.28 k allocations: 37.185 MiB, 25.13% gc time, 64.59% compilation time)
Running: radau_quadrature
  0.509669 seconds (213.86 k allocations: 29.872 MiB, 13.55% gc time, 76.90% compilation time)
Running: rectangle_rule_left
  0.028282 seconds (21.73 k allocations: 1.293 MiB, 99.49% compilation time)
Running: rectangle_rule_midpoint
  0.035231 seconds (26.47 k allocations: 1.642 MiB, 99.56% compilation time)
Running: rectangle_rule_right
  0.028990 seconds (18.50 k allocations: 1.117 MiB, 99.53% compilation time)
Running: rombergs_method
  0.220081 seconds (136.74 k allocations: 7.803 MiB, 98.87% compilation time)
Running: simpsons_rule
  0.085477 seconds (43.97 k allocations: 2.609 MiB, 99.59% compilation time)
Running: simpsons38_rule
  0.100928 seconds (57.34 k allocations: 3.063 MiB, 98.55% compilation time)
Running: trapezoidal_rule
  0.028780 seconds (28.35 k allocations: 1.595 MiB, 98.96% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.034041 seconds (50.91 k allocations: 2.619 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=1
  0.262128 seconds (232.72 k allocations: 12.830 MiB, 11.52% gc time, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.306523 seconds (285.38 k allocations: 15.643 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.176436 seconds (236.87 k allocations: 12.928 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.270050 seconds (236.87 k allocations: 12.929 MiB, 10.91% gc time, 99.17% compilation time)
Running: hermite_quadrature with k=2
  0.215779 seconds (170.79 k allocations: 9.790 MiB, 98.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 10.416242 seconds (449.18 k allocations: 1.175 GiB, 38.94% gc time, 7.88% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.498078 seconds (271.55 k allocations: 15.060 MiB, 99.27% compilation time)
Running: legendre_quadrature
  0.599149 seconds (187.55 k allocations: 10.818 MiB, 99.13% compilation time)
Running: lobatto_quadrature
  0.315164 seconds (208.03 k allocations: 22.915 MiB, 95.97% compilation time)
Running: radau_quadrature
  0.250255 seconds (207.19 k allocations: 20.844 MiB, 11.36% gc time, 81.56% compilation time)
Running: rectangle_rule_left
  0.057778 seconds (19.52 k allocations: 1.188 MiB, 99.63% compilation time)
Running: rectangle_rule_midpoint
  0.032279 seconds (25.36 k allocations: 1.591 MiB, 99.46% compilation time)
Running: rectangle_rule_right
  0.055459 seconds (17.36 k allocations: 1.062 MiB, 99.69% compilation time)
Running: rombergs_method
  0.123569 seconds (132.58 k allocations: 7.622 MiB, 97.11% compilation time)
Running: simpsons_rule
  0.038981 seconds (39.30 k allocations: 2.442 MiB, 99.45% compilation time)
Running: simpsons38_rule
  0.321878 seconds (48.16 k allocations: 2.821 MiB, 99.92% compilation time)
Running: trapezoidal_rule
  0.018900 seconds (23.26 k allocations: 1.433 MiB, 98.97% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.019891 seconds (39.05 k allocations: 2.475 MiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.232554 seconds (231.10 k allocations: 13.042 MiB, 97.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.224946 seconds (283.67 k allocations: 15.996 MiB, 18.01% gc time, 98.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.172187 seconds (235.25 k allocations: 13.142 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.317169 seconds (235.25 k allocations: 13.039 MiB, 99.25% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.210661 seconds (447.28 k allocations: 194.233 MiB, 4.96% gc time, 19.59% compilation time)
Running: legendre_quadrature
  0.141472 seconds (185.93 k allocations: 10.732 MiB, 98.37% compilation time)
Running: lobatto_quadrature
  0.324746 seconds (197.11 k allocations: 11.440 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.167500 seconds (197.11 k allocations: 11.441 MiB, 98.58% compilation time)
Running: rectangle_rule_left
  0.334692 seconds (19.34 k allocations: 1.173 MiB, 6.81% compilation time)
Running: rectangle_rule_midpoint
  0.019499 seconds (25.01 k allocations: 1.573 MiB, 99.30% compilation time)
Running: rectangle_rule_right
  0.164812 seconds (17.73 k allocations: 1.081 MiB, 19.50% compilation time)
Running: rombergs_method
  0.184820 seconds (145.02 k allocations: 8.485 MiB, 14.37% gc time, 97.91% compilation time)
Running: simpsons_rule
  0.031603 seconds (37.11 k allocations: 2.369 MiB, 99.46% compilation time)
Running: simpsons38_rule
  0.027264 seconds (43.08 k allocations: 2.708 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.031897 seconds (43.25 k allocations: 1.703 MiB, 98.14% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.081240 seconds (38.85 k allocations: 2.409 MiB, 88.01% compilation time)
Running: chebyshev_quadrature with k=1
  0.306128 seconds (231.69 k allocations: 12.992 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.233208 seconds (284.30 k allocations: 15.891 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.314883 seconds (235.84 k allocations: 13.072 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.161423 seconds (235.84 k allocations: 13.205 MiB, 98.25% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.869687 seconds (447.99 k allocations: 148.917 MiB, 3.80% gc time, 34.96% compilation time)
Running: legendre_quadrature
  0.327359 seconds (186.53 k allocations: 10.750 MiB, 99.20% compilation time)
Running: lobatto_quadrature
  0.342928 seconds (197.72 k allocations: 11.523 MiB, 98.90% compilation time)
Running: radau_quadrature
  0.202476 seconds (197.71 k allocations: 11.454 MiB, 98.23% compilation time)
Running: rectangle_rule_left
  0.724210 seconds (19.59 k allocations: 1.186 MiB, 3.89% compilation time)
Running: rectangle_rule_midpoint
  0.088230 seconds (25.01 k allocations: 1.574 MiB, 53.15% compilation time)
Running: rectangle_rule_right
  0.713639 seconds (17.69 k allocations: 1.078 MiB, 6.26% compilation time)
Running: rombergs_method
  0.197185 seconds (135.49 k allocations: 7.816 MiB, 96.30% compilation time)
Running: simpsons_rule
  0.034726 seconds (37.60 k allocations: 2.389 MiB, 99.38% compilation time)
Running: simpsons38_rule
  0.136293 seconds (43.78 k allocations: 2.735 MiB, 56.33% gc time, 99.77% compilation time)
Running: trapezoidal_rule
  0.020189 seconds (55.40 k allocations: 1.899 MiB, 94.96% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.343086 seconds (147.44 k allocations: 8.794 MiB, 21.35% gc time, 99.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.172910 seconds (69.93 k allocations: 2.205 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=2
  0.143241 seconds (105.09 k allocations: 2.868 MiB, 97.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.136298 seconds (92.57 k allocations: 2.654 MiB, 97.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.155361 seconds (72.10 k allocations: 2.248 MiB, 98.05% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.221279 seconds (480.29 k allocations: 167.793 MiB, 4.63% gc time, 17.78% compilation time)
Running: legendre_quadrature
  0.115587 seconds (18.73 k allocations: 1.094 MiB, 99.68% compilation time)
Running: lobatto_quadrature
  0.000139 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000055 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.595418 seconds (590.00 M allocations: 8.792 GiB, 7.61% gc time)
Running: rectangle_rule_midpoint
  0.000037 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.564584 seconds (592.75 M allocations: 8.833 GiB, 6.58% gc time)
Running: rombergs_method
  0.152313 seconds (20.51 k allocations: 1.165 MiB, 99.45% compilation time)
Running: simpsons_rule
  0.000055 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031797 seconds (463 allocations: 22.578 KiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.017339 seconds (171 allocations: 7.859 KiB, 99.29% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.702757 seconds (209.93 M allocations: 3.138 GiB, 2.20% gc time, 0.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.461074 seconds (414.19 k allocations: 22.969 MiB, 99.29% compilation time)
Running: chebyshev_quadrature with k=2
 18.336818 seconds (468.83 k allocations: 4.040 GiB, 5.33% gc time, 2.48% compilation time)
Running: chebyshev_quadrature with k=3
  8.364604 seconds (249.12 k allocations: 1.642 GiB, 3.87% gc time, 2.70% compilation time)
Running: chebyshev_quadrature with k=4
 11.015476 seconds (249.12 k allocations: 2.260 GiB, 2.14% gc time, 1.86% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 40.038389 seconds (484.24 k allocations: 13.254 GiB, 11.49% gc time, 1.16% compilation time)
Running: legendre_quadrature.
  9.939816 seconds (223.44 k allocations: 1.976 GiB, 1.36% gc time, 4.24% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.720954 seconds (8.23 M allocations: 13.383 GiB, 20.85% gc time, 0.57% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.334834 seconds (7.23 M allocations: 13.369 GiB, 10.24% gc time, 0.79% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.474677 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.935949 seconds (30.45 k allocations: 1.884 MiB, 0.23% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.995638 seconds (22.45 k allocations: 1.357 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.883501 seconds (438.29 k allocations: 152.692 MiB, 1.97% gc time, 10.10% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.080836 seconds (200.04 M allocations: 2.983 GiB, 2.29% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.447806 seconds (600.05 M allocations: 8.943 GiB, 5.93% gc time, 0.13% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.127009 seconds (600.03 M allocations: 8.943 GiB, 4.08% gc time, 0.34% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.064128 seconds (109.56 k allocations: 4.131 MiB, 94.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.241059 seconds (247.70 k allocations: 13.511 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=2
  0.287949 seconds (272.34 k allocations: 14.521 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.189637 seconds (220.25 k allocations: 11.663 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.319440 seconds (220.25 k allocations: 11.661 MiB, 45.01% gc time, 99.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.387440 seconds (388.86 k allocations: 34.980 MiB, 94.15% compilation time)
Running: laguerre_quadrature with k=2
  0.199359 seconds (180.54 k allocations: 10.477 MiB, 77.43% compilation time)
Running: legendre_quadrature
  0.105370 seconds (145.98 k allocations: 8.073 MiB, 94.31% compilation time)
Running: lobatto_quadrature
  0.019547 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.021730 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.049418 seconds (18.88 k allocations: 1.121 MiB, 49.14% compilation time)
Running: rectangle_rule_midpoint
  0.033193 seconds (25.48 k allocations: 1.575 MiB, 64.86% compilation time)
Running: rectangle_rule_right
  0.037248 seconds (17.48 k allocations: 1.049 MiB, 55.54% compilation time)
Running: rombergs_method
  0.210897 seconds (172.14 k allocations: 9.827 MiB, 98.67% compilation time)
Running: simpsons_rule
  0.000460 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.065761 seconds (78.86 k allocations: 3.385 MiB, 98.53% compilation time)
Running: trapezoidal_rule
  0.134781 seconds (2.39 M allocations: 37.684 MiB, 41.74% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000749 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.094419 seconds (2.46 k allocations: 1.691 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.112685 seconds (2.71 k allocations: 2.355 MiB, 97.01% compilation time)
Running: chebyshev_quadrature with k=3
  0.108426 seconds (2.31 k allocations: 2.028 MiB, 96.29% compilation time)
Running: chebyshev_quadrature with k=4
  0.095551 seconds (2.31 k allocations: 1.469 MiB, 97.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.573072 seconds (365.93 k allocations: 904.798 MiB, 5.89% gc time, 5.58% compilation time)
Running: legendre_quadrature
  0.064153 seconds (1.27 k allocations: 68.203 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000176 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000121 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.714592 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000369 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.946624 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075925 seconds (997 allocations: 56.672 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000994 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000150 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.102736 seconds (2.53 k allocations: 579.203 KiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=2
  0.104354 seconds (2.79 k allocations: 780.188 KiB, 99.06% compilation time)
Running: chebyshev_quadrature with k=3
  0.103462 seconds (2.39 k allocations: 661.047 KiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.105850 seconds (2.39 k allocations: 491.547 KiB, 99.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.662317 seconds (372.49 k allocations: 252.909 MiB, 21.42% compilation time)
Running: legendre_quadrature
  0.065056 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000059 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.263530 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000131 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.227605 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.076009 seconds (1.21 k allocations: 64.938 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000475 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
