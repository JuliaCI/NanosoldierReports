Julia Version 1.6.0-DEV.1199
Commit 50c0429891 (2020-10-12 21:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
  [90mCompilerSupportLibraries_jll[32m âœ“[39m[39m
  [90mOpenSpecFun_jll[32m âœ“[39m[39m
  [90mSpecialFunctions[32m âœ“[39m[39m
  [90mFastGaussQuadrature[32m âœ“[39m[39m
  FunctionIntegrator[32m âœ“[39m
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_wf2VUX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_wf2VUX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.269069 seconds (289.03 k allocations: 13.522 MiB, 90.33% compilation time)
Running: chebyshev_quadrature with k=1
  2.021223 seconds (2.20 M allocations: 126.777 MiB, 3.31% gc time, 98.85% compilation time)
Running: chebyshev_quadrature with k=2
  0.323058 seconds (409.38 k allocations: 23.566 MiB, 90.83% compilation time)
Running: chebyshev_quadrature with k=3
  0.771959 seconds (473.75 k allocations: 26.614 MiB, 3.50% gc time, 96.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.912441 seconds (418.56 k allocations: 23.260 MiB, 80.10% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 50.041392 seconds (34.88 M allocations: 2.928 GiB, 14.46% gc time, 82.22% compilation time)
Running: laguerre_quadrature with k=1
  3.175419 seconds (3.17 M allocations: 177.119 MiB, 4.40% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.223369 seconds (206.27 k allocations: 11.846 MiB, 99.06% compilation time)
Running: lobatto_quadrature
  0.359844 seconds (329.53 k allocations: 19.915 MiB, 99.43% compilation time)
Running: radau_quadrature
  0.373668 seconds (448.32 k allocations: 27.408 MiB, 7.48% gc time, 99.46% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.517366 seconds (100.02 M allocations: 1.491 GiB, 0.69% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.141966 seconds (172.46 k allocations: 3.827 MiB, 50.88% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 46.830744 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time, 0.04% compilation time)
Running: rombergs_method
  0.398485 seconds (722.94 k allocations: 41.736 MiB, 5.00% gc time, 99.47% compilation time)
Running: simpsons_rule
  0.051523 seconds (46.55 k allocations: 2.532 MiB, 95.58% compilation time)
Running: simpsons38_rule
  0.192017 seconds (108.49 k allocations: 5.750 MiB, 98.77% compilation time)
Running: trapezoidal_rule
  0.300670 seconds (1.72 M allocations: 28.600 MiB, 17.58% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.059939 seconds (29.80 k allocations: 1.767 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.370503 seconds (290.33 k allocations: 15.352 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.135283 seconds (93.80 k allocations: 2.675 MiB, 97.99% compilation time)
Running: chebyshev_quadrature with k=3
  0.196246 seconds (82.06 k allocations: 2.476 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.150753 seconds (64.67 k allocations: 2.122 MiB, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.371808 seconds (503.79 k allocations: 161.842 MiB, 5.78% gc time, 20.33% compilation time)
Running: legendre_quadrature
  0.158946 seconds (41.32 k allocations: 2.382 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.019112 seconds (15.71 k allocations: 1002.200 KiB, 99.02% compilation time)
Running: radau_quadrature
  0.019498 seconds (15.82 k allocations: 1009.415 KiB, 99.02% compilation time)
Running: rectangle_rule_left
 14.555674 seconds (471.41 M allocations: 7.025 GiB, 6.61% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.943224 seconds (476.96 M allocations: 7.107 GiB, 6.76% gc time)
Running: rombergs_method
  0.391880 seconds (326.49 k allocations: 18.530 MiB, 99.90% compilation time)
Running: simpsons_rule
  0.000016 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.071197 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.035671 seconds (16.49 k allocations: 1.001 MiB, 99.75% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.019256 seconds (1.03 k allocations: 34.125 KiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=1
  0.097677 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.091658 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.089464 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.100411 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.308595 seconds (363.64 k allocations: 18.965 MiB, 9.67% gc time, 99.35% compilation time)
Running: legendre_quadrature
  0.107840 seconds (1.28 k allocations: 65.891 KiB, 99.94% compilation time)
Running: lobatto_quadrature
  0.000088 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000079 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000346 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000346 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.092973 seconds (1.04 k allocations: 56.531 KiB, 99.79% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023535 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.022200 seconds (44.29 k allocations: 702.859 KiB, 93.02% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.056438 seconds (80.91 k allocations: 4.823 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.236928 seconds (230.61 k allocations: 12.967 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.154924 seconds (283.17 k allocations: 15.898 MiB, 98.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.480717 seconds (234.77 k allocations: 13.163 MiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.231538 seconds (234.76 k allocations: 13.045 MiB, 8.85% gc time, 95.17% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.188512 seconds (446.72 k allocations: 163.187 MiB, 7.40% gc time, 33.82% compilation time)
Running: legendre_quadrature
  0.279240 seconds (185.44 k allocations: 10.707 MiB, 99.32% compilation time)
Running: lobatto_quadrature
  0.180823 seconds (196.61 k allocations: 11.410 MiB, 96.35% compilation time)
Running: radau_quadrature
  0.289480 seconds (196.61 k allocations: 11.416 MiB, 45.93% gc time, 99.28% compilation time)
Running: rectangle_rule_left
  0.671527 seconds (18.82 k allocations: 1.147 MiB, 7.27% compilation time)
Running: rectangle_rule_midpoint
  0.021191 seconds (24.67 k allocations: 1.555 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.630885 seconds (17.39 k allocations: 1.062 MiB, 3.66% compilation time)
Running: rombergs_method
  0.116747 seconds (134.27 k allocations: 7.778 MiB, 97.62% compilation time)
Running: simpsons_rule
  0.036902 seconds (36.49 k allocations: 2.341 MiB, 99.54% compilation time)
Running: simpsons38_rule
  0.028425 seconds (42.37 k allocations: 2.678 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.017839 seconds (42.32 k allocations: 1.671 MiB, 96.44% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.025785 seconds (66.94 k allocations: 2.959 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.247054 seconds (237.20 k allocations: 13.032 MiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.194879 seconds (290.20 k allocations: 15.872 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.298853 seconds (241.33 k allocations: 13.118 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.199306 seconds (241.34 k allocations: 13.123 MiB, 9.32% gc time, 99.05% compilation time)
Running: hermite_quadrature with k=2
 18.428149 seconds (20.10 M allocations: 1.056 GiB, 9.49% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.612873 seconds (455.90 k allocations: 49.402 MiB, 10.08% gc time, 81.00% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.269356 seconds (276.26 k allocations: 15.248 MiB, 15.03% gc time, 98.73% compilation time)
Running: legendre_quadrature
  0.234066 seconds (191.98 k allocations: 11.050 MiB, 98.99% compilation time)
Running: lobatto_quadrature
  0.205134 seconds (217.27 k allocations: 37.202 MiB, 13.27% gc time, 73.65% compilation time)
Running: radau_quadrature
  0.192891 seconds (213.85 k allocations: 29.846 MiB, 90.18% compilation time)
Running: rectangle_rule_left
  0.023483 seconds (21.73 k allocations: 1.293 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.021873 seconds (26.47 k allocations: 1.642 MiB, 99.30% compilation time)
Running: rectangle_rule_right
  0.019423 seconds (18.50 k allocations: 1.117 MiB, 99.27% compilation time)
Running: rombergs_method
  0.200161 seconds (136.74 k allocations: 7.829 MiB, 16.01% gc time, 98.82% compilation time)
Running: simpsons_rule
  0.043621 seconds (43.97 k allocations: 2.609 MiB, 79.35% compilation time)
Running: simpsons38_rule
  0.033722 seconds (57.34 k allocations: 3.063 MiB, 98.93% compilation time)
Running: trapezoidal_rule
  0.018027 seconds (28.35 k allocations: 1.595 MiB, 98.57% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027906 seconds (50.91 k allocations: 2.619 MiB, 97.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.325838 seconds (232.72 k allocations: 12.830 MiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=2
  0.422709 seconds (285.38 k allocations: 15.644 MiB, 97.78% compilation time)
Running: chebyshev_quadrature with k=3
  1.167340 seconds (236.87 k allocations: 12.928 MiB, 2.19% gc time, 99.80% compilation time)
Running: chebyshev_quadrature with k=4
  0.160204 seconds (236.87 k allocations: 12.929 MiB, 98.58% compilation time)
Running: hermite_quadrature with k=2
  0.129524 seconds (170.79 k allocations: 9.852 MiB, 98.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  8.482902 seconds (449.16 k allocations: 1.175 GiB, 35.76% gc time, 4.63% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.240858 seconds (271.55 k allocations: 15.060 MiB, 98.55% compilation time)
Running: legendre_quadrature
  0.183632 seconds (187.55 k allocations: 10.818 MiB, 16.45% gc time, 98.70% compilation time)
Running: lobatto_quadrature
  0.145628 seconds (208.03 k allocations: 22.978 MiB, 87.89% compilation time)
Running: radau_quadrature
  0.253901 seconds (207.18 k allocations: 20.844 MiB, 10.63% gc time, 90.77% compilation time)
Running: rectangle_rule_left
  0.023866 seconds (19.52 k allocations: 1.188 MiB, 99.42% compilation time)
Running: rectangle_rule_midpoint
  0.028992 seconds (25.36 k allocations: 1.591 MiB, 99.55% compilation time)
Running: rectangle_rule_right
  0.041114 seconds (17.36 k allocations: 1.062 MiB, 99.60% compilation time)
Running: rombergs_method
  0.125799 seconds (132.58 k allocations: 7.622 MiB, 98.03% compilation time)
Running: simpsons_rule
  0.030478 seconds (39.30 k allocations: 2.442 MiB, 99.36% compilation time)
Running: simpsons38_rule
  0.040002 seconds (48.16 k allocations: 2.821 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.024051 seconds (23.26 k allocations: 1.433 MiB, 99.13% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027057 seconds (39.05 k allocations: 2.475 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=1
  0.234353 seconds (231.10 k allocations: 13.042 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=2
  0.222889 seconds (283.67 k allocations: 15.996 MiB, 8.98% gc time, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.180339 seconds (235.25 k allocations: 13.141 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.250127 seconds (235.25 k allocations: 12.975 MiB, 99.06% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.953285 seconds (447.26 k allocations: 194.294 MiB, 3.73% gc time, 27.90% compilation time)
Running: legendre_quadrature
  0.223677 seconds (185.93 k allocations: 10.733 MiB, 98.97% compilation time)
Running: lobatto_quadrature
  0.192903 seconds (197.11 k allocations: 11.439 MiB, 98.71% compilation time)
Running: radau_quadrature
  0.294856 seconds (197.11 k allocations: 11.437 MiB, 44.45% gc time, 99.14% compilation time)
Running: rectangle_rule_left
  0.375215 seconds (19.34 k allocations: 1.173 MiB, 8.73% compilation time)
Running: rectangle_rule_midpoint
  0.041357 seconds (25.01 k allocations: 1.573 MiB, 99.68% compilation time)
Running: rectangle_rule_right
  0.157645 seconds (17.73 k allocations: 1.081 MiB, 15.15% compilation time)
Running: rombergs_method
  0.180422 seconds (145.02 k allocations: 8.485 MiB, 83.55% compilation time)
Running: simpsons_rule
  0.024182 seconds (37.11 k allocations: 2.369 MiB, 99.23% compilation time)
Running: simpsons38_rule
  0.027038 seconds (43.08 k allocations: 2.709 MiB, 99.29% compilation time)
Running: trapezoidal_rule
  0.017959 seconds (43.25 k allocations: 1.703 MiB, 96.83% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027864 seconds (38.85 k allocations: 2.409 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=1
  0.137086 seconds (231.69 k allocations: 12.988 MiB, 98.16% compilation time)
Running: chebyshev_quadrature with k=2
  0.297497 seconds (284.30 k allocations: 15.899 MiB, 15.74% gc time, 98.78% compilation time)
Running: chebyshev_quadrature with k=3
  0.263831 seconds (235.84 k allocations: 13.067 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=4
  0.184512 seconds (235.84 k allocations: 13.142 MiB, 98.49% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.378958 seconds (447.97 k allocations: 148.979 MiB, 13.77% gc time, 35.63% compilation time)
Running: legendre_quadrature
  0.210241 seconds (186.53 k allocations: 10.751 MiB, 98.88% compilation time)
Running: lobatto_quadrature
  0.568853 seconds (197.71 k allocations: 11.460 MiB, 99.54% compilation time)
Running: radau_quadrature
  0.386659 seconds (197.70 k allocations: 11.454 MiB, 99.34% compilation time)
Running: rectangle_rule_left
  0.692429 seconds (19.59 k allocations: 1.186 MiB, 3.21% compilation time)
Running: rectangle_rule_midpoint
  0.037048 seconds (25.01 k allocations: 1.574 MiB, 46.89% gc time, 99.50% compilation time)
Running: rectangle_rule_right
  0.673414 seconds (17.69 k allocations: 1.078 MiB, 3.29% compilation time)
Running: rombergs_method
  0.498563 seconds (135.49 k allocations: 7.815 MiB, 98.59% compilation time)
Running: simpsons_rule
  0.048445 seconds (37.60 k allocations: 2.389 MiB, 99.51% compilation time)
Running: simpsons38_rule
  0.032123 seconds (43.78 k allocations: 2.734 MiB, 99.38% compilation time)
Running: trapezoidal_rule
  0.020511 seconds (55.40 k allocations: 1.899 MiB, 95.18% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.167338 seconds (147.46 k allocations: 8.800 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.126811 seconds (69.93 k allocations: 2.205 MiB, 98.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.219379 seconds (105.09 k allocations: 2.868 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.179565 seconds (92.57 k allocations: 2.654 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=4
  0.143717 seconds (72.10 k allocations: 2.248 MiB, 98.31% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.501979 seconds (480.04 k allocations: 167.764 MiB, 4.31% gc time, 21.34% compilation time)
Running: legendre_quadrature
  0.099648 seconds (18.73 k allocations: 1.094 MiB, 99.71% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000045 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.800411 seconds (590.00 M allocations: 8.792 GiB, 5.32% gc time)
Running: rectangle_rule_midpoint
  0.000063 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.454886 seconds (592.75 M allocations: 8.833 GiB, 5.34% gc time)
Running: rombergs_method
  0.191090 seconds (20.51 k allocations: 1.165 MiB, 99.65% compilation time)
Running: simpsons_rule
  0.000051 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026663 seconds (463 allocations: 22.578 KiB, 99.48% compilation time)
Running: trapezoidal_rule
  0.022469 seconds (171 allocations: 7.859 KiB, 99.39% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.077674 seconds (209.93 M allocations: 3.138 GiB, 1.47% gc time, 0.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.461600 seconds (414.16 k allocations: 22.966 MiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=2
 18.594299 seconds (468.81 k allocations: 4.040 GiB, 10.17% gc time, 2.37% compilation time)
Running: chebyshev_quadrature with k=3
  8.010197 seconds (249.12 k allocations: 1.642 GiB, 4.13% gc time, 2.57% compilation time)
Running: chebyshev_quadrature with k=4
 11.193151 seconds (249.12 k allocations: 2.260 GiB, 2.33% gc time, 1.37% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 38.939060 seconds (484.23 k allocations: 13.254 GiB, 18.47% gc time, 2.68% compilation time)
Running: legendre_quadrature.
 11.519827 seconds (223.42 k allocations: 1.976 GiB, 19.60% gc time, 1.96% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.247920 seconds (8.23 M allocations: 13.383 GiB, 18.46% gc time, 0.97% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.877633 seconds (7.23 M allocations: 13.369 GiB, 25.03% gc time, 2.38% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.720246 seconds (22.25 k allocations: 1.347 MiB, 0.29% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.580880 seconds (30.45 k allocations: 1.884 MiB, 1.56% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.533481 seconds (22.45 k allocations: 1.357 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.372911 seconds (438.27 k allocations: 152.689 MiB, 0.90% gc time, 49.76% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.680179 seconds (200.04 M allocations: 2.983 GiB, 2.77% gc time, 0.24% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.949378 seconds (600.05 M allocations: 8.943 GiB, 5.93% gc time, 0.23% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.046022 seconds (600.03 M allocations: 8.943 GiB, 4.12% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.075959 seconds (109.56 k allocations: 4.131 MiB, 95.35% compilation time)
Running: chebyshev_quadrature with k=1
  0.207271 seconds (247.70 k allocations: 13.448 MiB, 97.98% compilation time)
Running: chebyshev_quadrature with k=2
  0.224307 seconds (272.34 k allocations: 14.521 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.168445 seconds (220.25 k allocations: 11.663 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.304602 seconds (220.25 k allocations: 11.661 MiB, 49.05% gc time, 99.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.320559 seconds (388.84 k allocations: 34.971 MiB, 93.37% compilation time)
Running: laguerre_quadrature with k=2
  0.216390 seconds (180.54 k allocations: 10.493 MiB, 81.20% compilation time)
Running: legendre_quadrature
  0.115567 seconds (145.98 k allocations: 8.073 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.021026 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019348 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.059243 seconds (18.88 k allocations: 1.121 MiB, 71.22% compilation time)
Running: rectangle_rule_midpoint
  0.036202 seconds (25.48 k allocations: 1.575 MiB, 66.41% compilation time)
Running: rectangle_rule_right
  0.051926 seconds (17.48 k allocations: 1.049 MiB, 60.25% compilation time)
Running: rombergs_method
  0.218810 seconds (172.62 k allocations: 9.855 MiB, 98.71% compilation time)
Running: simpsons_rule
  0.000515 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.041385 seconds (78.86 k allocations: 3.385 MiB, 97.72% compilation time)
Running: trapezoidal_rule
  0.109086 seconds (2.39 M allocations: 37.684 MiB, 29.78% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000654 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.089841 seconds (2.46 k allocations: 1.691 MiB, 97.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.092075 seconds (2.71 k allocations: 2.355 MiB, 96.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.079535 seconds (2.31 k allocations: 2.028 MiB, 95.94% compilation time)
Running: chebyshev_quadrature with k=4
  0.088038 seconds (2.31 k allocations: 1.469 MiB, 97.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.473985 seconds (365.92 k allocations: 905.051 MiB, 5.73% gc time, 6.30% compilation time)
Running: legendre_quadrature
  0.070005 seconds (1.27 k allocations: 68.203 KiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.000161 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000114 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.614884 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000359 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.686166 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074193 seconds (997 allocations: 56.672 KiB, 99.16% compilation time)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001045 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000157 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.113078 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.115166 seconds (2.79 k allocations: 780.188 KiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=3
  0.103705 seconds (2.39 k allocations: 661.047 KiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.107995 seconds (2.39 k allocations: 491.547 KiB, 99.38% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  3.044822 seconds (372.48 k allocations: 252.908 MiB, 16.72% compilation time)
Running: legendre_quadrature
  0.073456 seconds (1.32 k allocations: 67.859 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000123 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000066 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.203976 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000075 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.235240 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078667 seconds (1.21 k allocations: 64.938 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000015 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000017 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000441 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
