Julia Version 1.4.2-pre.13
Commit 58353fd273 (2020-05-10 17:03 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PoissonRandom ──────────────── v0.4.0
  Installed TreeViews ──────────────────── v0.3.0
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DiffEqOperators ────────────── v4.10.0
  Installed OrderedCollections ─────────── v1.2.0
  Installed ExprTools ──────────────────── v0.1.1
  Installed MLStyle ────────────────────── v0.3.1
  Installed ArrayInterface ─────────────── v2.8.7
  Installed TableTraits ────────────────── v1.0.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed Formatting ─────────────────── v0.4.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed RandomNumbers ──────────────── v1.4.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed Latexify ───────────────────── v0.13.1
  Installed LoggingExtras ──────────────── v0.4.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Mocking ────────────────────── v0.7.1
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Compat ─────────────────────── v3.9.1
  Installed SymbolicUtils ──────────────── v0.3.2
  Installed LazyArrays ─────────────────── v0.16.9
  Installed PrettyPrint ────────────────── v0.1.0
  Installed UnPack ─────────────────────── v1.0.0
  Installed SafeTestsets ───────────────── v0.0.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Parameters ─────────────────── v0.12.1
  Installed Intervals ──────────────────── v1.1.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed NameResolution ─────────────── v0.1.3
  Installed Roots ──────────────────────── v1.0.1
  Installed Combinatorics ──────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed EzXML ──────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.3.1
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed RecipesBase ────────────────── v1.0.1
  Installed BlockBandedMatrices ────────── v0.8.4
  Installed DataStructures ─────────────── v0.17.15
  Installed BlockArrays ────────────────── v0.12.6
  Installed NNlib ──────────────────────── v0.6.6
  Installed FunctionWrappers ───────────── v1.1.1
  Installed DiffEqJump ─────────────────── v6.6.3
  Installed Unitful ────────────────────── v1.2.0
  Installed GeneralizedGenerated ───────── v0.2.3
  Installed ChainRulesCore ─────────────── v0.7.5
  Installed DiffEqBase ─────────────────── v6.32.2
  Installed ModelingToolkit ────────────── v3.3.0
  Installed TimeZones ──────────────────── v1.1.1
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed ZygoteRules ────────────────── v0.2.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed LabelledArrays ─────────────── v1.2.0
  Installed TimerOutputs ───────────────── v0.5.5
  Installed MatrixFactorizations ───────── v0.4.1
  Installed TerminalLoggers ────────────── v0.1.1
  Installed BandedMatrices ─────────────── v0.15.8
  Installed RecursiveFactorization ─────── v0.1.0
  Installed RecursiveArrayTools ────────── v2.3.2
  Installed JuliaVariables ─────────────── v0.2.0
  Installed CanonicalTraits ────────────── v0.2.1
  Installed ProgressLogging ────────────── v0.1.2
  Installed BinaryProvider ─────────────── v0.5.9
  Installed StaticArrays ───────────────── v0.12.3
  Installed IterativeSolvers ───────────── v0.8.4
  Installed FillArrays ─────────────────── v0.8.9
  Installed Requires ───────────────────── v1.0.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed ConstructionBase ───────────── v1.0.0
  Installed Polynomials ────────────────── v0.8.0
  Installed ForwardDiff ────────────────── v0.10.10
   Updating `~/.julia/environments/v1.4/Project.toml`
  [9fdde737] + DiffEqOperators v4.10.0
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [4fba245c] + ArrayInterface v2.8.7
  [4c555306] + ArrayLayouts v0.3.1
  [aae01518] + BandedMatrices v0.15.8
  [b99e7846] + BinaryProvider v0.5.9
  [8e7c35d0] + BlockArrays v0.12.6
  [ffab5731] + BlockBandedMatrices v0.8.4
  [a603d957] + CanonicalTraits v0.2.1
  [d360d2e6] + ChainRulesCore v0.7.5
  [861a8166] + Combinatorics v1.0.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.9.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [864edb3b] + DataStructures v0.17.15
  [2b5f629d] + DiffEqBase v6.32.2
  [c894b116] + DiffEqJump v6.6.3
  [9fdde737] + DiffEqOperators v4.10.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.9
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.10
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.3
  [d8418881] + Intervals v1.1.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.2.0
  [23fbe1c1] + Latexify v0.13.1
  [5078a376] + LazyArrays v0.16.9
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [e6f89c97] + LoggingExtras v0.4.0
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.4.1
  [78c3b35d] + Mocking v0.7.1
  [961ee093] + ModelingToolkit v3.3.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [e409e4f3] + PoissonRandom v0.4.0
  [f27b6e38] + Polynomials v0.8.0
  [8162dcfd] + PrettyPrint v0.1.0
  [33c8b6b6] + ProgressLogging v0.1.2
  [92933f4c] + ProgressMeter v1.2.0
  [e6cf234a] + RandomNumbers v1.4.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.3.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [ae029012] + Requires v1.0.1
  [f2b01f46] + Roots v1.0.1
  [1bc83da4] + SafeTestsets v0.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.3
  [d1185830] + SymbolicUtils v0.3.2
  [3783bdb8] + TableTraits v1.0.0
  [5d786b92] + TerminalLoggers v0.1.1
  [f269a46b] + TimeZones v1.1.1
  [a759f4b9] + TimerOutputs v0.5.5
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.0
  [1986cc42] + Unitful v1.2.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building NNlib ────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/X323b/deps/build.log`
    Testing DiffEqOperators
Status `/tmp/jl_PT1hzE/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.8.7
  [4c555306] ArrayLayouts v0.3.1
  [aae01518] BandedMatrices v0.15.8
  [b99e7846] BinaryProvider v0.5.9
  [8e7c35d0] BlockArrays v0.12.6
  [ffab5731] BlockBandedMatrices v0.8.4
  [a603d957] CanonicalTraits v0.2.1
  [d360d2e6] ChainRulesCore v0.7.5
  [861a8166] Combinatorics v1.0.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.9.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [864edb3b] DataStructures v0.17.15
  [2b5f629d] DiffEqBase v6.32.2
  [c894b116] DiffEqJump v6.6.3
  [9fdde737] DiffEqOperators v4.10.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.9
  [6a86dc24] FiniteDiff v2.3.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.3
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [d8418881] Intervals v1.1.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.2.0
  [23fbe1c1] Latexify v0.13.1
  [5078a376] LazyArrays v0.16.9
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [94ce4f54] Libiconv_jll v1.16.0+2
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [e6f89c97] LoggingExtras v0.4.0
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.4.1
  [78c3b35d] Mocking v0.7.1
  [961ee093] ModelingToolkit v3.3.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.36.1
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [f27b6e38] Polynomials v0.8.0
  [8162dcfd] PrettyPrint v0.1.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.3.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [f2b01f46] Roots v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [7ccca996] SimpleDifferentialOperators v0.6.1
  [699a6c99] SimpleTraits v0.9.2
  [47a9eef4] SparseDiffTools v1.7.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.3
  [d1185830] SymbolicUtils v0.3.2
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [f269a46b] TimeZones v1.1.1
  [a759f4b9] TimerOutputs v0.5.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.0
  [1986cc42] Unitful v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.2
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary:   | Pass  Total
Utilities Tests |    4      4
600.879735 seconds (58.30 M allocations: 3.413 GiB, 0.37% gc time)
Test Summary:   | Pass  Total
Poisson example |    1      1
 13.316413 seconds (13.04 M allocations: 671.232 MiB, 2.98% gc time)
Test Summary:         | Pass  Total
Heat equation example |    1      1
265.377349 seconds (38.07 M allocations: 5.864 GiB, 0.94% gc time)
Test Summary:                      | Pass  Total
Robin Boundary Condition Operators |  124    124
  4.363647 seconds (3.97 M allocations: 199.453 MiB, 3.43% gc time)
Test Summary:              | Pass  Broken  Total
JacVec Operators Interface |   34       4     38
160.527140 seconds (140.43 M allocations: 7.150 GiB, 4.10% gc time)
Test Summary:                 | Pass  Total
Composite Operators Interface |   12     12
  5.894938 seconds (5.29 M allocations: 254.925 MiB, 2.70% gc time)
Test Summary:                   | Pass  Broken  Total
BC and Coefficient Compositions |  103       6    109
 54.552199 seconds (36.53 M allocations: 1.811 GiB, 2.88% gc time)
Test Summary:                  | Pass  Total
Derivative Operators Interface | 1080   1080
 64.117515 seconds (198.91 M allocations: 10.453 GiB, 14.00% gc time)
Test Summary:                        | Pass  Total
Ghost Derivative Operators Interface |    4      4
  0.080358 seconds (41.87 k allocations: 2.306 MiB)
Test Summary:                         | Pass  Total
Validate Regular Derivative Operators |   30     30
 13.389805 seconds (12.99 M allocations: 658.629 MiB, 2.31% gc time)
Test Summary:                          | Pass  Total
Validate and Compare Generic Operators |   72     72
 12.734245 seconds (10.84 M allocations: 711.534 MiB, 3.49% gc time)
Test Summary:                                 |   Pass   Total
Validate Boundary Padded Array Concretization | 117595  117595
 29.505400 seconds (30.26 M allocations: 1.472 GiB, 3.68% gc time)
Test Summary:                                  | Pass  Broken  Total
Validate Higher Dimensional Boundary Extension |  351       3    354
 96.034205 seconds (112.78 M allocations: 5.276 GiB, 4.19% gc time)
Test Summary:         | Pass  Total
Matrix-Free Operators |   34     34
 41.265603 seconds (42.50 M allocations: 2.495 GiB, 4.95% gc time)
Test Summary:                    | Pass  Total
JacVec Operator Integration Test |    2      2
662.761947 seconds (42.06 M allocations: 4.132 GiB, 1.46% gc time)
Test Summary: | Pass  Total
Convolutions  |    6      6
  1.151566 seconds (714.83 k allocations: 37.813 MiB, 15.50% gc time)
Test Summary:             |   Pass   Total
Differentiation Dimension | 476861  476861
 26.068479 seconds (22.18 M allocations: 1.148 GiB, 4.93% gc time)
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:18
  Test threw exception
  Expression: L1 * M ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * M ≈ BandedMatrix(L1, size(M)) * M ≈ BandedBlockBandedMatrix(L1, size(M)) * M
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:18
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:19
  Test threw exception
  Expression: L2 * M ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * M ≈ BandedMatrix(L2, size(M)) * M ≈ BandedBlockBandedMatrix(L2, size(M)) * M
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:19
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:20
  Test threw exception
  Expression: L3 * M ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * M ≈ BandedMatrix(L3, size(M)) * M ≈ BandedBlockBandedMatrix(L3, size(M)) * M
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:20
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:24
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:24
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:25
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:25
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
First Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:26
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23740 more times)
   [47492] setindex! at ./subarray.jl:277 [inlined]
   [47493] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47494] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47495] setindex! at ./abstractarray.jl:1073 [inlined]
   [47496] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47497] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47498] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47499] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47500] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47501] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,1,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47502] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:26
   [47503] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:38
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:38
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:39
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:39
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:40
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:40
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:44
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:44
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:45
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:45
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:46
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:46
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:50
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:50
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:51
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:51
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Second Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:52
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,2,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:52
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:65
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:65
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:66
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:66
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:67
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::Tuple{Int64,Int64,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:67
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:71
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:71
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:72
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:72
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:73
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{4,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:73
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:77
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:77
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:78
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:78
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Third Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:79
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,3,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:79
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:91
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:91
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:92
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:92
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:93
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] getindex at ./tuple.jl:24 [inlined]
   [2] _broadcast_getindex at ./broadcast.jl:582 [inlined]
   [3] _getindex at ./broadcast.jl:627 [inlined]
   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [5] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [6] ntuple at ./ntuple.jl:42 [inlined]
   [7] copy at ./broadcast.jl:1024 [inlined]
   [8] materialize at ./broadcast.jl:820 [inlined]
   [9] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [10] setindex! at ./subarray.jl:277 [inlined]
   [11] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47486] setindex! at ./subarray.jl:277 [inlined]
   [47487] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47488] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47489] setindex! at ./abstractarray.jl:1073 [inlined]
   [47490] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47491] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47492] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47493] BandedBlockBandedMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178 [inlined]
   [47494] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47495] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{5,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47496] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:93
   [47497] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:97
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{6,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:97
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:98
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{6,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:98
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:99
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] Broadcasted at ./broadcast.jl:170 [inlined]
   [2] Broadcasted at ./broadcast.jl:179 [inlined] (repeats 2 times)
   [3] broadcasted at ./broadcast.jl:1240 [inlined]
   [4] broadcasted at ./broadcast.jl:1238 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{6,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:99
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:103
  Test threw exception
  Expression: vec(L1 * M) ≈ Array(L1, size(M)) * vec(M) ≈ sparse(L1, size(M)) * vec(M) ≈ BandedMatrix(L1, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L1, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{7,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:103
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:104
  Test threw exception
  Expression: vec(L2 * M) ≈ Array(L2, size(M)) * vec(M) ≈ sparse(L2, size(M)) * vec(M) ≈ BandedMatrix(L2, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L2, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{3},Float64,1,3},StaticArrays.SArray{Tuple{0},StaticArrays.SArray{Tuple{3},Float64,1,3},1,0},Nothing,Nothing}, ::NTuple{7,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:104
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Fifth Dimension: Error During Test at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:105
  Test threw exception
  Expression: vec(L3 * M) ≈ Array(L3, size(M)) * vec(M) ≈ sparse(L3, size(M)) * vec(M) ≈ BandedMatrix(L3, size(M)) * vec(M) ≈ BandedBlockBandedMatrix(L3, size(M)) * vec(M)
  StackOverflowError:
  Stacktrace:
   [1] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(BlockArrays.findblockindex),Tuple{Tuple{Base.OneTo{Int64},BlockArrays.BlockedUnitRange{Array{Int64,1}}},Tuple{Int64,Int64}}}})(::Int64) at ./broadcast.jl:1024
   [2] ntuple at ./ntuple.jl:42 [inlined]
   [3] copy at ./broadcast.jl:1024 [inlined]
   [4] materialize at ./broadcast.jl:820 [inlined]
   [5] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:310
   [6] setindex! at ./subarray.jl:277 [inlined]
   [7] setindex!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::Float64, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313
   ... (the last 2 lines are repeated 23737 more times)
   [47482] setindex! at ./subarray.jl:277 [inlined]
   [47483] setindex! at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:313 [inlined]
   [47484] _setindex! at ./abstractarray.jl:1108 [inlined]
   [47485] setindex! at ./abstractarray.jl:1073 [inlined]
   [47486] _kron!(::BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BlockArrays.PseudoBlockArray{Float64,2,Array{Float64,2},Tuple{BlockArrays.BlockedUnitRange{Array{Int64,1}},BlockArrays.BlockedUnitRange{Array{Int64,1}}}},Base.OneTo{Int64}}, ::LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}, ::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:93
   [47487] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyoperations.jl:104 [inlined]
   [47488] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/S2dXf/src/ArrayLayouts.jl:132 [inlined]
   [47489] BlockBandedMatrices.BandedBlockBandedMatrix{Float64,BLOCKS,RAXIS} where RAXIS<:AbstractUnitRange{Int64} where BLOCKS(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:178
   [47490] BlockBandedMatrices.BandedBlockBandedMatrix(::LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}},LazyArrays.ApplyArray{Float64,2,typeof(kron),Tuple{BandedMatrices.BandedMatrix{Float64,Array{Float64,2},Base.OneTo{Int64}},LinearAlgebra.Diagonal{Float64,FillArrays.Ones{Float64,1,Tuple{Base.OneTo{Int64}}}}}}}}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/c1GDa/src/BandedBlockBandedMatrix.jl:181
   [47491] BlockBandedMatrices.BandedBlockBandedMatrix(::DiffEqOperators.DerivativeOperator{Float64,5,false,Float64,StaticArrays.SArray{Tuple{5},Float64,1,5},StaticArrays.SArray{Tuple{1},StaticArrays.SArray{Tuple{6},Float64,1,6},1,1},Nothing,Nothing}, ::NTuple{7,Int64}) at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/src/derivative_operators/concretization.jl:293
   [47492] top-level scope at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/concretization.jl:105
   [47493] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
  
Test Summary:                     | Error  Total
Higher Dimensional Concretization |    33     33
  First Dimension                 |     6      6
  Second Dimension                |     9      9
  Third Dimension                 |     9      9
  Fifth Dimension                 |     9      9
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 33 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqOperators/QiB3a/test/runtests.jl:9
ERROR: Package DiffEqOperators errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1510
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [11] top-level scope at none:16
