Julia Version 1.4.2-pre.13
Commit 58353fd273 (2020-05-10 17:03 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed Reexport ──────────────────── v0.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.3
  Installed Tables ────────────────────── v1.0.4
  Installed OrderedCollections ────────── v1.2.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Compat ────────────────────── v3.9.1
  Installed DataAPI ───────────────────── v1.3.0
  Installed Missings ──────────────────── v0.4.3
  Installed PooledArrays ──────────────── v0.5.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataStructures ────────────── v0.17.15
  Installed CategoricalArrays ─────────── v0.7.7
  Installed InvertedIndices ───────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed DataFrames ────────────────── v0.20.2
  Installed SimilaritySearch ──────────── v0.3.19
   Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.2.2
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.1
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_JIZcXp/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.1
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8321307849884033
[ Info: 0.5546774150431156
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32560089223086836
mean(cdnet.distances) = 0.39533579466243585
mean(crand.distances) = 0.399577233021458
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":5.6484375,"distances_sum":549.4453712727193}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8011795496170504,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":7.7265625,"distances_sum":1895.0019269035822}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.863970231157732,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.09375,"distances_sum":2270.030179210294}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.863970231157732,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.09375,"distances_sum":2270.030179210294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8671479562104569,"seconds":9.681843221187592e-5,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.1171875,"distances_sum":2311.7502183383667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.896689248251749,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.4296875,"distances_sum":2511.517014397233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485347985347992,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.7421875,"distances_sum":2925.927506940936}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9454014735264741,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.6953125,"distances_sum":2913.9161125368487}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9485347985347992,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.7421875,"distances_sum":2925.927506940936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562042124542132,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.8203125,"distances_sum":2980.1043891785484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630608974358978,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.8671875,"distances_sum":3005.159134661322}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765625000000004,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.921875,"distances_sum":3128.393925267033}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596382783882789,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.8125,"distances_sum":3013.492699816061}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954578754578755,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.84375,"distances_sum":2947.5883725925282}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765625000000004,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.921875,"distances_sum":3128.393925267033}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765625000000004,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.0225921869277954e-6,"evaluations":8.921875,"distances_sum":3128.393925267033}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.162109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.162109375,"f1":null,"seconds":2.8815120458602905e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.7109375,"distances_sum":455.154028731136}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7611504814629821,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.21875,"distances_sum":1756.9472044291774}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.63671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.63671875,"f1":0.7611504814629821,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.21875,"distances_sum":1756.9472044291774}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9113641566766575,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.484375,"distances_sum":2590.21985990878}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9400068681318686,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2803.246285690548}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9400068681318686,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2803.246285690548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712053571428577,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2989.41996237058}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743131868131872,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":3007.2855448728515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9651072885447889,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2951.2235528725237}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9441849816849818,"seconds":1.014024019241333e-5,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":2830.2909672796222}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743131868131872,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":3007.2855448728515}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743131868131872,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":3007.2855448728515}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8840664543789553,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2578125,"distances_sum":2360.1072444601523}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8840664543789553,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2578125,"distances_sum":2360.1072444601523}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9313358516483522,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2792.007934166305}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9313358516483522,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2792.007934166305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603079212454217,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2938.96231479923}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.973122710622711,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":3056.4151109728864}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934072,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":2921.7396061176655}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9334025349650356,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.640625,"distances_sum":2805.148821932491}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.973122710622711,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":3056.4151109728864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.973122710622711,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":3056.4151109728864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6978913447663454,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.890625,"distances_sum":1439.5377622942713}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.084540367126465e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.265625,"distances_sum":455.5071245234884}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6978913447663454,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.890625,"distances_sum":1439.5377622942713}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8413014069264078,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7890625,"distances_sum":2053.605661032042}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8587100399600408,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.859375,"distances_sum":2133.6751792967216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8446954087579097,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.84375,"distances_sum":2040.9523977881759}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8587100399600408,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.859375,"distances_sum":2133.6751792967216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9573889652014657,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2879.382194540689}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9491643772893779,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":2815.9996661059795}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8669674075924086,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0390625,"distances_sum":2180.5207861219174}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573889652014657,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2879.382194540689}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9573889652014657,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2879.382194540689}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1640625,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":5.453125,"distances_sum":384.8131696897334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8056391525141532,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.4609375,"distances_sum":1922.4214757402372}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8056391525141532,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.4609375,"distances_sum":1922.4214757402372}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8801687895437901,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":7.953125,"distances_sum":2333.5372207482633}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9443369130869136,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.640625,"distances_sum":2875.2780653260006}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9443369130869136,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.640625,"distances_sum":2875.2780653260006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.890625,"distances_sum":3097.3205574399785}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.890625,"distances_sum":3097.3205574399785}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765453296703299,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.6391277313232422e-6,"evaluations":8.890625,"distances_sum":3097.3205574399785}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8840461621711627,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.515625,"distances_sum":1999.0323209058254}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":6.34375,"distances_sum":526.9314428556161}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8840461621711627,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.515625,"distances_sum":1999.0323209058254}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9236924533799541,"seconds":7.120892405509949e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.625,"distances_sum":2308.04419054079}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.964817994505495,"seconds":7.808208465576172e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.9140625,"distances_sum":2631.738596270874}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.964817994505495,"seconds":7.808208465576172e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.9140625,"distances_sum":2631.738596270874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.964817994505495,"seconds":7.808208465576172e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.9140625,"distances_sum":2631.738596270874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.964817994505495,"seconds":7.808208465576172e-6,"exhaustive_search_seconds":1.912936568260193e-6,"evaluations":8.9140625,"distances_sum":2631.738596270874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3447265625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3447265625,"f1":null,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.7421875,"distances_sum":767.893667142503}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1357421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1357421875,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":4.6796875,"distances_sum":280.694105045613}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7599986818736827,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.5234375,"distances_sum":1427.926229524988}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.634765625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.634765625,"f1":0.7599986818736827,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.5234375,"distances_sum":1427.926229524988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8970446220446229,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":2023.0734562420505}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8819524225774233,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1640625,"distances_sum":1916.7970235898151}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8537746975246983,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.046875,"distances_sum":1779.5848817869046}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.8970446220446229,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":2023.0734562420505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608287545787549,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7734375,"distances_sum":2408.0780696324887}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510874542124548,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.75,"distances_sum":2330.6271715300113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528934607059614,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6953125,"distances_sum":2393.2085460374055}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9608287545787549,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7734375,"distances_sum":2408.0780696324887}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9608287545787549,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7734375,"distances_sum":2408.0780696324887}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8691116175491183,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.2109375,"distances_sum":1792.9861807759755}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8691116175491183,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.2109375,"distances_sum":1792.9861807759755}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9227251914751918,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.453125,"distances_sum":2081.18313218675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625057234432242,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.84375,"distances_sum":2407.1483848068124}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625057234432242,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.84375,"distances_sum":2407.1483848068124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654418498168503,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.921875,"distances_sum":2394.415616676546}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9781250000000001,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9140625,"distances_sum":2506.85586156725}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9663919413919418,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.8828125,"distances_sum":2403.752008911956}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781250000000001,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9140625,"distances_sum":2506.85586156725}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781250000000001,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9140625,"distances_sum":2506.85586156725}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8774251789876797,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6640625,"distances_sum":1890.2673810080623}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.2763928174972534e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.8984375,"distances_sum":359.49426564330844}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8774251789876797,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6640625,"distances_sum":1890.2673810080623}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9337168040293047,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6484375,"distances_sum":2239.7069733542835}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9418472152847164,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7109375,"distances_sum":2284.9062793235316}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9418472152847164,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7109375,"distances_sum":2284.9062793235316}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946005036630037,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2320.360697848406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560096153846158,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.84375,"distances_sum":2399.0973040872386}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":7.016584277153015e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2495.2654349551917}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638965201465206,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2453.0083065646345}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":7.016584277153015e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2495.2654349551917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":7.016584277153015e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2495.2654349551917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.799509865134866,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.6953125,"distances_sum":1575.370323732796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8599796037296042,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.0234375,"distances_sum":1880.4885241424772}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1533203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1533203125,"f1":null,"seconds":3.2186508178710938e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":4.984375,"distances_sum":321.24056143972524}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8599796037296042,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.0234375,"distances_sum":1880.4885241424772}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9425683691308698,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.65625,"distances_sum":2457.491089096887}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452838827838833,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.671875,"distances_sum":2458.793852008401}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9349587912087917,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.578125,"distances_sum":2431.602228048207}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8651338245088253,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.9921875,"distances_sum":1886.46937873446}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452838827838833,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.671875,"distances_sum":2458.793852008401}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.875,"distances_sum":2633.4629576257607}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8671875,"distances_sum":2603.383843760024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9690476190476196,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8671875,"distances_sum":2588.7958923423244}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665750915750919,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.796875,"distances_sum":2600.9067205754}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706330128205132,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8515625,"distances_sum":2619.6170051796807}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579269688644692,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7890625,"distances_sum":2500.3965806429537}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.875,"distances_sum":2633.4629576257607}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941394,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.875,"distances_sum":2633.4629576257607}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8758444680319689,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.21875,"distances_sum":1883.0110904986464}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8758444680319689,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.21875,"distances_sum":1883.0110904986464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8758444680319689,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.21875,"distances_sum":1883.0110904986464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8758444680319689,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.21875,"distances_sum":1883.0110904986464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8804325882450891,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.359375,"distances_sum":1966.9350279440293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8682609057609064,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3828125,"distances_sum":1878.5531655608233}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7034025002775007,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.359375,"distances_sum":1196.0009670149984}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7949633699633707,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.984375,"distances_sum":1541.9885965506448}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.8804325882450891,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.359375,"distances_sum":1966.9350279440293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955637591575092,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8828125,"distances_sum":2463.549343214357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9450606684981689,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.703125,"distances_sum":2399.001719396012}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9209108599733604,"seconds":6.515532732009888e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.609375,"distances_sum":2214.474055981418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670336,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.859375,"distances_sum":2508.383909382617}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003668,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8125,"distances_sum":2525.9336233153153}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9182609057609065,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.578125,"distances_sum":2215.2000324207183}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9078671328671336,"seconds":6.994232535362244e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.515625,"distances_sum":2137.405800854654}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670336,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.859375,"distances_sum":2508.383909382617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9846726190476192,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2674.937161327824}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238097,"seconds":7.76723027229309e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2627.5903578640455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654246794871797,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2526.7263403702264}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976247710622711,"seconds":6.861984729766846e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2602.990773954816}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9846726190476192,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2674.937161327824}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9846726190476192,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2674.937161327824}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6947160478410483,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.890625,"distances_sum":1250.7799833051208}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8474395396270404,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.96875,"distances_sum":1870.0656788274246}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8474395396270404,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.96875,"distances_sum":1870.0656788274246}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9210539460539464,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.4296875,"distances_sum":2325.1430272316}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384621,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2523.3425445059574}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9064019314019321,"seconds":8.588656783103943e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.265625,"distances_sum":2190.7063156741915}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384621,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2523.3425445059574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9604739010989014,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8125,"distances_sum":2579.6819884638626}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668555402930407,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2618.399160635724}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9686412545787548,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2637.713358306691}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606456043956045,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7421875,"distances_sum":2621.9507325463132}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686412545787548,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2637.713358306691}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686412545787548,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8515625,"distances_sum":2637.713358306691}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6772121975246981,"seconds":4.328787326812744e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":6.8671875,"distances_sum":1121.2867619053088}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5341796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5341796875,"f1":0.6772121975246981,"seconds":4.328787326812744e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":6.8671875,"distances_sum":1121.2867619053088}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9131066849816859,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.3671875,"distances_sum":1966.703979313255}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9131066849816859,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.3671875,"distances_sum":1966.703979313255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.942359203296704,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.625,"distances_sum":2163.797102590545}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.875,"distances_sum":2364.082397933094}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.875,"distances_sum":2364.082397933094}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.875,"distances_sum":2364.082397933094}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.392578125,"f1":0.5422896547896546,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.7578125,"distances_sum":855.8214359775234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.3984375,"distances_sum":569.5371476979924}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.392578125,"state":{"ssize":4,"bsize":2},"perf":{"precision":1.0,"recall":0.392578125,"f1":0.5422896547896546,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.7578125,"distances_sum":855.8214359775234}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8765312812187821,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5390625,"distances_sum":1894.933086627421}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.906659486346987,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.515625,"distances_sum":2063.5944710392732}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9011623792873799,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5390625,"distances_sum":2060.8255969635215}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.859375,"distances_sum":933.5511435951379}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.906659486346987,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.515625,"distances_sum":2063.5944710392732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580414377289383,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8203125,"distances_sum":2439.9105057792103}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333224067599074,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8359375,"distances_sum":2236.4617396439194}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605540293040296,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8359375,"distances_sum":2457.023138218713}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498626373626381,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":2377.190124718069}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605540293040296,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8359375,"distances_sum":2457.023138218713}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605540293040296,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8359375,"distances_sum":2457.023138218713}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5400390625,"f1":null,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.1171875,"distances_sum":1153.7435661040313}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.5400390625,"f1":null,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.1171875,"distances_sum":1153.7435661040313}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8513398060273071,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4296875,"distances_sum":1706.970024817278}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.928388278388279,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7421875,"distances_sum":2177.890598359751}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.928388278388279,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7421875,"distances_sum":2177.890598359751}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9312385531135536,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2140.3103841791262}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2330.8600469244648}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9334826631701637,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6953125,"distances_sum":2234.4237102336633}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2330.8600469244648}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2330.8600469244648}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7284616425241432,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.3359375,"distances_sum":1250.7030161220564}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7284616425241432,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.3359375,"distances_sum":1250.7030161220564}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8741503288378298,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.5625,"distances_sum":1898.752181725127}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9058868215118226,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.7109375,"distances_sum":2096.246894397451}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9254063644688649,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.75,"distances_sum":2237.5319069504667}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9254063644688649,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.75,"distances_sum":2237.5319069504667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970798992673993,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.984375,"distances_sum":2512.936501773508}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.964251373626374,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9375,"distances_sum":2485.3192276024774}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9278674450549458,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.859375,"distances_sum":2233.487749704686}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9320804195804203,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.828125,"distances_sum":2255.6581217577623}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970798992673993,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.984375,"distances_sum":2512.936501773508}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970798992673993,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.984375,"distances_sum":2512.936501773508}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.236328125,"f1":null,"seconds":3.1944364309310913e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.5234375,"distances_sum":553.4347901372302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8500780469530478,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3515625,"distances_sum":1731.4619187147644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8500780469530478,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3515625,"distances_sum":1731.4619187147644}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454215,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2447.4236912120978}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9309440559440563,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2167.023195417399}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8547306859806868,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4140625,"distances_sum":1754.6620923414775}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454215,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2447.4236912120978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712625915750921,"seconds":6.631016731262207e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":2495.7396677406628}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9704097985347988,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9296875,"distances_sum":2502.8075930788973}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742559523809526,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2482.352893342208}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742559523809526,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2482.352893342208}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742559523809526,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9921875,"distances_sum":2482.352893342208}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8446438977688985,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.9296875,"distances_sum":1784.0826713703475}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8446438977688985,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.9296875,"distances_sum":1784.0826713703475}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9168727106227114,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.46875,"distances_sum":2147.38407345411}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9168727106227114,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.46875,"distances_sum":2147.38407345411}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9621336996337002,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2472.0950481358195}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9441907051282057,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6640625,"distances_sum":2386.0072369260197}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432036713286719,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.6484375,"distances_sum":2359.7682078500425}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9621336996337002,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2472.0950481358195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9621336996337002,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8125,"distances_sum":2472.0950481358195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.984197974205017e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.3984375,"distances_sum":777.3024335784705}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.953125,"distances_sum":1106.0409807343517}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.55078125,"f1":null,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.953125,"distances_sum":1106.0409807343517}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6279296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6279296875,"f1":0.7603583916083924,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.734375,"distances_sum":1294.5787177114485}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9373454670329674,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2055.2563273884966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8346908300033309,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4140625,"distances_sum":1566.237748918983}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9123288170163179,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.703125,"distances_sum":1880.5403972132651}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9373454670329674,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2055.2563273884966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640338827838832,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.953125,"distances_sum":2233.729756087629}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965722298534799,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2249.623180457537}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.951588515651016,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.90625,"distances_sum":2177.7133153674863}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429029304029308,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2094.7315235192304}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.965722298534799,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2249.623180457537}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.965722298534799,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2249.623180457537}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8644553363303372,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2734375,"distances_sum":1824.5334889458434}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8532571595071603,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.296875,"distances_sum":1748.0176141964005}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8644553363303372,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2734375,"distances_sum":1824.5334889458434}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8644553363303372,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2734375,"distances_sum":1824.5334889458434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8644553363303372,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2734375,"distances_sum":1824.5334889458434}}, n: 9
mean(cfft.distances) = 0.32560089137343323
mean(cdnet.distances) = 0.3926443904161298
mean(crand.distances) = 0.34207701173726607
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9466666666666667
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9577777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9133333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8666666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8377777777777777
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8555555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.851111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.9333333333333333
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 1, 3, 3, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5332958342631658] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 8, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 11: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 14 centroids; started with 12
acc = 0.94
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3816084175037819] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3816084175037819, 0.31101218656309554] ***
*** starting iteration: 2; err: [Inf, 0.3816084175037819, 0.31101218656309554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457] ***
*** starting iteration: 3; err: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306] ***
*** starting iteration: 4; err: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306, 0.29625685070990937] ***
*** starting iteration: 5; err: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306, 0.29625685070990937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306, 0.29625685070990937, 0.29529769337448003] ***
*** finished computation of 3 references, err: [Inf, 0.3816084175037819, 0.31101218656309554, 0.3006891326240457, 0.29808171886626306, 0.29625685070990937, 0.29529769337448003] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 164, 31]]
** centroid: 1, normalized-entropy: 0.6318502400093088, [(2, 164), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [246, 11, 0]]
** centroid: 2, normalized-entropy: 0.2549929689663945, [(1, 246), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [173, 41, 0]]
** centroid: 3, normalized-entropy: 0.7047832687820124, [(1, 173), (2, 41)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33140844870470576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33140844870470576, 0.23784065257209736] ***
*** starting iteration: 2; err: [Inf, 0.33140844870470576, 0.23784065257209736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33140844870470576, 0.23784065257209736, 0.23444938259171294] ***
*** starting iteration: 3; err: [Inf, 0.33140844870470576, 0.23784065257209736, 0.23444938259171294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33140844870470576, 0.23784065257209736, 0.23444938259171294, 0.2339055100316042] ***
*** finished computation of 3 references, err: [Inf, 0.33140844870470576, 0.23784065257209736, 0.23444938259171294, 0.2339055100316042] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [69, 182, 31]]
** centroid: 1, normalized-entropy: 0.791719703773114, [(1, 69), (2, 182), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 34, 0]]
** centroid: 3, normalized-entropy: 0.7013545780761166, [(1, 145), (2, 34)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4224562933179794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4224562933179794, 0.24267475888121878] ***
*** starting iteration: 2; err: [Inf, 0.4224562933179794, 0.24267475888121878] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4224562933179794, 0.24267475888121878, 0.24211177921601232] ***
*** finished computation of 3 references, err: [Inf, 0.4224562933179794, 0.24267475888121878, 0.24211177921601232] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [97, 103, 27]]
** centroid: 1, normalized-entropy: 0.8875915439133889, [(1, 97), (2, 103), (3, 27)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [92, 118, 5]]
** centroid: 2, normalized-entropy: 0.7099639538688396, [(1, 92), (2, 118), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [225, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3627019073057367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3627019073057367, 0.24289665070419636] ***
*** starting iteration: 2; err: [Inf, 0.3627019073057367, 0.24289665070419636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3627019073057367, 0.24289665070419636, 0.23970241965851682] ***
*** starting iteration: 3; err: [Inf, 0.3627019073057367, 0.24289665070419636, 0.23970241965851682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3627019073057367, 0.24289665070419636, 0.23970241965851682, 0.2388667813160162] ***
*** finished computation of 3 references, err: [Inf, 0.3627019073057367, 0.24289665070419636, 0.23970241965851682, 0.2388667813160162] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [61, 174, 25]]
** centroid: 1, normalized-entropy: 0.7592319416236099, [(1, 61), (2, 174), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [217, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [139, 51, 0]]
** centroid: 3, normalized-entropy: 0.8391898107040331, [(1, 139), (2, 51)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38445401667007084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38445401667007084, 0.3073352473778189] ***
*** starting iteration: 2; err: [Inf, 0.38445401667007084, 0.3073352473778189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38445401667007084, 0.3073352473778189, 0.3041083755856869] ***
*** starting iteration: 3; err: [Inf, 0.38445401667007084, 0.3073352473778189, 0.3041083755856869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38445401667007084, 0.3073352473778189, 0.3041083755856869, 0.3036611432927302] ***
*** finished computation of 3 references, err: [Inf, 0.38445401667007084, 0.3073352473778189, 0.3041083755856869, 0.3036611432927302] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [129, 85, 0]]
** centroid: 1, normalized-entropy: 0.9692868671427152, [(1, 129), (2, 85)]
*** center 2: selecting labels [1] (freq >= 1) [from [224, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [61, 136, 32]]
** centroid: 3, normalized-entropy: 0.8527408048810605, [(1, 61), (2, 136), (3, 32)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49642365065304145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833] ***
*** starting iteration: 2; err: [Inf, 0.49642365065304145, 0.3377508159134833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076] ***
*** starting iteration: 3; err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945] ***
*** starting iteration: 4; err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975] ***
*** starting iteration: 5; err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554] ***
*** starting iteration: 6; err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554, 0.2933069621205799] ***
*** starting iteration: 7; err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554, 0.2933069621205799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554, 0.2933069621205799, 0.292541881586876] ***
*** finished computation of 3 references, err: [Inf, 0.49642365065304145, 0.3377508159134833, 0.3030532177990076, 0.29680420317291945, 0.29572318643163975, 0.2946186840179554, 0.2933069621205799, 0.292541881586876] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 28, 0]]
** centroid: 1, normalized-entropy: 0.48791799258948565, [(1, 236), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [181, 41, 0]]
** centroid: 2, normalized-entropy: 0.6902188494519005, [(1, 181), (2, 41)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 156, 25]]
** centroid: 3, normalized-entropy: 0.5792980921280737, [(2, 156), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6184867605785126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493] ***
*** starting iteration: 2; err: [Inf, 0.6184867605785126, 0.3624742388887493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563] ***
*** starting iteration: 3; err: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982] ***
*** starting iteration: 4; err: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244] ***
*** starting iteration: 5; err: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244, 0.29125810763868576] ***
*** starting iteration: 6; err: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244, 0.29125810763868576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244, 0.29125810763868576, 0.29087103097126243] ***
*** finished computation of 3 references, err: [Inf, 0.6184867605785126, 0.3624742388887493, 0.31071976483757563, 0.2970897325659982, 0.29290736522791244, 0.29125810763868576, 0.29087103097126243] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [252, 5, 0]]
** centroid: 1, normalized-entropy: 0.13837092586152097, [(1, 252), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [2, 190, 31]]
** centroid: 2, normalized-entropy: 0.41236218129544255, [(1, 2), (2, 190), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [165, 21, 0]]
** centroid: 3, normalized-entropy: 0.5086113313826895, [(1, 165), (2, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.6367606523794413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217] ***
*** starting iteration: 2; err: [Inf, 0.6367606523794413, 0.3497883831381217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293] ***
*** starting iteration: 3; err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733] ***
*** starting iteration: 4; err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777] ***
*** starting iteration: 5; err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544] ***
*** starting iteration: 6; err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544, 0.294587337601835] ***
*** starting iteration: 7; err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544, 0.294587337601835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544, 0.294587337601835, 0.29403879759781554] ***
*** finished computation of 3 references, err: [Inf, 0.6367606523794413, 0.3497883831381217, 0.31325340034465293, 0.30262997409962733, 0.29822738440162777, 0.29601215290930544, 0.294587337601835, 0.29403879759781554] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [177, 52, 0]]
** centroid: 1, normalized-entropy: 0.7728760688479162, [(1, 177), (2, 52)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 143, 32]]
** centroid: 2, normalized-entropy: 0.6862876766362733, [(2, 143), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [237, 26, 0]]
** centroid: 3, normalized-entropy: 0.4653692453358165, [(1, 237), (2, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4105893739832864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4105893739832864, 0.31274085433530935] ***
*** starting iteration: 2; err: [Inf, 0.4105893739832864, 0.31274085433530935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162] ***
*** starting iteration: 3; err: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374] ***
*** starting iteration: 4; err: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374, 0.293355799754146] ***
*** starting iteration: 5; err: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374, 0.293355799754146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374, 0.293355799754146, 0.29252522921460544] ***
*** finished computation of 3 references, err: [Inf, 0.4105893739832864, 0.31274085433530935, 0.2976757860121162, 0.29480265748353374, 0.293355799754146, 0.29252522921460544] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 29, 0]]
** centroid: 1, normalized-entropy: 0.4982062531936025, [(1, 236), (2, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 156, 25]]
** centroid: 2, normalized-entropy: 0.5792980921280737, [(2, 156), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [181, 40, 0]]
** centroid: 3, normalized-entropy: 0.682249937864035, [(1, 181), (2, 40)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2213366381983432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068] ***
*** starting iteration: 2; err: [Inf, 0.2213366381983432, 0.18041433882480068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439] ***
*** starting iteration: 3; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834] ***
*** starting iteration: 4; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951] ***
*** starting iteration: 5; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793] ***
*** starting iteration: 6; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186] ***
*** starting iteration: 7; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305] ***
*** starting iteration: 8; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305, 0.14978060546833127] ***
*** starting iteration: 9; err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305, 0.14978060546833127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305, 0.14978060546833127, 0.14915641654889705] ***
*** finished computation of 7 references, err: [Inf, 0.2213366381983432, 0.18041433882480068, 0.1663984601863439, 0.16001787951618834, 0.1563747841322951, 0.15396532754664793, 0.15222011298478186, 0.15081541299856305, 0.14978060546833127, 0.14915641654889705] ***
*** center 1: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [19, 76, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 19), (2, 76)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 23, 0]]
** centroid: 3, normalized-entropy: 0.7861044688447759, [(1, 75), (2, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 17, 0]]
** centroid: 5, normalized-entropy: 0.6947570868163001, [(1, 74), (2, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 100, 31]]
** centroid: 7, normalized-entropy: 0.7894099893277894, [(2, 100), (3, 31)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20942566515193664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694] ***
*** starting iteration: 2; err: [Inf, 0.20942566515193664, 0.16450121168834694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136] ***
*** starting iteration: 3; err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863] ***
*** starting iteration: 4; err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793] ***
*** starting iteration: 5; err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566] ***
*** starting iteration: 6; err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566, 0.14617243889339457] ***
*** starting iteration: 7; err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566, 0.14617243889339457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566, 0.14617243889339457, 0.14533770718853334] ***
*** finished computation of 7 references, err: [Inf, 0.20942566515193664, 0.16450121168834694, 0.15541986918504136, 0.15094089015324863, 0.14868462492880793, 0.14726211996176566, 0.14617243889339457, 0.14533770718853334] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 56, 0]]
** centroid: 3, normalized-entropy: 0.9981341775041118, [(1, 62), (2, 56)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 31]]
** centroid: 4, normalized-entropy: 0.9003418708227195, [(2, 67), (3, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [91, 9, 0]]
** centroid: 5, normalized-entropy: 0.4364698170641031, [(1, 91), (2, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 1]]
** centroid: 6, normalized-entropy: 0.14609425012013613, [(2, 47), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 42, 0]]
** centroid: 7, normalized-entropy: 0.9774178175281716, [(1, 60), (2, 42)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23781665127565232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23781665127565232, 0.1627994663901683] ***
*** starting iteration: 2; err: [Inf, 0.23781665127565232, 0.1627994663901683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024] ***
*** starting iteration: 3; err: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024, 0.15451672778924233] ***
*** starting iteration: 4; err: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024, 0.15451672778924233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024, 0.15451672778924233, 0.1535384427501947] ***
*** finished computation of 7 references, err: [Inf, 0.23781665127565232, 0.1627994663901683, 0.15615121308837024, 0.15451672778924233, 0.1535384427501947] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 101, 25]]
** centroid: 1, normalized-entropy: 0.7187421099896039, [(2, 101), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [132, 29, 0]]
** centroid: 2, normalized-entropy: 0.6803487252325335, [(1, 132), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 9, 0]]
** centroid: 3, normalized-entropy: 0.6429383500409613, [(1, 46), (2, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 76, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 9, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 81), (2, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 1, 0]]
** centroid: 7, normalized-entropy: 0.11759466565886466, [(1, 62), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2662143109487957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2662143109487957, 0.2111314162723832] ***
*** starting iteration: 2; err: [Inf, 0.2662143109487957, 0.2111314162723832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2662143109487957, 0.2111314162723832, 0.19937433290935763] ***
*** starting iteration: 3; err: [Inf, 0.2662143109487957, 0.2111314162723832, 0.19937433290935763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2662143109487957, 0.2111314162723832, 0.19937433290935763, 0.19473919466658085] ***
*** finished computation of 7 references, err: [Inf, 0.2662143109487957, 0.2111314162723832, 0.19937433290935763, 0.19473919466658085] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 3, 0]]
** centroid: 1, normalized-entropy: 0.30540057087920036, [(1, 52), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 91, 0]]
** centroid: 2, normalized-entropy: 0.14981136747274781, [(1, 2), (2, 91)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 83, 31]]
** centroid: 3, normalized-entropy: 0.8442202034297602, [(2, 83), (3, 31)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [126, 9, 0]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(1, 126), (2, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [60, 30, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 7: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596261522710335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596261522710335, 0.2083356134974673] ***
*** starting iteration: 2; err: [Inf, 0.2596261522710335, 0.2083356134974673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596261522710335, 0.2083356134974673, 0.19860774994725877] ***
*** starting iteration: 3; err: [Inf, 0.2596261522710335, 0.2083356134974673, 0.19860774994725877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596261522710335, 0.2083356134974673, 0.19860774994725877, 0.19351171902094644] ***
*** finished computation of 7 references, err: [Inf, 0.2596261522710335, 0.2083356134974673, 0.19860774994725877, 0.19351171902094644] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 110, 32]]
** centroid: 1, normalized-entropy: 0.7698205808588191, [(2, 110), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 26, 0]]
** centroid: 3, normalized-entropy: 0.9517626756348312, [(1, 44), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [108, 51, 0]]
** centroid: 4, normalized-entropy: 0.9052002969560479, [(1, 108), (2, 51)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 34, 0]]
** centroid: 5, normalized-entropy: 0.9564574047992596, [(1, 56), (2, 34)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26948744635973154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26948744635973154, 0.22481886641648802] ***
*** starting iteration: 2; err: [Inf, 0.26948744635973154, 0.22481886641648802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26948744635973154, 0.22481886641648802, 0.21029793167126545] ***
*** starting iteration: 3; err: [Inf, 0.26948744635973154, 0.22481886641648802, 0.21029793167126545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26948744635973154, 0.22481886641648802, 0.21029793167126545, 0.20112636650324628] ***
*** finished computation of 7 references, err: [Inf, 0.26948744635973154, 0.22481886641648802, 0.21029793167126545, 0.20112636650324628] ***
*** center 1: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 80, 0]]
** centroid: 2, normalized-entropy: 0.9337044887280268, [(1, 43), (2, 80)]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 19, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 76), (2, 19)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 25]]
** centroid: 6, normalized-entropy: 0.9227346209530939, [(2, 49), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [61, 11, 0]]
** centroid: 7, normalized-entropy: 0.6167482598263911, [(1, 61), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.367194266195546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.367194266195546, 0.3033642625371861] ***
*** starting iteration: 2; err: [Inf, 0.367194266195546, 0.3033642625371861] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.367194266195546, 0.3033642625371861, 0.2919503268687888] ***
*** starting iteration: 3; err: [Inf, 0.367194266195546, 0.3033642625371861, 0.2919503268687888] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.367194266195546, 0.3033642625371861, 0.2919503268687888, 0.2904558908788616] ***
*** finished computation of 3 references, err: [Inf, 0.367194266195546, 0.3033642625371861, 0.2919503268687888, 0.2904558908788616] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [9, 191, 31]]
** centroid: 1, normalized-entropy: 0.5035303194854855, [(1, 9), (2, 191), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [170, 22, 0]]
** centroid: 2, normalized-entropy: 0.5135877363803757, [(1, 170), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [240, 3, 0]]
** centroid: 3, normalized-entropy: 0.09597040299587173, [(1, 240), (2, 3)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3951074745578655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3951074745578655, 0.3012750019756393] ***
*** starting iteration: 2; err: [Inf, 0.3951074745578655, 0.3012750019756393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3951074745578655, 0.3012750019756393, 0.29802637929278336] ***
*** starting iteration: 3; err: [Inf, 0.3951074745578655, 0.3012750019756393, 0.29802637929278336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3951074745578655, 0.3012750019756393, 0.29802637929278336, 0.29655954601435824] ***
*** finished computation of 3 references, err: [Inf, 0.3951074745578655, 0.3012750019756393, 0.29802637929278336, 0.29655954601435824] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [64, 174, 32]]
** centroid: 1, normalized-entropy: 0.7984019782465633, [(1, 64), (2, 174), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [125, 47, 0]]
** centroid: 2, normalized-entropy: 0.8460978267276221, [(1, 125), (2, 47)]
*** center 3: selecting labels [1] (freq >= 1) [from [225, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43057473833258003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43057473833258003, 0.30880028436678103] ***
*** starting iteration: 2; err: [Inf, 0.43057473833258003, 0.30880028436678103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43057473833258003, 0.30880028436678103, 0.294484470776845] ***
*** starting iteration: 3; err: [Inf, 0.43057473833258003, 0.30880028436678103, 0.294484470776845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43057473833258003, 0.30880028436678103, 0.294484470776845, 0.2921000508231291] ***
*** finished computation of 3 references, err: [Inf, 0.43057473833258003, 0.30880028436678103, 0.294484470776845, 0.2921000508231291] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [234, 19, 0]]
** centroid: 1, normalized-entropy: 0.38466959391191957, [(1, 234), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 172, 25]]
** centroid: 2, normalized-entropy: 0.5488845983745034, [(2, 172), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [183, 34, 0]]
** centroid: 3, normalized-entropy: 0.6263124904698649, [(1, 183), (2, 34)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2617332376315966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617332376315966, 0.23603068691099416] ***
*** finished computation of 7 references, err: [Inf, 0.2617332376315966, 0.23603068691099416] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 64, 0]]
** centroid: 1, normalized-entropy: 0.8332661971210122, [(1, 23), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [120, 14, 0]]
** centroid: 2, normalized-entropy: 0.4830306801456181, [(1, 120), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 3]]
** centroid: 3, normalized-entropy: 0.3843115441264972, [(2, 37), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [151, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 42, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 28]]
** centroid: 7, normalized-entropy: 0.9063701886077911, [(2, 59), (3, 28)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3423178621275962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3423178621275962, 0.2503517553701751] ***
*** finished computation of 7 references, err: [Inf, 0.3423178621275962, 0.2503517553701751] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [74, 49, 0]]
** centroid: 1, normalized-entropy: 0.9699914856791789, [(1, 74), (2, 49)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 32]]
** centroid: 2, normalized-entropy: 0.9948131754904235, [(2, 27), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 92, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [162, 53, 0]]
** centroid: 7, normalized-entropy: 0.8057022237329079, [(1, 162), (2, 53)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2727904063070017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727904063070017, 0.21838918858315276] ***
*** finished computation of 7 references, err: [Inf, 0.2727904063070017, 0.21838918858315276] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 71, 0]]
** centroid: 1, normalized-entropy: 0.2447650820208971, [(1, 3), (2, 71)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 26, 0]]
** centroid: 2, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [40, 48, 3]]
** centroid: 3, normalized-entropy: 0.7383895769527665, [(1, 40), (2, 48), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [134, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 5, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 79, 22]]
** centroid: 7, normalized-entropy: 0.756170148929897, [(2, 79), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24475562501231674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475562501231674, 0.1656347928298134] ***
*** starting iteration: 2; err: [Inf, 0.24475562501231674, 0.1656347928298134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475562501231674, 0.1656347928298134, 0.16194924605764202] ***
*** starting iteration: 3; err: [Inf, 0.24475562501231674, 0.1656347928298134, 0.16194924605764202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475562501231674, 0.1656347928298134, 0.16194924605764202, 0.16075954082150673] ***
*** finished computation of 7 references, err: [Inf, 0.24475562501231674, 0.1656347928298134, 0.16194924605764202, 0.16075954082150673] ***
*** center 1: selecting labels [1] (freq >= 2) [from [152, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 21]]
** centroid: 2, normalized-entropy: 0.9957274520849256, [(2, 18), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [156, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 23, 0]]
** centroid: 4, normalized-entropy: 0.7184663880382773, [(1, 93), (2, 23)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 53, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [17, 74, 0]]
** centroid: 6, normalized-entropy: 0.6947570868163001, [(1, 17), (2, 74)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 47, 10]]
** centroid: 7, normalized-entropy: 0.6699960320994334, [(2, 47), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1760561067375007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1760561067375007, 0.15125184725115504] ***
*** starting iteration: 2; err: [Inf, 0.1760561067375007, 0.15125184725115504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1760561067375007, 0.15125184725115504, 0.14853296784762254] ***
*** starting iteration: 3; err: [Inf, 0.1760561067375007, 0.15125184725115504, 0.14853296784762254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1760561067375007, 0.15125184725115504, 0.14853296784762254, 0.14730449191453787] ***
*** finished computation of 7 references, err: [Inf, 0.1760561067375007, 0.15125184725115504, 0.14853296784762254, 0.14730449191453787] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [106, 22, 0]]
** centroid: 1, normalized-entropy: 0.6619760641115651, [(1, 106), (2, 22)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [92, 9, 0]]
** centroid: 3, normalized-entropy: 0.43348846324460666, [(1, 92), (2, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 29, 32]]
** centroid: 6, normalized-entropy: 0.9982545693874832, [(2, 29), (3, 32)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [80, 27, 0]]
** centroid: 7, normalized-entropy: 0.8149603494908418, [(1, 80), (2, 27)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2408914688647888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408914688647888, 0.18776113358556643] ***
*** starting iteration: 2; err: [Inf, 0.2408914688647888, 0.18776113358556643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408914688647888, 0.18776113358556643, 0.16625260493914965] ***
*** starting iteration: 3; err: [Inf, 0.2408914688647888, 0.18776113358556643, 0.16625260493914965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408914688647888, 0.18776113358556643, 0.16625260493914965, 0.1549539394371946] ***
*** finished computation of 7 references, err: [Inf, 0.2408914688647888, 0.18776113358556643, 0.16625260493914965, 0.1549539394371946] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 11, 0]]
** centroid: 1, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 99, 20]]
** centroid: 2, normalized-entropy: 0.6532642567060226, [(2, 99), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 5, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 89, 5]]
** centroid: 5, normalized-entropy: 0.2998025130558691, [(2, 89), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [138, 20, 0]]
** centroid: 7, normalized-entropy: 0.5479900080939728, [(1, 138), (2, 20)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33607244675604253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33607244675604253, 0.2588509348649028] ***
*** starting iteration: 2; err: [Inf, 0.33607244675604253, 0.2588509348649028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33607244675604253, 0.2588509348649028, 0.251783274231596] ***
*** starting iteration: 3; err: [Inf, 0.33607244675604253, 0.2588509348649028, 0.251783274231596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33607244675604253, 0.2588509348649028, 0.251783274231596, 0.24911126613549822] ***
*** finished computation of 3 references, err: [Inf, 0.33607244675604253, 0.2588509348649028, 0.251783274231596, 0.24911126613549822] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 133, 31]]
** centroid: 1, normalized-entropy: 0.8690809623824036, [(1, 75), (2, 133), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [226, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [118, 83, 0]]
** centroid: 3, normalized-entropy: 0.9780161059725007, [(1, 118), (2, 83)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30074049187391283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30074049187391283, 0.24994114801745632] ***
*** starting iteration: 2; err: [Inf, 0.30074049187391283, 0.24994114801745632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30074049187391283, 0.24994114801745632, 0.23964042504645489] ***
*** starting iteration: 3; err: [Inf, 0.30074049187391283, 0.24994114801745632, 0.23964042504645489] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30074049187391283, 0.24994114801745632, 0.23964042504645489, 0.23685747937954169] ***
*** finished computation of 3 references, err: [Inf, 0.30074049187391283, 0.24994114801745632, 0.23964042504645489, 0.23685747937954169] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [78, 172, 32]]
** centroid: 1, normalized-entropy: 0.8228365926708147, [(1, 78), (2, 172), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [120, 49, 0]]
** centroid: 2, normalized-entropy: 0.8686447982072292, [(1, 120), (2, 49)]
*** center 3: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36312468374508255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36312468374508255, 0.24540934418474716] ***
*** starting iteration: 2; err: [Inf, 0.36312468374508255, 0.24540934418474716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36312468374508255, 0.24540934418474716, 0.2441867892218494] ***
*** starting iteration: 3; err: [Inf, 0.36312468374508255, 0.24540934418474716, 0.2441867892218494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36312468374508255, 0.24540934418474716, 0.2441867892218494, 0.2432883820053877] ***
*** finished computation of 3 references, err: [Inf, 0.36312468374508255, 0.24540934418474716, 0.2441867892218494, 0.2432883820053877] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [103, 125, 24]]
** centroid: 1, normalized-entropy: 0.8532645185936473, [(1, 103), (2, 125), (3, 24)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [108, 100, 1]]
** centroid: 2, normalized-entropy: 0.6548525250229931, [(1, 108), (2, 100), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2311818986759149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2311818986759149, 0.19122789638444176] ***
*** finished computation of 7 references, err: [Inf, 0.2311818986759149, 0.19122789638444176] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [101, 16, 0]]
** centroid: 1, normalized-entropy: 0.5756693370369834, [(1, 101), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 6, 0]]
** centroid: 2, normalized-entropy: 0.4441260450795996, [(1, 59), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 86, 31]]
** centroid: 3, normalized-entropy: 0.834135193716964, [(2, 86), (3, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 94, 0]]
** centroid: 5, normalized-entropy: 0.7879388881327561, [(1, 29), (2, 94)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 14, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 56), (2, 14)]
*** center 7: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2299132145029483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2299132145029483, 0.19248078089777096] ***
*** finished computation of 7 references, err: [Inf, 0.2299132145029483, 0.19248078089777096] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 79, 0]]
** centroid: 1, normalized-entropy: 0.673654715229001, [(1, 17), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 7, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 84), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 74, 32]]
** centroid: 4, normalized-entropy: 0.8835850861052531, [(2, 74), (3, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 57, 0]]
** centroid: 5, normalized-entropy: 0.993320421638792, [(1, 47), (2, 57)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [60, 4, 0]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23536925772595954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23536925772595954, 0.1895088859354851] ***
*** finished computation of 7 references, err: [Inf, 0.23536925772595954, 0.1895088859354851] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [91, 22, 0]]
** centroid: 1, normalized-entropy: 0.7111806626974718, [(1, 91), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 15, 0]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(1, 63), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 59, 25]]
** centroid: 4, normalized-entropy: 0.8783609387702275, [(2, 59), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [108, 14, 0]]
** centroid: 5, normalized-entropy: 0.5140912790181233, [(1, 108), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 26, 0]]
** centroid: 6, normalized-entropy: 0.9054522631867892, [(1, 55), (2, 26)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24256395550819487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24256395550819487, 0.19482027611753963] ***
*** finished computation of 7 references, err: [Inf, 0.24256395550819487, 0.19482027611753963] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [136, 2, 0]]
** centroid: 1, normalized-entropy: 0.10928571467638523, [(1, 136), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 31]]
** centroid: 2, normalized-entropy: 0.992563136012236, [(2, 38), (3, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [106, 4, 0]]
** centroid: 3, normalized-entropy: 0.22536363912739493, [(1, 106), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [88, 3, 0]]
** centroid: 4, normalized-entropy: 0.20905980566852464, [(1, 88), (2, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 103, 0]]
** centroid: 6, normalized-entropy: 0.2301627406079554, [(1, 4), (2, 103)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 66, 0]]
** centroid: 7, normalized-entropy: 0.11190990870168394, [(1, 1), (2, 66)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21286493822208968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21286493822208968, 0.1922248191119212] ***
*** finished computation of 7 references, err: [Inf, 0.21286493822208968, 0.1922248191119212] ***
*** center 1: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 32]]
** centroid: 2, normalized-entropy: 0.9555111232924128, [(2, 53), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 59, 0]]
** centroid: 4, normalized-entropy: 0.9896911180731478, [(1, 75), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 78, 0]]
** centroid: 5, normalized-entropy: 0.6152538910563409, [(1, 14), (2, 78)]
*** center 6: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [11, 31, 0]]
** centroid: 7, normalized-entropy: 0.8296071030882032, [(1, 11), (2, 31)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24965471639807546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24965471639807546, 0.19892990492379245] ***
*** finished computation of 7 references, err: [Inf, 0.24965471639807546, 0.19892990492379245] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [134, 4, 0]]
** centroid: 1, normalized-entropy: 0.18927843126120178, [(1, 134), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 25]]
** centroid: 2, normalized-entropy: 0.9690632527820694, [(2, 38), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [87, 36, 0]]
** centroid: 5, normalized-entropy: 0.8721617883411698, [(1, 87), (2, 36)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 96, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 51, 0]]
** centroid: 7, normalized-entropy: 0.7024665512903904, [(1, 12), (2, 51)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18922642088850383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18922642088850383, 0.1505519657622318] ***
*** finished computation of 7 references, err: [Inf, 0.18922642088850383, 0.1505519657622318] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 120, 0]]
** centroid: 1, normalized-entropy: 0.30775275033574495, [(1, 7), (2, 120)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 8, 0]]
** centroid: 2, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 31]]
** centroid: 4, normalized-entropy: 0.8824744521750667, [(2, 72), (3, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [124, 10, 0]]
** centroid: 5, normalized-entropy: 0.3829576722723533, [(1, 124), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 6, 0]]
** centroid: 7, normalized-entropy: 0.47983202361612853, [(1, 52), (2, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19334768744973072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19334768744973072, 0.15415933834335793] ***
*** finished computation of 7 references, err: [Inf, 0.19334768744973072, 0.15415933834335793] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [142, 3, 0]]
** centroid: 1, normalized-entropy: 0.14529544538163566, [(1, 142), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 32]]
** centroid: 2, normalized-entropy: 0.9929768866085175, [(2, 39), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 6, 0]]
** centroid: 3, normalized-entropy: 0.3250821976451909, [(1, 95), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [80, 4, 0]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(1, 80), (2, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [8, 77, 0]]
** centroid: 6, normalized-entropy: 0.4500666580964382, [(1, 8), (2, 77)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [8, 92, 0]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(1, 8), (2, 92)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19743357909734416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743357909734416, 0.1581480341029355] ***
*** finished computation of 7 references, err: [Inf, 0.19743357909734416, 0.1581480341029355] ***
*** center 1: selecting labels [1] (freq >= 1) [from [148, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 25]]
** centroid: 2, normalized-entropy: 0.8827586787955116, [(2, 58), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 23, 0]]
** centroid: 3, normalized-entropy: 0.8514808683852091, [(1, 60), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 2, 0]]
** centroid: 4, normalized-entropy: 0.15240699892386778, [(1, 89), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [12, 74, 0]]
** centroid: 5, normalized-entropy: 0.5830194167347007, [(1, 12), (2, 74)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 68, 0]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(1, 12), (2, 68)]
*** center 7: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9380068691445936, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.8990307672942404, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.23085105747708845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085105747708845, 0.20007450103986305] ***
*** starting iteration: 2; err: [Inf, 0.23085105747708845, 0.20007450103986305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085105747708845, 0.20007450103986305, 0.1936153391765587] ***
*** starting iteration: 3; err: [Inf, 0.23085105747708845, 0.20007450103986305, 0.1936153391765587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085105747708845, 0.20007450103986305, 0.1936153391765587, 0.18917084789021058] ***
*** finished computation of 7 references, err: [Inf, 0.23085105747708845, 0.20007450103986305, 0.1936153391765587, 0.18917084789021058] ***
*** center 1: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [101, 2, 0]]
** centroid: 3, normalized-entropy: 0.13815722856252646, [(1, 101), (2, 2)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 58, 0]]
** centroid: 5, normalized-entropy: 0.9995415002093281, [(1, 61), (2, 58)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 14, 0]]
** centroid: 6, normalized-entropy: 0.7455178428108284, [(1, 52), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 60, 31]]
** centroid: 7, normalized-entropy: 0.9254482516437047, [(2, 60), (3, 31)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2666489105236003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666489105236003, 0.20891815738688255] ***
*** starting iteration: 2; err: [Inf, 0.2666489105236003, 0.20891815738688255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666489105236003, 0.20891815738688255, 0.20416882081792273] ***
*** starting iteration: 3; err: [Inf, 0.2666489105236003, 0.20891815738688255, 0.20416882081792273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666489105236003, 0.20891815738688255, 0.20416882081792273, 0.20225579005343536] ***
*** finished computation of 7 references, err: [Inf, 0.2666489105236003, 0.20891815738688255, 0.20416882081792273, 0.20225579005343536] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [153, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 41, 24]]
** centroid: 3, normalized-entropy: 0.9500796252338518, [(2, 41), (3, 24)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 8]]
** centroid: 4, normalized-entropy: 0.48977901368693744, [(2, 67), (3, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 26, 0]]
** centroid: 5, normalized-entropy: 0.9140185106642174, [(1, 53), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [15, 53, 0]]
** centroid: 6, normalized-entropy: 0.7612401496918493, [(1, 15), (2, 53)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [107, 34, 0]]
** centroid: 7, normalized-entropy: 0.7969222449701818, [(1, 107), (2, 34)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23531294724662444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23531294724662444, 0.19525580261477912] ***
*** starting iteration: 2; err: [Inf, 0.23531294724662444, 0.19525580261477912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23531294724662444, 0.19525580261477912, 0.1876907170047869] ***
*** starting iteration: 3; err: [Inf, 0.23531294724662444, 0.19525580261477912, 0.1876907170047869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23531294724662444, 0.19525580261477912, 0.1876907170047869, 0.1843788418102021] ***
*** finished computation of 7 references, err: [Inf, 0.23531294724662444, 0.19525580261477912, 0.1876907170047869, 0.1843788418102021] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 91, 25]]
** centroid: 1, normalized-entropy: 0.7518972278650765, [(2, 91), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 63, 0]]
** centroid: 3, normalized-entropy: 0.6064481901491525, [(1, 11), (2, 63)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [79, 53, 0]]
** centroid: 4, normalized-entropy: 0.9718300042232968, [(1, 79), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 18, 0]]
** centroid: 5, normalized-entropy: 0.7742411580847273, [(1, 61), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9380068691445936, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.20996051299869567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20996051299869567, 0.1887803077299215] ***
*** finished computation of 7 references, err: [Inf, 0.20996051299869567, 0.1887803077299215] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 81, 31]]
** centroid: 1, normalized-entropy: 0.8510340662036064, [(2, 81), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 13, 0]]
** centroid: 3, normalized-entropy: 0.698124573139618, [(1, 56), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 9, 0]]
** centroid: 4, normalized-entropy: 0.524805134842907, [(1, 67), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [120, 5, 0]]
** centroid: 5, normalized-entropy: 0.24229218908241482, [(1, 120), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 107, 0]]
** centroid: 6, normalized-entropy: 0.07584150637714687, [(1, 1), (2, 107)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [106, 1, 0]]
** centroid: 7, normalized-entropy: 0.07642429309554791, [(1, 106), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22089876085547716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22089876085547716, 0.185754737640819] ***
*** finished computation of 7 references, err: [Inf, 0.22089876085547716, 0.185754737640819] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 63, 0]]
** centroid: 3, normalized-entropy: 0.9993169596348739, [(1, 67), (2, 63)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [94, 19, 0]]
** centroid: 4, normalized-entropy: 0.6534358224760193, [(1, 94), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [116, 1, 0]]
** centroid: 5, normalized-entropy: 0.07099894663640989, [(1, 116), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 9, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 63), (2, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 66, 32]]
** centroid: 7, normalized-entropy: 0.9113423759758414, [(2, 66), (3, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23978647971218606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23978647971218606, 0.1913054118315498] ***
*** finished computation of 7 references, err: [Inf, 0.23978647971218606, 0.1913054118315498] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [106, 12, 0]]
** centroid: 1, normalized-entropy: 0.4743454375622396, [(1, 106), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [101, 4, 0]]
** centroid: 2, normalized-entropy: 0.23348971044772968, [(1, 101), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 34, 25]]
** centroid: 4, normalized-entropy: 0.9831491282282879, [(2, 34), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [124, 14, 0]]
** centroid: 5, normalized-entropy: 0.47357292491745173, [(1, 124), (2, 14)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 80, 0]]
** centroid: 7, normalized-entropy: 0.16542703399626665, [(1, 2), (2, 80)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9380068691445936, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2610916134932109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2610916134932109, 0.16837420498717343] ***
*** starting iteration: 2; err: [Inf, 0.2610916134932109, 0.16837420498717343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2610916134932109, 0.16837420498717343, 0.15242259454768006] ***
*** starting iteration: 3; err: [Inf, 0.2610916134932109, 0.16837420498717343, 0.15242259454768006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2610916134932109, 0.16837420498717343, 0.15242259454768006, 0.1482800569234265] ***
*** finished computation of 7 references, err: [Inf, 0.2610916134932109, 0.16837420498717343, 0.15242259454768006, 0.1482800569234265] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 31]]
** centroid: 1, normalized-entropy: 0.9111178649415465, [(2, 64), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [21, 57, 0]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(1, 21), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 17, 0]]
** centroid: 5, normalized-entropy: 0.7172524777375696, [(1, 69), (2, 17)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [94, 6, 0]]
** centroid: 7, normalized-entropy: 0.3274449191544762, [(1, 94), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18138836911911593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18138836911911593, 0.14852638741483218] ***
*** starting iteration: 2; err: [Inf, 0.18138836911911593, 0.14852638741483218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18138836911911593, 0.14852638741483218, 0.14605568628339308] ***
*** starting iteration: 3; err: [Inf, 0.18138836911911593, 0.14852638741483218, 0.14605568628339308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18138836911911593, 0.14852638741483218, 0.14605568628339308, 0.14531645029531917] ***
*** finished computation of 7 references, err: [Inf, 0.18138836911911593, 0.14852638741483218, 0.14605568628339308, 0.14531645029531917] ***
*** center 1: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 59, 0]]
** centroid: 2, normalized-entropy: 0.988530923465193, [(1, 76), (2, 59)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 104, 32]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 104), (3, 32)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 20, 0]]
** centroid: 6, normalized-entropy: 0.7553754125614286, [(1, 72), (2, 20)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [48, 38, 0]]
** centroid: 7, normalized-entropy: 0.9902246902198684, [(1, 48), (2, 38)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17444810135334707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444810135334707, 0.15470355904117963] ***
*** starting iteration: 2; err: [Inf, 0.17444810135334707, 0.15470355904117963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444810135334707, 0.15470355904117963, 0.15195251988300096] ***
*** starting iteration: 3; err: [Inf, 0.17444810135334707, 0.15470355904117963, 0.15195251988300096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444810135334707, 0.15470355904117963, 0.15195251988300096, 0.15023169732852273] ***
*** finished computation of 7 references, err: [Inf, 0.17444810135334707, 0.15470355904117963, 0.15195251988300096, 0.15023169732852273] ***
*** center 1: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 76, 0]]
** centroid: 2, normalized-entropy: 0.17203694935311387, [(1, 2), (2, 76)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 100, 25]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 100), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 12, 0]]
** centroid: 4, normalized-entropy: 0.6554444445609846, [(1, 59), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [125, 24, 0]]
** centroid: 5, normalized-entropy: 0.636872308381164, [(1, 125), (2, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 13, 0]]
** centroid: 7, normalized-entropy: 0.617151919200282, [(1, 72), (2, 13)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9380068691445936, 0.9320038601475726, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 16
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9380068691445936, 0.9320038601475726, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 17
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9380068691445936, 0.9320038601475726, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7870295445145744, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.18516060682824692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18516060682824692, 0.15016790200059804] ***
*** starting iteration: 2; err: [Inf, 0.18516060682824692, 0.15016790200059804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18516060682824692, 0.15016790200059804, 0.14624656690424448] ***
*** starting iteration: 3; err: [Inf, 0.18516060682824692, 0.15016790200059804, 0.14624656690424448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18516060682824692, 0.15016790200059804, 0.14624656690424448, 0.14542537371700703] ***
*** finished computation of 7 references, err: [Inf, 0.18516060682824692, 0.15016790200059804, 0.14624656690424448, 0.14542537371700703] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 69, 0]]
** centroid: 1, normalized-entropy: 0.999843993615307, [(1, 67), (2, 69)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 4, 0]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 31]]
** centroid: 4, normalized-entropy: 0.8895986430672326, [(2, 70), (3, 31)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [111, 2, 0]]
** centroid: 5, normalized-entropy: 0.12831912909782706, [(1, 111), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20113358251482383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113358251482383, 0.14735263613341698] ***
*** starting iteration: 2; err: [Inf, 0.20113358251482383, 0.14735263613341698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113358251482383, 0.14735263613341698, 0.14364031186771356] ***
*** starting iteration: 3; err: [Inf, 0.20113358251482383, 0.14735263613341698, 0.14364031186771356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113358251482383, 0.14735263613341698, 0.14364031186771356, 0.1426540737681236] ***
*** finished computation of 7 references, err: [Inf, 0.20113358251482383, 0.14735263613341698, 0.14364031186771356, 0.1426540737681236] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 74, 32]]
** centroid: 1, normalized-entropy: 0.8835850861052531, [(2, 74), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 19, 0]]
** centroid: 3, normalized-entropy: 0.7177418091697444, [(1, 77), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [86, 18, 0]]
** centroid: 4, normalized-entropy: 0.6646953053493416, [(1, 86), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 32, 0]]
** centroid: 5, normalized-entropy: 0.9078619154263698, [(1, 67), (2, 32)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 78, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18269305085872245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18269305085872245, 0.1448741967390491] ***
*** starting iteration: 2; err: [Inf, 0.18269305085872245, 0.1448741967390491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18269305085872245, 0.1448741967390491, 0.14230908938394538] ***
*** starting iteration: 3; err: [Inf, 0.18269305085872245, 0.1448741967390491, 0.14230908938394538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18269305085872245, 0.1448741967390491, 0.14230908938394538, 0.1418573996233663] ***
*** finished computation of 7 references, err: [Inf, 0.18269305085872245, 0.1448741967390491, 0.14230908938394538, 0.1418573996233663] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 34, 0]]
** centroid: 1, normalized-entropy: 0.8953848900090126, [(1, 75), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 14, 0]]
** centroid: 2, normalized-entropy: 0.6454495903301855, [(1, 71), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 82, 23]]
** centroid: 4, normalized-entropy: 0.7584246665423688, [(2, 82), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [93, 22, 0]]
** centroid: 5, normalized-entropy: 0.7041920940481365, [(1, 93), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 72, 2]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(2, 72), (3, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22798666553767594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22798666553767594, 0.1882694798728658] ***
*** starting iteration: 2; err: [Inf, 0.22798666553767594, 0.1882694798728658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22798666553767594, 0.1882694798728658, 0.1858243977639813] ***
*** starting iteration: 3; err: [Inf, 0.22798666553767594, 0.1882694798728658, 0.1858243977639813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22798666553767594, 0.1882694798728658, 0.1858243977639813, 0.18553793495423063] ***
*** finished computation of 7 references, err: [Inf, 0.22798666553767594, 0.1882694798728658, 0.1858243977639813, 0.18553793495423063] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 11, 0]]
** centroid: 1, normalized-entropy: 0.44712851249800223, [(1, 107), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 17, 0]]
** centroid: 2, normalized-entropy: 0.77753986416076, [(1, 57), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 31]]
** centroid: 3, normalized-entropy: 0.8967550157663144, [(2, 68), (3, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [100, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 16, 0]]
** centroid: 6, normalized-entropy: 0.7072324944713736, [(1, 67), (2, 16)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 103, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24219301270008242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24219301270008242, 0.1951729189576595] ***
*** starting iteration: 2; err: [Inf, 0.24219301270008242, 0.1951729189576595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24219301270008242, 0.1951729189576595, 0.18912897138916393] ***
*** starting iteration: 3; err: [Inf, 0.24219301270008242, 0.1951729189576595, 0.18912897138916393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24219301270008242, 0.1951729189576595, 0.18912897138916393, 0.18768554061617718] ***
*** finished computation of 7 references, err: [Inf, 0.24219301270008242, 0.1951729189576595, 0.18912897138916393, 0.18768554061617718] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 62, 0]]
** centroid: 1, normalized-entropy: 0.7114160189012126, [(1, 15), (2, 62)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 46, 0]]
** centroid: 2, normalized-entropy: 0.9917570244063947, [(1, 57), (2, 46)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 90, 32]]
** centroid: 4, normalized-entropy: 0.8301899714180444, [(2, 90), (3, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 5, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [90, 10, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 90), (2, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23611221740349034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23611221740349034, 0.19367664013123573] ***
*** starting iteration: 2; err: [Inf, 0.23611221740349034, 0.19367664013123573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23611221740349034, 0.19367664013123573, 0.1906166265308829] ***
*** starting iteration: 3; err: [Inf, 0.23611221740349034, 0.19367664013123573, 0.1906166265308829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23611221740349034, 0.19367664013123573, 0.1906166265308829, 0.1893305611542553] ***
*** finished computation of 7 references, err: [Inf, 0.23611221740349034, 0.19367664013123573, 0.1906166265308829, 0.1893305611542553] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 86, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [109, 11, 0]]
** centroid: 4, normalized-entropy: 0.44200860222772487, [(1, 109), (2, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 62, 25]]
** centroid: 6, normalized-entropy: 0.8652817028791377, [(2, 62), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 66, 0]]
** centroid: 7, normalized-entropy: 0.6690158350565576, [(1, 14), (2, 66)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9380068691445936, 0.9320038601475726, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9239928551305797, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.909019798241355, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7870295445145744, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 19
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.9380068691445936, 0.9320038601475726, 0.9270108431785079, 0.926024827222432, 0.9249998501495508, 0.9239928551305797, 0.9179778580976187, 0.9129968291644938, 0.9100357842872814, 0.909019798241355, 0.9020187852523183, 0.8990307672942404, 0.8989828151504797, 0.8789987592382801, 0.8640556724389059, 0.862973752195309, 0.8550106993220766, 0.7870295445145744, 0.7408845971720224]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9380068691445936
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.22933090206747875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123] ***
*** starting iteration: 2; err: [Inf, 0.22933090206747875, 0.17762516719289123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246] ***
*** starting iteration: 3; err: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309] ***
*** starting iteration: 4; err: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374] ***
*** starting iteration: 5; err: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374, 0.14822040076227858] ***
*** starting iteration: 6; err: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374, 0.14822040076227858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374, 0.14822040076227858, 0.14770074459351598] ***
*** finished computation of 7 references, err: [Inf, 0.22933090206747875, 0.17762516719289123, 0.16112362283468246, 0.1521956900153309, 0.149476487015374, 0.14822040076227858, 0.14770074459351598] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 36, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 108), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [193, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [152, 66, 0]]
** centroid: 4, normalized-entropy: 0.8846293067903075, [(1, 152), (2, 66)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 114, 38]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 114), (3, 38)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 98, 6]]
** centroid: 6, normalized-entropy: 0.3182152976832332, [(2, 98), (3, 6)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [80, 17, 0]]
** centroid: 7, normalized-entropy: 0.6695920597928519, [(1, 80), (2, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17738975512981414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17738975512981414, 0.16060280715487898] ***
*** starting iteration: 2; err: [Inf, 0.17738975512981414, 0.16060280715487898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756] ***
*** starting iteration: 3; err: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756, 0.1531595797780901] ***
*** starting iteration: 4; err: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756, 0.1531595797780901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756, 0.1531595797780901, 0.15262860698625447] ***
*** finished computation of 7 references, err: [Inf, 0.17738975512981414, 0.16060280715487898, 0.15527816978655756, 0.1531595797780901, 0.15262860698625447] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 39, 0]]
** centroid: 1, normalized-entropy: 0.9211426316005454, [(1, 77), (2, 39)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 98, 19]]
** centroid: 2, normalized-entropy: 0.6400041428422206, [(2, 98), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 15, 0]]
** centroid: 3, normalized-entropy: 0.8047175193210769, [(1, 46), (2, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 14, 0]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(1, 11), (2, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23894880961067974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23894880961067974, 0.18538335339864717] ***
*** starting iteration: 2; err: [Inf, 0.23894880961067974, 0.18538335339864717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979] ***
*** starting iteration: 3; err: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979, 0.16192522772494702] ***
*** starting iteration: 4; err: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979, 0.16192522772494702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979, 0.16192522772494702, 0.16100616097263992] ***
*** finished computation of 7 references, err: [Inf, 0.23894880961067974, 0.18538335339864717, 0.1661740477764979, 0.16192522772494702, 0.16100616097263992] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [87, 16, 0]]
** centroid: 1, normalized-entropy: 0.6230433996216712, [(1, 87), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [105, 5, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 105), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 4]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 59, 0]]
** centroid: 5, normalized-entropy: 0.12229159706937456, [(1, 1), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 54, 0]]
** centroid: 6, normalized-entropy: 0.13110652958234514, [(1, 1), (2, 54)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2288166994359344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956] ***
*** starting iteration: 2; err: [Inf, 0.2288166994359344, 0.17492027919366956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364] ***
*** starting iteration: 3; err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427] ***
*** starting iteration: 4; err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378] ***
*** starting iteration: 5; err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713] ***
*** starting iteration: 6; err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713, 0.14010173421539365] ***
*** starting iteration: 7; err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713, 0.14010173421539365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713, 0.14010173421539365, 0.13984513202495874] ***
*** finished computation of 7 references, err: [Inf, 0.2288166994359344, 0.17492027919366956, 0.15363689508475364, 0.1466298953909427, 0.14420885789394378, 0.14232073472067713, 0.14010173421539365, 0.13984513202495874] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 6, 0]]
** centroid: 2, normalized-entropy: 0.4098553703184051, [(1, 67), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 11, 0]]
** centroid: 3, normalized-entropy: 0.6064481901491525, [(1, 63), (2, 11)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 50, 23]]
** centroid: 5, normalized-entropy: 0.8989377852081333, [(2, 50), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [54, 14, 0]]
** centroid: 7, normalized-entropy: 0.7335379291086666, [(1, 54), (2, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2542391471192241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542391471192241, 0.18905460595153273] ***
*** starting iteration: 2; err: [Inf, 0.2542391471192241, 0.18905460595153273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844] ***
*** starting iteration: 3; err: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747] ***
*** starting iteration: 4; err: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747, 0.15210880581103264] ***
*** starting iteration: 5; err: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747, 0.15210880581103264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747, 0.15210880581103264, 0.15137157641537488] ***
*** finished computation of 7 references, err: [Inf, 0.2542391471192241, 0.18905460595153273, 0.16280110121145844, 0.15444133785180747, 0.15210880581103264, 0.15137157641537488] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 39, 0]]
** centroid: 1, normalized-entropy: 0.9905577004075262, [(1, 31), (2, 39)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 89, 21]]
** centroid: 2, normalized-entropy: 0.7033693386668108, [(2, 89), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 13, 0]]
** centroid: 3, normalized-entropy: 0.5683625344629001, [(1, 84), (2, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 13, 0]]
** centroid: 7, normalized-entropy: 0.7158259310602146, [(1, 53), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21510580292902887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21510580292902887, 0.16078105171956122] ***
*** starting iteration: 2; err: [Inf, 0.21510580292902887, 0.16078105171956122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318] ***
*** starting iteration: 3; err: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488] ***
*** starting iteration: 4; err: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488, 0.1472249180022627] ***
*** starting iteration: 5; err: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488, 0.1472249180022627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488, 0.1472249180022627, 0.14653506862185894] ***
*** finished computation of 7 references, err: [Inf, 0.21510580292902887, 0.16078105171956122, 0.15173033539578318, 0.14845289760455488, 0.1472249180022627, 0.14653506862185894] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 46, 20]]
** centroid: 1, normalized-entropy: 0.8849636363831529, [(2, 46), (3, 20)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 49, 4]]
** centroid: 2, normalized-entropy: 0.3860189005698936, [(2, 49), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 35, 0]]
** centroid: 4, normalized-entropy: 0.94336565829991, [(1, 62), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 11, 0]]
** centroid: 5, normalized-entropy: 0.5558227377664954, [(1, 74), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 17, 0]]
** centroid: 6, normalized-entropy: 0.8412367762002599, [(1, 46), (2, 17)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23819267860427498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819267860427498, 0.16037628037855028] ***
*** starting iteration: 2; err: [Inf, 0.23819267860427498, 0.16037628037855028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267] ***
*** starting iteration: 3; err: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267, 0.14528235522657632] ***
*** starting iteration: 4; err: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267, 0.14528235522657632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267, 0.14528235522657632, 0.1449835050702095] ***
*** finished computation of 7 references, err: [Inf, 0.23819267860427498, 0.16037628037855028, 0.14826523387199267, 0.14528235522657632, 0.1449835050702095] ***
*** center 1: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 1, 0]]
** centroid: 4, normalized-entropy: 0.11611507530476962, [(1, 63), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 86, 27]]
** centroid: 5, normalized-entropy: 0.7932698344258595, [(2, 86), (3, 27)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [36, 13, 0]]
** centroid: 6, normalized-entropy: 0.834648285181383, [(1, 36), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 36, 0]]
** centroid: 7, normalized-entropy: 0.9998646331239297, [(1, 37), (2, 36)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24160967318713664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614] ***
*** starting iteration: 2; err: [Inf, 0.24160967318713664, 0.20270128576713614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546] ***
*** starting iteration: 3; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305] ***
*** starting iteration: 4; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328] ***
*** starting iteration: 5; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678] ***
*** starting iteration: 6; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462] ***
*** starting iteration: 7; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313] ***
*** starting iteration: 8; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313, 0.13949708457663657] ***
*** starting iteration: 9; err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313, 0.13949708457663657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313, 0.13949708457663657, 0.13910207852721215] ***
*** finished computation of 7 references, err: [Inf, 0.24160967318713664, 0.20270128576713614, 0.1974565426269546, 0.19320574814337305, 0.18384637065604328, 0.16158722245320678, 0.14700734782591462, 0.1411140471175313, 0.13949708457663657, 0.13910207852721215] ***
*** center 1: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 45, 0]]
** centroid: 2, normalized-entropy: 0.9899927915575186, [(1, 57), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 86, 22]]
** centroid: 3, normalized-entropy: 0.7292739418449411, [(2, 86), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [31, 10, 0]]
** centroid: 4, normalized-entropy: 0.8014698931335286, [(1, 31), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 14, 0]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(1, 56), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23822501081973313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106] ***
*** starting iteration: 2; err: [Inf, 0.23822501081973313, 0.1627431515106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125] ***
*** starting iteration: 3; err: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534] ***
*** starting iteration: 4; err: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062] ***
*** starting iteration: 5; err: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062, 0.14593322579562665] ***
*** starting iteration: 6; err: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062, 0.14593322579562665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062, 0.14593322579562665, 0.1456640868121758] ***
*** finished computation of 7 references, err: [Inf, 0.23822501081973313, 0.1627431515106, 0.15397389897704125, 0.15065238587744534, 0.1470638213586062, 0.14593322579562665, 0.1456640868121758] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 9, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [96, 2, 0]]
** centroid: 4, normalized-entropy: 0.14372616993938164, [(1, 96), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 16, 0]]
** centroid: 5, normalized-entropy: 0.6931274153282881, [(1, 70), (2, 16)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 29, 29]]
** centroid: 7, normalized-entropy: 1.0, [(2, 29), (3, 29)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22794413669034838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537] ***
*** starting iteration: 2; err: [Inf, 0.22794413669034838, 0.15798047642223537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589] ***
*** starting iteration: 3; err: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073] ***
*** starting iteration: 4; err: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564] ***
*** starting iteration: 5; err: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564, 0.14655501815583558] ***
*** starting iteration: 6; err: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564, 0.14655501815583558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564, 0.14655501815583558, 0.14571100509352983] ***
*** finished computation of 7 references, err: [Inf, 0.22794413669034838, 0.15798047642223537, 0.1517730009043589, 0.14895994171407073, 0.14757424123119564, 0.14655501815583558, 0.14571100509352983] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 65, 18]]
** centroid: 1, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [86, 34, 0]]
** centroid: 2, normalized-entropy: 0.8599530497177523, [(1, 86), (2, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 1, 0]]
** centroid: 4, normalized-entropy: 0.12229159706937456, [(1, 59), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 2, 0]]
** centroid: 5, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 8, 0]]
** centroid: 6, normalized-entropy: 0.6420642892306891, [(1, 41), (2, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23360084093548358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23360084093548358, 0.16182801679708064] ***
*** starting iteration: 2; err: [Inf, 0.23360084093548358, 0.16182801679708064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672] ***
*** starting iteration: 3; err: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145] ***
*** starting iteration: 4; err: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145, 0.15368714109994472] ***
*** starting iteration: 5; err: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145, 0.15368714109994472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145, 0.15368714109994472, 0.15289879430830478] ***
*** finished computation of 7 references, err: [Inf, 0.23360084093548358, 0.16182801679708064, 0.15721828370075672, 0.1548540602750145, 0.15368714109994472, 0.15289879430830478] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 21, 0]]
** centroid: 2, normalized-entropy: 0.806583102274714, [(1, 64), (2, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 25, 0]]
** centroid: 4, normalized-entropy: 0.9764143081154868, [(1, 36), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [94, 2, 0]]
** centroid: 5, normalized-entropy: 0.14609425012013613, [(1, 94), (2, 2)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 22]]
** centroid: 7, normalized-entropy: 0.9996437496778561, [(2, 23), (3, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2360907488912344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277] ***
*** starting iteration: 2; err: [Inf, 0.2360907488912344, 0.166543571267277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664] ***
*** starting iteration: 3; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281] ***
*** starting iteration: 4; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453] ***
*** starting iteration: 5; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888] ***
*** starting iteration: 6; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823] ***
*** starting iteration: 7; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667] ***
*** starting iteration: 8; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928] ***
*** starting iteration: 9; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928, 0.14457450340874492] ***
*** starting iteration: 10; err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928, 0.14457450340874492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928, 0.14457450340874492, 0.1441934486674145] ***
*** finished computation of 7 references, err: [Inf, 0.2360907488912344, 0.166543571267277, 0.15991172422468664, 0.1571977399904281, 0.15464732711948453, 0.1524832685235888, 0.14998227758146823, 0.14831854537315667, 0.14634137156046928, 0.14457450340874492, 0.1441934486674145] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 31, 0]]
** centroid: 1, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 19, 0]]
** centroid: 2, normalized-entropy: 0.8546480601169081, [(1, 49), (2, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 5, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [37, 23, 0]]
** centroid: 4, normalized-entropy: 0.9603622703154779, [(1, 37), (2, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 87, 23]]
** centroid: 6, normalized-entropy: 0.73974144872329, [(2, 87), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20603931117337196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838] ***
*** starting iteration: 2; err: [Inf, 0.20603931117337196, 0.17745195063389838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394] ***
*** starting iteration: 3; err: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633] ***
*** starting iteration: 4; err: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753] ***
*** starting iteration: 5; err: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753, 0.15060272668255492] ***
*** starting iteration: 6; err: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753, 0.15060272668255492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753, 0.15060272668255492, 0.1497463349867612] ***
*** finished computation of 7 references, err: [Inf, 0.20603931117337196, 0.17745195063389838, 0.16021503471769394, 0.15422584900725633, 0.15177868219278753, 0.15060272668255492, 0.1497463349867612] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 23]]
** centroid: 1, normalized-entropy: 0.9603622703154779, [(2, 37), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 68, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 2), (2, 68)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 12, 0]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(1, 66), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 8, 0]]
** centroid: 6, normalized-entropy: 0.5381411852224502, [(1, 57), (2, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 47, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23516700031794607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23516700031794607, 0.16488339403830468] ***
*** starting iteration: 2; err: [Inf, 0.23516700031794607, 0.16488339403830468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037] ***
*** starting iteration: 3; err: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037, 0.1542701361537911] ***
*** starting iteration: 4; err: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037, 0.1542701361537911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037, 0.1542701361537911, 0.15331506842188536] ***
*** finished computation of 7 references, err: [Inf, 0.23516700031794607, 0.16488339403830468, 0.15720015049912037, 0.1542701361537911, 0.15331506842188536] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 18]]
** centroid: 2, normalized-entropy: 0.9892452969285004, [(2, 23), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 60, 0]]
** centroid: 3, normalized-entropy: 0.12068101401352371, [(1, 1), (2, 60)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 25, 0]]
** centroid: 5, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [103, 9, 0]]
** centroid: 7, normalized-entropy: 0.40343635676427997, [(1, 103), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18204926906060429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18204926906060429, 0.14889816258847713] ***
*** starting iteration: 2; err: [Inf, 0.18204926906060429, 0.14889816258847713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18204926906060429, 0.14889816258847713, 0.14619631641730665] ***
*** starting iteration: 3; err: [Inf, 0.18204926906060429, 0.14889816258847713, 0.14619631641730665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18204926906060429, 0.14889816258847713, 0.14619631641730665, 0.14556025263294578] ***
*** finished computation of 7 references, err: [Inf, 0.18204926906060429, 0.14889816258847713, 0.14619631641730665, 0.14556025263294578] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 46, 0]]
** centroid: 1, normalized-entropy: 0.996485989886783, [(1, 40), (2, 46)]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 36, 0]]
** centroid: 3, normalized-entropy: 0.9943290455933883, [(1, 43), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 29, 0]]
** centroid: 4, normalized-entropy: 0.2108423003185322, [(1, 1), (2, 29)]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 64, 21]]
** centroid: 6, normalized-entropy: 0.806583102274714, [(2, 64), (3, 21)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19611296004615725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225] ***
*** starting iteration: 2; err: [Inf, 0.19611296004615725, 0.16520039450377225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013] ***
*** starting iteration: 3; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017] ***
*** starting iteration: 4; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978] ***
*** starting iteration: 5; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446] ***
*** starting iteration: 6; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535] ***
*** starting iteration: 7; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535, 0.14938660127669573] ***
*** starting iteration: 8; err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535, 0.14938660127669573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535, 0.14938660127669573, 0.14906092816591263] ***
*** finished computation of 7 references, err: [Inf, 0.19611296004615725, 0.16520039450377225, 0.16056483584363013, 0.1582212219052017, 0.15519417321681978, 0.15224822913948446, 0.15060463599767535, 0.14938660127669573, 0.14906092816591263] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 52, 0]]
** centroid: 2, normalized-entropy: 0.13503620280212753, [(1, 1), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 3, 0]]
** centroid: 3, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 58, 0]]
** centroid: 4, normalized-entropy: 0.39993804743902767, [(1, 5), (2, 58)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 3, 0]]
** centroid: 5, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 36, 20]]
** centroid: 6, normalized-entropy: 0.940285958670631, [(2, 36), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 4, 0]]
** centroid: 7, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19507761630695314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418] ***
*** starting iteration: 2; err: [Inf, 0.19507761630695314, 0.16104581260867418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754] ***
*** starting iteration: 3; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269] ***
*** starting iteration: 4; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005] ***
*** starting iteration: 5; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014] ***
*** starting iteration: 6; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594] ***
*** starting iteration: 7; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858] ***
*** starting iteration: 8; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386] ***
*** starting iteration: 9; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386, 0.14301886274293066] ***
*** starting iteration: 10; err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386, 0.14301886274293066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386, 0.14301886274293066, 0.1420976461339742] ***
*** finished computation of 7 references, err: [Inf, 0.19507761630695314, 0.16104581260867418, 0.15622597447782754, 0.15452185873687269, 0.15231645754911005, 0.15087546518445014, 0.14944857032969594, 0.14710145932342858, 0.14432658208720386, 0.14301886274293066, 0.1420976461339742] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 22, 0]]
** centroid: 2, normalized-entropy: 0.903116172156872, [(1, 47), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 11, 0]]
** centroid: 3, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 23]]
** centroid: 4, normalized-entropy: 0.8654698974285927, [(2, 57), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 10, 0]]
** centroid: 5, normalized-entropy: 0.5266170655714281, [(1, 74), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.222060022033751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.222060022033751, 0.15562545632291586] ***
*** starting iteration: 2; err: [Inf, 0.222060022033751, 0.15562545632291586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232] ***
*** starting iteration: 3; err: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617] ***
*** starting iteration: 4; err: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617, 0.14016954071540386] ***
*** starting iteration: 5; err: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617, 0.14016954071540386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617, 0.14016954071540386, 0.1398314283899963] ***
*** finished computation of 7 references, err: [Inf, 0.222060022033751, 0.15562545632291586, 0.1451940123718232, 0.14133959702588617, 0.14016954071540386, 0.1398314283899963] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 8, 0]]
** centroid: 2, normalized-entropy: 0.446481346896803, [(1, 78), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 11, 0]]
** centroid: 3, normalized-entropy: 0.7076690004167966, [(1, 46), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 31, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 62), (2, 31)]
*** center 5: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 22]]
** centroid: 6, normalized-entropy: 0.8533728188427888, [(2, 57), (3, 22)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 56, 1]]
** centroid: 7, normalized-entropy: 0.1274185117923586, [(2, 56), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2908751137526706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083] ***
*** starting iteration: 2; err: [Inf, 0.2908751137526706, 0.17179559423495083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385] ***
*** starting iteration: 3; err: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426] ***
*** starting iteration: 4; err: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448] ***
*** starting iteration: 5; err: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448, 0.15195465197693556] ***
*** starting iteration: 6; err: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448, 0.15195465197693556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448, 0.15195465197693556, 0.15095519705861807] ***
*** finished computation of 7 references, err: [Inf, 0.2908751137526706, 0.17179559423495083, 0.16237769297510385, 0.15755417175544426, 0.15367629441991448, 0.15195465197693556, 0.15095519705861807] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 15, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 45), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 9, 0]]
** centroid: 3, normalized-entropy: 0.4761588445580706, [(1, 79), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 36, 0]]
** centroid: 4, normalized-entropy: 0.9764143081154868, [(1, 25), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 2, 0]]
** centroid: 5, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 43, 24]]
** centroid: 6, normalized-entropy: 0.9411864371816836, [(2, 43), (3, 24)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2769317083247006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794] ***
*** starting iteration: 2; err: [Inf, 0.2769317083247006, 0.16810060313902794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442] ***
*** starting iteration: 3; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056] ***
*** starting iteration: 4; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323] ***
*** starting iteration: 5; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223] ***
*** starting iteration: 6; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714] ***
*** starting iteration: 7; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714, 0.14446547194570303] ***
*** starting iteration: 8; err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714, 0.14446547194570303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714, 0.14446547194570303, 0.14420392444636673] ***
*** finished computation of 7 references, err: [Inf, 0.2769317083247006, 0.16810060313902794, 0.15775105703156442, 0.15235382980667056, 0.14952919849008323, 0.14750761638209223, 0.14550913510564714, 0.14446547194570303, 0.14420392444636673] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [42, 37, 0]]
** centroid: 1, normalized-entropy: 0.9971085167216716, [(1, 42), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 19, 0]]
** centroid: 2, normalized-entropy: 0.9065795484987461, [(1, 40), (2, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [6, 56, 0]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(1, 6), (2, 56)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 5, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 28]]
** centroid: 5, normalized-entropy: 0.9143242464317818, [(2, 57), (3, 28)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25580354550294576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664] ***
*** starting iteration: 2; err: [Inf, 0.25580354550294576, 0.18460199411399664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613] ***
*** starting iteration: 3; err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484] ***
*** starting iteration: 4; err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113] ***
*** starting iteration: 5; err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987] ***
*** starting iteration: 6; err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987, 0.1460092576816678] ***
*** starting iteration: 7; err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987, 0.1460092576816678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987, 0.1460092576816678, 0.14509566446673125] ***
*** finished computation of 7 references, err: [Inf, 0.25580354550294576, 0.18460199411399664, 0.16808028933219613, 0.15884407353261484, 0.15182894031098113, 0.14791964488103987, 0.1460092576816678, 0.14509566446673125] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 5, 0]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 59, 19]]
** centroid: 3, normalized-entropy: 0.8009591077369054, [(2, 59), (3, 19)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 49, 1]]
** centroid: 4, normalized-entropy: 0.14144054254182067, [(2, 49), (3, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 20, 0]]
** centroid: 5, normalized-entropy: 0.8014698931335286, [(1, 62), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 36, 0]]
** centroid: 6, normalized-entropy: 0.9998568991526107, [(1, 35), (2, 36)]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19991866323258728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948] ***
*** starting iteration: 2; err: [Inf, 0.19991866323258728, 0.16913213711231948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233] ***
*** starting iteration: 3; err: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095] ***
*** starting iteration: 4; err: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604] ***
*** starting iteration: 5; err: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604, 0.14532392307184636] ***
*** starting iteration: 6; err: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604, 0.14532392307184636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604, 0.14532392307184636, 0.1444433221053332] ***
*** finished computation of 7 references, err: [Inf, 0.19991866323258728, 0.16913213711231948, 0.15884941030666233, 0.1515736064352095, 0.14681800549663604, 0.14532392307184636, 0.1444433221053332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 59, 2]]
** centroid: 1, normalized-entropy: 0.20818094555717087, [(2, 59), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 7, 0]]
** centroid: 2, normalized-entropy: 0.4172806906708316, [(1, 76), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 36, 0]]
** centroid: 3, normalized-entropy: 0.9629004147713269, [(1, 57), (2, 36)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 59, 16]]
** centroid: 4, normalized-entropy: 0.7478061583312324, [(2, 59), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 13, 0]]
** centroid: 5, normalized-entropy: 0.7281342378690551, [(1, 51), (2, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18314003547374158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727] ***
*** starting iteration: 2; err: [Inf, 0.18314003547374158, 0.1584610484726727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592] ***
*** starting iteration: 3; err: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218] ***
*** starting iteration: 4; err: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494] ***
*** starting iteration: 5; err: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494, 0.1402651004679501] ***
*** starting iteration: 6; err: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494, 0.1402651004679501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494, 0.1402651004679501, 0.13933943273313343] ***
*** finished computation of 7 references, err: [Inf, 0.18314003547374158, 0.1584610484726727, 0.15157290476560592, 0.14556938320142218, 0.14228026862442494, 0.1402651004679501, 0.13933943273313343] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 39, 0]]
** centroid: 1, normalized-entropy: 0.9721439323621084, [(1, 58), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 1, 0]]
** centroid: 2, normalized-entropy: 0.1000009430103234, [(1, 76), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 23]]
** centroid: 3, normalized-entropy: 0.8941071841443881, [(2, 51), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 64, 0]]
** centroid: 5, normalized-entropy: 0.19590927087360496, [(1, 2), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 8, 0]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(1, 52), (2, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1839951840341091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839951840341091, 0.15736255178414285] ***
*** starting iteration: 2; err: [Inf, 0.1839951840341091, 0.15736255178414285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197] ***
*** starting iteration: 3; err: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197, 0.15022148867323995] ***
*** starting iteration: 4; err: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197, 0.15022148867323995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197, 0.15022148867323995, 0.14934349723532797] ***
*** finished computation of 7 references, err: [Inf, 0.1839951840341091, 0.15736255178414285, 0.15277746834792197, 0.15022148867323995, 0.14934349723532797] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 42, 0]]
** centroid: 1, normalized-entropy: 0.8948692308065576, [(1, 19), (2, 42)]
*** center 2: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [107, 8, 0]]
** centroid: 4, normalized-entropy: 0.36429902881461246, [(1, 107), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 55, 0]]
** centroid: 5, normalized-entropy: 0.12923377484588472, [(1, 1), (2, 55)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 50, 24]]
** centroid: 6, normalized-entropy: 0.9090221560878149, [(2, 50), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 7, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2864167165309191] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2864167165309191, 0.18660010075010358] ***
*** starting iteration: 2; err: [Inf, 0.2864167165309191, 0.18660010075010358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794] ***
*** starting iteration: 3; err: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794, 0.1526400594972074] ***
*** starting iteration: 4; err: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794, 0.1526400594972074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794, 0.1526400594972074, 0.15171230560843832] ***
*** finished computation of 7 references, err: [Inf, 0.2864167165309191, 0.18660010075010358, 0.15642447032313794, 0.1526400594972074, 0.15171230560843832] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 26]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 20), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 49, 0]]
** centroid: 2, normalized-entropy: 0.4971677614160751, [(1, 6), (2, 49)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [88, 2, 0]]
** centroid: 3, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 17, 0]]
** centroid: 4, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 10, 0]]
** centroid: 5, normalized-entropy: 0.5107878229540133, [(1, 78), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23799249440338463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004] ***
*** starting iteration: 2; err: [Inf, 0.23799249440338463, 0.19265666810330004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457] ***
*** starting iteration: 3; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438] ***
*** starting iteration: 4; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719] ***
*** starting iteration: 5; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752] ***
*** starting iteration: 6; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012] ***
*** starting iteration: 7; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005] ***
*** starting iteration: 8; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207] ***
*** starting iteration: 9; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207, 0.13935940451920031] ***
*** starting iteration: 10; err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207, 0.13935940451920031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207, 0.13935940451920031, 0.1391098042866215] ***
*** finished computation of 7 references, err: [Inf, 0.23799249440338463, 0.19265666810330004, 0.17529119620658457, 0.16197461026534438, 0.1540046059889719, 0.15055066131334752, 0.14649485810264012, 0.143355884952005, 0.14068862178223207, 0.13935940451920031, 0.1391098042866215] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 62, 11]]
** centroid: 1, normalized-entropy: 0.6115516951951333, [(2, 62), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 6]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(2, 56), (3, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 8, 0]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(1, 52), (2, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 1, 0]]
** centroid: 5, normalized-entropy: 0.09408443883267342, [(1, 82), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 30, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 45), (2, 30)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [81, 7, 0]]
** centroid: 7, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1837030280744657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041] ***
*** starting iteration: 2; err: [Inf, 0.1837030280744657, 0.16232278936170041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648] ***
*** starting iteration: 3; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568] ***
*** starting iteration: 4; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866] ***
*** starting iteration: 5; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678] ***
*** starting iteration: 6; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748] ***
*** starting iteration: 7; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948] ***
*** starting iteration: 8; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718] ***
*** starting iteration: 9; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718, 0.1415707897339016] ***
*** starting iteration: 10; err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718, 0.1415707897339016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718, 0.1415707897339016, 0.14020719316136093] ***
*** finished computation of 7 references, err: [Inf, 0.1837030280744657, 0.16232278936170041, 0.1567369162896648, 0.154225879694568, 0.15035836675576866, 0.14807495603896678, 0.14677604804001748, 0.14560259450878948, 0.14369801770895718, 0.1415707897339016, 0.14020719316136093] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 68, 20]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 68), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 14, 0]]
** centroid: 3, normalized-entropy: 0.8256265261578954, [(1, 40), (2, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [81, 2, 0]]
** centroid: 5, normalized-entropy: 0.1638605128691586, [(1, 81), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 13, 0]]
** centroid: 6, normalized-entropy: 0.635489638182683, [(1, 68), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 10, 0]]
** centroid: 7, normalized-entropy: 0.6312630180916119, [(1, 53), (2, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21860963816195728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860963816195728, 0.16589351113513112] ***
*** starting iteration: 2; err: [Inf, 0.21860963816195728, 0.16589351113513112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406] ***
*** starting iteration: 3; err: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386] ***
*** starting iteration: 4; err: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386, 0.15194809563457967] ***
*** starting iteration: 5; err: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386, 0.15194809563457967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386, 0.15194809563457967, 0.15183476749248803] ***
*** finished computation of 7 references, err: [Inf, 0.21860963816195728, 0.16589351113513112, 0.15547701153345406, 0.15295474070869386, 0.15194809563457967, 0.15183476749248803] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 56, 5]]
** centroid: 1, normalized-entropy: 0.4090731390438265, [(2, 56), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 11]]
** centroid: 2, normalized-entropy: 0.887976319515135, [(2, 25), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 9, 0]]
** centroid: 3, normalized-entropy: 0.6226343162547099, [(1, 49), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 10, 0]]
** centroid: 4, normalized-entropy: 0.478723511385963, [(1, 87), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [86, 16, 0]]
** centroid: 6, normalized-entropy: 0.6267511370265896, [(1, 86), (2, 16)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 49, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36009180277958514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331] ***
*** starting iteration: 2; err: [Inf, 0.36009180277958514, 0.2128226160593331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353] ***
*** starting iteration: 3; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675] ***
*** starting iteration: 4; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076] ***
*** starting iteration: 5; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388] ***
*** starting iteration: 6; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158] ***
*** starting iteration: 7; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693] ***
*** starting iteration: 8; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873] ***
*** starting iteration: 9; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873, 0.14896598682552575] ***
*** starting iteration: 10; err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873, 0.14896598682552575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873, 0.14896598682552575, 0.1465192717127502] ***
*** finished computation of 7 references, err: [Inf, 0.36009180277958514, 0.2128226160593331, 0.2002556152064353, 0.18761534655466675, 0.1754308832772076, 0.1666545235477388, 0.16107568034157158, 0.15796257862448693, 0.1529004101920873, 0.14896598682552575, 0.1465192717127502] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 29, 0]]
** centroid: 1, normalized-entropy: 0.99919835426364, [(1, 31), (2, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 75, 20]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 75), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [22, 55, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 22), (2, 55)]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 7, 0]]
** centroid: 6, normalized-entropy: 0.6152538910563409, [(1, 39), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [79, 1, 0]]
** centroid: 7, normalized-entropy: 0.09694460606247329, [(1, 79), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3152843794059008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788] ***
*** starting iteration: 2; err: [Inf, 0.3152843794059008, 0.18616813992615788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338] ***
*** starting iteration: 3; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953] ***
*** starting iteration: 4; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635] ***
*** starting iteration: 5; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456] ***
*** starting iteration: 6; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054] ***
*** starting iteration: 7; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333] ***
*** starting iteration: 8; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025] ***
*** starting iteration: 9; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025, 0.15267016757652163] ***
*** starting iteration: 10; err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025, 0.15267016757652163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025, 0.15267016757652163, 0.15161289888434112] ***
*** finished computation of 7 references, err: [Inf, 0.3152843794059008, 0.18616813992615788, 0.1720037292726338, 0.1661847957856953, 0.1631602366268635, 0.1605433190241456, 0.15763064017659054, 0.15564772507548333, 0.15401720033586025, 0.15267016757652163, 0.15161289888434112] ***
*** center 1: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 39, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 26), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [93, 19, 0]]
** centroid: 4, normalized-entropy: 0.6568871346605055, [(1, 93), (2, 19)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 28]]
** centroid: 5, normalized-entropy: 0.9143242464317818, [(2, 57), (3, 28)]
*** center 6: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 53, 0]]
** centroid: 7, normalized-entropy: 0.36657801255334593, [(1, 4), (2, 53)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2025871693752706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025871693752706, 0.15674787064176052] ***
*** starting iteration: 2; err: [Inf, 0.2025871693752706, 0.15674787064176052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915] ***
*** starting iteration: 3; err: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915, 0.15046325670555233] ***
*** starting iteration: 4; err: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915, 0.15046325670555233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915, 0.15046325670555233, 0.14992891213297843] ***
*** finished computation of 7 references, err: [Inf, 0.2025871693752706, 0.15674787064176052, 0.1516463819257915, 0.15046325670555233, 0.14992891213297843] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 11, 0]]
** centroid: 1, normalized-entropy: 0.7522121733341471, [(1, 40), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 82, 19]]
** centroid: 3, normalized-entropy: 0.6975195309289136, [(2, 82), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [91, 17, 0]]
** centroid: 6, normalized-entropy: 0.6280710155029396, [(1, 91), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 38, 0]]
** centroid: 7, normalized-entropy: 0.9995256892936492, [(1, 40), (2, 38)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 331,3 => 44,1 => 625), Dict(2 => 361,3 => 41,1 => 598))
[ Info: ===== scores for single classifier: {"micro_f1":0.934,"precision":0.934,"recall":0.934,"macro_recall":0.9555258062424147,"macro_f1":0.8895160723694376,"accuracy":0.934,"class_f1":{"2":0.9115281501340482,"3":0.7961165048543689,"1":0.9609035621198958},"class_precision":{"2":0.8831168831168831,"3":0.6612903225806451,"1":1.0},"class_recall":{"2":0.9418282548476454,"3":1.0,"1":0.9247491638795987}}
[ Info: ===== scores for 1: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9384329691785416,"macro_f1":0.9533085961657392,"accuracy":0.975,"class_f1":{"2":0.9659863945578232,"3":0.9090909090909091,"1":0.984848484848485},"class_precision":{"2":0.9491978609625669,"3":0.9722222222222222,"1":0.9915254237288136},"class_recall":{"2":0.9833795013850416,"3":0.8536585365853658,"1":0.9782608695652174}}
[ Info: ===== scores for 5: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9851582838455054,"macro_f1":0.97144786201223,"accuracy":0.976,"class_f1":{"2":0.9674796747967479,"3":0.9647058823529412,"1":0.9821580288870009},"class_precision":{"2":0.946949602122016,"3":0.9318181818181818,"1":0.998272884283247},"class_recall":{"2":0.9889196675900277,"3":1.0,"1":0.9665551839464883}}
[ Info: ===== scores for 7: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9831200956095572,"macro_f1":0.9692539532727841,"accuracy":0.973,"class_f1":{"2":0.9634641407307172,"3":0.9647058823529412,"1":0.9795918367346939},"class_precision":{"2":0.9417989417989417,"3":0.9318181818181818,"1":0.9965397923875432},"class_recall":{"2":0.9861495844875346,"3":1.0,"1":0.9632107023411371}}
[ Info: ===== scores for 9: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9818307871421204,"macro_f1":0.9616480169714067,"accuracy":0.972,"class_f1":{"2":0.9619565217391304,"3":0.9425287356321839,"1":0.9804587935429057},"class_precision":{"2":0.944,"3":0.8913043478260869,"1":0.9965457685664939},"class_recall":{"2":0.9806094182825484,"3":1.0,"1":0.9648829431438127}}
[ Info: ===== scores for 11: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9809074261079561,"macro_f1":0.9543950164335397,"accuracy":0.971,"class_f1":{"2":0.9605442176870749,"3":0.9213483146067416,"1":0.9812925170068028},"class_precision":{"2":0.9438502673796791,"3":0.8541666666666666,"1":0.9982698961937716},"class_recall":{"2":0.9778393351800554,"3":1.0,"1":0.9648829431438127}}
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.978,"k":5,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9776026010475505,"macro_f1":0.9655644975752279,"accuracy":0.978,"class_f1":{"2":0.96986301369863,"3":0.9411764705882352,"1":0.9856540084388186},"class_precision":{"2":0.959349593495935,"3":0.9090909090909091,"1":0.9948892674616695},"class_recall":{"2":0.9806094182825484,"3":0.975609756097561,"1":0.9765886287625418}}
Test Summary: | Pass  Total
AKNC          |    8      8
[72, 1, 2, 1, 7, 2, 1, 3, 1, 4, 2, 2, 3, 1, 1, 6, 1, 2, 23, 5, 19, 5, 4, 5, 8, 25, 7, 24, 8, 30, 21, 8, 13, 4, 7, 14, 10, 6, 32, 1, 3, 2, 4, 53, 4, 1, 8, 4, 8, 29, 3, 51, 30, 10, 12, 39, 8, 14, 24, 2, 55, 6, 43, 11, 31, 9, 38, 1, 7, 5, 11, 19, 12, 51, 14, 17, 32, 24, 7, 6, 36, 58, 3, 4, 19, 5, 7, 13, 5, 34, 8, 29, 11, 5, 23, 4, 30, 13, 38, 18, 3, 6, 7, 4, 7, 26, 23, 52, 15, 10, 1712, 5, 35, 6, 40, 8, 53, 28, 5, 19, 4, 17, 8, 86, 3, 26, 56, 23, 15, 30, 3, 5, 1, 15, 16, 33, 6, 5, 14, 17, 24, 195, 54, 18, 7, 49, 14, 6, 24, 9, 51, 9, 8, 3, 8, 14, 5, 46, 8, 49, 11, 10, 11, 7, 22, 53, 27, 23, 154, 38, 9, 7, 68, 28, 14, 168, 10, 69, 80, 46, 32, 57, 23, 11, 106, 203, 7, 24, 20, 6, 2, 2, 4, 37, 4, 50, 88, 9, 13, 9, 4, 5, 54, 340, 2, 40, 46, 23, 95, 35, 12, 3, 31, 32, 21, 31, 5, 62, 69, 136, 17, 58, 7, 48, 38, 97, 2, 25, 9, 15, 51, 10, 16, 39, 11, 26, 23, 78, 13, 8, 31, 94, 10, 134, 14, 78, 127, 8, 26, 2, 14, 27, 74, 6, 3, 5, 11, 7, 22, 39, 44, 37, 47, 48, 21, 77, 25, 79, 5, 25, 29, 1, 5, 61, 181, 30, 2, 13, 3, 106, 54, 3, 58, 39, 55, 36, 16, 132, 33, 45, 4, 8, 23, 2, 61, 2, 35, 14, 34, 66]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6579999999999999, speedup = 0.34274654576082864, eval_ratio = 0.108868)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.40104166666666685,"f1":null,"seconds":0.0002967342734336853,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":668.1171875,"distances_sum":1710.7685066809581}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5727926587301585,"recall":0.5720486111111108,"f1":null,"seconds":0.0004547908902168274,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":881.7421875,"distances_sum":1661.1381722260503}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6640624999999994,"recall":0.6640624999999994,"f1":null,"seconds":0.000611964613199234,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":1083.0390625,"distances_sum":1616.6580345140642}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7291666666666662,"recall":0.7291666666666662,"f1":null,"seconds":0.0009013954550027847,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":1181.296875,"distances_sum":1589.932256811166}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7821180555555549,"recall":0.7821180555555549,"f1":0.7821180555555549,"seconds":0.0007660165429115295,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":1351.6875,"distances_sum":1572.4085397720535}
KCenters.DeloneInvIndex> reached performance {"precision":0.8307291666666661,"recall":0.8307291666666661,"f1":0.8307291666666661,"seconds":0.0008456986397504807,"exhaustive_search_seconds":0.00048028863966464996,"evaluations":1501.265625,"distances_sum":1557.220646351239}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8259999999999998, speedup = 0.501340798817266, eval_ratio = 0.154494)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
