Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
   Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_ndTX4o/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.020903365766052767 0.047511581749051776; -0.020903365766052767 0.0 0.2187650409557268; -0.047511581749051776 -0.2187650409557268 0.0])
dAA = so3([0.0 0.163699160115264 0.17284030693918095; -0.163699160115264 0.0 0.16225686413471763; -0.17284030693918095 -0.16225686413471763 0.0])
dAA = so3([0.0 0.03385398328850389 0.07682286693473718; -0.03385398328850389 0.0 -0.1593719735542875; -0.07682286693473718 0.1593719735542875 0.0])
dAA = Quaternion(0.9931282233500509, [-0.11263705752689973, 0.0032301500220956007, 0.03160366099186101])
dAA = SO3([0.9608597274431837 0.06561935230269034 0.2691517876239837; -0.06341680856679588 0.9978443660357449 -0.01687985669147144; -0.26967924015209804 -0.0008495728913138195 0.9629498354830793])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8304270194570246 0.2908565634007171 0.4751772562764839; -0.45868766666344274 0.8410388932243125 0.2868086549162525; -0.31622237398161607 -0.456131603389579 0.8318337397477231]), [-2.1876504095572677, 0.47511581749051773, -0.20903365766052764])
xj = SE3(SO3([0.9877362366999587 -0.1557735468591205 -0.010570184895851093; 0.13723979287225815 0.8339469824251312 0.5345069407934733; -0.07444706819064653 -0.529402524175081 0.8450979833338085]), [1.593719735542875, 0.7682286693473718, -0.3385398328850389])
Dx = SE3(SO3([0.780834487325712 -0.344470834731567 -0.5211883991630375; 0.43667123143797804 0.8975513107888732 0.06099082009298867; 0.44678377212834414 -0.27521171581259574 0.8512595212050523]), [3.046657439146774, 1.4054274932194168, 1.7731607872367974])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
