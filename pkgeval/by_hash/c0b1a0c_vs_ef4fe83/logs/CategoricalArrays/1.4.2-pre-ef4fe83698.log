Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ────────── v0.4.3
  Installed DataAPI ─────────── v1.3.0
  Installed Parsers ─────────── v1.0.3
  Installed CategoricalArrays ─ v0.8.0
  Installed JSON ────────────── v0.21.0
   Updating `~/.julia/environments/v1.4/Project.toml`
  [324d7699] + CategoricalArrays v0.8.0
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.8.0
  [9a962f9c] + DataAPI v1.3.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [69de0a69] + Parsers v1.0.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
    Testing CategoricalArrays
Status `/tmp/jl_n7IWhU/Manifest.toml`
  [324d7699] CategoricalArrays v0.8.0
  [9a962f9c] DataAPI v1.3.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [69de0a69] Parsers v1.0.3
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [de0858da] Printf 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
01_value.jl   |   58     58
Test Summary:      | Pass  Total
04_constructors.jl |   70     70
Test Summary: | Pass  Total
05_convert.jl |   73     73
Test Summary: | Pass  Total
05_copy.jl    |   12     12
Test Summary: | Pass  Total
06_show.jl    |   67     67
Test Summary: | Pass  Total
07_levels.jl  |  168    168
Test Summary:  | Pass  Total
08_equality.jl |  110    110
┌ Warning: `isempty(x::CategoricalValue{String})` is deprecated, use `isempty(String(x))` instead.
│   caller = eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at Test.jl:258
└ @ Test /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
┌ Warning: `eltype(x::CategoricalValue{String})` is deprecated, use `eltype(get(x))` instead.
│   caller = top-level scope at 08_string.jl:31
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:31
┌ Warning: `eltype(x::CategoricalValue{String})` is deprecated, use `eltype(get(x))` instead.
│   caller = top-level scope at 08_string.jl:32
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:32
┌ Warning: `length(x::CategoricalValue{String})` is deprecated, use `length(String(x))` instead.
│   caller = top-level scope at 08_string.jl:34
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:34
┌ Warning: `length(x::CategoricalValue{String})` is deprecated, use `length(String(x))` instead.
│   caller = top-level scope at 08_string.jl:35
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:35
┌ Warning: `sizeof(x::CategoricalValue{String})` is deprecated, use `sizeof(String(x))` instead.
│   caller = top-level scope at 08_string.jl:37
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:37
┌ Warning: `sizeof(x::CategoricalValue{String})` is deprecated, use `sizeof(String(x))` instead.
│   caller = top-level scope at 08_string.jl:38
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:38
┌ Warning: `nextind(x::CategoricalValue{String}, i::Int, j::Int = 1)` is deprecated, use `nextind(String(x), i, j)` instead.
│   caller = nextind(::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `prevind(x::CategoricalValue{String}, i::Int, j::Int = 1)` is deprecated, use `prevind(String(x), i, j)` instead.
│   caller = prevind(::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `firstindex(x::CategoricalValue{String})` is deprecated, use `firstindex(String(x))` instead.
│   caller = top-level scope at 08_string.jl:46
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:46
┌ Warning: `firstindex(x::CategoricalValue{String})` is deprecated, use `firstindex(String(x))` instead.
│   caller = top-level scope at 08_string.jl:47
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:47
┌ Warning: `lastindex(x::CategoricalValue{String})` is deprecated, use `lastindex(String(x))` instead.
│   caller = top-level scope at 08_string.jl:49
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:49
┌ Warning: `lastindex(x::CategoricalValue{String})` is deprecated, use `lastindex(String(x))` instead.
│   caller = top-level scope at 08_string.jl:50
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:50
┌ Warning: `collect(x::CategoricalValue{String})` is deprecated, use `collect(String(x))` instead.
│   caller = top-level scope at 08_string.jl:52
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:52
┌ Warning: `collect(x::CategoricalValue{String})` is deprecated, use `collect(String(x))` instead.
│   caller = top-level scope at 08_string.jl:53
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:53
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:55
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:55
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:56
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:56
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:57
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:57
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:58
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:58
┌ Warning: `codeunit(x::CategoricalValue{String}, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:60
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:60
┌ Warning: `codeunit(x::CategoricalValue{String}, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:61
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:61
┌ Warning: `codeunit(x::CategoricalValue{String}, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:62
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:62
┌ Warning: `codeunit(x::CategoricalValue{String}, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:63
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:63
┌ Warning: `ascii(x::CategoricalValue{String})` is deprecated, use `ascii(String(x))` instead.
│   caller = top-level scope at 08_string.jl:65
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:65
┌ Warning: `ascii(x::CategoricalValue{String})` is deprecated, use `ascii(String(x))` instead.
│   caller = top-level scope at 08_string.jl:66
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:66
┌ Warning: `normalize(x::CategoricalValue{String}; kwargs...)` is deprecated, use `normalize(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:68
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:68
┌ Warning: `normalize(x::CategoricalValue{String}; kwargs...)` is deprecated, use `normalize(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:69
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:69
┌ Warning: `normalize(x::CategoricalValue{String}, s::Symbol)` is deprecated, use `normalize(String(x), s)` instead.
│   caller = top-level scope at 08_string.jl:70
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:70
┌ Warning: `graphemes(x::CategoricalValue{String})` is deprecated, use `graphemes(String(x))` instead.
│   caller = top-level scope at 08_string.jl:72
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:72
┌ Warning: `graphemes(x::CategoricalValue{String})` is deprecated, use `graphemes(String(x))` instead.
│   caller = top-level scope at 08_string.jl:73
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:73
┌ Warning: `isvalid(x::CategoricalValue{String})` is deprecated, use `isvalid(String(x))` instead.
│   caller = top-level scope at 08_string.jl:75
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:75
┌ Warning: `isvalid(x::CategoricalValue{String})` is deprecated, use `isvalid(String(x))` instead.
│   caller = top-level scope at 08_string.jl:76
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:76
┌ Warning: `isvalid(x::CategoricalValue{String}, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:77
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:77
┌ Warning: `isvalid(x::CategoricalValue{String}, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:78
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:78
┌ Warning: `isvalid(x::CategoricalValue{String}, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:79
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:79
┌ Warning: `length(x::CategoricalValue{String}, i::Int, j::Int)` is deprecated, use `length(String(x), i, j)` instead.
│   caller = top-level scope at 08_string.jl:81
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:81
┌ Warning: `length(x::CategoricalValue{String}, i::Int, j::Int)` is deprecated, use `length(String(x), i, j)` instead.
│   caller = top-level scope at 08_string.jl:82
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:82
┌ Warning: `nextind(x::CategoricalValue{String}, i::Int, j::Int = 1)` is deprecated, use `nextind(String(x), i, j)` instead.
│   caller = top-level scope at 08_string.jl:84
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:84
┌ Warning: `nextind(x::CategoricalValue{String}, i::Int, j::Int = 1)` is deprecated, use `nextind(String(x), i, j)` instead.
│   caller = top-level scope at 08_string.jl:85
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:85
┌ Warning: `x::AbstractString * y::CategoricalValue{String}` is deprecated, use `x * String(y)` instead.
│   caller = top-level scope at 08_string.jl:99
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:99
┌ Warning: `x::AbstractString * y::CategoricalValue{String}` is deprecated, use `x * String(y)` instead.
│   caller = *(::String, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::String) at operators.jl:529
└ @ Base ./operators.jl:529
┌ Warning: `x::AbstractString * y::CategoricalValue{String}` is deprecated, use `x * String(y)` instead.
│   caller = *(::String, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::CategoricalArrays.CategoricalValue{String,UInt32}) at operators.jl:529
└ @ Base ./operators.jl:529
┌ Warning: `x::AbstractString * y::CategoricalValue{String}` is deprecated, use `x * String(y)` instead.
│   caller = *(::String, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::CategoricalArrays.CategoricalValue{String,UInt32}) at operators.jl:529
└ @ Base ./operators.jl:529
┌ Warning: `x::CategoricalValue{String} ^ n::Integer` is deprecated, use `String(x) ^ n` instead.
│   caller = macro expansion at none:0 [inlined]
└ @ Core ./none:0
┌ Warning: `x::CategoricalValue{String} ^ n::Integer` is deprecated, use `String(x) ^ n` instead.
│   caller = macro expansion at none:0 [inlined]
└ @ Core ./none:0
┌ Warning: `repeat(x::CategoricalValue{String}, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:108
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:108
┌ Warning: `repeat(x::CategoricalValue{String}, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = top-level scope at 08_string.jl:109
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:109
┌ Warning: `eachmatch(r::Regex, x::CategoricalValue{String}; overlap = false)` is deprecated, use `eachmatch(r, String(x), overlap = overlap)` instead.
│   caller = top-level scope at 08_string.jl:111
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:111
┌ Warning: `eachmatch(r::Regex, x::CategoricalValue{String}; overlap = false)` is deprecated, use `eachmatch(r, String(x), overlap = overlap)` instead.
│   caller = top-level scope at 08_string.jl:112
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:112
┌ Warning: `firstindex(x::CategoricalValue{String})` is deprecated, use `firstindex(String(x))` instead.
│   caller = match(::Regex, ::CategoricalArrays.CategoricalValue{String,UInt32}) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `match(r::Regex, s::CategoricalValue{String}, idx::Integer = firstindex(s), add_opts::UInt32 = UInt32(0); kwargs...)` is deprecated, use `match(r, String(s), idx, add_opts; kwargs...)` instead.
│   caller = match(::Regex, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `match(r::Regex, s::CategoricalValue{String}, idx::Integer = firstindex(s), add_opts::UInt32 = UInt32(0); kwargs...)` is deprecated, use `match(r, String(s), idx, add_opts; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:117
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:117
┌ Warning: `eachmatch(r::Regex, x::CategoricalValue{String}; overlap = false)` is deprecated, use `eachmatch(r, String(x), overlap = overlap)` instead.
│   caller = top-level scope at 08_string.jl:119
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:119
┌ Warning: `eachmatch(r::Regex, x::CategoricalValue{String}; overlap = false)` is deprecated, use `eachmatch(r, String(x), overlap = overlap)` instead.
│   caller = top-level scope at 08_string.jl:120
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:120
┌ Warning: `eachmatch(r::Regex, x::CategoricalValue{String}; overlap = false)` is deprecated, use `eachmatch(r, String(x), overlap = overlap)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `lpad(x::CategoricalValue{String}, n::Integer, c::Union{AbstractChar, AbstractString} = ' ')` is deprecated, use `lpad(String(x), n)` instead.
│   caller = lpad(::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `rpad(x::CategoricalValue{String}, n::Integer, c::Union{AbstractChar, AbstractString} = ' ')` is deprecated, use `rpad(String(x), n)` instead.
│   caller = rpad(::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at deprecated.jl:66
└ @ CategoricalArrays ./deprecated.jl:66
┌ Warning: `findfirst(needle::AbstractString, haystack::CategoricalValue{String})` is deprecated, use `findfirst(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:131
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:131
┌ Warning: `findfirst(needle::AbstractString, haystack::CategoricalValue{String})` is deprecated, use `findfirst(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:132
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:132
┌ Warning: `findfirst(needle::Base.Fix2, haystack::CategoricalValue{String})` is deprecated, use `findfirst(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:133
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:133
┌ Warning: `keys(x::CategoricalValue{String})` is deprecated, use `keys(String(x))` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at array.jl:1728
└ @ Base ./array.jl:1728
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at array.jl:1732
└ @ Base ./array.jl:1732
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at array.jl:1732
└ @ Base ./array.jl:1732
┌ Warning: `findlast(needle::AbstractString, haystack::CategoricalValue{String})` is deprecated, use `findlast(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:136
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:136
┌ Warning: `findlast(needle::AbstractString, haystack::CategoricalValue{String})` is deprecated, use `findlast(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:137
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:137
┌ Warning: `findlast(needle::Base.Fix2, haystack::CategoricalValue{String})` is deprecated, use `findlast(needle, String(haystack))` instead.
│   caller = top-level scope at 08_string.jl:138
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:138
┌ Warning: `keys(x::CategoricalValue{String})` is deprecated, use `keys(String(x))` instead.
│   caller = findprev(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at array.jl:1919
└ @ Base ./array.jl:1919
┌ Warning: `getindex(x::CategoricalValue{String}, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = findprev(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalValue{String,UInt32}, ::Int64) at array.jl:1922
└ @ Base ./array.jl:1922
┌ Warning: `occursin(x::AbstractString, y::CategoricalValue{String})` is deprecated, use `occursin(x, String(y))` instead.
│   caller = eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at Test.jl:258
└ @ Test /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
┌ Warning: `startswith(x::CategoricalValue{String}, y::AbstractString)` is deprecated, use `startswith(String(x), y)` instead.
│   caller = eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at Test.jl:258
└ @ Test /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
┌ Warning: `endswith(x::CategoricalValue{String}, y::AbstractString)` is deprecated, use `endswith(String(x), y)` instead.
│   caller = eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at Test.jl:258
└ @ Test /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
┌ Warning: `reverse(x::CategoricalValue{String})` is deprecated, use `reverse(String(x))` instead.
│   caller = top-level scope at 08_string.jl:156
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:156
┌ Warning: `reverse(x::CategoricalValue{String})` is deprecated, use `reverse(String(x))` instead.
│   caller = top-level scope at 08_string.jl:157
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:157
┌ Warning: `replace(x::CategoricalValue{String}, old_new::Pair...; kwargs...)` is deprecated, use `replace(String(x), old_new...; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:159
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:159
┌ Warning: `replace(x::CategoricalValue{String}, old_new::Pair...; kwargs...)` is deprecated, use `replace(String(x), old_new...; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:160
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:160
┌ Warning: `replace(x::CategoricalValue{String}, old_new::Pair...; kwargs...)` is deprecated, use `replace(String(x), old_new...; kwargs...)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `split(x::CategoricalValue{String}; kwargs...)` is deprecated, use `split(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:163
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:163
┌ Warning: `split(x::CategoricalValue{String}, dlm; kwargs...)` is deprecated, use `split(String(x), dlm; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:164
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:164
┌ Warning: `split(x::CategoricalValue{String}; kwargs...)` is deprecated, use `split(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:165
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:165
┌ Warning: `split(x::CategoricalValue{String}, dlm; kwargs...)` is deprecated, use `split(String(x), dlm; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:166
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:166
┌ Warning: `rsplit(x::CategoricalValue{String}, dlm; kwargs...)` is deprecated, use `rsplit(String(x), dlm; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:168
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:168
┌ Warning: `rsplit(x::CategoricalValue{String}, dlm; kwargs...)` is deprecated, use `rsplit(String(x), dlm; kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:169
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:169
┌ Warning: `strip(x::CategoricalValue{String})` is deprecated, use `strip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:171
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:171
┌ Warning: `strip(x::CategoricalValue{String})` is deprecated, use `strip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:172
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:172
┌ Warning: `strip(x::CategoricalValue{String}, chars::Base.Chars)` is deprecated, use `strip(String(x), chars)` instead.
│   caller = top-level scope at 08_string.jl:173
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:173
┌ Warning: `lstrip(x::CategoricalValue{String})` is deprecated, use `lstrip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:175
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:175
┌ Warning: `lstrip(x::CategoricalValue{String})` is deprecated, use `lstrip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:176
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:176
┌ Warning: `lstrip(x::CategoricalValue{String}, chars::Base.Chars)` is deprecated, use `lstrip(String(x), chars)` instead.
│   caller = top-level scope at 08_string.jl:177
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:177
┌ Warning: `rstrip(x::CategoricalValue{String})` is deprecated, use `rstrip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:179
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:179
┌ Warning: `rstrip(x::CategoricalValue{String})` is deprecated, use `rstrip(String(x))` instead.
│   caller = top-level scope at 08_string.jl:180
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:180
┌ Warning: `rstrip(x::CategoricalValue{String}, chars::Base.Chars)` is deprecated, use `rstrip(String(x), chars)` instead.
│   caller = top-level scope at 08_string.jl:181
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:181
┌ Warning: `uppercase(x::CategoricalValue{String})` is deprecated, use `uppercase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:183
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:183
┌ Warning: `uppercase(x::CategoricalValue{String})` is deprecated, use `uppercase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:184
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:184
┌ Warning: `lowercase(x::CategoricalValue{String})` is deprecated, use `lowercase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:186
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:186
┌ Warning: `lowercase(x::CategoricalValue{String})` is deprecated, use `lowercase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:187
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:187
┌ Warning: `titlecase(x::CategoricalValue{String})` is deprecated, use `titlecase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:189
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:189
┌ Warning: `titlecase(x::CategoricalValue{String})` is deprecated, use `titlecase(String(x))` instead.
│   caller = top-level scope at 08_string.jl:190
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:190
┌ Warning: `uppercasefirst(x::CategoricalValue{String})` is deprecated, use `uppercasefirst(String(x))` instead.
│   caller = top-level scope at 08_string.jl:192
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:192
┌ Warning: `uppercasefirst(x::CategoricalValue{String})` is deprecated, use `uppercasefirst(String(x))` instead.
│   caller = top-level scope at 08_string.jl:193
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:193
┌ Warning: `lowercasefirst(x::CategoricalValue{String})` is deprecated, use `lowercasefirst(String(x))` instead.
│   caller = top-level scope at 08_string.jl:195
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:195
┌ Warning: `lowercasefirst(x::CategoricalValue{String})` is deprecated, use `lowercasefirst(String(x))` instead.
│   caller = top-level scope at 08_string.jl:196
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:196
┌ Warning: `chop(x::CategoricalValue{String}; kwargs...)` is deprecated, use `chop(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:202
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:202
┌ Warning: `chop(x::CategoricalValue{String}; kwargs...)` is deprecated, use `chop(String(x); kwargs...)` instead.
│   caller = top-level scope at 08_string.jl:204
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:204
┌ Warning: `chomp(x::CategoricalValue{String})` is deprecated, use `chomp(String(x))` instead.
│   caller = top-level scope at 08_string.jl:206
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:206
┌ Warning: `chomp(x::CategoricalValue{String})` is deprecated, use `chomp(String(x))` instead.
│   caller = top-level scope at 08_string.jl:207
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:207
┌ Warning: `textwidth(x::CategoricalValue{String})` is deprecated, use `textwidth(String(x))` instead.
│   caller = top-level scope at 08_string.jl:209
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:209
┌ Warning: `textwidth(x::CategoricalValue{String})` is deprecated, use `textwidth(String(x))` instead.
│   caller = top-level scope at 08_string.jl:210
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:210
┌ Warning: `isascii(x::CategoricalValue{String})` is deprecated, use `isascii(String(x))` instead.
│   caller = top-level scope at 08_string.jl:212
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:212
┌ Warning: `isascii(x::CategoricalValue{String})` is deprecated, use `isascii(String(x))` instead.
│   caller = top-level scope at 08_string.jl:213
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:213
┌ Warning: `escape_string(x::CategoricalValue{String})` is deprecated, use `escape_string(String(x))` instead.
│   caller = top-level scope at 08_string.jl:215
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:215
┌ Warning: `escape_string(x::CategoricalValue{String})` is deprecated, use `escape_string(String(x))` instead.
│   caller = top-level scope at 08_string.jl:216
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:216
┌ Warning: `collect(x::CategoricalValue{String})` is deprecated, use `collect(String(x))` instead.
│   caller = top-level scope at 08_string.jl:218
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:218
┌ Warning: `collect(x::CategoricalValue{String})` is deprecated, use `collect(String(x))` instead.
│   caller = top-level scope at 08_string.jl:219
└ @ Core ~/.julia/packages/CategoricalArrays/i7Sbk/test/08_string.jl:219
Test Summary: | Pass  Total
08_string.jl  |  149    149
Test Summary: | Pass  Total
09_hash.jl    |   54     54
Test Summary: | Pass  Total
10_isless.jl  |  161    161
Test Summary: | Pass  Total
11_array.jl   | 9014   9014
Test Summary:      |  Pass  Total
12_missingarray.jl | 12652  12652
Test Summary:     |  Pass  Total
13_arraycommon.jl | 22435  22435
Test Summary: | Pass  Total
14_view.jl    |  158    158
Test Summary: | Pass  Total
15_extras.jl  |  130    130
Test Summary: | Pass  Total
16_recode.jl  |  808    808
WARNING: replacing module TestExtras.
┌ Warning: `categorical(A::AbstractArray, compress::Bool; kwargs...)` is deprecated, use `categorical(A; compress = compress, kwargs...)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: allow_missing argument is deprecated, use allowmissing instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: allow_missing argument is deprecated, use allowmissing instead
│   caller = ip:0x0
└ @ Core :-1
Test Summary:    | Pass  Total
17_deprecated.jl |   14     14
    Testing CategoricalArrays tests passed 
