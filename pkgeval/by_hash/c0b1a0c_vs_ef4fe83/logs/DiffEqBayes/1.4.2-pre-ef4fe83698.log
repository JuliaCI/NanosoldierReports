Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DiffEqBayes ────────────────── v2.13.1
  Installed MuladdMacro ────────────────── v0.2.2
  Installed ArgCheck ───────────────────── v2.0.0
  Installed RecipesBase ────────────────── v1.0.1
  Installed RandomNumbers ──────────────── v1.4.0
  Installed MLStyle ────────────────────── v0.3.1
  Installed DiffResults ────────────────── v1.0.2
  Installed ZygoteRules ────────────────── v0.2.0
  Installed JuliaVariables ─────────────── v0.2.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed BinaryProvider ─────────────── v0.5.9
  Installed SafeTestsets ───────────────── v0.0.1
  Installed ChainRulesCore ─────────────── v0.7.5
  Installed LogDensityProblems ─────────── v0.10.3
  Installed EzXML ──────────────────────── v1.1.0
  Installed Unitful ────────────────────── v1.2.0
  Installed Intervals ──────────────────── v1.1.0
  Installed Adapt ──────────────────────── v1.0.1
  Installed NLSolversBase ──────────────── v7.6.1
  Installed Libtask ────────────────────── v0.4.0
  Installed TimerOutputs ───────────────── v0.5.5
  Installed ExprTools ──────────────────── v0.1.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed ApproxBayes ────────────────── v0.3.2
  Installed InplaceOps ─────────────────── v0.3.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed TransformVariables ─────────── v0.3.8
  Installed Reexport ───────────────────── v0.2.0
  Installed ModelingToolkit ────────────── v3.3.0
  Installed RangeArrays ────────────────── v0.3.2
  Installed ConstructionBase ───────────── v1.0.0
  Installed PoissonRandom ──────────────── v0.4.0
  Installed Missings ───────────────────── v0.4.3
  Installed OpenBLAS_jll ───────────────── v0.3.9+4
  Installed AdvancedMH ─────────────────── v0.5.0
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed GeneralizedGenerated ───────── v0.2.3
  Installed IterativeSolvers ───────────── v0.8.4
  Installed AdvancedHMC ────────────────── v0.2.24
  Installed DistributionsAD ────────────── v0.5.2
  Installed ArrayInterface ─────────────── v2.8.7
  Installed DynamicPPL ─────────────────── v0.7.3
  Installed ForwardDiff ────────────────── v0.10.10
  Installed NameResolution ─────────────── v0.1.3
  Installed DiffEqBase ─────────────────── v6.32.2
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed UnPack ─────────────────────── v1.0.0
  Installed Roots ──────────────────────── v1.0.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed ProgressLogging ────────────── v0.1.2
  Installed NNlib ──────────────────────── v0.6.6
  Installed Parameters ─────────────────── v0.12.1
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed IntervalSets ───────────────── v0.5.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Polynomials ────────────────── v0.8.0
  Installed Optim ──────────────────────── v0.20.6
  Installed StructArrays ───────────────── v0.4.3
  Installed Arpack ─────────────────────── v0.4.0
  Installed DataStructures ─────────────── v0.17.15
  Installed SymbolicUtils ──────────────── v0.3.2
  Installed LabelledArrays ─────────────── v1.2.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed MCMCChains ─────────────────── v3.0.12
  Installed EllipsisNotation ───────────── v0.4.0
  Installed Tables ─────────────────────── v1.0.4
  Installed FunctionWrappers ───────────── v1.1.1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Bijectors ──────────────────── v0.7.1
  Installed StaticArrays ───────────────── v0.12.3
  Installed Latexify ───────────────────── v0.13.1
  Installed ProgressMeter ──────────────── v1.2.0
  Installed DataValueInterfaces ────────── v1.0.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed TreeViews ──────────────────── v0.3.0
  Installed PrettyPrint ────────────────── v0.1.0
  Installed Parsers ────────────────────── v0.3.12
  Installed CanonicalTraits ────────────── v0.2.1
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed Combinatorics ──────────────── v1.0.1
  Installed MappedArrays ───────────────── v0.2.2
  Installed IterTools ──────────────────── v1.3.0
  Installed Formatting ─────────────────── v0.4.1
  Installed Turing ─────────────────────── v0.12.0
  Installed TerminalLoggers ────────────── v0.1.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Mocking ────────────────────── v0.7.1
  Installed AxisArrays ─────────────────── v0.4.3
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed TimeZones ──────────────────── v1.1.1
  Installed OrderedCollections ─────────── v1.2.0
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed DiffEqJump ─────────────────── v6.6.3
  Installed StatsBase ──────────────────── v0.33.0
  Installed RecursiveFactorization ─────── v0.1.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed RecursiveArrayTools ────────── v2.3.2
  Installed QuadGK ─────────────────────── v2.3.1
  Installed Compat ─────────────────────── v3.9.1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed FiniteDiff ─────────────────── v2.3.1
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Distances ──────────────────── v0.8.2
  Installed LoggingExtras ──────────────── v0.4.0
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed Tracker ────────────────────── v0.2.6
  Installed DocStringExtensions ────────── v0.8.1
  Installed Distributions ──────────────── v0.23.2
  Installed JSON ───────────────────────── v0.21.0
  Installed TableTraits ────────────────── v1.0.0
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed FillArrays ─────────────────── v0.8.9
  Installed DynamicHMC ─────────────────── v2.1.5
   Updating `~/.julia/environments/v1.4/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.13.1
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.0.1
  [0bf59076] + AdvancedHMC v0.2.24
  [5b7e9947] + AdvancedMH v0.5.0
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.0.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.8.7
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.1
  [b99e7846] + BinaryProvider v0.5.9
  [a603d957] + CanonicalTraits v0.2.1
  [d360d2e6] + ChainRulesCore v0.7.5
  [861a8166] + Combinatorics v1.0.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.9.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.32.2
  [ebbdde9d] + DiffEqBayes v2.13.1
  [c894b116] + DiffEqJump v6.6.3
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.2
  [ced4e74d] + DistributionsAD v0.5.2
  [ffbed154] + DocStringExtensions v0.8.1
  [bbc10e6e] + DynamicHMC v2.1.5
  [366bfd00] + DynamicPPL v0.7.3
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.9
  [6a86dc24] + FiniteDiff v2.3.1
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.10
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.3
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.0
  [d8418881] + Intervals v1.1.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.2.0
  [23fbe1c1] + Latexify v0.13.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [6f1fad26] + Libtask v0.4.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.3
  [e6f89c97] + LoggingExtras v0.4.0
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [961ee093] + ModelingToolkit v3.3.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.1
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [4536629a] + OpenBLAS_jll v0.3.9+4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.20.6
  [bac558e1] + OrderedCollections v1.2.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v0.3.12
  [e409e4f3] + PoissonRandom v0.4.0
  [f27b6e38] + Polynomials v0.8.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.1.0
  [33c8b6b6] + ProgressLogging v0.1.2
  [92933f4c] + ProgressMeter v1.2.0
  [1fd47b50] + QuadGK v2.3.1
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.3.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [f2b01f46] + Roots v1.0.1
  [1bc83da4] + SafeTestsets v0.0.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.3
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.4
  [09ab397b] + StructArrays v0.4.3
  [d1185830] + SymbolicUtils v0.3.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [5d786b92] + TerminalLoggers v0.1.1
  [f269a46b] + TimeZones v1.1.1
  [a759f4b9] + TimerOutputs v0.5.5
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.12.0
  [3a884ed6] + UnPack v1.0.0
  [1986cc42] + Unitful v1.2.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Libtask ──→ `~/.julia/packages/Libtask/Q1ugc/deps/build.log`
   Building NNlib ────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/X323b/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_opXnJO/Manifest.toml`
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.24
  [5b7e9947] AdvancedMH v0.5.0
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.7
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.1
  [b99e7846] BinaryProvider v0.5.9
  [a603d957] CanonicalTraits v0.2.1
  [d360d2e6] ChainRulesCore v0.7.5
  [861a8166] Combinatorics v1.0.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.9.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.32.2
  [ebbdde9d] DiffEqBayes v2.13.1
  [459566f4] DiffEqCallbacks v2.13.1
  [c894b116] DiffEqJump v6.6.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.2
  [ffbed154] DocStringExtensions v0.8.1
  [bbc10e6e] DynamicHMC v2.1.5
  [366bfd00] DynamicPPL v0.7.3
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.9
  [6a86dc24] FiniteDiff v2.3.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.3
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.0
  [d8418881] Intervals v1.1.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.2.0
  [23fbe1c1] Latexify v0.13.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [94ce4f54] Libiconv_jll v1.16.0+2
  [6f1fad26] Libtask v0.4.0
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [961ee093] ModelingToolkit v3.3.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.20.6
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.36.1
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v0.3.12
  [e409e4f3] PoissonRandom v0.4.0
  [f27b6e38] Polynomials v0.8.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.1.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.3.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.7.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.4
  [9672c7b4] SteadyStateDiffEq v1.5.0
  [09ab397b] StructArrays v0.4.3
  [d1185830] SymbolicUtils v0.3.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [5d786b92] TerminalLoggers v0.1.1
  [f269a46b] TimeZones v1.1.1
  [a759f4b9] TimerOutputs v0.5.5
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.12.0
  [3a884ed6] UnPack v1.0.0
  [1986cc42] Unitful v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.2
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.41
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.04
│   estimated_seconds_left = 0.96
└   ϵ = 0.000224
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0632019142188151, 0.1413235068527449, 0.1790832413042883]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0013
│   estimated_seconds_left = 0.062
└   ϵ = 0.000139
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.044097474420492645, 0.13944754835991044, 0.3046487137146004]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0036
│   estimated_seconds_left = 0.36
└   ϵ = 0.00274
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.050220949107979675, 0.22459342782340377, 0.25337464103145474]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.028
│   estimated_seconds_left = 5.5
└   ϵ = 0.00408
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.038
│   estimated_seconds_left = 3.8
└   ϵ = 0.00149
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.037889268185833234, 0.27914996799713626, 0.23962961457014123]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00015
│   estimated_seconds_left = 0.061
└   ϵ = 0.00406
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.033
│   estimated_seconds_left = 10.0
└   ϵ = 0.0066
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.029
│   estimated_seconds_left = 5.7
└   ϵ = 0.00803
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.028
│   estimated_seconds_left = 2.7
└   ϵ = 0.0056
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.027636782997110823, 0.24802638972514907, 0.24718551416716145]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0063
│   estimated_seconds_left = 0.31
└   ϵ = 0.00559
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.017
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.036
└   estimated_seconds_left = 33.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.032
└   estimated_seconds_left = 25.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.033
└   estimated_seconds_left = 23.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.028
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.034
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.035
└   estimated_seconds_left = 14.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.033
└   estimated_seconds_left = 9.8
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.024
└   estimated_seconds_left = 4.9
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.034
└   estimated_seconds_left = 3.4
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000305
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.41
└   ϵ = 0.000305
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.046
│   estimated_seconds_left = 1.1
└   ϵ = 0.00018
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.014168303097122175, 0.01447577150613628, 0.014147193822229964, 0.10622015158015094, 0.14779440575569672]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.042
│   estimated_seconds_left = 2.1
└   ϵ = 0.000183
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010110530895137526, 0.010442894161962236, 0.010014842325029647, 0.1850739033145114, 0.18176605822461403]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
│   estimated_seconds_left = 1.1
└   ϵ = 0.0107
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.00719492421246049, 0.008130202125736773, 0.00709031950636064, 0.25939018733599584, 0.36100866626721473]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0057
│   estimated_seconds_left = 1.1
└   ϵ = 0.0197
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.011
│   estimated_seconds_left = 1.1
└   ϵ = 0.034
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.005265315954048347, 0.0060631334039825445, 0.005032163105022049, 0.22917638599310328, 0.3169677774281261]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0031
│   estimated_seconds_left = 1.2
└   ϵ = 0.0277
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.01
│   estimated_seconds_left = 3.1
└   ϵ = 0.0155
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0085
│   estimated_seconds_left = 1.7
└   ϵ = 0.0525
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0064
│   estimated_seconds_left = 0.63
└   ϵ = 0.0426
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0038915034521946673, 0.004867728327634767, 0.003585943085437123, 0.28687432165208576, 0.27442689116511865]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0015
│   estimated_seconds_left = 0.075
└   ϵ = 0.0381
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0031
└   estimated_seconds_left = 3.1
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0081
└   estimated_seconds_left = 7.3
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0074
└   estimated_seconds_left = 5.9
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.007
└   estimated_seconds_left = 4.9
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0069
└   estimated_seconds_left = 4.1
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0072
└   estimated_seconds_left = 3.6
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0063
└   estimated_seconds_left = 2.5
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0075
└   estimated_seconds_left = 2.3
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0075
└   estimated_seconds_left = 1.5
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0089
└   estimated_seconds_left = 0.88
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.25
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.42
│   estimated_seconds_left = 31.0
└   ϵ = 0.25
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 7.7e-5
│   estimated_seconds_left = 0.0019
└   ϵ = 0.00376
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.03598427710378781, 0.10793172173527603]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00076
│   estimated_seconds_left = 0.037
└   ϵ = 0.000747
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0912288489045204, 0.3976496662555802]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00015
│   estimated_seconds_left = 0.015
└   ϵ = 0.00957
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.04096598138405595, 0.255823270129723]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00033
│   estimated_seconds_left = 0.065
└   ϵ = 0.00407
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.012
│   estimated_seconds_left = 1.1
└   ϵ = 0.0105
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.028389806259592875, 0.2523227302491958]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.014
│   estimated_seconds_left = 5.8
└   ϵ = 0.00746
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0098
│   estimated_seconds_left = 2.9
└   ϵ = 0.00626
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.008
│   estimated_seconds_left = 1.6
└   ϵ = 0.0092
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0058
│   estimated_seconds_left = 0.58
└   ϵ = 0.0156
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.020120944262342753, 0.25369240408548777]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00071
│   estimated_seconds_left = 0.035
└   ϵ = 0.0122
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0062
└   estimated_seconds_left = 6.2
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0072
└   estimated_seconds_left = 6.4
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0079
└   estimated_seconds_left = 6.3
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0079
└   estimated_seconds_left = 5.5
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0079
└   estimated_seconds_left = 4.8
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0092
└   estimated_seconds_left = 4.6
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0071
└   estimated_seconds_left = 2.8
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0068
└   estimated_seconds_left = 2.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0065
└   estimated_seconds_left = 1.3
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0058
└   estimated_seconds_left = 0.58
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.15
│   estimated_seconds_left = 11.0
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.044
│   estimated_seconds_left = 1.1
└   ϵ = 6.11e-6
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.014150979982391728, 0.014144139747168086, 0.16106851248837137]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.023
│   estimated_seconds_left = 1.1
└   ϵ = 0.000183
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010036000706704287, 0.010005726884655904, 0.1849829709159355]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.002
│   estimated_seconds_left = 0.2
└   ϵ = 0.0106
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0071163414402846395, 0.007078029645495726, 0.22629697732338952]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00015
│   estimated_seconds_left = 0.03
└   ϵ = 0.0235
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.017
│   estimated_seconds_left = 1.7
└   ϵ = 0.0238
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.005078968648500585, 0.005014493621337408, 0.2687424923216445]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00052
│   estimated_seconds_left = 0.21
└   ϵ = 0.0422
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0025
│   estimated_seconds_left = 0.74
└   ϵ = 0.079
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0023
│   estimated_seconds_left = 0.46
└   ϵ = 0.0751
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0014
│   estimated_seconds_left = 0.14
└   ϵ = 0.0607
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0036690884602304137, 0.0035544752277604412, 0.249351436298569]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00067
│   estimated_seconds_left = 0.033
└   ϵ = 0.0657
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00034
└   estimated_seconds_left = 0.34
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0021
└   estimated_seconds_left = 1.9
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0018
└   estimated_seconds_left = 1.4
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0019
└   estimated_seconds_left = 1.3
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0012
└   estimated_seconds_left = 0.72
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.00083
└   estimated_seconds_left = 0.42
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0017
└   estimated_seconds_left = 0.66
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0021
└   estimated_seconds_left = 0.63
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0018
└   estimated_seconds_left = 0.36
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.002
└   estimated_seconds_left = 0.19
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0054
│   estimated_seconds_left = 0.4
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.077
│   estimated_seconds_left = 1.8
└   ϵ = 0.000102
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.014202438365381138, 0.014445888696261412, 0.014272386571151844, 0.014291505769706944, 0.034348025448588455, 0.03530003076489975]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.073
│   estimated_seconds_left = 3.6
└   ϵ = 6.16e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010077489207525365, 0.01019526290266302, 0.010167978258266349, 0.010187838019596133, 0.15443909078572607, 0.24574668370952107]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.048
│   estimated_seconds_left = 4.8
└   ϵ = 0.00267
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.007156972201726313, 0.007264582604764607, 0.007254052167262534, 0.007264565107937887, 0.22723601470171362, 0.21170890881418655]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 22.0
└   ϵ = 0.00149
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.046
│   estimated_seconds_left = 4.5
└   ϵ = 0.00528
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.005112518020948389, 0.005390736720242913, 0.005231532384062531, 0.005259862832056653, 0.26604261479260694, 0.4031277062484311]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.055
│   estimated_seconds_left = 22.0
└   ϵ = 0.00783
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.021
│   estimated_seconds_left = 6.3
└   ϵ = 0.0232
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.019
│   estimated_seconds_left = 3.7
└   ϵ = 0.0168
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.015
│   estimated_seconds_left = 1.5
└   ϵ = 0.0133
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0036806323003358734, 0.003870010566038243, 0.003834206680968386, 0.0038797665525430692, 0.3564949552804834, 0.24283717389790216]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.009
│   estimated_seconds_left = 0.44
└   ϵ = 0.0166
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.012
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.021
└   estimated_seconds_left = 19.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.023
└   estimated_seconds_left = 18.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.023
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.022
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.023
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.023
└   estimated_seconds_left = 9.3
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.026
└   estimated_seconds_left = 7.7
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.021
└   estimated_seconds_left = 4.2
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.022
└   estimated_seconds_left = 2.2
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1451.929320 seconds (662.31 M allocations: 45.149 GiB, 1.41% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.00625
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5001  0.0034    0.0002  0.0001  142.4799  0.9960
        σ[1]  0.1528  0.0338    0.0021  0.0014   98.5223  1.0045

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4933  1.4980  1.5000  1.5020  1.5064
        σ[1]  0.0997  0.1288  0.1441  0.1736  0.2307

┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Info: Found initial step size
└   ϵ = 0.021875000000000002
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/WJCQA/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.012109375
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/WJCQA/src/hamiltonian.jl:47
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.025
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/WJCQA/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5008  0.0047    0.0003  0.0001  308.1110  0.9971
           b  1.0007  0.0092    0.0006  0.0002  247.0110  0.9975
           c  3.0003  0.0092    0.0006  0.0003  366.7026  0.9960
           d  0.9990  0.0067    0.0004  0.0000  350.3680  0.9962
        σ[1]  0.1582  0.0342    0.0022  0.0005  222.2401  0.9974

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4916  1.4976  1.5007  1.5039  1.5098
           b  0.9813  0.9946  1.0007  1.0072  1.0198
           c  2.9829  2.9942  3.0001  3.0060  3.0170
           d  0.9857  0.9949  0.9989  1.0038  1.0127
        σ[1]  0.1062  0.1346  0.1542  0.1753  0.2352

Steady state problem
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/WJCQA/src/hamiltonian.jl:47
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/wBR51/src/integrator_interface.jl:329
Test Summary: | Pass  Total
Turing        |   12     12
580.843528 seconds (561.18 M allocations: 27.322 GiB, 4.48% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/NwsfA/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/NwsfA/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/NwsfA/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 43.570932 seconds (79.55 M allocations: 3.048 GiB, 3.98% gc time)
2076.604263 seconds (1.30 G allocations: 75.532 GiB, 2.32% gc time)
    Testing DiffEqBayes tests passed 
