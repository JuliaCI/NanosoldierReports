Julia Version 1.6.0-DEV.1192
Commit 84648ad804 (2020-10-09 11:16 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_kmyJNX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kmyJNX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723330077330757
curgen: 20 fitness: 0.21723330077330757
curgen: 30 fitness: 0.21723330077330757
curgen: 40 fitness: 0.21723336372822136
curgen: 50 fitness: 0.21723336372822136
CoordinateCreature{Vector{Float64}}([0.22247089076761503], -0.21723336372822136) 0.22247089076761503 -0.21723336372822136
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2573809694834472
curgen: 100 fitness: 3.2579949693037262
curgen: 150 fitness: 3.258075176691235
curgen: 200 fitness: 3.2581927095249528
curgen: 250 fitness: 3.2582506055623632
curgen: 300 fitness: 3.258333755499234
curgen: 350 fitness: 3.258376606766674
curgen: 400 fitness: 3.258388790302325
curgen: 450 fitness: 3.2583927883796306
curgen: 500 fitness: 3.2584377265548476
CoordinateCreature{Vector{Float64}}([-0.22268920661227107, -0.22287768643210276, 0.22226689167320177, -0.22273745857446312, 0.22239248709918133, 0.22278962788521, -0.2230698605623506, 0.22323926465226313, 0.2225257941678778, -0.2226458505654444, -0.22286371566775257, -0.22241153370015418, -0.2229481723488622, -0.22270576830953, -0.22289633564997324], -3.2584377265548476) [-0.22268920661227107, -0.22287768643210276, 0.22226689167320177, -0.22273745857446312, 0.22239248709918133, 0.22278962788521, -0.2230698605623506, 0.22323926465226313, 0.2225257941678778, -0.2226458505654444, -0.22286371566775257, -0.22241153370015418, -0.2229481723488622, -0.22270576830953, -0.22289633564997324] -3.2584377265548476
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002002448758673836
curgen: 100 fitness: -0.0008846592780855644
curgen: 150 fitness: -0.0008155856220639635
curgen: 200 fitness: -0.000659920048889262
curgen: 250 fitness: -0.00031942619997948896
curgen: 300 fitness: -0.0003074487605090326
curgen: 350 fitness: -0.00024987829056044575
curgen: 400 fitness: -0.00024987829056044575
curgen: 450 fitness: -0.00024987829056044575
curgen: 500 fitness: -0.00019856545208085663
CoordinateCreature{Vector{Float64}}([6.311262880644145e-5, 6.603108904613118e-5, 4.684376524455308e-5, 0.0005950691817448149, -0.00025495742706337543, 8.931430132603385e-5, -0.0002584440792130539, -0.0002160627074316399, -9.115008286291895e-5, 0.0003139492953482549, 0.0004399123855812566, -0.0002318281695227526, 7.241353220837454e-5, 0.00024990476594109875, 0.00016714337344277824], 0.00019856545208085663) [6.311262880644145e-5, 6.603108904613118e-5, 4.684376524455308e-5, 0.0005950691817448149, -0.00025495742706337543, 8.931430132603385e-5, -0.0002584440792130539, -0.0002160627074316399, -9.115008286291895e-5, 0.0003139492953482549, 0.0004399123855812566, -0.0002318281695227526, 7.241353220837454e-5, 0.00024990476594109875, 0.00016714337344277824] 0.00019856545208085663
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
