Julia Version 1.6.0-DEV.1169
Commit 3559b720d1 (2020-10-09 10:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.4.3
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Y92vn5/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Y92vn5/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723207765119468
curgen: 20 fitness: 0.21723207765119468
curgen: 30 fitness: 0.21723207765119468
curgen: 40 fitness: 0.21723207765119468
curgen: 50 fitness: 0.21723207765119468
CoordinateCreature{Vector{Float64}}([-0.22273539364558287], -0.21723207765119468) -0.22273539364558287 -0.21723207765119468
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578363141253033
curgen: 100 fitness: 3.258007651403931
curgen: 150 fitness: 3.258318421582668
curgen: 200 fitness: 3.2584443978129207
curgen: 250 fitness: 3.2584527602412616
curgen: 300 fitness: 3.2584547377835564
curgen: 350 fitness: 3.2584704273046725
curgen: 400 fitness: 3.2584710167016304
curgen: 450 fitness: 3.2584710167016304
curgen: 500 fitness: 3.2584710167016304
CoordinateCreature{Vector{Float64}}([-0.22260933820774337, 0.22257540967686534, 0.22253131832904344, 0.22253155965649135, -0.2227764743043486, 0.22223645022035615, 0.2232185119863268, -0.2225061531968774, -0.22247649879955766, 0.22241974888796365, 0.22250663519535213, -0.2225551651344769, -0.22280298707690996, 0.22250395797059555, 0.2223024420283937], -3.2584710167016304) [-0.22260933820774337, 0.22257540967686534, 0.22253131832904344, 0.22253155965649135, -0.2227764743043486, 0.22223645022035615, 0.2232185119863268, -0.2225061531968774, -0.22247649879955766, 0.22241974888796365, 0.22250663519535213, -0.2225551651344769, -0.22280298707690996, 0.22250395797059555, 0.2223024420283937] -3.2584710167016304
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0020243546823621728
curgen: 100 fitness: -0.0014808031578184
curgen: 150 fitness: -0.0013954811807650458
curgen: 200 fitness: -0.0013584645460014144
curgen: 250 fitness: -0.001223970413832376
curgen: 300 fitness: -0.0009779741318141077
curgen: 350 fitness: -0.0008517335166402518
curgen: 400 fitness: -0.0008441808173529353
curgen: 450 fitness: -0.0005493976792934063
curgen: 500 fitness: -0.0005487687359675419
CoordinateCreature{Vector{Float64}}([-0.000206377008105737, 0.00035478252366436284, -5.612118673141821e-5, 0.00018287118287738276, -0.0009578365731345918, -8.629514011314864e-5, 0.00021617997997314852, 0.0003724297374102432, -7.667546102360645e-6, 0.00015720905994292753, -8.702369905774735e-5, 0.0004769861198816688, 0.0005466022396842217, 0.0009006281553777112, 0.00028448344349680274], 0.0005487687359675419) [-0.000206377008105737, 0.00035478252366436284, -5.612118673141821e-5, 0.00018287118287738276, -0.0009578365731345918, -8.629514011314864e-5, 0.00021617997997314852, 0.0003724297374102432, -7.667546102360645e-6, 0.00015720905994292753, -8.702369905774735e-5, 0.0004769861198816688, 0.0005466022396842217, 0.0009006281553777112, 0.00028448344349680274] 0.0005487687359675419
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
