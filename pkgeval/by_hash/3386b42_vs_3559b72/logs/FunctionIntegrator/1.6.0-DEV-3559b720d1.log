Julia Version 1.6.0-DEV.1169
Commit 3559b720d1 (2020-10-09 10:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_dTvOF0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_dTvOF0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.271436 seconds (288.94 k allocations: 13.517 MiB, 6.90% gc time, 90.84% compilation time)
Running: chebyshev_quadrature with k=1
  1.413097 seconds (2.19 M allocations: 126.622 MiB, 3.43% gc time, 98.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.223804 seconds (409.38 k allocations: 23.550 MiB, 85.15% compilation time)
Running: chebyshev_quadrature with k=3
  0.275821 seconds (473.75 k allocations: 26.624 MiB, 9.41% gc time, 89.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.257921 seconds (418.56 k allocations: 23.279 MiB, 5.69% gc time, 90.55% compilation time)
Running: jacobi_quadrature with α=β=1
 31.211905 seconds (36.45 M allocations: 3.003 GiB, 10.44% gc time, 83.02% compilation time)
Running: laguerre_quadrature with k=1
  2.413187 seconds (3.17 M allocations: 177.067 MiB, 3.47% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.185177 seconds (206.05 k allocations: 11.830 MiB, 12.41% gc time, 98.88% compilation time)
Running: lobatto_quadrature
  0.320924 seconds (329.35 k allocations: 19.881 MiB, 99.38% compilation time)
Running: radau_quadrature
  0.296904 seconds (443.60 k allocations: 27.105 MiB, 6.88% gc time, 99.38% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 49.399217 seconds (100.02 M allocations: 1.491 GiB, 0.31% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.095848 seconds (172.46 k allocations: 3.827 MiB, 25.34% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.037089 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time, 0.05% compilation time)
Running: rombergs_method
  0.439370 seconds (722.72 k allocations: 41.710 MiB, 99.49% compilation time)
Running: simpsons_rule
  0.053826 seconds (46.55 k allocations: 2.532 MiB, 44.28% gc time, 96.09% compilation time)
Running: simpsons38_rule
  0.082644 seconds (108.44 k allocations: 5.748 MiB, 97.53% compilation time)
Running: trapezoidal_rule
  0.323419 seconds (1.72 M allocations: 28.597 MiB, 25.62% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.058482 seconds (29.80 k allocations: 1.768 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.318345 seconds (290.18 k allocations: 15.339 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.124930 seconds (93.80 k allocations: 2.675 MiB, 97.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.136879 seconds (82.06 k allocations: 2.476 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=4
  0.140015 seconds (64.67 k allocations: 2.122 MiB, 98.82% compilation time)
Running: jacobi_quadrature with α=β=1
  1.193831 seconds (503.68 k allocations: 161.832 MiB, 8.67% gc time, 40.01% compilation time)
Running: legendre_quadrature
  0.146597 seconds (41.10 k allocations: 2.366 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.016700 seconds (15.49 k allocations: 985.419 KiB, 99.13% compilation time)
Running: radau_quadrature
  0.017117 seconds (15.60 k allocations: 992.634 KiB, 99.09% compilation time)
Running: rectangle_rule_left
 14.038677 seconds (471.41 M allocations: 7.025 GiB, 3.97% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.778888 seconds (476.96 M allocations: 7.107 GiB, 4.12% gc time)
Running: rombergs_method
  0.297945 seconds (326.28 k allocations: 18.513 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000021 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.057308 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.035907 seconds (16.49 k allocations: 1.001 MiB, 99.75% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.017570 seconds (1.03 k allocations: 34.125 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.080131 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.090011 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.100741 seconds (2.31 k allocations: 109.297 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=4
  0.106606 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.280344 seconds (363.64 k allocations: 18.961 MiB, 9.76% gc time, 99.32% compilation time)
Running: legendre_quadrature
  0.065428 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000345 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000242 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000359 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074747 seconds (1.04 k allocations: 56.531 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022680 seconds (923 allocations: 39.281 KiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.017479 seconds (44.29 k allocations: 702.859 KiB, 91.32% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.040851 seconds (80.91 k allocations: 4.823 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.142717 seconds (230.61 k allocations: 12.967 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=2
  0.195988 seconds (283.17 k allocations: 15.880 MiB, 14.60% gc time, 98.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.176240 seconds (234.76 k allocations: 13.158 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=4
  0.151864 seconds (234.76 k allocations: 13.045 MiB, 98.68% compilation time)
Running: jacobi_quadrature with α=β=1
  1.183282 seconds (446.72 k allocations: 163.189 MiB, 5.15% gc time, 36.90% compilation time)
Running: legendre_quadrature
  0.141537 seconds (185.44 k allocations: 10.711 MiB, 98.71% compilation time)
Running: lobatto_quadrature
  0.161824 seconds (196.62 k allocations: 11.431 MiB, 11.24% gc time, 98.85% compilation time)
Running: radau_quadrature
  0.135110 seconds (196.61 k allocations: 11.411 MiB, 98.62% compilation time)
Running: rectangle_rule_left
  0.651278 seconds (18.82 k allocations: 1.147 MiB, 3.28% compilation time)
Running: rectangle_rule_midpoint
  0.021950 seconds (24.67 k allocations: 1.555 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.636220 seconds (17.39 k allocations: 1.062 MiB, 3.31% compilation time)
Running: rombergs_method
  0.109130 seconds (134.27 k allocations: 7.778 MiB, 97.57% compilation time)
Running: simpsons_rule
  0.020481 seconds (36.49 k allocations: 2.341 MiB, 99.17% compilation time)
Running: simpsons38_rule
  0.027228 seconds (42.37 k allocations: 2.678 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.017291 seconds (42.32 k allocations: 1.671 MiB, 95.91% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.024347 seconds (66.94 k allocations: 2.959 MiB, 95.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.172902 seconds (237.20 k allocations: 13.048 MiB, 11.09% gc time, 98.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.173215 seconds (290.20 k allocations: 15.872 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=3
  0.150173 seconds (241.33 k allocations: 13.118 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.174610 seconds (241.34 k allocations: 13.123 MiB, 12.23% gc time, 98.92% compilation time)
Running: hermite_quadrature with k=2
 11.924536 seconds (20.10 M allocations: 1.056 GiB, 9.98% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.353217 seconds (455.90 k allocations: 49.456 MiB, 9.18% gc time, 82.88% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.231169 seconds (276.26 k allocations: 15.248 MiB, 12.39% gc time, 98.59% compilation time)
Running: legendre_quadrature
  0.139293 seconds (191.98 k allocations: 11.035 MiB, 98.32% compilation time)
Running: lobatto_quadrature
  0.180208 seconds (217.27 k allocations: 37.185 MiB, 83.86% compilation time)
Running: radau_quadrature
  0.167099 seconds (213.85 k allocations: 29.846 MiB, 84.69% compilation time)
Running: rectangle_rule_left
  0.027038 seconds (21.73 k allocations: 1.293 MiB, 99.29% compilation time)
Running: rectangle_rule_midpoint
  0.029580 seconds (26.47 k allocations: 1.642 MiB, 99.25% compilation time)
Running: rectangle_rule_right
  0.034675 seconds (18.50 k allocations: 1.117 MiB, 99.56% compilation time)
Running: rombergs_method
  0.112678 seconds (136.74 k allocations: 7.803 MiB, 97.88% compilation time)
Running: simpsons_rule
  0.025608 seconds (43.97 k allocations: 2.609 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.056800 seconds (57.34 k allocations: 3.063 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.021711 seconds (28.35 k allocations: 1.595 MiB, 98.83% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.029572 seconds (50.91 k allocations: 2.619 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.149084 seconds (232.72 k allocations: 12.856 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.231614 seconds (285.38 k allocations: 15.644 MiB, 96.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.218040 seconds (236.87 k allocations: 12.928 MiB, 20.80% gc time, 99.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.161857 seconds (236.87 k allocations: 12.929 MiB, 98.57% compilation time)
Running: hermite_quadrature with k=2
  0.122236 seconds (170.78 k allocations: 9.790 MiB, 98.28% compilation time)
Running: jacobi_quadrature with α=β=1
  5.731574 seconds (449.16 k allocations: 1.175 GiB, 15.53% gc time, 5.76% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.181659 seconds (271.55 k allocations: 15.060 MiB, 98.07% compilation time)
Running: legendre_quadrature
  0.145796 seconds (187.55 k allocations: 10.818 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.210842 seconds (208.03 k allocations: 22.916 MiB, 11.21% gc time, 90.90% compilation time)
Running: radau_quadrature
  0.159750 seconds (207.18 k allocations: 20.907 MiB, 91.92% compilation time)
Running: rectangle_rule_left
  0.020474 seconds (19.52 k allocations: 1.188 MiB, 99.25% compilation time)
Running: rectangle_rule_midpoint
  0.019659 seconds (25.36 k allocations: 1.591 MiB, 99.33% compilation time)
Running: rectangle_rule_right
  0.025211 seconds (17.36 k allocations: 1.062 MiB, 99.28% compilation time)
Running: rombergs_method
  0.133569 seconds (132.58 k allocations: 7.622 MiB, 98.16% compilation time)
Running: simpsons_rule
  0.022865 seconds (39.30 k allocations: 2.442 MiB, 99.03% compilation time)
Running: simpsons38_rule
  0.033208 seconds (48.16 k allocations: 2.822 MiB, 99.12% compilation time)
Running: trapezoidal_rule
  0.020467 seconds (23.26 k allocations: 1.433 MiB, 98.85% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.021953 seconds (39.05 k allocations: 2.475 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=1
  0.178003 seconds (231.10 k allocations: 13.046 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.253644 seconds (283.67 k allocations: 16.059 MiB, 7.61% gc time, 98.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.165122 seconds (235.25 k allocations: 13.141 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.189326 seconds (235.25 k allocations: 12.976 MiB, 98.75% compilation time)
Running: jacobi_quadrature with α=β=1
  1.690675 seconds (447.26 k allocations: 194.232 MiB, 7.83% gc time, 30.86% compilation time)
Running: legendre_quadrature
  0.145679 seconds (185.93 k allocations: 10.733 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.162192 seconds (197.11 k allocations: 11.439 MiB, 98.40% compilation time)
Running: radau_quadrature
  0.163479 seconds (197.11 k allocations: 11.438 MiB, 11.64% gc time, 98.54% compilation time)
Running: rectangle_rule_left
  0.346706 seconds (19.34 k allocations: 1.173 MiB, 6.49% compilation time)
Running: rectangle_rule_midpoint
  0.019565 seconds (25.01 k allocations: 1.573 MiB, 99.26% compilation time)
Running: rectangle_rule_right
  0.165444 seconds (17.73 k allocations: 1.081 MiB, 16.02% compilation time)
Running: rombergs_method
  0.108027 seconds (145.02 k allocations: 8.485 MiB, 96.03% compilation time)
Running: simpsons_rule
  0.018037 seconds (37.11 k allocations: 2.369 MiB, 96.08% compilation time)
Running: simpsons38_rule
  0.026504 seconds (43.08 k allocations: 2.708 MiB, 99.39% compilation time)
Running: trapezoidal_rule
  0.028378 seconds (43.25 k allocations: 1.703 MiB, 97.77% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023539 seconds (38.85 k allocations: 2.409 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=1
  0.208215 seconds (231.69 k allocations: 12.989 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=2
  0.198642 seconds (284.30 k allocations: 15.891 MiB, 97.99% compilation time)
Running: chebyshev_quadrature with k=3
  0.173943 seconds (235.84 k allocations: 13.133 MiB, 98.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.182552 seconds (235.84 k allocations: 13.142 MiB, 11.20% gc time, 98.44% compilation time)
Running: jacobi_quadrature with α=β=1
  1.501661 seconds (447.97 k allocations: 148.916 MiB, 3.26% gc time, 26.74% compilation time)
Running: legendre_quadrature
  0.114915 seconds (186.53 k allocations: 10.754 MiB, 97.93% compilation time)
Running: lobatto_quadrature
  0.118171 seconds (197.71 k allocations: 11.460 MiB, 98.04% compilation time)
Running: radau_quadrature
  0.147548 seconds (197.70 k allocations: 11.454 MiB, 98.42% compilation time)
Running: rectangle_rule_left
  0.701711 seconds (19.59 k allocations: 1.186 MiB, 3.14% compilation time)
Running: rectangle_rule_midpoint
  0.028609 seconds (25.01 k allocations: 1.574 MiB, 99.32% compilation time)
Running: rectangle_rule_right
  0.745713 seconds (17.69 k allocations: 1.078 MiB, 3.31% compilation time)
Running: rombergs_method
  0.166720 seconds (135.49 k allocations: 7.815 MiB, 17.34% gc time, 97.08% compilation time)
Running: simpsons_rule
  0.028206 seconds (37.60 k allocations: 2.389 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.034033 seconds (43.78 k allocations: 2.734 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.030542 seconds (55.40 k allocations: 1.899 MiB, 96.61% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.192157 seconds (147.46 k allocations: 8.797 MiB, 99.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.132094 seconds (69.93 k allocations: 2.205 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.140365 seconds (105.09 k allocations: 2.868 MiB, 97.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.173841 seconds (92.57 k allocations: 2.654 MiB, 97.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.167901 seconds (72.10 k allocations: 2.248 MiB, 97.16% compilation time)
Running: jacobi_quadrature with α=β=1
  1.832575 seconds (480.17 k allocations: 167.771 MiB, 9.72% gc time, 21.95% compilation time)
Running: legendre_quadrature
  0.102712 seconds (18.73 k allocations: 1.094 MiB, 99.77% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000041 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.074853 seconds (590.00 M allocations: 8.792 GiB, 5.29% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 22.797740 seconds (592.75 M allocations: 8.833 GiB, 5.14% gc time)
Running: rombergs_method
  0.112930 seconds (20.51 k allocations: 1.165 MiB, 99.63% compilation time)
Running: simpsons_rule
  0.000027 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029336 seconds (463 allocations: 22.578 KiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.017083 seconds (171 allocations: 7.859 KiB, 99.42% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.142799 seconds (209.93 M allocations: 3.138 GiB, 1.53% gc time, 0.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.436129 seconds (413.95 k allocations: 22.950 MiB, 4.85% gc time, 99.26% compilation time)
Running: chebyshev_quadrature with k=2
 17.745793 seconds (468.59 k allocations: 4.040 GiB, 2.49% gc time, 2.46% compilation time)
Running: chebyshev_quadrature with k=3
  8.256273 seconds (249.12 k allocations: 1.642 GiB, 3.84% gc time, 2.47% compilation time)
Running: chebyshev_quadrature with k=4
 11.081682 seconds (249.12 k allocations: 2.260 GiB, 1.89% gc time, 2.18% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.494034 seconds (483.98 k allocations: 13.254 GiB, 5.86% gc time, 1.00% compilation time)
Running: legendre_quadrature.
  8.310564 seconds (223.20 k allocations: 1.976 GiB, 1.00% gc time, 2.07% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.706683 seconds (8.23 M allocations: 13.383 GiB, 6.94% gc time, 0.71% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.632156 seconds (7.23 M allocations: 13.369 GiB, 7.57% gc time, 0.69% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.455416 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.608449 seconds (30.45 k allocations: 1.884 MiB, 0.29% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.701687 seconds (22.45 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.853220 seconds (438.06 k allocations: 152.673 MiB, 1.98% gc time, 11.63% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.160136 seconds (200.04 M allocations: 2.983 GiB, 2.21% gc time, 0.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.290092 seconds (600.05 M allocations: 8.943 GiB, 5.53% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.622691 seconds (600.03 M allocations: 8.943 GiB, 3.95% gc time, 0.06% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.055515 seconds (109.56 k allocations: 4.131 MiB, 93.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.195561 seconds (247.70 k allocations: 13.448 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.173836 seconds (272.34 k allocations: 14.521 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.183322 seconds (220.25 k allocations: 11.649 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=4
  0.293643 seconds (220.25 k allocations: 11.661 MiB, 44.98% gc time, 99.49% compilation time)
Running: jacobi_quadrature with α=β=1
  0.316540 seconds (388.84 k allocations: 34.971 MiB, 92.78% compilation time)
Running: laguerre_quadrature with k=2
  0.161242 seconds (180.54 k allocations: 10.477 MiB, 76.86% compilation time)
Running: legendre_quadrature
  0.109466 seconds (145.98 k allocations: 8.073 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.020342 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018188 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.042597 seconds (18.88 k allocations: 1.122 MiB, 59.50% compilation time)
Running: rectangle_rule_midpoint
  0.039027 seconds (25.48 k allocations: 1.575 MiB, 68.35% compilation time)
Running: rectangle_rule_right
  0.037858 seconds (17.48 k allocations: 1.049 MiB, 54.46% compilation time)
Running: rombergs_method
  0.189819 seconds (170.73 k allocations: 9.754 MiB, 98.62% compilation time)
Running: simpsons_rule
  0.000489 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.041545 seconds (78.86 k allocations: 3.385 MiB, 97.59% compilation time)
Running: trapezoidal_rule
  0.119874 seconds (2.39 M allocations: 37.684 MiB, 31.81% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001120 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.115423 seconds (2.46 k allocations: 1.691 MiB, 98.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.110932 seconds (2.71 k allocations: 2.355 MiB, 97.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.109071 seconds (2.31 k allocations: 2.028 MiB, 97.00% compilation time)
Running: chebyshev_quadrature with k=4
  0.102443 seconds (2.31 k allocations: 1.469 MiB, 97.27% compilation time)
Running: jacobi_quadrature with α=β=1
  6.401251 seconds (365.92 k allocations: 904.797 MiB, 4.25% gc time, 5.12% compilation time)
Running: legendre_quadrature
  0.080551 seconds (1.27 k allocations: 68.203 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000156 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000119 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.808683 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.864959 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065791 seconds (997 allocations: 56.672 KiB, 99.36% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000983 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000191 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.118835 seconds (2.53 k allocations: 579.203 KiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.105345 seconds (2.79 k allocations: 780.188 KiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.109673 seconds (2.39 k allocations: 661.047 KiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.114781 seconds (2.39 k allocations: 491.547 KiB, 99.32% compilation time)
Running: jacobi_quadrature with α=β=1
  1.231069 seconds (372.48 k allocations: 252.908 MiB, 33.44% compilation time)
Running: legendre_quadrature
  0.063083 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000105 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000045 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.323306 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000127 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.270478 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.124108 seconds (1.21 k allocations: 64.938 KiB, 99.61% compilation time)
Running: simpsons_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000518 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
