Julia Version 1.6.0-DEV.1192
Commit 84648ad804 (2020-10-09 11:16 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_bXnYoY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_bXnYoY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.209176 seconds (289.12 k allocations: 13.529 MiB, 5.89% gc time, 91.12% compilation time)
Running: chebyshev_quadrature with k=1
  1.368352 seconds (2.20 M allocations: 126.685 MiB, 4.87% gc time, 98.43% compilation time)
Running: chebyshev_quadrature with k=2
  0.246334 seconds (409.38 k allocations: 23.565 MiB, 86.71% compilation time)
Running: chebyshev_quadrature with k=3
  0.302047 seconds (473.75 k allocations: 26.611 MiB, 7.50% gc time, 88.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.263817 seconds (418.56 k allocations: 23.255 MiB, 4.60% gc time, 92.18% compilation time)
Running: jacobi_quadrature with α=β=1
 30.954936 seconds (34.87 M allocations: 2.927 GiB, 12.47% gc time, 82.08% compilation time)
Running: laguerre_quadrature with k=1
  2.378187 seconds (3.17 M allocations: 177.041 MiB, 3.76% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.196177 seconds (206.06 k allocations: 11.829 MiB, 99.08% compilation time)
Running: lobatto_quadrature
  0.377710 seconds (329.30 k allocations: 19.943 MiB, 99.47% compilation time)
Running: radau_quadrature
  0.319517 seconds (448.14 k allocations: 27.337 MiB, 6.82% gc time, 99.30% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 49.555538 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.08% compilation time)
Running: rectangle_rule_midpoint.
  0.096802 seconds (172.46 k allocations: 3.827 MiB, 23.62% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.953499 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time, 0.05% compilation time)
Running: rombergs_method
  0.465471 seconds (722.74 k allocations: 41.720 MiB, 4.90% gc time, 99.58% compilation time)
Running: simpsons_rule
  0.036103 seconds (46.55 k allocations: 2.532 MiB, 94.34% compilation time)
Running: simpsons38_rule
  0.081235 seconds (108.54 k allocations: 5.754 MiB, 97.16% compilation time)
Running: trapezoidal_rule
  0.309735 seconds (1.72 M allocations: 28.603 MiB, 4.53% gc time, 22.48% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.060545 seconds (29.80 k allocations: 1.767 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.362261 seconds (290.10 k allocations: 15.336 MiB, 99.67% compilation time)
Running: chebyshev_quadrature with k=2
  0.131723 seconds (93.80 k allocations: 2.675 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=3
  0.147704 seconds (82.06 k allocations: 2.476 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=4
  0.145341 seconds (64.67 k allocations: 2.122 MiB, 99.06% compilation time)
Running: jacobi_quadrature with α=β=1
  1.579514 seconds (503.44 k allocations: 161.817 MiB, 5.06% gc time, 29.47% compilation time)
Running: legendre_quadrature
  0.141532 seconds (41.12 k allocations: 2.366 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.016562 seconds (15.51 k allocations: 985.263 KiB, 99.08% compilation time)
Running: radau_quadrature
  0.016798 seconds (15.62 k allocations: 992.478 KiB, 99.09% compilation time)
Running: rectangle_rule_left
 13.269489 seconds (471.41 M allocations: 7.025 GiB, 4.41% gc time)
Running: rectangle_rule_midpoint
  0.000014 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.177823 seconds (476.96 M allocations: 7.107 GiB, 4.22% gc time)
Running: rombergs_method
  0.298908 seconds (326.29 k allocations: 18.513 MiB, 99.86% compilation time)
Running: simpsons_rule
  0.000052 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.061167 seconds (18.91 k allocations: 1.146 MiB, 99.85% compilation time)
Running: trapezoidal_rule
  0.040577 seconds (16.49 k allocations: 1.000 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.017225 seconds (1.03 k allocations: 34.125 KiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=1
  0.073624 seconds (2.46 k allocations: 116.359 KiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.096380 seconds (2.71 k allocations: 124.266 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.096082 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.093777 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.294057 seconds (363.64 k allocations: 18.965 MiB, 99.37% compilation time)
Running: legendre_quadrature
  0.064950 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000089 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000070 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000390 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000242 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000342 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.060332 seconds (1.04 k allocations: 56.531 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000035 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.023638 seconds (923 allocations: 39.281 KiB, 99.70% compilation time)
Running: trapezoidal_rule
  0.017884 seconds (44.29 k allocations: 702.859 KiB, 91.33% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.049042 seconds (80.91 k allocations: 4.823 MiB, 99.56% compilation time)
Running: chebyshev_quadrature with k=1
  0.184221 seconds (230.62 k allocations: 12.999 MiB, 14.89% gc time, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.165670 seconds (283.17 k allocations: 15.880 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.151277 seconds (234.77 k allocations: 13.166 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.170998 seconds (234.76 k allocations: 13.045 MiB, 13.06% gc time, 98.94% compilation time)
Running: jacobi_quadrature with α=β=1
  1.161620 seconds (446.72 k allocations: 163.203 MiB, 1.96% gc time, 33.43% compilation time)
Running: legendre_quadrature
  0.132213 seconds (185.44 k allocations: 10.707 MiB, 98.72% compilation time)
Running: lobatto_quadrature
  0.144950 seconds (196.61 k allocations: 11.410 MiB, 98.50% compilation time)
Running: radau_quadrature
  0.139028 seconds (196.61 k allocations: 11.411 MiB, 98.69% compilation time)
Running: rectangle_rule_left
  0.636722 seconds (18.82 k allocations: 1.147 MiB, 3.29% compilation time)
Running: rectangle_rule_midpoint
  0.020031 seconds (24.67 k allocations: 1.555 MiB, 99.11% compilation time)
Running: rectangle_rule_right
  0.607336 seconds (17.39 k allocations: 1.062 MiB, 3.67% compilation time)
Running: rombergs_method
  0.101115 seconds (134.27 k allocations: 7.778 MiB, 97.40% compilation time)
Running: simpsons_rule
  0.022279 seconds (36.49 k allocations: 2.341 MiB, 99.27% compilation time)
Running: simpsons38_rule
  0.029429 seconds (42.37 k allocations: 2.678 MiB, 99.45% compilation time)
Running: trapezoidal_rule
  0.017062 seconds (42.32 k allocations: 1.671 MiB, 96.87% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.055106 seconds (66.94 k allocations: 2.959 MiB, 41.91% gc time, 98.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.143577 seconds (237.20 k allocations: 13.032 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.155314 seconds (290.20 k allocations: 15.873 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.174984 seconds (241.33 k allocations: 13.118 MiB, 11.79% gc time, 99.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.154842 seconds (241.34 k allocations: 13.123 MiB, 98.82% compilation time)
Running: hermite_quadrature with k=2
 12.219525 seconds (20.10 M allocations: 1.056 GiB, 9.66% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.477896 seconds (455.90 k allocations: 49.409 MiB, 28.37% gc time, 93.04% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.263449 seconds (276.26 k allocations: 15.248 MiB, 98.69% compilation time)
Running: legendre_quadrature
  0.129051 seconds (191.98 k allocations: 11.035 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.177935 seconds (217.27 k allocations: 37.186 MiB, 8.79% gc time, 76.84% compilation time)
Running: radau_quadrature
  0.210118 seconds (213.85 k allocations: 29.846 MiB, 6.67% gc time, 80.53% compilation time)
Running: rectangle_rule_left
  0.032588 seconds (21.73 k allocations: 1.293 MiB, 99.55% compilation time)
Running: rectangle_rule_midpoint
  0.027010 seconds (26.47 k allocations: 1.642 MiB, 99.43% compilation time)
Running: rectangle_rule_right
  0.017932 seconds (18.50 k allocations: 1.117 MiB, 99.16% compilation time)
Running: rombergs_method
  0.099190 seconds (136.74 k allocations: 7.803 MiB, 97.48% compilation time)
Running: simpsons_rule
  0.020978 seconds (43.97 k allocations: 2.609 MiB, 98.87% compilation time)
Running: simpsons38_rule
  0.029708 seconds (57.34 k allocations: 3.063 MiB, 98.60% compilation time)
Running: trapezoidal_rule
  0.018972 seconds (28.35 k allocations: 1.595 MiB, 98.67% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.026465 seconds (50.91 k allocations: 2.619 MiB, 97.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.187328 seconds (232.72 k allocations: 12.919 MiB, 9.07% gc time, 98.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.175882 seconds (285.38 k allocations: 15.644 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=3
  0.168032 seconds (236.87 k allocations: 12.932 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=4
  0.243558 seconds (236.87 k allocations: 12.929 MiB, 11.26% gc time, 99.11% compilation time)
Running: hermite_quadrature with k=2
  0.125401 seconds (170.78 k allocations: 9.790 MiB, 98.25% compilation time)
Running: jacobi_quadrature with α=β=1
  5.760819 seconds (449.16 k allocations: 1.175 GiB, 24.04% gc time, 7.09% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.175639 seconds (271.55 k allocations: 15.061 MiB, 98.03% compilation time)
Running: legendre_quadrature
  0.190437 seconds (187.55 k allocations: 10.818 MiB, 9.22% gc time, 98.78% compilation time)
Running: lobatto_quadrature
  0.195618 seconds (208.03 k allocations: 22.915 MiB, 92.57% compilation time)
Running: radau_quadrature
  0.172292 seconds (207.18 k allocations: 20.845 MiB, 8.76% gc time, 92.51% compilation time)
Running: rectangle_rule_left
  0.022834 seconds (19.52 k allocations: 1.188 MiB, 99.39% compilation time)
Running: rectangle_rule_midpoint
  0.022227 seconds (25.36 k allocations: 1.591 MiB, 99.37% compilation time)
Running: rectangle_rule_right
  0.027193 seconds (17.36 k allocations: 1.062 MiB, 99.55% compilation time)
Running: rombergs_method
  0.116627 seconds (132.58 k allocations: 7.622 MiB, 98.07% compilation time)
Running: simpsons_rule
  0.038591 seconds (39.30 k allocations: 2.442 MiB, 99.51% compilation time)
Running: simpsons38_rule
  0.043647 seconds (48.16 k allocations: 2.822 MiB, 99.41% compilation time)
Running: trapezoidal_rule
  0.017939 seconds (23.26 k allocations: 1.433 MiB, 98.89% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023345 seconds (39.05 k allocations: 2.475 MiB, 99.07% compilation time)
Running: chebyshev_quadrature with k=1
  0.156074 seconds (231.10 k allocations: 13.046 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.231831 seconds (283.67 k allocations: 15.996 MiB, 7.66% gc time, 98.38% compilation time)
Running: chebyshev_quadrature with k=3
  0.162508 seconds (235.25 k allocations: 13.204 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.155428 seconds (235.25 k allocations: 12.976 MiB, 98.57% compilation time)
Running: jacobi_quadrature with α=β=1
  1.635354 seconds (447.26 k allocations: 194.232 MiB, 5.68% gc time, 26.10% compilation time)
Running: legendre_quadrature
  0.148016 seconds (185.93 k allocations: 10.732 MiB, 97.23% compilation time)
Running: lobatto_quadrature
  0.165940 seconds (197.11 k allocations: 11.443 MiB, 98.40% compilation time)
Running: radau_quadrature
  0.171036 seconds (197.11 k allocations: 11.437 MiB, 92.18% compilation time)
Running: rectangle_rule_left
  0.377021 seconds (19.34 k allocations: 1.173 MiB, 5.31% gc time, 10.95% compilation time)
Running: rectangle_rule_midpoint
  0.024199 seconds (25.01 k allocations: 1.573 MiB, 99.39% compilation time)
Running: rectangle_rule_right
  0.163347 seconds (17.73 k allocations: 1.081 MiB, 14.13% compilation time)
Running: rombergs_method
  0.109618 seconds (145.02 k allocations: 8.485 MiB, 96.76% compilation time)
Running: simpsons_rule
  0.020391 seconds (37.11 k allocations: 2.369 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.023999 seconds (43.08 k allocations: 2.708 MiB, 98.71% compilation time)
Running: trapezoidal_rule
  0.018584 seconds (43.25 k allocations: 1.703 MiB, 97.15% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.020309 seconds (38.85 k allocations: 2.409 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=1
  0.165680 seconds (231.69 k allocations: 13.051 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.195829 seconds (284.30 k allocations: 15.892 MiB, 9.27% gc time, 98.03% compilation time)
Running: chebyshev_quadrature with k=3
  0.160127 seconds (235.84 k allocations: 13.071 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.174269 seconds (235.84 k allocations: 13.142 MiB, 98.43% compilation time)
Running: jacobi_quadrature with α=β=1
  1.221853 seconds (447.97 k allocations: 148.916 MiB, 10.68% gc time, 33.57% compilation time)
Running: legendre_quadrature
  0.117583 seconds (186.53 k allocations: 10.750 MiB, 98.13% compilation time)
Running: lobatto_quadrature
  0.141487 seconds (197.71 k allocations: 11.460 MiB, 98.35% compilation time)
Running: radau_quadrature
  0.136551 seconds (197.70 k allocations: 11.454 MiB, 98.37% compilation time)
Running: rectangle_rule_left
  0.683215 seconds (19.59 k allocations: 1.186 MiB, 4.04% compilation time)
Running: rectangle_rule_midpoint
  0.018815 seconds (25.01 k allocations: 1.574 MiB, 99.08% compilation time)
Running: rectangle_rule_right
  0.715366 seconds (17.69 k allocations: 1.078 MiB, 2.87% compilation time)
Running: rombergs_method
  0.121223 seconds (135.49 k allocations: 7.941 MiB, 13.92% gc time, 97.22% compilation time)
Running: simpsons_rule
  0.020414 seconds (37.60 k allocations: 2.389 MiB, 99.18% compilation time)
Running: simpsons38_rule
  0.025961 seconds (43.78 k allocations: 2.734 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.018483 seconds (55.40 k allocations: 1.899 MiB, 94.93% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.111217 seconds (147.46 k allocations: 8.800 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.121107 seconds (69.93 k allocations: 2.205 MiB, 98.11% compilation time)
Running: chebyshev_quadrature with k=2
  0.127253 seconds (105.09 k allocations: 2.868 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.131545 seconds (92.57 k allocations: 2.654 MiB, 97.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.152649 seconds (72.10 k allocations: 2.248 MiB, 98.46% compilation time)
Running: jacobi_quadrature with α=β=1
  1.843854 seconds (479.92 k allocations: 167.757 MiB, 11.88% gc time, 21.20% compilation time)
Running: legendre_quadrature
  0.087805 seconds (18.73 k allocations: 1.094 MiB, 99.73% compilation time)
Running: lobatto_quadrature
  0.000121 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000057 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.563608 seconds (590.00 M allocations: 8.792 GiB, 5.64% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.651324 seconds (592.75 M allocations: 8.833 GiB, 5.44% gc time)
Running: rombergs_method
  0.135880 seconds (20.51 k allocations: 1.165 MiB, 99.66% compilation time)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026097 seconds (463 allocations: 22.578 KiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.017802 seconds (171 allocations: 7.859 KiB, 99.43% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.081283 seconds (209.93 M allocations: 3.138 GiB, 1.50% gc time, 0.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.345512 seconds (413.96 k allocations: 22.954 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=2
 17.684984 seconds (468.60 k allocations: 4.040 GiB, 2.51% gc time, 2.46% compilation time)
Running: chebyshev_quadrature with k=3
  8.021563 seconds (249.12 k allocations: 1.642 GiB, 3.53% gc time, 2.08% compilation time)
Running: chebyshev_quadrature with k=4
 10.939172 seconds (249.12 k allocations: 2.260 GiB, 1.97% gc time, 1.40% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.101692 seconds (483.99 k allocations: 13.254 GiB, 6.66% gc time, 0.96% compilation time)
Running: legendre_quadrature.
  9.467169 seconds (223.21 k allocations: 1.976 GiB, 3.21% gc time, 1.93% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.966490 seconds (8.23 M allocations: 13.383 GiB, 7.96% gc time, 0.65% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.537671 seconds (7.23 M allocations: 13.369 GiB, 6.92% gc time, 0.61% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.482023 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.984017 seconds (30.45 k allocations: 1.884 MiB, 0.23% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.795637 seconds (22.45 k allocations: 1.357 MiB, 0.20% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.831967 seconds (438.06 k allocations: 152.673 MiB, 2.18% gc time, 11.11% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.221255 seconds (200.04 M allocations: 2.983 GiB, 2.05% gc time, 0.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.731117 seconds (600.05 M allocations: 8.943 GiB, 5.91% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.863706 seconds (600.03 M allocations: 8.943 GiB, 4.05% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.052254 seconds (109.56 k allocations: 4.131 MiB, 93.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.162175 seconds (247.70 k allocations: 13.448 MiB, 97.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.148296 seconds (272.34 k allocations: 14.521 MiB, 98.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.131110 seconds (220.25 k allocations: 11.633 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.135469 seconds (220.25 k allocations: 11.661 MiB, 99.12% compilation time)
Running: jacobi_quadrature with α=β=1
  0.279131 seconds (388.84 k allocations: 34.975 MiB, 91.65% compilation time)
Running: laguerre_quadrature with k=2
  0.162524 seconds (180.54 k allocations: 10.477 MiB, 73.33% compilation time)
Running: legendre_quadrature
  0.118708 seconds (145.98 k allocations: 8.073 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.015642 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.020438 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.045133 seconds (18.88 k allocations: 1.122 MiB, 70.18% compilation time)
Running: rectangle_rule_midpoint
  0.022440 seconds (25.48 k allocations: 1.575 MiB, 72.11% compilation time)
Running: rectangle_rule_right
  0.035309 seconds (17.48 k allocations: 1.049 MiB, 42.60% compilation time)
Running: rombergs_method
  0.172174 seconds (172.62 k allocations: 9.852 MiB, 98.62% compilation time)
Running: simpsons_rule
  0.000340 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.040902 seconds (78.86 k allocations: 3.385 MiB, 96.94% compilation time)
Running: trapezoidal_rule
  0.122096 seconds (2.39 M allocations: 37.684 MiB, 26.15% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000429 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.095604 seconds (2.46 k allocations: 1.691 MiB, 98.36% compilation time)
Running: chebyshev_quadrature with k=2
  0.093039 seconds (2.71 k allocations: 2.355 MiB, 96.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.091535 seconds (2.31 k allocations: 2.028 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.093568 seconds (2.31 k allocations: 1.469 MiB, 97.57% compilation time)
Running: jacobi_quadrature with α=β=1
  4.706476 seconds (365.92 k allocations: 904.797 MiB, 10.12% gc time, 8.72% compilation time)
Running: legendre_quadrature
  0.060855 seconds (1.27 k allocations: 68.203 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000157 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000111 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.623855 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000376 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.535604 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.072551 seconds (997 allocations: 56.672 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000040 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001110 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000168 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.111567 seconds (2.53 k allocations: 579.203 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=2
  0.122409 seconds (2.79 k allocations: 780.188 KiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=3
  0.106846 seconds (2.39 k allocations: 661.047 KiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=4
  0.095751 seconds (2.39 k allocations: 491.547 KiB, 99.35% compilation time)
Running: jacobi_quadrature with α=β=1
  1.422214 seconds (372.48 k allocations: 252.908 MiB, 24.69% compilation time)
Running: legendre_quadrature
  0.065384 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000075 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.079553 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000130 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.247347 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075695 seconds (1.21 k allocations: 64.938 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000417 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
