Current time is 2020-10-25T16:59:47.448
Julia Version 1.6.0-DEV.1240
Commit 47d6067ffe (2020-10-15 19:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T16:59:52.379
  Resolving package versions...
  Installed GAFramework â”€ v0.4.1
  Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-25T17:00:20.685
    Testing GAFramework
Status `/tmp/jl_AxgsV0/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_AxgsV0/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721838229088894
curgen: 20 fitness: 0.21723359600046618
curgen: 30 fitness: 0.21723359600046618
curgen: 40 fitness: 0.21723359600046618
curgen: 50 fitness: 0.21723359600046618
CoordinateCreature{Vector{Float64}}([-0.22257513180449226], -0.21723359600046618) -0.22257513180449226 -0.21723359600046618
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580596521810326
curgen: 100 fitness: 3.258392138630479
curgen: 150 fitness: 3.2584254783565716
curgen: 200 fitness: 3.258452130960324
curgen: 250 fitness: 3.2584737441619036
curgen: 300 fitness: 3.258475821220046
curgen: 350 fitness: 3.258476135306456
curgen: 400 fitness: 3.2584887567797236
curgen: 450 fitness: 3.258491491706221
curgen: 500 fitness: 3.2584922038316337
CoordinateCreature{Vector{Float64}}([0.2227941707633517, -0.22243268213122522, 0.2225830242572871, -0.22271411065790525, 0.2225975992666725, 0.22249936571448647, -0.22249491718418846, -0.22251938994743073, 0.2226272666319278, -0.2225773666747031, 0.22267706993856304, -0.2227116296909878, 0.22221086700952425, 0.22256683902371588, -0.22253358346483257], -3.2584922038316337) [0.2227941707633517, -0.22243268213122522, 0.2225830242572871, -0.22271411065790525, 0.2225975992666725, 0.22249936571448647, -0.22249491718418846, -0.22251938994743073, 0.2226272666319278, -0.2225773666747031, 0.22267706993856304, -0.2227116296909878, 0.22221086700952425, 0.22256683902371588, -0.22253358346483257] -3.2584922038316337
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003402604708526269
curgen: 100 fitness: -0.0016042600988157574
curgen: 150 fitness: -0.0016042600988157574
curgen: 200 fitness: -0.0015237640685654696
curgen: 250 fitness: -0.0015237640685654696
curgen: 300 fitness: -0.001139461636711303
curgen: 350 fitness: -0.0011375542018186025
curgen: 400 fitness: -0.0010724061945097674
curgen: 450 fitness: -0.0010724061945097674
curgen: 500 fitness: -0.0010724061945097674
CoordinateCreature{Vector{Float64}}([7.983098356024153e-5, 0.00022409893331984924, 0.00023468951715766451, -0.0005211082165535773, -0.0010734752073450883, 9.28910486830735e-5, 0.0006335655469111719, 0.0009846659891473693, -0.0013298488346170088, -0.00026625269579663984, 0.0006442322336096789, 4.533784313677947e-5, -0.0003717543006939202, 0.0001612140907037633, -0.00026393377333775315], 0.0010724061945097674) [7.983098356024153e-5, 0.00022409893331984924, 0.00023468951715766451, -0.0005211082165535773, -0.0010734752073450883, 9.28910486830735e-5, 0.0006335655469111719, 0.0009846659891473693, -0.0013298488346170088, -0.00026625269579663984, 0.0006442322336096789, 4.533784313677947e-5, -0.0003717543006939202, 0.0001612140907037633, -0.00026393377333775315] 0.0010724061945097674
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
Finished at 2020-10-25T17:01:19.645
