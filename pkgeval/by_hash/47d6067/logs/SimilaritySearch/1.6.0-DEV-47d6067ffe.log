Current time is 2020-10-25T16:04:53.232
Julia Version 1.6.0-DEV.1240
Commit 47d6067ffe (2020-10-15 19:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T16:04:57.940
  Resolving package versions...
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed SortingAlgorithms â”€â”€ v0.3.1
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
  Installed OrderedCollections â”€ v1.3.1
  Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
  Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
  Installed SimilaritySearch â”€â”€â”€ v0.3.20
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mStatsBase[39m
[90m[32m  âœ“ [39mJSON[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
Starting tests at 2020-10-25T16:05:20.785
    Testing SimilaritySearch
Status `/tmp/jl_BOcRwX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_BOcRwX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(21, 0.033177733f0), Item(17, 0.066462636f0), Item(14, 0.06966245f0), Item(12, 0.072911024f0)])
Vsorted = Item[Item(21, 0.033177733f0), Item(17, 0.066462636f0), Item(14, 0.06966245f0), Item(12, 0.072911024f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.002720435460408529, 0.003178564707438151, 301.0, 50.44837610423565))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.007023779551188151, 0.003209265073140462, 301.0, 73.54858827590942))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004522212346394857, 0.004351600011189779, 301.0, 40.86547338962555))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003746366500854492, 0.0048825661341349285, 301.0, 9.368998686550185))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.005276886622111002, 0.008472204208374023, 301.0, 45.643916849046946))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.866354624430338e-5, 2.2371610005696613e-5, 301.0, 181.70657125115395))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.349781036376953e-5, 0.010902039210001628, 300.0, 29.382894668262452)
p = PerformanceResult(1.0, 1.0, 1.0, 2.8705596923828126e-5, 1.6164779663085937e-5, 300.0, 29.382894668262452)
p = PerformanceResult(1.0, 1.0, 1.0, 0.002303258577982585, 0.0029874006907145184, 300.0, 1.9634813755728828)
p = PerformanceResult(1.0, 1.0, 1.0, 2.8583738538953996e-5, 1.4130274454752604e-5, 300.0, 1.9634813755728828)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.349781036376953e-5, 0.010902039210001628, 300.0, 29.382894668262452), PerformanceResult(1.0, 1.0, 1.0, 2.8705596923828126e-5, 1.6164779663085937e-5, 300.0, 29.382894668262452), PerformanceResult(1.0, 1.0, 1.0, 0.002303258577982585, 0.0029874006907145184, 300.0, 1.9634813755728828), PerformanceResult(1.0, 1.0, 1.0, 2.8583738538953996e-5, 1.4130274454752604e-5, 300.0, 1.9634813755728828))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009570137659708659, 0.003177801767985026, 348.93333333333334, 28736.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.011754878362019857, 0.0025072654088338217, 302.9, 7008.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.529057820638021e-5, 7.502237955729166e-6, 91.56666666666666, 50.35719904303551))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4440218607584636e-5, 7.09692637125651e-6, 81.63333333333334, 73.45545077323914))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5934308369954426e-5, 1.0832150777180989e-5, 85.63333333333334, 40.7632954120636))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.3492177327473958e-5, 6.270408630371094e-5, 92.4, 45.5326482988894))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8233333333333334, 0.8233333333333334, 0.8233333333333334, 1.0196367899576823e-5, 1.3836224873860677e-5, 67.26666666666667, 189.9350705742836))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-25T16:06:31.586
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9165000000000001, 0.903, 0.907901960784314, 1.5308856964111327e-5, 1.52587890625e-5, 152.12, 50.22218479483854))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5215873718261719e-5, 1.183032989501953e-5, 155.6, 0.0))
*** advance 1 from 1000; 2020-10-25T16:06:32.374
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8775714285714286, 0.87, 0.8727254901960784, 1.4884471893310547e-5, 1.5850067138671876e-5, 152.01, 76.66504083853215))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.447916030883789e-5, 1.1839866638183593e-5, 155.44, 0.0))
*** advance 1 from 1000; 2020-10-25T16:06:33.405
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.917444444444445, 0.9070000000000005, 0.910633790358249, 1.5604496002197266e-5, 1.7387866973876955e-5, 152.99, 40.78680722042918))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6009807586669923e-5, 1.4460086822509765e-5, 156.5, 0.0))
*** advance 1 from 1000; 2020-10-25T16:06:34.208
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9243333333333333, 0.911, 0.9158668730650156, 4.395961761474609e-5, 0.00018675804138183595, 153.77, 44.81162787787616))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.34477424621582e-5, 0.0001933598518371582, 157.34, 0.0))
*** advance 1 from 1000; 2020-10-25T16:06:34.676
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.96, 0.96, 0.96, 1.4891624450683594e-5, 3.689050674438476e-5, 167.15, 194.39934414857998))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 1.5239715576171875e-5, 3.858089447021484e-5, 172.39, 0.0))
*** advance 1 from 1000; 2020-10-25T16:06:35.902
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9165000000000001, 0.903, 0.907901960784314, 1.2211799621582031e-5, 2.577066421508789e-5, 152.12, 50.23215929965954))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.771688461303711e-5, 2.9790401458740235e-5, 155.6, 0.018112444842699915))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:38.188
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7529999999999998, 0.7529999999999998, 0.7529999999999998, 0.0008691191673278808, 4.92095947265625e-5, 204.99, 184.01666881144047))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:40.531
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7559999999999999, 0.7559999999999999, 0.7559999999999999, 0.0016565537452697754, 6.335973739624023e-5, 209.63, 105.78730360418558))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:41.487
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.647, 0.647, 0.647, 0.001588602066040039, 8.380889892578125e-5, 279.96, 1.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:43.202
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9689999999999999, 0.9689999999999999, 0.9689999999999999, 0.0013567495346069336, 1.2788772583007813e-5, 225.64, 604.8000206500292))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:44.357
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6089999999999999, 0.6089999999999999, 0.6089999999999999, 0.0013335919380187988, 0.00040056943893432615, 250.5, 2337.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:47.192
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37999999999999995, 0.37999999999999995, NaN, 0.0014712023735046387, 0.00022440195083618165, 244.19, 3646.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-25T16:06:48.438
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5989999999999999, 0.5989999999999999, 0.5989999999999999, 0.0019168424606323241, 2.0689964294433594e-5, 239.43, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.080675422138837,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9535542582417589,"seconds":0.0018171444535255432,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.328125,"distances_sum":685.9778784513474}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.080675422138837,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9535542582417589,"seconds":0.0018171444535255432,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.328125,"distances_sum":685.9778784513474}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.45819592628516, conf: {"restarts":4}, perf: {"precision":0.9027777777777766,"recall":0.9027777777777766,"f1":0.9027777777777766,"seconds":9.015202522277832e-6,"exhaustive_search_seconds":4.680827260017395e-6,"evaluations":40.2734375,"distances_sum":290.5138900950551}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.45819592628516,"state":{"restarts":4},"perf":{"precision":0.9027777777777766,"recall":0.9027777777777766,"f1":0.9027777777777766,"seconds":9.015202522277832e-6,"exhaustive_search_seconds":4.680827260017395e-6,"evaluations":40.2734375,"distances_sum":290.5138900950551}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.45819592628516,"state":{"restarts":4},"perf":{"precision":0.9027777777777766,"recall":0.9027777777777766,"f1":0.9027777777777766,"seconds":9.015202522277832e-6,"exhaustive_search_seconds":4.680827260017395e-6,"evaluations":40.2734375,"distances_sum":290.5138900950551}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.45819592628516,"state":{"restarts":4},"perf":{"precision":0.9027777777777766,"recall":0.9027777777777766,"f1":0.9027777777777766,"seconds":9.015202522277832e-6,"exhaustive_search_seconds":4.680827260017395e-6,"evaluations":40.2734375,"distances_sum":290.5138900950551}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222214, conf: {"restarts":8}, perf: {"precision":0.8550347222222214,"recall":0.8550347222222214,"f1":0.8550347222222214,"seconds":2.7511268854141235e-5,"exhaustive_search_seconds":1.8671154975891113e-5,"evaluations":114.875,"distances_sum":123.82503200788051}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999988, conf: {"restarts":7}, perf: {"precision":0.8593749999999988,"recall":0.8593749999999988,"f1":0.8593749999999988,"seconds":2.7088448405265808e-5,"exhaustive_search_seconds":1.8671154975891113e-5,"evaluations":109.8125,"distances_sum":123.74559231940657}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999988,"state":{"restarts":7},"perf":{"precision":0.8593749999999988,"recall":0.8593749999999988,"f1":0.8593749999999988,"seconds":2.7088448405265808e-5,"exhaustive_search_seconds":1.8671154975891113e-5,"evaluations":109.8125,"distances_sum":123.74559231940657}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8593749999999988,"state":{"restarts":7},"perf":{"precision":0.8593749999999988,"recall":0.8593749999999988,"f1":0.8593749999999988,"seconds":2.7088448405265808e-5,"exhaustive_search_seconds":1.8671154975891113e-5,"evaluations":109.8125,"distances_sum":123.74559231940657}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8411458333333321, conf: {"restarts":1}, perf: {"precision":0.8411458333333321,"recall":0.8411458333333321,"f1":null,"seconds":2.6728957891464233e-5,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":131.859375,"distances_sum":58.26343836449087}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222213, conf: {"restarts":14}, perf: {"precision":0.8550347222222213,"recall":0.8550347222222213,"f1":null,"seconds":0.00017795152962207794,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":246.875,"distances_sum":57.975076008588076}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8550347222222213,"state":{"restarts":14},"perf":{"precision":0.8550347222222213,"recall":0.8550347222222213,"f1":null,"seconds":0.00017795152962207794,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":246.875,"distances_sum":57.975076008588076}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777765, conf: {"restarts":4}, perf: {"precision":0.8559027777777765,"recall":0.8559027777777765,"f1":0.8559027777777765,"seconds":3.256648778915405e-5,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":159.4453125,"distances_sum":57.53224099613726}, best_list's length: 13, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777765,"state":{"restarts":4},"perf":{"precision":0.8559027777777765,"recall":0.8559027777777765,"f1":0.8559027777777765,"seconds":3.256648778915405e-5,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":159.4453125,"distances_sum":57.53224099613726}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8559027777777765,"state":{"restarts":4},"perf":{"precision":0.8559027777777765,"recall":0.8559027777777765,"f1":0.8559027777777765,"seconds":3.256648778915405e-5,"exhaustive_search_seconds":0.0001992732286453247,"evaluations":159.4453125,"distances_sum":57.53224099613726}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(4), SatNeighborhood(32), 2020-10-25T16:06:57.482
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4917, 0.022833861f0), Item(1831, 0.029591432f0), Item(1472, 0.029613856f0), Item(1104, 0.034052193f0), Item(711, 0.03758552f0), Item(2277, 0.03847182f0), Item(8390, 0.04191656f0), Item(4810, 0.04500221f0), Item(3574, 0.046034936f0), Item(6459, 0.049807463f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0960989533777354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9381403318903325,"seconds":0.005615707486867905,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.2109375,"distances_sum":674.520866304636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0960989533777354,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9381403318903325,"seconds":0.005615707486867905,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.2109375,"distances_sum":674.520866304636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.125030826140567, conf: {"bsize":2}, perf: {"precision":0.9366319444444433,"recall":0.9366319444444433,"f1":0.9366319444444433,"seconds":1.0812655091285706e-5,"exhaustive_search_seconds":4.859641194343567e-6,"evaluations":31.6796875,"distances_sum":292.6024160608649}, best_list's length: 2, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.125030826140567,"state":{"bsize":2},"perf":{"precision":0.9366319444444433,"recall":0.9366319444444433,"f1":0.9366319444444433,"seconds":1.0812655091285706e-5,"exhaustive_search_seconds":4.859641194343567e-6,"evaluations":31.6796875,"distances_sum":292.6024160608649}}, beam: 3, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.125030826140567,"state":{"bsize":2},"perf":{"precision":0.9366319444444433,"recall":0.9366319444444433,"f1":0.9366319444444433,"seconds":1.0812655091285706e-5,"exhaustive_search_seconds":4.859641194343567e-6,"evaluations":31.6796875,"distances_sum":292.6024160608649}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.125030826140567,"state":{"bsize":2},"perf":{"precision":0.9366319444444433,"recall":0.9366319444444433,"f1":0.9366319444444433,"seconds":1.0812655091285706e-5,"exhaustive_search_seconds":4.859641194343567e-6,"evaluations":31.6796875,"distances_sum":292.6024160608649}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.713109397464383,"state":{"bsize":2},"perf":{"precision":0.9418402777777769,"recall":0.9418402777777769,"f1":0.9418402777777769,"seconds":1.7469748854637146e-5,"exhaustive_search_seconds":1.9179657101631165e-5,"evaluations":59.7734375,"distances_sum":119.19592023035511}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.713109397464383,"state":{"bsize":2},"perf":{"precision":0.9418402777777769,"recall":0.9418402777777769,"f1":0.9418402777777769,"seconds":1.7469748854637146e-5,"exhaustive_search_seconds":1.9179657101631165e-5,"evaluations":59.7734375,"distances_sum":119.19592023035511}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.8826451182445, conf: {"bsize":4}, perf: {"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":2.6850029826164246e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":105.3828125,"distances_sum":56.03550183773041}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.54316702819956, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":2.9101967811584473e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":108.046875,"distances_sum":55.998687990009785}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.04470518342492, conf: {"bsize":3}, perf: {"precision":0.9661458333333328,"recall":0.9661458333333328,"f1":0.9661458333333328,"seconds":4.692934453487396e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":105.203125,"distances_sum":56.22899439185858}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.78446340368208, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.618801176548004e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":104.390625,"distances_sum":55.998687990009785}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.4398172820708, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.651529550552368e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":102.6171875,"distances_sum":55.99960880726576}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.4398172820708,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.651529550552368e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":102.6171875,"distances_sum":55.99960880726576}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.4398172820708,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.651529550552368e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":102.6171875,"distances_sum":55.99960880726576}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.4398172820708,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.651529550552368e-5,"exhaustive_search_seconds":0.00020395219326019287,"evaluations":102.6171875,"distances_sum":55.99960880726576}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(5), SatNeighborhood(32), 2020-10-25T16:07:03.391
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5089, 0.019840078f0), Item(4989, 0.032035735f0), Item(692, 0.042033035f0), Item(8612, 0.04433324f0), Item(994, 0.044607773f0), Item(1046, 0.04497345f0), Item(4777, 0.049290095f0), Item(5455, 0.050198637f0), Item(6150, 0.055136908f0), Item(2159, 0.056099024f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
Finished at 2020-10-25T16:07:03.473
