Current time is 2020-10-25T15:58:04.064
Julia Version 1.6.0-DEV.1240
Commit 47d6067ffe (2020-10-15 19:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T15:58:09.522
  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
  Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
  Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mJLLWrappers[39m
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-25T15:58:36.295
    Testing FunctionIntegrator
Status `/tmp/jl_Sr2ZoY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Sr2ZoY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.549065 seconds (294.26 k allocations: 13.894 MiB, 2.61% gc time, 96.43% compilation time)
Running: chebyshev_quadrature with k=1
  4.248556 seconds (2.25 M allocations: 130.629 MiB, 9.83% gc time, 97.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.427699 seconds (417.68 k allocations: 24.229 MiB, 92.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.259705 seconds (483.51 k allocations: 27.390 MiB, 6.39% gc time, 92.53% compilation time)
Running: chebyshev_quadrature with k=4
  0.881933 seconds (427.02 k allocations: 23.923 MiB, 96.68% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 62.370283 seconds (35.48 M allocations: 2.980 GiB, 19.36% gc time, 88.33% compilation time)
Running: laguerre_quadrature with k=1
  6.662792 seconds (3.24 M allocations: 182.173 MiB, 6.11% gc time, 96.79% compilation time)
Running: legendre_quadrature
  0.308065 seconds (211.56 k allocations: 12.253 MiB, 98.45% compilation time)
Running: lobatto_quadrature
  1.011112 seconds (340.21 k allocations: 20.668 MiB, 99.83% compilation time)
Running: radau_quadrature
  0.534615 seconds (462.06 k allocations: 28.349 MiB, 5.71% gc time, 99.63% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 38.618616 seconds (100.02 M allocations: 1.491 GiB, 1.23% gc time, 0.56% compilation time)
Running: rectangle_rule_midpoint.
  0.140339 seconds (173.35 k allocations: 3.888 MiB, 54.94% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 39.515085 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time, 0.25% compilation time)
Running: rombergs_method
  1.381948 seconds (741.79 k allocations: 43.179 MiB, 2.04% gc time, 99.85% compilation time)
Running: simpsons_rule
  0.021347 seconds (48.04 k allocations: 2.633 MiB, 93.27% compilation time)
Running: simpsons38_rule
  0.096979 seconds (111.30 k allocations: 5.948 MiB, 97.47% compilation time)
Running: trapezoidal_rule
  0.218074 seconds (1.72 M allocations: 28.723 MiB, 5.44% gc time, 12.82% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.074519 seconds (30.72 k allocations: 1.831 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.565667 seconds (297.70 k allocations: 15.860 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=2
  0.212016 seconds (94.22 k allocations: 2.707 MiB, 18.63% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.158347 seconds (82.47 k allocations: 2.508 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.150438 seconds (65.08 k allocations: 2.154 MiB, 99.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.723637 seconds (511.34 k allocations: 162.426 MiB, 8.28% gc time, 39.61% compilation time)
Running: legendre_quadrature
  0.315471 seconds (42.23 k allocations: 2.454 MiB, 99.94% compilation time)
Running: lobatto_quadrature
  0.021202 seconds (16.21 k allocations: 1.013 MiB, 93.60% compilation time)
Running: radau_quadrature
  0.022362 seconds (16.32 k allocations: 1.020 MiB, 99.01% compilation time)
Running: rectangle_rule_left
 12.045694 seconds (471.41 M allocations: 7.025 GiB, 7.28% gc time)
Running: rectangle_rule_midpoint
  0.000011 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.226076 seconds (476.96 M allocations: 7.107 GiB, 17.50% gc time)
Running: rombergs_method
  0.448657 seconds (334.52 k allocations: 19.169 MiB, 1.90% gc time, 99.92% compilation time)
Running: simpsons_rule
  0.000021 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.129165 seconds (19.43 k allocations: 1.184 MiB, 99.40% compilation time)
Running: trapezoidal_rule
  0.038930 seconds (16.97 k allocations: 1.034 MiB, 99.73% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.010225 seconds (1.03 k allocations: 34.125 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=1
  0.152386 seconds (2.46 k allocations: 116.359 KiB, 99.96% compilation time)
Running: chebyshev_quadrature with k=2
  0.081762 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.086372 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.096182 seconds (2.31 k allocations: 109.297 KiB, 99.13% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.342087 seconds (369.80 k allocations: 19.514 MiB, 99.44% compilation time)
Running: legendre_quadrature
  0.044456 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000066 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000031 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000166 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000116 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000164 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.040328 seconds (1.04 k allocations: 56.469 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000012 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.014626 seconds (923 allocations: 39.281 KiB, 99.60% compilation time)
Running: trapezoidal_rule
  0.101208 seconds (44.29 k allocations: 702.859 KiB, 15.44% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.121529 seconds (83.49 k allocations: 5.003 MiB, 98.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.358017 seconds (235.65 k allocations: 13.386 MiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.619778 seconds (289.14 k allocations: 16.384 MiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.349793 seconds (239.80 k allocations: 13.577 MiB, 13.67% gc time, 99.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.368109 seconds (239.80 k allocations: 13.452 MiB, 99.54% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.848176 seconds (455.41 k allocations: 163.924 MiB, 18.32% gc time, 36.94% compilation time)
Running: legendre_quadrature
  0.651804 seconds (190.36 k allocations: 11.082 MiB, 99.73% compilation time)
Running: lobatto_quadrature
  0.232400 seconds (202.03 k allocations: 11.817 MiB, 98.98% compilation time)
Running: radau_quadrature
  0.198988 seconds (202.03 k allocations: 11.884 MiB, 99.07% compilation time)
Running: rectangle_rule_left
  0.364728 seconds (19.37 k allocations: 1.189 MiB, 3.26% gc time, 7.66% compilation time)
Running: rectangle_rule_midpoint
  0.212419 seconds (25.55 k allocations: 1.616 MiB, 99.94% compilation time)
Running: rectangle_rule_right
  0.526060 seconds (17.90 k allocations: 1.099 MiB, 5.24% compilation time)
Running: rombergs_method
  0.325701 seconds (137.77 k allocations: 8.045 MiB, 76.89% compilation time)
Running: simpsons_rule
  0.148215 seconds (37.98 k allocations: 2.442 MiB, 99.87% compilation time)
Running: simpsons38_rule
  0.048544 seconds (43.94 k allocations: 2.785 MiB, 94.30% compilation time)
Running: trapezoidal_rule
  0.148081 seconds (43.20 k allocations: 1.730 MiB, 98.58% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.038872 seconds (68.44 k allocations: 3.060 MiB, 97.72% compilation time)
Running: chebyshev_quadrature with k=1
  0.317396 seconds (242.24 k allocations: 13.467 MiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.235585 seconds (296.17 k allocations: 16.374 MiB, 6.59% gc time, 98.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.207067 seconds (246.37 k allocations: 13.521 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=4
  0.190784 seconds (246.37 k allocations: 13.525 MiB, 99.15% compilation time)
Running: hermite_quadrature with k=2
 28.446991 seconds (20.49 M allocations: 1.088 GiB, 7.66% gc time, 99.85% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.541507 seconds (464.58 k allocations: 50.130 MiB, 13.42% gc time, 93.17% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.461361 seconds (282.35 k allocations: 15.735 MiB, 87.96% compilation time)
Running: legendre_quadrature
  0.318764 seconds (196.90 k allocations: 11.410 MiB, 98.74% compilation time)
Running: lobatto_quadrature
  0.412552 seconds (222.69 k allocations: 37.618 MiB, 25.73% gc time, 66.97% compilation time)
Running: radau_quadrature
  0.970105 seconds (219.27 k allocations: 30.252 MiB, 55.07% gc time, 34.90% compilation time)
Running: rectangle_rule_left
  0.097544 seconds (22.28 k allocations: 1.333 MiB, 32.92% compilation time)
Running: rectangle_rule_midpoint
  0.330225 seconds (27.36 k allocations: 1.703 MiB, 99.96% compilation time)
Running: rectangle_rule_right
  0.058393 seconds (19.02 k allocations: 1.153 MiB, 99.71% compilation time)
Running: rombergs_method
  0.110270 seconds (140.11 k allocations: 8.061 MiB, 97.39% compilation time)
Running: simpsons_rule
  0.027899 seconds (45.46 k allocations: 2.710 MiB, 99.11% compilation time)
Running: simpsons38_rule
  0.115438 seconds (58.91 k allocations: 3.170 MiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.128087 seconds (29.23 k allocations: 1.655 MiB, 99.80% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.057602 seconds (52.41 k allocations: 2.720 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=1
  0.308497 seconds (237.76 k allocations: 13.249 MiB, 10.74% gc time, 99.32% compilation time)
Running: chebyshev_quadrature with k=2
  0.598109 seconds (291.35 k allocations: 16.145 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.227756 seconds (241.91 k allocations: 13.331 MiB, 98.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.285476 seconds (241.91 k allocations: 13.331 MiB, 6.79% gc time, 99.08% compilation time)
Running: hermite_quadrature with k=2
  0.311740 seconds (175.13 k allocations: 10.126 MiB, 81.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  9.517389 seconds (457.85 k allocations: 1.176 GiB, 40.06% gc time, 7.42% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.469715 seconds (277.64 k allocations: 15.547 MiB, 81.94% compilation time)
Running: legendre_quadrature
  0.232597 seconds (192.47 k allocations: 11.194 MiB, 98.95% compilation time)
Running: lobatto_quadrature
  0.640527 seconds (213.45 k allocations: 23.321 MiB, 2.81% gc time, 94.61% compilation time)
Running: radau_quadrature
  0.427030 seconds (212.60 k allocations: 21.251 MiB, 97.90% compilation time)
Running: rectangle_rule_left
  0.142500 seconds (20.07 k allocations: 1.228 MiB, 10.65% gc time, 99.92% compilation time)
Running: rectangle_rule_midpoint
  0.014453 seconds (26.25 k allocations: 1.652 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.012970 seconds (17.87 k allocations: 1.098 MiB, 99.25% compilation time)
Running: rombergs_method
  0.203733 seconds (135.95 k allocations: 7.879 MiB, 99.12% compilation time)
Running: simpsons_rule
  0.020614 seconds (40.80 k allocations: 2.541 MiB, 99.25% compilation time)
Running: simpsons38_rule
  0.253006 seconds (49.73 k allocations: 2.931 MiB, 99.93% compilation time)
Running: trapezoidal_rule
  0.074148 seconds (24.14 k allocations: 1.492 MiB, 99.77% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.081355 seconds (40.61 k allocations: 2.580 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.324613 seconds (236.14 k allocations: 13.461 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.369702 seconds (289.64 k allocations: 16.497 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.346710 seconds (240.28 k allocations: 13.544 MiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.278775 seconds (240.28 k allocations: 13.378 MiB, 95.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.842844 seconds (455.94 k allocations: 195.031 MiB, 4.94% gc time, 48.71% compilation time)
Running: legendre_quadrature
  0.247664 seconds (190.85 k allocations: 11.108 MiB, 98.96% compilation time)
Running: lobatto_quadrature
  0.215998 seconds (202.53 k allocations: 11.846 MiB, 98.83% compilation time)
Running: radau_quadrature
  0.410283 seconds (202.53 k allocations: 11.847 MiB, 99.42% compilation time)
Running: rectangle_rule_left
  0.404816 seconds (19.89 k allocations: 1.214 MiB, 26.52% compilation time)
Running: rectangle_rule_midpoint
  0.397693 seconds (25.89 k allocations: 1.634 MiB, 7.47% gc time, 80.51% compilation time)
Running: rectangle_rule_right
  0.475568 seconds (18.24 k allocations: 1.118 MiB, 64.60% compilation time)
Running: rombergs_method
  0.186163 seconds (149.07 k allocations: 8.789 MiB, 98.11% compilation time)
Running: simpsons_rule
  0.226957 seconds (38.61 k allocations: 2.470 MiB, 99.94% compilation time)
Running: simpsons38_rule
  0.032732 seconds (44.65 k allocations: 2.815 MiB, 69.34% compilation time)
Running: trapezoidal_rule
  0.010141 seconds (44.13 k allocations: 1.763 MiB, 96.76% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.052100 seconds (40.35 k allocations: 2.510 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.226270 seconds (236.73 k allocations: 13.419 MiB, 97.14% compilation time)
Running: chebyshev_quadrature with k=2
  0.410434 seconds (290.27 k allocations: 16.392 MiB, 13.40% gc time, 99.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.363849 seconds (240.88 k allocations: 13.470 MiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.369098 seconds (240.87 k allocations: 13.545 MiB, 99.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.810759 seconds (456.66 k allocations: 149.782 MiB, 16.77% gc time, 37.49% compilation time)
Running: legendre_quadrature
  0.213708 seconds (191.45 k allocations: 11.126 MiB, 98.45% compilation time)
Running: lobatto_quadrature
  0.269710 seconds (203.13 k allocations: 11.867 MiB, 92.01% compilation time)
Running: radau_quadrature
  0.477855 seconds (203.12 k allocations: 11.861 MiB, 99.57% compilation time)
Running: rectangle_rule_left
  0.479849 seconds (20.14 k allocations: 1.227 MiB, 4.45% compilation time)
Running: rectangle_rule_midpoint
  0.470957 seconds (25.89 k allocations: 1.635 MiB, 5.46% gc time, 85.76% compilation time)
Running: rectangle_rule_right
  0.574392 seconds (18.20 k allocations: 1.115 MiB, 7.20% compilation time)
Running: rombergs_method
  0.386794 seconds (138.99 k allocations: 8.082 MiB, 98.89% compilation time)
Running: simpsons_rule
  0.041070 seconds (39.09 k allocations: 2.489 MiB, 99.41% compilation time)
Running: simpsons38_rule
  0.086664 seconds (45.35 k allocations: 2.842 MiB, 99.77% compilation time)
Running: trapezoidal_rule
  0.093293 seconds (56.28 k allocations: 1.959 MiB, 95.23% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.563077 seconds (152.11 k allocations: 9.116 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.312466 seconds (70.34 k allocations: 2.237 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.241394 seconds (105.50 k allocations: 2.900 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=3
  0.162411 seconds (92.98 k allocations: 2.686 MiB, 91.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.169731 seconds (72.52 k allocations: 2.280 MiB, 99.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.540611 seconds (486.23 k allocations: 168.244 MiB, 12.73% gc time, 27.50% compilation time)
Running: legendre_quadrature
  0.171652 seconds (19.14 k allocations: 1.125 MiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000088 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 17.886218 seconds (590.00 M allocations: 8.792 GiB, 13.20% gc time)
Running: rectangle_rule_midpoint
  0.000039 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 18.266355 seconds (592.75 M allocations: 8.833 GiB, 9.44% gc time)
Running: rombergs_method
  0.135154 seconds (20.91 k allocations: 1.197 MiB, 99.52% compilation time)
Running: simpsons_rule
  0.000037 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030369 seconds (463 allocations: 22.578 KiB, 99.59% compilation time)
Running: trapezoidal_rule
  0.018412 seconds (171 allocations: 7.859 KiB, 99.35% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 23.943679 seconds (209.94 M allocations: 3.138 GiB, 4.11% gc time, 0.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.648292 seconds (423.03 k allocations: 23.685 MiB, 2.11% gc time, 99.58% compilation time)
Running: chebyshev_quadrature with k=2
 15.710597 seconds (478.60 k allocations: 4.041 GiB, 5.30% gc time, 6.40% compilation time)
Running: chebyshev_quadrature with k=3
  7.431804 seconds (254.26 k allocations: 1.642 GiB, 3.85% gc time, 5.32% compilation time)
Running: chebyshev_quadrature with k=4
 10.304379 seconds (254.26 k allocations: 2.261 GiB, 2.52% gc time, 3.54% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.580215 seconds (493.54 k allocations: 13.255 GiB, 10.12% gc time, 3.70% compilation time)
Running: legendre_quadrature.
  9.264991 seconds (228.94 k allocations: 1.976 GiB, 6.95% gc time, 11.68% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.054172 seconds (8.24 M allocations: 13.384 GiB, 15.00% gc time, 1.00% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.266203 seconds (7.24 M allocations: 13.369 GiB, 13.74% gc time, 0.75% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.638119 seconds (22.88 k allocations: 1.394 MiB, 0.35% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.358828 seconds (31.46 k allocations: 1.956 MiB, 0.52% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.614540 seconds (23.09 k allocations: 1.403 MiB, 0.37% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.781171 seconds (448.73 k allocations: 153.522 MiB, 2.27% gc time, 16.63% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 23.906407 seconds (200.04 M allocations: 2.983 GiB, 1.99% gc time, 0.40% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.558828 seconds (600.05 M allocations: 8.944 GiB, 6.13% gc time, 0.96% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.107176 seconds (600.03 M allocations: 8.943 GiB, 4.98% gc time, 0.88% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.103390 seconds (111.10 k allocations: 4.245 MiB, 96.67% compilation time)
Running: chebyshev_quadrature with k=1
  0.491570 seconds (252.71 k allocations: 13.885 MiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=2
  0.317294 seconds (277.25 k allocations: 14.962 MiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.375690 seconds (224.24 k allocations: 11.983 MiB, 34.43% gc time, 99.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.367879 seconds (224.24 k allocations: 12.011 MiB, 99.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.609732 seconds (395.24 k allocations: 35.560 MiB, 94.07% compilation time)
Running: laguerre_quadrature with k=2
  0.294067 seconds (185.19 k allocations: 10.841 MiB, 87.53% compilation time)
Running: legendre_quadrature
  0.244517 seconds (149.17 k allocations: 8.338 MiB, 89.47% compilation time)
Running: lobatto_quadrature
  0.099867 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.188559 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.249853 seconds (19.35 k allocations: 1.157 MiB, 94.35% compilation time)
Running: rectangle_rule_midpoint
  0.282517 seconds (26.33 k allocations: 1.636 MiB, 73.12% compilation time)
Running: rectangle_rule_right
  0.380787 seconds (17.96 k allocations: 1.084 MiB, 95.56% compilation time)
Running: rombergs_method
  0.391924 seconds (176.05 k allocations: 10.125 MiB, 99.28% compilation time)
Running: simpsons_rule
  0.000269 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.076169 seconds (80.36 k allocations: 3.491 MiB, 99.25% compilation time)
Running: trapezoidal_rule
  0.068614 seconds (2.39 M allocations: 37.744 MiB, 28.52% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000623 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.163025 seconds (2.46 k allocations: 1.691 MiB, 86.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.121183 seconds (2.71 k allocations: 2.355 MiB, 92.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.100900 seconds (2.31 k allocations: 2.028 MiB, 96.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.162111 seconds (2.31 k allocations: 1.469 MiB, 98.61% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.678090 seconds (372.07 k allocations: 905.349 MiB, 6.00% gc time, 5.81% compilation time)
Running: legendre_quadrature
  0.076251 seconds (1.27 k allocations: 68.203 KiB, 85.62% compilation time)
Running: lobatto_quadrature
  0.000152 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000121 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.376726 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000343 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.388058 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.069443 seconds (993 allocations: 56.609 KiB, 99.39% compilation time)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001017 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000248 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.111512 seconds (2.53 k allocations: 579.203 KiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.170480 seconds (2.79 k allocations: 780.188 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.100606 seconds (2.39 k allocations: 661.047 KiB, 99.15% compilation time)
Running: chebyshev_quadrature with k=4
  0.111466 seconds (2.39 k allocations: 491.547 KiB, 82.67% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.174301 seconds (378.63 k allocations: 253.460 MiB, 35.26% compilation time)
Running: legendre_quadrature
  0.063435 seconds (1.32 k allocations: 67.859 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000097 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000051 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.067205 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000127 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.058032 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094159 seconds (1.21 k allocations: 64.875 KiB, 99.54% compilation time)
Running: simpsons_rule
  0.000015 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000492 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
Finished at 2020-10-25T16:09:31.847
