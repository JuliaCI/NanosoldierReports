Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_sx6mEX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_sx6mEX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721124729917476
curgen: 20 fitness: 0.21721124729917476
curgen: 30 fitness: 0.21723359585695878
curgen: 40 fitness: 0.21723359585695878
curgen: 50 fitness: 0.21723359585695878
CoordinateCreature{Vector{Float64}}([0.2225751918292681], -0.21723359585695878) 0.2225751918292681 -0.21723359585695878
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581110208435113
curgen: 100 fitness: 3.2581787273775915
curgen: 150 fitness: 3.2582201441604934
curgen: 200 fitness: 3.258247370649231
curgen: 250 fitness: 3.258298826158289
curgen: 300 fitness: 3.2583544043901083
curgen: 350 fitness: 3.2583544043901083
curgen: 400 fitness: 3.258384707930508
curgen: 450 fitness: 3.258384707930508
curgen: 500 fitness: 3.258385175466578
CoordinateCreature{Vector{Float64}}([-0.22139381631178467, -0.2230382270217677, -0.2228324964933539, 0.22226304657680268, -0.22261085953992943, 0.22267464677101798, 0.222621491061634, -0.22275915041886968, 0.22253807459200994, -0.22205309511378965, -0.22252212223277346, -0.2219494145421734, 0.22231424240747713, 0.2227690824087637, 0.22213624218934266], -3.258385175466578) [-0.22139381631178467, -0.2230382270217677, -0.2228324964933539, 0.22226304657680268, -0.22261085953992943, 0.22267464677101798, 0.222621491061634, -0.22275915041886968, 0.22253807459200994, -0.22205309511378965, -0.22252212223277346, -0.2219494145421734, 0.22231424240747713, 0.2227690824087637, 0.22213624218934266] -3.258385175466578
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00225159331111513
curgen: 100 fitness: -0.0018557766888989136
curgen: 150 fitness: -0.001746876711507639
curgen: 200 fitness: -0.001614157341492728
curgen: 250 fitness: -0.0015643778080516313
curgen: 300 fitness: -0.0009651103212604539
curgen: 350 fitness: -0.0009651103212604539
curgen: 400 fitness: -0.0009371537444451405
curgen: 450 fitness: -0.0008671635036137104
curgen: 500 fitness: -0.0007654917155832663
CoordinateCreature{Vector{Float64}}([-0.00031887248154590145, -0.0003010116569250598, 0.0007382351113241802, 0.0004211460172602866, -0.00029161812775631345, 8.730406847774893e-5, -0.00011484145528737301, 7.806713196538008e-5, 7.397469528827453e-5, 0.00015954307987696913, 0.00037330729087376585, -0.0007348640770058574, 0.0004944112498987122, -0.0008605768305082638, 0.0010660927711703522], 0.0007654917155832663) [-0.00031887248154590145, -0.0003010116569250598, 0.0007382351113241802, 0.0004211460172602866, -0.00029161812775631345, 8.730406847774893e-5, -0.00011484145528737301, 7.806713196538008e-5, 7.397469528827453e-5, 0.00015954307987696913, 0.00037330729087376585, -0.0007348640770058574, 0.0004944112498987122, -0.0008605768305082638, 0.0010660927711703522] 0.0007654917155832663
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
