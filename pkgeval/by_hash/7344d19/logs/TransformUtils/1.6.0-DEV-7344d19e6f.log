Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_q33LU0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_q33LU0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06261250008773504 0.16951638229314078; -0.06261250008773504 0.0 -0.1193915658843806; -0.16951638229314078 0.1193915658843806 0.0])
dAA = so3([0.0 0.07277169025624884 0.09913212253825879; -0.07277169025624884 0.0 -0.09177621202904035; -0.09913212253825879 0.09177621202904035 0.0])
dAA = so3([0.0 -0.05523990581600724 0.04515312408621829; 0.05523990581600724 0.0 -0.036388711559857005; -0.04515312408621829 0.036388711559857005 0.0])
dAA = Quaternion(0.9961370335302759, [-0.07489040718942112, -0.017612256519456113, -0.04233492365408951])
dAA = SO3([0.9887306256791073 0.13946386400552793 -0.054420405004454206; -0.13027350149031205 0.980635518591233 0.14622856932473008; 0.07376018338951494 -0.13749112812814993 0.9877528157552344])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.953317670256195 0.20558399490840804 0.22118010899445797; -0.14941559295480766 0.9576525680726319 -0.24612301689573116; -0.2624126524374613 0.20158566392824862 0.9436645696111216]), [1.193915658843806, 1.6951638229314077, -0.6261250008773505])
xj = SE3(SO3([0.9741035542203166 0.21715191243206744 -0.06298660637343789; -0.17932524453085139 0.9116660038402744 0.36973984653517555; 0.13771246250538494 -0.3488698100567038 0.9269979143998667]), [0.36388711559857, 0.4515312408621829, 0.5523990581600724])
Dx = SE3(SO3([0.919286626081202 0.1623454909232142 -0.3585471247760065; 0.056289677371211176 0.8473750951771353 0.5280027654236159; 0.3895427721440683 -0.5055683827638371 0.7698422169638873]), [-0.9147224017182733, -1.1240349648692798, 1.2346321982931148])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
