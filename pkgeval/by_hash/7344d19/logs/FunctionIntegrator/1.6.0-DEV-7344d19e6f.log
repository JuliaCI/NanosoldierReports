Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_GaHEk0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_GaHEk0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.157101 seconds (379.80 k allocations: 15.432 MiB, 4.88% gc time, 93.56% compilation time)
Running: chebyshev_quadrature with k=1
  0.783148 seconds (2.20 M allocations: 126.684 MiB, 3.47% gc time, 98.18% compilation time)
Running: chebyshev_quadrature with k=2
  0.116020 seconds (409.38 k allocations: 23.552 MiB, 82.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.163358 seconds (473.75 k allocations: 26.611 MiB, 6.49% gc time, 84.19% compilation time)
Running: chebyshev_quadrature with k=4
  0.142149 seconds (418.55 k allocations: 23.255 MiB, 6.02% gc time, 90.17% compilation time)
Running: jacobi_quadrature with α=β=1
 22.668418 seconds (36.42 M allocations: 3.001 GiB, 12.08% gc time, 77.78% compilation time)
Running: laguerre_quadrature with k=1
  1.869263 seconds (3.17 M allocations: 177.047 MiB, 3.57% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.116276 seconds (206.00 k allocations: 11.822 MiB, 98.98% compilation time)
Running: lobatto_quadrature
  0.186180 seconds (329.29 k allocations: 19.881 MiB, 99.11% compilation time)
Running: radau_quadrature
  0.220593 seconds (448.27 k allocations: 27.343 MiB, 9.40% gc time, 99.34% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 35.564024 seconds (100.02 M allocations: 1.491 GiB, 0.38% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.075115 seconds (172.46 k allocations: 3.827 MiB, 32.93% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 45.268010 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time, 0.08% compilation time)
Running: rombergs_method
  0.614168 seconds (722.69 k allocations: 41.778 MiB, 3.23% gc time, 99.65% compilation time)
Running: simpsons_rule
  0.049715 seconds (45.77 k allocations: 2.043 MiB, 96.40% compilation time)
Running: simpsons38_rule
  0.096293 seconds (108.41 k allocations: 5.746 MiB, 97.82% compilation time)
Running: trapezoidal_rule
  0.259126 seconds (1.51 M allocations: 25.666 MiB, 6.35% gc time, 38.49% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.059764 seconds (30.98 k allocations: 1.864 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.448547 seconds (290.13 k allocations: 15.334 MiB, 99.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.143101 seconds (93.80 k allocations: 2.675 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.137675 seconds (82.06 k allocations: 2.476 MiB, 92.71% compilation time)
Running: chebyshev_quadrature with k=4
  0.148036 seconds (64.67 k allocations: 2.122 MiB, 98.85% compilation time)
Running: jacobi_quadrature with α=β=1
  2.086204 seconds (503.60 k allocations: 161.792 MiB, 9.98% gc time, 25.95% compilation time)
Running: legendre_quadrature
  0.151742 seconds (41.06 k allocations: 2.361 MiB, 98.34% compilation time)
Running: lobatto_quadrature
  0.017656 seconds (15.45 k allocations: 980.919 KiB, 99.16% compilation time)
Running: radau_quadrature
  0.024602 seconds (15.56 k allocations: 988.134 KiB, 99.40% compilation time)
Running: rectangle_rule_left
 12.837826 seconds (471.41 M allocations: 7.025 GiB, 6.43% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.558633 seconds (476.96 M allocations: 7.107 GiB, 4.04% gc time)
Running: rombergs_method
  0.442272 seconds (326.23 k allocations: 18.509 MiB, 99.92% compilation time)
Running: simpsons_rule
  0.000016 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.048286 seconds (18.91 k allocations: 1.146 MiB, 99.83% compilation time)
Running: trapezoidal_rule
  0.051616 seconds (17.40 k allocations: 1.054 MiB, 13.34% gc time, 99.85% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026681 seconds (1.99 k allocations: 53.594 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.093311 seconds (2.46 k allocations: 116.359 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.091146 seconds (2.71 k allocations: 124.266 KiB, 99.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.098341 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.089056 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with α=β=1
  0.326085 seconds (363.66 k allocations: 18.981 MiB, 99.38% compilation time)
Running: legendre_quadrature
  0.074555 seconds (1.28 k allocations: 65.891 KiB, 99.92% compilation time)
Running: lobatto_quadrature
  0.000125 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000328 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000222 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000311 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.066540 seconds (1.04 k allocations: 56.531 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000027 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.016846 seconds (923 allocations: 39.281 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.015463 seconds (44.33 k allocations: 704.859 KiB, 92.91% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065274 seconds (72.31 k allocations: 4.214 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=1
  0.243117 seconds (230.61 k allocations: 12.965 MiB, 16.52% gc time, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.243885 seconds (283.17 k allocations: 15.901 MiB, 93.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.145639 seconds (234.76 k allocations: 13.155 MiB, 98.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.214158 seconds (234.76 k allocations: 13.067 MiB, 9.64% gc time, 99.14% compilation time)
Running: jacobi_quadrature with α=β=1
  1.695619 seconds (446.74 k allocations: 163.188 MiB, 7.05% gc time, 32.87% compilation time)
Running: legendre_quadrature
  0.221514 seconds (185.44 k allocations: 10.709 MiB, 10.89% gc time, 99.30% compilation time)
Running: lobatto_quadrature
  0.153768 seconds (196.62 k allocations: 11.412 MiB, 98.87% compilation time)
Running: radau_quadrature
  0.195217 seconds (196.62 k allocations: 11.410 MiB, 99.07% compilation time)
Running: rectangle_rule_left
  0.697347 seconds (18.82 k allocations: 1.147 MiB, 5.91% compilation time)
Running: rectangle_rule_midpoint
  0.031210 seconds (24.67 k allocations: 1.555 MiB, 97.48% compilation time)
Running: rectangle_rule_right
  0.675233 seconds (17.39 k allocations: 1.065 MiB, 6.11% compilation time)
Running: rombergs_method
  0.177763 seconds (134.27 k allocations: 7.774 MiB, 98.56% compilation time)
Running: simpsons_rule
  0.037150 seconds (27.54 k allocations: 1.729 MiB, 99.60% compilation time)
Running: simpsons38_rule
  0.041202 seconds (42.37 k allocations: 2.678 MiB, 99.59% compilation time)
Running: trapezoidal_rule
  0.020512 seconds (44.10 k allocations: 1.772 MiB, 96.62% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051533 seconds (99.53 k allocations: 2.979 MiB, 36.05% gc time, 96.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.285415 seconds (237.20 k allocations: 13.058 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=2
  0.176377 seconds (290.20 k allocations: 15.871 MiB, 98.64% compilation time)
Running: chebyshev_quadrature with k=3
  0.219939 seconds (241.33 k allocations: 13.117 MiB, 99.20% compilation time)
Running: chebyshev_quadrature with k=4
  0.212035 seconds (241.34 k allocations: 13.121 MiB, 11.44% gc time, 99.18% compilation time)
Running: hermite_quadrature with k=2
 16.361739 seconds (20.10 M allocations: 1.056 GiB, 9.11% gc time, 99.99% compilation time)
Running: jacobi_quadrature with α=β=1
  0.381497 seconds (455.92 k allocations: 49.466 MiB, 92.36% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.273844 seconds (276.26 k allocations: 15.243 MiB, 98.84% compilation time)
Running: legendre_quadrature
  0.192207 seconds (191.98 k allocations: 11.070 MiB, 98.83% compilation time)
Running: lobatto_quadrature
  0.459010 seconds (217.28 k allocations: 37.185 MiB, 52.02% gc time, 42.14% compilation time)
Running: radau_quadrature
  0.292577 seconds (213.86 k allocations: 29.846 MiB, 5.71% gc time, 87.27% compilation time)
Running: rectangle_rule_left
  0.026412 seconds (21.73 k allocations: 1.293 MiB, 99.09% compilation time)
Running: rectangle_rule_midpoint
  0.028716 seconds (26.47 k allocations: 1.642 MiB, 99.48% compilation time)
Running: rectangle_rule_right
  0.019158 seconds (18.50 k allocations: 1.117 MiB, 99.34% compilation time)
Running: rombergs_method
  0.133168 seconds (136.74 k allocations: 7.809 MiB, 98.44% compilation time)
Running: simpsons_rule
  0.028630 seconds (39.38 k allocations: 2.061 MiB, 98.93% compilation time)
Running: simpsons38_rule
  0.034223 seconds (57.34 k allocations: 3.063 MiB, 98.94% compilation time)
Running: trapezoidal_rule
  0.029898 seconds (30.13 k allocations: 1.697 MiB, 99.23% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040564 seconds (59.92 k allocations: 2.280 MiB, 97.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.223987 seconds (232.72 k allocations: 12.824 MiB, 8.02% gc time, 99.07% compilation time)
Running: chebyshev_quadrature with k=2
  0.279485 seconds (285.38 k allocations: 15.643 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.219686 seconds (236.87 k allocations: 12.928 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=4
  0.255492 seconds (236.87 k allocations: 12.929 MiB, 7.93% gc time, 99.16% compilation time)
Running: hermite_quadrature with k=2
  0.142745 seconds (170.78 k allocations: 9.790 MiB, 98.51% compilation time)
Running: jacobi_quadrature with α=β=1
  7.497258 seconds (449.18 k allocations: 1.175 GiB, 29.09% gc time, 5.51% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.239242 seconds (271.55 k allocations: 15.063 MiB, 98.61% compilation time)
Running: legendre_quadrature
  0.212252 seconds (187.55 k allocations: 10.817 MiB, 8.17% gc time, 98.00% compilation time)
Running: lobatto_quadrature
  0.229450 seconds (208.04 k allocations: 22.977 MiB, 88.72% compilation time)
Running: radau_quadrature
  0.241955 seconds (207.19 k allocations: 20.844 MiB, 7.01% gc time, 94.44% compilation time)
Running: rectangle_rule_left
  0.020678 seconds (19.52 k allocations: 1.188 MiB, 99.43% compilation time)
Running: rectangle_rule_midpoint
  0.019997 seconds (25.36 k allocations: 1.591 MiB, 99.41% compilation time)
Running: rectangle_rule_right
  0.017048 seconds (17.36 k allocations: 1.062 MiB, 99.30% compilation time)
Running: rombergs_method
  0.172270 seconds (132.58 k allocations: 7.637 MiB, 95.97% compilation time)
Running: simpsons_rule
  0.052874 seconds (31.90 k allocations: 1.853 MiB, 88.12% compilation time)
Running: simpsons38_rule
  0.067804 seconds (48.16 k allocations: 2.821 MiB, 99.67% compilation time)
Running: trapezoidal_rule
  0.026744 seconds (25.05 k allocations: 1.535 MiB, 99.26% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033664 seconds (30.87 k allocations: 1.875 MiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.259629 seconds (231.10 k allocations: 13.042 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.310168 seconds (283.67 k allocations: 15.985 MiB, 8.90% gc time, 98.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.190132 seconds (235.25 k allocations: 13.146 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=4
  0.173288 seconds (235.25 k allocations: 12.971 MiB, 98.74% compilation time)
Running: jacobi_quadrature with α=β=1
  1.297433 seconds (447.28 k allocations: 194.236 MiB, 8.22% gc time, 37.69% compilation time)
Running: legendre_quadrature
  0.143815 seconds (185.93 k allocations: 10.745 MiB, 98.56% compilation time)
Running: lobatto_quadrature
  0.181368 seconds (197.11 k allocations: 11.437 MiB, 98.93% compilation time)
Running: radau_quadrature
  0.229937 seconds (197.12 k allocations: 11.459 MiB, 98.99% compilation time)
Running: rectangle_rule_left
  0.382123 seconds (19.34 k allocations: 1.173 MiB, 5.01% gc time, 18.82% compilation time)
Running: rectangle_rule_midpoint
  0.035183 seconds (25.01 k allocations: 1.573 MiB, 99.65% compilation time)
Running: rectangle_rule_right
  0.169119 seconds (17.73 k allocations: 1.081 MiB, 17.75% compilation time)
Running: rombergs_method
  0.133698 seconds (145.02 k allocations: 8.483 MiB, 97.13% compilation time)
Running: simpsons_rule
  0.038199 seconds (28.23 k allocations: 1.758 MiB, 99.53% compilation time)
Running: simpsons38_rule
  0.042343 seconds (43.08 k allocations: 2.708 MiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.026064 seconds (45.03 k allocations: 1.805 MiB, 97.52% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.061088 seconds (31.64 k allocations: 1.826 MiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.223257 seconds (231.69 k allocations: 12.988 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.301008 seconds (284.30 k allocations: 15.896 MiB, 8.83% gc time, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.270104 seconds (235.84 k allocations: 13.067 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.206449 seconds (235.84 k allocations: 13.147 MiB, 98.77% compilation time)
Running: jacobi_quadrature with α=β=1
  1.682212 seconds (447.99 k allocations: 148.917 MiB, 7.32% gc time, 28.47% compilation time)
Running: legendre_quadrature
  0.182608 seconds (186.53 k allocations: 10.750 MiB, 78.10% compilation time)
Running: lobatto_quadrature
  0.254249 seconds (197.72 k allocations: 11.461 MiB, 99.10% compilation time)
Running: radau_quadrature
  0.224445 seconds (197.71 k allocations: 11.454 MiB, 98.23% compilation time)
Running: rectangle_rule_left
  0.679589 seconds (19.59 k allocations: 1.186 MiB, 3.68% compilation time)
Running: rectangle_rule_midpoint
  0.024760 seconds (25.01 k allocations: 1.574 MiB, 99.38% compilation time)
Running: rectangle_rule_right
  0.655558 seconds (17.69 k allocations: 1.078 MiB, 5.45% compilation time)
Running: rombergs_method
  0.183886 seconds (135.49 k allocations: 7.815 MiB, 10.28% gc time, 98.20% compilation time)
Running: simpsons_rule
  0.032090 seconds (28.93 k allocations: 1.785 MiB, 99.50% compilation time)
Running: simpsons38_rule
  0.045736 seconds (43.78 k allocations: 2.734 MiB, 99.62% compilation time)
Running: trapezoidal_rule
  0.046238 seconds (57.27 k allocations: 2.006 MiB, 81.29% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.213419 seconds (146.69 k allocations: 8.793 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.145661 seconds (69.93 k allocations: 2.205 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.157428 seconds (105.09 k allocations: 2.868 MiB, 98.02% compilation time)
Running: chebyshev_quadrature with k=3
  0.191960 seconds (92.57 k allocations: 2.654 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.141068 seconds (72.10 k allocations: 2.248 MiB, 98.71% compilation time)
Running: jacobi_quadrature with α=β=1
  1.283265 seconds (480.13 k allocations: 167.756 MiB, 13.29% gc time, 30.01% compilation time)
Running: legendre_quadrature
  0.136426 seconds (18.73 k allocations: 1.094 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000085 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.759009 seconds (590.00 M allocations: 8.792 GiB, 5.65% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.260717 seconds (592.75 M allocations: 8.833 GiB, 5.55% gc time)
Running: rombergs_method
  0.186637 seconds (20.51 k allocations: 1.165 MiB, 96.99% compilation time)
Running: simpsons_rule
  0.000026 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.022991 seconds (463 allocations: 22.578 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.019002 seconds (179 allocations: 8.766 KiB, 99.43% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.462194 seconds (629.32 M allocations: 9.387 GiB, 4.29% gc time, 0.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.559406 seconds (413.90 k allocations: 22.945 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=2
 17.479223 seconds (468.54 k allocations: 4.040 GiB, 2.66% gc time, 3.30% compilation time)
Running: chebyshev_quadrature with k=3
  8.095832 seconds (249.12 k allocations: 1.642 GiB, 3.52% gc time, 3.84% compilation time)
Running: chebyshev_quadrature with k=4
 11.119706 seconds (249.12 k allocations: 2.260 GiB, 2.31% gc time, 2.81% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 33.305042 seconds (483.95 k allocations: 13.254 GiB, 9.10% gc time, 2.18% compilation time)
Running: legendre_quadrature.
  9.510900 seconds (223.16 k allocations: 1.976 GiB, 1.12% gc time, 2.22% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.033835 seconds (8.23 M allocations: 13.383 GiB, 11.90% gc time, 0.81% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.908830 seconds (7.23 M allocations: 13.369 GiB, 9.15% gc time, 0.83% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.135489 seconds (22.25 k allocations: 1.347 MiB, 0.21% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.176242 seconds (30.45 k allocations: 1.884 MiB, 0.32% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.838327 seconds (22.45 k allocations: 1.357 MiB, 0.18% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.013858 seconds (438.01 k allocations: 152.721 MiB, 1.71% gc time, 19.36% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.147044 seconds (600.04 M allocations: 8.943 GiB, 6.02% gc time, 0.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.743317 seconds (600.05 M allocations: 8.943 GiB, 5.95% gc time, 0.28% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.807756 seconds (600.03 M allocations: 8.943 GiB, 5.99% gc time, 0.20% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058047 seconds (180.45 k allocations: 4.404 MiB, 90.91% compilation time)
Running: chebyshev_quadrature with k=1
  0.196212 seconds (247.70 k allocations: 13.449 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.251792 seconds (272.34 k allocations: 14.523 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=3
  0.204903 seconds (220.25 k allocations: 11.631 MiB, 99.36% compilation time)
Running: chebyshev_quadrature with k=4
  0.185234 seconds (220.25 k allocations: 11.626 MiB, 99.24% compilation time)
Running: jacobi_quadrature with α=β=1
  0.357429 seconds (388.86 k allocations: 34.992 MiB, 90.20% compilation time)
Running: laguerre_quadrature with k=2
  0.261389 seconds (180.54 k allocations: 10.477 MiB, 86.06% compilation time)
Running: legendre_quadrature
  0.136686 seconds (145.99 k allocations: 8.082 MiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.019711 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.020994 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.044517 seconds (18.88 k allocations: 1.122 MiB, 62.13% compilation time)
Running: rectangle_rule_midpoint
  0.065500 seconds (25.48 k allocations: 1.576 MiB, 85.57% compilation time)
Running: rectangle_rule_right
  0.039131 seconds (17.48 k allocations: 1.049 MiB, 58.34% compilation time)
Running: rombergs_method
  0.461582 seconds (172.65 k allocations: 9.887 MiB, 28.20% gc time, 99.46% compilation time)
Running: simpsons_rule
  0.000693 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.116808 seconds (78.86 k allocations: 3.384 MiB, 99.17% compilation time)
Running: trapezoidal_rule
  0.084531 seconds (2.39 M allocations: 37.691 MiB, 32.43% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001219 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.120357 seconds (2.46 k allocations: 1.691 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.115321 seconds (2.71 k allocations: 2.355 MiB, 96.80% compilation time)
Running: chebyshev_quadrature with k=3
  0.106885 seconds (2.31 k allocations: 2.028 MiB, 96.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.103552 seconds (2.31 k allocations: 1.469 MiB, 97.23% compilation time)
Running: jacobi_quadrature with α=β=1
  5.739114 seconds (365.94 k allocations: 904.861 MiB, 6.09% gc time, 6.49% compilation time)
Running: legendre_quadrature
  0.090926 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000216 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000138 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.603471 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000350 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.581306 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.069601 seconds (997 allocations: 56.672 KiB, 99.46% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000558 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000174 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.098602 seconds (2.53 k allocations: 579.203 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.079364 seconds (2.79 k allocations: 780.188 KiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=3
  0.107960 seconds (2.39 k allocations: 661.047 KiB, 99.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.110440 seconds (2.39 k allocations: 491.547 KiB, 99.31% compilation time)
Running: jacobi_quadrature with α=β=1
  2.484938 seconds (372.50 k allocations: 252.967 MiB, 12.70% gc time, 16.37% compilation time)
Running: legendre_quadrature
  0.059266 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000070 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000733 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.208178 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000099 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.188134 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071971 seconds (1.21 k allocations: 64.938 KiB, 99.48% compilation time)
Running: simpsons_rule
  0.000009 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000015 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000249 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
