Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Metadata ─────── v0.2.0
  Installed Requires ─────── v1.1.0
  Installed ArrayInterface ─ v2.13.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [4fb893c1] + Metadata v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.13.3
  [4fb893c1] + Metadata v0.2.0
  [ae029012] + Requires v1.1.0
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [cf7118a7] + UUIDs
    Testing Metadata
Status `/tmp/jl_AzJRPW/Project.toml`
  [4fba245c] ArrayInterface v2.13.3
  [e30172f5] Documenter v0.25.2
  [4fb893c1] Metadata v0.2.0
  [8dfed614] Test
Status `/tmp/jl_AzJRPW/Manifest.toml`
  [4fba245c] ArrayInterface v2.13.3
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [4fb893c1] Metadata v0.2.0
  [69de0a69] Parsers v1.0.10
  [ae029012] Requires v1.1.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
MetaID        |   19     19
Test Summary: | Pass  Total
methods       |   10     10
Test Summary: | Pass  Total
MetaArray     |   33     33
Test Summary: | Pass  Total
MetaRange     |    8      8
Test Summary: | Pass  Total
MetaUnitRange |   19     19
Test Summary:                  | Pass  Total
LinearIndices/CartesianIndices |   12     12
Test Summary:            | Pass  Total
MetaArray(LinearIndices) |    2      2
Test Summary: | Pass  Total
MetaIO        |   18     18
Test Summary:        | Pass  Total
ElementwiseMetaArray |   10     10
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/ranges.jl:10-18
│ 
│ ```jldoctest
│ julia> using Metadata
│ 
│ julia> Metadata.MetaRange(1:1:2, (m1 =1, m2=[1, 2]))
│ attach_metadata(1:1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Metadata.MetaRange(1:1:2, (m1 =1, m2=[1, 2]))
│ 
│ Evaluated output:
│ 
│ attach_metadata(1:1:2, ::NamedTuple{(:m1, :m2), Tuple{Int64, Vector{Int64}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│ Expected output:
│ 
│ attach_metadata(1:1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│   diff =
│    Warning: Diff output requires color.
│    attach_metadata(1:1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│      :m2), Tuple{Int64, Vector{Int64}}})
│      • metadata:
│        - m1 = 1
│        - m2 = [1, 2]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/metaarray.jl:10-20
│ 
│ ```jldoctest
│ julia> using Metadata
│ 
│ julia> Metadata.MetaArray(ones(2,2), metadata=(m1 =1, m2=[1, 2]))
│ 2×2 attach_metadata(::Array{Float64,2}, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│  1.0  1.0
│  1.0  1.0
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Metadata.MetaArray(ones(2,2), metadata=(m1 =1, m2=[1, 2]))
│ 
│ Evaluated output:
│ 
│ 2×2 attach_metadata(::Matrix{Float64}, ::NamedTuple{(:m1, :m2), Tuple{Int64, Vector{Int64}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│  1.0  1.0
│  1.0  1.0
│ 
│ Expected output:
│ 
│ 2×2 attach_metadata(::Array{Float64,2}, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│  1.0  1.0
│  1.0  1.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 attach_metadata(::Array{Float64,2}, attach_metadata(::Matrix{Float64}, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│      :m2), Tuple{Int64, Vector{Int64}}})
│      • metadata:
│        - m1 = 1
│        - m2 = [1, 2]
│     1.0  1.0
│     1.0  1.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/ranges.jl:37-45
│ 
│ ```jldoctest
│ julia> using Metadata
│ 
│ julia> Metadata.MetaUnitRange(1:2, (m1 =1, m2=[1, 2]))
│ attach_metadata(1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Metadata.MetaUnitRange(1:2, (m1 =1, m2=[1, 2]))
│ 
│ Evaluated output:
│ 
│ attach_metadata(1:2, ::NamedTuple{(:m1, :m2), Tuple{Int64, Vector{Int64}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│ Expected output:
│ 
│ attach_metadata(1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│   • metadata:
│     - m1 = 1
│     - m2 = [1, 2]
│ 
│   diff =
│    Warning: Diff output requires color.
│    attach_metadata(1:2, ::NamedTuple{(:m1, :m2),Tuple{Int64,Array{Int64,1}}})
│      :m2), Tuple{Int64, Vector{Int64}}})
│      • metadata:
│        - m1 = 1
│        - m2 = [1, 2]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/Metadata.jl
│ 
│ ```jldoctest README
│ julia> using Metadata
│ 
│ julia> x = ones(2, 2);
│ 
│ julia> meta = (x = 1, y = 2);
│ 
│ julia> mx = attach_metadata(x, meta)
│ 2×2 attach_metadata(::Array{Float64,2}, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│  1.0  1.0
│  1.0  1.0
│ 
│ julia> mx.x
│ 1
│ 
│ julia> mx.y
│ 2
│ 
│ ```
│ 
│ Subexpression:
│ 
│ mx = attach_metadata(x, meta)
│ 
│ Evaluated output:
│ 
│ 2×2 attach_metadata(::Matrix{Float64}, ::NamedTuple{(:x, :y), Tuple{Int64, Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│  1.0  1.0
│  1.0  1.0
│ 
│ Expected output:
│ 
│ 2×2 attach_metadata(::Array{Float64,2}, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│  1.0  1.0
│  1.0  1.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 attach_metadata(::Array{Float64,2}, attach_metadata(::Matrix{Float64}, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│      :y), Tuple{Int64, Int64}})
│      • metadata:
│        - x = 1
│        - y = 2
│     1.0  1.0
│     1.0  1.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/Metadata.jl
│ 
│ ```jldoctest README
│ julia> mr = attach_metadata(3//5, meta)
│ attach_metadata(3//5, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│ 
│ julia> propertynames(mr)
│ (:x, :y)
│ 
│ julia> mr.num
│ 3
│ 
│ julia> mr.den
│ 5
│ ```
│ 
│ Subexpression:
│ 
│ mr = attach_metadata(3//5, meta)
│ 
│ Evaluated output:
│ 
│ attach_metadata(3//5, ::NamedTuple{(:x, :y), Tuple{Int64, Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│ 
│ Expected output:
│ 
│ attach_metadata(3//5, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│   • metadata:
│     - x = 1
│     - y = 2
│ 
│   diff =
│    Warning: Diff output requires color.
│    attach_metadata(3//5, ::NamedTuple{(:x, :y),Tuple{Int64,Int64}})
│      :y), Tuple{Int64, Int64}})
│      • metadata:
│        - x = 1
│        - y = 2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Metadata/6ineH/src/Metadata.jl
│ 
│ ```jldoctest README
│ julia> mx = attach_metadata(ones(2, 2))
│ 2×2 attach_metadata(::Array{Float64,2}, ::Metadata.MetaID)
│   • metadata:
│  1.0  1.0
│  1.0  1.0
│ 
│ julia> mx.x = 1;
│ 
│ julia> mx.y = :foo;
│ 
│ ```
│ 
│ Subexpression:
│ 
│ mx = attach_metadata(ones(2, 2))
│ 
│ Evaluated output:
│ 
│ 2×2 attach_metadata(::Matrix{Float64}, ::Metadata.MetaID)
│   • metadata:
│  1.0  1.0
│  1.0  1.0
│ 
│ Expected output:
│ 
│ 2×2 attach_metadata(::Array{Float64,2}, ::Metadata.MetaID)
│   • metadata:
│  1.0  1.0
│  1.0  1.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 attach_metadata(::Array{Float64,2}, attach_metadata(::Matrix{Float64}, ::Metadata.MetaID)
│      • metadata:
│     1.0  1.0
│     1.0  1.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/Metadata/6ineH/test/runtests.jl:213
│     [14] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [15] top-level scope
│        @ ~/.julia/packages/Metadata/6ineH/test/runtests.jl:213
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: Metadata: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:        | Fail  Total
docs                 |    1      1
  Doctests: Metadata |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Metadata/6ineH/test/runtests.jl:212
ERROR: Package Metadata errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
