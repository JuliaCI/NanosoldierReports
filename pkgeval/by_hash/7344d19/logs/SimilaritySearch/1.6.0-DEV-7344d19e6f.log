Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_i2AYrX/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_i2AYrX/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.0046639442f0), Item(12, 0.009851456f0), Item(37, 0.04652989f0), Item(34, 0.046978235f0)])
Vsorted = Item[Item(39, 0.0046639442f0), Item(12, 0.009851456f0), Item(37, 0.04652989f0), Item(34, 0.046978235f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00484315554300944, 0.004060832659403483, 301.0, 48.5802790094167))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0030507723490397136, 0.004343263308207194, 301.0, 71.79558992385864))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004666654268900553, 0.0029728015263875327, 301.0, 39.06763470172882))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037695805231730143, 0.003888702392578125, 301.0, 8.592853480688063))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0037648280461629233, 0.00552063783009847, 301.0, 43.756422916427255))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.527005513509115e-5, 2.2196769714355467e-5, 301.0, 180.40375005453825))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.3632914225260416e-5, 0.00847939650217692, 300.0, 25.242273547453806)
p = PerformanceResult(1.0, 1.0, 1.0, 3.1717618306477864e-5, 1.9701321919759116e-5, 300.0, 25.242273547453806)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003944746653238932, 0.0028489987055460614, 300.0, 1.2983553270360062)
p = PerformanceResult(1.0, 1.0, 1.0, 2.571476830376519e-5, 1.4901161193847656e-5, 300.0, 1.2983553270360062)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.3632914225260416e-5, 0.00847939650217692, 300.0, 25.242273547453806), PerformanceResult(1.0, 1.0, 1.0, 3.1717618306477864e-5, 1.9701321919759116e-5, 300.0, 25.242273547453806), PerformanceResult(1.0, 1.0, 1.0, 0.003944746653238932, 0.0028489987055460614, 300.0, 1.2983553270360062), PerformanceResult(1.0, 1.0, 1.0, 2.571476830376519e-5, 1.4901161193847656e-5, 300.0, 1.2983553270360062))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006662138303120931, 0.0032422701517740887, 346.96666666666664, 28776.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0066127777099609375, 0.002860697110493978, 303.1, 6923.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.62045160929362e-5, 8.098284403483073e-6, 93.23333333333333, 48.74189259298146))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.610120137532552e-5, 7.66913096110026e-6, 84.2, 72.049755692482))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.2103716532389323e-5, 8.002916971842449e-6, 87.26666666666667, 39.2387934923172))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.266334533691406e-5, 6.290276845296224e-5, 92.36666666666666, 43.92029142193496))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8166666666666665, 0.8166666666666665, 0.8166666666666667, 1.6959508260091147e-5, 2.376238505045573e-5, 70.43333333333334, 189.83654560893774))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-02T17:23:01.776
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9390000000000004, 0.9270000000000003, 0.9302820512820518, 1.4827251434326171e-5, 1.469135284423828e-5, 152.5, 46.683550027781166))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3191699981689453e-5, 1.0290145874023437e-5, 155.81, 0.0))
*** advance 1 from 1000; 2020-10-02T17:23:02.488
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9229999999999999, 0.915, 0.9176666666666669, 1.6722679138183594e-5, 2.249002456665039e-5, 151.34, 70.79556267336011))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.942157745361328e-5, 1.4250278472900391e-5, 154.45, 0.0))
*** advance 1 from 1000; 2020-10-02T17:23:03.112
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9197500000000001, 0.9180000000000001, 0.9187777777777778, 1.25885009765625e-5, 1.8010139465332033e-5, 152.69, 38.95866785850376))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4226436614990235e-5, 1.5430450439453125e-5, 155.95, 0.0))
*** advance 1 from 1000; 2020-10-02T17:23:04.246
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.93675, 0.935, 0.9357777777777777, 3.342151641845703e-5, 0.0001554703712463379, 152.48, 43.45881222223397))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.704713821411133e-5, 0.00027894020080566407, 155.64, 0.0))
*** advance 1 from 1000; 2020-10-02T17:23:04.639
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9098571428571428, 0.904, 0.9062549019607843, 2.6540756225585936e-5, 6.886005401611328e-5, 151.93, 185.34592528361827))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.5298595428466797e-5, 7.632970809936523e-5, 155.23, 0.0))
*** advance 1 from 1000; 2020-10-02T17:23:05.534
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9390000000000004, 0.9270000000000003, 0.9302820512820518, 1.5215873718261719e-5, 3.30805778503418e-5, 152.5, 46.69199860817753))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.784324645996094e-5, 4.506111145019531e-5, 155.81, 0.018583501339890063))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:07.168
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.733, 0.733, 0.733, 0.0012970781326293946, 6.49881362915039e-5, 196.78, 191.68333572149277))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:07.926
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7469999999999999, 0.7469999999999999, 0.7469999999999999, 0.0012729668617248535, 6.940126419067382e-5, 199.04, 108.55079577863216))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:08.692
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6, 0.6, 0.6, 0.0015559005737304688, 4.903078079223633e-5, 254.79, 2.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:09.626
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9139999999999999, 0.9119999999999999, 0.9129473684210525, 0.0012464618682861328, 2.8390884399414062e-5, 217.46, 606.2000198513269))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:10.738
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5990000000000003, 0.5990000000000003, 0.5990000000000003, 0.001355736255645752, 0.0005594801902770996, 250.41, 2321.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:11.580
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4079999999999998, 0.4079999999999998, NaN, 0.00151153564453125, 0.0003354191780090332, 250.0, 3604.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-02T17:23:12.646
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6070000000000001, 0.6070000000000001, 0.6070000000000001, 0.0017045879364013673, 1.6219615936279297e-5, 244.33, 2344.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0646950092421443, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.962093635531136,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.453125,"distances_sum":685.7624867409468}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.056880733944954, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9671130952380956,"seconds":2.687796950340271e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.515625,"distances_sum":694.1512893289328}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0646950092421443,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.962093635531136,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.453125,"distances_sum":685.7624867409468}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0646950092421443,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.962093635531136,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.453125,"distances_sum":685.7624867409468}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999991, conf: {"restarts":6}, perf: {"precision":0.8984374999999991,"recall":0.8984374999999991,"f1":0.8984374999999991,"seconds":1.0084360837936401e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":45.75,"distances_sum":294.39259124174714}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7052886556318128, conf: {"restarts":12}, perf: {"precision":0.9157986111111104,"recall":0.9157986111111104,"f1":0.9157986111111104,"seconds":1.3230368494987488e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":58.0546875,"distances_sum":291.7788420058787}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7052886556318128,"state":{"restarts":12},"perf":{"precision":0.9157986111111104,"recall":0.9157986111111104,"f1":0.9157986111111104,"seconds":1.3230368494987488e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":58.0546875,"distances_sum":291.7788420058787}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9229135053110773, conf: {"restarts":9}, perf: {"precision":0.9175347222222211,"recall":0.9175347222222211,"f1":0.9175347222222211,"seconds":1.8345192074775696e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":51.484375,"distances_sum":291.73553427681327}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.984651527016445, conf: {"restarts":8}, perf: {"precision":0.9001736111111098,"recall":0.9001736111111098,"f1":0.9001736111111098,"seconds":2.0777806639671326e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":49.8828125,"distances_sum":293.625279661268}, best_list's length: 9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7636743215031316, conf: {"restarts":11}, perf: {"precision":0.9019097222222209,"recall":0.9019097222222209,"f1":0.9019097222222209,"seconds":2.2877007722854614e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":56.1328125,"distances_sum":293.1876686178148}, best_list's length: 10, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.984651527016445,"state":{"restarts":8},"perf":{"precision":0.9001736111111098,"recall":0.9001736111111098,"f1":0.9001736111111098,"seconds":2.0777806639671326e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":49.8828125,"distances_sum":293.625279661268}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.984651527016445,"state":{"restarts":8},"perf":{"precision":0.9001736111111098,"recall":0.9001736111111098,"f1":0.9001736111111098,"seconds":2.0777806639671326e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":49.8828125,"distances_sum":293.625279661268}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.984651527016445,"state":{"restarts":8},"perf":{"precision":0.9001736111111098,"recall":0.9001736111111098,"f1":0.9001736111111098,"seconds":2.0777806639671326e-5,"exhaustive_search_seconds":4.759058356285095e-6,"evaluations":49.8828125,"distances_sum":293.625279661268}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8645833333333321,"state":{"restarts":8},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":2.3847445845603943e-5,"exhaustive_search_seconds":1.952238380908966e-5,"evaluations":114.0390625,"distances_sum":127.99985311180353}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8645833333333321,"state":{"restarts":8},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":2.3847445845603943e-5,"exhaustive_search_seconds":1.952238380908966e-5,"evaluations":114.0390625,"distances_sum":127.99985311180353}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111102, conf: {"restarts":5}, perf: {"precision":0.8611111111111102,"recall":0.8611111111111102,"f1":0.8611111111111102,"seconds":6.0908496379852295e-5,"exhaustive_search_seconds":0.00021486543118953705,"evaluations":165.9921875,"distances_sum":55.476442055311054}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777769, conf: {"restarts":13}, perf: {"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":7.531046867370605e-5,"exhaustive_search_seconds":0.00021486543118953705,"evaluations":239.9140625,"distances_sum":55.340694184880704}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8637152777777769,"state":{"restarts":13},"perf":{"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":7.531046867370605e-5,"exhaustive_search_seconds":0.00021486543118953705,"evaluations":239.9140625,"distances_sum":55.340694184880704}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8637152777777769,"state":{"restarts":13},"perf":{"precision":0.8637152777777769,"recall":0.8637152777777769,"f1":0.8637152777777769,"seconds":7.531046867370605e-5,"exhaustive_search_seconds":0.00021486543118953705,"evaluations":239.9140625,"distances_sum":55.340694184880704}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(13), SatNeighborhood(32), 2020-10-02T17:23:18.356
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3361, 0.036790844f0), Item(8942, 0.046730552f0), Item(223, 0.052311953f0), Item(743, 0.052932084f0), Item(9011, 0.05353794f0), Item(6884, 0.05509574f0), Item(6553, 0.06353364f0), Item(5208, 0.06512194f0), Item(1892, 0.07774585f0), Item(6748, 0.07951986f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.097142857142857,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9386483308358312,"seconds":0.002925235778093338,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.203125,"distances_sum":655.9609074294567}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.097142857142857,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9386483308358312,"seconds":0.002925235778093338,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.203125,"distances_sum":655.9609074294567}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.135857461024498,"state":{"bsize":3},"perf":{"precision":0.9843749999999998,"recall":0.9843749999999998,"f1":0.9843749999999998,"seconds":1.0609626770019531e-5,"exhaustive_search_seconds":4.656612873077393e-6,"evaluations":31.5703125,"distances_sum":288.86655344069004}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.135857461024498,"state":{"bsize":3},"perf":{"precision":0.9843749999999998,"recall":0.9843749999999998,"f1":0.9843749999999998,"seconds":1.0609626770019531e-5,"exhaustive_search_seconds":4.656612873077393e-6,"evaluations":31.5703125,"distances_sum":288.86655344069004}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.748133595284873,"state":{"bsize":3},"perf":{"precision":0.9687499999999994,"recall":0.9687499999999994,"f1":0.9687499999999994,"seconds":1.9993633031845093e-5,"exhaustive_search_seconds":2.020224928855896e-5,"evaluations":59.6484375,"distances_sum":125.21359439194202}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.748133595284873,"state":{"bsize":3},"perf":{"precision":0.9687499999999994,"recall":0.9687499999999994,"f1":0.9687499999999994,"seconds":1.9993633031845093e-5,"exhaustive_search_seconds":2.020224928855896e-5,"evaluations":59.6484375,"distances_sum":125.21359439194202}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.08430750174189, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.540702164173126e-5,"exhaustive_search_seconds":0.00019219517707824707,"evaluations":100.9140625,"distances_sum":54.56403435370885}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.08430750174189,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.540702164173126e-5,"exhaustive_search_seconds":0.00019219517707824707,"evaluations":100.9140625,"distances_sum":54.56403435370885}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.08430750174189,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.540702164173126e-5,"exhaustive_search_seconds":0.00019219517707824707,"evaluations":100.9140625,"distances_sum":54.56403435370885}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.08430750174189,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":3.540702164173126e-5,"exhaustive_search_seconds":0.00019219517707824707,"evaluations":100.9140625,"distances_sum":54.56403435370885}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-10-02T17:23:21.685
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6727, 0.024735598f0), Item(7191, 0.032320704f0), Item(5014, 0.033141024f0), Item(9515, 0.038436368f0), Item(7827, 0.05043815f0), Item(7605, 0.050562706f0), Item(9695, 0.052392602f0), Item(370, 0.052914172f0), Item(1002, 0.056720693f0), Item(2588, 0.058385033f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
