Julia Version 1.6.0-DEV.1110
Commit 7344d19e6f (2020-10-02 14:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed libcxxwrap_julia_jll ‚îÄ v0.8.0+0
  Installed CxxWrap ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ v0.11.0
  Installed MacroTools ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [1f15a43c] + CxxWrap v0.11.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1f15a43c] + CxxWrap v0.11.0
  [1914dd2f] + MacroTools v0.5.5
  [3eaa8342] + libcxxwrap_julia_jll v0.8.0+0
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing CxxWrap
Status `/tmp/jl_gEGGIX/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [1f15a43c] CxxWrap v0.11.0
  [1914dd2f] MacroTools v0.5.5
  [3eaa8342] libcxxwrap_julia_jll v0.8.0+0
  [8f399da3] Libdl
  [8dfed614] Test
Status `/tmp/jl_gEGGIX/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [1f15a43c] CxxWrap v0.11.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [3eaa8342] libcxxwrap_julia_jll v0.8.0+0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running tests from basic_types.jl...
char               -> CxxChar
signed char        -> Int8
unsigned char      -> UInt8
short              -> Int16
unsigned short     -> UInt16
int                -> Int32
unsigned int       -> UInt32
long               -> Int64
unsigned long      -> UInt64
long long          -> CxxLongLong
unsigned long long -> CxxULongLong
int8_t             -> Int8
uint8_t            -> UInt8
int16_t            -> Int16
uint16_t           -> UInt16
int32_t            -> Int32
uint32_t           -> UInt32
int64_t            -> Int64
uint64_t           -> UInt64
Running tests from containers.jl...
Displaying const matrix
3√ó2 ConstArray{Float64, 2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
Displaying mutable matrix
3√ó2 Matrix{Float64}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
Running tests from cxxdereference.jl...
Running tests from except.jl...
exception 1
exception 2
exception 3
Running tests from extended_module.jl...
Running tests from functions.jl...
methods(CppHalfFunctions.half_d) = # 1 method for generic function "half_d":
[1] half_d(arg1::Union{Float64, Int64, Irrational}) in Main.CppHalfFunctions at /home/pkgeval/.julia/packages/CxxWrap/ZOkSN/src/CxxWrap.jl:590
callback result for function 0x7f6d140f15a0 is 3
callback result for function 0x7f6d140f15a0 is 3
callback in Julia: calledFromCPP = 3.0
callback in Julia: calledFromCPP = 3.0
---- Half test timings ----
Julia test:
  0.147521 seconds
  0.141817 seconds
  0.141564 seconds
C test:
  0.200823 seconds
  0.195586 seconds
  0.218513 seconds
C++ test:
  0.220391 seconds
  0.249233 seconds
  0.224054 seconds
C++ lambda test:
  0.285657 seconds
  0.289912 seconds
  0.299866 seconds
C++ test, loop in the C++ code:
  0.049762 seconds
  0.053787 seconds
  0.048049 seconds
cfunction in C++ loop
  0.329230 seconds
  0.326632 seconds
  0.320726 seconds
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.078536 seconds (1000.00 k allocations: 15.259 MiB)
  0.065152 seconds (1000.00 k allocations: 15.259 MiB)
  0.078349 seconds (1000.00 k allocations: 15.259 MiB)
Running tests from hello.jl...
CppHello.greet() = "hello, world"
Running tests from inheritance.jl...
Running tests from parametric.jl...
Dumping object p1:
Main.ParametricTypes.TemplateTypeAllocated{Main.ParametricTypes.P1, Main.ParametricTypes.P2}
  cpp_object: Ptr{Nothing} @0x0000000001e1eec0
Running tests from pointer_modification.jl...
value timing:
  6.639 ns (0 allocations: 0 bytes)
Running tests from stdlib.jl...
This prints a test string: test
StdWString(s) = "≈°ƒå√¥_œÜ_–ø—Ä–∏–≤–µ—Ç_ÏùºÎ≥¥"
StdWString(s) = "üòÑüòàüòº"
StdString(s) = "caf√©"
valarr2 = [1.0, 6.0, 3.0]
Running tests from types.jl...
Dumping type w...
Main.CppTypes.WorldAllocated
  cpp_object: Ptr{Nothing} @0x00000000042e45e0
fw = CppTypes.world_factory() = CxxPtr{Main.CppTypes.World}(Ptr{Main.CppTypes.World} @0x00000000032bbd10)
0 
1 
2 
0 
2 
4 
Destroying World with message shared factory hello ref
Destroying World with message reset shared pointer
uwf = CppTypes.unique_world_factory() = C++ smart pointer of type CxxWrap.StdLib.UniquePtrAllocated{Main.CppTypes.World}
Destroying World with message world by value hello
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed copy test
a: 2.0, b: 3.0
CppTypes.EnumClassBlue = Main.CppTypes.EnumClass(0x00000015)
a: 1 2 3
b: 11 12 13
Destroying World with message returned_world
Destroying World with message vvec
Destroying World with message vvec
#= /home/pkgeval/.julia/packages/CxxWrap/ZOkSN/test/types.jl:253 =# @test(CppTypes.greet(CppTypes3.vecvec(vvec2)) == "vvec") = Test Passed
Destroying World with message default hello
Destroying World with message default hello
Destroying World with message returned_world
Destroying World with message returned_world
Destroying World with message returned_world
Destroying World with message default hello
Destroying World with message constructed
Destroying World with message world by value hello
Destroying World with message unique factory hello
Destroying World with message shared factory hello
Destroying World with message hello
Destroying World with message vvec
Destroying World with message vvec
Destroying World with message vvec
Destroying World with message vvec
Destroying World with message vvec
Destroying World with message default hello
Destroying World with message default hello
Destroying World with message worldalloc5
Destroying World with message worldalloc4
Destroying World with message worldalloc3
Destroying World with message worldalloc2
Destroying World with message worldalloc1
Destroying World with message worldalloc1
Destroying World with message worldalloc2
Destroying World with message worldalloc3
Destroying World with message worldalloc4
Destroying World with message worldalloc5
Destroying World with message world1
Destroying World with message world2
Destroying World with message world3
Destroying World with message world4
Destroying World with message world5
Destroying World with message worldalloc5
Destroying World with message worldalloc4
Destroying World with message worldalloc3
Destroying World with message worldalloc2
Destroying World with message worldalloc1
Destroying World with message world5
Destroying World with message world4
Destroying World with message world3
Destroying World with message world2
Destroying World with message world1
100000 allocations took 0.014808557 s
Test Summary: | Pass  Total
CxxWrap tests |  359    359
Destroying World with message returned_world_ref
Destroying World with message returned_world_ptr
Destroying World with message reffed world
Destroying World with message boxed world pointer
Destroying World with message boxed world
Destroying World with message shared factory hello ref
    Testing CxxWrap tests passed 
