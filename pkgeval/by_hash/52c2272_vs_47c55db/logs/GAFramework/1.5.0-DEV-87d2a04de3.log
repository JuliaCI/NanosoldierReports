Julia Version 1.5.0-DEV.732
Commit 87d2a04de3 (2020-04-30 10:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_kfxorI/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kfxorI/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722885451488833
curgen: 20 fitness: 0.21722885451488833
curgen: 30 fitness: 0.21722885451488833
curgen: 40 fitness: 0.21722885451488833
curgen: 50 fitness: 0.21722885451488833
CoordinateCreature{Array{Float64,1}}([-0.22287682452748603], -0.21722885451488833) -0.22287682452748603 -0.21722885451488833
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578136056199374
curgen: 100 fitness: 3.258115944957088
curgen: 150 fitness: 3.258216054983649
curgen: 200 fitness: 3.258283327806443
curgen: 250 fitness: 3.258338805865659
curgen: 300 fitness: 3.258374139412135
curgen: 350 fitness: 3.2583787065509715
curgen: 400 fitness: 3.2584196046407197
curgen: 450 fitness: 3.258440933287407
curgen: 500 fitness: 3.2584466132915852
CoordinateCreature{Array{Float64,1}}([0.22259669375268715, 0.22209132361889153, 0.22333007811079694, 0.22267333646576984, -0.22268101599510648, 0.22239281160067353, 0.22268811999605903, -0.22255490098558992, -0.22230625514374083, -0.22266303602438056, -0.2221255824964703, -0.2226753800498492, 0.2221988156439474, -0.22242907121827785, -0.2224783668293921], -3.2584466132915852) [0.22259669375268715, 0.22209132361889153, 0.22333007811079694, 0.22267333646576984, -0.22268101599510648, 0.22239281160067353, 0.22268811999605903, -0.22255490098558992, -0.22230625514374083, -0.22266303602438056, -0.2221255824964703, -0.2226753800498492, 0.2221988156439474, -0.22242907121827785, -0.2224783668293921] -3.2584466132915852
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0042722499545106984
curgen: 100 fitness: -0.0038326505218151397
curgen: 150 fitness: -0.0034897203356649698
curgen: 200 fitness: -0.0024215438968724357
curgen: 250 fitness: -0.0024215438968724357
curgen: 300 fitness: -0.0023429532387240215
curgen: 350 fitness: -0.0022842910015583584
curgen: 400 fitness: -0.0022064389929425943
curgen: 450 fitness: -0.001958420892265167
curgen: 500 fitness: -0.001958420892265167
CoordinateCreature{Array{Float64,1}}([-0.00013593285037299594, 0.0002823394180148001, -9.503499803745815e-6, 0.00024125612905178903, -0.0007718917517943544, -0.0001976332257794193, -5.829597554008121e-5, -0.0003627278717163625, 0.0005129079663431324, -0.0011686194170281387, 0.0011798023509605998, -0.0007742467739189113, -3.945476678130118e-5, -0.0020928698564796552, -0.0009712956363928368], 0.001958420892265167) [-0.00013593285037299594, 0.0002823394180148001, -9.503499803745815e-6, 0.00024125612905178903, -0.0007718917517943544, -0.0001976332257794193, -5.829597554008121e-5, -0.0003627278717163625, 0.0005129079663431324, -0.0011686194170281387, 0.0011798023509605998, -0.0007742467739189113, -3.945476678130118e-5, -0.0020928698564796552, -0.0009712956363928368] 0.001958420892265167
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
