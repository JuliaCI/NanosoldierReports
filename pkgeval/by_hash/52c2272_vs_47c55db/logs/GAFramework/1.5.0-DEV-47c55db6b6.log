Julia Version 1.5.0-DEV.725
Commit 47c55db6b6 (2020-04-30 08:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_JGp0b5/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JGp0b5/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723360634940247
curgen: 20 fitness: 0.21723360634940247
curgen: 30 fitness: 0.21723360634940247
curgen: 40 fitness: 0.21723362732065038
curgen: 50 fitness: 0.21723362732065038
CoordinateCreature{Array{Float64,1}}([-0.22255264321024792], -0.21723362732065038) -0.22255264321024792 -0.21723362732065038
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257778764628983
curgen: 100 fitness: 3.2579871535248754
curgen: 150 fitness: 3.2581657876899097
curgen: 200 fitness: 3.258284036041665
curgen: 250 fitness: 3.2583808098588007
curgen: 300 fitness: 3.258384283940499
curgen: 350 fitness: 3.2583856249332213
curgen: 400 fitness: 3.2583856249332213
curgen: 450 fitness: 3.258413831584776
curgen: 500 fitness: 3.258420295763343
CoordinateCreature{Array{Float64,1}}([-0.22267109945303568, -0.22282115724865562, -0.2224101190218779, -0.22268250897155226, -0.22333024044914598, 0.222411783026698, 0.2224586389281277, -0.22260491747658873, -0.22250721499211068, -0.22282298072886803, 0.2230017010599316, 0.2227292698972363, 0.22259015437927085, 0.22340099352022288, 0.2228555389513223], -3.258420295763343) [-0.22267109945303568, -0.22282115724865562, -0.2224101190218779, -0.22268250897155226, -0.22333024044914598, 0.222411783026698, 0.2224586389281277, -0.22260491747658873, -0.22250721499211068, -0.22282298072886803, 0.2230017010599316, 0.2227292698972363, 0.22259015437927085, 0.22340099352022288, 0.2228555389513223] -3.258420295763343
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.017295960363156837
curgen: 100 fitness: -0.0019711657600964827
curgen: 150 fitness: -0.0019711657600964827
curgen: 200 fitness: -0.001267731636175995
curgen: 250 fitness: -0.001267731636175995
curgen: 300 fitness: -0.001267731636175995
curgen: 350 fitness: -0.0012629272862909602
curgen: 400 fitness: -0.0012629272862909602
curgen: 450 fitness: -0.0012629272862909602
curgen: 500 fitness: -0.0009966983528784112
CoordinateCreature{Array{Float64,1}}([-6.504008729413147e-6, 0.00021942508498170427, -0.0001196366340796138, -0.00010267590894189853, -0.0010154724513670517, -3.5825900441098166e-5, 0.00022723720278644717, -0.00041156212238446896, 8.983482962585435e-5, -0.0001563205369510788, 0.0004591299948708929, 0.00020060451955714975, 0.00010201976259026184, 0.0015832429111213395, -0.0009469744281760521], 0.0009966983528784112) [-6.504008729413147e-6, 0.00021942508498170427, -0.0001196366340796138, -0.00010267590894189853, -0.0010154724513670517, -3.5825900441098166e-5, 0.00022723720278644717, -0.00041156212238446896, 8.983482962585435e-5, -0.0001563205369510788, 0.0004591299948708929, 0.00020060451955714975, 0.00010201976259026184, 0.0015832429111213395, -0.0009469744281760521] 0.0009966983528784112
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
