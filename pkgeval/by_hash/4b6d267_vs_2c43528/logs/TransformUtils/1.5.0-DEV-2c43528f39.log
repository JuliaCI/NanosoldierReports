Julia Version 1.5.0-DEV.225
Commit 2c43528f39 (2020-02-03 15:22 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_9Wb2lE/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.061253599727470465 -0.012791146767462592; 0.061253599727470465 0.0 -0.005926029867867563; 0.012791146767462592 0.005926029867867563 0.0])
dAA = so3([0.0 -0.07387005594318911 -0.020346450715843983; 0.07387005594318911 0.0 -0.05347885454557978; 0.020346450715843983 0.05347885454557978 0.0])
dAA = so3([0.0 -0.03256110473691844 0.0012735737929572555; 0.03256110473691844 0.0 0.13006688674736472; -0.0012735737929572555 -0.13006688674736472 0.0])
dAA = Quaternion(0.9923001609157021, [-0.0009229061946860578, -0.10946038490723056, 0.05794793375771886])
dAA = SO3([0.9897745273043032 -0.007294969641542128 -0.14245409266662798; -0.007960897801679873 0.9943096750712651 -0.106230382498917; 0.14241843000726576 0.10627818909637096 0.9840843141299741])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9817371380977721 -0.18638507588517053 -0.038115550197722683; 0.17961528859252612 0.9741280525342219 -0.13716007206803232; 0.06269401712619366 0.12780900106472734 0.989815295630158]), [0.059260298678675626, -0.1279114676746259, 0.6125359972747046])
xj = SE3(SO3([0.8127440020605605 -0.2671254326470557 -0.5177752314930746; 0.286821054861986 0.9569958173306139 -0.04350503533578567; 0.50713003224266 -0.11315038154966015 0.8544098089047931]), [-1.300668867473647, 0.012735737929572555, 0.3256110473691844])
Dx = SE3(SO3([0.8812124360591413 -0.09744972980708075 -0.4625669602287227; 0.19273286593010014 0.9675630286184925 0.16332736464224323; 0.43164648142326356 -0.2330779608009673 0.8714103391994951]), [-1.3278190568930495, 0.353807298093384, -0.25145943657341396])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
