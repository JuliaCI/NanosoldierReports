Julia Version 1.5.0-DEV.232
Commit f014071421 (2020-02-03 21:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed KCenters ──────────────────── v0.1.9
  Installed TableTraits ───────────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed SimilaritySearch ──────────── v0.3.17
  Installed DataStructures ────────────── v0.17.9
  Installed StatsBase ─────────────────── v0.32.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed Tables ────────────────────── v0.2.11
  Installed Compat ────────────────────── v3.2.0
  Installed Parsers ───────────────────── v0.3.11
  Installed OrderedCollections ────────── v1.1.0
  Installed DataFrames ────────────────── v0.20.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_T10UEF/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 149.18999999999997
[ Info: 73.81000000000009
[ Info: 37.650000000000006
[ Info: 26.8
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 76.86000119157046
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 23.8768676185397
inertia(crand.distances) = 19.670693138240438
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.784581911144412,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8515625,"distances_sum":1805.042631855886}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.784581911144412,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8515625,"distances_sum":1805.042631855886}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9327495421245429,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2545.8619147718596}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9327495421245429,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2545.8619147718596}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601591117216123,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2742.903619964732}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9466262903762911,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2688.8595296939875}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601591117216123,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2742.903619964732}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601591117216123,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.90625,"distances_sum":2742.903619964732}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8010260572760581,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.4375,"distances_sum":1689.8712747674117}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7074349261849266,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.734375,"distances_sum":1364.3015665490702}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8010260572760581,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.4375,"distances_sum":1689.8712747674117}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530048076923081,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.703125,"distances_sum":2488.7836174983117}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9155849358974367,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.46875,"distances_sum":2200.1739050867814}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8954051157176165,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3828125,"distances_sum":2113.3519006782876}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9212912087912093,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.40625,"distances_sum":2295.832927298378}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8469296328671337,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.859375,"distances_sum":1884.4328328651725}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9530048076923081,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.703125,"distances_sum":2488.7836174983117}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9752632783882786,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2636.5729617404454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692313,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":2630.4715057748563}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9752632783882786,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2636.5729617404454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9752632783882786,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2636.5729617404454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6005859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.6005859375,"f1":0.7346776487401495,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.765625,"distances_sum":1376.5098369271122}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.6015625,"distances_sum":1218.1962155724714}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6005859375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.6005859375,"f1":0.7346776487401495,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.765625,"distances_sum":1376.5098369271122}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9105628746253753,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.625,"distances_sum":2088.384389570127}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8254818098568106,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.734375,"distances_sum":1687.5433099505858}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9105628746253753,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.625,"distances_sum":2088.384389570127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824179,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2427.285038541229}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9258356227106233,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.65625,"distances_sum":2219.842969509031}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824179,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2427.285038541229}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824179,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2427.285038541229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8239432442557449,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.71875,"distances_sum":1823.201443418983}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.125,"distances_sum":529.2708011809987}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6083984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.6083984375,"f1":null,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.8515625,"distances_sum":1493.368965649127}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7177734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7177734375,"f1":0.8239432442557449,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.71875,"distances_sum":1823.201443418983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8972074800199809,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.3828125,"distances_sum":2178.9078526252497}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572802197802202,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.734375,"distances_sum":2598.294652493559}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543956043956049,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.765625,"distances_sum":2574.8103624105424}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572802197802202,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.734375,"distances_sum":2598.294652493559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":2664.7497005375812}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716746794871799,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":2674.008412190396}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9684523809523813,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2635.3199883630973}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716746794871799,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":2674.008412190396}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716746794871799,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":2674.008412190396}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8610837079587088,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.4375,"distances_sum":1797.2436064960864}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.45703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.45703125,"f1":0.609172771672772,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":6.8125,"distances_sum":980.7866209607552}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8610837079587088,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.4375,"distances_sum":1797.2436064960864}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9423248626373634,"seconds":6.7818909883499146e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.7734375,"distances_sum":2269.953916991178}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.894210997335998,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.59375,"distances_sum":1945.8685716249317}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9423248626373634,"seconds":6.7818909883499146e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.7734375,"distances_sum":2269.953916991178}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550824175824181,"seconds":6.841495633125305e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8671875,"distances_sum":2376.583221908521}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550824175824181,"seconds":6.841495633125305e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8671875,"distances_sum":2376.583221908521}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550824175824181,"seconds":6.841495633125305e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8671875,"distances_sum":2376.583221908521}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.703125,"distances_sum":988.345614083159}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.890625,"distances_sum":543.3934347551663}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.6640625,"distances_sum":447.9459877763354}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3896484375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.703125,"distances_sum":988.345614083159}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8959993131868143,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":2073.0203403958167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":6,"bsize":4}, perf: {"precision":null,"recall":0.6728515625,"f1":null,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.4609375,"distances_sum":1631.7497530005005}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8959993131868143,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.5703125,"distances_sum":2073.0203403958167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468867,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2495.530634934164}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9049055111555117,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6484375,"distances_sum":2123.960632578083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9212886072261077,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.609375,"distances_sum":2252.940839460118}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468867,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2495.530634934164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468867,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9140625,"distances_sum":2495.530634934164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.48828125,"f1":0.6425081862581867,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.3828125,"distances_sum":1252.9292269484063}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":4.8046875,"distances_sum":461.07164007382676}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.48828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.48828125,"f1":0.6425081862581867,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.3828125,"distances_sum":1252.9292269484063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9040220196470203,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5390625,"distances_sum":2267.124291884084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8556648212898221,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.265625,"distances_sum":1939.8174126316223}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7703239468864476,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.6640625,"distances_sum":1546.2205143956294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6879153832278836,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.546875,"distances_sum":1436.7385858764862}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8227572774447781,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0546875,"distances_sum":1818.9733179341524}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9040220196470203,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5390625,"distances_sum":2267.124291884084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9572833416583421,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2582.2921724712705}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448176823176829,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7578125,"distances_sum":2510.6144234386556}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9334706959706964,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.59375,"distances_sum":2405.5166547631266}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9120884324009332,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6484375,"distances_sum":2256.9309960551172}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9572833416583421,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2582.2921724712705}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9572833416583421,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2582.2921724712705}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8618842962592971,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.3203125,"distances_sum":1928.4596960641059}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8618842962592971,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.3203125,"distances_sum":1928.4596960641059}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9020869755244761,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.546875,"distances_sum":2151.899926115374}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9542067307692315,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.7734375,"distances_sum":2520.099068080662}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9616472069597074,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8203125,"distances_sum":2576.184106288079}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9616472069597074,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8203125,"distances_sum":2576.184106288079}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322347,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.90625,"distances_sum":2654.295085543774}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.968938873626374,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9140625,"distances_sum":2632.548733003275}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647378663003667,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8125,"distances_sum":2610.8552499531697}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721554487179488,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8828125,"distances_sum":2642.2694714391914}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9627804487179492,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8515625,"distances_sum":2577.550006849941}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322347,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.90625,"distances_sum":2654.295085543774}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322347,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.90625,"distances_sum":2654.295085543774}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.2421875,"distances_sum":870.3902152018147}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7115143537018543,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.375,"distances_sum":1329.4787369288238}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8794387903762912,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3671875,"distances_sum":1901.814070607405}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8794387903762912,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3671875,"distances_sum":1901.814070607405}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9628038628038634,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8203125,"distances_sum":2517.3319564251287}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9437562437562443,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2385.6213218355406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9468635531135536,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7578125,"distances_sum":2393.904900367263}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8967012154512163,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.46875,"distances_sum":2023.017921384661}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9628038628038634,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8203125,"distances_sum":2517.3319564251287}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9778102106227111,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2583.24882538712}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722126831501835,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2563.496658673965}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9712854853479858,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2525.8508015884904}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9845810439560441,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2635.878588993377}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845810439560441,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2635.878588993377}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845810439560441,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2635.878588993377}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.5625,"distances_sum":922.6312203061509}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.712874972249973,"seconds":4.200264811515808e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.0625,"distances_sum":1195.009893066685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.712874972249973,"seconds":4.200264811515808e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.0625,"distances_sum":1195.009893066685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8212058774558786,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1796875,"distances_sum":1588.330708551035}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9415064102564108,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2284.1116038434434}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7952837093462102,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.96875,"distances_sum":1435.6777192402471}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9082188644688652,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2041.4035625571894}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7218803765678773,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.1640625,"distances_sum":1251.3723112368532}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8660287629037637,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5078125,"distances_sum":1811.0926411298803}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9415064102564108,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2284.1116038434434}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529647435897441,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2382.652855106653}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9442021520146529,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2299.573448648308}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641597985347989,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2460.3240527510966}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9641597985347989,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2460.3240527510966}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9641597985347989,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2460.3240527510966}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7956366550116558,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.6875,"distances_sum":1453.089623293192}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7110134657009662,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":6.8984375,"distances_sum":1212.7723514320633}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7956366550116558,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.6875,"distances_sum":1453.089623293192}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605483058608065,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8203125,"distances_sum":2371.2695200212916}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7963359557109564,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.6875,"distances_sum":1430.0941434737072}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8486924533799541,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.0234375,"distances_sum":1691.3967048752686}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605483058608065,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8203125,"distances_sum":2371.2695200212916}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677083333333337,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8828125,"distances_sum":2421.4924323022037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688816391941396,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.921875,"distances_sum":2420.4016382947243}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688816391941396,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.921875,"distances_sum":2420.4016382947243}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688816391941396,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.921875,"distances_sum":2420.4016382947243}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8549226814851824,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.984375,"distances_sum":1711.9577004870168}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.1328125,"distances_sum":901.5320431273085}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8549226814851824,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.984375,"distances_sum":1711.9577004870168}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95709706959707,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":2416.311381045602}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95709706959707,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":2416.311381045602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95709706959707,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":2416.311381045602}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95709706959707,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.671875,"distances_sum":2416.311381045602}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7798569486069494,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7265625,"distances_sum":1533.4806904055918}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7626956376956383,"seconds":4.390254616737366e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.6953125,"distances_sum":1445.4148935706485}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.515625,"f1":0.6617644508269515,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.3046875,"distances_sum":1143.808623161865}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8587121212121219,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.40625,"distances_sum":1811.2899739271163}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8587121212121219,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.40625,"distances_sum":1811.2899739271163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9579269688644692,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2426.327773818645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9581533050283055,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2393.039360202619}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948537920412921,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7109375,"distances_sum":2315.847102258684}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554315476190479,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8359375,"distances_sum":2370.121614064083}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8962828837828849,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.484375,"distances_sum":1998.805994688779}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9419393106893112,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2290.3332703235874}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8785020535020541,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.46875,"distances_sum":1888.3703945409625}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9282311438561444,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6328125,"distances_sum":2191.232627023094}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9579269688644692,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2426.327773818645}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9793154761904767,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9765625,"distances_sum":2526.9661620189104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109893,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2529.364351791012}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.96875,"distances_sum":2539.3955303520447}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754864926739928,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9140625,"distances_sum":2504.897125991279}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705013736263741,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.90625,"distances_sum":2478.605105228148}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2572.667515922604}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671188186813191,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2466.2249024910243}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753205128205131,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2507.7944845376824}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2572.667515922604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2572.667515922604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":3.3657997846603394e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.078125,"distances_sum":765.9550109791504}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.0621886253356934e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":4.7265625,"distances_sum":509.1419217948358}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8646494130869138,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.203125,"distances_sum":1776.9326214633545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8646494130869138,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.203125,"distances_sum":1776.9326214633545}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8943311896436904,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.359375,"distances_sum":1907.6370642546842}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462854853479858,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2328.2859179455527}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.894706335331336,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3984375,"distances_sum":1941.411435449289}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8936412545787553,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3671875,"distances_sum":1936.134333503051}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462854853479858,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2328.2859179455527}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846158,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2442.52259000244}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576496420246424,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2411.648407201123}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846158,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2442.52259000244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846158,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2442.52259000244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8409403096903106,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7578125,"distances_sum":1783.6309294158214}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.375,"distances_sum":538.8667930269194}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8409403096903106,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7578125,"distances_sum":1783.6309294158214}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9074633699633707,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5703125,"distances_sum":2138.6193354377856}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551027097902102,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2493.599732009482}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9367304570429577,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6171875,"distances_sum":2328.498248012869}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9551027097902102,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2493.599732009482}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2547.444354410229}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662431318681323,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8515625,"distances_sum":2565.496474308871}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2547.444354410229}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2547.444354410229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8578822219447227,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8515625,"distances_sum":1833.9554976933857}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":2.7175992727279663e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.1875,"distances_sum":508.64355291000436}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7641592782217788,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.984375,"distances_sum":1476.5276823361094}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8578822219447227,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8515625,"distances_sum":1833.9554976933857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9281078296703305,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":2284.312837500044}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8978511072261077,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.265625,"distances_sum":2096.492078726974}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9281078296703305,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":2284.312837500044}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675995879120884,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.78125,"distances_sum":2518.8370564950155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2534.6825693170777}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678228021978028,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2512.8064181820987}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2534.6825693170777}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2534.6825693170777}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7849952131202138,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.34375,"distances_sum":1410.5408991205325}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59765625,"f1":0.7316053737928744,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.609375,"distances_sum":1268.6322156345714}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7849952131202138,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.34375,"distances_sum":1410.5408991205325}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9043472152847161,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.203125,"distances_sum":2003.1229323224984}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328041749916756,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.5859375,"distances_sum":2206.6878319654024}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9068280677655687,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.21875,"distances_sum":2008.3805230955531}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9264287795537799,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.453125,"distances_sum":2175.1854737161325}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9328041749916756,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.5859375,"distances_sum":2206.6878319654024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517170329670335,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.75,"distances_sum":2370.7857534348386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675995879120882,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.828125,"distances_sum":2468.436807274883}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538347069597074,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7265625,"distances_sum":2400.0191777436567}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9371056027306036,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.5390625,"distances_sum":2294.002329966372}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966872710622711,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8671875,"distances_sum":2462.857565293334}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620566933066937,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8125,"distances_sum":2431.1064027001044}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618532509157512,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.7890625,"distances_sum":2425.3951839702586}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675995879120882,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.828125,"distances_sum":2468.436807274883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675995879120882,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.828125,"distances_sum":2468.436807274883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3203125,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":5.0,"distances_sum":710.7956792971792}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.856926927239428,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.65625,"distances_sum":1771.2799958678877}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.856926927239428,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.65625,"distances_sum":1771.2799958678877}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9434638278388283,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.84375,"distances_sum":2276.4604627157055}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9299023892773897,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8203125,"distances_sum":2160.371502057217}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9434638278388283,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.84375,"distances_sum":2276.4604627157055}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798539,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.96875,"distances_sum":2445.7797017971834}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605311355311361,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.875,"distances_sum":2371.1086500933757}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.984375,"distances_sum":2468.434893594203}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476476648351654,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8671875,"distances_sum":2293.609587010179}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665006868131875,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2381.6301735485154}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.984375,"distances_sum":2468.434893594203}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9779990842490844,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.984375,"distances_sum":2468.434893594203}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8094478438228445,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.875,"distances_sum":1716.9658435198437}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8094478438228445,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.875,"distances_sum":1716.9658435198437}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.924009844322345,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2378.07341625592}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.924009844322345,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2378.07341625592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684180402930406,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2686.871263754048}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684180402930406,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2686.871263754048}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684180402930406,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2686.871263754048}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.078125,"distances_sum":877.3029635504472}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.6646723068598073,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.265625,"distances_sum":1139.09853058426}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.6646723068598073,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.265625,"distances_sum":1139.09853058426}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6733180014430018,"seconds":4.017725586891174e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.2890625,"distances_sum":1192.5925981674718}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9346611721611728,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7109375,"distances_sum":2433.442472525452}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9346611721611728,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7109375,"distances_sum":2433.442472525452}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9346611721611728,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7109375,"distances_sum":2433.442472525452}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8857421875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9346611721611728,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7109375,"distances_sum":2433.442472525452}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4296875,"distances_sum":838.0323737788469}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3837890625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.4296875,"distances_sum":838.0323737788469}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8827042748917757,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.171875,"distances_sum":2138.7023586320197}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7809404137529143,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.453125,"distances_sum":1642.1897426526605}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8371976981351991,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.8125,"distances_sum":1891.172103889686}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6840784215784221,"seconds":4.077330231666565e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.46875,"distances_sum":1253.9367154049423}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8827042748917757,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.171875,"distances_sum":2138.7023586320197}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8823468198468207,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1796875,"distances_sum":2111.566432872151}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8898814726939736,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2890625,"distances_sum":2203.4311829920493}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582303113553118,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2679.860153808177}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9475503663003668,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2613.864734802518}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8990051615051623,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3125,"distances_sum":2250.585557004428}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497538919413924,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2634.035860395463}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9516254578754585,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2601.274514209654}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9137451090576098,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7109375,"distances_sum":2316.527130431656}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9582303113553118,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2679.860153808177}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9582303113553118,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2679.860153808177}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.447265625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.447265625,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.359375,"distances_sum":950.071886588495}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8028755966255974,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8984375,"distances_sum":1689.6176218712135}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6920638389388396,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.703125,"distances_sum":1208.7661761624545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8028755966255974,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8984375,"distances_sum":1689.6176218712135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9216720779220785,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3671875,"distances_sum":2327.9143189020892}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8753980394605403,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.375,"distances_sum":2006.8949249413047}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9216720779220785,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3671875,"distances_sum":2327.9143189020892}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503949175824183,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.765625,"distances_sum":2617.2176443324774}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547161172161177,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2628.835200381361}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.943046016483517,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2507.8485417992842}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9390911172161177,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2484.360109990795}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9547161172161177,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2628.835200381361}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9547161172161177,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2628.835200381361}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.213062882423401e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.1875,"distances_sum":627.0382754545581}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8539814352314361,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9453125,"distances_sum":1950.1015781062208}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8539814352314361,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9453125,"distances_sum":1950.1015781062208}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8875946969696976,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1796875,"distances_sum":2141.788732280983}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419986263736269,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":2557.9970085368473}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419986263736269,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":2557.9970085368473}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625057234432238,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2670.1089909387138}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625057234432238,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2670.1089909387138}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625057234432238,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2670.1089909387138}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.203125,"f1":null,"seconds":2.812594175338745e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.234375,"distances_sum":490.54479454074664}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.203125,"f1":null,"seconds":2.812594175338745e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.234375,"distances_sum":490.54479454074664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7964649933399941,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.40625,"distances_sum":1617.7353141253795}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8551191863691872,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1171875,"distances_sum":1905.719510804454}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.0234375,"distances_sum":919.1473563194329}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8551191863691872,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1171875,"distances_sum":1905.719510804454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9164408508158516,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.21875,"distances_sum":2236.6449074840657}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9227111430236437,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.34375,"distances_sum":2355.1216616109946}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9227111430236437,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.34375,"distances_sum":2355.1216616109946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443229,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2607.6908938686875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9459363553113558,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2487.138444258558}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9234380203130209,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3828125,"distances_sum":2353.399797221981}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516597985347992,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7109375,"distances_sum":2549.925612067022}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.939666583416584,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6640625,"distances_sum":2463.6576338488876}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443229,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2607.6908938686875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443229,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2607.6908938686875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8748428654678665,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.265625,"distances_sum":1923.6354672785749}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8496056027306035,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.15625,"distances_sum":1817.902309517136}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.471970558166504e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.3203125,"distances_sum":616.5617419968969}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8748428654678665,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.265625,"distances_sum":1923.6354672785749}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.958854166666667,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8515625,"distances_sum":2526.965593816876}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9466804029304033,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8046875,"distances_sum":2434.970196303456}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9535542582417589,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2475.347401814747}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.958854166666667,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8515625,"distances_sum":2526.965593816876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677483974358979,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8828125,"distances_sum":2597.1108447190036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2647.250458598186}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688988095238098,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2583.1891574450187}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084253,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":2622.203592093875}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2647.250458598186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2647.250458598186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.1068921089172363e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.71875,"distances_sum":523.1428335601382}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.635883331298828e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8984375,"distances_sum":931.6408388805196}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7133240023865032,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.3359375,"distances_sum":1271.4772758429576}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7133240023865032,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.3359375,"distances_sum":1271.4772758429576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8967844655344664,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.03125,"distances_sum":2180.2627855870537}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8787837162837169,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8046875,"distances_sum":2111.0850440879167}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.8967844655344664,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.03125,"distances_sum":2180.2627855870537}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949839743589744,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6640625,"distances_sum":2596.6868466647093}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558493589743596,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":2639.898508912632}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9447802197802203,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":2557.662601175629}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9065621878121886,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0,"distances_sum":2224.853684572582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.936057692307693,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.53125,"distances_sum":2485.485345758334}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9066881035631043,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2578125,"distances_sum":2299.616952668994}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558493589743596,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":2639.898508912632}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558493589743596,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":2639.898508912632}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6862725815850821,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.5390625,"distances_sum":1214.9187568117889}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.984375,"distances_sum":820.773543882038}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6862725815850821,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.5390625,"distances_sum":1214.9187568117889}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8565391206016215,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1484375,"distances_sum":1864.3292590923393}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.917299367299368,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3515625,"distances_sum":2268.9630244262635}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.917299367299368,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3515625,"distances_sum":2268.9630244262635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683436355311361,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2618.22135590411}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9303685897435905,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4765625,"distances_sum":2346.179151719555}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683436355311361,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2618.22135590411}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683436355311361,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2618.22135590411}}, n: 9
inertia(cfft.distances) = 17.92818498168498
inertia(cdnet.distances) = 26.392914125126087
inertia(crand.distances) = 20.788427386018505
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9177777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.92
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 3, 1, 1, 3, 1, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 8, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 11, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3232666709667028] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578] ***
*** starting iteration: 2; err: [Inf, 0.3232666709667028, 0.17240946891534578] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458] ***
*** starting iteration: 3; err: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337] ***
*** starting iteration: 4; err: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545] ***
*** starting iteration: 5; err: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545, 0.15467185092013214] ***
*** starting iteration: 6; err: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545, 0.15467185092013214] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545, 0.15467185092013214, 0.15450630504152318] ***
*** finished computation of 12 references, err: [Inf, 0.3232666709667028, 0.17240946891534578, 0.1627573574881458, 0.15752629919595337, 0.1560975849295545, 0.15467185092013214, 0.15450630504152318] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 3, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.9066666666666666
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.2634999976704702] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2634999976704702, 0.5369912850003223] ***
*** finished computation of 3 references, err: [Inf, 1.2634999976704702, 0.5369912850003223] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 1]]
** centroid: 3, normalized-entropy: 0.2108423003185322, [(2, 29), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7962046642528623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7962046642528623, 0.36336332022808693] ***
*** starting iteration: 2; err: [Inf, 0.7962046642528623, 0.36336332022808693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7962046642528623, 0.36336332022808693, 0.3594779832497562] ***
*** starting iteration: 3; err: [Inf, 0.7962046642528623, 0.36336332022808693, 0.3594779832497562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7962046642528623, 0.36336332022808693, 0.3594779832497562, 0.3594779832497562] ***
*** finished computation of 3 references, err: [Inf, 0.7962046642528623, 0.36336332022808693, 0.3594779832497562, 0.3594779832497562] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 29]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 7), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 29, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6399763879141567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6399763879141567, 0.3905050075181809] ***
*** starting iteration: 2; err: [Inf, 0.6399763879141567, 0.3905050075181809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6399763879141567, 0.3905050075181809, 0.3810608880577672] ***
*** starting iteration: 3; err: [Inf, 0.6399763879141567, 0.3905050075181809, 0.3810608880577672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6399763879141567, 0.3905050075181809, 0.3810608880577672, 0.3731663842239047] ***
*** finished computation of 3 references, err: [Inf, 0.6399763879141567, 0.3905050075181809, 0.3810608880577672, 0.3731663842239047] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 35]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 5), (3, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 2]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7829563078574098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7829563078574098, 0.4145276271190206] ***
*** starting iteration: 2; err: [Inf, 0.7829563078574098, 0.4145276271190206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7829563078574098, 0.4145276271190206, 0.3980063547418887] ***
*** starting iteration: 3; err: [Inf, 0.7829563078574098, 0.4145276271190206, 0.3980063547418887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7829563078574098, 0.4145276271190206, 0.3980063547418887, 0.38893632030039194] ***
*** finished computation of 3 references, err: [Inf, 0.7829563078574098, 0.4145276271190206, 0.3980063547418887, 0.38893632030039194] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 28]]
** centroid: 1, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 6]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 26), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1603000004724329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1603000004724329, 0.5508719231210787] ***
*** finished computation of 3 references, err: [Inf, 1.1603000004724329, 0.5508719231210787] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 29]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.787299915080686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.787299915080686, 2.4330468403148418] ***
*** finished computation of 3 references, err: [Inf, 7.787299915080686, 2.4330468403148418] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [35, 22, 1]]
** centroid: 1, normalized-entropy: 0.6758617043972868, [(1, 35), (2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 24]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.886099967879792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.886099967879792, 1.9832989935814973] ***
*** starting iteration: 2; err: [Inf, 3.886099967879792, 1.9832989935814973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.886099967879792, 1.9832989935814973, 0.529128189156899] ***
*** starting iteration: 3; err: [Inf, 3.886099967879792, 1.9832989935814973, 0.529128189156899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.886099967879792, 1.9832989935814973, 0.529128189156899, 0.5265168678829746] ***
*** finished computation of 3 references, err: [Inf, 3.886099967879792, 1.9832989935814973, 0.529128189156899, 0.5265168678829746] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 25]]
** centroid: 2, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.87330000127024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.87330000127024, 1.2567052831729661] ***
*** starting iteration: 2; err: [Inf, 2.87330000127024, 1.2567052831729661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.87330000127024, 1.2567052831729661, 0.6685138426676055] ***
*** starting iteration: 3; err: [Inf, 2.87330000127024, 1.2567052831729661, 0.6685138426676055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.87330000127024, 1.2567052831729661, 0.6685138426676055, 0.5499317139983984] ***
*** finished computation of 3 references, err: [Inf, 2.87330000127024, 1.2567052831729661, 0.6685138426676055, 0.5499317139983984] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6805999901704336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6805999901704336, 0.5401685400562058] ***
*** starting iteration: 2; err: [Inf, 1.6805999901704336, 0.5401685400562058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6805999901704336, 0.5401685400562058, 0.5280531474999421] ***
*** starting iteration: 3; err: [Inf, 1.6805999901704336, 0.5401685400562058, 0.5280531474999421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6805999901704336, 0.5401685400562058, 0.5280531474999421, 0.5265835179698451] ***
*** finished computation of 3 references, err: [Inf, 1.6805999901704336, 0.5401685400562058, 0.5280531474999421, 0.5265835179698451] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.696861935691996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.696861935691996, 0.2724623611869339] ***
*** finished computation of 7 references, err: [Inf, 1.696861935691996, 0.2724623611869339] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.3606003043768697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3606003043768697, 0.49743243723339176] ***
*** finished computation of 7 references, err: [Inf, 2.3606003043768697, 0.49743243723339176] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 2, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 30), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 2]]
** centroid: 6, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5330082816387689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330082816387689, 0.27730055686700494] ***
*** finished computation of 7 references, err: [Inf, 0.5330082816387689, 0.27730055686700494] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 9]]
** centroid: 2, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.07249997969781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.07249997969781, 0.30487793571530164] ***
*** finished computation of 7 references, err: [Inf, 2.07249997969781, 0.30487793571530164] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.240100010641764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.240100010641764, 0.6346637269780271] ***
*** finished computation of 7 references, err: [Inf, 3.240100010641764, 0.6346637269780271] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 2, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 30), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6313000044621349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6313000044621349, 0.39094158841270643] ***
*** finished computation of 7 references, err: [Inf, 0.6313000044621349, 0.39094158841270643] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.47927157148331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.47927157148331, 0.6066622440901931] ***
*** finished computation of 3 references, err: [Inf, 1.47927157148331, 0.6066622440901931] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 29]]
** centroid: 2, normalized-entropy: 0.99919835426364, [(2, 31), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 5, 0]]
** centroid: 3, normalized-entropy: 1.0, [(1, 5), (2, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8731319302281535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8731319302281535, 0.6784248329199296] ***
*** finished computation of 3 references, err: [Inf, 0.8731319302281535, 0.6784248329199296] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 2, 0]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 37]]
** centroid: 3, normalized-entropy: 0.9943766625699823, [(2, 31), (3, 37)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.870861342799054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.870861342799054, 1.3138505785360604] ***
*** finished computation of 3 references, err: [Inf, 3.870861342799054, 1.3138505785360604] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 25]]
** centroid: 1, normalized-entropy: 0.9865446300055647, [(2, 19), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 12, 0]]
** centroid: 2, normalized-entropy: 0.8196004346196011, [(1, 35), (2, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5464000289601914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5464000289601914, 0.6646120848560925] ***
*** finished computation of 3 references, err: [Inf, 3.5464000289601914, 0.6646120848560925] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 29]]
** centroid: 2, normalized-entropy: 0.9503376699710269, [(2, 17), (3, 29)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1973999971517406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1973999971517406, 0.56786093339672] ***
*** finished computation of 3 references, err: [Inf, 1.1973999971517406, 0.56786093339672] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 36]]
** centroid: 2, normalized-entropy: 0.7849920887641585, [(2, 11), (3, 36)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8700999823067916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8700999823067916, 1.3798834971698204] ***
*** finished computation of 3 references, err: [Inf, 3.8700999823067916, 1.3798834971698204] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 21]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(2, 24), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 7, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 35), (2, 7)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7156340510387613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935] ***
*** starting iteration: 2; err: [Inf, 0.7156340510387613, 0.43510732347258935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408] ***
*** starting iteration: 3; err: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824] ***
*** starting iteration: 4; err: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188] ***
*** starting iteration: 5; err: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188, 0.3594779832497562] ***
*** starting iteration: 6; err: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188, 0.3594779832497562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188, 0.3594779832497562, 0.3594779832497562] ***
*** finished computation of 3 references, err: [Inf, 0.7156340510387613, 0.43510732347258935, 0.3807121090066408, 0.36446785354003824, 0.3618540436851188, 0.3594779832497562, 0.3594779832497562] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 29, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 29]]
** centroid: 3, normalized-entropy: 0.710676853856123, [(2, 7), (3, 29)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8771503229050343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8771503229050343, 0.4005082851961268] ***
*** starting iteration: 2; err: [Inf, 0.8771503229050343, 0.4005082851961268] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886] ***
*** starting iteration: 3; err: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886, 0.37058370838838317] ***
*** starting iteration: 4; err: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886, 0.37058370838838317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886, 0.37058370838838317, 0.37058370838838317] ***
*** finished computation of 3 references, err: [Inf, 0.8771503229050343, 0.4005082851961268, 0.37250179806031886, 0.37058370838838317, 0.37058370838838317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 33]]
** centroid: 1, normalized-entropy: 0.5617526078313283, [(2, 5), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 4]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.30114197363669] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.30114197363669, 1.0948816739550242] ***
*** starting iteration: 2; err: [Inf, 4.30114197363669, 1.0948816739550242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277] ***
*** starting iteration: 3; err: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277, 0.3674015832368939] ***
*** starting iteration: 4; err: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277, 0.3674015832368939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277, 0.3674015832368939, 0.3670503689259046] ***
*** finished computation of 3 references, err: [Inf, 4.30114197363669, 1.0948816739550242, 0.37526823157765277, 0.3674015832368939, 0.3670503689259046] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7273892985227506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7273892985227506, 0.8247172395916061] ***
*** finished computation of 3 references, err: [Inf, 2.7273892985227506, 0.8247172395916061] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 6, 0]]
** centroid: 2, normalized-entropy: 0.6006085754131871, [(1, 35), (2, 6)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.373906808254939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.373906808254939, 0.4497546819714806] ***
*** finished computation of 3 references, err: [Inf, 2.373906808254939, 0.4497546819714806] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 35]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 7), (3, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.02281776942502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.02281776942502, 1.3406958573256458] ***
*** finished computation of 3 references, err: [Inf, 3.02281776942502, 1.3406958573256458] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 21]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 18), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 12, 1]]
** centroid: 2, normalized-entropy: 0.8196004346196011, [(1, 35), (2, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7769004631494414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7769004631494414, 0.6322936438436042] ***
*** starting iteration: 2; err: [Inf, 2.7769004631494414, 0.6322936438436042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969] ***
*** starting iteration: 3; err: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969, 0.35057477625196126] ***
*** starting iteration: 4; err: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969, 0.35057477625196126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969, 0.35057477625196126, 0.3500450912712401] ***
*** finished computation of 3 references, err: [Inf, 2.7769004631494414, 0.6322936438436042, 0.3668592460407969, 0.35057477625196126, 0.3500450912712401] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 10]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4648557610261326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4648557610261326, 0.3727389821870354] ***
*** starting iteration: 2; err: [Inf, 1.4648557610261326, 0.3727389821870354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4648557610261326, 0.3727389821870354, 0.36936652342032217] ***
*** starting iteration: 3; err: [Inf, 1.4648557610261326, 0.3727389821870354, 0.36936652342032217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4648557610261326, 0.3727389821870354, 0.36936652342032217, 0.36936652342032217] ***
*** finished computation of 3 references, err: [Inf, 1.4648557610261326, 0.3727389821870354, 0.36936652342032217, 0.36936652342032217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 35]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 5), (3, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 2]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.855216663836112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.855216663836112, 0.7859036992867249] ***
*** starting iteration: 2; err: [Inf, 3.855216663836112, 0.7859036992867249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377] ***
*** starting iteration: 3; err: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633] ***
*** starting iteration: 4; err: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633, 0.365630231959987] ***
*** starting iteration: 5; err: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633, 0.365630231959987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633, 0.365630231959987, 0.365630231959987] ***
*** finished computation of 3 references, err: [Inf, 3.855216663836112, 0.7859036992867249, 0.49437927994011377, 0.37022987969255633, 0.365630231959987, 0.365630231959987] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 10]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7967115036919722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7967115036919722, 0.4625589186793334] ***
*** finished computation of 7 references, err: [Inf, 0.7967115036919722, 0.4625589186793334] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 28, 29]]
** centroid: 7, normalized-entropy: 0.9997779672118906, [(2, 28), (3, 29)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43202208259708114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43202208259708114, 0.32168487978285454] ***
*** finished computation of 7 references, err: [Inf, 0.43202208259708114, 0.32168487978285454] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 36]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 36)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.5113931492700834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5113931492700834, 0.42365477686102354] ***
*** finished computation of 7 references, err: [Inf, 2.5113931492700834, 0.42365477686102354] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 4, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.144300025485221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.144300025485221, 1.206378924587035] ***
*** finished computation of 3 references, err: [Inf, 5.144300025485221, 1.206378924587035] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 7, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 35), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2246999990233283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2246999990233283, 0.5842900278437934] ***
*** finished computation of 3 references, err: [Inf, 1.2246999990233283, 0.5842900278437934] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 9]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 29), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7401000114580346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7401000114580346, 0.5358367482992012] ***
*** finished computation of 3 references, err: [Inf, 0.7401000114580346, 0.5358367482992012] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0177999967187772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0177999967187772, 0.5328288927178403] ***
*** starting iteration: 2; err: [Inf, 1.0177999967187772, 0.5328288927178403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0177999967187772, 0.5328288927178403, 0.5026020657025928] ***
*** starting iteration: 3; err: [Inf, 1.0177999967187772, 0.5328288927178403, 0.5026020657025928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0177999967187772, 0.5328288927178403, 0.5026020657025928, 0.5019459361492149] ***
*** finished computation of 3 references, err: [Inf, 1.0177999967187772, 0.5328288927178403, 0.5026020657025928, 0.5019459361492149] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 10]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8436999963688987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8436999963688987, 0.575821161309958] ***
*** starting iteration: 2; err: [Inf, 1.8436999963688987, 0.575821161309958] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8436999963688987, 0.575821161309958, 0.5438318233986652] ***
*** starting iteration: 3; err: [Inf, 1.8436999963688987, 0.575821161309958, 0.5438318233986652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8436999963688987, 0.575821161309958, 0.5438318233986652, 0.5387003603059491] ***
*** finished computation of 3 references, err: [Inf, 1.8436999963688987, 0.575821161309958, 0.5438318233986652, 0.5387003603059491] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5685999967998903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5685999967998903, 0.5376427702319768] ***
*** starting iteration: 2; err: [Inf, 1.5685999967998903, 0.5376427702319768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5685999967998903, 0.5376427702319768, 0.5283886437110088] ***
*** starting iteration: 3; err: [Inf, 1.5685999967998903, 0.5376427702319768, 0.5283886437110088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5685999967998903, 0.5376427702319768, 0.5283886437110088, 0.5260770364995421] ***
*** finished computation of 3 references, err: [Inf, 1.5685999967998903, 0.5376427702319768, 0.5283886437110088, 0.5260770364995421] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2544015495255128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2544015495255128, 0.16594493023251217] ***
*** starting iteration: 2; err: [Inf, 0.2544015495255128, 0.16594493023251217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2544015495255128, 0.16594493023251217, 0.14448544264371527] ***
*** starting iteration: 3; err: [Inf, 0.2544015495255128, 0.16594493023251217, 0.14448544264371527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2544015495255128, 0.16594493023251217, 0.14448544264371527, 0.1422144499627275] ***
*** finished computation of 7 references, err: [Inf, 0.2544015495255128, 0.16594493023251217, 0.14448544264371527, 0.1422144499627275] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.535449058253496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.535449058253496, 0.20573032029819868] ***
*** starting iteration: 2; err: [Inf, 0.535449058253496, 0.20573032029819868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.535449058253496, 0.20573032029819868, 0.18888838885315828] ***
*** starting iteration: 3; err: [Inf, 0.535449058253496, 0.20573032029819868, 0.18888838885315828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.535449058253496, 0.20573032029819868, 0.18888838885315828, 0.18454689270495464] ***
*** finished computation of 7 references, err: [Inf, 0.535449058253496, 0.20573032029819868, 0.18888838885315828, 0.18454689270495464] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 24]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 10), (3, 24)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5116477281350363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5116477281350363, 0.17507387133292887] ***
*** starting iteration: 2; err: [Inf, 0.5116477281350363, 0.17507387133292887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5116477281350363, 0.17507387133292887, 0.1711768520266382] ***
*** starting iteration: 3; err: [Inf, 0.5116477281350363, 0.17507387133292887, 0.1711768520266382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5116477281350363, 0.17507387133292887, 0.1711768520266382, 0.1711768520266382] ***
*** finished computation of 7 references, err: [Inf, 0.5116477281350363, 0.17507387133292887, 0.1711768520266382, 0.1711768520266382] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 4]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34178479191166006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34178479191166006, 0.1968598583447722] ***
*** starting iteration: 2; err: [Inf, 0.34178479191166006, 0.1968598583447722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576] ***
*** starting iteration: 3; err: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576, 0.18688475935979834] ***
*** starting iteration: 4; err: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576, 0.18688475935979834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576, 0.18688475935979834, 0.18639305231218853] ***
*** finished computation of 7 references, err: [Inf, 0.34178479191166006, 0.1968598583447722, 0.18798693390882576, 0.18688475935979834, 0.18639305231218853] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 24]]
** centroid: 5, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5895700411044292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895700411044292, 0.19939009558704682] ***
*** starting iteration: 2; err: [Inf, 0.5895700411044292, 0.19939009558704682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218] ***
*** starting iteration: 3; err: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218, 0.18240547427412937] ***
*** starting iteration: 4; err: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218, 0.18240547427412937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218, 0.18240547427412937, 0.18180573547412796] ***
*** finished computation of 7 references, err: [Inf, 0.5895700411044292, 0.19939009558704682, 0.18604205844941218, 0.18240547427412937, 0.18180573547412796] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 24]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.427674877420901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.427674877420901, 0.22086112842157216] ***
*** starting iteration: 2; err: [Inf, 0.427674877420901, 0.22086112842157216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283] ***
*** starting iteration: 3; err: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354] ***
*** starting iteration: 4; err: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354, 0.202821833001612] ***
*** starting iteration: 5; err: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354, 0.202821833001612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354, 0.202821833001612, 0.2020863445300127] ***
*** finished computation of 7 references, err: [Inf, 0.427674877420901, 0.22086112842157216, 0.21318672595179283, 0.20425801108789354, 0.202821833001612, 0.2020863445300127] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 20]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(2, 9), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 4]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 16), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4245013453771202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4245013453771202, 0.1740039871162052] ***
*** starting iteration: 2; err: [Inf, 0.4245013453771202, 0.1740039871162052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4245013453771202, 0.1740039871162052, 0.16765855616803363] ***
*** starting iteration: 3; err: [Inf, 0.4245013453771202, 0.1740039871162052, 0.16765855616803363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4245013453771202, 0.1740039871162052, 0.16765855616803363, 0.16506533471465823] ***
*** finished computation of 7 references, err: [Inf, 0.4245013453771202, 0.1740039871162052, 0.16765855616803363, 0.16506533471465823] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 10]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43067269896196064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43067269896196064, 0.17879232008956436] ***
*** starting iteration: 2; err: [Inf, 0.43067269896196064, 0.17879232008956436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43067269896196064, 0.17879232008956436, 0.1688164964054472] ***
*** starting iteration: 3; err: [Inf, 0.43067269896196064, 0.17879232008956436, 0.1688164964054472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43067269896196064, 0.17879232008956436, 0.1688164964054472, 0.162311646423607] ***
*** finished computation of 7 references, err: [Inf, 0.43067269896196064, 0.17879232008956436, 0.1688164964054472, 0.162311646423607] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42792515419762234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42792515419762234, 0.20310961685813608] ***
*** starting iteration: 2; err: [Inf, 0.42792515419762234, 0.20310961685813608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42792515419762234, 0.20310961685813608, 0.199636927447212] ***
*** starting iteration: 3; err: [Inf, 0.42792515419762234, 0.20310961685813608, 0.199636927447212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42792515419762234, 0.20310961685813608, 0.199636927447212, 0.199636927447212] ***
*** finished computation of 7 references, err: [Inf, 0.42792515419762234, 0.20310961685813608, 0.199636927447212, 0.199636927447212] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.4110000064291626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4110000064291626, 0.9016339375401021] ***
*** finished computation of 3 references, err: [Inf, 1.4110000064291626, 0.9016339375401021] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 29]]
** centroid: 1, normalized-entropy: 0.9982545693874832, [(2, 32), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 4, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 14), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1818000113743548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1818000113743548, 0.5773976134341379] ***
*** finished computation of 3 references, err: [Inf, 1.1818000113743548, 0.5773976134341379] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 28]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.984099946835828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.984099946835828, 1.169272263882883] ***
*** finished computation of 3 references, err: [Inf, 3.984099946835828, 1.169272263882883] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 26]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 2, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 8]]
** centroid: 3, normalized-entropy: 0.7990485210442682, [(2, 25), (3, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5744108869056996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5744108869056996, 0.6187217509111329] ***
*** finished computation of 3 references, err: [Inf, 1.5744108869056996, 0.6187217509111329] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 29]]
** centroid: 1, normalized-entropy: 0.9936507116910402, [(2, 35), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8919198792634604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8919198792634604, 0.5944711284456028] ***
*** finished computation of 3 references, err: [Inf, 1.8919198792634604, 0.5944711284456028] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 4]]
** centroid: 1, normalized-entropy: 0.5328350630342235, [(2, 29), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 33]]
** centroid: 2, normalized-entropy: 0.3159971329784246, [(2, 2), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 2, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 30), (2, 2)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6571594136589973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6571594136589973, 0.4574684879470767] ***
*** finished computation of 3 references, err: [Inf, 1.6571594136589973, 0.4574684879470767] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 33]]
** centroid: 3, normalized-entropy: 0.9113423759758414, [(2, 16), (3, 33)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7751532394893378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7751532394893378, 0.37662025704975816] ***
*** finished computation of 3 references, err: [Inf, 0.7751532394893378, 0.37662025704975816] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 1, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 2, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5468482750978976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468482750978976, 0.36984448534657205] ***
*** finished computation of 3 references, err: [Inf, 0.5468482750978976, 0.36984448534657205] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 4]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 33]]
** centroid: 3, normalized-entropy: 0.5617526078313283, [(2, 5), (3, 33)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5884413532712581] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5884413532712581, 0.38556062140111047] ***
*** finished computation of 3 references, err: [Inf, 0.5884413532712581, 0.38556062140111047] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 29]]
** centroid: 2, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 5]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 26), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8741000036557561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8741000036557561, 0.5524804722827095] ***
*** finished computation of 3 references, err: [Inf, 0.8741000036557561, 0.5524804722827095] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 29]]
** centroid: 2, normalized-entropy: 0.8721617883411698, [(2, 12), (3, 29)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.3183999654264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3183999654264, 1.002907282092489] ***
*** finished computation of 3 references, err: [Inf, 3.3183999654264, 1.002907282092489] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 5, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 30), (2, 5)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.816000007809536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.816000007809536, 0.5282545384371515] ***
*** finished computation of 3 references, err: [Inf, 0.816000007809536, 0.5282545384371515] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9, 0.8933333333333332, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9666666666666667
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.49199999914845066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49199999914845066, 0.2209342998203111] ***
*** starting iteration: 2; err: [Inf, 0.49199999914845066, 0.2209342998203111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49199999914845066, 0.2209342998203111, 0.20423853818094337] ***
*** starting iteration: 3; err: [Inf, 0.49199999914845066, 0.2209342998203111, 0.20423853818094337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49199999914845066, 0.2209342998203111, 0.20423853818094337, 0.2023069541170306] ***
*** finished computation of 7 references, err: [Inf, 0.49199999914845066, 0.2209342998203111, 0.20423853818094337, 0.2023069541170306] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 7, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6156000067438339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6156000067438339, 0.28133667102727633] ***
*** starting iteration: 2; err: [Inf, 0.6156000067438339, 0.28133667102727633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6156000067438339, 0.28133667102727633, 0.24898290880995388] ***
*** starting iteration: 3; err: [Inf, 0.6156000067438339, 0.28133667102727633, 0.24898290880995388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6156000067438339, 0.28133667102727633, 0.24898290880995388, 0.23348811066780456] ***
*** finished computation of 7 references, err: [Inf, 0.6156000067438339, 0.28133667102727633, 0.24898290880995388, 0.23348811066780456] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 4]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6022000075112398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6022000075112398, 0.27546776053403854] ***
*** starting iteration: 2; err: [Inf, 0.6022000075112398, 0.27546776053403854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6022000075112398, 0.27546776053403854, 0.26069794691511744] ***
*** starting iteration: 3; err: [Inf, 0.6022000075112398, 0.27546776053403854, 0.26069794691511744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6022000075112398, 0.27546776053403854, 0.26069794691511744, 0.2556178329225542] ***
*** finished computation of 7 references, err: [Inf, 0.6022000075112398, 0.27546776053403854, 0.26069794691511744, 0.2556178329225542] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 4]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 16), (3, 4)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9, 0.8933333333333332, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 3.0244000152391233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.0244000152391233, 0.4606684287576989] ***
*** finished computation of 7 references, err: [Inf, 3.0244000152391233, 0.4606684287576989] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 10]]
** centroid: 1, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7733999982018311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7733999982018311, 0.3618938016098269] ***
*** finished computation of 7 references, err: [Inf, 0.7733999982018311, 0.3618938016098269] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 20]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 4), (3, 20)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6824000070751951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6824000070751951, 0.34817088584321304] ***
*** finished computation of 7 references, err: [Inf, 0.6824000070751951, 0.34817088584321304] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 23]]
** centroid: 1, normalized-entropy: 0.927526588431676, [(2, 12), (3, 23)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9, 0.8933333333333332, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 23
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.851793976858067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.851793976858067, 0.6014184460706893] ***
*** finished computation of 3 references, err: [Inf, 0.851793976858067, 0.6014184460706893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 29]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 33), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 3, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8888672302696325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8888672302696325, 0.6589609229057056] ***
*** finished computation of 3 references, err: [Inf, 0.8888672302696325, 0.6589609229057056] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 4, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 37]]
** centroid: 3, normalized-entropy: 0.9893755831922303, [(2, 29), (3, 37)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7720920243653521] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7720920243653521, 0.41801736638083986] ***
*** finished computation of 3 references, err: [Inf, 0.7720920243653521, 0.41801736638083986] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 30]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 20, 4]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 20), (3, 4)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8933333333333332, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 23
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8933333333333332, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.233333333333333, 3.7277777777777774, 1.5055555555555555, 0.3055555555555556], [7.575, 3.175, 6.425000000000001, 2.0999999999999996], [5.829411764705883, 2.658823529411765, 4.170588235294117, 1.2529411764705882], [6.620000000000002, 3.046666666666667, 5.633333333333332, 2.1533333333333338], [4.741176470588235, 3.0882352941176467, 1.4235294117647057, 0.18823529411764708], [5.242857142857143, 2.371428571428571, 3.442857142857143, 1.0285714285714285], [6.281818181818181, 2.9818181818181815, 4.709090909090908, 1.5000000000000002], [5.9399999999999995, 2.7399999999999998, 4.959999999999999, 1.83]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.380000000000001, 2.966666666666667, 4.573333333333332, 1.4466666666666668], [6.175000000000001, 2.875, 4.925000000000001, 1.7249999999999999], [4.700000000000001, 3.1499999999999995, 1.3642857142857143, 0.20714285714285716], [7.470000000000001, 3.08, 6.26, 2.0600000000000005], [6.476000000000002, 2.9640000000000004, 5.363999999999999, 2.0039999999999996], [5.300000000000001, 3.6375, 1.5124999999999997, 0.2875], [5.475, 2.5374999999999996, 3.5875, 1.1], [5.466666666666667, 2.7222222222222228, 4.222222222222222, 1.3777777777777775]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 3, 1, 2, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.48125, 2.6625000000000005, 4.0687500000000005, 1.2750000000000001], [7.3999999999999995, 2.8833333333333333, 6.316666666666666, 1.9833333333333334], [4.840000000000001, 3.26, 1.464, 0.22400000000000003], [6.33, 3.0149999999999997, 5.4, 2.1000000000000005], [5.420000000000001, 3.839999999999999, 1.52, 0.25999999999999995], [6.44375, 2.9124999999999996, 4.643750000000001, 1.4500000000000002], [6.2, 2.575, 4.975, 1.675], [7.6000000000000005, 3.733333333333333, 6.3999999999999995, 2.2333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[43, 6, 2, 4, 1, 2, 25, 5, 31, 19, 12, 1, 31, 29, 34, 38, 32, 19, 3, 41, 5, 5, 49, 1, 16, 33, 2, 1, 37, 30, 16, 30, 17, 23, 3, 33, 14, 26, 6, 40, 41, 25, 32, 29, 41, 45, 24, 28, 16, 24, 26, 33, 50, 42, 37, 49, 35, 32, 49, 12, 22, 7, 53, 43, 3, 47, 28, 27, 31, 22, 31, 31, 28, 18, 28, 28, 25, 22, 30, 41, 33, 25, 40, 35, 43, 26, 35, 28, 1, 27, 23, 31, 23, 42, 43, 26, 19, 19, 31, 18, 18, 52, 44, 28, 39, 72, 23, 44, 34, 36, 27, 13, 38, 26, 40, 15, 69, 31, 45, 30, 31, 54, 56, 37, 36, 39, 39, 19, 66, 77, 45, 22, 46, 33, 37, 21, 25, 45, 20, 35, 35, 36, 23, 30, 15, 30, 22, 48, 47, 31, 69, 50, 14, 38, 35, 25, 18, 40, 27, 61, 32, 57, 47, 14, 40, 38, 33, 43, 24, 40, 37, 31, 27, 27, 44, 37, 48, 38, 29, 49, 49, 41, 20, 48, 15, 40, 43, 50, 52, 34, 1, 53, 25, 30, 34, 45, 33, 35, 31, 32, 50, 65, 61, 42, 34, 51, 18, 40, 24, 40, 35, 65, 44, 49, 22, 48, 66, 52, 41, 34, 43, 38, 2, 31, 29, 31, 27, 29, 50, 47, 38, 35, 39, 6, 45, 13, 43, 25, 24, 34, 58, 27, 1, 47, 34, 56, 27, 50, 34, 46, 44, 68, 51, 27, 31, 27, 33, 48, 51, 22, 46, 1, 29, 31, 14, 38, 35, 56, 32, 26, 49, 34, 44, 38, 40, 26, 56, 28, 68, 29, 40, 39, 44, 36, 37, 67, 43, 36, 31, 39, 51, 24, 21, 18, 52, 38, 31, 48, 29, 49]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6090000000000001, speedup = 0.29062498094012457, eval_ratio = 0.041831)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3967013888888889,"recall":0.3967013888888889,"f1":null,"seconds":4.529394209384918e-5,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":341.0625,"distances_sum":1737.5189751535734}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5581597222222222,"recall":0.5581597222222222,"f1":null,"seconds":7.39116221666336e-5,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":380.390625,"distances_sum":1624.3278345493543}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6579861111111108,"recall":0.6579861111111108,"f1":0.6579861111111108,"seconds":0.0001152772456407547,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":418.890625,"distances_sum":1582.0016402064184}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7248263888888884,"recall":0.7248263888888884,"f1":0.7248263888888884,"seconds":0.00017163902521133423,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":456.6171875,"distances_sum":1559.1612818472693}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7838541666666657,"recall":0.7838541666666657,"f1":0.7838541666666657,"seconds":0.00021209567785263062,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":496.515625,"distances_sum":1543.1909663953038}
KCenters.DeloneInvIndex> reached performance {"precision":0.83767361111111,"recall":0.83767361111111,"f1":0.83767361111111,"seconds":0.0002490021288394928,"exhaustive_search_seconds":0.0003126561641693115,"evaluations":536.21875,"distances_sum":1529.6956494200263}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7979999999999998, speedup = 0.8438606847697757, eval_ratio = 0.053665)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
