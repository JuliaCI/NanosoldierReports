Julia Version 1.4.0-DEV.624
Commit 56d75f7422 (2019-12-17 08:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed ArgCheck ──────────── v1.0.1
 Installed DocStringExtensions ─ v0.8.1
 Installed PkgSkeleton ───────── v0.3.1
  Updating `~/.julia/environments/v1.4/Project.toml`
  [d254efa0] + PkgSkeleton v0.3.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [dce04be8] + ArgCheck v1.0.1
  [ffbed154] + DocStringExtensions v0.8.1
  [d254efa0] + PkgSkeleton v0.3.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing PkgSkeleton
Path `/home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_qsNeQh/Project.toml`
  [d254efa0] + PkgSkeleton v0.3.1 [`~/.julia/packages/PkgSkeleton/ZWIs1`]
  Updating `/tmp/jl_qsNeQh/Manifest.toml`
  [d254efa0] ~ PkgSkeleton v0.3.1 ⇒ v0.3.1 [`~/.julia/packages/PkgSkeleton/ZWIs1`]
Running sandbox
Status `/tmp/jl_qsNeQh/Project.toml`
  [dce04be8] ArgCheck v1.0.1
  [ffbed154] DocStringExtensions v0.8.1
  [d254efa0] PkgSkeleton v0.3.1 [`~/.julia/packages/PkgSkeleton/ZWIs1`]
  [ade2ca70] Dates 
  [76f85450] LibGit2 
  [44cfe95a] Pkg 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
Test Summary:      | Pass  Total
replacement values |    5      5
Test Summary:        | Pass  Total
template directories |    4      4
Test Summary:          | Pass  Total
package name from path |    5      5
Test Summary:     | Pass  Total
multiple replaces |    1      1
[ Info: getting template values
[ Info: copy and substitute
[ Info: initializing git repository
[ Info: adding documenter (completing the Manifest.toml for docs)
 Resolving package versions...
 Installed Parsers ──── v0.3.10
 Installed JSON ─────── v0.21.0
 Installed Documenter ─ v0.23.4
  Updating `/tmp/jl_6XDUrj/Foo/docs/Project.toml`
  [e30172f5] + Documenter v0.23.4
  Updating `/tmp/jl_6XDUrj/Foo/docs/Manifest.toml`
  [ffbed154] + DocStringExtensions v0.8.1
  [e30172f5] + Documenter v0.23.4
  [682c06a0] + JSON v0.21.0
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
┌ Info: successfully generated Foo
└   dest_dir = "/tmp/jl_6XDUrj/Foo"
[ Info: test documentation (instantiation)
package generation and checks: Error During Test at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:92
  Got exception outside of a @test
  IOError: could not spawn `julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] run(::Cmd; wait::Bool) at ./process.jl:439
   [6] run at ./process.jl:438 [inlined]
   [7] (::var"#4#6")() at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:103
   [8] cd(::var"#4#6", ::String) at ./file.jl:104
   [9] (::var"#3#5")(::String) at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:101
   [10] mktempdir(::var"#3#5", ::String; prefix::String) at ./file.jl:673
   [11] mktempdir(::Function, ::String) at ./file.jl:671 (repeats 2 times)
   [12] top-level scope at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:93
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [14] top-level scope at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:93
   [15] include(::String) at ./client.jl:439
   [16] top-level scope at none:6
   [17] eval(::Module, ::Any) at ./boot.jl:331
   [18] exec_options(::Base.JLOptions) at ./client.jl:264
   [19] _start() at ./client.jl:484
  
Test Summary:                 | Pass  Error  Total
package generation and checks |    4      1      5
ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl:92
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/PkgSkeleton/ZWIs1/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package PkgSkeleton errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
