Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.3/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
    Status `/tmp/jl_2S68PC/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.15129843644017654 -0.04140633318977702; 0.15129843644017654 0.0 0.03781697486050889; 0.04140633318977702 -0.03781697486050889 0.0])
dAA = so3([0.0 0.03226597938379623 0.00914104954323086; -0.03226597938379623 0.0 -0.043904857805826904; -0.00914104954323086 0.043904857805826904 0.0])
dAA = so3([0.0 0.02867195686245177 0.19087491859819664; -0.02867195686245177 0.0 0.0757377757173393; -0.19087491859819664 -0.0757377757173393 0.0])
dAA = Quaternion(0.996282674451555, [0.035918623128049686, 0.0538713476810957, 0.056820445257534685])
dAA = SO3([0.9809578337231757 0.1935556978900017 0.016059896371054837; -0.1924649113332606 0.9798540157861275 -0.05332321870704831; -0.02605736676287107 0.049216862578936794 0.9984481529229605])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9964910454646184 0.08166090536535155 0.01836008833701255; -0.07915653744143174 0.9907374578922737 -0.11033373060600432; -0.027199979579312538 0.10849325354171206 0.9937249997090839]), [-0.37816974860508884, -0.41406333189777017, 1.5129843644017653])
xj = SE3(SO3([0.9242778105808239 -0.260750353885097 0.27878267847324256; 0.3104980165684866 0.9383849045682725 -0.15173909379401884; -0.22203943472940676 0.22681054611104595 0.9482908127773119]), [-0.757377757173393, 1.9087491859819663, -0.2867195686245177])
Dx = SE3(SO3([0.902496081981882 -0.3402839348037555 0.26402209324567066; 0.3590095977484345 0.9330073789890212 -0.024684802542135717; -0.2379347194754464 0.11706440307160179 0.9642007025519272]), [-0.5127912707206358, 2.0750751647172048, -2.051657653454394])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
