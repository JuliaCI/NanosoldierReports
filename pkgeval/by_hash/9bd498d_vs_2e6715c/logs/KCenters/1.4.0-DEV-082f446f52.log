Julia Version 1.4.0-DEV.674
Commit 082f446f52 (2020-01-02 16:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed KCenters ──────────────────── v0.1.8
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Compat ────────────────────── v3.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed OrderedCollections ────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed CategoricalArrays ─────────── v0.7.5
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed PooledArrays ──────────────── v0.5.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_N4iNo5/Project.toml`
 [no changes]
  Updating `/tmp/jl_N4iNo5/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_N4iNo5/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.98000000000002
[ Info: 59.92000000000004
[ Info: 44.19999999999999
[ Info: 24.69
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 75.78000114538527
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.68112382564134
inertia(cdnet.distances) = 22.153069107080324
inertia(crand.distances) = 21.579933302870078
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.3203125,"distances_sum":1443.2654516282423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8157618423243431,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.5390625,"distances_sum":2326.058045884985}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.8157618423243431,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.5390625,"distances_sum":2326.058045884985}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9124094655344661,"seconds":7.117167115211487e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.4765625,"distances_sum":2827.455028848016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9382960789210796,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.578125,"distances_sum":3077.912891355477}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8282462329337338,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.6328125,"distances_sum":2407.910076586964}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9382960789210796,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.578125,"distances_sum":3077.912891355477}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216121,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.796875,"distances_sum":3202.736149170033}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465202,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.921875,"distances_sum":3308.468084031354}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547504578754582,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.765625,"distances_sum":3149.70425231258}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9480196886446891,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.671875,"distances_sum":3149.0898344380143}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9423649267399271,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.640625,"distances_sum":3102.599483199532}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465202,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.921875,"distances_sum":3308.468084031354}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465202,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.921875,"distances_sum":3308.468084031354}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1689453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1689453125,"f1":null,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":4.796875,"distances_sum":451.652443123195}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.541015625,"f1":null,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.0390625,"distances_sum":1469.2534259470442}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3671875,"f1":0.5159194971694969,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.7734375,"distances_sum":1004.7309439618583}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8657748501498509,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3046875,"distances_sum":2329.9872470342916}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8657748501498509,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3046875,"distances_sum":2329.9872470342916}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9185382326007332,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":2531.6758139231074}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9185382326007332,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":2531.6758139231074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9381098068598075,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":2684.8803891904217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449893856143864,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":2721.4516684907376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9189820596070604,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2548.756266466348}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9449805402930409,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.78125,"distances_sum":2735.132995400124}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9381956585081591,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2693.8683474796435}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449893856143864,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":2721.4516684907376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449893856143864,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":2721.4516684907376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8768403471528479,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.484375,"distances_sum":2130.4140973759245}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6083984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6083984375,"f1":0.7415208055833065,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.9375,"distances_sum":1508.03111374871}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6953125,"distances_sum":549.0568770384472}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8768403471528479,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.484375,"distances_sum":2130.4140973759245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9694055944055949,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9453125,"distances_sum":2769.6335063039237}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9694055944055949,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9453125,"distances_sum":2769.6335063039237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9701121794871799,"seconds":6.362795829772949e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9375,"distances_sum":2758.8281034026886}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":7.169321179389954e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.953125,"distances_sum":2810.4866062109636}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":7.169321179389954e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.953125,"distances_sum":2810.4866062109636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644691,"seconds":7.169321179389954e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.953125,"distances_sum":2810.4866062109636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.46484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.46484375,"f1":0.6174422799422802,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.15625,"distances_sum":1281.3794345014503}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.599609375,"f1":0.7388309607059613,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.1953125,"distances_sum":1674.6105435546917}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.599609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.599609375,"f1":0.7388309607059613,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.1953125,"distances_sum":1674.6105435546917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9203874250749258,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.625,"distances_sum":2479.4631012203263}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9253262362637367,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6171875,"distances_sum":2552.783500108418}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8090673215673224,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.875,"distances_sum":1920.623225090656}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9253262362637367,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6171875,"distances_sum":2552.783500108418}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9418269230769236,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2654.203073659201}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9273580586080591,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.71875,"distances_sum":2526.0679313768537}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9278617216117224,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6015625,"distances_sum":2569.052894517331}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9418269230769236,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2654.203073659201}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9418269230769236,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2654.203073659201}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1357421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1357421875,"f1":null,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.0546875,"distances_sum":400.9071504094877}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8140016233766242,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.65625,"distances_sum":1985.7189794244362}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.140625,"f1":null,"seconds":2.8498470783233643e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":3.9765625,"distances_sum":439.55362054826287}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7041015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7041015625,"f1":0.8140016233766242,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.65625,"distances_sum":1985.7189794244362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9032514360639369,"seconds":6.591901183128357e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5234375,"distances_sum":2361.238955327814}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8483069014319023,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.9609375,"distances_sum":2077.6934100278695}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9032514360639369,"seconds":6.591901183128357e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5234375,"distances_sum":2361.238955327814}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9539892399267402,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.765625,"distances_sum":2727.3913129733096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9613896520146524,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7890625,"distances_sum":2751.795387959741}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9613896520146524,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7890625,"distances_sum":2751.795387959741}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9613896520146524,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7890625,"distances_sum":2751.795387959741}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7698350260850266,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.609375,"distances_sum":1703.7679332068844}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.2890625,"distances_sum":1335.5885028990626}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3193359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3193359375,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":5.3359375,"distances_sum":814.5638976782807}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7698350260850266,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.609375,"distances_sum":1703.7679332068844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8537930819180827,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.25,"distances_sum":2032.2903347753484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9238844488844492,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6640625,"distances_sum":2474.0493312736644}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.671875,"f1":null,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.7578125,"distances_sum":1773.4139628605983}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9309841200466207,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.84375,"distances_sum":2461.864020237019}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8547821969696978,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.15625,"distances_sum":2081.8541852233366}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8908029470529478,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5078125,"distances_sum":2257.295149899096}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9309841200466207,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.84375,"distances_sum":2461.864020237019}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.84375,"distances_sum":2763.209826187498}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9370306776556784,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7421875,"distances_sum":2530.807900660332}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9369906135531141,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5859375,"distances_sum":2581.1732706534385}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9392087079587087,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6875,"distances_sum":2596.8754336522143}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.944093406593407,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7734375,"distances_sum":2559.0457681640178}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.84375,"distances_sum":2763.209826187498}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.84375,"distances_sum":2763.209826187498}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9785156249999999,"recall":0.625,"f1":0.7517443494005999,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.3359375,"distances_sum":1461.7898543877375}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.98828125,"recall":0.5205078125,"f1":0.6657209110334114,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.875,"distances_sum":1146.512888519134}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.625,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9785156249999999,"recall":0.625,"f1":0.7517443494005999,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.3359375,"distances_sum":1461.7898543877375}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9902064732142858,"recall":0.8818359375,"f1":0.9279697516025646,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.625,"distances_sum":2269.976310031754}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9910249255952381,"recall":0.818359375,"f1":0.8903066334706968,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.1171875,"distances_sum":2018.8320597473235}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9833891369047617,"recall":0.7138671875,"f1":0.8147062139249643,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.875,"distances_sum":1740.4639319010232}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9802548363095239,"recall":0.83984375,"f1":0.8979619989385619,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.515625,"distances_sum":2151.138606565787}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":2,"bsize":8},"perf":{"precision":0.9902064732142858,"recall":0.8818359375,"f1":0.9279697516025646,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.625,"distances_sum":2269.976310031754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9876767113095238,"recall":0.931640625,"f1":0.956727192078755,"seconds":6.778165698051453e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8359375,"distances_sum":2476.7539253638956}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.9862351190476191,"recall":0.9248046875,"f1":0.9520318223443228,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8125,"distances_sum":2448.468909223263}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.9892299107142858,"recall":0.884765625,"f1":0.9297805059523816,"seconds":6.765127182006836e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.640625,"distances_sum":2323.456590129596}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":10}, perf: {"precision":0.9850260416666667,"recall":0.9150390625,"f1":0.9456516140109894,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.7890625,"distances_sum":2419.769372937072}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9864211309523809,"recall":0.90625,"f1":0.9418154761904767,"seconds":6.206333637237549e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.703125,"distances_sum":2362.0882893207904}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9876767113095238,"recall":0.931640625,"f1":0.956727192078755,"seconds":6.778165698051453e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8359375,"distances_sum":2476.7539253638956}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9876767113095238,"recall":0.931640625,"f1":0.956727192078755,"seconds":6.778165698051453e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8359375,"distances_sum":2476.7539253638956}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":4.3101608753204346e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":6.5546875,"distances_sum":720.7689967912536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8051204004329012,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":7.859375,"distances_sum":1359.355619335962}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8051204004329012,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":7.859375,"distances_sum":1359.355619335962}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8943457584082591,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.4609375,"distances_sum":1747.447348039423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9138653013653022,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.578125,"distances_sum":1875.4230008084207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9480368589743595,"seconds":7.137656211853027e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.8515625,"distances_sum":2077.2455855576386}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8131642662892671,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":7.9921875,"distances_sum":1417.0043700741692}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8695601273726282,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.2578125,"distances_sum":1609.8472374337762}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8566078019203028,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.3046875,"distances_sum":1569.0455277874703}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8584119005994015,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.234375,"distances_sum":1561.5700635334886}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9480368589743595,"seconds":7.137656211853027e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.8515625,"distances_sum":2077.2455855576386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.895512342453003e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.9609375,"distances_sum":2268.2690116206013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976081730769231,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.9375,"distances_sum":2234.8311893498058}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9560554029304034,"seconds":7.558614015579224e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.859375,"distances_sum":2128.3513519644534}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679773351648355,"seconds":6.819143891334534e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.921875,"distances_sum":2191.6687007546216}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616701007326013,"seconds":6.556510925292969e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.8984375,"distances_sum":2142.1957363936326}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.952483974358975,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.84375,"distances_sum":2078.7854124941036}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566620879120882,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.8359375,"distances_sum":2137.037242859067}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.895512342453003e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.9609375,"distances_sum":2268.2690116206013}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.895512342453003e-6,"exhaustive_search_seconds":0.00012704730033874512,"evaluations":8.9609375,"distances_sum":2268.2690116206013}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.1484375,"distances_sum":1166.248714346474}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.1484375,"distances_sum":1166.248714346474}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8029661310911317,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.8984375,"distances_sum":1457.9970060054304}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8730774433899443,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.3125,"distances_sum":1757.8348912790223}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8730774433899443,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.3125,"distances_sum":1757.8348912790223}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9048050907425913,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.5859375,"distances_sum":1923.3731097446794}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600675366300371,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.890625,"distances_sum":2295.1692365082336}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9376233141858147,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.8125,"distances_sum":2154.803132491611}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556776556776562,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.84375,"distances_sum":2260.7264481467255}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9239354395604401,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7890625,"distances_sum":2049.5683617140585}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600675366300371,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.890625,"distances_sum":2295.1692365082336}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9600675366300371,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.890625,"distances_sum":2295.1692365082336}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8603974150849159,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.21875,"distances_sum":1647.6506647492183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.2421875,"distances_sum":856.5579490562077}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.609375,"distances_sum":476.2038629217459}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7932099150849159,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5546875,"distances_sum":1403.980696038221}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8603974150849159,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.21875,"distances_sum":1647.6506647492183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051285,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2182.340627996475}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530792124542132,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7578125,"distances_sum":2184.536432970965}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8998605561105569,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.421875,"distances_sum":1855.3859801989402}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578926282051285,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2182.340627996475}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9296875,"distances_sum":2352.9777894974}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358977,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2280.4278549590476}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904765,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2325.7356543654723}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674336080586083,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.859375,"distances_sum":2253.497399432978}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9620077838827845,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8671875,"distances_sum":2232.8926692071846}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9296875,"distances_sum":2352.9777894974}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9296875,"distances_sum":2352.9777894974}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.14453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.14453125,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":3.7734375,"distances_sum":351.71561461188577}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":3.890625,"distances_sum":395.22553404024563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.15625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.15625,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":3.890625,"distances_sum":395.22553404024563}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.599609375,"f1":0.7360420829170836,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.2578125,"distances_sum":1291.2521989373085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8686155858030867,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.328125,"distances_sum":1749.7592623635555}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3056640625, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3056640625,"f1":null,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":4.6484375,"distances_sum":695.99635816393}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4716796875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.4716796875,"f1":0.6274787712287716,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.1640625,"distances_sum":1044.4013388410306}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8686155858030867,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.328125,"distances_sum":1749.7592623635555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433150183150187,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7421875,"distances_sum":2122.4585683102514}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9141832126207132,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6171875,"distances_sum":1941.9242333131117}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8949181027306035,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4609375,"distances_sum":1887.0994161018668}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.909361992174493,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4765625,"distances_sum":1995.4283644719721}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9433150183150187,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7421875,"distances_sum":2122.4585683102514}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9433150183150187,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7421875,"distances_sum":2122.4585683102514}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8000664266289275,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.90625,"distances_sum":1484.8616760580892}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.69565503940504,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.953125,"distances_sum":1177.2408504677046}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.365234375,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.8515625,"distances_sum":737.6645841878668}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8539278429903439,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4140625,"distances_sum":1729.360733176439}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8539278429903439,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4140625,"distances_sum":1729.360733176439}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954784798534799,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.828125,"distances_sum":2340.0251133621414}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8686308483183492,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3828125,"distances_sum":1802.7711868573638}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8997315184815191,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.546875,"distances_sum":1918.9288702331685}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8977168664668671,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.5859375,"distances_sum":1936.2462071644734}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.954784798534799,"seconds":6.845220923423767e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.828125,"distances_sum":2340.0251133621414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749084249084252,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.90625,"distances_sum":2443.6556711869503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.97810782967033,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2462.146496220875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603823260073265,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2356.3552514632947}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963026556776557,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8984375,"distances_sum":2348.504527912653}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.954375832500833,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8828125,"distances_sum":2302.919354429038}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.97810782967033,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2462.146496220875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.97810782967033,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2462.146496220875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4169921875,"f1":0.5616640304140301,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.578125,"distances_sum":831.5500142609847}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.26953125,"f1":null,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.9921875,"distances_sum":611.2527367866361}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4169921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4169921875,"f1":0.5616640304140301,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.578125,"distances_sum":831.5500142609847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9161916208791216,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7890625,"distances_sum":1981.679774831087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7059272324897332,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.4609375,"distances_sum":1161.696983622455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8525110306360313,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3515625,"distances_sum":1655.7155699532732}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":7,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.997236490249634e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.65625,"distances_sum":834.3780635103332}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9161916208791216,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7890625,"distances_sum":1981.679774831087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573202838827841,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.953125,"distances_sum":2253.2336751339044}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594722985347991,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":2256.5187919801347}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611725,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9609375,"distances_sum":2261.1750845877327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9460138819513827,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9375,"distances_sum":2162.6069495027073}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9394834332334338,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9296875,"distances_sum":2109.4684654829307}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611725,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9609375,"distances_sum":2261.1750845877327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611725,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9609375,"distances_sum":2261.1750845877327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.26173210144043e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.2109375,"distances_sum":1225.0958717472338}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8043430527805534,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.90625,"distances_sum":1585.1443879175008}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8526301823176831,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.4765625,"distances_sum":1696.336673140508}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8526301823176831,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.4765625,"distances_sum":1696.336673140508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688244047619052,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9921875,"distances_sum":2428.867254076809}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.942368048618049,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9609375,"distances_sum":2261.4302264719095}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688244047619052,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9921875,"distances_sum":2428.867254076809}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":9.0,"distances_sum":2497.6283911357164}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":9.0,"distances_sum":2497.6283911357164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790750915750919,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":9.0,"distances_sum":2497.6283911357164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7677317474192481,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7109375,"distances_sum":1372.6258092930382}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6396484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6396484375,"f1":0.7677317474192481,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7109375,"distances_sum":1372.6258092930382}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8463156635031643,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1875,"distances_sum":1679.179458575931}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.8992934149184156,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":1922.852237288199}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7708786005661014,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.765625,"distances_sum":1441.3597989811328}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.8992934149184156,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":1922.852237288199}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467490842490849,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2223.429583375104}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9467490842490849,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2223.429583375104}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9467490842490849,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2223.429583375104}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.365234375,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.4375,"distances_sum":800.7519018437699}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.328125,"distances_sum":473.0451213675039}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.365234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.365234375,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.4375,"distances_sum":800.7519018437699}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8688675907425917,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0234375,"distances_sum":1811.5433170541273}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5283203125,"f1":null,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6484375,"distances_sum":1109.9515986475749}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8415095321345331,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.796875,"distances_sum":1665.0509931375004}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8688675907425917,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0234375,"distances_sum":1811.5433170541273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623569139194144,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2373.9485804769593}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9419013278388285,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.640625,"distances_sum":2234.779969956099}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9279532967032973,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4453125,"distances_sum":2155.423676034183}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9182806776556783,"seconds":5.8222562074661255e-5,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3515625,"distances_sum":2080.590512604971}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.88724920912421,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1953125,"distances_sum":1899.1435261012457}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9202526640026647,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3671875,"distances_sum":2093.0873451249217}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.929527243589744,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4375,"distances_sum":2159.1076962259967}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9623569139194144,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2373.9485804769593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9623569139194144,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2373.9485804769593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.255859375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.255859375,"f1":null,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.0,"distances_sum":537.2462199073817}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.255859375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.255859375,"f1":null,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.0,"distances_sum":537.2462199073817}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7274569180819187,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":6.8828125,"distances_sum":1209.6568005433335}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5947265625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5947265625,"f1":0.7274569180819187,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":6.8828125,"distances_sum":1209.6568005433335}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9332911879786885,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":8.578125,"distances_sum":2161.624218601492}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9332911879786885,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":8.578125,"distances_sum":2161.624218601492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9332911879786885,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":8.578125,"distances_sum":2161.624218601492}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9332911879786885,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":2.0693987607955933e-6,"evaluations":8.578125,"distances_sum":2161.624218601492}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.90625,"distances_sum":885.5288672536572}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.583984375,"f1":null,"seconds":4.1369348764419556e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.8671875,"distances_sum":1282.4083482601197}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.583984375,"f1":null,"seconds":4.1369348764419556e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.8671875,"distances_sum":1282.4083482601197}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8953848235098243,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.28125,"distances_sum":1976.2454099347672}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8438075813075822,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8125,"distances_sum":1715.3129850975045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8620057026307034,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8671875,"distances_sum":1784.3011473256486}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8953848235098243,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.28125,"distances_sum":1976.2454099347672}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746680402930408,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2504.505513096241}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688244047619053,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2459.1355941847655}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8986034798534808,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.421875,"distances_sum":1969.6703505977623}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9685153388278392,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2462.928936398185}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931616300366301,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4765625,"distances_sum":2197.379914452963}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746680402930408,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2504.505513096241}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746680402930408,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2504.505513096241}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8511535339660349,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1484375,"distances_sum":1724.1230315537396}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8511535339660349,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1484375,"distances_sum":1724.1230315537396}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9412889194139201,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":2281.4520700310186}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9380151098901105,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2267.770190615162}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9423305860805868,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2312.882530942371}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9423305860805868,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":2312.882530942371}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9469951923076925,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8203125,"distances_sum":2326.3298609521153}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630265567765571,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2424.5828747204037}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672676282051285,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2441.6364926452948}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9666723901098905,"seconds":6.288290023803711e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2443.906654671904}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962188332500833,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2425.033683625214}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672676282051285,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2441.6364926452948}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672676282051285,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2441.6364926452948}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.872247544122545,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":1853.9691997571936}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5087890625,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.5703125,"distances_sum":1143.5251577090842}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.782410818348319,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.765625,"distances_sum":1450.2815011878351}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.872247544122545,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":1853.9691997571936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9130551739926747,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.65625,"distances_sum":2115.1326495272706}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9017430486180493,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5390625,"distances_sum":2057.113616680364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9352793040293045,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2319.594337112665}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.922979624542125,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2210.4461593096266}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9352793040293045,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2319.594337112665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609947344322348,"seconds":7.150694727897644e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2479.1442071163383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492419039294044,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2444.432236060704}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609947344322348,"seconds":7.150694727897644e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2479.1442071163383}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609947344322348,"seconds":7.150694727897644e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2479.1442071163383}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7196941946941953,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.96875,"distances_sum":1190.2278044238958}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5830078125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5830078125,"f1":0.7196941946941953,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.96875,"distances_sum":1190.2278044238958}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.900504183316684,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2046.1133406684035}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.900504183316684,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2046.1133406684035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.900504183316684,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2046.1133406684035}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.828125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.900504183316684,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6484375,"distances_sum":2046.1133406684035}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7147968351093357,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.4765625,"distances_sum":1250.661015468997}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":2.780929207801819e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":5.7109375,"distances_sum":934.3999403187007}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.7147968351093357,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.4765625,"distances_sum":1250.661015468997}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7784807206682214,"seconds":3.291293978691101e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.9140625,"distances_sum":1488.2798646552244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7738376207126215,"seconds":3.248453140258789e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.7265625,"distances_sum":1428.8230165776008}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7784807206682214,"seconds":3.291293978691101e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.9140625,"distances_sum":1488.2798646552244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611728,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.7734375,"distances_sum":2582.5304477180503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7807491119991127,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.875,"distances_sum":1443.7358706145524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9024152930402937,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.625,"distances_sum":2146.7324683260335}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8740702006327015,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.40625,"distances_sum":1998.9645651063329}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.846554487179488,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":7.671875,"distances_sum":1775.2843719954649}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9299851190476196,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.609375,"distances_sum":2375.8984649661725}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8440564643689652,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":7.703125,"distances_sum":1751.2407175353171}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611728,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.7734375,"distances_sum":2582.5304477180503}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611728,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.7734375,"distances_sum":2582.5304477180503}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8093451687201693,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":7.546875,"distances_sum":1616.96608500802}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8593869671994682,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":7.8203125,"distances_sum":1861.909707627386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8593869671994682,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":7.8203125,"distances_sum":1861.909707627386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8701954295704303,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":7.9375,"distances_sum":1916.9343173715135}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8687739343989354,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":7.9140625,"distances_sum":1904.5696941504125}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9318598068598072,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.5078125,"distances_sum":2349.8502188126236}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9318598068598072,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.5078125,"distances_sum":2349.8502188126236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9481799450549457,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.65625,"distances_sum":2519.936411345925}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8515625,"distances_sum":2624.7040909265365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9656822344322347,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8515625,"distances_sum":2597.698587351418}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547275641025647,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.703125,"distances_sum":2539.507202779177}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494276556776561,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.6796875,"distances_sum":2507.141958614822}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8515625,"distances_sum":2624.7040909265365}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8515625,"distances_sum":2624.7040909265365}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":2.078711986541748e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":5.1953125,"distances_sum":512.0144935601005}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7113775113775119,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.4296875,"distances_sum":1197.9146343204613}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7113775113775119,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.4296875,"distances_sum":1197.9146343204613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8385031635031645,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":7.765625,"distances_sum":1727.3706759606473}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7955029345654354,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.9375,"distances_sum":1486.8011283385947}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8385031635031645,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":7.765625,"distances_sum":1727.3706759606473}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958298992673993,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.8203125,"distances_sum":2514.060832910221}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9371565934065942,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.609375,"distances_sum":2418.9034563714845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8727938727938738,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.40625,"distances_sum":1916.6501223493951}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931965430402931,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.5859375,"distances_sum":2399.0199676906022}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9381581959706966,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.5703125,"distances_sum":2417.6699931077023}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958298992673993,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.8203125,"distances_sum":2514.060832910221}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958298992673993,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.8203125,"distances_sum":2514.060832910221}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.703258373570874,"seconds":4.477798938751221e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.375,"distances_sum":1234.5390405781843}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8185302544677553,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.9296875,"distances_sum":1627.9440891058214}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4514814615249634e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.3359375,"distances_sum":476.17705047030586}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8185302544677553,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.9296875,"distances_sum":1627.9440891058214}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9353682775557778,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6640625,"distances_sum":2404.924326905093}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9440533424908429,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7265625,"distances_sum":2447.815234724888}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9303717116217123,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.65625,"distances_sum":2358.453665466901}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8700211247086255,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.375,"distances_sum":1936.2869221076173}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9440533424908429,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7265625,"distances_sum":2447.815234724888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593406593406598,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2528.6569337409314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9574862637362641,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.828125,"distances_sum":2531.17578387439}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665006868131871,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2633.378062233231}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738324175824179,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2640.328584431545}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696657509157516,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.875,"distances_sum":2632.1010596310102}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738324175824179,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2640.328584431545}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738324175824179,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2640.328584431545}}, n: 9
inertia(cfft.distances) = 18.841854506604502
inertia(cdnet.distances) = 26.704254380641455
inertia(crand.distances) = 22.50337572134055
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> k=5
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> k=7
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 3, 2, 3, 3, 1, 2, 3, 3, 2, 3, 3, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 9: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 1, 2, 2, 3, 1, 3, 3, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.42273333730624024] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42273333730624024, 0.17695302918287542] ***
*** starting iteration: 2; err: [Inf, 0.42273333730624024, 0.17695302918287542] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766] ***
*** starting iteration: 3; err: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151] ***
*** starting iteration: 4; err: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151, 0.1560035540052881] ***
*** starting iteration: 5; err: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151, 0.1560035540052881] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151, 0.1560035540052881, 0.1560035540052881] ***
*** finished computation of 12 references, err: [Inf, 0.42273333730624024, 0.17695302918287542, 0.16089161891542766, 0.1572136153766151, 0.1560035540052881, 0.1560035540052881] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 13 centroids; started with 12
acc = 0.9066666666666666
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3456121196413692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3456121196413692, 0.19123355588309532] ***
*** starting iteration: 2; err: [Inf, 0.3456121196413692, 0.19123355588309532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3456121196413692, 0.19123355588309532, 0.18497919594529422] ***
*** starting iteration: 3; err: [Inf, 0.3456121196413692, 0.19123355588309532, 0.18497919594529422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3456121196413692, 0.19123355588309532, 0.18497919594529422, 0.18418165000022543] ***
*** finished computation of 7 references, err: [Inf, 0.3456121196413692, 0.19123355588309532, 0.18497919594529422, 0.18418165000022543] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 2, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 3]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.474758371255747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.474758371255747, 0.23803116466737945] ***
*** starting iteration: 2; err: [Inf, 0.474758371255747, 0.23803116466737945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.474758371255747, 0.23803116466737945, 0.22049692481417382] ***
*** starting iteration: 3; err: [Inf, 0.474758371255747, 0.23803116466737945, 0.22049692481417382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.474758371255747, 0.23803116466737945, 0.22049692481417382, 0.19497030267049353] ***
*** finished computation of 7 references, err: [Inf, 0.474758371255747, 0.23803116466737945, 0.22049692481417382, 0.19497030267049353] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 6, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4125879504681669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125879504681669, 0.28782495337204084] ***
*** starting iteration: 2; err: [Inf, 0.4125879504681669, 0.28782495337204084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125879504681669, 0.28782495337204084, 0.2409250546829881] ***
*** starting iteration: 3; err: [Inf, 0.4125879504681669, 0.28782495337204084, 0.2409250546829881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125879504681669, 0.28782495337204084, 0.2409250546829881, 0.20468540473566016] ***
*** finished computation of 7 references, err: [Inf, 0.4125879504681669, 0.28782495337204084, 0.2409250546829881, 0.20468540473566016] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 11]]
** centroid: 1, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 6, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5834767647815157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5834767647815157, 0.2188722049582852] ***
*** starting iteration: 2; err: [Inf, 0.5834767647815157, 0.2188722049582852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5834767647815157, 0.2188722049582852, 0.18551677649170156] ***
*** starting iteration: 3; err: [Inf, 0.5834767647815157, 0.2188722049582852, 0.18551677649170156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5834767647815157, 0.2188722049582852, 0.18551677649170156, 0.1727279167897665] ***
*** finished computation of 7 references, err: [Inf, 0.5834767647815157, 0.2188722049582852, 0.18551677649170156, 0.1727279167897665] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6518529488513007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6518529488513007, 0.38763548729429614] ***
*** starting iteration: 2; err: [Inf, 1.6518529488513007, 0.38763548729429614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6518529488513007, 0.38763548729429614, 0.27625448181162754] ***
*** starting iteration: 3; err: [Inf, 1.6518529488513007, 0.38763548729429614, 0.27625448181162754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6518529488513007, 0.38763548729429614, 0.27625448181162754, 0.19822983758105267] ***
*** finished computation of 7 references, err: [Inf, 1.6518529488513007, 0.38763548729429614, 0.27625448181162754, 0.19822983758105267] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 11]]
** centroid: 5, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5304556481233338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304556481233338, 0.23545044629839937] ***
*** starting iteration: 2; err: [Inf, 0.5304556481233338, 0.23545044629839937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304556481233338, 0.23545044629839937, 0.2186154073779549] ***
*** starting iteration: 3; err: [Inf, 0.5304556481233338, 0.23545044629839937, 0.2186154073779549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304556481233338, 0.23545044629839937, 0.2186154073779549, 0.21362491736252942] ***
*** finished computation of 7 references, err: [Inf, 0.5304556481233338, 0.23545044629839937, 0.2186154073779549, 0.21362491736252942] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9011000025978343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9011000025978343, 0.4250498881125849] ***
*** finished computation of 7 references, err: [Inf, 0.9011000025978343, 0.4250498881125849] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 9]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 26]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34449999903315615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34449999903315615, 0.2482840154775821] ***
*** finished computation of 7 references, err: [Inf, 0.34449999903315615, 0.2482840154775821] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 3, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7004000004756289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7004000004756289, 0.3926033646687209] ***
*** finished computation of 7 references, err: [Inf, 0.7004000004756289, 0.3926033646687209] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 16]]
** centroid: 2, normalized-entropy: 0.9992492479956566, [(2, 15), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 2]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 16), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 11.929800079943067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694] ***
*** starting iteration: 2; err: [Inf, 11.929800079943067, 1.2753764117912694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583] ***
*** starting iteration: 3; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795] ***
*** starting iteration: 4; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676] ***
*** starting iteration: 5; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533] ***
*** starting iteration: 6; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604] ***
*** starting iteration: 7; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604, 0.45645836008143875] ***
*** starting iteration: 8; err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604, 0.45645836008143875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604, 0.45645836008143875, 0.4558841710454955] ***
*** finished computation of 3 references, err: [Inf, 11.929800079943067, 1.2753764117912694, 0.6275309203188583, 0.5242230437930795, 0.5034874475778676, 0.4877881958748533, 0.4664281079160604, 0.45645836008143875, 0.4558841710454955] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5764000085674907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431] ***
*** starting iteration: 2; err: [Inf, 1.5764000085674907, 0.6277624908633431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757] ***
*** starting iteration: 3; err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968] ***
*** starting iteration: 4; err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847] ***
*** starting iteration: 5; err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099] ***
*** starting iteration: 6; err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099, 0.5135905687913225] ***
*** starting iteration: 7; err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099, 0.5135905687913225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099, 0.5135905687913225, 0.5135905687913225] ***
*** finished computation of 3 references, err: [Inf, 1.5764000085674907, 0.6277624908633431, 0.5704185158946757, 0.5250718748068968, 0.5173707243774847, 0.5146027233501099, 0.5135905687913225, 0.5135905687913225] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7987000002450722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7987000002450722, 0.6365362622215406] ***
*** starting iteration: 2; err: [Inf, 0.7987000002450722, 0.6365362622215406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7987000002450722, 0.6365362622215406, 0.6289876773467286] ***
*** starting iteration: 3; err: [Inf, 0.7987000002450722, 0.6365362622215406, 0.6289876773467286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7987000002450722, 0.6365362622215406, 0.6289876773467286, 0.6284013893682828] ***
*** finished computation of 3 references, err: [Inf, 0.7987000002450722, 0.6365362622215406, 0.6289876773467286, 0.6284013893682828] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 3]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 3, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.78839996359709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.78839996359709, 1.014729531264139] ***
*** starting iteration: 2; err: [Inf, 10.78839996359709, 1.014729531264139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231] ***
*** starting iteration: 3; err: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231, 0.940991672893739] ***
*** starting iteration: 4; err: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231, 0.940991672893739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231, 0.940991672893739, 0.9407553520101832] ***
*** finished computation of 3 references, err: [Inf, 10.78839996359709, 1.014729531264139, 0.9422111196664231, 0.940991672893739, 0.9407553520101832] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 36]]
** centroid: 3, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7359000172729706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7359000172729706, 0.9061228809925139] ***
*** starting iteration: 2; err: [Inf, 2.7359000172729706, 0.9061228809925139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457] ***
*** starting iteration: 3; err: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781] ***
*** starting iteration: 4; err: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781, 0.5151382703611441] ***
*** starting iteration: 5; err: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781, 0.5151382703611441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781, 0.5151382703611441, 0.5144750559086595] ***
*** finished computation of 3 references, err: [Inf, 2.7359000172729706, 0.9061228809925139, 0.729845519160457, 0.5617817119414781, 0.5151382703611441, 0.5144750559086595] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 29]]
** centroid: 1, normalized-entropy: 0.8721617883411698, [(2, 12), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.952599996750948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975] ***
*** starting iteration: 2; err: [Inf, 10.952599996750948, 2.054530297334975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955] ***
*** starting iteration: 3; err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463] ***
*** starting iteration: 4; err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828] ***
*** starting iteration: 5; err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463] ***
*** starting iteration: 6; err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463, 0.5926802098877113] ***
*** starting iteration: 7; err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463, 0.5926802098877113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463, 0.5926802098877113, 0.5926802098877113] ***
*** finished computation of 3 references, err: [Inf, 10.952599996750948, 2.054530297334975, 0.8365278767164955, 0.6367788758771463, 0.6014739981530828, 0.5959065329681463, 0.5926802098877113, 0.5926802098877113] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 2, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9890999941714554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409] ***
*** starting iteration: 2; err: [Inf, 0.9890999941714554, 0.3067513104281409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633] ***
*** starting iteration: 3; err: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206] ***
*** starting iteration: 4; err: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567] ***
*** starting iteration: 5; err: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567, 0.2702756812539754] ***
*** starting iteration: 6; err: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567, 0.2702756812539754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567, 0.2702756812539754, 0.2698662421432023] ***
*** finished computation of 7 references, err: [Inf, 0.9890999941714554, 0.3067513104281409, 0.2823808975368633, 0.2767696385962206, 0.2721501471434567, 0.2702756812539754, 0.2698662421432023] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 7, normalized-entropy: 1.0, [(2, 3), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.7938000087557593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393] ***
*** starting iteration: 2; err: [Inf, 3.7938000087557593, 0.5672788808688393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803] ***
*** starting iteration: 3; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402] ***
*** starting iteration: 4; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836] ***
*** starting iteration: 5; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287] ***
*** starting iteration: 6; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374] ***
*** starting iteration: 7; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792] ***
*** starting iteration: 8; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792, 0.2393074765102052] ***
*** starting iteration: 9; err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792, 0.2393074765102052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792, 0.2393074765102052, 0.23863014255069093] ***
*** finished computation of 7 references, err: [Inf, 3.7938000087557593, 0.5672788808688393, 0.2834217031605803, 0.2604360117021402, 0.2551961397485836, 0.24666861045911287, 0.24473243253624374, 0.24257720462282792, 0.2393074765102052, 0.23863014255069093] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4921000061931578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4921000061931578, 0.2701624870526567] ***
*** starting iteration: 2; err: [Inf, 0.4921000061931578, 0.2701624870526567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215] ***
*** starting iteration: 3; err: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587] ***
*** starting iteration: 4; err: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587, 0.2370651571838996] ***
*** starting iteration: 5; err: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587, 0.2370651571838996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587, 0.2370651571838996, 0.2370651571838996] ***
*** finished computation of 7 references, err: [Inf, 0.4921000061931578, 0.2701624870526567, 0.24089574253642215, 0.23843381787753587, 0.2370651571838996, 0.2370651571838996] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 9.09660597874334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.09660597874334, 0.8668367767601821] ***
*** finished computation of 3 references, err: [Inf, 9.09660597874334, 0.8668367767601821] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 36]]
** centroid: 3, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8157770863772469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157770863772469, 0.5917565938740497] ***
*** finished computation of 3 references, err: [Inf, 0.8157770863772469, 0.5917565938740497] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 30]]
** centroid: 1, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [27, 1, 0]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(1, 27), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6037406315409798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6037406315409798, 0.4517316472709453] ***
*** finished computation of 3 references, err: [Inf, 0.6037406315409798, 0.4517316472709453] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 3]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 31]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.227711833292604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.227711833292604, 0.7885480673257373] ***
*** starting iteration: 2; err: [Inf, 9.227711833292604, 0.7885480673257373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.227711833292604, 0.7885480673257373, 0.6186199113049615] ***
*** starting iteration: 3; err: [Inf, 9.227711833292604, 0.7885480673257373, 0.6186199113049615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.227711833292604, 0.7885480673257373, 0.6186199113049615, 0.6165407712330626] ***
*** finished computation of 3 references, err: [Inf, 9.227711833292604, 0.7885480673257373, 0.6186199113049615, 0.6165407712330626] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 36]]
** centroid: 1, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.265099812167284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.265099812167284, 0.8066214140916825] ***
*** starting iteration: 2; err: [Inf, 6.265099812167284, 0.8066214140916825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.265099812167284, 0.8066214140916825, 0.5939641859719338] ***
*** starting iteration: 3; err: [Inf, 6.265099812167284, 0.8066214140916825, 0.5939641859719338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.265099812167284, 0.8066214140916825, 0.5939641859719338, 0.589871141263232] ***
*** finished computation of 3 references, err: [Inf, 6.265099812167284, 0.8066214140916825, 0.5939641859719338, 0.589871141263232] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 30]]
** centroid: 1, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.177621104467782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.177621104467782, 0.75007226400792] ***
*** starting iteration: 2; err: [Inf, 2.177621104467782, 0.75007226400792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.177621104467782, 0.75007226400792, 0.42854612944577253] ***
*** starting iteration: 3; err: [Inf, 2.177621104467782, 0.75007226400792, 0.42854612944577253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.177621104467782, 0.75007226400792, 0.42854612944577253, 0.41502478683835337] ***
*** finished computation of 3 references, err: [Inf, 2.177621104467782, 0.75007226400792, 0.42854612944577253, 0.41502478683835337] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 2, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3939303935787815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3939303935787815, 0.21515700097566706] ***
*** finished computation of 7 references, err: [Inf, 0.3939303935787815, 0.21515700097566706] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 5]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 5]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6110830401809746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6110830401809746, 0.20401192343674063] ***
*** finished computation of 7 references, err: [Inf, 0.6110830401809746, 0.20401192343674063] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5308296843252797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5308296843252797, 0.22662121204789162] ***
*** finished computation of 7 references, err: [Inf, 0.5308296843252797, 0.22662121204789162] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 4]]
** centroid: 1, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1013115996807539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1013115996807539, 0.48706782630302037] ***
*** starting iteration: 2; err: [Inf, 1.1013115996807539, 0.48706782630302037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1013115996807539, 0.48706782630302037, 0.34514934278203285] ***
*** starting iteration: 3; err: [Inf, 1.1013115996807539, 0.48706782630302037, 0.34514934278203285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1013115996807539, 0.48706782630302037, 0.34514934278203285, 0.32801479750184875] ***
*** finished computation of 3 references, err: [Inf, 1.1013115996807539, 0.48706782630302037, 0.34514934278203285, 0.32801479750184875] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 33]]
** centroid: 1, normalized-entropy: 0.4941829348497886, [(2, 4), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 3]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.192081197931356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.192081197931356, 0.42900594626411176] ***
*** starting iteration: 2; err: [Inf, 2.192081197931356, 0.42900594626411176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.192081197931356, 0.42900594626411176, 0.36626037989720883] ***
*** starting iteration: 3; err: [Inf, 2.192081197931356, 0.42900594626411176, 0.36626037989720883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.192081197931356, 0.42900594626411176, 0.36626037989720883, 0.3623584332844581] ***
*** finished computation of 3 references, err: [Inf, 2.192081197931356, 0.42900594626411176, 0.36626037989720883, 0.3623584332844581] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 23]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.014986638862193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.014986638862193, 0.4822427610382525] ***
*** starting iteration: 2; err: [Inf, 1.014986638862193, 0.4822427610382525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.014986638862193, 0.4822427610382525, 0.462440895665355] ***
*** starting iteration: 3; err: [Inf, 1.014986638862193, 0.4822427610382525, 0.462440895665355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.014986638862193, 0.4822427610382525, 0.462440895665355, 0.4514253951175748] ***
*** finished computation of 3 references, err: [Inf, 1.014986638862193, 0.4822427610382525, 0.462440895665355, 0.4514253951175748] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2346858261798244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2346858261798244, 0.28014800487453745] ***
*** finished computation of 7 references, err: [Inf, 2.2346858261798244, 0.28014800487453745] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32353028312412535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32353028312412535, 0.2112917407307936] ***
*** finished computation of 7 references, err: [Inf, 0.32353028312412535, 0.2112917407307936] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.75888071681178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75888071681178, 0.43744594408516496] ***
*** finished computation of 7 references, err: [Inf, 0.75888071681178, 0.43744594408516496] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 5]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 28), (3, 5)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 3, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 13), (2, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9826689049661144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9826689049661144, 0.620380094939497] ***
*** starting iteration: 2; err: [Inf, 0.9826689049661144, 0.620380094939497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9826689049661144, 0.620380094939497, 0.6159713494640182] ***
*** starting iteration: 3; err: [Inf, 0.9826689049661144, 0.620380094939497, 0.6159713494640182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9826689049661144, 0.620380094939497, 0.6159713494640182, 0.6156874876592027] ***
*** finished computation of 3 references, err: [Inf, 0.9826689049661144, 0.620380094939497, 0.6159713494640182, 0.6156874876592027] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 36]]
** centroid: 2, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.5378573392993715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.5378573392993715, 1.1286805909698256] ***
*** starting iteration: 2; err: [Inf, 7.5378573392993715, 1.1286805909698256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838] ***
*** starting iteration: 3; err: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232] ***
*** starting iteration: 4; err: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232, 0.5881192485828128] ***
*** starting iteration: 5; err: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232, 0.5881192485828128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232, 0.5881192485828128, 0.5877126761976699] ***
*** finished computation of 3 references, err: [Inf, 7.5378573392993715, 1.1286805909698256, 0.5929033047542838, 0.589871141263232, 0.5881192485828128, 0.5877126761976699] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 30]]
** centroid: 2, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7305557934985996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898] ***
*** starting iteration: 2; err: [Inf, 3.7305557934985996, 1.2289157637953898] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174] ***
*** starting iteration: 3; err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159] ***
*** starting iteration: 4; err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786] ***
*** starting iteration: 5; err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014] ***
*** starting iteration: 6; err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014, 0.41579910945204673] ***
*** starting iteration: 7; err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014, 0.41579910945204673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014, 0.41579910945204673, 0.4148752048758877] ***
*** finished computation of 3 references, err: [Inf, 3.7305557934985996, 1.2289157637953898, 0.600403542445174, 0.4836748070165159, 0.43883534329984786, 0.42147970707738014, 0.41579910945204673, 0.4148752048758877] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 2, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0763999966958442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0763999966958442, 0.4785440930767297] ***
*** starting iteration: 2; err: [Inf, 1.0763999966958442, 0.4785440930767297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0763999966958442, 0.4785440930767297, 0.4579609286652085] ***
*** starting iteration: 3; err: [Inf, 1.0763999966958442, 0.4785440930767297, 0.4579609286652085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0763999966958442, 0.4785440930767297, 0.4579609286652085, 0.4558841710454955] ***
*** finished computation of 3 references, err: [Inf, 1.0763999966958442, 0.4785440930767297, 0.4579609286652085, 0.4558841710454955] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 28]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.261500004512956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261500004512956, 0.6109337258011611] ***
*** starting iteration: 2; err: [Inf, 1.261500004512956, 0.6109337258011611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261500004512956, 0.6109337258011611, 0.5638317256788643] ***
*** starting iteration: 3; err: [Inf, 1.261500004512956, 0.6109337258011611, 0.5638317256788643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261500004512956, 0.6109337258011611, 0.5638317256788643, 0.5250718748068968] ***
*** finished computation of 3 references, err: [Inf, 1.261500004512956, 0.6109337258011611, 0.5638317256788643, 0.5250718748068968] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.752099998315377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.752099998315377, 0.5950825531296511] ***
*** starting iteration: 2; err: [Inf, 1.752099998315377, 0.5950825531296511] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.752099998315377, 0.5950825531296511, 0.5933651328012561] ***
*** starting iteration: 3; err: [Inf, 1.752099998315377, 0.5950825531296511, 0.5933651328012561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.752099998315377, 0.5950825531296511, 0.5933651328012561, 0.5926802098877113] ***
*** finished computation of 3 references, err: [Inf, 1.752099998315377, 0.5950825531296511, 0.5933651328012561, 0.5926802098877113] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34018783107036327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34018783107036327, 0.14619028439636758] ***
*** starting iteration: 2; err: [Inf, 0.34018783107036327, 0.14619028439636758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34018783107036327, 0.14619028439636758, 0.1440409960017868] ***
*** starting iteration: 3; err: [Inf, 0.34018783107036327, 0.14619028439636758, 0.1440409960017868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34018783107036327, 0.14619028439636758, 0.1440409960017868, 0.1440409960017868] ***
*** finished computation of 7 references, err: [Inf, 0.34018783107036327, 0.14619028439636758, 0.1440409960017868, 0.1440409960017868] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 5, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36167916946022666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36167916946022666, 0.18569277498730055] ***
*** starting iteration: 2; err: [Inf, 0.36167916946022666, 0.18569277498730055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347] ***
*** starting iteration: 3; err: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615] ***
*** starting iteration: 4; err: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615, 0.1561365959658289] ***
*** starting iteration: 5; err: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615, 0.1561365959658289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615, 0.1561365959658289, 0.15579412392754388] ***
*** finished computation of 7 references, err: [Inf, 0.36167916946022666, 0.18569277498730055, 0.16874333300350347, 0.15760708645740615, 0.1561365959658289, 0.15579412392754388] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4520766678710471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296] ***
*** starting iteration: 2; err: [Inf, 0.4520766678710471, 0.26431095225117296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224] ***
*** starting iteration: 3; err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006] ***
*** starting iteration: 4; err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528] ***
*** starting iteration: 5; err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704] ***
*** starting iteration: 6; err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704, 0.194337800468023] ***
*** starting iteration: 7; err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704, 0.194337800468023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704, 0.194337800468023, 0.1938856413635883] ***
*** finished computation of 7 references, err: [Inf, 0.4520766678710471, 0.26431095225117296, 0.23827450200199224, 0.22834560821266006, 0.2208515303339528, 0.20131984955162704, 0.194337800468023, 0.1938856413635883] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 10]]
** centroid: 1, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3267395591527034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3267395591527034, 0.17181501934176402] ***
*** finished computation of 7 references, err: [Inf, 0.3267395591527034, 0.17181501934176402] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 22]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 6), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4010497534590942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4010497534590942, 0.1639280147669519] ***
*** finished computation of 7 references, err: [Inf, 0.4010497534590942, 0.1639280147669519] ***
*** center 1: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5529217487704612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529217487704612, 0.19828160124580546] ***
*** finished computation of 7 references, err: [Inf, 0.5529217487704612, 0.19828160124580546] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4584000048129627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4584000048129627, 0.2238151946103052] ***
*** starting iteration: 2; err: [Inf, 0.4584000048129627, 0.2238151946103052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4584000048129627, 0.2238151946103052, 0.21214084299010122] ***
*** starting iteration: 3; err: [Inf, 0.4584000048129627, 0.2238151946103052, 0.21214084299010122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4584000048129627, 0.2238151946103052, 0.21214084299010122, 0.21116182971074068] ***
*** finished computation of 7 references, err: [Inf, 0.4584000048129627, 0.2238151946103052, 0.21214084299010122, 0.21116182971074068] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 8]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5505000037111009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5505000037111009, 0.2752627792770328] ***
*** starting iteration: 2; err: [Inf, 0.5505000037111009, 0.2752627792770328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692] ***
*** starting iteration: 3; err: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573] ***
*** starting iteration: 4; err: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573, 0.23238577881827205] ***
*** starting iteration: 5; err: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573, 0.23238577881827205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573, 0.23238577881827205, 0.2322332454278265] ***
*** finished computation of 7 references, err: [Inf, 0.5505000037111009, 0.2752627792770328, 0.2456301683587692, 0.2375310273626573, 0.23238577881827205, 0.2322332454278265] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6177000030395995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177000030395995, 0.27135162520601974] ***
*** starting iteration: 2; err: [Inf, 0.6177000030395995, 0.27135162520601974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004] ***
*** starting iteration: 3; err: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569] ***
*** starting iteration: 4; err: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569, 0.25634917704653737] ***
*** starting iteration: 5; err: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569, 0.25634917704653737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569, 0.25634917704653737, 0.25587282001034145] ***
*** finished computation of 7 references, err: [Inf, 0.6177000030395995, 0.27135162520601974, 0.26089645281143004, 0.2575695044323569, 0.25634917704653737, 0.25587282001034145] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.355300007514077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.355300007514077, 0.26777135590678924] ***
*** starting iteration: 2; err: [Inf, 0.355300007514077, 0.26777135590678924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.355300007514077, 0.26777135590678924, 0.2554693555949736] ***
*** starting iteration: 3; err: [Inf, 0.355300007514077, 0.26777135590678924, 0.2554693555949736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.355300007514077, 0.26777135590678924, 0.2554693555949736, 0.2270792147848301] ***
*** finished computation of 7 references, err: [Inf, 0.355300007514077, 0.26777135590678924, 0.2554693555949736, 0.2270792147848301] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 9]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8912000205675332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8912000205675332, 0.32229847991278454] ***
*** starting iteration: 2; err: [Inf, 1.8912000205675332, 0.32229847991278454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8912000205675332, 0.32229847991278454, 0.27539334926901643] ***
*** starting iteration: 3; err: [Inf, 1.8912000205675332, 0.32229847991278454, 0.27539334926901643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8912000205675332, 0.32229847991278454, 0.27539334926901643, 0.25703025453260425] ***
*** finished computation of 7 references, err: [Inf, 1.8912000205675332, 0.32229847991278454, 0.27539334926901643, 0.25703025453260425] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 2]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6237000015164403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6237000015164403, 0.33535790576498015] ***
*** starting iteration: 2; err: [Inf, 0.6237000015164403, 0.33535790576498015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6237000015164403, 0.33535790576498015, 0.31540229512522705] ***
*** starting iteration: 3; err: [Inf, 0.6237000015164403, 0.33535790576498015, 0.31540229512522705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6237000015164403, 0.33535790576498015, 0.31540229512522705, 0.30894077064312736] ***
*** finished computation of 7 references, err: [Inf, 0.6237000015164403, 0.33535790576498015, 0.31540229512522705, 0.30894077064312736] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 9]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :rand, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.32804392958003065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32804392958003065, 0.15142736802606613] ***
*** starting iteration: 2; err: [Inf, 0.32804392958003065, 0.15142736802606613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32804392958003065, 0.15142736802606613, 0.14616411333788334] ***
*** starting iteration: 3; err: [Inf, 0.32804392958003065, 0.15142736802606613, 0.14616411333788334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32804392958003065, 0.15142736802606613, 0.14616411333788334, 0.14616411333788334] ***
*** finished computation of 7 references, err: [Inf, 0.32804392958003065, 0.15142736802606613, 0.14616411333788334, 0.14616411333788334] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34386183136798254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34386183136798254, 0.19490669043915937] ***
*** starting iteration: 2; err: [Inf, 0.34386183136798254, 0.19490669043915937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34386183136798254, 0.19490669043915937, 0.18676229249956694] ***
*** starting iteration: 3; err: [Inf, 0.34386183136798254, 0.19490669043915937, 0.18676229249956694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34386183136798254, 0.19490669043915937, 0.18676229249956694, 0.18116848279121786] ***
*** finished computation of 7 references, err: [Inf, 0.34386183136798254, 0.19490669043915937, 0.18676229249956694, 0.18116848279121786] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 5]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4649027270030133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4649027270030133, 0.18335806883176467] ***
*** starting iteration: 2; err: [Inf, 0.4649027270030133, 0.18335806883176467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4649027270030133, 0.18335806883176467, 0.1766752139338979] ***
*** starting iteration: 3; err: [Inf, 0.4649027270030133, 0.18335806883176467, 0.1766752139338979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4649027270030133, 0.18335806883176467, 0.1766752139338979, 0.1766752139338979] ***
*** finished computation of 7 references, err: [Inf, 0.4649027270030133, 0.18335806883176467, 0.1766752139338979, 0.1766752139338979] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5064000093116803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5064000093116803, 0.23049527255376037] ***
*** starting iteration: 2; err: [Inf, 0.5064000093116803, 0.23049527255376037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5064000093116803, 0.23049527255376037, 0.21185833170583876] ***
*** starting iteration: 3; err: [Inf, 0.5064000093116803, 0.23049527255376037, 0.21185833170583876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5064000093116803, 0.23049527255376037, 0.21185833170583876, 0.2111611002246854] ***
*** finished computation of 7 references, err: [Inf, 0.5064000093116803, 0.23049527255376037, 0.21185833170583876, 0.2111611002246854] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5439000043848111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5439000043848111, 0.2762796526972729] ***
*** starting iteration: 2; err: [Inf, 0.5439000043848111, 0.2762796526972729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5439000043848111, 0.2762796526972729, 0.2526508845793214] ***
*** starting iteration: 3; err: [Inf, 0.5439000043848111, 0.2762796526972729, 0.2526508845793214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5439000043848111, 0.2762796526972729, 0.2526508845793214, 0.24464745900572218] ***
*** finished computation of 7 references, err: [Inf, 0.5439000043848111, 0.2762796526972729, 0.2526508845793214, 0.24464745900572218] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 14]]
** centroid: 1, normalized-entropy: 0.9895875212220558, [(2, 11), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5726000054687941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726000054687941, 0.26059913049193834] ***
*** starting iteration: 2; err: [Inf, 0.5726000054687941, 0.26059913049193834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726000054687941, 0.26059913049193834, 0.24938598963587796] ***
*** starting iteration: 3; err: [Inf, 0.5726000054687941, 0.26059913049193834, 0.24938598963587796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726000054687941, 0.26059913049193834, 0.24938598963587796, 0.2479319454648614] ***
*** finished computation of 7 references, err: [Inf, 0.5726000054687941, 0.26059913049193834, 0.24938598963587796, 0.2479319454648614] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 11]]
** centroid: 1, normalized-entropy: 0.9575534837147484, [(2, 18), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.98
finished with 21
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5724437317582332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5724437317582332, 0.3205029441421242] ***
*** starting iteration: 2; err: [Inf, 0.5724437317582332, 0.3205029441421242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5724437317582332, 0.3205029441421242, 0.30801588738554636] ***
*** starting iteration: 3; err: [Inf, 0.5724437317582332, 0.3205029441421242, 0.30801588738554636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5724437317582332, 0.3205029441421242, 0.30801588738554636, 0.3067426379649926] ***
*** finished computation of 3 references, err: [Inf, 0.5724437317582332, 0.3205029441421242, 0.30801588738554636, 0.3067426379649926] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9704359728539227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9704359728539227, 0.6133711546201152] ***
*** starting iteration: 2; err: [Inf, 0.9704359728539227, 0.6133711546201152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9704359728539227, 0.6133711546201152, 0.5918999905900705] ***
*** starting iteration: 3; err: [Inf, 0.9704359728539227, 0.6133711546201152, 0.5918999905900705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9704359728539227, 0.6133711546201152, 0.5918999905900705, 0.590461991540498] ***
*** finished computation of 3 references, err: [Inf, 0.9704359728539227, 0.6133711546201152, 0.5918999905900705, 0.590461991540498] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 1, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 22), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 30]]
** centroid: 2, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.66239978166349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.66239978166349, 0.4488997960507649] ***
*** starting iteration: 2; err: [Inf, 0.66239978166349, 0.4488997960507649] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.66239978166349, 0.4488997960507649, 0.42445889267698805] ***
*** starting iteration: 3; err: [Inf, 0.66239978166349, 0.4488997960507649, 0.42445889267698805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.66239978166349, 0.4488997960507649, 0.42445889267698805, 0.41874727132525835] ***
*** finished computation of 3 references, err: [Inf, 0.66239978166349, 0.4488997960507649, 0.42445889267698805, 0.41874727132525835] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2772000069534863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2772000069534863, 0.9486031846255913] ***
*** starting iteration: 2; err: [Inf, 2.2772000069534863, 0.9486031846255913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2772000069534863, 0.9486031846255913, 0.9431899956102663] ***
*** starting iteration: 3; err: [Inf, 2.2772000069534863, 0.9486031846255913, 0.9431899956102663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2772000069534863, 0.9486031846255913, 0.9431899956102663, 0.9412878035240088] ***
*** finished computation of 3 references, err: [Inf, 2.2772000069534863, 0.9486031846255913, 0.9431899956102663, 0.9412878035240088] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 36]]
** centroid: 2, normalized-entropy: 0.9994110647387552, [(2, 34), (3, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1170000013488235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1170000013488235, 0.8562305719067415] ***
*** starting iteration: 2; err: [Inf, 1.1170000013488235, 0.8562305719067415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1170000013488235, 0.8562305719067415, 0.5771007337321228] ***
*** starting iteration: 3; err: [Inf, 1.1170000013488235, 0.8562305719067415, 0.5771007337321228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1170000013488235, 0.8562305719067415, 0.5771007337321228, 0.5179995691104475] ***
*** finished computation of 3 references, err: [Inf, 1.1170000013488235, 0.8562305719067415, 0.5771007337321228, 0.5179995691104475] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 28]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.463699995465659] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.463699995465659, 1.0333398435074121] ***
*** starting iteration: 2; err: [Inf, 1.463699995465659, 1.0333398435074121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.463699995465659, 1.0333398435074121, 1.0250456662079133] ***
*** starting iteration: 3; err: [Inf, 1.463699995465659, 1.0333398435074121, 1.0250456662079133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.463699995465659, 1.0333398435074121, 1.0250456662079133, 1.0132120373007267] ***
*** finished computation of 3 references, err: [Inf, 1.463699995465659, 1.0333398435074121, 1.0250456662079133, 1.0132120373007267] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 34]]
** centroid: 2, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 5, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 3), (2, 5)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.98
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.25920791435533547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25920791435533547, 0.17809405992749638] ***
*** starting iteration: 2; err: [Inf, 0.25920791435533547, 0.17809405992749638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25920791435533547, 0.17809405992749638, 0.17547548534191268] ***
*** starting iteration: 3; err: [Inf, 0.25920791435533547, 0.17809405992749638, 0.17547548534191268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25920791435533547, 0.17809405992749638, 0.17547548534191268, 0.17490798351779355] ***
*** finished computation of 7 references, err: [Inf, 0.25920791435533547, 0.17809405992749638, 0.17547548534191268, 0.17490798351779355] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 7, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30950725531686907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447] ***
*** starting iteration: 2; err: [Inf, 0.30950725531686907, 0.19002610979807447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656] ***
*** starting iteration: 3; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082] ***
*** starting iteration: 4; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805] ***
*** starting iteration: 5; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874] ***
*** starting iteration: 6; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192] ***
*** starting iteration: 7; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305] ***
*** starting iteration: 8; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305, 0.15677177664236386] ***
*** starting iteration: 9; err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305, 0.15677177664236386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305, 0.15677177664236386, 0.15677177664236386] ***
*** finished computation of 7 references, err: [Inf, 0.30950725531686907, 0.19002610979807447, 0.18323275694533656, 0.17748714703857082, 0.17156848153106805, 0.16349227883116874, 0.160184072667192, 0.15800616911648305, 0.15677177664236386, 0.15677177664236386] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 7]]
** centroid: 5, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39909864149594854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39909864149594854, 0.253025222562691] ***
*** starting iteration: 2; err: [Inf, 0.39909864149594854, 0.253025222562691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438] ***
*** starting iteration: 3; err: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461] ***
*** starting iteration: 4; err: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461, 0.23986040330012762] ***
*** starting iteration: 5; err: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461, 0.23986040330012762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461, 0.23986040330012762, 0.2392321283932939] ***
*** finished computation of 7 references, err: [Inf, 0.39909864149594854, 0.253025222562691, 0.24347651587045438, 0.24100125053154461, 0.23986040330012762, 0.2392321283932939] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 14]]
** centroid: 5, normalized-entropy: 0.9833761901392238, [(2, 19), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.98
finished with 23
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.27112868107303095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27112868107303095, 0.15442388618932484] ***
*** finished computation of 7 references, err: [Inf, 0.27112868107303095, 0.15442388618932484] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46646611075394134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46646611075394134, 0.21870365336566228] ***
*** finished computation of 7 references, err: [Inf, 0.46646611075394134, 0.21870365336566228] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 21]]
** centroid: 4, normalized-entropy: 0.9596868937742168, [(2, 13), (3, 21)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5845291249263418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5845291249263418, 0.26281280706142374] ***
*** finished computation of 7 references, err: [Inf, 0.5845291249263418, 0.26281280706142374] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 23)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.92, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.98
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2), 0.98)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.726666666666666, 3.18, 1.4200000000000002, 0.19333333333333336], [7.625, 3.4999999999999996, 6.475, 2.175], [5.586666666666668, 2.5933333333333333, 3.9200000000000004, 1.18], [5.28, 3.7800000000000002, 1.5133333333333334, 0.2666666666666667], [6.542105263157896, 3.1, 5.484210526315788, 2.136842105263158], [7.1499999999999995, 2.9000000000000004, 5.983333333333333, 1.8333333333333333], [6.127777777777777, 2.872222222222222, 4.583333333333333, 1.4500000000000002], [6.000000000000001, 2.65, 4.950000000000001, 1.8375000000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 1, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.554545454545454, 2.963636363636364, 4.681818181818182, 1.4636363636363638], [6.142857142857143, 2.828571428571429, 5.178571428571429, 1.8214285714285714], [4.76, 3.1550000000000002, 1.4500000000000004, 0.21000000000000005], [5.257142857142857, 2.5, 3.557142857142857, 1.1714285714285713], [7.6, 2.8499999999999996, 6.425000000000001, 2.15], [5.272222222222222, 3.683333333333334, 1.4500000000000002, 0.26666666666666666], [5.7375, 2.7625, 4.268750000000001, 1.29375], [6.8, 3.1875, 5.75, 2.225]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.388888888888889, 2.9277777777777776, 4.594444444444445, 1.4611111111111112], [6.0, 2.7818181818181817, 5.054545454545455, 1.8363636363636362], [4.843478260869566, 3.2086956521739136, 1.4391304347826084, 0.24782608695652178], [7.6571428571428575, 3.128571428571429, 6.528571428571429, 2.1], [5.242857142857143, 2.3714285714285714, 3.4428571428571426, 1.0285714285714287], [5.4444444444444455, 3.8000000000000003, 1.577777777777778, 0.3111111111111111], [5.630000000000001, 2.77, 4.1899999999999995, 1.34], [6.686666666666668, 3.0200000000000005, 5.613333333333332, 2.146666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 2))]
[48, 7, 6, 1, 22, 18, 4, 16, 28, 33, 12, 36, 22, 1, 13, 23, 14, 29, 1, 45, 14, 18, 28, 23, 19, 34, 1, 27, 3, 20, 1, 7, 39, 37, 23, 39, 1, 32, 28, 35, 31, 21, 1, 21, 42, 20, 30, 39, 29, 55, 37, 37, 21, 34, 25, 34, 21, 36, 34, 42, 22, 45, 28, 48, 34, 31, 42, 26, 16, 41, 44, 45, 28, 41, 38, 17, 40, 19, 37, 24, 21, 48, 29, 59, 53, 37, 36, 44, 4, 35, 1, 34, 29, 5, 32, 5, 37, 37, 21, 37, 34, 38, 39, 33, 40, 25, 28, 40, 43, 51, 11, 28, 16, 47, 38, 18, 18, 40, 41, 45, 1, 37, 50, 39, 46, 13, 40, 31, 47, 37, 22, 14, 27, 45, 61, 27, 30, 16, 24, 34, 45, 37, 40, 36, 19, 40, 27, 27, 39, 21, 58, 29, 56, 39, 23, 23, 8, 56, 45, 37, 37, 58, 30, 2, 31, 35, 29, 18, 20, 34, 33, 23, 82, 27, 38, 36, 31, 28, 27, 35, 35, 33, 45, 38, 29, 42, 34, 38, 22, 19, 43, 26, 33, 23, 42, 29, 46, 44, 53, 40, 33, 20, 38, 74, 41, 52, 52, 28, 21, 22, 42, 26, 22, 30, 37, 33, 31, 57, 20, 27, 53, 27, 36, 40, 48, 35, 67, 33, 52, 17, 49, 25, 35, 33, 57, 57, 20, 25, 49, 47, 52, 46, 49, 20, 31, 45, 42, 79, 39, 36, 44, 32, 35, 26, 40, 25, 32, 42, 49, 35, 27, 52, 41, 33, 45, 34, 49, 41, 35, 24, 24, 46, 34, 34, 33, 51, 26, 26, 45, 43, 38, 41, 47, 36, 31, 61, 28, 18, 48, 45, 67, 42, 54, 37, 50, 22, 55, 49, 55, 48]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5889999999999999, speedup = 0.28041498606237436, eval_ratio = 0.041494)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37282986111111105,"recall":0.36545138888888884,"f1":null,"seconds":7.113069295883179e-5,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":337.6875,"distances_sum":1736.9202645503578}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5182291666666666,"recall":0.5182291666666666,"f1":0.5182291666666666,"seconds":0.00010534748435020447,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":378.0078125,"distances_sum":1642.5610460380317}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6267361111111113,"recall":0.6267361111111113,"f1":0.6267361111111113,"seconds":0.00013336725533008575,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":417.0390625,"distances_sum":1587.7216764086381}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7039930555555559,"recall":0.7039930555555559,"f1":0.7039930555555559,"seconds":0.00016942434012889862,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":455.21875,"distances_sum":1564.8365667086678}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7543402777777775,"recall":0.7543402777777775,"f1":0.7543402777777775,"seconds":0.00034543871879577637,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":494.1484375,"distances_sum":1550.11034017179}
KCenters.DeloneInvIndex> reached performance {"precision":0.8081597222222217,"recall":0.8081597222222217,"f1":0.8081597222222217,"seconds":0.0002235621213912964,"exhaustive_search_seconds":0.00039239227771759033,"evaluations":532.2890625,"distances_sum":1536.4388204602783}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7910000000000004, speedup = 1.474094783764761, eval_ratio = 0.052926)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
