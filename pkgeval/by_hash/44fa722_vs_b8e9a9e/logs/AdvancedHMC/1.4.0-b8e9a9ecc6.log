Julia Version 1.4.0
Commit b8e9a9ecc6 (2020-03-21 16:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Parameters ─────────────────── v0.12.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Missings ───────────────────── v0.4.3
  Installed MacroTools ─────────────────── v0.5.5
  Installed OrderedCollections ─────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ProgressMeter ──────────────── v1.2.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed DataStructures ─────────────── v0.17.11
  Installed StatsBase ──────────────────── v0.32.2
  Installed LazyArrays ─────────────────── v0.15.1
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArgCheck ───────────────────── v2.0.0
   Updating `~/.julia/environments/v1.4/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing AdvancedHMC
Status `/tmp/jl_aIIBWq/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.152458581
│   t_steps = 0.007004579
└   t_step / t_steps = 21.76555950043536
Sampling  0%|                               |  ETA: 6:51:50[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.015842683170238667
  log_density:                   -11.18238579507088
  hamiltonian_energy:            14.829551702143386
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.145047514880551
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▍                            |  ETA: 0:00:36[K
  iterations:                    936
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8634671947646445
  log_density:                   -14.932314713036567
  hamiltonian_energy:            19.667574931767163
  hamiltonian_energy_error:      0.1512756055937956
  max_hamiltonian_energy_error:  0.2582243409310436
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7195106539702945
  nom_step_size:                 0.7195106539702945
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9834423411946196, 0.9709 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███                            |  ETA: 0:00:30[K
  iterations:                    1147
  n_steps:                       87
  is_accept:                     true
  acceptance_rate:               0.7825362524304955
  log_density:                   -17.900808518846432
  hamiltonian_energy:            23.127908236936765
  hamiltonian_energy_error:      0.4444018385933681
  max_hamiltonian_energy_error:  0.8301893994145573
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7863379845938554
  nom_step_size:                 0.7863379845938554
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9834423411946196, 0.9709 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:26[K
  iterations:                    1330
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.8674906659607643
  log_density:                   -16.338848082435604
  hamiltonian_energy:            23.44324765702784
  hamiltonian_energy_error:      0.015603007689030335
  max_hamiltonian_energy_error:  0.5867881185706523
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8580243728331791
  nom_step_size:                 0.8580243728331791
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9834423411946196, 0.9709 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:20[K
  iterations:                    1694
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5996014898151119
  log_density:                   -12.348758166225743
  hamiltonian_energy:            15.847899565517093
  hamiltonian_energy_error:      0.3020957921743257
  max_hamiltonian_energy_error:  0.7103683193925665
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8175602536347886
  nom_step_size:                 0.8175602536347886
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9834423411946196, 0.9709 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:18[K
  iterations:                    1959
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9885676549581466
  log_density:                   -13.196500474175368
  hamiltonian_energy:            19.586100729161295
  hamiltonian_energy_error:      -0.00019356565551476024
  max_hamiltonian_energy_error:  0.023737075682234376
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.14766610613464506
  nom_step_size:                 0.14766610613464506
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:15[K
  iterations:                    2251
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8523453423158774
  log_density:                   -10.942139310982203
  hamiltonian_energy:            18.734246726444837
  hamiltonian_energy_error:      -0.4195370959710587
  max_hamiltonian_energy_error:  0.5888424464709843
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:13[K
  iterations:                    2651
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7550651772788479
  log_density:                   -14.268029854048244
  hamiltonian_energy:            22.237020806269264
  hamiltonian_energy_error:      -0.008010015840454798
  max_hamiltonian_energy_error:  0.5693269966208732
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:11[K
  iterations:                    3115
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.8363332909117
  hamiltonian_energy:            17.161423087142893
  hamiltonian_energy_error:      -0.1132923439489062
  max_hamiltonian_energy_error:  -0.1132923439489062
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:10[K
  iterations:                    3426
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9744775582911959
  log_density:                   -13.164389115366891
  hamiltonian_energy:            18.119621442915427
  hamiltonian_energy_error:      -0.1486525305643127
  max_hamiltonian_energy_error:  -0.17619391344901203
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:08[K
  iterations:                    3859
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -17.887049621842298
  hamiltonian_energy:            23.55435781639722
  hamiltonian_energy_error:      -0.08895283186134151
  max_hamiltonian_energy_error:  -0.4986317978808543
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████                    |  ETA: 0:00:07[K
  iterations:                    4267
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8714230606719732
  log_density:                   -15.033452958660297
  hamiltonian_energy:            16.310619802969896
  hamiltonian_energy_error:      0.3537837904535728
  max_hamiltonian_energy_error:  0.42558200853094164
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:06[K
  iterations:                    4742
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8357498213546306
  log_density:                   -12.229466722422544
  hamiltonian_energy:            17.677477687711516
  hamiltonian_energy_error:      -0.044479238569092416
  max_hamiltonian_energy_error:  0.34637705630222015
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:06[K
  iterations:                    5154
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8588137101328309
  log_density:                   -17.012714132189515
  hamiltonian_energy:            20.429178742995227
  hamiltonian_energy_error:      0.34679272694434005
  max_hamiltonian_energy_error:  0.34679272694434005
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5632
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9965647217337563
  log_density:                   -11.224232289402305
  hamiltonian_energy:            13.4145050115779
  hamiltonian_energy_error:      -0.06443328693551997
  max_hamiltonian_energy_error:  -0.06443328693551997
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▋               |  ETA: 0:00:04[K
  iterations:                    6067
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.506659911248114
  hamiltonian_energy:            22.749911319074144
  hamiltonian_energy_error:      -0.25578410044357724
  max_hamiltonian_energy_error:  -0.4935551715583095
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:04[K
  iterations:                    6568
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9749595434243216
  log_density:                   -13.462168477072389
  hamiltonian_energy:            16.103036873447056
  hamiltonian_energy_error:      0.053610717794661866
  max_hamiltonian_energy_error:  -0.10435064591410992
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|██████████████████             |  ETA: 0:00:03[K
  iterations:                    6947
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5500238645766554
  log_density:                   -16.00154654390602
  hamiltonian_energy:            24.91455673025255
  hamiltonian_energy_error:      0.3121508014852701
  max_hamiltonian_energy_error:  1.0981900078301656
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7395
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9384975063787674
  log_density:                   -15.01391813766678
  hamiltonian_energy:            18.398488552508294
  hamiltonian_energy_error:      0.16835877467545757
  max_hamiltonian_energy_error:  0.16835877467545757
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7778
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8532355340761565
  log_density:                   -13.029118981410882
  hamiltonian_energy:            16.60679565474817
  hamiltonian_energy_error:      0.1503075437265693
  max_hamiltonian_energy_error:  0.3506187781161749
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8229
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9535566722143061
  log_density:                   -10.952891148937603
  hamiltonian_energy:            14.535389146354735
  hamiltonian_energy_error:      -0.20360551633518398
  max_hamiltonian_energy_error:  -0.23456454706474972
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8645
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8395434863615904
  log_density:                   -12.94275569457107
  hamiltonian_energy:            15.607915627377103
  hamiltonian_energy_error:      0.21968834601739573
  max_hamiltonian_energy_error:  0.34492393206007677
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9080
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9945192541451712
  log_density:                   -19.337649375738337
  hamiltonian_energy:            23.461383919867018
  hamiltonian_energy_error:      -0.0928810046087456
  max_hamiltonian_energy_error:  -0.8418947003208075
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▏      |  ETA: 0:00:02[K
  iterations:                    9359
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9330406968109565
  log_density:                   -11.15114601333998
  hamiltonian_energy:            15.292438444561363
  hamiltonian_energy_error:      -0.12098532760626846
  max_hamiltonian_energy_error:  0.20761583780997306
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9801
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9244438121428793
  log_density:                   -16.531679482592924
  hamiltonian_energy:            21.471345391817717
  hamiltonian_energy_error:      0.06510562839099876
  max_hamiltonian_energy_error:  -0.39010792984282716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10205
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9979021914166273
  log_density:                   -12.193236893157838
  hamiltonian_energy:            17.165255569031284
  hamiltonian_energy_error:      -0.3560128351170846
  max_hamiltonian_energy_error:  -0.3560128351170846
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10623
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9994348161135764
  log_density:                   -15.772094171016985
  hamiltonian_energy:            22.966997087853752
  hamiltonian_energy_error:      -0.3242665393709494
  max_hamiltonian_energy_error:  -0.4588227550164312
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11047
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7918866267479535
  log_density:                   -14.61737053552556
  hamiltonian_energy:            23.667122015282253
  hamiltonian_energy_error:      -0.12635022014940844
  max_hamiltonian_energy_error:  0.609224528991291
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11555
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6366348097113436
  log_density:                   -18.776356474407145
  hamiltonian_energy:            20.66751805263326
  hamiltonian_energy_error:      0.9179222446800104
  max_hamiltonian_energy_error:  0.9179222446800104
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9895134590738469
  log_density:                   -12.784217228895912
  hamiltonian_energy:            17.382237148354356
  hamiltonian_energy_error:      -0.31075231010029114
  max_hamiltonian_energy_error:  -0.45760583841211044
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7104637227666457
  nom_step_size:                 0.7104637227666457
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9316894327990694, 0.9711 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.960268915 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9316894327990694, 0.9711 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.71), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0924301405649215
└   average_acceptance_rate = 0.8622699479693322
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.425164791 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠘⡄⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⢱⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠁│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠘⡄⠀⠀⠀⡰⢆⠀⡜⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⢱⠀⠀⡰⠁⠀⠑⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠒⠁⠀⠀⠈⠑⠒⠃⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⢴⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⢀⠔⢣⠃⠀⠑⠤⠒⠒⠒⠒⠒⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣘⡄⠀⡠⢃⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠙⠏⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
