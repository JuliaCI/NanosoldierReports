Julia Version 1.4.0
Commit b8e9a9ecc6 (2020-03-21 16:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
   Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_S1BA2T/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.021827053354280875 -0.0918251864608563; 0.021827053354280875 0.0 -0.14370149881882324; 0.0918251864608563 0.14370149881882324 0.0])
dAA = so3([0.0 0.09836829810464742 0.08327929706162497; -0.09836829810464742 0.0 -0.04356314737891904; -0.08327929706162497 0.04356314737891904 0.0])
dAA = so3([0.0 -0.08649965455470214 -0.027308799646202767; 0.08649965455470214 0.0 0.20487250964836035; 0.027308799646202767 -0.20487250964836035 0.0])
dAA = Quaternion(0.9984720902663066, [0.051792971422936804, -0.01756578988175262, -0.007900385828918687])
dAA = SO3([0.99733417469132 0.06708268984882859 -0.028713354304743154; -0.06628914188352139 0.9974144780358967 0.02775083192854545; 0.03050071574783474 -0.025773469440994467 0.9992023992224219])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9485867621815213 0.2524349008350793 0.19094443027844976; -0.22997822271082058 0.964178372076509 -0.13217444495311928; -0.21746993284762445 0.0814658680692511 0.9726613699777396]), [1.4370149881882324, -0.918251864608563, 0.21827053354280873])
xj = SE3(SO3([0.9953914978724788 0.03239676916682595 -0.09025638653710027; -0.05451766694731981 0.9654833553247028 -0.25469533678804357; 0.07888973287953364 0.2584421404076843 0.9628001194992087]), [-2.0487250964836035, -0.27308799646202764, 0.8649965455470213])
Dx = SE3(SO3([0.9395969293090752 -0.24751239466480865 -0.2364217099173614; 0.2051336192616266 0.9601304583299294 -0.18992024967281784; 0.2740033004939593 0.12995044237882164 0.9529087437126208]), [-3.5955440028801453, -0.2051833085279977, -0.12181142190623734])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
