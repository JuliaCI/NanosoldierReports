Julia Version 1.4.0
Commit b8e9a9ecc6 (2020-03-21 16:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ─────── v0.2.0
  Installed Requires ─────── v1.0.1
  Installed MuladdMacro ──── v0.2.2
  Installed ChainRulesCore ─ v0.7.1
  Installed ChainRules ───── v0.4.1
   Updating `~/.julia/environments/v1.4/Project.toml`
  [082447d4] + ChainRules v0.4.1
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [082447d4] + ChainRules v0.4.1
  [d360d2e6] + ChainRulesCore v0.7.1
  [46d2c3a1] + MuladdMacro v0.2.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing ChainRules
Status `/tmp/jl_MmQr7r/Manifest.toml`
  [082447d4] ChainRules v0.4.1
  [d360d2e6] ChainRulesCore v0.7.1
  [cdddcdb0] ChainRulesTestUtils v0.2.1
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [26cc04aa] FiniteDifferences v0.9.4
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Testing ChainRules.jl
  Adjoint: Test Failed at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#305#307"{Array{Float64,2}}([1.779796364218131 -2.5530173459983363 -0.39797577885943963 0.6467548057201075 -0.49102614900732966; 0.3260322313347681 -0.6952454111921035 0.8253183733901699 1.8204631709246661 -0.4293228569390123; -0.06445843283083726 1.0542000084202299 1.0950937516021808 -0.17124726676298443 0.4051794511395825]))
, [1.7797963642181263 1.054200008420226 1.8204631709248014; 0.3260322313347623 -0.3979757788594447 -0.17124726676299326; … ; -2.553017345998369 1.0950937516021682 -0.4293228569390225; -0.6952454111921066 0.6467548057201116 0.405179451139578]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::Type{T} where T, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
 [2] rrule_test(::Type{T} where T, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:161
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:2
adjoint: Test Failed at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#311#313"{Array{Float64,2}}([1.779796364218131 -2.5530173459983363 -0.39797577885943963 0.6467548057201075 -0.49102614900732966; 0.3260322313347681 -0.6952454111921035 0.8253183733901699 1.8204631709246661 -0.4293228569390123; -0.06445843283083726 1.0542000084202299 1.0950937516021808 -0.17124726676298443 0.4051794511395825]))
, [1.7797963642181263 1.054200008420226 1.8204631709248014; 0.3260322313347623 -0.3979757788594447 -0.17124726676299326; … ; -2.553017345998369 1.0950937516021682 -0.4293228569390225; -0.6952454111921066 0.6467548057201116 0.405179451139578]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::typeof(adjoint), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
 [2] rrule_test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:161 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:2
Transpose: Test Failed at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#317#319"{Array{Float64,2}}([1.779796364218131 -2.5530173459983363 -0.39797577885943963 0.6467548057201075 -0.49102614900732966; 0.3260322313347681 -0.6952454111921035 0.8253183733901699 1.8204631709246661 -0.4293228569390123; -0.06445843283083726 1.0542000084202299 1.0950937516021808 -0.17124726676298443 0.4051794511395825]))
, [1.7797963642181263 1.054200008420226 1.8204631709248014; 0.3260322313347623 -0.3979757788594447 -0.17124726676299326; … ; -2.553017345998369 1.0950937516021682 -0.4293228569390225; -0.6952454111921066 0.6467548057201116 0.405179451139578]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::Type{T} where T, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
 [2] rrule_test(::Type{T} where T, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:161
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:2
transpose: Test Failed at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#323#325"{Array{Float64,2}}([1.779796364218131 -2.5530173459983363 -0.39797577885943963 0.6467548057201075 -0.49102614900732966; 0.3260322313347681 -0.6952454111921035 0.8253183733901699 1.8204631709246661 -0.4293228569390123; -0.06445843283083726 1.0542000084202299 1.0950937516021808 -0.17124726676298443 0.4051794511395825]))
, [1.7797963642181263 1.054200008420226 1.8204631709248014; 0.3260322313347623 -0.3979757788594447 -0.17124726676299326; … ; -2.553017345998369 1.0950937516021682 -0.4293228569390225; -0.6952454111921066 0.6467548057201116 0.405179451139578]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::typeof(transpose), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
 [2] rrule_test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:161 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/structured.jl:2
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
svd: Test Failed at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
  Expression: all(isapprox.(X̄_ad, X̄_fd; rtol = 1.0e-6, atol = 1.0e-6))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:22
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:5
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/LinearAlgebra/factorization.jl:4
 erfcinv at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863450540065567:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:243
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
erfcinv at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863450540065567:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:243
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely0 at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012729832142212443:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:192 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:243
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely0 at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012729832142212443:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:192 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:243
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely1 at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely1 at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
gamma at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
gamma at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
digamma at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
digamma at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
trigamma at 6.9285059826471e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
trigamma at 6.9285059826471e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
SpecialFunctions: Error During Test at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:3
  Got exception outside of a @test
  AmosException with id 2: overflow.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:292
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:429
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:586 [inlined]
   [4] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:205 [inlined]
   [5] rrule at /home/pkgeval/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:196 [inlined]
   [6] test_scalar(::typeof(bessely0), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:84
   [7] test_scalar at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:82 [inlined]
   [8] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:29 [inlined]
   [9] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:0
   [11] include(::String) at ./client.jl:439
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:48
   [13] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:47
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:22
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [18] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:19
   [19] include(::String) at ./client.jl:439
   [20] top-level scope at none:6
   [21] eval(::Module, ::Any) at ./boot.jl:331
   [22] exec_options(::Base.JLOptions) at ./client.jl:264
   [23] _start() at ./client.jl:484
  
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = rrule at rule_definition_tools.jl:196 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:196
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = frule at rule_definition_tools.jl:167 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:167
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = macro expansion at ChainRulesTestUtils.jl:94 [inlined]
└ @ Core ~/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:94
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Float64, ::Val{true}) at methods.jl:224
└ @ FiniteDifferences ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:224
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/tYNu1/src/methods.jl:265
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:38
  Got exception outside of a @test
  InexactError: Int32(1.601279147422381e-14)
  Stacktrace:
   [1] Int32 at ./float.jl:689 [inlined]
   [2] convert at ./number.jl:7 [inlined]
   [3] oftype at ./essentials.jl:369 [inlined]
   [4] (::FiniteDifferences.var"#Number_from_vec#28"{Int32})(::Array{Float64,1}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/to_vec.jl:9
   [5] (::FiniteDifferences.var"#38#40"{Array{Float64,1},Tuple{Array{Float64,1},Array{Int32,1}},Tuple{FiniteDifferences.var"#Number_from_vec#28"{Float64},FiniteDifferences.var"#Number_from_vec#28"{Int32}},Array{Int64,1}})(::Int64) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/to_vec.jl:92
   [6] ntuple(::FiniteDifferences.var"#38#40"{Array{Float64,1},Tuple{Array{Float64,1},Array{Int32,1}},Tuple{FiniteDifferences.var"#Number_from_vec#28"{Float64},FiniteDifferences.var"#Number_from_vec#28"{Int32}},Array{Int64,1}}, ::Int64) at ./ntuple.jl:18
   [7] (::FiniteDifferences.var"#Tuple_from_vec#39"{Tuple{Float64,Int32},Tuple{Array{Float64,1},Array{Int32,1}},Tuple{FiniteDifferences.var"#Number_from_vec#28"{Float64},FiniteDifferences.var"#Number_from_vec#28"{Int32}},Array{Int64,1}})(::Array{Float64,1}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/to_vec.jl:91
   [8] jvp(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::ChainRulesTestUtils.var"#8#9"{typeof(logabsgamma)}, ::Tuple{Tuple{Float64},Tuple{Float64}}) at /home/pkgeval/.julia/packages/FiniteDifferences/tYNu1/src/grad.jl:58
   [9] frule_test(::Function, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:137
   [10] frule_test(::Function, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:131
   [11] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:55 [inlined]
   [12] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:40
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:48
   [16] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [17] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:47
   [18] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [19] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:22
   [20] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [21] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:19
   [22] include(::String) at ./client.jl:439
   [23] top-level scope at none:6
   [24] eval(::Module, ::Any) at ./boot.jl:331
   [25] exec_options(::Base.JLOptions) at ./client.jl:264
   [26] _start() at ./client.jl:484
  
Test Summary:                                                             | Pass  Fail  Error  Total
ChainRules                                                                | 3033    13     14   3060
  helper functions                                                        |    2                   2
  rulesets                                                                | 3031    13     14   3058
    Base                                                                  |  978                 978
    Statistics                                                            |    8                   8
    LinearAlgebra                                                         | 1342    13          1355
      linalg                                                              |  278                 278
      Structured Matrices                                                 |   54     4            58
        Diagonal                                                          |    9                   9
        ::Diagonal * ::AbstractVector                                     |    4                   4
        diag                                                              |   12                  12
        Symmetric                                                         |    3                   3
        Adjoint                                                           |    5     1             6
        adjoint                                                           |    5     1             6
        Transpose                                                         |    5     1             6
        transpose                                                         |    5     1             6
        UpperTriangular                                                   |    3                   3
        LowerTriangular                                                   |    3                   3
      Factorizations                                                      |  146     9           155
        svd                                                               |  120     9           129
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          Vt                                                              |    1                   1
          +                                                               |    9                   9
          Helper functions                                                |    3                   3
        cholesky                                                          |   26                  26
      BLAS                                                                |  864                 864
    packages                                                              |  703           14    717
      SpecialFunctions                                                    |  119                 119
      SpecialFunctions                                                    |   84                  84
      SpecialFunctions                                                    |   84                  84
      SpecialFunctions                                                    |  121           12    133
        erf at 0.5, rrule                                                 |    3                   3
        erf at 0.5, frule                                                 |    2                   2
        erfc at 0.5, rrule                                                |    3                   3
        erfc at 0.5, frule                                                |    2                   2
        erfi at 0.5, rrule                                                |    3                   3
        erfi at 0.5, frule                                                |    2                   2
        airyai at 0.5, rrule                                              |    3                   3
        airyai at 0.5, frule                                              |    2                   2
        airyaiprime at 0.5, rrule                                         |    3                   3
        airyaiprime at 0.5, frule                                         |    2                   2
        airybi at 6.9285323625645e-310, rrule                             |    3                   3
        airybi at 6.9285323625645e-310, frule                             |    2                   2
        airybiprime at 6.9285323625645e-310, rrule                        |    3                   3
        airybiprime at 6.9285323625645e-310, frule                        |    2                   2
        besselj0 at 6.9285323625645e-310, rrule                           |    3                   3
        besselj0 at 6.9285323625645e-310, frule                           |    2                   2
        besselj1 at 6.9285323625645e-310, rrule                           |    3                   3
        besselj1 at 6.9285323625645e-310, frule                           |    2                   2
        erfcx at 6.9285323625645e-310, rrule                              |    3                   3
        erfcx at 6.9285323625645e-310, frule                              |    2                   2
        dawson at 6.9285323625645e-310, rrule                             |    3                   3
        dawson at 6.9285323625645e-310, frule                             |    2                   2
        invdigamma at 6.9285323625645e-310, rrule                         |    3                   3
        invdigamma at 6.9285323625645e-310, frule                         |    2                   2
        erfinv at 6.9285323625645e-310, rrule                             |    3                   3
        erfinv at 6.9285323625645e-310, frule                             |    2                   2
        erfcinv at 6.9285059826471e-310, rrule                            |    2            1      3
        erfcinv at 6.9285059826471e-310, frule                            |    1            1      2
        bessely0 at 6.9285059826471e-310, rrule                           |    2            1      3
        bessely0 at 6.9285059826471e-310, frule                           |    1            1      2
        bessely1 at 6.9285059826471e-310, rrule                           |    2            1      3
        bessely1 at 6.9285059826471e-310, frule                           |    1            1      2
        gamma at 6.9285059826471e-310, rrule                              |    2            1      3
        gamma at 6.9285059826471e-310, frule                              |    1            1      2
        digamma at 6.9285059826471e-310, rrule                            |    2            1      3
        digamma at 6.9285059826471e-310, frule                            |    1            1      2
        trigamma at 6.9285059826471e-310, rrule                           |    2            1      3
        trigamma at 6.9285059826471e-310, frule                           |    1            1      2
      SpecialFunctions                                                    |  119                 119
      SpecialFunctions                                                    |   84                  84
      SpecialFunctions                                                    |   77            1     78
        erf at 1.5 + 0.7im, rrule                                         |    3                   3
        erf at 1.5 + 0.7im, frule                                         |    2                   2
        erfc at 1.5 + 0.7im, rrule                                        |    3                   3
        erfc at 1.5 + 0.7im, frule                                        |    2                   2
        erfi at 1.5 + 0.7im, rrule                                        |    3                   3
        erfi at 1.5 + 0.7im, frule                                        |    2                   2
        airyai at 1.5 + 0.7im, rrule                                      |    3                   3
        airyai at 1.5 + 0.7im, frule                                      |    2                   2
        airyaiprime at 6.9285312253657e-310 + 6.92850434015e-310im, rrule |    3                   3
        airyaiprime at 6.9285312253657e-310 + 6.92850434015e-310im, frule |    2                   2
        airybi at 6.9285312253657e-310 + 6.92850434015e-310im, rrule      |    3                   3
        airybi at 6.9285312253657e-310 + 6.92850434015e-310im, frule      |    2                   2
        airybiprime at 6.9285312253657e-310 + 6.92850434015e-310im, rrule |    3                   3
        airybiprime at 6.9285312253657e-310 + 6.92850434015e-310im, frule |    2                   2
        besselj0 at 6.9285312253657e-310 + 6.92850434015e-310im, rrule    |    3                   3
        besselj0 at 6.9285312253657e-310 + 6.92850434015e-310im, frule    |    2                   2
        besselj1 at 6.92850487421994e-310 + 2.0e-323im, rrule             |    3                   3
        besselj1 at 6.92850487421994e-310 + 2.0e-323im, frule             |    2                   2
        erfcx at 6.92850487421994e-310 + 2.0e-323im, rrule                |    3                   3
        erfcx at 6.92850487421994e-310 + 2.0e-323im, frule                |    2                   2
        dawson at 6.92850487421994e-310 + 2.0e-323im, rrule               |    3                   3
        dawson at 6.92850487421994e-310 + 2.0e-323im, frule               |    2                   2
      log gamma and co                                                    |   15            1     16
        lgamma at 1.5, rrule                                              |    3                   3
        lgamma at 1.5, frule                                              |    2                   2
        loggamma at 1.5, rrule                                            |    3                   3
        loggamma at 1.5, frule                                            |    2                   2
ERROR: LoadError: Some tests did not pass: 3033 passed, 13 failed, 14 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:18
ERROR: Package ChainRules errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [11] top-level scope at none:16
