Julia Version 1.4.0
Commit b8e9a9ecc6 (2020-03-21 16:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Requires ───────────────────── v1.0.1
  Installed Compat ─────────────────────── v3.8.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed BinaryProvider ─────────────── v0.5.8
  Installed Bijectors ──────────────────── v0.6.7
  Installed NNlib ──────────────────────── v0.6.6
  Installed DataAPI ────────────────────── v1.1.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed QuadGK ─────────────────────── v2.3.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed OrderedCollections ─────────── v1.1.0
  Installed Distributions ──────────────── v0.23.2
  Installed Reexport ───────────────────── v0.2.0
  Installed MappedArrays ───────────────── v0.2.2
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.11
  Installed StatsBase ──────────────────── v0.33.0
  Installed Arpack ─────────────────────── v0.4.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed OpenBLAS_jll ───────────────── v0.3.9+2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Roots ──────────────────────── v1.0.1
   Updating `~/.julia/environments/v1.4/Project.toml`
  [76274a88] + Bijectors v0.6.7
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [dce04be8] + ArgCheck v2.0.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [76274a88] + Bijectors v0.6.7
  [b99e7846] + BinaryProvider v0.5.8
  [34da2185] + Compat v3.8.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [31c24e10] + Distributions v0.23.2
  [1a297f60] + FillArrays v0.8.7
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.6
  [4536629a] + OpenBLAS_jll v0.3.9+2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.12
  [1fd47b50] + QuadGK v2.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [f2b01f46] + Roots v1.0.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing Bijectors
Status `/tmp/jl_WrYgV4/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [dce04be8] ArgCheck v2.0.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4c555306] ArrayLayouts v0.2.4
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [e2ba6199] ExprTools v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.7
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [7869d1d1] IRTools v0.3.1
  [d8418881] Intervals v1.0.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.12
  [f27b6e38] Polynomials v0.7.0
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v1.0.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.4
  [f269a46b] TimeZones v1.0.1
  [9f7883ad] Tracker v0.2.6
  [02c8fc9c] XML2_jll v2.9.9+2
  [83775a58] Zlib_jll v1.2.11+9
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Interface     | 1298   1298
Test Summary: | Pass  Total
scalar        |  275    275
Test Summary: | Pass  Total
vector        |   82     82
Test Summary: | Pass  Total
matrix        |   22     22
Test Summary:       | Pass  Total
Dirichlet Jacobians |   20     20
Test Summary:       | Pass  Total
InvertibleBatchNorm |    7      7
Test Summary: | Pass  Total
PlanarLayer   |   13     13
Test Summary: | Pass  Total
RadialLayer   |   13     13
Test Summary: | Pass  Total
Flows         |    5      5
Test Summary: | Pass  Total
Permute       |   20     20

==================================================

Testing: Univariate discrete distributions

[ Info: Testing: Bernoulli
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:94 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:95 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:97 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:98 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:100 =#
│         Categorical(p / sum(p))
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:101 =#
│         Categorical(p / sum(p))
└     end
[ Info: Testing: Geometric
[ Info: Testing: NegativeBinomial
[ Info: Testing: Poisson
[ Info: Testing: Skellam
[ Info: Testing: PoissonBinomial
[ Info: Testing: TuringPoissonBinomial

==================================================

Testing: Univariate continuous distributions

[ Info: Testing: Arcsine
[ Info: Testing: Beta
[ Info: Testing: BetaPrime
[ Info: Testing: Biweight
[ Info: Testing: Cauchy
[ Info: Testing: Chi
[ Info: Testing: Chisq
[ Info: Testing: Cosine
[ Info: Testing: Epanechnikov
┌ Info: Testing: s->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:170 =#
│         Erlang(1, s)
└     end
[ Info: Testing: Exponential
[ Info: Testing: FDist
[ Info: Testing: Frechet
[ Info: Testing: Gamma
[ Info: Testing: GeneralizedExtremeValue
[ Info: Testing: GeneralizedPareto
[ Info: Testing: Gumbel
[ Info: Testing: InverseGamma
[ Info: Testing: InverseGaussian
[ Info: Testing: Kolmogorov
[ Info: Testing: Laplace
[ Info: Testing: Levy
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:241 =#
│         LocationScale(a, b, Normal())
└     end
[ Info: Testing: Logistic
[ Info: Testing: LogitNormal
[ Info: Testing: LogNormal
[ Info: Testing: Normal
[ Info: Testing: NormalCanon
[ Info: Testing: NormalInverseGaussian
[ Info: Testing: Pareto
[ Info: Testing: PGeneralizedGaussian
[ Info: Testing: Rayleigh
[ Info: Testing: Semicircle
[ Info: Testing: SymTriangularDist
[ Info: Testing: TDist
[ Info: Testing: TriangularDist
[ Info: Testing: Triweight
┌ Info: Testing: (mu, sigma, l, u)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:316 =#
│         truncated(Normal(mu, sigma), l, u)
└     end
[ Info: Testing: Uniform
[ Info: Testing: TuringUniform
[ Info: Testing: VonMises
[ Info: Testing: Weibull

==================================================

Testing: Multivariate discrete distributions

┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:358 =#
│         Multinomial(2, p / sum(p))
└     end
┌ Info: Testing: (var"##x#348",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#348"), 2)
└     end
┌ Info: Testing: (var"##x#349",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#349"), 2)
└     end
┌ Info: Testing: (var"##x#350", var"##x#351")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:94 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#350", var"##x#351"), 2)
└     end
┌ Info: Testing: (var"##x#352",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:97 =#
│                     Binomial(10, p)
│                 end))(var"##x#352"), 2)
└     end
┌ Info: Testing: (var"##x#353",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:100 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#353"), 2)
└     end
┌ Info: Testing: (var"##x#354",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Geometric(var"##x#354"), 2)
└     end
┌ Info: Testing: (var"##x#355", var"##x#356")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(NegativeBinomial(var"##x#355", var"##x#356"), 2)
└     end
┌ Info: Testing: (var"##x#357",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Poisson(var"##x#357"), 2)
└     end
┌ Info: Testing: (var"##x#358", var"##x#359")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Skellam(var"##x#358", var"##x#359"), 2)
└     end
┌ Info: Testing: (var"##x#360",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(PoissonBinomial(var"##x#360"), 2)
└     end
┌ Info: Testing: (var"##x#361",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(TuringPoissonBinomial(var"##x#361"), 2)
└     end
┌ Info: Testing: (var"##x#362",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#362"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#363",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#363"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#364", var"##x#365")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:94 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#364", var"##x#365"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#366",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:97 =#
│                             Binomial(10, p)
│                         end))(var"##x#366"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#367",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:100 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#367"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#368",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Geometric(var"##x#368"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#369", var"##x#370")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#369", var"##x#370"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#371",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Poisson(var"##x#371"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#372", var"##x#373")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Skellam(var"##x#372", var"##x#373"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#374",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#374"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#375",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#375"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#376",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#376"), 2)
└     end
┌ Info: Testing: (var"##x#377",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Bernoulli(var"##x#377"), 2)
└     end
┌ Info: Testing: (var"##x#378", var"##x#379")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:94 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#378", var"##x#379"), 2)
└     end
┌ Info: Testing: (var"##x#380",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:97 =#
│                     Binomial(10, p)
│                 end))(var"##x#380"), 2)
└     end
┌ Info: Testing: (var"##x#381",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:100 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#381"), 2)
└     end
┌ Info: Testing: (var"##x#382",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Geometric(var"##x#382"), 2)
└     end
┌ Info: Testing: (var"##x#383", var"##x#384")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(NegativeBinomial(var"##x#383", var"##x#384"), 2)
└     end
┌ Info: Testing: (var"##x#385",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Poisson(var"##x#385"), 2)
└     end
┌ Info: Testing: (var"##x#386", var"##x#387")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Skellam(var"##x#386", var"##x#387"), 2)
└     end
┌ Info: Testing: (var"##x#388",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(PoissonBinomial(var"##x#388"), 2)
└     end
┌ Info: Testing: (var"##x#389",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(TuringPoissonBinomial(var"##x#389"), 2)
└     end
┌ Info: Testing: (var"##x#390",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#390"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#391",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#391"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#392", var"##x#393")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:94 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#392", var"##x#393"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#394",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:97 =#
│                             Binomial(10, p)
│                         end))(var"##x#394"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#395",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:100 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#395"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#396",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Geometric(var"##x#396"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#397", var"##x#398")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#397", var"##x#398"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#399",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Poisson(var"##x#399"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#400", var"##x#401")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Skellam(var"##x#400", var"##x#401"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#402",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#402"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#403",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#403"), prod((2,))), 2))
└     end

==================================================

Testing: Multivariate continuous distributions

┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(), 2)
└     end
┌ Info: Testing: (var"##x#404",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(var"##x#404"), 2)
└     end
┌ Info: Testing: (var"##x#405", var"##x#406")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Arcsine(var"##x#405", var"##x#406"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Beta(), 2)
└     end
┌ Info: Testing: (var"##x#407",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Beta(var"##x#407"), 2)
└     end
┌ Info: Testing: (var"##x#408", var"##x#409")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Beta(var"##x#408", var"##x#409"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(), 2)
└     end
┌ Info: Testing: (var"##x#410",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(var"##x#410"), 2)
└     end
┌ Info: Testing: (var"##x#411", var"##x#412")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(BetaPrime(var"##x#411", var"##x#412"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Biweight(), 2)
└     end
┌ Info: Testing: (var"##x#413",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Biweight(var"##x#413"), 2)
└     end
┌ Info: Testing: (var"##x#414", var"##x#415")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Biweight(var"##x#414", var"##x#415"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(), 2)
└     end
┌ Info: Testing: (var"##x#416",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(var"##x#416"), 2)
└     end
┌ Info: Testing: (var"##x#417", var"##x#418")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Cauchy(var"##x#417", var"##x#418"), 2)
└     end
┌ Info: Testing: (var"##x#419",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Chi(var"##x#419"), 2)
└     end
┌ Info: Testing: (var"##x#420",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Chisq(var"##x#420"), 2)
└     end
┌ Info: Testing: (var"##x#421", var"##x#422")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Cosine(var"##x#421", var"##x#422"), 2)
└     end
┌ Info: Testing: (var"##x#423", var"##x#424")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Epanechnikov(var"##x#423", var"##x#424"), 2)
└     end
┌ Info: Testing: (var"##x#425",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(((s->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:170 =#
│                     Erlang(1, s)
│                 end))(var"##x#425"), 2)
└     end
┌ Info: Testing: (var"##x#426",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Exponential(var"##x#426"), 2)
└     end
┌ Info: Testing: (var"##x#427", var"##x#428")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(FDist(var"##x#427", var"##x#428"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Frechet(), 2)
└     end
┌ Info: Testing: (var"##x#429",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Frechet(var"##x#429"), 2)
└     end
┌ Info: Testing: (var"##x#430", var"##x#431")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Frechet(var"##x#430", var"##x#431"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gamma(), 2)
└     end
┌ Info: Testing: (var"##x#432",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gamma(var"##x#432"), 2)
└     end
┌ Info: Testing: (var"##x#433", var"##x#434")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gamma(var"##x#433", var"##x#434"), 2)
└     end
┌ Info: Testing: (var"##x#435", var"##x#436", var"##x#437")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedExtremeValue(var"##x#435", var"##x#436", var"##x#437"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(), 2)
└     end
┌ Info: Testing: (var"##x#438", var"##x#439")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(var"##x#438", var"##x#439"), 2)
└     end
┌ Info: Testing: (var"##x#440", var"##x#441", var"##x#442")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(GeneralizedPareto(var"##x#440", var"##x#441", var"##x#442"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(), 2)
└     end
┌ Info: Testing: (var"##x#443",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(var"##x#443"), 2)
└     end
┌ Info: Testing: (var"##x#444", var"##x#445")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Gumbel(var"##x#444", var"##x#445"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(), 2)
└     end
┌ Info: Testing: (var"##x#446",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(var"##x#446"), 2)
└     end
┌ Info: Testing: (var"##x#447", var"##x#448")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGamma(var"##x#447", var"##x#448"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#449",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(var"##x#449"), 2)
└     end
┌ Info: Testing: (var"##x#450", var"##x#451")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(InverseGaussian(var"##x#450", var"##x#451"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Kolmogorov(), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Laplace(), 2)
└     end
┌ Info: Testing: (var"##x#452",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Laplace(var"##x#452"), 2)
└     end
┌ Info: Testing: (var"##x#453", var"##x#454")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Laplace(var"##x#453", var"##x#454"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Levy(), 2)
└     end
┌ Info: Testing: (var"##x#455",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Levy(var"##x#455"), 2)
└     end
┌ Info: Testing: (var"##x#456", var"##x#457")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Levy(var"##x#456", var"##x#457"), 2)
└     end
┌ Info: Testing: (var"##x#458", var"##x#459")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:241 =#
│                     LocationScale(a, b, Normal())
│                 end))(var"##x#458", var"##x#459"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Logistic(), 2)
└     end
┌ Info: Testing: (var"##x#460",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Logistic(var"##x#460"), 2)
└     end
┌ Info: Testing: (var"##x#461", var"##x#462")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Logistic(var"##x#461", var"##x#462"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(), 2)
└     end
┌ Info: Testing: (var"##x#463",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(var"##x#463"), 2)
└     end
┌ Info: Testing: (var"##x#464", var"##x#465")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogitNormal(var"##x#464", var"##x#465"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(), 2)
└     end
┌ Info: Testing: (var"##x#466",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(var"##x#466"), 2)
└     end
┌ Info: Testing: (var"##x#467", var"##x#468")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(LogNormal(var"##x#467", var"##x#468"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Normal(), 2)
└     end
┌ Info: Testing: (var"##x#469",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Normal(var"##x#469"), 2)
└     end
┌ Info: Testing: (var"##x#470", var"##x#471")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Normal(var"##x#470", var"##x#471"), 2)
└     end
┌ Info: Testing: (var"##x#472", var"##x#473")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(NormalCanon(var"##x#472", var"##x#473"), 2)
└     end
┌ Info: Testing: (var"##x#474", var"##x#475", var"##x#476", var"##x#477")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(NormalInverseGaussian(var"##x#474", var"##x#475", var"##x#476", var"##x#477"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Pareto(), 2)
└     end
┌ Info: Testing: (var"##x#478",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Pareto(var"##x#478"), 2)
└     end
┌ Info: Testing: (var"##x#479", var"##x#480")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Pareto(var"##x#479", var"##x#480"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(PGeneralizedGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#481", var"##x#482", var"##x#483")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(PGeneralizedGaussian(var"##x#481", var"##x#482", var"##x#483"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Rayleigh(), 2)
└     end
┌ Info: Testing: (var"##x#484",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Rayleigh(var"##x#484"), 2)
└     end
┌ Info: Testing: (var"##x#485",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Semicircle(var"##x#485"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(), 2)
└     end
┌ Info: Testing: (var"##x#486",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(var"##x#486"), 2)
└     end
┌ Info: Testing: (var"##x#487", var"##x#488")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(SymTriangularDist(var"##x#487", var"##x#488"), 2)
└     end
┌ Info: Testing: (var"##x#489",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(TDist(var"##x#489"), 2)
└     end
┌ Info: Testing: (var"##x#490", var"##x#491")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Triweight(var"##x#490", var"##x#491"), 2)
└     end
┌ Info: Testing: (var"##x#492", var"##x#493", var"##x#494", var"##x#495")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist((((mu, sigma, l, u)->begin
│                     #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:316 =#
│                     truncated(Normal(mu, sigma), l, u)
│                 end))(var"##x#492", var"##x#493", var"##x#494", var"##x#495"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Uniform(), 2)
└     end
┌ Info: Testing: (var"##x#496", var"##x#497")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Uniform(var"##x#496", var"##x#497"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(TuringUniform(), 2)
└     end
┌ Info: Testing: (var"##x#498", var"##x#499")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(TuringUniform(var"##x#498", var"##x#499"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Weibull(), 2)
└     end
┌ Info: Testing: (var"##x#500",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Weibull(var"##x#500"), 2)
└     end
┌ Info: Testing: (var"##x#501", var"##x#502")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:23 =#
│         filldist(Weibull(var"##x#501", var"##x#502"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#503",)->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(var"##x#503"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#504", var"##x#505")->begin
│         #= /home/pkgeval/.julia/packages/Bijectors/kgZvw/test/ad/distributions.jl:27 =#
│         arraydist(reshape(fill(Arcsine(var"##x#504", var"##x#505"), prod((2,))), 2))
└     end
