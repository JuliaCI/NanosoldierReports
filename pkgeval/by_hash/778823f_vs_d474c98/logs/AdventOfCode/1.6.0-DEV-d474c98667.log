Current time is 2020-10-25T00:17:36.741
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T00:17:42.400
   Resolving package versions...
   Installed IniFile â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed MbedTLS_jll â”€â”€ v2.16.8+0
   Installed ExprTools â”€â”€â”€â”€ v0.1.3
   Installed Parsers â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed AdventOfCode â”€ v1.0.0
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed MbedTLS â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
   Installed Mocking â”€â”€â”€â”€â”€â”€ v0.7.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7ef4cfdd] + AdventOfCode v1.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7ef4cfdd] + AdventOfCode v1.0.0
  [e2ba6199] + ExprTools v0.1.3
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [682c06a0] + JSON v0.21.1
  [739be429] + MbedTLS v1.0.2
  [78c3b35d] + Mocking v0.7.1
  [69de0a69] + Parsers v1.0.11
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mExprTools[39m
[32m  âœ“ [39m[90mMocking[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mHTTP[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39mAdventOfCode
9 dependencies successfully precompiled
Starting tests at 2020-10-25T00:20:10.869
     Testing AdventOfCode
Status `/tmp/jl_4N1KwZ/Project.toml`
  [7ef4cfdd] AdventOfCode v1.0.0
  [cd3eb016] HTTP v0.8.19
  [78c3b35d] Mocking v0.7.1
  [ade2ca70] Dates
  [8dfed614] Test
Status `/tmp/jl_4N1KwZ/Manifest.toml`
  [7ef4cfdd] AdventOfCode v1.0.0
  [e2ba6199] ExprTools v0.1.3
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.1
  [739be429] MbedTLS v1.0.2
  [78c3b35d] Mocking v0.7.1
  [69de0a69] Parsers v1.0.11
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: Advent of Code for year 2020 and day 25 hasn't unlocked yet.
â”” @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:68
works for convenience method: Test Failed at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:94
  Expression: isdir("data/$(year)")
Stacktrace:
  [1] (::var"#10#23")()
    @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:94
  [2] apply(body::var"#10#23", pe::Mocking.PatchEnv)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
  [3] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [4] apply(body::Function, patches::Patch{typeof(HTTP.get)})
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [5] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [6] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [8] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
  [9] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68 [inlined]
 [10] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [11] top-level scope
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
works for convenience method: Test Failed at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:95
  Expression: isfile("data/$(year)/day_$(day).txt")
Stacktrace:
  [1] (::var"#10#23")()
    @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:95
  [2] apply(body::var"#10#23", pe::Mocking.PatchEnv)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
  [3] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [4] apply(body::Function, patches::Patch{typeof(HTTP.get)})
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [5] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [6] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [8] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
  [9] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68 [inlined]
 [10] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [11] top-level scope
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
works for convenience method: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:96
  Test threw exception
  Expression: readlines("data/$(year)/day_$(day).txt") == ["TESTDATA"]
  SystemError: opening file "data/2020/day_25.txt": No such file or directory
  Stacktrace:
    [1] systemerror(p::String, errno::Int32; extrainfo::Nothing)
      @ Base ./error.jl:168
    [2] #systemerror#59
      @ ./error.jl:167 [inlined]
    [3] systemerror
      @ ./error.jl:167 [inlined]
    [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, append::Nothing)
      @ Base ./iostream.jl:293
    [5] open
      @ ./iostream.jl:282 [inlined]
    [6] open(f::Base.var"#330#331"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, args::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Base ./io.jl:328
    [7] open
      @ ./io.jl:328 [inlined]
    [8] #readlines#329
      @ ./io.jl:547 [inlined]
    [9] readlines
      @ ./io.jl:547 [inlined]
   [10] (::var"#10#23")()
      @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:96
   [11] apply(body::var"#10#23", pe::Mocking.PatchEnv)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
   [12] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [13] apply(body::Function, patches::Patch{typeof(HTTP.get)})
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [14] macro expansion
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
works for convenience method: Log Test Failed at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:100
  Expression: AdventOfCode.setup_files(year, day, force = false)
  Log Pattern: (:warn, r"txt already exists.") (:warn, r"jl already exists.")
  Captured Logs: 
    Test.LogRecord(Warn, "Advent of Code for year 2020 and day 25 hasn't unlocked yet.", AdventOfCode, :AdventOfCode, :AdventOfCode_ea0c0182, "/home/pkgeval/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl", 68, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}())
    Test.LogRecord(Warn, "/home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/src/2020/day_25.jl already exists. To overwrite, re-run with `force=true`", AdventOfCode, :AdventOfCode, :AdventOfCode_d56cb0e5, "/home/pkgeval/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl", 90, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}())

Stacktrace:
  [1] record(ts::Test.DefaultTestSet, t::Test.LogTestFailure)
    @ Test /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:89
  [2] (::var"#10#23")()
    @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:100
  [3] apply(body::var"#10#23", pe::Mocking.PatchEnv)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
  [4] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [5] apply(body::Function, patches::Patch{typeof(HTTP.get)})
    @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
  [6] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [7] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
  [8] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88 [inlined]
  [9] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [10] macro expansion
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68 [inlined]
 [11] macro expansion
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [12] top-level scope
    @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
Test Summary:                    | Pass  Fail  Error  Total
All tests                        |   23     3      1     27
  _is_unlocked                   |    3                   3
  _get_cookies                   |    2                   2
  _base_url                      |    1                   1
  _template                      |    1                   1
  _download_data                 |    2                   2
  _setup_data_file               |    4                   4
  setup_files                    |   10     3      1     14
    works for full method        |    7                   7
    works for convenience method |    3     3      1      7
ERROR: LoadError: Some tests did not pass: 23 passed, 3 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:3
ERROR: Package AdventOfCode errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
