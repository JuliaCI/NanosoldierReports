Current time is 2020-10-24T17:30:01.923
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T17:30:05.639
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-24T17:30:33.581
     Testing GAFramework
Status `/tmp/jl_2FhtXZ/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_2FhtXZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723021057561664
curgen: 20 fitness: 0.21723021057561664
curgen: 30 fitness: 0.21723178021408282
curgen: 40 fitness: 0.2172330170553573
curgen: 50 fitness: 0.2172330170553573
CoordinateCreature{Vector{Float64}}([0.2226656829484902], -0.2172330170553573) 0.2226656829484902 -0.2172330170553573
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258021419903301
curgen: 100 fitness: 3.2581534777738552
curgen: 150 fitness: 3.258245672621999
curgen: 200 fitness: 3.258289424938289
curgen: 250 fitness: 3.258329786714724
curgen: 300 fitness: 3.2583341525027603
curgen: 350 fitness: 3.2583892732198545
curgen: 400 fitness: 3.2583981835493674
curgen: 450 fitness: 3.2584340330936636
curgen: 500 fitness: 3.2584340349459078
CoordinateCreature{Vector{Float64}}([-0.2227161202951877, -0.2224638493447089, -0.2224450528011645, -0.22235300741668831, -0.22224071242697255, 0.22307045272123993, -0.22261851824009957, -0.2222400562754421, 0.22282152835867436, 0.22256836224012308, -0.2221584096474734, -0.22200544821062584, -0.2225874323392169, 0.2224176683989765, 0.22325502501042135], -3.2584340349459078) [-0.2227161202951877, -0.2224638493447089, -0.2224450528011645, -0.22235300741668831, -0.22224071242697255, 0.22307045272123993, -0.22261851824009957, -0.2222400562754421, 0.22282152835867436, 0.22256836224012308, -0.2221584096474734, -0.22200544821062584, -0.2225874323392169, 0.2224176683989765, 0.22325502501042135] -3.2584340349459078
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0026169496744330445
curgen: 100 fitness: -0.001982496421021551
curgen: 150 fitness: -0.0005291865203957968
curgen: 200 fitness: -0.0004452318835035385
curgen: 250 fitness: -0.0004452318835035385
curgen: 300 fitness: -0.00043004160636428423
curgen: 350 fitness: -0.0003149575177872066
curgen: 400 fitness: -0.0003149575177872066
curgen: 450 fitness: -0.0003149575177872066
curgen: 500 fitness: -0.0003010922493160706
CoordinateCreature{Vector{Float64}}([0.0002655269045311224, 0.0003779263994407151, 0.0005350070958130482, -5.7719780165592306e-5, 2.9636315598566363e-5, 7.16983770538721e-5, -0.0007347182585042689, 0.00011419431494472206, -0.00013777175462558621, 0.0003735993580984572, -0.0001110318767810984, -0.00011367109391517607, 7.186994928691254e-5, 0.00048541061674602814, -0.00017692189983856046], 0.0003010922493160706) [0.0002655269045311224, 0.0003779263994407151, 0.0005350070958130482, -5.7719780165592306e-5, 2.9636315598566363e-5, 7.16983770538721e-5, -0.0007347182585042689, 0.00011419431494472206, -0.00013777175462558621, 0.0003735993580984572, -0.0001110318767810984, -0.00011367109391517607, 7.186994928691254e-5, 0.00048541061674602814, -0.00017692189983856046] 0.0003010922493160706
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-24T17:31:46.565
