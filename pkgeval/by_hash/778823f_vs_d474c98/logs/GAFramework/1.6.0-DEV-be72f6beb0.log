Current time is 2020-10-25T01:33:06.106
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T01:33:07.411
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-25T01:33:15.964
     Testing GAFramework
Status `/tmp/jl_Juufj0/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Juufj0/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172335781821661
curgen: 20 fitness: 0.2172335781821661
curgen: 30 fitness: 0.2172335781821661
curgen: 40 fitness: 0.2172335781821661
curgen: 50 fitness: 0.2172335781821661
CoordinateCreature{Vector{Float64}}([-0.22258177509090382], -0.2172335781821661) -0.22258177509090382 -0.2172335781821661
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578181388534304
curgen: 100 fitness: 3.2583003608950754
curgen: 150 fitness: 3.258314239062432
curgen: 200 fitness: 3.258315000296437
curgen: 250 fitness: 3.2583773964096916
curgen: 300 fitness: 3.2583814028318656
curgen: 350 fitness: 3.258413598747756
curgen: 400 fitness: 3.258458510651684
curgen: 450 fitness: 3.2584634867644637
curgen: 500 fitness: 3.258481985633599
CoordinateCreature{Vector{Float64}}([-0.222617597160225, -0.22247080906162234, -0.22239363957639605, -0.22274539787925093, 0.22241192242499258, -0.2226450694775655, -0.22240767087216315, 0.22259117549704496, -0.22259422512799543, 0.22247837609877488, -0.22245073949699187, -0.22221943979289227, 0.22241451717935393, 0.2229829714500266, 0.22277722384192283], -3.258481985633599) [-0.222617597160225, -0.22247080906162234, -0.22239363957639605, -0.22274539787925093, 0.22241192242499258, -0.2226450694775655, -0.22240767087216315, 0.22259117549704496, -0.22259422512799543, 0.22247837609877488, -0.22245073949699187, -0.22221943979289227, 0.22241451717935393, 0.2229829714500266, 0.22277722384192283] -3.258481985633599
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002320764138175946
curgen: 100 fitness: -0.0013550689421322204
curgen: 150 fitness: -0.0013424739092897653
curgen: 200 fitness: -0.0009812068479675418
curgen: 250 fitness: -0.0009812068479675418
curgen: 300 fitness: -0.000871720646017593
curgen: 350 fitness: -0.000871720646017593
curgen: 400 fitness: -0.0005598501191457217
curgen: 450 fitness: -0.000557341254250332
curgen: 500 fitness: -0.000530351846322219
CoordinateCreature{Vector{Float64}}([0.0001534967127280694, 7.571922439053569e-5, 0.00011214080552304946, -8.27561046043778e-5, 1.3970503988315792e-7, -0.00011397575766436368, 1.6747715270390233e-5, -0.00012586296139613606, 0.00028877810763874, 0.0014914033339410912, -0.00024114002553507323, 8.06807134630036e-6, 0.0001664452164711215, -0.00044079809367594466, -8.682648015507171e-5], 0.000530351846322219) [0.0001534967127280694, 7.571922439053569e-5, 0.00011214080552304946, -8.27561046043778e-5, 1.3970503988315792e-7, -0.00011397575766436368, 1.6747715270390233e-5, -0.00012586296139613606, 0.00028877810763874, 0.0014914033339410912, -0.00024114002553507323, 8.06807134630036e-6, 0.0001664452164711215, -0.00044079809367594466, -8.682648015507171e-5] 0.000530351846322219
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-25T01:33:41.922
