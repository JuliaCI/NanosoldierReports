Current time is 2020-10-24T18:32:10.408
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T18:32:11.735
   Resolving package versions...
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed BayesianLinearRegression â”€ v0.1.0
   Installed LazyArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.16.16
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed MatrixFactorizations â”€â”€â”€â”€â”€ v0.5.2
   Installed Measurements â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.0
   Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.14
   Installed ArrayLayouts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [5047281b] + BayesianLinearRegression v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4c555306] + ArrayLayouts v0.3.8
  [5047281b] + BayesianLinearRegression v0.1.0
  [49dc2e85] + Calculus v0.5.1
  [1a297f60] + FillArrays v0.8.14
  [5078a376] + LazyArrays v0.16.16
  [1914dd2f] + MacroTools v0.5.6
  [a3b82374] + MatrixFactorizations v0.5.2
  [eff96d63] + Measurements v2.3.0
  [3cdcf5f2] + RecipesBase v1.1.0
  [ae029012] + Requires v1.1.0
  [90137ffa] + StaticArrays v0.12.4
  [2a0f44e3] + Base64
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [d6f4376e] + Markdown
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mRecipesBase[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mCalculus[39m
[91m  âœ— [39m[90mFillArrays[39m
[91m  âœ— [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mMeasurements[39m
[91m  âœ— [39m[90mArrayLayouts[39m
[91m  âœ— [39m[90mMatrixFactorizations[39m
[91m  âœ— [39m[90mLazyArrays[39m
[91m  âœ— [39mBayesianLinearRegression
5 dependencies successfully precompiled, 6 errored
Starting tests at 2020-10-24T18:32:37.573
     Testing BayesianLinearRegression
Status `/tmp/jl_IyuA1Z/Project.toml`
  [5047281b] BayesianLinearRegression v0.1.0
  [5078a376] LazyArrays v0.16.16
  [eff96d63] Measurements v2.3.0
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_IyuA1Z/Manifest.toml`
  [4c555306] ArrayLayouts v0.3.8
  [5047281b] BayesianLinearRegression v0.1.0
  [49dc2e85] Calculus v0.5.1
  [1a297f60] FillArrays v0.8.14
  [5078a376] LazyArrays v0.16.16
  [1914dd2f] MacroTools v0.5.6
  [a3b82374] MatrixFactorizations v0.5.2
  [eff96d63] Measurements v2.3.0
  [3cdcf5f2] RecipesBase v1.1.0
  [ae029012] Requires v1.1.0
  [90137ffa] StaticArrays v0.12.4
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
     Testing Running tests...
ERROR: LoadError: TypeError: in UnionAll, expected Type, got Vararg{var"#s2"<:Integer, N}
Stacktrace:
 [1] UnionAll(v::TypeVar, t::Any)
   @ Core ./boot.jl:254
 [2] top-level scope
   @ ~/.julia/packages/FillArrays/NjFh2/src/FillArrays.jl:34
 [3] include
   @ ./Base.jl:389 [inlined]
 [4] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
   @ Base ./loading.jl:1225
 [5] top-level scope
   @ none:1
 [6] eval
   @ ./boot.jl:369 [inlined]
 [7] eval(x::Expr)
   @ Base.MainInclude ./client.jl:446
 [8] top-level scope
   @ none:1
in expression starting at /home/pkgeval/.julia/packages/FillArrays/NjFh2/src/FillArrays.jl:1
ERROR: LoadError: Failed to precompile FillArrays [1a297f60-69ca-5386-bcde-b61e274b549b] to /home/pkgeval/.julia/compiled/v1.6/FillArrays/2Dg1l_Dmpcs.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
    @ Base ./loading.jl:1360
  [3] compilecache(pkg::Base.PkgId, path::String)
    @ Base ./loading.jl:1313
  [4] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1033
  [5] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:926
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:913
  [7] include
    @ ./Base.jl:389 [inlined]
  [8] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [9] top-level scope
    @ none:1
 [10] eval
    @ ./boot.jl:369 [inlined]
 [11] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [12] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/LazyArrays.jl:1
ERROR: LoadError: Failed to precompile LazyArrays [5078a376-72f3-5289-bfd5-ec5146d43c02] to /home/pkgeval/.julia/compiled/v1.6/LazyArrays/h0pkJ_Dmpcs.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
    @ Base ./loading.jl:1360
  [3] compilecache(pkg::Base.PkgId, path::String)
    @ Base ./loading.jl:1313
  [4] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1033
  [5] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:926
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:913
  [7] include
    @ ./Base.jl:389 [inlined]
  [8] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [9] top-level scope
    @ none:1
 [10] eval
    @ ./boot.jl:369 [inlined]
 [11] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [12] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/BayesianLinearRegression/yCYh9/src/BayesianLinearRegression.jl:1
ERROR: LoadError: Failed to precompile BayesianLinearRegression [5047281b-d44e-44a3-ad3e-58447b69b7ca] to /home/pkgeval/.julia/compiled/v1.6/BayesianLinearRegression/yQSRt_Dmpcs.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
   @ Base ./loading.jl:1360
 [3] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1313
 [4] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1033
 [5] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:926
 [6] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:913
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [8] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/BayesianLinearRegression/yCYh9/test/runtests.jl:1
ERROR: Package BayesianLinearRegression errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
