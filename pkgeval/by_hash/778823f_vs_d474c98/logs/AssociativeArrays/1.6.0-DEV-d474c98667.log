Current time is 2020-10-24T17:05:17.151
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T17:05:18.289
   Resolving package versions...
   Installed AssociativeArrays â”€ v0.0.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [9477f2fd] + AssociativeArrays v0.0.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9477f2fd] + AssociativeArrays v0.0.3
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [8dfed614] + Test
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[91m  âœ— [39mAssociativeArrays
0 dependencies successfully precompiled, 1 errored
Starting tests at 2020-10-24T17:05:21.681
     Testing AssociativeArrays
Status `/tmp/jl_EPFq7Z/Project.toml`
  [dce04be8] ArgCheck v2.1.0
  [9477f2fd] AssociativeArrays v0.0.3
  [c8e1da08] IterTools v1.3.0
  [bac558e1] OrderedCollections v1.3.1
  [03a91e81] SplitApplyCombine v1.1.3
  [bd369af6] Tables v1.1.0
  [28d57a85] Transducers v0.4.53
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_EPFq7Z/Manifest.toml`
  [dce04be8] ArgCheck v2.1.0
  [9477f2fd] AssociativeArrays v0.0.3
  [198e06fe] BangBang v0.3.29
  [34da2185] Compat v3.22.0
  [a33af91c] CompositionsBase v0.1.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [85a47980] Dictionaries v0.3.2
  [313cdc1a] Indexing v1.1.0
  [22cec73e] InitialValues v0.2.10
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [1914dd2f] MacroTools v0.5.6
  [128add7d] MicroCollections v0.1.0
  [bac558e1] OrderedCollections v1.3.1
  [ae029012] Requires v1.1.0
  [efcf1570] Setfield v0.7.0
  [03a91e81] SplitApplyCombine v1.1.3
  [171d559e] SplittablesBase v0.1.10
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [28d57a85] Transducers v0.4.53
  [700de1a5] ZygoteRules v0.2.0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: Package AssociativeArrays does not have Transducers in its dependencies:
â”‚ - If you have AssociativeArrays checked out for development and have
â”‚   added Transducers as a dependency but haven't updated your primary
â”‚   environment's manifest file, try `Pkg.resolve()`.
â”‚ - Otherwise you may need to report an issue with AssociativeArrays
â”” Loading Transducers into AssociativeArrays from project dependency, future warnings for AssociativeArrays are suppressed.
â”Œ Warning: **Quick upgrade guide**: `f::Transducer |> g::Transducer` is deprecated.
â”‚ Instead of
â”‚ 
â”‚     collect(Filter(f) |> Map(g), xs)
â”‚     foldl(+, Filter(f) |> Map(g), xs)
â”‚ 
â”‚ it's now recommended to use `|>` with input collection
â”‚ 
â”‚     xs |> Filter(f) |> Map(g) |> collect
â”‚     foldl(+, xs |> Filter(f) |> Map(g))
â”‚ 
â”‚ If there is no input collection; e.g.,
â”‚ 
â”‚     foldl(right, GroupBy(key, Filter(f) |> Map(g), push!!), xs)
â”‚ 
â”‚ use `opcompose` instead:
â”‚ 
â”‚     foldl(right, GroupBy(key, opcompose(Map(f), Filter(g)), push!!), xs)
â”‚ 
â”‚ For more information, see:
â”‚ https://juliafolds.github.io/Transducers.jl/dev/howto/upgrade-to-ixf/
â”” @ Transducers ~/.julia/packages/Transducers/AgX5g/src/deprecated.jl:5
â”Œ Warning: `f::Transducer |> g::Transducer` is deprecated. Use `xs |> f |> g |> collect` instead of `collect(f |> g, xs)`. For more information, see https://juliafolds.github.io/Transducers.jl/dev/howto/upgrade-to-ixf/
â”‚   caller = NamedAxis(names::Vector{String}) at namedaxis.jl:50
â”” @ AssociativeArrays ~/.julia/packages/AssociativeArrays/0dRHQ/src/namedaxis.jl:50
â”Œ Warning: `f::Transducer |> g::Transducer` is deprecated. Use `xs |> f |> g |> collect` instead of `collect(f |> g, xs)`. For more information, see https://juliafolds.github.io/Transducers.jl/dev/howto/upgrade-to-ixf/
â”‚   caller = NamedAxis(names::Vector{Any}) at namedaxis.jl:50
â”” @ AssociativeArrays ~/.julia/packages/AssociativeArrays/0dRHQ/src/namedaxis.jl:50
     Testing AssociativeArrays tests passed 
Finished at 2020-10-24T17:07:27.307
