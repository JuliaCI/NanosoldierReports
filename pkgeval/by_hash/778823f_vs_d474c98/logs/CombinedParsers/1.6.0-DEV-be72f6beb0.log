Current time is 2020-10-24T19:08:08.172
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T19:08:09.532
   Resolving package versions...
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed InternedStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed Tries â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.4
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed TextParse â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed Quadmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.4
   Installed CombinedParsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.4
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed AbstractTrees â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Installed Nullables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed GenericSVD â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed Intervals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.5.0
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed GenericSchur â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed TranscodingStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed AutoHashEquals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed DoubleFloats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.13
   Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.10
   Installed WeakRefStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5ae71ed2] + CombinedParsers v0.1.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [15f4f7f2] + AutoHashEquals v0.2.0
  [944b1d66] + CodecZlib v0.7.0
  [5ae71ed2] + CombinedParsers v0.1.4
  [34da2185] + Compat v3.22.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [497a8b3b] + DoubleFloats v1.1.13
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [01680d73] + GenericSVD v0.3.0
  [c145ed77] + GenericSchur v0.4.0
  [7d512f48] + InternedStrings v0.7.0
  [d8418881] + Intervals v1.5.0
  [692b3bcd] + JLLWrappers v1.1.3
  [78c3b35d] + Mocking v0.7.1
  [4d1e1d77] + Nullables v1.0.0
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [f27b6e38] + Polynomials v1.1.10
  [be4d8f0f] + Quadmath v0.5.4
  [3cdcf5f2] + RecipesBase v1.1.0
  [ae029012] + Requires v1.1.0
  [276daf66] + SpecialFunctions v0.10.3
  [e0df1984] + TextParse v1.0.1
  [f269a46b] + TimeZones v1.4.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [666c268a] + Tries v0.1.4
  [ea10d353] + WeakRefStrings v0.6.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mAutoHashEquals[39m
[32m  âœ“ [39m[90mInternedStrings[39m
[32m  âœ“ [39m[90mNullables[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mGenericSVD[39m
[32m  âœ“ [39m[90mOffsetArrays[39m
[32m  âœ“ [39m[90mAbstractTrees[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mTries[39m
[32m  âœ“ [39m[90mTranscodingStreams[39m
[32m  âœ“ [39m[90mWeakRefStrings[39m
[32m  âœ“ [39m[90mGenericSchur[39m
[32m  âœ“ [39m[90mQuadmath[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mCodecZlib[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mIntervals[39m
[32m  âœ“ [39m[90mPolynomials[39m
[32m  âœ“ [39m[90mDoubleFloats[39m
[91m  âœ— [39m[90mTextParse[39m
[91m  âœ— [39mCombinedParsers
29 dependencies successfully precompiled, 2 errored (3 already precompiled)
Starting tests at 2020-10-24T19:09:39.539
     Testing CombinedParsers
Status `/tmp/jl_uXrKTX/Project.toml`
  [1520ce14] AbstractTrees v0.3.3
  [15f4f7f2] AutoHashEquals v0.2.0
  [5ae71ed2] CombinedParsers v0.1.4
  [7d512f48] InternedStrings v0.7.0
  [4d1e1d77] Nullables v1.0.0
  [e0df1984] TextParse v1.0.1
  [666c268a] Tries v0.1.4
  [8dfed614] Test
Status `/tmp/jl_uXrKTX/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [15f4f7f2] AutoHashEquals v0.2.0
  [944b1d66] CodecZlib v0.7.0
  [5ae71ed2] CombinedParsers v0.1.4
  [34da2185] Compat v3.22.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [497a8b3b] DoubleFloats v1.1.13
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [01680d73] GenericSVD v0.3.0
  [c145ed77] GenericSchur v0.4.0
  [7d512f48] InternedStrings v0.7.0
  [d8418881] Intervals v1.5.0
  [692b3bcd] JLLWrappers v1.1.3
  [78c3b35d] Mocking v0.7.1
  [4d1e1d77] Nullables v1.0.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [f27b6e38] Polynomials v1.1.10
  [be4d8f0f] Quadmath v0.5.4
  [3cdcf5f2] RecipesBase v1.1.0
  [ae029012] Requires v1.1.0
  [276daf66] SpecialFunctions v0.10.3
  [e0df1984] TextParse v1.0.1
  [f269a46b] TimeZones v1.4.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [666c268a] Tries v0.1.4
  [ea10d353] WeakRefStrings v0.6.2
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
WARNING: could not import Printf.ini_hex into Quadmath
WARNING: could not import Printf.ini_HEX into Quadmath
WARNING: could not import Printf.ini_hex into DoubleFloats
WARNING: could not import Printf.ini_HEX into DoubleFloats
ERROR: LoadError: LoadError: LoadError: Any <: CombinedParsers.CombinedParser. Fix with `push!(x|CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#118#119", CombinedParsers.Sequence{Tuple{String, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, SubString}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#112#114", CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#104#105", CombinedParsers.Sequence{Tuple{CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#102#103", CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}}, Vector{Any}, Tuple{Vector{_A} where _A, CombinedParsers.CombinedParser, Vector{_A} where _A}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{Char, CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#102#103", CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}}, Vector{Any}, Tuple{Vector{_A} where _A, CombinedParsers.CombinedParser, Vector{_A} where _A}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}}, Vector{Any}, Tuple{Char, CombinedParsers.CombinedParser}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}}, Vector{Any}, Tuple{CombinedParsers.CombinedParser, Vector{CombinedParsers.CombinedParser}}}, Vector{Any}, Any}, CombinedParsers.Repeat{CombinedParsers.FlatMap{CombinedParsers.Sequence{Tuple{CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{String, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, Tuple{UInt32, UInt32}}}, Vector{Any}, Tuple{String, Tuple{UInt32, UInt32}}}, Vector{Any}, Tuple{UInt32, UInt32}}, Vector{Any}, Tuple{UInt32, UInt32}}, CombinedParsers.Optional{CombinedParsers.ConstantParser{1, Char, Char}, Union{CombinedParsers.MatchState, CombinedParsers.None}, Union{Missing, Char}}}, Vector{Any}, Tuple{Tuple{UInt32, UInt32}, Union{Missing, Char}}}, Tuple{var"#s54", var"#s53", var"#s52"} where var"#s52" where var"#s53" where var"#s54", CombinedParsers.Regexp.var"#110#111", Vector{CombinedParsers.CombinedParser}}, Vector{Tuple{var"#s54", var"#s53", var"#s52"} where var"#s52" where var"#s53" where var"#s54"}, Vector{Vector{CombinedParsers.CombinedParser}}}}, Vector{Any}, Tuple{Any, Vector{Vector{CombinedParsers.CombinedParser}}}}, Vector{Any}, CombinedParsers.CombinedParser}, String}, Vector{Any}, Tuple{String, SubString, CombinedParsers.CombinedParser, String}}, Vector{Any}, Any}, Vector{Any}, Any},y)`.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] push!(x::CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser}, y_::CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#118#119", CombinedParsers.Sequence{Tuple{String, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, SubString}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#112#114", CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#104#105", CombinedParsers.Sequence{Tuple{CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#102#103", CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}}, Vector{Any}, Tuple{Vector{_A} where _A, CombinedParsers.CombinedParser, Vector{_A} where _A}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{Char, CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#102#103", CombinedParsers.Repeat{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser}, CombinedParsers.Transformation{CombinedParsers.Regexp.var"#42#46", CombinedParsers.Repeat{CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}, Vector{Tuple{Int64, Any}}, Vector{CombinedParsers.CombinedParser{CombinedParsers.MatchState, CombinedParsers.Always}}}, Vector{Tuple{Int64, Any}}, Vector{_A} where _A}}, Vector{Any}, Tuple{Vector{_A} where _A, CombinedParsers.CombinedParser, Vector{_A} where _A}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, CombinedParsers.CombinedParser}}, Vector{Any}, Tuple{Char, CombinedParsers.CombinedParser}}, Vector{Any}, CombinedParsers.CombinedParser}, Vector{Vector{Any}}, Vector{CombinedParsers.CombinedParser}}}, Vector{Any}, Tuple{CombinedParsers.CombinedParser, Vector{CombinedParsers.CombinedParser}}}, Vector{Any}, Any}, CombinedParsers.Repeat{CombinedParsers.FlatMap{CombinedParsers.Sequence{Tuple{CombinedParsers.NamedParser{CombinedParsers.Transformation{CombinedParsers.var"#62#63"{2}, CombinedParsers.Sequence{Tuple{String, CombinedParsers.Either{Vector{Any}, Tuple{Int64, Any}, Tuple{UInt32, UInt32}}}, Vector{Any}, Tuple{String, Tuple{UInt32, UInt32}}}, Vector{Any}, Tuple{UInt32, UInt32}}, Vector{Any}, Tuple{UInt32, UInt32}}, CombinedParsers.Optional{CombinedParsers.ConstantParser{1, Char, Char}, Union{CombinedParsers.MatchState, CombinedParsers.None}, Union{Missing, Char}}}, Vector{Any}, Tuple{Tuple{UInt32, UInt32}, Union{Missing, Char}}}, Tuple{var"#s54", var"#s53", var"#s52"} where var"#s52" where var"#s53" where var"#s54", CombinedParsers.Regexp.var"#110#111", Vector{CombinedParsers.CombinedParser}}, Vector{Tuple{var"#s54", var"#s53", var"#s52"} where var"#s52" where var"#s53" where var"#s54"}, Vector{Vector{CombinedParsers.CombinedParser}}}}, Vector{Any}, Tuple{Any, Vector{Vector{CombinedParsers.CombinedParser}}}}, Vector{Any}, CombinedParsers.CombinedParser}, String}, Vector{Any}, Tuple{String, SubString, CombinedParsers.CombinedParser, String}}, Vector{Any}, Any}, Vector{Any}, Any})
    @ CombinedParsers ~/.julia/packages/CombinedParsers/KRYK6/src/CombinedParsers.jl:2530
  [3] top-level scope
    @ ~/.julia/packages/CombinedParsers/KRYK6/src/re-parser.jl:534
  [4] include(mod::Module, _path::String)
    @ Base ./Base.jl:389
  [5] include(x::String)
    @ CombinedParsers.Regexp ~/.julia/packages/CombinedParsers/KRYK6/src/re.jl:4
  [6] top-level scope
    @ ~/.julia/packages/CombinedParsers/KRYK6/src/re.jl:553
  [7] include(mod::Module, _path::String)
    @ Base ./Base.jl:389
  [8] include(x::String)
    @ CombinedParsers ~/.julia/packages/CombinedParsers/KRYK6/src/CombinedParsers.jl:13
  [9] top-level scope
    @ ~/.julia/packages/CombinedParsers/KRYK6/src/CombinedParsers.jl:2796
 [10] include
    @ ./Base.jl:389 [inlined]
 [11] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
 [12] top-level scope
    @ none:1
 [13] eval
    @ ./boot.jl:369 [inlined]
 [14] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [15] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/CombinedParsers/KRYK6/src/re-parser.jl:534
in expression starting at /home/pkgeval/.julia/packages/CombinedParsers/KRYK6/src/re.jl:1
in expression starting at /home/pkgeval/.julia/packages/CombinedParsers/KRYK6/src/CombinedParsers.jl:6
ERROR: LoadError: Failed to precompile CombinedParsers [5ae71ed2-6f8a-4ed1-b94f-e14e8158f19e] to /home/pkgeval/.julia/compiled/v1.6/CombinedParsers/VKXl5_V8ukL.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
   @ Base ./loading.jl:1360
 [3] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1313
 [4] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1033
 [5] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:926
 [6] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:913
 [7] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [8] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/CombinedParsers/KRYK6/test/runtests.jl:1
ERROR: Package CombinedParsers errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
