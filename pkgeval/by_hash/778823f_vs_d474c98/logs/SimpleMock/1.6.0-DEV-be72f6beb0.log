Current time is 2020-10-25T01:37:05.415
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T01:37:06.623
   Resolving package versions...
   Installed SimpleMock â”€ v1.1.4
   Installed Cassette â”€â”€â”€ v0.3.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [a896ed2c] + SimpleMock v1.1.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7057c7e9] + Cassette v0.3.3
  [a896ed2c] + SimpleMock v1.1.4
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mCassette[39m
[32m  âœ“ [39mSimpleMock
2 dependencies successfully precompiled
Starting tests at 2020-10-25T01:37:10.715
     Testing SimpleMock
Status `/tmp/jl_Ryt0rX/Project.toml`
  [7057c7e9] Cassette v0.3.3
  [a896ed2c] SimpleMock v1.1.4
  [fd094767] Suppressor v0.2.0
  [8dfed614] Test
Status `/tmp/jl_Ryt0rX/Manifest.toml`
  [7057c7e9] Cassette v0.3.3
  [a896ed2c] SimpleMock v1.1.4
  [fd094767] Suppressor v0.2.0
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
     Testing Running tests...
Basics: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:3
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##290), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(identity), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] mock(f::Function, ctx::Symbol, args::Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:4 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:4
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
Non-Mock mocks: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:22
  Test threw exception
  Expression: mock((_id->begin
            identity(2) == 4
        end), identity => (x->begin
                2x
            end))
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##293), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [7] mock(f::Function, ctx::Symbol, args::Pair{typeof(identity), var"#6#8"}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] mock(f::Function, args::Pair{typeof(identity), var"#6#8"})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:22 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:22
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Base.string)(), args=(Expr(:call, :>, Expr(:., :val, :(:id)), 0),), world=0x000000000000107e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1766
jl_method_error at /workspace/srcdir/src/gf.c:1784
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2354 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2369
macro expansion at ./error.jl:223 [inlined]
renumber_ssa at ./compiler/ssair/slot2ssa.jl:66
renumber_ssa! at ./compiler/ssair/slot2ssa.jl:71 [inlined]
renumber_ssa! at ./compiler/ssair/slot2ssa.jl:71
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
construct_ssa! at ./compiler/ssair/slot2ssa.jl:891
slot2reg at ./compiler/ssair/driver.jl:117 [inlined]
run_passes at ./compiler/ssair/driver.jl:124
optimize at ./compiler/optimize.jl:186
_typeinf at ./compiler/typeinfer.jl:235
typeinf at ./compiler/typeinfer.jl:207
typeinf_ext at ./compiler/typeinfer.jl:831
typeinf_ext_toplevel at ./compiler/typeinfer.jl:864
typeinf_ext_toplevel at ./compiler/typeinfer.jl:860
jfptr_typeinf_ext_toplevel_12768.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:316
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2190 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2183 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
jl_f__apply_latest at /workspace/srcdir/src/builtins.c:722
#invokelatest#2 at ./essentials.jl:709
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
invokelatest at ./essentials.jl:708
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
#mock#28 at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:140
mock##kw at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117 [inlined]
#mock#27 at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
mock at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
unknown function (ip: 0x7f0db9cd86f5)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:26 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:26
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_39679.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Specific methods: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:25
  Got exception outside of a @test
  MethodError: no method matching eval_test(::Symbol, ::Symbol, ::LineNumberNode, ::Bool)
  Closest candidates are:
    eval_test(!Matched::Expr, !Matched::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:265
    eval_test(!Matched::Expr, !Matched::Expr, ::LineNumberNode) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:265
  Stacktrace:
    [1] call
      @ ~/.julia/packages/Cassette/158rp/src/context.jl:456 [inlined]
    [2] fallback
      @ ~/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
    [3] overdub(::Cassette.Context{nametype(##297), SimpleMock.Metadata{false}, Nothing, Cassette.var"##PassType#251", Nothing, Nothing}, ::typeof(Test.eval_test), ::Symbol, ::Symbol, ::LineNumberNode, ::Bool)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] overdub
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:27 [inlined]
    [5] overdub(::Cassette.Context{nametype(##297), SimpleMock.Metadata{false}, Nothing, Cassette.var"##PassType#251", Nothing, Nothing}, ::var"#9#11", ::Mock{var"#10#12"})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] invokelatest(::Any, ::Any, ::Vararg{Any}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Base ./essentials.jl:709
    [7] invokelatest(::Any, ::Any, ::Vararg{Any})
      @ Base ./essentials.jl:708
    [8] mock(f::Function, ctx::Symbol, args::Pair{Tuple{typeof(+), DataType, DataType}, Mock{var"#10#12"}}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:140
    [9] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
   [10] mock(f::Function, args::Pair{Tuple{typeof(+), DataType, DataType}, Mock{var"#10#12"}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
   [11] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:26 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:26
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ none:6
   [22] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [23] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [24] _start()
      @ Base ./client.jl:485
Internal error: encountered unexpected error in runtime:
TypeError(func=:<:, context="", expected=Type, got=T<:Function)
jl_type_error_rt at /workspace/srcdir/src/rtutils.c:119
jl_type_error at /workspace/srcdir/src/rtutils.c:127
jl_f_issubtype at /workspace/srcdir/src/builtins.c:443
âŠ‘ at ./compiler/typelattice.jl:184
tmerge at ./compiler/typelimits.jl:289
getfield_tfunc at ./compiler/tfuncs.jl:891
getfield_tfunc at ./compiler/tfuncs.jl:775
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
builtin_tfunction at ./compiler/tfuncs.jl:1533
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_12569.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1386
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1442
_typeinf at ./compiler/typeinfer.jl:212
typeinf at ./compiler/typeinfer.jl:207
typeinf_edge at ./compiler/typeinfer.jl:741
abstract_call_method at ./compiler/abstractinterpretation.jl:466
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:130
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1386
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1442
_typeinf at ./compiler/typeinfer.jl:212
typeinf at ./compiler/typeinfer.jl:207
typeinf_edge at ./compiler/typeinfer.jl:741
abstract_call_method at ./compiler/abstractinterpretation.jl:466
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:130
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:715
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1371
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1442
_typeinf at ./compiler/typeinfer.jl:212
typeinf at ./compiler/typeinfer.jl:207
typeinf_ext at ./compiler/typeinfer.jl:831
typeinf_ext_toplevel at ./compiler/typeinfer.jl:864
typeinf_ext_toplevel at ./compiler/typeinfer.jl:860
jfptr_typeinf_ext_toplevel_12768.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:316
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2190 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2183 [inlined]
jl_invoke at /workspace/srcdir/src/gf.c:2198
mock##kw at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117 [inlined]
#mock#27 at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
mock at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:34 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:34
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_39679.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Multiple mocks: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:33
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##303), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(*), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(*), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(*), Core.VarargMarker}, Tuple{typeof(/), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Vararg{Any}; filters::Vector{var"#s6"} where var"#s6"<:Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] mock(::Function, ::Function, ::Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:34 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:34
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
Varargs: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:42
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##307), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::var"#varargs#16", sig::Tuple{Core.VarargMarker, Core.VarargMarker, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{var"#varargs#16", Core.VarargMarker, Core.VarargMarker, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [7] mock(f::Function, ctx::Symbol, args::Tuple{var"#varargs#16", Core.VarargMarker, Core.VarargMarker, Core.VarargMarker}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] mock(f::Function, args::Tuple{var"#varargs#16", Core.VarargMarker, Core.VarargMarker, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:46 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:43
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Base.string)(), args=(Expr(:call, :>, Expr(:., :val, :(:id)), 0),), world=0x000000000000107e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1766
jl_method_error at /workspace/srcdir/src/gf.c:1784
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2354 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2369
macro expansion at ./error.jl:223 [inlined]
renumber_ssa at ./compiler/ssair/slot2ssa.jl:66
renumber_ssa! at ./compiler/ssair/slot2ssa.jl:71 [inlined]
renumber_ssa! at ./compiler/ssair/slot2ssa.jl:71
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
construct_ssa! at ./compiler/ssair/slot2ssa.jl:891
slot2reg at ./compiler/ssair/driver.jl:117 [inlined]
run_passes at ./compiler/ssair/driver.jl:124
optimize at ./compiler/optimize.jl:186
_typeinf at ./compiler/typeinfer.jl:235
typeinf at ./compiler/typeinfer.jl:207
typeinf_ext at ./compiler/typeinfer.jl:831
typeinf_ext_toplevel at ./compiler/typeinfer.jl:864
typeinf_ext_toplevel at ./compiler/typeinfer.jl:860
jfptr_typeinf_ext_toplevel_12768.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:316
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2190 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2183 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
jl_f__apply_latest at /workspace/srcdir/src/builtins.c:722
#invokelatest#2 at ./essentials.jl:709
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
invokelatest at ./essentials.jl:708
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:672
#mock#28 at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:140
mock##kw at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117 [inlined]
#mock#27 at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
mock at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
unknown function (ip: 0x7f0db9d03ac5)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:61 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:56
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
eval_body at /workspace/srcdir/src/interpreter.c:489
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
macro expansion at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369 [inlined]
include_string at ./loading.jl:1106
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
_include at ./loading.jl:1160
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:879
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:827
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:931
eval at ./boot.jl:369
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_39679.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2191 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2373
jl_apply at /workspace/srcdir/src/julia.h:1695 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Parametric types: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:55
  Got exception outside of a @test
  TypeError: non-boolean (UInt64) used in boolean context
  Stacktrace:
    [1] overdub
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:62 [inlined]
    [2] overdub(::Cassette.Context{nametype(##311), SimpleMock.Metadata{false}, Nothing, Cassette.var"##PassType#251", Nothing, Nothing}, ::var"#18#22", ::Mock{SimpleMock.var"#15#17"{SimpleMock.var"#15#16#18"}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [3] invokelatest(::Any, ::Any, ::Vararg{Any}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Base ./essentials.jl:709
    [4] invokelatest(::Any, ::Any, ::Vararg{Any})
      @ Base ./essentials.jl:708
    [5] mock(f::Function, ctx::Symbol, args::Tuple{var"#params#21", DataType}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:140
    [6] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [7] mock(f::Function, args::Tuple{var"#params#21", DataType})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
    [8] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:61 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [10] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:56
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] top-level scope
      @ none:6
   [19] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [20] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [21] _start()
      @ Base ./client.jl:485
mock does not overwrite methods: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:82
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##315), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(identity), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] mock(f::Function, ctx::Symbol, args::Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:90 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:84
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
Reusing Context: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:99
  Test threw exception
  Expression: mock((_f->begin
                f(" hi ")
            end), ctx, strip => identity) == " HI "
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##318), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(strip), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(strip), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [7] mock(f::Function, ctx::Symbol, args::Pair{typeof(strip), typeof(identity)}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] mock(f::Function, ctx::Symbol, args::Pair{typeof(strip), typeof(identity)})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:99 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:96
Reusing Context: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:100
  Test threw exception
  Expression: mock((_f->begin
                f(" hi ")
            end), ctx, uppercase => identity) == "hi"
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##318), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(uppercase), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(uppercase), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [7] mock(f::Function, ctx::Symbol, args::Pair{typeof(uppercase), typeof(identity)}; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] mock(f::Function, ctx::Symbol, args::Pair{typeof(uppercase), typeof(identity)})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:100 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:96
Any context name is valid: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:105
  Test threw exception
  Expression: mock((_id->begin
            true
        end), :mock, identity)
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##322), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(identity), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] mock(f::Function, ctx::Symbol, args::Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:117
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:105 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:105
Maximum/minimum depth: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:109
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##290), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(identity), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{SimpleMock.var"#3#4"{Int64}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:114 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:110 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:109
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
Exclude/include: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:129
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##290), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(identity), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(identity), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(identity), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{SimpleMock.var"#7#8"{Tuple{Module, var"#c#45"}}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:137 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:130 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:109
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
Keyword arguments are passed to mocked functions: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:158
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##330), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::var"#foo#68"{var"#foo#49#69"}, sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{var"#foo#68"{var"#foo#49#69"}, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{var"#foo#68"{var"#foo#49#69"}, Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{Function})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] mock(f::Function, args::Function)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:159 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:159 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:154
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ none:6
   [23] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [24] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [25] _start()
      @ Base ./client.jl:485
Keyword arguments are discarded when recursing: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:165
  Got exception outside of a @test
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##334), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::var"#bar#70"{var"#bar#50#71"}, sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{var"#bar#70"{var"#bar#50#71"}, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{var"#bar#70"{var"#bar#50#71"}, Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{SimpleMock.var"#9#10"{Tuple{}}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:168 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:166 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:154
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:14 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:10
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
Metadata records original functions and not keyword wrappers: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:202
  Test threw exception
  Expression: mock((_g->begin
                kw_f(; x = 1)
            end), kw_g; filters = [test(kw_f)]) != 2
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##338), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::typeof(kw_g), sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{typeof(kw_g), Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{typeof(kw_g), Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{var"#64#89"{Bool, typeof(kw_f)}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:202 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:182 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:154
Metadata records original functions and not keyword wrappers: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:204
  Test threw exception
  Expression: mock((_i->begin
                kw_h(; x = 1)
            end), kw_i; filters = [test(kw_h)]) != 2
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##342), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::var"#97#100", sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{var"#97#100", Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{var"#97#100", Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{var"#64#89"{Bool, var"#95#99"}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:204 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:182 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:154
Metadata records original functions and not keyword wrappers: Error During Test at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:206
  Test threw exception
  Expression: mock((_k->begin
                kw_j(; x = 1)
            end), kw_k; filters = [test(kw_j; broken = true)]) != 2
  type VarargMarker has no field name
  Stacktrace:
    [1] getproperty(x::Core.VarargMarker, f::Symbol)
      @ Base ./Base.jl:33
    [2] (::SimpleMock.var"#35#37"{Vector{Any}, Vector{Expr}})(T::Core.VarargMarker)
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:187
    [3] foreach
      @ ./abstractarray.jl:2085 [inlined]
    [4] make_overdub(#unused#::Type{Cassette.Context{nametype(##346), M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag} where M}, f::var"#kw_k#85"{var"#kw_k#62#86"}, sig::Tuple{Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:183
    [5] (::SimpleMock.var"#29#30"{UnionAll, Bool})(k::Tuple{var"#kw_k#85"{var"#kw_k#62#86"}, Core.VarargMarker})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:131
    [6] foreach(f::SimpleMock.var"#29#30"{UnionAll, Bool}, itr::Tuple{Tuple{var"#kw_k#85"{var"#kw_k#62#86"}, Core.VarargMarker}})
      @ Base ./abstractarray.jl:2085
    [7] mock(f::Function, ctx::Symbol, args::Function; filters::Vector{var"#64#89"{Bool, var"#kw_j#83"{var"#kw_j#61#84"}}})
      @ SimpleMock ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:127
    [8] #mock#27
      @ ~/.julia/packages/SimpleMock/5yM1z/src/mock_fun.jl:113 [inlined]
    [9] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:206 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:182 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/SimpleMock/5yM1z/test/mock_fun.jl:154
Test Summary:                                                      | Pass  Error  Total
SimpleMock.jl                                                      |   67     17     84
  Mock type                                                        |   67            67
  mock function                                                    |          17     17
    Basics                                                         |           1      1
    Non-Mock mocks                                                 |           1      1
    Specific methods                                               |           1      1
    Multiple mocks                                                 |           1      1
    Varargs                                                        |           1      1
    Parametric types                                               |           1      1
    mock does not overwrite methods                                |           1      1
    Reusing Context                                                |           2      2
    Any context name is valid                                      |           1      1
    Filters                                                        |           2      2
      Maximum/minimum depth                                        |           1      1
      Exclude/include                                              |           1      1
    Keyword arguments                                              |           5      5
      Keyword arguments are passed to mocked functions             |           1      1
      Keyword arguments are discarded when recursing               |           1      1
      Metadata records original functions and not keyword wrappers |           3      3
ERROR: LoadError: Some tests did not pass: 67 passed, 0 failed, 17 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SimpleMock/5yM1z/test/runtests.jl:9
ERROR: Package SimpleMock errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
