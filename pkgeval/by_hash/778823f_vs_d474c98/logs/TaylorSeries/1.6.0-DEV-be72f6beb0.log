Current time is 2020-10-24T18:59:15.022
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T18:59:16.511
   Resolving package versions...
   Installed Requires â”€â”€â”€â”€â”€ v1.1.0
   Installed TaylorSeries â”€ v0.10.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [6aa5eb33] + TaylorSeries v0.10.8
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ae029012] + Requires v1.1.0
  [6aa5eb33] + TaylorSeries v0.10.8
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [cf7118a7] + UUIDs
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39mTaylorSeries
2 dependencies successfully precompiled
Starting tests at 2020-10-24T18:59:22.853
     Testing TaylorSeries
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25hStatus `/tmp/jl_O53XeX/Project.toml`
  [d1acc4aa] IntervalArithmetic v0.17.5
  [ae029012] Requires v1.1.0
  [6aa5eb33] TaylorSeries v0.10.8
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [d6f4376e] Markdown
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_O53XeX/Manifest.toml`
  [96374032] CRlibm v0.8.0
  [90fa49ef] ErrorfreeArithmetic v0.5.2
  [fa42c844] FastRounding v0.2.0
  [d1acc4aa] IntervalArithmetic v0.17.5
  [3cdcf5f2] RecipesBase v1.1.0
  [ae029012] Requires v1.1.0
  [5eaf0fd0] RoundingEmulator v0.2.1
  [3cc68bcd] SetRounding v0.2.0
  [90137ffa] StaticArrays v0.12.4
  [6aa5eb33] TaylorSeries v0.10.8
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
     Testing Running tests...
Test Summary:                | Pass  Total
Tests for Taylor1 expansions |  336    336
Test Summary:                              | Pass  Total
Test `inv` for `Matrix{Taylor1{Float64}}`` |   90     90
Test Summary:                     | Pass  Total
Matrix multiplication for Taylor1 |   16     16
â”Œ Info: Parameters for `TaylorN` and `HomogeneousPolynomial`:
â”‚ Maximum order       = 6
â”‚ Number of variables = 2
â”‚ Variable names      = ["x", "y"]
â”” Variable symbols    = [:x, :y]
 1  -->  xÂ²
 2  -->  x y
 3  -->  yÂ²
Test Summary:                               | Pass  Total
Tests for HomogeneousPolynomial and TaylorN |  457    457
Test Summary:                   | Pass  Total
Integrate for several variables |    6      6
Test Summary:                              | Pass  Total
Tests with mixtures of Taylor1 and TaylorN |  168    168
Test Summary:              | Pass  Total
Tests with nested Taylor1s |   10     10
Test Summary:      | Pass  Total
Mutating functions |   54     54
ERROR: LoadError: LoadError: TypeError: in UnionAll, expected Type, got Vararg{var"#s26"<:Union{StaticArrays.Dynamic, Int64}, N}
Stacktrace:
  [1] UnionAll(v::TypeVar, t::Any)
    @ Core ./boot.jl:254
  [2] top-level scope
    @ ~/.julia/packages/StaticArrays/l7lu2/src/traits.jl:156
  [3] include(mod::Module, _path::String)
    @ Base ./Base.jl:389
  [4] include(x::String)
    @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/StaticArrays.jl:1
  [5] top-level scope
    @ ~/.julia/packages/StaticArrays/l7lu2/src/StaticArrays.jl:104
  [6] include
    @ ./Base.jl:389 [inlined]
  [7] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [8] top-level scope
    @ none:1
  [9] eval
    @ ./boot.jl:369 [inlined]
 [10] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [11] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/StaticArrays/l7lu2/src/traits.jl:156
in expression starting at /home/pkgeval/.julia/packages/StaticArrays/l7lu2/src/StaticArrays.jl:1
ERROR: LoadError: Failed to precompile StaticArrays [90137ffa-7385-5640-81b9-e52037218182] to /home/pkgeval/.julia/compiled/v1.6/StaticArrays/yY9vm_FQzSp.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
    @ Base ./loading.jl:1360
  [3] compilecache(pkg::Base.PkgId, path::String)
    @ Base ./loading.jl:1313
  [4] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1033
  [5] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:926
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:913
  [7] include
    @ ./Base.jl:389 [inlined]
  [8] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1225
  [9] top-level scope
    @ none:1
 [10] eval
    @ ./boot.jl:369 [inlined]
 [11] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [12] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/IntervalArithmetic/sRFlx/src/IntervalArithmetic.jl:5
ERROR: LoadError: LoadError: Failed to precompile IntervalArithmetic [d1acc4aa-44c8-5952-acd4-ba5d80a2a253] to /home/pkgeval/.julia/compiled/v1.6/IntervalArithmetic/Gjmwo_FQzSp.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::Base.PipeEndpoint, internal_stdout::Base.PipeEndpoint)
    @ Base ./loading.jl:1360
  [3] compilecache(pkg::Base.PkgId, path::String)
    @ Base ./loading.jl:1313
  [4] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1033
  [5] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:926
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:913
  [7] include(fname::String)
    @ Base.MainInclude ./client.jl:444
  [8] top-level scope
    @ ~/.julia/packages/TaylorSeries/tzPbS/test/runtests.jl:19
  [9] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [10] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/TaylorSeries/tzPbS/test/intervals.jl:4
in expression starting at /home/pkgeval/.julia/packages/TaylorSeries/tzPbS/test/runtests.jl:16
ERROR: Package TaylorSeries errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
