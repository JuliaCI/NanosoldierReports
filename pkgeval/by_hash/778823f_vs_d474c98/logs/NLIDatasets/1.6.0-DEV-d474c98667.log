Current time is 2020-10-24T21:54:58.572
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T21:55:03.877
   Resolving package versions...
   Installed IniFile â”€â”€â”€â”€â”€ v0.5.0
   Installed MbedTLS_jll â”€ v2.16.8+0
   Installed NLIDatasets â”€ v0.2.0
   Installed Reexport â”€â”€â”€â”€ v0.2.0
   Installed DataDeps â”€â”€â”€â”€ v0.7.2
   Installed MbedTLS â”€â”€â”€â”€â”€ v1.0.2
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [400165cc] + NLIDatasets v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [124859b0] + DataDeps v0.7.2
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v1.0.2
  [400165cc] + NLIDatasets v0.2.0
  [189a3867] + Reexport v0.2.0
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mHTTP[39m
[32m  âœ“ [39m[90mDataDeps[39m
[32m  âœ“ [39mNLIDatasets
7 dependencies successfully precompiled
Starting tests at 2020-10-24T21:56:49.395
     Testing NLIDatasets
Status `/tmp/jl_pgH5CW/Project.toml`
  [124859b0] DataDeps v0.7.2
  [cd3eb016] HTTP v0.8.19
  [400165cc] NLIDatasets v0.2.0
  [8dfed614] Test
Status `/tmp/jl_pgH5CW/Manifest.toml`
  [124859b0] DataDeps v0.7.2
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [739be429] MbedTLS v1.0.2
  [400165cc] NLIDatasets v0.2.0
  [189a3867] Reexport v0.2.0
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â”Œ Warning: The call to compilecache failed to create a usable precompiled cache file for HTTP [cd3eb016-35fb-5094-929b-558a96fad6f3]
â”‚   exception = Required dependency MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] failed to load from a cache file.
â”” @ Base loading.jl:1045
â”Œ Warning: Module MbedTLS_jll with build ID 429340937304835 is missing from the cache.
â”‚ This may mean MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1020
â”Œ Warning: Module MbedTLS_jll with build ID 429340937304835 is missing from the cache.
â”‚ This may mean MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1020
â”Œ Warning: Module MbedTLS_jll with build ID 429340937304835 is missing from the cache.
â”‚ This may mean MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1020
â”Œ Warning: Module MbedTLS_jll with build ID 429340937304835 is missing from the cache.
â”‚ This may mean MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1020
â”Œ Warning: Module MbedTLS_jll with build ID 429340937304835 is missing from the cache.
â”‚ This may mean MbedTLS_jll [c8ffd9c3-330d-5841-b78e-0817d7145fa1] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1020
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:7
  Test threw exception
  Expression: isfile(SNLI.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] train_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:7 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:8
  Test threw exception
  Expression: isfile(SNLI.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] train_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:8 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:9
  Test threw exception
  Expression: isfile(SNLI.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] dev_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:32
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:9 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:10
  Test threw exception
  Expression: isfile(SNLI.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] dev_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:33
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:10 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:11
  Test threw exception
  Expression: isfile(SNLI.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] test_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:34
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:11 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:12
  Test threw exception
  Expression: isfile(SNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] test_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:35
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:12 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:17
  Test threw exception
  Expression: isfile(MultiNLI.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] train_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:26
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:17 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:18
  Test threw exception
  Expression: isfile(MultiNLI.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] train_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:27
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:18 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:19
  Test threw exception
  Expression: isfile(MultiNLI.dev_matched_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_matched_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:19 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:20
  Test threw exception
  Expression: isfile(MultiNLI.dev_matched_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_matched_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:29
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:20 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:21
  Test threw exception
  Expression: isfile(MultiNLI.dev_mismatched_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_mismatched_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:21 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:22
  Test threw exception
  Expression: isfile(MultiNLI.dev_mismatched_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_mismatched_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:22 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:27
  Test threw exception
  Expression: isfile(XNLI.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] dev_tsv()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:22
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:27 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:28
  Test threw exception
  Expression: isfile(XNLI.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] dev_jsonl()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:23
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:28 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:29
  Test threw exception
  Expression: isfile(XNLI.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] test_tsv()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:24
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:29 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:30
  Test threw exception
  Expression: isfile(XNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] test_jsonl()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:25
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:30 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:35
  Test threw exception
  Expression: isfile(SciTail.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] train_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:27
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:35 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:36
  Test threw exception
  Expression: isfile(SciTail.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] train_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:28
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:36 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:37
  Test threw exception
  Expression: isfile(SciTail.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] dev_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:29
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:37 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:38
  Test threw exception
  Expression: isfile(SciTail.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] dev_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:30
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:38 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:39
  Test threw exception
  Expression: isfile(SciTail.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] test_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:31
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:39 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:40
  Test threw exception
  Expression: isfile(SciTail.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] test_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:32
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:40 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
HANS: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:45
  Test threw exception
  Expression: isfile(HANS.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] hansfile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/hans.jl:25 [inlined]
   [10] test_tsv()
      @ NLIDatasets.HANS ~/.julia/packages/NLIDatasets/D0tQz/src/hans.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:45 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:44 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
Breaking_NLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:50
  Test threw exception
  Expression: isfile(BreakingNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] test_jsonl()
      @ NLIDatasets.BreakingNLI ~/.julia/packages/NLIDatasets/D0tQz/src/breaking_nli.jl:25
   [10] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:50 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:49 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:55
  Test threw exception
  Expression: isfile(ANLI.R1_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:26
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:55 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:56
  Test threw exception
  Expression: isfile(ANLI.R1_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:27
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:56 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:57
  Test threw exception
  Expression: isfile(ANLI.R1_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:57 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:58
  Test threw exception
  Expression: isfile(ANLI.R2_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:29
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:58 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:59
  Test threw exception
  Expression: isfile(ANLI.R2_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:59 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:60
  Test threw exception
  Expression: isfile(ANLI.R2_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:60 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:61
  Test threw exception
  Expression: isfile(ANLI.R3_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:32
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:61 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:62
  Test threw exception
  Expression: isfile(ANLI.R3_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:33
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:62 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:63
  Test threw exception
  Expression: isfile(ANLI.R3_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:34
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:63 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
Test Summary:  | Error  Total
NLIDatasets.jl |    33     33
  SNLI         |     6      6
  MultiNLI     |     6      6
  XNLI         |     4      4
  SciTail      |     6      6
  HANS         |     1      1
  Breaking_NLI |     1      1
  ANLI         |     9      9
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 33 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:3
ERROR: Package NLIDatasets errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
