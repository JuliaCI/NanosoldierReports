Current time is 2020-10-24T21:42:52.098
Julia Version 1.6.0-DEV.1334
Commit be72f6beb0 (2020-10-24 16:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-24T21:42:53.306
   Resolving package versions...
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-24T21:43:19.783
     Testing FunctionIntegrator
Status `/tmp/jl_Sq5gUX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Sq5gUX/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.146538 seconds (293.00 k allocations: 13.803 MiB, 91.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.960579 seconds (2.24 M allocations: 130.330 MiB, 5.54% gc time, 98.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.137959 seconds (417.65 k allocations: 24.214 MiB, 84.94% compilation time)
Running: chebyshev_quadrature with k=3
  0.229251 seconds (483.48 k allocations: 27.366 MiB, 24.27% gc time, 89.78% compilation time)
Running: chebyshev_quadrature with k=4
  0.170776 seconds (427.00 k allocations: 23.917 MiB, 87.48% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 21.916626 seconds (35.32 M allocations: 2.971 GiB, 11.20% gc time, 77.44% compilation time)
Running: laguerre_quadrature with k=1
  1.727907 seconds (3.24 M allocations: 182.139 MiB, 3.40% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.240231 seconds (211.52 k allocations: 12.247 MiB, 11.73% gc time, 99.29% compilation time)
Running: lobatto_quadrature
  0.200892 seconds (339.47 k allocations: 20.634 MiB, 99.11% compilation time)
Running: radau_quadrature
  0.216460 seconds (460.46 k allocations: 28.260 MiB, 6.22% gc time, 99.44% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 37.774399 seconds (100.02 M allocations: 1.491 GiB, 0.47% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.070034 seconds (173.35 k allocations: 3.888 MiB, 29.97% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 36.568968 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.05% compilation time)
Running: rombergs_method
  0.329658 seconds (741.21 k allocations: 43.131 MiB, 6.46% gc time, 99.35% compilation time)
Running: simpsons_rule
  0.022119 seconds (48.05 k allocations: 2.634 MiB, 92.88% compilation time)
Running: simpsons38_rule
  0.056842 seconds (111.26 k allocations: 5.945 MiB, 96.16% compilation time)
Running: trapezoidal_rule
  0.237961 seconds (1.72 M allocations: 28.720 MiB, 21.22% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048711 seconds (30.72 k allocations: 1.831 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.331768 seconds (294.36 k allocations: 15.687 MiB, 99.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.128236 seconds (94.22 k allocations: 2.707 MiB, 97.96% compilation time)
Running: chebyshev_quadrature with k=3
  0.106907 seconds (82.47 k allocations: 2.508 MiB, 98.06% compilation time)
Running: chebyshev_quadrature with k=4
  0.107963 seconds (65.08 k allocations: 2.154 MiB, 98.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.436534 seconds (510.46 k allocations: 162.268 MiB, 13.82% gc time, 34.11% compilation time)
Running: legendre_quadrature
  0.115995 seconds (42.20 k allocations: 2.452 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.016102 seconds (16.16 k allocations: 1.010 MiB, 99.03% compilation time)
Running: radau_quadrature
  0.015554 seconds (16.26 k allocations: 1.017 MiB, 99.17% compilation time)
Running: rectangle_rule_left
  9.774879 seconds (471.41 M allocations: 7.025 GiB, 4.67% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
  9.936694 seconds (476.96 M allocations: 7.107 GiB, 4.57% gc time)
Running: rombergs_method
  0.221864 seconds (334.31 k allocations: 19.157 MiB, 99.84% compilation time)
Running: simpsons_rule
  0.000019 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.042409 seconds (19.43 k allocations: 1.184 MiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.022347 seconds (16.97 k allocations: 1.034 MiB, 99.82% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.011775 seconds (1.03 k allocations: 34.125 KiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=1
  0.058906 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.093517 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.095290 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.072176 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.169831 seconds (369.24 k allocations: 19.514 MiB, 99.33% compilation time)
Running: legendre_quadrature
  0.046952 seconds (1.28 k allocations: 65.891 KiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000068 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000033 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000297 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000256 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000326 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.061358 seconds (1.04 k allocations: 56.469 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000021 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.017000 seconds (923 allocations: 39.281 KiB, 99.64% compilation time)
Running: trapezoidal_rule
  0.015722 seconds (44.29 k allocations: 702.859 KiB, 91.65% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.056698 seconds (83.49 k allocations: 5.001 MiB, 37.09% gc time, 99.65% compilation time)
Running: chebyshev_quadrature with k=1
  0.108779 seconds (235.65 k allocations: 13.402 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.110950 seconds (289.13 k allocations: 16.379 MiB, 97.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.145982 seconds (239.79 k allocations: 13.535 MiB, 12.34% gc time, 98.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.102116 seconds (239.79 k allocations: 13.477 MiB, 98.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.927344 seconds (454.81 k allocations: 163.893 MiB, 12.07% gc time, 32.05% compilation time)
Running: legendre_quadrature
  0.099810 seconds (190.36 k allocations: 11.084 MiB, 98.41% compilation time)
Running: lobatto_quadrature
  0.096557 seconds (201.83 k allocations: 11.808 MiB, 98.21% compilation time)
Running: radau_quadrature
  0.094080 seconds (201.83 k allocations: 11.805 MiB, 98.47% compilation time)
Running: rectangle_rule_left
  0.412859 seconds (19.37 k allocations: 1.189 MiB, 3.89% compilation time)
Running: rectangle_rule_midpoint
  0.015888 seconds (25.55 k allocations: 1.616 MiB, 98.99% compilation time)
Running: rectangle_rule_right
  0.401622 seconds (17.90 k allocations: 1.099 MiB, 5.47% compilation time)
Running: rombergs_method
  0.095324 seconds (137.77 k allocations: 8.025 MiB, 14.74% gc time, 97.57% compilation time)
Running: simpsons_rule
  0.015600 seconds (37.98 k allocations: 2.442 MiB, 99.20% compilation time)
Running: simpsons38_rule
  0.021982 seconds (43.94 k allocations: 2.785 MiB, 99.33% compilation time)
Running: trapezoidal_rule
  0.010950 seconds (43.20 k allocations: 1.730 MiB, 96.63% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.024402 seconds (68.44 k allocations: 3.060 MiB, 96.23% compilation time)
Running: chebyshev_quadrature with k=1
  0.128489 seconds (242.23 k allocations: 13.473 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.168890 seconds (296.16 k allocations: 16.371 MiB, 12.08% gc time, 98.75% compilation time)
Running: chebyshev_quadrature with k=3
  0.139192 seconds (246.37 k allocations: 13.540 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=4
  0.188796 seconds (246.37 k allocations: 13.520 MiB, 99.45% compilation time)
Running: hermite_quadrature with k=2
  8.456549 seconds (20.48 M allocations: 1.087 GiB, 10.45% gc time, 99.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.270850 seconds (463.99 k allocations: 50.095 MiB, 6.28% gc time, 92.33% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.125812 seconds (282.34 k allocations: 15.726 MiB, 97.43% compilation time)
Running: legendre_quadrature
  0.104653 seconds (196.90 k allocations: 11.413 MiB, 98.32% compilation time)
Running: lobatto_quadrature
  0.134528 seconds (222.49 k allocations: 37.582 MiB, 8.63% gc time, 77.60% compilation time)
Running: radau_quadrature
  0.135069 seconds (219.07 k allocations: 30.264 MiB, 6.53% gc time, 83.01% compilation time)
Running: rectangle_rule_left
  0.016285 seconds (22.28 k allocations: 1.333 MiB, 99.38% compilation time)
Running: rectangle_rule_midpoint
  0.016865 seconds (27.36 k allocations: 1.703 MiB, 99.29% compilation time)
Running: rectangle_rule_right
  0.018906 seconds (19.02 k allocations: 1.153 MiB, 99.20% compilation time)
Running: rombergs_method
  0.083803 seconds (140.11 k allocations: 8.068 MiB, 97.34% compilation time)
Running: simpsons_rule
  0.018919 seconds (45.46 k allocations: 2.710 MiB, 98.78% compilation time)
Running: simpsons38_rule
  0.025331 seconds (58.91 k allocations: 3.170 MiB, 98.87% compilation time)
Running: trapezoidal_rule
  0.016330 seconds (29.23 k allocations: 1.655 MiB, 98.43% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.030809 seconds (52.41 k allocations: 2.720 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=1
  0.150138 seconds (237.75 k allocations: 13.243 MiB, 10.02% gc time, 98.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.135598 seconds (291.35 k allocations: 16.170 MiB, 97.55% compilation time)
Running: chebyshev_quadrature with k=3
  0.099531 seconds (241.90 k allocations: 13.330 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.144015 seconds (241.90 k allocations: 13.331 MiB, 11.98% gc time, 99.15% compilation time)
Running: hermite_quadrature with k=2
  0.086471 seconds (175.13 k allocations: 10.126 MiB, 97.65% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.404545 seconds (457.25 k allocations: 1.175 GiB, 26.52% gc time, 5.37% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.140589 seconds (277.63 k allocations: 15.552 MiB, 97.55% compilation time)
Running: legendre_quadrature
  0.114751 seconds (192.47 k allocations: 11.189 MiB, 98.58% compilation time)
Running: lobatto_quadrature
  0.133920 seconds (213.25 k allocations: 23.309 MiB, 8.32% gc time, 82.33% compilation time)
Running: radau_quadrature
  0.135906 seconds (212.41 k allocations: 21.370 MiB, 89.73% compilation time)
Running: rectangle_rule_left
  0.034142 seconds (20.07 k allocations: 1.229 MiB, 37.34% gc time, 99.63% compilation time)
Running: rectangle_rule_midpoint
  0.019440 seconds (26.25 k allocations: 1.652 MiB, 99.38% compilation time)
Running: rectangle_rule_right
  0.020547 seconds (17.87 k allocations: 1.098 MiB, 99.29% compilation time)
Running: rombergs_method
  0.081047 seconds (135.95 k allocations: 7.879 MiB, 97.04% compilation time)
Running: simpsons_rule
  0.020407 seconds (40.80 k allocations: 2.541 MiB, 99.08% compilation time)
Running: simpsons38_rule
  0.023263 seconds (49.73 k allocations: 2.931 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.016979 seconds (24.14 k allocations: 1.492 MiB, 99.02% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.014031 seconds (40.61 k allocations: 2.580 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.147366 seconds (236.13 k allocations: 13.465 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=2
  0.212804 seconds (289.63 k allocations: 16.490 MiB, 8.40% gc time, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.115165 seconds (240.28 k allocations: 13.548 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=4
  0.129351 seconds (240.28 k allocations: 13.373 MiB, 98.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.057105 seconds (455.35 k allocations: 195.001 MiB, 12.19% gc time, 31.39% compilation time)
Running: legendre_quadrature
  0.109531 seconds (190.85 k allocations: 11.114 MiB, 97.99% compilation time)
Running: lobatto_quadrature
  0.111659 seconds (202.33 k allocations: 11.830 MiB, 98.88% compilation time)
Running: radau_quadrature
  0.121238 seconds (202.33 k allocations: 11.836 MiB, 97.83% compilation time)
Running: rectangle_rule_left
  0.310364 seconds (19.89 k allocations: 1.215 MiB, 7.06% compilation time)
Running: rectangle_rule_midpoint
  0.033006 seconds (25.89 k allocations: 1.634 MiB, 51.79% gc time, 99.52% compilation time)
Running: rectangle_rule_right
  0.134288 seconds (18.24 k allocations: 1.118 MiB, 12.02% compilation time)
Running: rombergs_method
  0.088470 seconds (149.07 k allocations: 8.786 MiB, 96.97% compilation time)
Running: simpsons_rule
  0.017022 seconds (38.61 k allocations: 2.470 MiB, 99.12% compilation time)
Running: simpsons38_rule
  0.019532 seconds (44.65 k allocations: 2.815 MiB, 99.28% compilation time)
Running: trapezoidal_rule
  0.013099 seconds (44.13 k allocations: 1.763 MiB, 96.20% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.013691 seconds (40.35 k allocations: 2.510 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.116120 seconds (236.73 k allocations: 13.422 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.175462 seconds (290.26 k allocations: 16.392 MiB, 7.46% gc time, 98.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.125138 seconds (240.87 k allocations: 13.467 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=4
  0.124808 seconds (240.87 k allocations: 13.545 MiB, 97.98% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.184955 seconds (456.06 k allocations: 149.626 MiB, 18.03% gc time, 29.40% compilation time)
Running: legendre_quadrature
  0.111440 seconds (191.44 k allocations: 11.125 MiB, 98.12% compilation time)
Running: lobatto_quadrature
  0.132304 seconds (202.93 k allocations: 11.856 MiB, 98.27% compilation time)
Running: radau_quadrature
  0.106916 seconds (202.92 k allocations: 11.866 MiB, 97.84% compilation time)
Running: rectangle_rule_left
  0.548240 seconds (20.14 k allocations: 1.227 MiB, 2.61% compilation time)
Running: rectangle_rule_midpoint
  0.032355 seconds (25.89 k allocations: 1.635 MiB, 50.01% gc time, 99.46% compilation time)
Running: rectangle_rule_right
  0.527696 seconds (18.20 k allocations: 1.115 MiB, 3.82% compilation time)
Running: rombergs_method
  0.073343 seconds (138.99 k allocations: 8.082 MiB, 96.88% compilation time)
Running: simpsons_rule
  0.022099 seconds (39.09 k allocations: 2.489 MiB, 99.26% compilation time)
Running: simpsons38_rule
  0.016807 seconds (45.35 k allocations: 2.842 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.010920 seconds (56.28 k allocations: 1.959 MiB, 94.83% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.092324 seconds (152.10 k allocations: 9.114 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.087468 seconds (70.34 k allocations: 2.237 MiB, 97.82% compilation time)
Running: chebyshev_quadrature with k=2
  0.125285 seconds (105.50 k allocations: 2.900 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=3
  0.094962 seconds (92.98 k allocations: 2.686 MiB, 97.51% compilation time)
Running: chebyshev_quadrature with k=4
  0.103450 seconds (72.52 k allocations: 2.280 MiB, 98.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.113406 seconds (485.44 k allocations: 168.149 MiB, 4.29% gc time, 29.92% compilation time)
Running: legendre_quadrature
  0.068074 seconds (19.14 k allocations: 1.125 MiB, 99.74% compilation time)
Running: lobatto_quadrature
  0.000091 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000039 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 14.572422 seconds (590.00 M allocations: 8.792 GiB, 6.18% gc time)
Running: rectangle_rule_midpoint
  0.000012 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 15.013777 seconds (592.75 M allocations: 8.833 GiB, 6.15% gc time)
Running: rombergs_method
  0.136592 seconds (20.91 k allocations: 1.197 MiB, 6.51% gc time, 99.70% compilation time)
Running: simpsons_rule
  0.000023 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.021626 seconds (463 allocations: 22.578 KiB, 99.71% compilation time)
Running: trapezoidal_rule
  0.010016 seconds (171 allocations: 7.859 KiB, 99.62% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 22.351453 seconds (209.94 M allocations: 3.138 GiB, 1.51% gc time, 0.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.330968 seconds (422.91 k allocations: 23.678 MiB, 3.57% gc time, 99.08% compilation time)
Running: chebyshev_quadrature with k=2
 14.859973 seconds (478.47 k allocations: 4.041 GiB, 2.52% gc time, 2.17% compilation time)
Running: chebyshev_quadrature with k=3
  6.652452 seconds (254.25 k allocations: 1.642 GiB, 3.90% gc time, 1.50% compilation time)
Running: chebyshev_quadrature with k=4
  9.064572 seconds (254.25 k allocations: 2.261 GiB, 1.79% gc time, 1.11% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 28.728590 seconds (492.86 k allocations: 13.255 GiB, 6.11% gc time, 0.90% compilation time)
Running: legendre_quadrature.
  7.467261 seconds (228.91 k allocations: 1.976 GiB, 0.91% gc time, 1.70% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.185979 seconds (8.24 M allocations: 13.384 GiB, 6.49% gc time, 0.65% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.023913 seconds (7.24 M allocations: 13.369 GiB, 5.88% gc time, 0.51% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.348216 seconds (22.88 k allocations: 1.394 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.171684 seconds (31.46 k allocations: 1.956 MiB, 0.18% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.354651 seconds (23.09 k allocations: 1.403 MiB, 0.17% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.486718 seconds (448.69 k allocations: 153.518 MiB, 2.11% gc time, 9.33% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.168689 seconds (200.04 M allocations: 2.983 GiB, 2.32% gc time, 0.41% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.902303 seconds (600.05 M allocations: 8.944 GiB, 6.17% gc time, 0.16% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.031923 seconds (600.03 M allocations: 8.943 GiB, 4.04% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.047327 seconds (111.10 k allocations: 4.245 MiB, 95.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.166789 seconds (252.71 k allocations: 13.876 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.139050 seconds (277.25 k allocations: 14.964 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.232703 seconds (224.23 k allocations: 11.980 MiB, 45.43% gc time, 99.44% compilation time)
Running: chebyshev_quadrature with k=4
  0.148363 seconds (224.23 k allocations: 11.975 MiB, 99.01% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.213438 seconds (394.65 k allocations: 35.529 MiB, 91.27% compilation time)
Running: laguerre_quadrature with k=2
  0.118888 seconds (185.19 k allocations: 10.840 MiB, 75.36% compilation time)
Running: legendre_quadrature
  0.080461 seconds (149.17 k allocations: 8.338 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.019741 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017171 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.026552 seconds (19.35 k allocations: 1.157 MiB, 66.24% compilation time)
Running: rectangle_rule_midpoint
  0.028105 seconds (26.33 k allocations: 1.636 MiB, 62.48% compilation time)
Running: rectangle_rule_right
  0.030997 seconds (17.96 k allocations: 1.084 MiB, 47.22% compilation time)
Running: rombergs_method
  0.141334 seconds (175.90 k allocations: 10.160 MiB, 98.22% compilation time)
Running: simpsons_rule
  0.000259 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.025961 seconds (80.36 k allocations: 3.491 MiB, 96.65% compilation time)
Running: trapezoidal_rule
  0.079624 seconds (2.39 M allocations: 37.744 MiB, 36.77% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000634 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.078328 seconds (2.46 k allocations: 1.691 MiB, 97.41% compilation time)
Running: chebyshev_quadrature with k=2
  0.078227 seconds (2.71 k allocations: 2.355 MiB, 96.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.073228 seconds (2.31 k allocations: 2.028 MiB, 97.27% compilation time)
Running: chebyshev_quadrature with k=4
  0.067486 seconds (2.31 k allocations: 1.469 MiB, 97.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.108471 seconds (371.51 k allocations: 905.320 MiB, 6.17% gc time, 5.56% compilation time)
Running: legendre_quadrature
  0.062577 seconds (1.27 k allocations: 68.203 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000162 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000129 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.961069 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000187 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.220425 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.042911 seconds (993 allocations: 56.609 KiB, 99.49% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000979 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000093 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.059912 seconds (2.53 k allocations: 579.203 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.085633 seconds (2.79 k allocations: 780.188 KiB, 99.28% compilation time)
Running: chebyshev_quadrature with k=3
  0.086018 seconds (2.39 k allocations: 661.047 KiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=4
  0.097955 seconds (2.39 k allocations: 491.547 KiB, 99.45% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.037482 seconds (378.07 k allocations: 253.431 MiB, 26.41% compilation time)
Running: legendre_quadrature
  0.060065 seconds (1.32 k allocations: 67.859 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000090 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000034 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.924482 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000117 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.776894 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.047076 seconds (1.21 k allocations: 64.875 KiB, 99.69% compilation time)
Running: simpsons_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000008 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000387 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-24T21:51:27.260
