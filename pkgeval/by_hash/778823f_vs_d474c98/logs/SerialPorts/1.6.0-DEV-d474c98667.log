Current time is 2020-10-25T01:43:52.250
Julia Version 1.6.0-DEV.1325
Commit d474c98667 (2020-10-24 16:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-25T01:43:55.935
   Resolving package versions...
   Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
   Installed VersionParsing â”€ v1.2.0
   Installed MacroTools â”€â”€â”€â”€â”€ v0.5.6
   Installed SerialPorts â”€â”€â”€â”€ v0.2.2
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed PyCall â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.92.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d0f9de7] + SerialPorts v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [69de0a69] + Parsers v1.0.11
  [438e738f] + PyCall v1.92.1
  [5d0f9de7] + SerialPorts v0.2.2
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [4ec0a83e] + Unicode
    Building Conda â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7a58bb32ce5d85f8bf7559aa7c2842f9aecf52fc/build.log`
    Building PyCall â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/b6dff5fa725eff4f775f472acd86756d6e31fb02/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mPyCall[39m
[32m  âœ“ [39mSerialPorts
3 dependencies successfully precompiled (4 already precompiled)
Starting tests at 2020-10-25T01:46:58.302
     Testing SerialPorts
Status `/tmp/jl_m8YaOY/Project.toml`
  [438e738f] PyCall v1.92.1
  [5d0f9de7] SerialPorts v0.2.2
  [8dfed614] Test
Status `/tmp/jl_m8YaOY/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [69de0a69] Parsers v1.0.11
  [438e738f] PyCall v1.92.1
  [5d0f9de7] SerialPorts v0.2.2
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
[ Info: Installing serial via the Conda pyserial package...
[ Info: Running `conda install -q -y pyserial` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/pkgeval/.julia/conda/3

  added / updated specs:
    - pyserial


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    pyserial-3.4               |             py_2          60 KB
    ------------------------------------------------------------
                                           Total:          60 KB

The following NEW packages will be INSTALLED:

  pyserial           pkgs/main/noarch::pyserial-3.4-py_2


Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
list_serialports() = String[]
ERROR: LoadError: KeyError: key "USER" not found
Stacktrace:
 [1] (::Base.var"#501#502")(k::String)
   @ Base ./env.jl:79
 [2] access_env
   @ ./env.jl:43 [inlined]
 [3] getindex
   @ ./env.jl:79 [inlined]
 [4] check_serial_access()
   @ SerialPorts ~/.julia/packages/SerialPorts/4zoml/src/SerialPorts.jl:126
 [5] top-level scope
   @ ~/.julia/packages/SerialPorts/4zoml/test/runtests.jl:8
 [6] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [7] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/SerialPorts/4zoml/test/runtests.jl:8
ERROR: Package SerialPorts errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
