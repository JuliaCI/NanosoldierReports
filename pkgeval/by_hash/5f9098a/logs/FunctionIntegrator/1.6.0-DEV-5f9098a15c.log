Julia Version 1.6.0-DEV.1166
Commit 5f9098a15c (2020-10-09 07:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.6.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_kka7zW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_kka7zW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.386643 seconds (289.12 k allocations: 13.528 MiB, 25.96% gc time, 92.89% compilation time)
Running: chebyshev_quadrature with k=1
  1.796194 seconds (2.20 M allocations: 126.718 MiB, 1.72% gc time, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.248095 seconds (409.38 k allocations: 23.556 MiB, 87.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.378176 seconds (473.75 k allocations: 26.629 MiB, 23.44% gc time, 92.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.330133 seconds (418.56 k allocations: 23.270 MiB, 4.80% gc time, 94.84% compilation time)
Running: jacobi_quadrature with α=β=1
 36.681126 seconds (36.45 M allocations: 3.003 GiB, 11.40% gc time, 82.36% compilation time)
Running: laguerre_quadrature with k=1
  2.812063 seconds (3.17 M allocations: 177.149 MiB, 5.09% gc time, 99.52% compilation time)
Running: legendre_quadrature
  0.246408 seconds (206.19 k allocations: 11.839 MiB, 99.26% compilation time)
Running: lobatto_quadrature
  0.463783 seconds (329.93 k allocations: 19.932 MiB, 99.56% compilation time)
Running: radau_quadrature
  0.391594 seconds (448.18 k allocations: 27.381 MiB, 99.48% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.697398 seconds (100.02 M allocations: 1.491 GiB, 0.66% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.105827 seconds (172.46 k allocations: 3.827 MiB, 31.41% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 46.332736 seconds (100.02 M allocations: 1.491 GiB, 0.44% gc time, 0.07% compilation time)
Running: rombergs_method
  0.543330 seconds (723.16 k allocations: 41.733 MiB, 3.51% gc time, 99.60% compilation time)
Running: simpsons_rule
  0.036592 seconds (46.55 k allocations: 2.532 MiB, 94.07% compilation time)
Running: simpsons38_rule
  0.071220 seconds (108.54 k allocations: 5.754 MiB, 97.10% compilation time)
Running: trapezoidal_rule
  0.466031 seconds (1.72 M allocations: 28.603 MiB, 3.96% gc time, 49.46% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.108239 seconds (29.79 k allocations: 1.767 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.439884 seconds (290.58 k allocations: 15.380 MiB, 99.65% compilation time)
Running: chebyshev_quadrature with k=2
  0.303712 seconds (93.80 k allocations: 2.675 MiB, 48.01% gc time, 99.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.155655 seconds (82.06 k allocations: 2.476 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.149303 seconds (64.67 k allocations: 2.122 MiB, 98.83% compilation time)
Running: jacobi_quadrature with α=β=1
  1.652898 seconds (504.12 k allocations: 161.837 MiB, 1.93% gc time, 35.59% compilation time)
Running: legendre_quadrature
  0.144210 seconds (41.24 k allocations: 2.376 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.018916 seconds (15.63 k allocations: 995.575 KiB, 98.95% compilation time)
Running: radau_quadrature
  0.018928 seconds (15.74 k allocations: 1002.790 KiB, 99.18% compilation time)
Running: rectangle_rule_left
 12.980277 seconds (471.41 M allocations: 7.025 GiB, 3.87% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.716804 seconds (476.96 M allocations: 7.107 GiB, 3.73% gc time)
Running: rombergs_method
  0.354030 seconds (326.56 k allocations: 18.531 MiB, 1.70% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000027 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.058258 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.045256 seconds (16.49 k allocations: 1.000 MiB, 99.79% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.015568 seconds (1.03 k allocations: 34.125 KiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=1
  0.100486 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.145708 seconds (2.71 k allocations: 124.266 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.099507 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.096743 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with α=β=1
  0.363866 seconds (364.10 k allocations: 18.985 MiB, 98.14% compilation time)
Running: legendre_quadrature
  0.065193 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000047 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000350 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000336 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.083607 seconds (1.04 k allocations: 56.531 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000024 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.024703 seconds (923 allocations: 39.281 KiB, 99.71% compilation time)
Running: trapezoidal_rule
  0.018618 seconds (44.29 k allocations: 702.859 KiB, 92.02% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.074183 seconds (80.91 k allocations: 4.823 MiB, 37.74% gc time, 99.69% compilation time)
Running: chebyshev_quadrature with k=1
  0.219112 seconds (230.61 k allocations: 12.967 MiB, 99.10% compilation time)
Running: chebyshev_quadrature with k=2
  0.269216 seconds (283.17 k allocations: 15.895 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=3
  0.224487 seconds (234.76 k allocations: 13.159 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.156498 seconds (234.76 k allocations: 13.047 MiB, 98.74% compilation time)
Running: jacobi_quadrature with α=β=1
  2.021765 seconds (447.19 k allocations: 163.226 MiB, 11.64% gc time, 27.80% compilation time)
Running: legendre_quadrature
  0.138185 seconds (185.44 k allocations: 10.707 MiB, 9.41% gc time, 98.68% compilation time)
Running: lobatto_quadrature
  0.160070 seconds (196.77 k allocations: 11.434 MiB, 98.86% compilation time)
Running: radau_quadrature
  0.303350 seconds (196.76 k allocations: 11.419 MiB, 99.13% compilation time)
Running: rectangle_rule_left
  0.634978 seconds (18.82 k allocations: 1.147 MiB, 7.59% compilation time)
Running: rectangle_rule_midpoint
  0.067898 seconds (24.67 k allocations: 1.555 MiB, 99.77% compilation time)
Running: rectangle_rule_right
  0.635422 seconds (17.39 k allocations: 1.062 MiB, 4.05% compilation time)
Running: rombergs_method
  0.146533 seconds (134.27 k allocations: 7.778 MiB, 98.31% compilation time)
Running: simpsons_rule
  0.022052 seconds (36.49 k allocations: 2.341 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.051502 seconds (42.37 k allocations: 2.678 MiB, 99.65% compilation time)
Running: trapezoidal_rule
  0.019549 seconds (42.32 k allocations: 1.671 MiB, 95.83% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.071891 seconds (66.94 k allocations: 2.959 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.220589 seconds (237.20 k allocations: 13.040 MiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.257724 seconds (290.20 k allocations: 15.872 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.215611 seconds (241.33 k allocations: 13.118 MiB, 8.61% gc time, 98.28% compilation time)
Running: chebyshev_quadrature with k=4
  0.224516 seconds (241.34 k allocations: 13.123 MiB, 99.19% compilation time)
Running: hermite_quadrature with k=2
 16.514306 seconds (20.10 M allocations: 1.056 GiB, 8.21% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.564581 seconds (456.36 k allocations: 49.417 MiB, 8.91% gc time, 93.49% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.279644 seconds (276.26 k allocations: 15.248 MiB, 98.72% compilation time)
Running: legendre_quadrature
  0.141096 seconds (191.98 k allocations: 11.035 MiB, 98.43% compilation time)
Running: lobatto_quadrature
  0.572264 seconds (217.42 k allocations: 37.193 MiB, 29.56% gc time, 54.18% compilation time)
Running: radau_quadrature
  0.238244 seconds (214.01 k allocations: 29.854 MiB, 5.89% gc time, 85.86% compilation time)
Running: rectangle_rule_left
  0.077624 seconds (21.73 k allocations: 1.293 MiB, 98.18% compilation time)
Running: rectangle_rule_midpoint
  0.020520 seconds (26.47 k allocations: 1.642 MiB, 99.37% compilation time)
Running: rectangle_rule_right
  0.018104 seconds (18.50 k allocations: 1.117 MiB, 99.27% compilation time)
Running: rombergs_method
  0.139480 seconds (136.74 k allocations: 7.803 MiB, 98.41% compilation time)
Running: simpsons_rule
  0.082906 seconds (43.97 k allocations: 2.609 MiB, 99.75% compilation time)
Running: simpsons38_rule
  0.068937 seconds (57.34 k allocations: 3.063 MiB, 99.46% compilation time)
Running: trapezoidal_rule
  0.022435 seconds (28.35 k allocations: 1.595 MiB, 99.06% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.052387 seconds (50.91 k allocations: 2.619 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=1
  0.198219 seconds (232.72 k allocations: 12.830 MiB, 9.13% gc time, 98.85% compilation time)
Running: chebyshev_quadrature with k=2
  0.252916 seconds (285.39 k allocations: 15.671 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=3
  0.165321 seconds (236.87 k allocations: 12.928 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.309049 seconds (236.87 k allocations: 12.929 MiB, 8.14% gc time, 99.25% compilation time)
Running: hermite_quadrature with k=2
  0.161887 seconds (170.78 k allocations: 9.790 MiB, 98.75% compilation time)
Running: jacobi_quadrature with α=β=1
  7.010575 seconds (449.62 k allocations: 1.175 GiB, 26.90% gc time, 5.62% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.144850 seconds (271.55 k allocations: 15.122 MiB, 97.75% compilation time)
Running: legendre_quadrature
  0.135967 seconds (187.55 k allocations: 10.818 MiB, 13.10% gc time, 98.31% compilation time)
Running: lobatto_quadrature
  0.176644 seconds (208.19 k allocations: 22.923 MiB, 91.85% compilation time)
Running: radau_quadrature
  0.182145 seconds (207.34 k allocations: 20.852 MiB, 8.23% gc time, 94.86% compilation time)
Running: rectangle_rule_left
  0.024496 seconds (19.52 k allocations: 1.188 MiB, 99.46% compilation time)
Running: rectangle_rule_midpoint
  0.043283 seconds (25.36 k allocations: 1.591 MiB, 99.58% compilation time)
Running: rectangle_rule_right
  0.036871 seconds (17.36 k allocations: 1.062 MiB, 99.66% compilation time)
Running: rombergs_method
  0.157727 seconds (132.58 k allocations: 7.622 MiB, 98.54% compilation time)
Running: simpsons_rule
  0.033279 seconds (39.30 k allocations: 2.442 MiB, 99.38% compilation time)
Running: simpsons38_rule
  0.033271 seconds (48.16 k allocations: 2.822 MiB, 99.04% compilation time)
Running: trapezoidal_rule
  0.031074 seconds (23.26 k allocations: 1.433 MiB, 99.36% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022839 seconds (39.05 k allocations: 2.475 MiB, 99.18% compilation time)
Running: chebyshev_quadrature with k=1
  0.165452 seconds (231.10 k allocations: 13.042 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.355409 seconds (283.67 k allocations: 15.996 MiB, 34.67% gc time, 98.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.259093 seconds (235.25 k allocations: 13.141 MiB, 99.09% compilation time)
Running: chebyshev_quadrature with k=4
  0.200258 seconds (235.25 k allocations: 12.975 MiB, 98.74% compilation time)
Running: jacobi_quadrature with α=β=1
  1.864030 seconds (447.72 k allocations: 194.260 MiB, 7.10% gc time, 27.06% compilation time)
Running: legendre_quadrature
  0.172086 seconds (185.93 k allocations: 10.732 MiB, 98.59% compilation time)
Running: lobatto_quadrature
  0.144084 seconds (197.26 k allocations: 11.448 MiB, 98.38% compilation time)
Running: radau_quadrature
  0.221678 seconds (197.26 k allocations: 11.445 MiB, 98.94% compilation time)
Running: rectangle_rule_left
  0.365891 seconds (19.34 k allocations: 1.173 MiB, 5.09% gc time, 15.85% compilation time)
Running: rectangle_rule_midpoint
  0.114628 seconds (25.01 k allocations: 1.573 MiB, 55.81% compilation time)
Running: rectangle_rule_right
  0.164169 seconds (17.73 k allocations: 1.081 MiB, 14.37% compilation time)
Running: rombergs_method
  0.119790 seconds (145.03 k allocations: 8.486 MiB, 97.17% compilation time)
Running: simpsons_rule
  0.032581 seconds (37.11 k allocations: 2.369 MiB, 99.51% compilation time)
Running: simpsons38_rule
  0.027640 seconds (43.08 k allocations: 2.708 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.017991 seconds (43.25 k allocations: 1.703 MiB, 96.49% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.020695 seconds (38.85 k allocations: 2.411 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.195522 seconds (231.69 k allocations: 12.988 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=2
  0.305113 seconds (284.30 k allocations: 15.891 MiB, 6.05% gc time, 98.73% compilation time)
Running: chebyshev_quadrature with k=3
  0.219428 seconds (235.84 k allocations: 13.071 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.206781 seconds (235.84 k allocations: 13.142 MiB, 98.60% compilation time)
Running: jacobi_quadrature with α=β=1
  1.568227 seconds (448.43 k allocations: 148.940 MiB, 5.94% gc time, 35.89% compilation time)
Running: legendre_quadrature
  0.171521 seconds (186.53 k allocations: 10.750 MiB, 98.67% compilation time)
Running: lobatto_quadrature
  0.217865 seconds (197.86 k allocations: 11.468 MiB, 98.84% compilation time)
Running: radau_quadrature
  0.292117 seconds (197.86 k allocations: 11.466 MiB, 99.18% compilation time)
Running: rectangle_rule_left
  0.616419 seconds (19.59 k allocations: 1.186 MiB, 3.72% compilation time)
Running: rectangle_rule_midpoint
  0.021026 seconds (25.01 k allocations: 1.574 MiB, 99.13% compilation time)
Running: rectangle_rule_right
  0.704841 seconds (17.69 k allocations: 1.078 MiB, 3.84% compilation time)
Running: rombergs_method
  0.180373 seconds (135.49 k allocations: 7.815 MiB, 9.06% gc time, 98.06% compilation time)
Running: simpsons_rule
  0.056546 seconds (37.60 k allocations: 2.389 MiB, 99.71% compilation time)
Running: simpsons38_rule
  0.048238 seconds (43.78 k allocations: 2.734 MiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.028949 seconds (55.40 k allocations: 1.899 MiB, 96.65% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.168403 seconds (147.46 k allocations: 8.796 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.114918 seconds (69.93 k allocations: 2.205 MiB, 98.79% compilation time)
Running: chebyshev_quadrature with k=2
  0.137104 seconds (105.09 k allocations: 2.868 MiB, 97.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.183034 seconds (92.57 k allocations: 2.654 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.155853 seconds (72.10 k allocations: 2.248 MiB, 98.47% compilation time)
Running: jacobi_quadrature with α=β=1
  1.719891 seconds (480.48 k allocations: 167.785 MiB, 3.63% gc time, 30.05% compilation time)
Running: legendre_quadrature
  0.097581 seconds (18.73 k allocations: 1.094 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000027 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.838706 seconds (590.00 M allocations: 8.792 GiB, 5.34% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.238296 seconds (592.75 M allocations: 8.833 GiB, 5.28% gc time)
Running: rombergs_method
  0.154438 seconds (20.51 k allocations: 1.165 MiB, 99.65% compilation time)
Running: simpsons_rule
  0.000048 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026654 seconds (463 allocations: 22.578 KiB, 99.44% compilation time)
Running: trapezoidal_rule
  0.015593 seconds (171 allocations: 7.859 KiB, 99.38% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.011521 seconds (209.93 M allocations: 3.138 GiB, 1.48% gc time, 0.59% compilation time)
Running: chebyshev_quadrature with k=1
  0.495298 seconds (414.08 k allocations: 22.960 MiB, 3.13% gc time, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
 17.569227 seconds (468.73 k allocations: 4.040 GiB, 3.15% gc time, 3.14% compilation time)
Running: chebyshev_quadrature with k=3
  7.999766 seconds (249.12 k allocations: 1.642 GiB, 3.21% gc time, 2.60% compilation time)
Running: chebyshev_quadrature with k=4
 10.905583 seconds (249.12 k allocations: 2.260 GiB, 1.96% gc time, 2.29% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.247601 seconds (484.58 k allocations: 13.254 GiB, 6.71% gc time, 1.59% compilation time)
Running: legendre_quadrature.
  9.090871 seconds (223.34 k allocations: 1.976 GiB, 1.27% gc time, 2.59% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.373494 seconds (8.23 M allocations: 13.383 GiB, 9.04% gc time, 1.00% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.582143 seconds (7.23 M allocations: 13.369 GiB, 11.51% gc time, 0.82% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.648270 seconds (22.25 k allocations: 1.347 MiB, 0.33% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.441468 seconds (30.45 k allocations: 1.884 MiB, 0.34% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.189910 seconds (22.45 k allocations: 1.357 MiB, 0.30% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.853719 seconds (438.19 k allocations: 152.687 MiB, 1.91% gc time, 14.35% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.193034 seconds (200.04 M allocations: 2.983 GiB, 2.11% gc time, 0.16% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.104201 seconds (600.05 M allocations: 8.943 GiB, 5.69% gc time, 0.17% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.305715 seconds (600.03 M allocations: 8.943 GiB, 3.86% gc time, 0.12% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.130833 seconds (109.56 k allocations: 4.131 MiB, 97.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.280916 seconds (247.70 k allocations: 13.511 MiB, 98.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.251150 seconds (272.34 k allocations: 14.521 MiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.269386 seconds (220.25 k allocations: 11.633 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.333417 seconds (220.25 k allocations: 11.661 MiB, 37.45% gc time, 99.59% compilation time)
Running: jacobi_quadrature with α=β=1
  0.304689 seconds (389.30 k allocations: 34.995 MiB, 93.64% compilation time)
Running: laguerre_quadrature with k=2
  0.241578 seconds (180.54 k allocations: 10.540 MiB, 85.50% compilation time)
Running: legendre_quadrature
  0.263574 seconds (145.98 k allocations: 8.073 MiB, 99.93% compilation time)
Running: lobatto_quadrature
  0.020226 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017477 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.053337 seconds (18.88 k allocations: 1.122 MiB, 68.22% compilation time)
Running: rectangle_rule_midpoint
  0.032457 seconds (25.48 k allocations: 1.575 MiB, 63.37% compilation time)
Running: rectangle_rule_right
  0.044893 seconds (17.48 k allocations: 1.049 MiB, 62.34% compilation time)
Running: rombergs_method
  0.223075 seconds (172.18 k allocations: 9.830 MiB, 98.74% compilation time)
Running: simpsons_rule
  0.000607 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.058226 seconds (78.86 k allocations: 3.385 MiB, 98.37% compilation time)
Running: trapezoidal_rule
  0.116699 seconds (2.39 M allocations: 37.684 MiB, 31.43% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.000708 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.099823 seconds (2.46 k allocations: 1.691 MiB, 97.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.123119 seconds (2.71 k allocations: 2.355 MiB, 97.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.107694 seconds (2.31 k allocations: 2.028 MiB, 96.77% compilation time)
Running: chebyshev_quadrature with k=4
  0.106271 seconds (2.31 k allocations: 1.469 MiB, 97.28% compilation time)
Running: jacobi_quadrature with α=β=1
  4.867921 seconds (366.38 k allocations: 904.821 MiB, 5.27% gc time, 8.05% compilation time)
Running: legendre_quadrature
  0.067090 seconds (1.27 k allocations: 68.203 KiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.000178 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000124 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.777790 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000347 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.831822 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065039 seconds (997 allocations: 56.672 KiB, 99.45% compilation time)
Running: simpsons_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000095 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000934 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000209 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.092309 seconds (2.53 k allocations: 579.203 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.098293 seconds (2.79 k allocations: 780.188 KiB, 98.99% compilation time)
Running: chebyshev_quadrature with k=3
  0.147662 seconds (2.39 k allocations: 661.047 KiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=4
  0.110525 seconds (2.39 k allocations: 491.547 KiB, 99.24% compilation time)
Running: jacobi_quadrature with α=β=1
  2.599534 seconds (372.94 k allocations: 252.932 MiB, 21.02% compilation time)
Running: legendre_quadrature
  0.060929 seconds (1.32 k allocations: 67.859 KiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000113 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000040 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.383482 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000128 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.260036 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.085522 seconds (1.21 k allocations: 64.938 KiB, 99.47% compilation time)
Running: simpsons_rule
  0.000017 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000016 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000524 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
