Julia Version 1.6.0-DEV.770
Commit 2fc3dcdaec (2020-08-29 22:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_75eiKd/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_75eiKd/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.795349 seconds (1.43 M allocations: 76.243 MiB, 4.16% gc time)
Running: chebyshev_quadrature with k=1
  1.865623 seconds (2.24 M allocations: 128.459 MiB, 3.77% gc time)
Running: chebyshev_quadrature with k=2
  0.281697 seconds (424.81 k allocations: 24.371 MiB)
Running: chebyshev_quadrature with k=3
  0.344352 seconds (544.64 k allocations: 29.852 MiB, 4.07% gc time)
Running: chebyshev_quadrature with k=4
  0.315238 seconds (487.56 k allocations: 26.413 MiB)
Running: jacobi_quadrature with α=β=1
 39.776135 seconds (39.35 M allocations: 3.137 GiB, 9.45% gc time)
Running: laguerre_quadrature with k=1
  2.780084 seconds (3.33 M allocations: 185.360 MiB, 3.18% gc time)
Running: legendre_quadrature
  0.191496 seconds (215.03 k allocations: 12.309 MiB)
Running: lobatto_quadrature
  0.319177 seconds (343.28 k allocations: 20.568 MiB, 7.23% gc time)
Running: radau_quadrature
  0.245272 seconds (325.70 k allocations: 19.578 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 74.211946 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rectangle_rule_midpoint.
  0.149276 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 73.523477 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.576432 seconds (752.24 k allocations: 43.307 MiB, 5.74% gc time)
Running: simpsons_rule
  0.041115 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.102240 seconds (113.14 k allocations: 5.976 MiB)
Running: trapezoidal_rule
  0.329359 seconds (1.52 M allocations: 25.799 MiB, 4.91% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.074164 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.389486 seconds (256.89 k allocations: 12.949 MiB)
Running: chebyshev_quadrature with k=2
  0.135070 seconds (94.71 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=3
  0.152307 seconds (82.97 k allocations: 2.520 MiB)
Running: chebyshev_quadrature with k=4
  0.180712 seconds (65.58 k allocations: 2.167 MiB, 17.07% gc time)
Running: jacobi_quadrature with α=β=1
  3.061271 seconds (514.33 k allocations: 162.428 MiB, 8.01% gc time)
Running: legendre_quadrature
  0.160687 seconds (43.55 k allocations: 2.501 MiB)
Running: lobatto_quadrature
  0.022190 seconds (16.84 k allocations: 1.039 MiB)
Running: radau_quadrature
  0.021439 seconds (16.82 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 25.781969 seconds (471.41 M allocations: 7.025 GiB, 3.04% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.260939 seconds (476.96 M allocations: 7.107 GiB, 1.94% gc time)
Running: rombergs_method
  0.367877 seconds (339.57 k allocations: 19.252 MiB)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.070457 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.062286 seconds (18.34 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030231 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.112118 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.107634 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.124574 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.115698 seconds (3.08 k allocations: 155.109 KiB)
Running: jacobi_quadrature with α=β=1
  0.361133 seconds (378.82 k allocations: 19.799 MiB, 8.45% gc time)
Running: legendre_quadrature
  0.076266 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000084 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000033 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000570 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000403 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000571 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079454 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000040 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027590 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024784 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.073566 seconds (75.83 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.212546 seconds (240.11 k allocations: 13.476 MiB)
Running: chebyshev_quadrature with k=2
  0.237217 seconds (295.27 k allocations: 16.551 MiB)
Running: chebyshev_quadrature with k=3
  0.261411 seconds (275.26 k allocations: 14.975 MiB, 17.97% gc time)
Running: chebyshev_quadrature with k=4
  0.214436 seconds (275.29 k allocations: 14.867 MiB)
Running: jacobi_quadrature with α=β=1
  2.103542 seconds (465.44 k allocations: 164.154 MiB, 3.47% gc time)
Running: legendre_quadrature
  0.154915 seconds (192.86 k allocations: 11.103 MiB)
Running: lobatto_quadrature
  0.153615 seconds (204.05 k allocations: 11.801 MiB)
Running: radau_quadrature
  0.189592 seconds (204.05 k allocations: 11.805 MiB, 8.59% gc time)
Running: rectangle_rule_left
  0.960706 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.022117 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.064125 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.119587 seconds (139.81 k allocations: 8.070 MiB)
Running: simpsons_rule
  0.027311 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.032794 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.024384 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041220 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.176684 seconds (247.20 k allocations: 13.580 MiB)
Running: chebyshev_quadrature with k=2
  0.213952 seconds (302.90 k allocations: 16.569 MiB, 7.71% gc time)
Running: chebyshev_quadrature with k=3
  0.189469 seconds (282.67 k allocations: 14.988 MiB)
Running: chebyshev_quadrature with k=4
  0.161851 seconds (282.70 k allocations: 14.994 MiB)
Running: hermite_quadrature with k=2
 14.495877 seconds (22.07 M allocations: 1.144 GiB, 8.59% gc time)
Running: jacobi_quadrature with α=β=1
  0.396197 seconds (475.44 k allocations: 50.490 MiB, 11.31% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.281331 seconds (288.17 k allocations: 15.951 MiB, 19.04% gc time)
Running: legendre_quadrature
  0.175250 seconds (199.92 k allocations: 11.447 MiB)
Running: lobatto_quadrature
  0.379182 seconds (225.45 k allocations: 37.615 MiB, 40.24% gc time)
Running: radau_quadrature
  0.212563 seconds (222.05 k allocations: 30.276 MiB)
Running: rectangle_rule_left
  0.030705 seconds (22.89 k allocations: 1.352 MiB)
Running: rectangle_rule_midpoint
  0.028484 seconds (27.85 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.025408 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.118426 seconds (142.63 k allocations: 8.117 MiB)
Running: simpsons_rule
  0.041486 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.040696 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.052169 seconds (31.54 k allocations: 1.768 MiB, 35.52% gc time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043391 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.206927 seconds (242.33 k allocations: 13.342 MiB)
Running: chebyshev_quadrature with k=2
  0.227156 seconds (297.62 k allocations: 16.301 MiB)
Running: chebyshev_quadrature with k=3
  0.249045 seconds (277.53 k allocations: 14.759 MiB, 8.15% gc time)
Running: chebyshev_quadrature with k=4
  0.226882 seconds (277.56 k allocations: 14.759 MiB)
Running: hermite_quadrature with k=2
  0.162243 seconds (177.59 k allocations: 10.153 MiB)
Running: jacobi_quadrature with α=β=1
  7.116477 seconds (468.04 k allocations: 1.176 GiB, 17.22% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.222575 seconds (283.03 k allocations: 15.680 MiB)
Running: legendre_quadrature
  0.164784 seconds (195.09 k allocations: 11.214 MiB)
Running: lobatto_quadrature
  0.204390 seconds (215.82 k allocations: 23.344 MiB)
Running: radau_quadrature
  0.219153 seconds (214.97 k allocations: 21.252 MiB, 8.02% gc time)
Running: rectangle_rule_left
  0.028890 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.027159 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.025823 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.114701 seconds (138.11 k allocations: 7.922 MiB)
Running: simpsons_rule
  0.032248 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.038859 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.028853 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031520 seconds (32.45 k allocations: 1.953 MiB)
Running: chebyshev_quadrature with k=1
  0.209484 seconds (240.66 k allocations: 13.557 MiB)
Running: chebyshev_quadrature with k=2
  0.280962 seconds (295.86 k allocations: 16.642 MiB, 8.78% gc time)
Running: chebyshev_quadrature with k=3
  0.200824 seconds (275.86 k allocations: 14.968 MiB)
Running: chebyshev_quadrature with k=4
  0.197484 seconds (275.89 k allocations: 14.798 MiB)
Running: jacobi_quadrature with α=β=1
  1.461843 seconds (466.08 k allocations: 195.267 MiB, 2.93% gc time)
Running: legendre_quadrature
  0.143614 seconds (193.42 k allocations: 11.125 MiB, 10.03% gc time)
Running: lobatto_quadrature
  0.153464 seconds (204.62 k allocations: 11.832 MiB)
Running: radau_quadrature
  0.162431 seconds (204.62 k allocations: 11.830 MiB)
Running: rectangle_rule_left
  0.296694 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.024232 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.111847 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.124588 seconds (151.16 k allocations: 8.805 MiB)
Running: simpsons_rule
  0.029224 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.032431 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.024521 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034244 seconds (33.21 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.234429 seconds (241.23 k allocations: 13.508 MiB, 8.71% gc time)
Running: chebyshev_quadrature with k=2
  0.210076 seconds (296.46 k allocations: 16.546 MiB)
Running: chebyshev_quadrature with k=3
  0.212110 seconds (276.40 k allocations: 14.900 MiB)
Running: chebyshev_quadrature with k=4
  0.204373 seconds (276.43 k allocations: 14.973 MiB)
Running: jacobi_quadrature with α=β=1
  1.534854 seconds (466.75 k allocations: 149.924 MiB, 2.96% gc time)
Running: legendre_quadrature
  0.172839 seconds (193.99 k allocations: 11.392 MiB)
Running: lobatto_quadrature
  0.180563 seconds (205.19 k allocations: 11.847 MiB)
Running: radau_quadrature
  0.184865 seconds (205.19 k allocations: 11.884 MiB)
Running: rectangle_rule_left
  1.020400 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.053302 seconds (26.26 k allocations: 1.633 MiB, 44.26% gc time)
Running: rectangle_rule_right
  1.147734 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.133069 seconds (141.11 k allocations: 8.114 MiB)
Running: simpsons_rule
  0.035586 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.036722 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.030159 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.165091 seconds (152.73 k allocations: 9.082 MiB)
Running: chebyshev_quadrature with k=1
  0.145704 seconds (70.78 k allocations: 2.244 MiB)
Running: chebyshev_quadrature with k=2
  0.154403 seconds (106.00 k allocations: 2.911 MiB)
Running: chebyshev_quadrature with k=3
  0.163886 seconds (93.49 k allocations: 2.700 MiB)
Running: chebyshev_quadrature with k=4
  0.122991 seconds (73.02 k allocations: 2.293 MiB)
Running: jacobi_quadrature with α=β=1
  1.448057 seconds (487.97 k allocations: 168.312 MiB, 10.06% gc time)
Running: legendre_quadrature
  0.109569 seconds (19.52 k allocations: 1.130 MiB)
Running: lobatto_quadrature
  0.000169 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000049 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 43.297556 seconds (590.00 M allocations: 8.792 GiB, 4.47% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.306973 seconds (592.75 M allocations: 8.833 GiB, 4.22% gc time)
Running: rombergs_method
  0.139677 seconds (21.37 k allocations: 1.206 MiB)
Running: simpsons_rule
  0.000043 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033108 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025960 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.578464 seconds (629.34 M allocations: 9.388 GiB, 6.22% gc time)
Running: chebyshev_quadrature with k=1
  0.490304 seconds (438.96 k allocations: 24.251 MiB)
Running: chebyshev_quadrature with k=2
 12.193097 seconds (496.30 k allocations: 4.042 GiB, 4.31% gc time)
Running: chebyshev_quadrature with k=3
  6.046253 seconds (290.35 k allocations: 1.643 GiB, 4.39% gc time)
Running: chebyshev_quadrature with k=4
  7.669609 seconds (290.38 k allocations: 2.262 GiB, 2.53% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 50.426199 seconds (504.98 k allocations: 13.255 GiB, 4.04% gc time)
Running: legendre_quadrature.
  5.827236 seconds (232.80 k allocations: 1.976 GiB, 1.93% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.191371 seconds (8.24 M allocations: 13.384 GiB, 5.51% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.426514 seconds (7.24 M allocations: 13.369 GiB, 3.46% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.062441 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.366433 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.095715 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.260264 seconds (456.42 k allocations: 153.689 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.319761 seconds (600.04 M allocations: 8.943 GiB, 8.56% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.756166 seconds (600.05 M allocations: 8.944 GiB, 8.15% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.355361 seconds (600.04 M allocations: 8.943 GiB, 8.64% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.062747 seconds (182.49 k allocations: 4.515 MiB)
Running: chebyshev_quadrature with k=1
  0.218160 seconds (257.82 k allocations: 14.011 MiB)
Running: chebyshev_quadrature with k=2
  0.249440 seconds (283.98 k allocations: 15.197 MiB)
Running: chebyshev_quadrature with k=3
  0.217748 seconds (260.50 k allocations: 13.451 MiB)
Running: chebyshev_quadrature with k=4
  0.223503 seconds (260.54 k allocations: 13.446 MiB)
Running: jacobi_quadrature with α=β=1
  0.418063 seconds (405.07 k allocations: 35.830 MiB)
Running: laguerre_quadrature with k=2
  0.191859 seconds (187.84 k allocations: 10.863 MiB)
Running: legendre_quadrature
  0.137199 seconds (151.64 k allocations: 8.383 MiB)
Running: lobatto_quadrature
  0.036582 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.033184 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.054531 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.045738 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.057097 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.267450 seconds (179.81 k allocations: 10.262 MiB)
Running: simpsons_rule
  0.001825 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054268 seconds (81.40 k allocations: 3.515 MiB)
Running: trapezoidal_rule
  0.241130 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002597 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.103585 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.141153 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.134772 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.138430 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  6.996207 seconds (401.91 k allocations: 906.529 MiB, 7.19% gc time)
Running: legendre_quadrature
  0.078857 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000203 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000142 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.613133 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000392 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.621599 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083743 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000059 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001000 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000730 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.142945 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.130655 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.140719 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.133820 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.393902 seconds (388.19 k allocations: 253.746 MiB)
Running: legendre_quadrature
  0.065054 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000116 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.475851 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001105 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.425527 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073374 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000083 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000080 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001938 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
