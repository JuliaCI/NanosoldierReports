Julia Version 1.6.0-DEV.769
Commit b630cd65bf (2020-08-29 22:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_CI4o4U/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_CI4o4U/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.078798 seconds (1.43 M allocations: 76.340 MiB, 7.55% gc time)
Running: chebyshev_quadrature with k=1
  1.848444 seconds (2.24 M allocations: 128.502 MiB, 3.76% gc time)
Running: chebyshev_quadrature with k=2
  0.397268 seconds (424.82 k allocations: 24.384 MiB)
Running: chebyshev_quadrature with k=3
  0.460905 seconds (544.64 k allocations: 29.864 MiB, 3.77% gc time)
Running: chebyshev_quadrature with k=4
  0.358119 seconds (487.56 k allocations: 26.405 MiB)
Running: jacobi_quadrature with α=β=1
 42.430588 seconds (39.35 M allocations: 3.137 GiB, 10.04% gc time)
Running: laguerre_quadrature with k=1
  2.921715 seconds (3.33 M allocations: 185.379 MiB, 3.34% gc time)
Running: legendre_quadrature
  0.193308 seconds (214.98 k allocations: 12.307 MiB)
Running: lobatto_quadrature
  0.341586 seconds (343.44 k allocations: 20.581 MiB, 7.34% gc time)
Running: radau_quadrature
  0.281176 seconds (325.78 k allocations: 19.586 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.170543 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rectangle_rule_midpoint.
  0.142316 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.674215 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rombergs_method
  0.516262 seconds (752.22 k allocations: 43.300 MiB, 5.84% gc time)
Running: simpsons_rule
  0.038270 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.089411 seconds (113.12 k allocations: 5.974 MiB)
Running: trapezoidal_rule
  0.320216 seconds (1.52 M allocations: 25.797 MiB, 5.34% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.082760 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.454133 seconds (256.84 k allocations: 12.946 MiB)
Running: chebyshev_quadrature with k=2
  0.152009 seconds (94.71 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=3
  0.147090 seconds (82.97 k allocations: 2.520 MiB)
Running: chebyshev_quadrature with k=4
  0.196133 seconds (65.58 k allocations: 2.167 MiB, 15.48% gc time)
Running: jacobi_quadrature with α=β=1
  2.001623 seconds (514.35 k allocations: 162.427 MiB, 9.99% gc time)
Running: legendre_quadrature
  0.179056 seconds (43.50 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.025803 seconds (16.79 k allocations: 1.036 MiB)
Running: radau_quadrature
  0.028914 seconds (16.78 k allocations: 1.036 MiB)
Running: rectangle_rule_left
 28.182126 seconds (471.41 M allocations: 7.025 GiB, 3.61% gc time)
Running: rectangle_rule_midpoint
  0.000071 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.028557 seconds (476.96 M allocations: 7.107 GiB, 2.55% gc time)
Running: rombergs_method
  0.424978 seconds (339.53 k allocations: 19.249 MiB, 2.27% gc time)
Running: simpsons_rule
  0.000047 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.069586 seconds (19.88 k allocations: 1.193 MiB)
Running: trapezoidal_rule
  0.062437 seconds (18.33 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031150 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.110934 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.114838 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.113861 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.127739 seconds (3.08 k allocations: 155.109 KiB)
Running: jacobi_quadrature with α=β=1
  0.374289 seconds (378.86 k allocations: 19.801 MiB, 7.80% gc time)
Running: legendre_quadrature
  0.071066 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000117 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000075 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000525 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000373 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000520 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.077094 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000051 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.036997 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.025216 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059425 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.184182 seconds (240.11 k allocations: 13.491 MiB)
Running: chebyshev_quadrature with k=2
  0.225906 seconds (295.27 k allocations: 16.536 MiB)
Running: chebyshev_quadrature with k=3
  0.237370 seconds (275.26 k allocations: 14.975 MiB, 10.43% gc time)
Running: chebyshev_quadrature with k=4
  0.198650 seconds (275.29 k allocations: 14.868 MiB)
Running: jacobi_quadrature with α=β=1
  1.914514 seconds (465.47 k allocations: 164.170 MiB, 6.31% gc time)
Running: legendre_quadrature
  0.171951 seconds (192.86 k allocations: 11.103 MiB)
Running: lobatto_quadrature
  0.182373 seconds (204.06 k allocations: 11.801 MiB)
Running: radau_quadrature
  0.191750 seconds (204.06 k allocations: 11.807 MiB)
Running: rectangle_rule_left
  1.200512 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.025669 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.175231 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.120202 seconds (139.81 k allocations: 8.070 MiB)
Running: simpsons_rule
  0.031201 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.036696 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.027398 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044176 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.195234 seconds (247.20 k allocations: 13.580 MiB)
Running: chebyshev_quadrature with k=2
  0.237150 seconds (302.90 k allocations: 16.565 MiB, 14.09% gc time)
Running: chebyshev_quadrature with k=3
  0.196337 seconds (282.67 k allocations: 14.988 MiB)
Running: chebyshev_quadrature with k=4
  0.203338 seconds (282.70 k allocations: 14.994 MiB)
Running: hermite_quadrature with k=2
 15.607680 seconds (22.07 M allocations: 1.144 GiB, 11.06% gc time)
Running: jacobi_quadrature with α=β=1
  0.598543 seconds (475.47 k allocations: 50.429 MiB, 30.97% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.257233 seconds (288.17 k allocations: 15.888 MiB, 7.46% gc time)
Running: legendre_quadrature
  0.208074 seconds (199.92 k allocations: 11.447 MiB)
Running: lobatto_quadrature
  0.321505 seconds (225.46 k allocations: 37.611 MiB, 5.03% gc time)
Running: radau_quadrature
  0.256167 seconds (222.06 k allocations: 30.276 MiB)
Running: rectangle_rule_left
  0.029912 seconds (22.89 k allocations: 1.352 MiB)
Running: rectangle_rule_midpoint
  0.057972 seconds (27.85 k allocations: 1.711 MiB, 32.47% gc time)
Running: rectangle_rule_right
  0.041564 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.175769 seconds (142.63 k allocations: 8.117 MiB)
Running: simpsons_rule
  0.055199 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.060298 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.021353 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.049333 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.209514 seconds (242.33 k allocations: 13.341 MiB)
Running: chebyshev_quadrature with k=2
  0.299088 seconds (297.62 k allocations: 16.364 MiB, 18.45% gc time)
Running: chebyshev_quadrature with k=3
  0.216720 seconds (277.53 k allocations: 14.775 MiB)
Running: chebyshev_quadrature with k=4
  0.245711 seconds (277.56 k allocations: 14.759 MiB)
Running: hermite_quadrature with k=2
  0.223674 seconds (177.59 k allocations: 10.169 MiB)
Running: jacobi_quadrature with α=β=1
 10.115639 seconds (468.07 k allocations: 1.176 GiB, 18.25% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.264780 seconds (283.03 k allocations: 15.680 MiB, 7.39% gc time)
Running: legendre_quadrature
  0.262021 seconds (195.09 k allocations: 11.214 MiB)
Running: lobatto_quadrature
  0.247301 seconds (215.83 k allocations: 23.324 MiB, 8.23% gc time)
Running: radau_quadrature
  0.208498 seconds (214.98 k allocations: 21.252 MiB)
Running: rectangle_rule_left
  0.027160 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.029503 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.021949 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.126701 seconds (138.10 k allocations: 7.921 MiB)
Running: simpsons_rule
  0.033752 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.061635 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.043418 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034595 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.279962 seconds (240.66 k allocations: 13.557 MiB, 6.47% gc time)
Running: chebyshev_quadrature with k=2
  0.235469 seconds (295.86 k allocations: 16.658 MiB)
Running: chebyshev_quadrature with k=3
  0.239871 seconds (275.86 k allocations: 14.971 MiB, 8.11% gc time)
Running: chebyshev_quadrature with k=4
  0.220644 seconds (275.89 k allocations: 14.798 MiB)
Running: jacobi_quadrature with α=β=1
  2.848114 seconds (466.12 k allocations: 195.257 MiB, 2.26% gc time)
Running: legendre_quadrature
  0.194161 seconds (193.42 k allocations: 11.125 MiB, 9.57% gc time)
Running: lobatto_quadrature
  0.173718 seconds (204.63 k allocations: 11.832 MiB)
Running: radau_quadrature
  0.203766 seconds (204.62 k allocations: 11.830 MiB)
Running: rectangle_rule_left
  0.325346 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.031274 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.113736 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.162784 seconds (151.16 k allocations: 8.805 MiB)
Running: simpsons_rule
  0.036733 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.042769 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.085968 seconds (46.17 k allocations: 1.860 MiB, 51.99% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036701 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.212605 seconds (241.23 k allocations: 13.508 MiB)
Running: chebyshev_quadrature with k=2
  0.239065 seconds (296.46 k allocations: 16.546 MiB)
Running: chebyshev_quadrature with k=3
  0.287473 seconds (276.40 k allocations: 14.899 MiB, 16.81% gc time)
Running: chebyshev_quadrature with k=4
  0.247298 seconds (276.43 k allocations: 14.973 MiB)
Running: jacobi_quadrature with α=β=1
  2.080627 seconds (466.78 k allocations: 149.922 MiB, 9.30% gc time)
Running: legendre_quadrature
  0.194271 seconds (193.99 k allocations: 11.141 MiB, 14.38% gc time)
Running: lobatto_quadrature
  0.177467 seconds (205.21 k allocations: 11.847 MiB)
Running: radau_quadrature
  0.180019 seconds (205.20 k allocations: 11.884 MiB)
Running: rectangle_rule_left
  1.164849 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.047205 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.159273 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.159146 seconds (141.11 k allocations: 8.114 MiB)
Running: simpsons_rule
  0.038974 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.104009 seconds (46.12 k allocations: 2.848 MiB, 63.28% gc time)
Running: trapezoidal_rule
  0.030738 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.237789 seconds (152.73 k allocations: 9.078 MiB, 30.13% gc time)
Running: chebyshev_quadrature with k=1
  0.145349 seconds (70.78 k allocations: 2.244 MiB)
Running: chebyshev_quadrature with k=2
  0.149358 seconds (106.00 k allocations: 2.911 MiB)
Running: chebyshev_quadrature with k=3
  0.151516 seconds (93.49 k allocations: 2.699 MiB)
Running: chebyshev_quadrature with k=4
  0.160669 seconds (73.02 k allocations: 2.293 MiB)
Running: jacobi_quadrature with α=β=1
  3.011964 seconds (488.04 k allocations: 168.256 MiB, 16.47% gc time)
Running: legendre_quadrature
  0.122536 seconds (19.53 k allocations: 1.129 MiB)
Running: lobatto_quadrature
  0.000103 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000044 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 43.798279 seconds (590.00 M allocations: 8.792 GiB, 2.76% gc time)
Running: rectangle_rule_midpoint
  0.000059 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.716234 seconds (592.75 M allocations: 8.833 GiB, 2.38% gc time)
Running: rombergs_method
  0.135703 seconds (21.37 k allocations: 1.206 MiB)
Running: simpsons_rule
  0.000053 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032380 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.026169 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.568360 seconds (629.34 M allocations: 9.388 GiB, 3.61% gc time)
Running: chebyshev_quadrature with k=1
  0.555699 seconds (438.92 k allocations: 24.317 MiB, 5.59% gc time)
Running: chebyshev_quadrature with k=2
 14.270768 seconds (496.25 k allocations: 4.042 GiB, 3.74% gc time)
Running: chebyshev_quadrature with k=3
  6.752028 seconds (290.35 k allocations: 1.643 GiB, 4.64% gc time)
Running: chebyshev_quadrature with k=4
  8.508822 seconds (290.38 k allocations: 2.262 GiB, 2.54% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 65.648945 seconds (504.96 k allocations: 13.255 GiB, 3.25% gc time)
Running: legendre_quadrature.
  6.738433 seconds (232.75 k allocations: 1.976 GiB, 2.88% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.187932 seconds (8.24 M allocations: 13.384 GiB, 3.61% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.684043 seconds (7.24 M allocations: 13.369 GiB, 3.03% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.080199 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.124735 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.731157 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.331224 seconds (456.37 k allocations: 153.686 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.669984 seconds (600.04 M allocations: 8.943 GiB, 8.37% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.606978 seconds (600.05 M allocations: 8.944 GiB, 7.94% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.946659 seconds (600.04 M allocations: 8.943 GiB, 7.94% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.078423 seconds (182.49 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.255859 seconds (257.82 k allocations: 14.010 MiB)
Running: chebyshev_quadrature with k=2
  0.224180 seconds (283.98 k allocations: 15.197 MiB)
Running: chebyshev_quadrature with k=3
  0.250099 seconds (260.51 k allocations: 13.453 MiB)
Running: chebyshev_quadrature with k=4
  0.256252 seconds (260.54 k allocations: 13.446 MiB)
Running: jacobi_quadrature with α=β=1
  0.514428 seconds (405.10 k allocations: 35.832 MiB)
Running: laguerre_quadrature with k=2
  0.308018 seconds (187.84 k allocations: 10.863 MiB)
Running: legendre_quadrature
  0.160475 seconds (151.64 k allocations: 8.383 MiB)
Running: lobatto_quadrature
  0.042903 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.032706 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.060916 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.050342 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.057133 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.329263 seconds (179.85 k allocations: 10.264 MiB)
Running: simpsons_rule
  0.002358 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.060883 seconds (81.40 k allocations: 3.515 MiB)
Running: trapezoidal_rule
  0.226516 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002309 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.153579 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.199708 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.134583 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.142972 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  9.808133 seconds (401.95 k allocations: 906.530 MiB, 6.05% gc time)
Running: legendre_quadrature
  0.078450 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000198 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000170 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.066700 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000452 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.478267 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095234 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000789 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000830 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.176277 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.144595 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.179954 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.197190 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.690384 seconds (388.22 k allocations: 253.748 MiB)
Running: legendre_quadrature
  0.102714 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000208 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000039 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.885460 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001153 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.625278 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095916 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000079 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001780 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
