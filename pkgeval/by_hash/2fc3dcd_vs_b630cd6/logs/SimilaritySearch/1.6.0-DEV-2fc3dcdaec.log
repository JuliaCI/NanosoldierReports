Julia Version 1.6.0-DEV.770
Commit 2fc3dcdaec (2020-08-29 22:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Compat ───────────── v3.15.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.18.2
  Installed StatsBase ────────── v0.32.0
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.4
  Installed JSON ─────────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_ASgbMR/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ASgbMR/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(24, 0.03182602f0), Item(19, 0.040776372f0), Item(27, 0.06844258f0), Item(37, 0.0939132f0)])
Vsorted = Item[Item(24, 0.03182602f0), Item(19, 0.040776372f0), Item(27, 0.06844258f0), Item(37, 0.0939132f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0052642424901326495, 0.004419763882954915, 301.0, 49.646110255271196))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00433200200398763, 0.004405570030212402, 301.0, 72.52637314796448))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004500397046407064, 0.005201601982116699, 301.0, 40.30027484893799))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004161707560221354, 0.004038572311401367, 301.0, 9.084462101396639))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003823439280192057, 0.005046995480855306, 301.0, 44.88967611268163))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018637180328369142, 0.0001468976338704427, 301.0, 181.19502338767052))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 7.281303405761718e-5, 0.011092829704284667, 300.0, 27.82644612202421)
p = PerformanceResult(1.0, 1.0, 1.0, 5.8698654174804685e-5, 3.10977300008138e-5, 300.0, 27.82644612202421)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003934232393900553, 0.004108834266662598, 300.0, 1.5579217144832)
p = PerformanceResult(1.0, 1.0, 1.0, 4.9087736341688374e-5, 2.2069613138834635e-5, 300.0, 1.5579217144832)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 7.281303405761718e-5, 0.011092829704284667, 300.0, 27.82644612202421), PerformanceResult(1.0, 1.0, 1.0, 5.8698654174804685e-5, 3.10977300008138e-5, 300.0, 27.82644612202421), PerformanceResult(1.0, 1.0, 1.0, 0.003934232393900553, 0.004108834266662598, 300.0, 1.5579217144832), PerformanceResult(1.0, 1.0, 1.0, 4.9087736341688374e-5, 2.2069613138834635e-5, 300.0, 1.5579217144832))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009480810165405274, 0.004637296994527181, 348.56666666666666, 28654.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009161734580993652, 0.004609004656473795, 304.0, 6944.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.277692159016927e-5, 1.2199083964029947e-5, 94.16666666666667, 49.60150172188878))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6114781697591145e-5, 1.3931592305501301e-5, 83.96666666666667, 72.54527771472931))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3444493611653645e-5, 1.7531712849934895e-5, 89.96666666666667, 40.1768354177475))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.597373962402344e-5, 0.00015687147776285808, 95.63333333333334, 44.82716516777873))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8033333333333332, 0.8033333333333332, 0.8033333333333332, 5.369186401367187e-5, 0.00014530022939046223, 68.96666666666667, 190.6164649426937))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-02T00:47:11.403
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9180000000000004, 0.9180000000000004, 0.9180000000000004, 2.3419857025146485e-5, 2.424955368041992e-5, 152.24, 48.992043239530176))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.257347106933594e-5, 1.869916915893555e-5, 155.85, 0.0))
*** advance 1 from 1000; 2020-09-02T00:47:12.106
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8910000000000002, 0.8910000000000002, 0.8910000000000002, 2.2346973419189454e-5, 2.4220943450927735e-5, 152.68, 74.65234218165278))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.146720886230469e-5, 1.920938491821289e-5, 156.14, 0.0))
*** advance 1 from 1000; 2020-09-02T00:47:12.810
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9000000000000001, 0.8970000000000001, 0.8982352941176471, 2.4170875549316405e-5, 3.464937210083008e-5, 154.54, 39.08878467325121))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4030208587646486e-5, 3.4749507904052734e-5, 158.47, 0.0))
*** advance 1 from 1000; 2020-09-02T00:47:13.463
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9080000000000001, 0.9080000000000001, 0.9080000000000001, 0.00010151386260986327, 0.0005094194412231445, 153.26, 44.26882846292574))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.836435317993164e-5, 0.0005481600761413574, 157.05, 0.0))
*** advance 1 from 1000; 2020-09-02T00:47:14.089
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9520000000000002, 0.9520000000000002, 0.9520000000000002, 0.0001358628273010254, 0.0004861617088317871, 166.66, 188.72938065370545))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010703563690185547, 0.0005313301086425781, 171.52, 0.0))
*** advance 1 from 1000; 2020-09-02T00:47:15.519
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9180000000000004, 0.9180000000000004, 0.9180000000000004, 3.2958984375e-5, 7.16710090637207e-5, 152.24, 49.00064474961255))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.304719924926758e-5, 7.032871246337891e-5, 155.85, 0.01624309568433091))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:17.462
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7460000000000002, 0.7460000000000002, 0.7460000000000002, 0.0016193079948425293, 7.918119430541993e-5, 200.15, 196.90000189840794))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:18.431
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7549999999999997, 0.7549999999999997, 0.7549999999999997, 0.0015275859832763672, 8.336067199707031e-5, 201.62, 111.93412958830595))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:19.267
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6689999999999999, 0.6689999999999999, 0.6689999999999999, 0.0015531659126281738, 8.405923843383789e-5, 269.27, 4.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:20.122
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.934, 0.934, 0.934, 0.0016555047035217284, 1.9409656524658202e-5, 222.39, 607.0000204145908))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:21.277
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.601, 0.601, 0.601, 0.0016901445388793944, 0.0004604506492614746, 251.03, 2326.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:22.259
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.39099999999999985, 0.39099999999999985, NaN, 0.0017200446128845216, 0.0003708791732788086, 245.7, 3644.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T00:47:23.281
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6040000000000001, 0.6040000000000001, 0.6040000000000001, 0.0016050076484680177, 2.824068069458008e-5, 241.07, 2348.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0796626054358014, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9542983058608064,"seconds":6.839632987976074e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.3359375,"distances_sum":568.5657639503479}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.087818696883853, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9500057234432242,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.2734375,"distances_sum":561.263753503561}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.087818696883853,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9500057234432242,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.2734375,"distances_sum":561.263753503561}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.087818696883853,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9500057234432242,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.2734375,"distances_sum":561.263753503561}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.087818696883853,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9500057234432242,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":2.1569430828094482e-6,"evaluations":8.2734375,"distances_sum":561.263753503561}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666654, conf: {"restarts":9}, perf: {"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":2.592429518699646e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":52.1875,"distances_sum":293.76253923773766}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8784722222222212, conf: {"restarts":10}, perf: {"precision":0.8784722222222212,"recall":0.8784722222222212,"f1":0.8784722222222212,"seconds":2.666562795639038e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":53.1328125,"distances_sum":294.5922684147954}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8854166666666654,"state":{"restarts":9},"perf":{"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":2.592429518699646e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":52.1875,"distances_sum":293.76253923773766}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999989, conf: {"restarts":13}, perf: {"precision":0.8984374999999989,"recall":0.8984374999999989,"f1":0.8984374999999989,"seconds":2.9847025871276855e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":59.0,"distances_sum":292.52063296735287}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.656470588235294, conf: {"restarts":14}, perf: {"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.9608607292175293e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":59.765625,"distances_sum":292.7422894090414}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.656470588235294,"state":{"restarts":14},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.9608607292175293e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":59.765625,"distances_sum":292.7422894090414}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.656470588235294,"state":{"restarts":14},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.9608607292175293e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":59.765625,"distances_sum":292.7422894090414}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.656470588235294,"state":{"restarts":14},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.9608607292175293e-5,"exhaustive_search_seconds":8.11740756034851e-6,"evaluations":59.765625,"distances_sum":292.7422894090414}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555544, conf: {"restarts":6}, perf: {"precision":0.8524305555555544,"recall":0.8524305555555544,"f1":0.8524305555555544,"seconds":4.4811517000198364e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":102.09375,"distances_sum":127.51264860481024}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999988, conf: {"restarts":9}, perf: {"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":5.0088390707969666e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":118.984375,"distances_sum":127.21804749965668}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111102, conf: {"restarts":21}, perf: {"precision":0.8767361111111102,"recall":0.8767361111111102,"f1":0.8767361111111102,"seconds":8.396990597248077e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":193.609375,"distances_sum":126.82729820534587}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8767361111111102,"state":{"restarts":21},"perf":{"precision":0.8767361111111102,"recall":0.8767361111111102,"f1":0.8767361111111102,"seconds":8.396990597248077e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":193.609375,"distances_sum":126.82729820534587}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8767361111111102,"state":{"restarts":21},"perf":{"precision":0.8767361111111102,"recall":0.8767361111111102,"f1":0.8767361111111102,"seconds":8.396990597248077e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":193.609375,"distances_sum":126.82729820534587}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8767361111111102,"state":{"restarts":21},"perf":{"precision":0.8767361111111102,"recall":0.8767361111111102,"f1":0.8767361111111102,"seconds":8.396990597248077e-5,"exhaustive_search_seconds":3.150850534439087e-5,"evaluations":193.609375,"distances_sum":126.82729820534587}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777767, conf: {"restarts":33}, perf: {"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":0.00018952041864395142,"exhaustive_search_seconds":0.0004246644675731659,"evaluations":397.3046875,"distances_sum":57.365783096291125}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":28}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00021426565945148468,"exhaustive_search_seconds":0.0004246644675731659,"evaluations":363.828125,"distances_sum":57.43727924581617}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111096, conf: {"restarts":30}, perf: {"precision":0.8611111111111096,"recall":0.8611111111111096,"f1":0.8611111111111096,"seconds":0.00019454210996627808,"exhaustive_search_seconds":0.0004246644675731659,"evaluations":374.625,"distances_sum":57.28802990633994}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8611111111111096,"state":{"restarts":30},"perf":{"precision":0.8611111111111096,"recall":0.8611111111111096,"f1":0.8611111111111096,"seconds":0.00019454210996627808,"exhaustive_search_seconds":0.0004246644675731659,"evaluations":374.625,"distances_sum":57.28802990633994}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8611111111111096,"state":{"restarts":30},"perf":{"precision":0.8611111111111096,"recall":0.8611111111111096,"f1":0.8611111111111096,"seconds":0.00019454210996627808,"exhaustive_search_seconds":0.0004246644675731659,"evaluations":374.625,"distances_sum":57.28802990633994}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(30), SatNeighborhood(32), 2020-09-02T00:47:31.714
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(158, 0.028413264f0), Item(6029, 0.029115278f0), Item(2077, 0.031955667f0), Item(5705, 0.034321442f0), Item(3270, 0.047018364f0), Item(6307, 0.05616911f0), Item(2691, 0.057693567f0), Item(144, 0.06370599f0), Item(6773, 0.06670398f0), Item(7029, 0.069529094f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0716279069767443, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9594494047619053,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.3984375,"distances_sum":570.7317143827677}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0837253057384757, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9476081210456218,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.3046875,"distances_sum":566.9719103127718}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0837253057384757,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9476081210456218,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.3046875,"distances_sum":566.9719103127718}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0857681432610744, conf: {"bsize":10}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497653388278392,"seconds":7.355585694313049e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.2890625,"distances_sum":566.6950638443232}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0857681432610744,"state":{"bsize":10},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497653388278392,"seconds":7.355585694313049e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.2890625,"distances_sum":566.6950638443232}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0857681432610744,"state":{"bsize":10},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497653388278392,"seconds":7.355585694313049e-6,"exhaustive_search_seconds":2.2426247596740723e-6,"evaluations":8.2890625,"distances_sum":566.6950638443232}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.11504424778761, conf: {"bsize":3}, perf: {"precision":0.9765624999999997,"recall":0.9765624999999997,"f1":0.9765624999999997,"seconds":1.736357808113098e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":31.78125,"distances_sum":284.84190912917256}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.4444444444444446, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":2.3206695914268494e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":40.5,"distances_sum":284.14543521776795}, best_list's length: 4, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.7345705653862753, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.027861773967743e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":36.203125,"distances_sum":284.15363055840135}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.11504424778761,"state":{"bsize":3},"perf":{"precision":0.9765624999999997,"recall":0.9765624999999997,"f1":0.9765624999999997,"seconds":1.736357808113098e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":31.78125,"distances_sum":284.84190912917256}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.261776061776062, conf: {"bsize":2}, perf: {"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4664605259895325e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":30.3515625,"distances_sum":286.6534242667258}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.261776061776062,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4664605259895325e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":30.3515625,"distances_sum":286.6534242667258}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.261776061776062,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4664605259895325e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":30.3515625,"distances_sum":286.6534242667258}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.261776061776062,"state":{"bsize":2},"perf":{"precision":0.9453124999999991,"recall":0.9453124999999991,"f1":0.9453124999999991,"seconds":1.4664605259895325e-5,"exhaustive_search_seconds":8.093193173408508e-6,"evaluations":30.3515625,"distances_sum":286.6534242667258}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.914285714285715,"state":{"bsize":2},"perf":{"precision":0.940104166666666,"recall":0.940104166666666,"f1":0.940104166666666,"seconds":3.647059202194214e-5,"exhaustive_search_seconds":3.1210482120513916e-5,"evaluations":59.0625,"distances_sum":124.85746897943318}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.914285714285715,"state":{"bsize":2},"perf":{"precision":0.940104166666666,"recall":0.940104166666666,"f1":0.940104166666666,"seconds":3.647059202194214e-5,"exhaustive_search_seconds":3.1210482120513916e-5,"evaluations":59.0625,"distances_sum":124.85746897943318}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.69310446877775, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":8.074939250946045e-5,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":105.59375,"distances_sum":54.847753282636404}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.69310446877775,"state":{"bsize":6},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":8.074939250946045e-5,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":105.59375,"distances_sum":54.847753282636404}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.81235647084969, conf: {"bsize":4}, perf: {"precision":0.9887152777777777,"recall":0.9887152777777777,"f1":0.9887152777777777,"seconds":0.00012942403554916382,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":105.4609375,"distances_sum":54.926831897348166}, best_list's length: 16, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.81235647084969,"state":{"bsize":4},"perf":{"precision":0.9887152777777777,"recall":0.9887152777777777,"f1":0.9887152777777777,"seconds":0.00012942403554916382,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":105.4609375,"distances_sum":54.926831897348166}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.6565944654282, conf: {"bsize":5}, perf: {"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":0.00010541267693042755,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":101.3515625,"distances_sum":54.875312730669975}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.6565944654282,"state":{"bsize":5},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":0.00010541267693042755,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":101.3515625,"distances_sum":54.875312730669975}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.6565944654282,"state":{"bsize":5},"perf":{"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":0.00010541267693042755,"exhaustive_search_seconds":0.00046624988317489624,"evaluations":101.3515625,"distances_sum":54.875312730669975}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-09-02T00:47:36.550
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1086, 0.04408997f0), Item(9304, 0.047596637f0), Item(1676, 0.048288066f0), Item(9396, 0.050200094f0), Item(7597, 0.050685864f0), Item(4019, 0.05163791f0), Item(8013, 0.055890046f0), Item(8115, 0.061147273f0), Item(4970, 0.062195953f0), Item(3776, 0.06347459f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
