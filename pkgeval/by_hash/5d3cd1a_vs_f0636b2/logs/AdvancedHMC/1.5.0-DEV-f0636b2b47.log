Julia Version 1.5.0-DEV.355
Commit f0636b2b47 (2020-02-27 13:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed ProgressMeter ──────────────── v1.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed SpecialFunctions ───────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed BinaryProvider ─────────────── v0.5.8
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Rmath ──────────────────────── v0.6.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed Requires ───────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.10
  Installed StatsBase ──────────────────── v0.32.1
  Installed MacroTools ─────────────────── v0.5.4
  Installed OrderedCollections ─────────── v1.1.0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Parameters ─────────────────── v0.12.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed LazyArrays ─────────────────── v0.15.0
#=#=#                                                                         #########                                                                 13.5%#################################################                         69.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ####                                                                       6.9%###################                                                       27.6%####################################                                      50.6%########################################################                  78.2%######################################################################## 100.0%
#=#=#                                                                         #######################################################                   76.6%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.8%#                                                                          2.0%##                                                                         3.7%####                                                                       6.3%#######                                                                   10.1%###########                                                               15.6%################                                                          22.7%########################                                                  33.5%##################################                                        48.0%##################################################                        70.3%######################################################################    98.1%######################################################################## 100.0%
#=#=#                                                                         #########################################################                 79.3%######################################################################## 100.0%
Status `/tmp/jl_Is2nNV/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.6.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.17.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.4.1
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.4.0
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.1.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [c7f686f2] MCMCChains v3.0.3
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.9.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.163575165
│   t_steps = 0.008002809
└   t_step / t_steps = 20.439718728761363
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl:71
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl:71
WARNING: importing deprecated binding TypeUtils.typename into DiffEqBase.
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/OrdinaryDiffEq/8Pn99/src/OrdinaryDiffEq.jl:4
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:71
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
in __parameterless_type at /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl
Sampling  0%|                               |  ETA: 5:42:30[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.007897261892892499
  log_density:                   -10.23100808924414
  hamiltonian_energy:            13.776809877667251
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.841239175423773
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▊                            |  ETA: 0:00:29[K
  iterations:                    1057
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9181785480966279
  log_density:                   -16.781477911938964
  hamiltonian_energy:            21.24189852244804
  hamiltonian_energy_error:      0.2315748620671485
  max_hamiltonian_energy_error:  0.2315748620671485
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7216986968869274
  nom_step_size:                 0.7216986968869274
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0444742799234408, 0.9570 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:23[K
  iterations:                    1324
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9112808695976033
  log_density:                   -15.601587299637298
  hamiltonian_energy:            21.259041443833024
  hamiltonian_energy_error:      -0.04010283520367963
  max_hamiltonian_energy_error:  0.38918054404924973
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.860391343125375
  nom_step_size:                 0.860391343125375
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0444742799234408, 0.9570 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:21[K
  iterations:                    1480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.806227332807673
  hamiltonian_energy:            21.88101023959765
  hamiltonian_energy_error:      -0.6060347392280754
  max_hamiltonian_energy_error:  -0.7388409566219352
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7107076443238527
  nom_step_size:                 0.7107076443238527
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0444742799234408, 0.9570 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:19[K
  iterations:                    1696
  n_steps:                       47
  is_accept:                     true
  acceptance_rate:               0.9831639771162795
  log_density:                   -12.934489808975894
  hamiltonian_energy:            15.392170673620697
  hamiltonian_energy_error:      0.027682594326090992
  max_hamiltonian_energy_error:  -0.21254442587787992
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7834399572723408
  nom_step_size:                 0.7834399572723408
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0444742799234408, 0.9570 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1908
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9047176008333063
  log_density:                   -14.551607843718553
  hamiltonian_energy:            21.064382645907195
  hamiltonian_energy_error:      -0.16897896728922746
  max_hamiltonian_energy_error:  0.4090965852574655
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8758853417535097
  nom_step_size:                 0.8758853417535097
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0444742799234408, 0.9570 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▊                         |  ETA: 0:00:15[K
  iterations:                    2227
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7111557843930827
  log_density:                   -12.590368609190659
  hamiltonian_energy:            18.7344618461899
  hamiltonian_energy_error:      0.06483557474756196
  max_hamiltonian_energy_error:  0.5967573639273382
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:13[K
  iterations:                    2522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9882420904669826
  log_density:                   -10.74623499066762
  hamiltonian_energy:            16.701103620810773
  hamiltonian_energy_error:      -0.5925284493705263
  max_hamiltonian_energy_error:  -0.5925284493705263
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▎                       |  ETA: 0:00:11[K
  iterations:                    2824
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9826194916052293
  log_density:                   -14.749087547101944
  hamiltonian_energy:            17.563841060954527
  hamiltonian_energy_error:      0.08899440049789575
  max_hamiltonian_energy_error:  -0.22935535852247568
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████                       |  ETA: 0:00:10[K
  iterations:                    3110
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.244020457005561
  hamiltonian_energy:            15.781456151405603
  hamiltonian_energy_error:      -0.4464238107708063
  max_hamiltonian_energy_error:  -0.4686865109820033
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:09[K
  iterations:                    3498
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.723900939142212
  hamiltonian_energy:            18.09678065941388
  hamiltonian_energy_error:      -0.08609299198150921
  max_hamiltonian_energy_error:  -0.10226458029381291
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3794
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9734989802722662
  log_density:                   -16.621329128871967
  hamiltonian_energy:            22.236532098941296
  hamiltonian_energy_error:      0.058038715272335395
  max_hamiltonian_energy_error:  -0.12356096142842077
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4190
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8066715824331229
  log_density:                   -13.848301181163023
  hamiltonian_energy:            20.819526990261735
  hamiltonian_energy_error:      -0.022212737699174312
  max_hamiltonian_energy_error:  0.4476413840827753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:07[K
  iterations:                    4504
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9594660817647844
  log_density:                   -12.295388221554813
  hamiltonian_energy:            15.529859882379617
  hamiltonian_energy_error:      -0.10110337249176382
  max_hamiltonian_energy_error:  -0.26908134987463406
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:06[K
  iterations:                    4895
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9032052989544687
  log_density:                   -13.291042916850062
  hamiltonian_energy:            14.875204339267253
  hamiltonian_energy_error:      0.22254003502642483
  max_hamiltonian_energy_error:  0.2240847001416828
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▌                 |  ETA: 0:00:06[K
  iterations:                    5202
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8641552135210863
  log_density:                   -14.211166890295686
  hamiltonian_energy:            20.611803308224665
  hamiltonian_energy_error:      -0.10709475156312465
  max_hamiltonian_energy_error:  0.39567620484716315
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▍                |  ETA: 0:00:05[K
  iterations:                    5573
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9590963081891525
  log_density:                   -15.215636355055018
  hamiltonian_energy:            24.033043654549672
  hamiltonian_energy_error:      -0.446246828516756
  max_hamiltonian_energy_error:  -0.45382037467846814
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:05[K
  iterations:                    5877
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7862954777739821
  log_density:                   -13.764621617298454
  hamiltonian_energy:            19.787640113901517
  hamiltonian_energy_error:      0.030242686670185037
  max_hamiltonian_energy_error:  0.4475845316573377
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████               |  ETA: 0:00:04[K
  iterations:                    6214
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6163374390388526
  log_density:                   -18.96078159357496
  hamiltonian_energy:            24.06459612902917
  hamiltonian_energy_error:      0.8178865989551767
  max_hamiltonian_energy_error:  0.9683103740321357
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6455
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8213766697018219
  log_density:                   -10.737531333001908
  hamiltonian_energy:            15.345617500636541
  hamiltonian_energy_error:      -0.04169305990036243
  max_hamiltonian_energy_error:  0.41194832185031593
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:04[K
  iterations:                    6823
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9977260663483994
  log_density:                   -12.893808898092592
  hamiltonian_energy:            16.422706632695107
  hamiltonian_energy_error:      -0.10951926514119137
  max_hamiltonian_energy_error:  -0.1996791580883297
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7140
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6061381719213753
  log_density:                   -15.586754048593573
  hamiltonian_energy:            16.086191011131504
  hamiltonian_energy_error:      0.7376243711559773
  max_hamiltonian_energy_error:  0.7376243711559773
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7456
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9940340580869788
  log_density:                   -19.219479113026708
  hamiltonian_energy:            24.707337410648005
  hamiltonian_energy_error:      0.025133840513479555
  max_hamiltonian_energy_error:  -0.5864271315071505
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▏          |  ETA: 0:00:03[K
  iterations:                    7788
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9541359129377806
  log_density:                   -14.357855238018985
  hamiltonian_energy:            21.532318294295187
  hamiltonian_energy_error:      -0.2643293152790953
  max_hamiltonian_energy_error:  -0.2643293152790953
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:03[K
  iterations:                    8013
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8751604512378525
  log_density:                   -16.184876281811817
  hamiltonian_energy:            20.82393226922967
  hamiltonian_energy_error:      0.2109297461642612
  max_hamiltonian_energy_error:  0.3171944367859716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8215
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9066866334189397
  log_density:                   -16.107752075242168
  hamiltonian_energy:            27.673409351835502
  hamiltonian_energy_error:      -0.6034937424258295
  max_hamiltonian_energy_error:  -0.6809189164928675
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████         |  ETA: 0:00:02[K
  iterations:                    8538
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7773828859106112
  log_density:                   -12.087177584270808
  hamiltonian_energy:            17.886252042611513
  hamiltonian_energy_error:      -0.008388172027657959
  max_hamiltonian_energy_error:  0.5009476182072525
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▏       |  ETA: 0:00:02[K
  iterations:                    8941
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9191484408312743
  log_density:                   -13.077580621107508
  hamiltonian_energy:            16.33580013576264
  hamiltonian_energy_error:      0.01699498847815306
  max_hamiltonian_energy_error:  0.25580013156372416
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9161
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7852365929969578
  log_density:                   -10.967262807149284
  hamiltonian_energy:            16.246353438397634
  hamiltonian_energy_error:      -0.038345449085479544
  max_hamiltonian_energy_error:  0.49036949688107256
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9530
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6172865843266215
  log_density:                   -18.00002610081233
  hamiltonian_energy:            22.746865614014833
  hamiltonian_energy_error:      0.7401644646541712
  max_hamiltonian_energy_error:  1.0060801309658487
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9853
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9948253201408521
  log_density:                   -12.740032313623322
  hamiltonian_energy:            16.89137224620486
  hamiltonian_energy_error:      -0.31962208076293663
  max_hamiltonian_energy_error:  -0.5166448102663388
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▍    |  ETA: 0:00:01[K
  iterations:                    10230
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8699174620873799
  log_density:                   -13.873996016012523
  hamiltonian_energy:            15.006199463760206
  hamiltonian_energy_error:      0.27574676029330547
  max_hamiltonian_energy_error:  0.27574676029330547
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10553
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.853652279489551
  log_density:                   -10.054048398757947
  hamiltonian_energy:            16.64649168572321
  hamiltonian_energy_error:      -0.44398079543564606
  max_hamiltonian_energy_error:  0.45633285786160727
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10952
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9986169346413434
  log_density:                   -11.526101549302883
  hamiltonian_energy:            16.08246289773775
  hamiltonian_energy_error:      -0.38747087895954024
  max_hamiltonian_energy_error:  -0.38747087895954024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11273
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8223359282685279
  log_density:                   -12.912810178245522
  hamiltonian_energy:            17.831982921031567
  hamiltonian_energy_error:      0.012718079617950906
  max_hamiltonian_energy_error:  0.40301653602804066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11669
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6081285017382151
  log_density:                   -19.667756707379787
  hamiltonian_energy:            22.65665270138757
  hamiltonian_energy_error:      0.9691028578729615
  max_hamiltonian_energy_error:  1.010184817314098
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████|  ETA: 0:00:00[K
  iterations:                    11986
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8662385946290032
  log_density:                   -13.132845699094162
  hamiltonian_energy:            19.06901366775833
  hamiltonian_energy_error:      -0.07861276542825735
  max_hamiltonian_energy_error:  0.42954700840145676
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8363613749416127
  log_density:                   -18.836171675204834
  hamiltonian_energy:            22.098993190002943
  hamiltonian_energy_error:      0.5015410757250081
  max_hamiltonian_energy_error:  0.580564472802461
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7121512219165493
  nom_step_size:                 0.7121512219165493
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0654043777542312, 1.0047 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.478164441 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0654043777542312, 1.0047 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.712), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0763078789575902
└   average_acceptance_rate = 0.860664762674144
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.939599281 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠢⠤⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢱⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠈⡆⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠢⢄⡀⠀⡸⠀⠀⢱⠀⢀⡠⠴│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⡰⠊⠀⠀⠀⠈⠢⡇⠀⠀⠈⠉⠁⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠇⠀⠀⠀⠀⠀⡠⠊⠑⢄⠀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⠀⡠⠎⠀⠀⠀⢀⠤⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡵⡀⠀⢀⠎⠀⣀⡠⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠘⡵⢤⠞⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
