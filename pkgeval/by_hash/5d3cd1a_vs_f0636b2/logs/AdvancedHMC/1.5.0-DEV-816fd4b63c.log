Julia Version 1.5.0-DEV.359
Commit 816fd4b63c (2020-02-27 15:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Requires ───────────────────── v1.0.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed LazyArrays ─────────────────── v0.15.0
  Installed DataStructures ─────────────── v0.17.10
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StaticArrays ───────────────── v0.12.1
  Installed CompilerSupportLibraries_jll ─ v0.2.0+1
  Installed Missings ───────────────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+2
  Installed ArgCheck ───────────────────── v2.0.0
  Installed FillArrays ─────────────────── v0.8.5
  Installed StatsBase ──────────────────── v0.32.1
  Installed BinaryProvider ─────────────── v0.5.8
  Installed MacroTools ─────────────────── v0.5.4
  Installed Rmath ──────────────────────── v0.6.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed StatsFuns ──────────────────── v0.9.4
#=#=#                                                                         ##                                                                         3.7%########                                                                  11.7%################                                                          22.2%########################                                                  34.0%###################################                                       49.4%#################################################                         68.5%##################################################################        91.9%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [e66e0078] + CompilerSupportLibraries_jll v0.2.0+1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.10
  [1a297f60] + FillArrays v0.8.5
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.0
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+2
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         #########################                                                 34.9%####################################################################      94.6%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #########################################                                 57.5%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                                                                                                    0.3%##                                                                         3.3%#####                                                                      7.0%########                                                                  12.5%#############                                                             18.7%###################                                                       26.7%###########################                                               38.5%#####################################                                     52.4%###################################################                       72.1%####################################################################      95.8%######################################################################## 100.0%
Status `/tmp/jl_jdi3iC/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.6.0
  [e66e0078] CompilerSupportLibraries_jll v0.2.0+1
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.10
  [2b5f629d] DiffEqBase v6.17.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.4.1
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.4.0
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+4
  [1a297f60] FillArrays v0.8.5
  [6a86dc24] FiniteDiff v2.2.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.1.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.15.0
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [c7f686f2] MCMCChains v3.0.3
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+2
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.1
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.9.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.146545406
│   t_steps = 0.007582143
└   t_step / t_steps = 19.327702735229337
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl:71
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl:71
WARNING: importing deprecated binding TypeUtils.typename into DiffEqBase.
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/OrdinaryDiffEq/8Pn99/src/OrdinaryDiffEq.jl:4
WARNING: Compat.TypeUtils is deprecated, call the respective Base functions directly
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:71
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
WARNING: TypeUtils.typename is deprecated, use Base.typename instead.
  likely near /home/pkgeval/.julia/packages/AdvancedHMC/haUrH/test/integrator.jl:74
in __parameterless_type at /home/pkgeval/.julia/packages/DiffEqBase/rcca4/src/utils.jl
Sampling  0%|                               |  ETA: 5:23:36[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               7.63357830969092e-5
  log_density:                   -11.33520539722549
  hamiltonian_energy:            18.08342285013009
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  9.480368750620503
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▏                            |  ETA: 0:00:34[K
  iterations:                    831
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.7749648019227326
  log_density:                   -15.099993282578957
  hamiltonian_energy:            19.902528639270262
  hamiltonian_energy_error:      0.2836851877455473
  max_hamiltonian_energy_error:  0.7492180603865535
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7461834548584196
  nom_step_size:                 0.7461834548584196
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.969890321589828, 0.87509 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  8%|██▋                            |  ETA: 0:00:29[K
  iterations:                    1000
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.09380826480403419
  log_density:                   -13.998459031668183
  hamiltonian_energy:            20.275604265649136
  hamiltonian_energy_error:      0.3762817402717502
  max_hamiltonian_energy_error:  6.471045672231057
  tree_depth:                    7
  numerical_error:               false
  step_size:                     1.5713304522499452
  nom_step_size:                 1.5713304522499452
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8313117128490151, 0.8445 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▍                           |  ETA: 0:00:22[K
  iterations:                    1299
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9586619878493269
  log_density:                   -13.441217431141848
  hamiltonian_energy:            16.160023812697904
  hamiltonian_energy_error:      0.10382257575298581
  max_hamiltonian_energy_error:  0.20427456500440044
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9634575793262476
  nom_step_size:                 0.9634575793262476
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8313117128490151, 0.8445 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:19[K
  iterations:                    1561
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9298567676137425
  log_density:                   -13.961085481097758
  hamiltonian_energy:            19.624030461318547
  hamiltonian_energy_error:      -0.21090395065962753
  max_hamiltonian_energy_error:  0.31926414864278385
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8199219470164494
  nom_step_size:                 0.8199219470164494
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8313117128490151, 0.8445 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:17[K
  iterations:                    1805
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9381493461567642
  log_density:                   -12.280066391102412
  hamiltonian_energy:            14.977193553563618
  hamiltonian_energy_error:      -0.14429302148518097
  max_hamiltonian_energy_error:  -0.4295507765090658
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8910792772705269
  nom_step_size:                 0.8910792772705269
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8313117128490151, 0.8445 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████▏                         |  ETA: 0:00:15[K
  iterations:                    1977
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9969849736717002
  log_density:                   -11.358415215389396
  hamiltonian_energy:            15.024892294626014
  hamiltonian_energy_error:      -0.11499838439211807
  max_hamiltonian_energy_error:  -0.149178430027753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.4982034149386758
  nom_step_size:                 0.4982034149386758
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|█████▉                         |  ETA: 0:00:13[K
  iterations:                    2288
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.522247671050778
  hamiltonian_energy:            22.354230122823438
  hamiltonian_energy_error:      -1.1114905174536105
  max_hamiltonian_energy_error:  -1.1114905174536105
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|███████                        |  ETA: 0:00:11[K
  iterations:                    2692
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7421832086524635
  log_density:                   -16.17446398715271
  hamiltonian_energy:            25.50691126121582
  hamiltonian_energy_error:      0.007176935939355644
  max_hamiltonian_energy_error:  0.5983615617467137
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:10[K
  iterations:                    3016
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9394100161506261
  log_density:                   -15.051164765984144
  hamiltonian_energy:            18.131317365439084
  hamiltonian_energy_error:      0.1761595137814318
  max_hamiltonian_energy_error:  0.18375889404232737
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▉                      |  ETA: 0:00:09[K
  iterations:                    3413
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7629210907324456
  log_density:                   -13.595958358866067
  hamiltonian_energy:            20.884477343301125
  hamiltonian_energy_error:      -0.031062808958324695
  max_hamiltonian_energy_error:  0.5319971875219274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:07[K
  iterations:                    3888
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9541596677129464
  log_density:                   -9.757418026749496
  hamiltonian_energy:            14.635598342449745
  hamiltonian_energy_error:      -0.507781712815401
  max_hamiltonian_energy_error:  -0.507781712815401
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4218
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8291274617367405
  log_density:                   -17.47430576291464
  hamiltonian_energy:            26.142668256510547
  hamiltonian_energy_error:      0.04259723470071464
  max_hamiltonian_energy_error:  0.3467458019637881
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 39%|████████████                   |  ETA: 0:00:06[K
  iterations:                    4634
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8547872286805267
  log_density:                   -12.595553757301387
  hamiltonian_energy:            17.39369689551616
  hamiltonian_energy_error:      0.005304746984698738
  max_hamiltonian_energy_error:  0.2958105632916279
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    4968
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5588337855931441
  log_density:                   -12.917363406682117
  hamiltonian_energy:            22.39168970205104
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  0.9148188495188947
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5367
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9696314429015137
  log_density:                   -18.45040181502786
  hamiltonian_energy:            28.902180017857848
  hamiltonian_energy_error:      -0.29028742361195015
  max_hamiltonian_energy_error:  -0.2984517948917791
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▊                |  ETA: 0:00:04[K
  iterations:                    5706
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9997217014360829
  log_density:                   -11.003116745613404
  hamiltonian_energy:            12.556139267233757
  hamiltonian_energy_error:      -0.07001782281197322
  max_hamiltonian_energy_error:  -0.14458874001354616
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6096
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9216240225695763
  log_density:                   -16.062761261521054
  hamiltonian_energy:            18.55126507226025
  hamiltonian_energy_error:      0.2841296220343068
  max_hamiltonian_energy_error:  0.2841296220343068
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▋              |  ETA: 0:00:04[K
  iterations:                    6429
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8762697782899853
  log_density:                   -14.688351585517193
  hamiltonian_energy:            19.2483134724839
  hamiltonian_energy_error:      0.07768520945270652
  max_hamiltonian_energy_error:  0.4550417376300615
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6791
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9861294888685508
  log_density:                   -14.706893709106392
  hamiltonian_energy:            16.435040473919727
  hamiltonian_energy_error:      0.027032655347341006
  max_hamiltonian_energy_error:  -0.48433415980901273
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7179
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8416625813897235
  log_density:                   -12.388044024983168
  hamiltonian_energy:            18.818595831309636
  hamiltonian_energy_error:      -0.17782803015814608
  max_hamiltonian_energy_error:  0.40649095090092047
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7490
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9968914500428784
  log_density:                   -13.358199315788138
  hamiltonian_energy:            18.208191950931102
  hamiltonian_energy_error:      -0.20390689380745286
  max_hamiltonian_energy_error:  -0.23370358248863
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:02[K
  iterations:                    7887
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8969792021134673
  log_density:                   -14.629612278344696
  hamiltonian_energy:            20.699641404384884
  hamiltonian_energy_error:      -0.029844195031220266
  max_hamiltonian_energy_error:  0.28256574476601415
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8273
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9983684314631763
  log_density:                   -13.556171232201816
  hamiltonian_energy:            18.89623309740018
  hamiltonian_energy_error:      -0.267706069167275
  max_hamiltonian_energy_error:  -0.267706069167275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8581
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9901505369102442
  log_density:                   -12.93985631161658
  hamiltonian_energy:            17.28548360559427
  hamiltonian_energy_error:      -0.20792466582384606
  max_hamiltonian_energy_error:  -0.29421590217294025
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|███████████████████████        |  ETA: 0:00:02[K
  iterations:                    8893
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.228287695136062
  hamiltonian_energy:            14.198106792532442
  hamiltonian_energy_error:      -0.21122337398082358
  max_hamiltonian_energy_error:  -0.5112558725632539
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|████████████████████████       |  ETA: 0:00:01[K
  iterations:                    9286
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8054124668009516
  log_density:                   -12.55719151422173
  hamiltonian_energy:            14.343778862574037
  hamiltonian_energy_error:      0.25960029984867816
  max_hamiltonian_energy_error:  0.32942339563615164
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▉      |  ETA: 0:00:01[K
  iterations:                    9621
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6823548080001555
  log_density:                   -13.868372373755971
  hamiltonian_energy:            16.614833432436487
  hamiltonian_energy_error:      0.40100804824477265
  max_hamiltonian_energy_error:  0.5840848218786547
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10031
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7939663373868535
  log_density:                   -13.999121988517778
  hamiltonian_energy:            15.351041550759444
  hamiltonian_energy_error:      0.4377700184277433
  max_hamiltonian_energy_error:  0.4377700184277433
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▊    |  ETA: 0:00:01[K
  iterations:                    10372
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9903412718225569
  log_density:                   -14.607545917194333
  hamiltonian_energy:            20.59343577526341
  hamiltonian_energy_error:      -0.19508038777533088
  max_hamiltonian_energy_error:  -0.33735952174634676
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10772
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5437274025284147
  log_density:                   -14.078555610344523
  hamiltonian_energy:            22.757143288232587
  hamiltonian_energy_error:      0.1656076762085874
  max_hamiltonian_energy_error:  0.9576681181808233
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▋  |  ETA: 0:00:00[K
  iterations:                    11100
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7670658099025847
  log_density:                   -14.561714215656817
  hamiltonian_energy:            16.601785685969443
  hamiltonian_energy_error:      0.4338739126507285
  max_hamiltonian_energy_error:  0.47988676241161343
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▋ |  ETA: 0:00:00[K
  iterations:                    11487
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9787521307546888
  log_density:                   -11.662377467031797
  hamiltonian_energy:            14.226919139428295
  hamiltonian_energy_error:      -0.02213358831349943
  max_hamiltonian_energy_error:  0.0590606619618228
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11817
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8920935350393024
  log_density:                   -11.635821169594552
  hamiltonian_energy:            15.223119644157855
  hamiltonian_energy_error:      -0.01654472413543928
  max_hamiltonian_energy_error:  0.21049231937702828
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8830684094004714
  log_density:                   -16.47288017617033
  hamiltonian_energy:            18.510582613785733
  hamiltonian_energy_error:      0.3736263631738268
  max_hamiltonian_energy_error:  0.3736263631738268
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7515774830170929
  nom_step_size:                 0.7515774830170929
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.977210151329317, 0.94209 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.850525705 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.977210151329317, 0.94209 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.752), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0664317095920446
└   average_acceptance_rate = 0.8582531509837161
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.982708572 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢆⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢆⠀⠀⡜⢱⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠣⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠈⢆⡸⠀⠀⢣│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠈⠃⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⢸⡇⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⢀⠇⠸⡀⠀⠀⢀⠎⠑⢄⣀⣀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠃⠀⠀⠀⡸⠀⠀⢣⢀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⡜⠁⠀⠀⠀⢀⣀⠇⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡱⡀⠀⠀⡜⠀⠀⣀⠤⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⠳⡤⠞⠒⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
