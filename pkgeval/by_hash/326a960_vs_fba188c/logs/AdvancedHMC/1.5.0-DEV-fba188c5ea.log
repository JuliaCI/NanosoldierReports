Julia Version 1.5.0-DEV.162
Commit fba188c5ea (2020-01-28 03:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed SortingAlgorithms ── v0.3.1
 Installed Requires ─────────── v1.0.0
 Installed ProgressMeter ────── v1.2.0
 Installed Missings ─────────── v0.4.3
 Installed AdvancedHMC ──────── v0.2.20
 Installed Parameters ───────── v0.12.0
 Installed StaticArrays ─────── v0.12.1
 Installed StatsBase ────────── v0.32.0
 Installed ArgCheck ─────────── v1.0.1
 Installed SpecialFunctions ─── v0.9.0
 Installed DataAPI ──────────── v1.1.0
 Installed BinaryProvider ───── v0.5.8
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed ArrayLayouts ─────── v0.1.5
 Installed Rmath ────────────── v0.6.0
 Installed DataStructures ───── v0.17.9
 Installed MacroTools ───────── v0.5.3
 Installed FillArrays ───────── v0.8.4
 Installed InplaceOps ───────── v0.3.0
 Installed LazyArrays ───────── v0.14.11
 Installed OrderedCollections ─ v1.1.0
 Installed StatsFuns ────────── v0.9.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_gPmz77/Project.toml`
 [no changes]
  Updating `/tmp/jl_gPmz77/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed Tracker ───────────────────── v0.2.6
 Installed Zygote ────────────────────── v0.4.6
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed UnicodePlots ──────────────── v1.1.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed DistributionsAD ───────────── v0.2.0
 Installed Distributions ─────────────── v0.22.3
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed NNlib ─────────────────────── v0.6.4
 Installed ZygoteRules ───────────────── v0.2.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed TableTraits ───────────────── v1.0.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed Parsers ───────────────────── v0.3.10
 Installed FFTW ──────────────────────── v1.2.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed MCMCChains ────────────────── v1.0.2
 Installed RangeArrays ───────────────── v0.3.2
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed IntervalSets ──────────────── v0.3.2
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed SimpleTraits ──────────────── v0.9.1
 Installed Compat ────────────────────── v2.2.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed KernelDensity ─────────────── v0.5.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed DiffEqBase ────────────────── v6.13.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.11
 Installed TransformVariables ────────── v0.3.9
 Installed Showoff ───────────────────── v0.3.1
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed Combinatorics ─────────────── v0.7.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed SparseDiffTools ───────────── v1.3.3
 Installed RecipesBase ───────────────── v0.7.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed DiffResults ───────────────── v1.0.2
 Installed DocStringExtensions ───────── v0.8.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed FiniteDiff ────────────────── v2.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed ExponentialUtilities ──────── v1.6.0
 Installed Optim ─────────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed Tables ────────────────────── v0.2.11
 Installed Arpack ────────────────────── v0.4.0
 Installed OffsetArrays ──────────────── v1.0.2
 Installed PositiveFactorizations ────── v0.2.3
 Installed DataFrames ────────────────── v0.20.0
 Installed Inflate ───────────────────── v0.1.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed DiffRules ─────────────────── v1.0.0
 Installed IRTools ───────────────────── v0.3.1
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Adapt ─────────────────────── v1.0.0
 Installed ChainRulesCore ────────────── v0.6.1
 Installed Roots ─────────────────────── v0.8.4
 Installed RecursiveFactorization ────── v0.1.0
 Installed Polynomials ───────────────── v0.6.0
 Installed IterTools ─────────────────── v1.3.0
 Installed LineSearches ──────────────── v7.0.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Ratios ────────────────────── v0.3.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Libtask ───────────────────── v0.3.1
 Installed AxisArrays ────────────────── v0.4.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Interpolations ────────────── v0.12.7
 Installed LightGraphs ───────────────── v1.3.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed BenchmarkTools ────────────── v0.4.3
 Installed WoodburyMatrices ──────────── v0.5.0
  Updating `/tmp/jl_LSSDOo/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_LSSDOo/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_JT6tqt/Project.toml`
 [no changes]
  Updating `/tmp/jl_JT6tqt/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_iARFFy/Project.toml`
 [no changes]
  Updating `/tmp/jl_iARFFy/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_LsiyNG/Project.toml`
 [no changes]
  Updating `/tmp/jl_LsiyNG/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_LSSDOo/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.19137625
│   t_steps = 0.008333257
└   t_step / t_steps = 22.96536036270092
Sampling  0%|                               |  ETA: 6:04:19[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0033034450706631614
  log_density:                   -10.475562766162492
  hamiltonian_energy:            14.312311444601278
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  5.712789394250809
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████                           |  ETA: 0:00:20[K
  iterations:                    1556
  n_steps:                       55
  is_accept:                     true
  acceptance_rate:               0.9504112743214974
  log_density:                   -13.563672121958483
  hamiltonian_energy:            18.558010699889888
  hamiltonian_energy_error:      -0.18710766918920996
  max_hamiltonian_energy_error:  -0.42361405994782686
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8429911522175405
  nom_step_size:                 0.8429911522175405
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7545134437967597, 0.9121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:18[K
  iterations:                    1757
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9291063210519162
  log_density:                   -13.239861638759729
  hamiltonian_energy:            20.23741598491711
  hamiltonian_energy_error:      -0.6152303502690408
  max_hamiltonian_energy_error:  -0.6766920140143355
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9413646520054948
  nom_step_size:                 0.9413646520054948
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.7545134437967597, 0.9121 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:16[K
  iterations:                    2016
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7724234802581081
  log_density:                   -15.316382707719551
  hamiltonian_energy:            20.13504973765077
  hamiltonian_energy_error:      0.2020316515989542
  max_hamiltonian_energy_error:  0.5161587328596866
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 19%|██████                         |  ETA: 0:00:14[K
  iterations:                    2303
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.989048581124587
  log_density:                   -11.769944858213037
  hamiltonian_energy:            17.031700336551022
  hamiltonian_energy_error:      -0.31266664027364754
  max_hamiltonian_energy_error:  -0.3344338551386805
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████                        |  ETA: 0:00:12[K
  iterations:                    2724
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9800299191770189
  log_density:                   -12.405160731785056
  hamiltonian_energy:            19.399377859955944
  hamiltonian_energy_error:      -0.3756050667173234
  max_hamiltonian_energy_error:  -0.3756050667173234
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:11[K
  iterations:                    2911
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9849971394726091
  log_density:                   -12.193681664180936
  hamiltonian_energy:            15.228276628438945
  hamiltonian_energy_error:      -0.004596848515925345
  max_hamiltonian_energy_error:  0.051328332591271675
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▌                      |  ETA: 0:00:10[K
  iterations:                    3279
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7329532452485432
  log_density:                   -17.99132249843568
  hamiltonian_energy:            21.140757684975966
  hamiltonian_energy_error:      0.5128865655829635
  max_hamiltonian_energy_error:  0.5340135937459927
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████▏                     |  ETA: 0:00:09[K
  iterations:                    3527
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9995086126002456
  log_density:                   -13.56815280042584
  hamiltonian_energy:            17.272641254456456
  hamiltonian_energy_error:      -0.027574483503293834
  max_hamiltonian_energy_error:  -0.07193770328939664
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3841
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9069873553834328
  log_density:                   -12.293201131323793
  hamiltonian_energy:            15.924057949845084
  hamiltonian_energy_error:      0.024462154076669407
  max_hamiltonian_energy_error:  0.17337785537839245
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4206
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9809525337191717
  log_density:                   -15.741998886030498
  hamiltonian_energy:            19.92034422670012
  hamiltonian_energy_error:      -0.022388414494717068
  max_hamiltonian_energy_error:  -0.3289584584857401
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:07[K
  iterations:                    4546
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8003449787744176
  log_density:                   -14.883650443101663
  hamiltonian_energy:            18.28292853403372
  hamiltonian_energy_error:      0.29568266721870984
  max_hamiltonian_energy_error:  0.43160382645688244
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:06[K
  iterations:                    4886
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.645997030596655
  log_density:                   -12.121995422456035
  hamiltonian_energy:            18.344426467194825
  hamiltonian_energy_error:      0.1272602340432094
  max_hamiltonian_energy_error:  0.6844522967686402
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:06[K
  iterations:                    5155
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6763211354379415
  log_density:                   -16.52888532788889
  hamiltonian_energy:            18.45350633288611
  hamiltonian_energy_error:      0.5330279107123026
  max_hamiltonian_energy_error:  0.5330279107123026
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5452
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9463509374393283
  log_density:                   -10.750353430354124
  hamiltonian_energy:            16.371832910749802
  hamiltonian_energy_error:      -0.29991432318758626
  max_hamiltonian_energy_error:  -0.33877327510151645
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:05[K
  iterations:                    5745
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5671306786685612
  log_density:                   -14.622833203587108
  hamiltonian_energy:            19.59857273241021
  hamiltonian_energy_error:      0.3794400751215896
  max_hamiltonian_energy_error:  0.7699402882568727
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6164
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.980697291209631
  log_density:                   -15.97542293909278
  hamiltonian_energy:            24.647110426303847
  hamiltonian_energy_error:      -0.3404469034128077
  max_hamiltonian_energy_error:  -0.3878924447036489
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6519
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9091504866300266
  log_density:                   -13.183382384323203
  hamiltonian_energy:            17.468225716688963
  hamiltonian_energy_error:      0.05318720582804559
  max_hamiltonian_energy_error:  0.1825149106386661
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 58%|█████████████████▉             |  ETA: 0:00:03[K
  iterations:                    6931
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9556885720312839
  log_density:                   -12.929404199543226
  hamiltonian_energy:            16.859334511401165
  hamiltonian_energy_error:      0.01017725833106553
  max_hamiltonian_energy_error:  0.09156646846064476
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 61%|██████████████████▉            |  ETA: 0:00:03[K
  iterations:                    7318
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.44994625879325
  hamiltonian_energy:            18.585590749753216
  hamiltonian_energy_error:      -0.40238416325762927
  max_hamiltonian_energy_error:  -0.6692631515353114
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 64%|███████████████████▊           |  ETA: 0:00:03[K
  iterations:                    7660
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9392831875457448
  log_density:                   -11.395538511271212
  hamiltonian_energy:            15.215419651023083
  hamiltonian_energy_error:      -0.057819440493576124
  max_hamiltonian_energy_error:  0.1575300409858773
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 67%|████████████████████▊          |  ETA: 0:00:03[K
  iterations:                    8018
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8891398700037507
  log_density:                   -14.971718811129161
  hamiltonian_energy:            19.118064863110188
  hamiltonian_energy_error:      0.19134590204449253
  max_hamiltonian_energy_error:  0.26257872917925695
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▊         |  ETA: 0:00:02[K
  iterations:                    8412
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8382940292899163
  log_density:                   -14.249804968530523
  hamiltonian_energy:            27.264130446676667
  hamiltonian_energy_error:      -0.3585945406009152
  max_hamiltonian_energy_error:  0.6375735158352
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:02[K
  iterations:                    8769
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.886289439548605
  log_density:                   -16.631988632953938
  hamiltonian_energy:            21.10889005142187
  hamiltonian_energy_error:      0.21465338068493622
  max_hamiltonian_energy_error:  0.24572457552381266
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▋       |  ETA: 0:00:02[K
  iterations:                    9162
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9122343548984571
  log_density:                   -12.954487374373251
  hamiltonian_energy:            18.978353251070647
  hamiltonian_energy_error:      -0.1948808221567795
  max_hamiltonian_energy_error:  -0.34976691929191617
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9523
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8418534633240906
  log_density:                   -13.246750010957504
  hamiltonian_energy:            20.301207203541303
  hamiltonian_energy_error:      -0.00496183312148446
  max_hamiltonian_energy_error:  0.4162262114157542
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9905
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.329537789814658
  hamiltonian_energy:            18.209630345994903
  hamiltonian_energy_error:      -0.041378456156245136
  max_hamiltonian_energy_error:  -0.3874868426986282
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10277
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7394449502283564
  log_density:                   -12.486036655489968
  hamiltonian_energy:            20.12388647028471
  hamiltonian_energy_error:      0.0564540653286727
  max_hamiltonian_energy_error:  0.6772343565702137
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▍   |  ETA: 0:00:01[K
  iterations:                    10618
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7263591714825397
  log_density:                   -13.32158799170167
  hamiltonian_energy:            16.38777558294926
  hamiltonian_energy_error:      0.24072748157212587
  max_hamiltonian_energy_error:  0.4474958448883619
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:01[K
  iterations:                    11055
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9694863248432307
  log_density:                   -12.58706922801942
  hamiltonian_energy:            15.355233561033705
  hamiltonian_energy_error:      -0.07171254445976594
  max_hamiltonian_energy_error:  -0.2550064458742476
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▍ |  ETA: 0:00:00[K
  iterations:                    11380
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8300514138958884
  log_density:                   -19.590338074321032
  hamiltonian_energy:            24.399345251503014
  hamiltonian_energy_error:      0.4036096947620109
  max_hamiltonian_energy_error:  0.4036096947620109
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11802
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9830037936500203
  log_density:                   -12.531991076181015
  hamiltonian_energy:            17.70934625650031
  hamiltonian_energy_error:      -0.24361998226827097
  max_hamiltonian_energy_error:  -0.3549048332844933
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9512467826401872
  log_density:                   -12.788488180159167
  hamiltonian_energy:            18.918428231551307
  hamiltonian_energy_error:      -0.2528841973987461
  max_hamiltonian_energy_error:  -0.35733888733895824
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6592751868011224
  nom_step_size:                 0.6592751868011224
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9964562771253589, 0.9608 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.158444941 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9964562771253589, 0.9608 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.659), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.081009808512036
└   average_acceptance_rate = 0.8833024942712333
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.139073628 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⢰⠁⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⡎⠈⠢⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠑⢄⡠⠊⠑⡄⡸⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠁⠀⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⢡⢆⠀⠀⠀⡀⠀⠀⠀⢀⡠⠒⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡄⠀⠀⠀⠀⡰⢡⠃⠀⠣⡠⠊⠈⠉⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡵⡀⠀⢀⡜⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠈⠳⡴⠓⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
