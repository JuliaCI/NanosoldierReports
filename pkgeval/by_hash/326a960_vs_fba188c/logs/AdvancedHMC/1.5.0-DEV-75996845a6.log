Julia Version 1.5.0-DEV.164
Commit 75996845a6 (2020-01-28 14:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataAPI ──────────── v1.1.0
 Installed Missings ─────────── v0.4.3
 Installed Rmath ────────────── v0.6.0
 Installed FillArrays ───────── v0.8.4
 Installed Parameters ───────── v0.12.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed BinaryProvider ───── v0.5.8
 Installed LazyArrays ───────── v0.14.11
 Installed StatsBase ────────── v0.32.0
 Installed Requires ─────────── v1.0.0
 Installed InplaceOps ───────── v0.3.0
 Installed MacroTools ───────── v0.5.3
 Installed StaticArrays ─────── v0.12.1
 Installed OrderedCollections ─ v1.1.0
 Installed SpecialFunctions ─── v0.9.0
 Installed DataStructures ───── v0.17.9
 Installed ProgressMeter ────── v1.2.0
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed SortingAlgorithms ── v0.3.1
 Installed ArgCheck ─────────── v1.0.1
 Installed ArrayLayouts ─────── v0.1.5
 Installed StatsFuns ────────── v0.9.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_qKiDrg/Project.toml`
 [no changes]
  Updating `/tmp/jl_qKiDrg/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed Adapt ─────────────────────── v1.0.0
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Bijectors ─────────────────── v0.5.2
 Installed Zygote ────────────────────── v0.4.6
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Reexport ──────────────────── v0.2.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed MuladdMacro ───────────────── v0.2.2
 Installed Distributions ─────────────── v0.22.3
 Installed UnicodePlots ──────────────── v1.1.0
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed Turing ────────────────────── v0.8.3
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed Inflate ───────────────────── v0.1.1
 Installed Showoff ───────────────────── v0.3.1
 Installed FiniteDiff ────────────────── v2.1.0
 Installed Ratios ────────────────────── v0.3.1
 Installed MCMCChains ────────────────── v1.0.2
 Installed IterativeSolvers ──────────── v0.8.1
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed DistributionsAD ───────────── v0.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Optim ─────────────────────── v0.20.0
 Installed LightGraphs ───────────────── v1.3.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed AxisArrays ────────────────── v0.4.1
 Installed QuadGK ────────────────────── v2.3.1
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Compat ────────────────────── v2.2.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed KernelDensity ─────────────── v0.5.1
 Installed Polynomials ───────────────── v0.6.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed OffsetArrays ──────────────── v1.0.2
 Installed DiffEqBase ────────────────── v6.13.1
 Installed IterTools ─────────────────── v1.3.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Parsers ───────────────────── v0.3.10
 Installed BenchmarkTools ────────────── v0.4.3
 Installed ExponentialUtilities ──────── v1.6.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed Combinatorics ─────────────── v0.7.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed LineSearches ──────────────── v7.0.1
 Installed IRTools ───────────────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed GenericSVD ────────────────── v0.2.2
 Installed IntervalSets ──────────────── v0.3.2
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed FFTW ──────────────────────── v1.2.0
 Installed DiffRules ─────────────────── v1.0.0
 Installed Interpolations ────────────── v0.12.7
 Installed DataFrames ────────────────── v0.20.0
 Installed TransformVariables ────────── v0.3.9
 Installed DiffResults ───────────────── v1.0.2
 Installed ArrayInterface ────────────── v2.3.1
 Installed NLSolversBase ─────────────── v7.6.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Arpack ────────────────────── v0.4.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed NNlib ─────────────────────── v0.6.4
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Tracker ───────────────────── v0.2.6
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed ChainRulesCore ────────────── v0.6.1
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed PositiveFactorizations ────── v0.2.3
 Installed NaNMath ───────────────────── v0.3.3
 Installed FunctionWrappers ──────────── v1.0.0
 Installed SparseDiffTools ───────────── v1.3.3
 Installed Libtask ───────────────────── v0.3.1
 Installed PDMats ────────────────────── v0.9.11
 Installed Roots ─────────────────────── v0.8.4
  Updating `/tmp/jl_rrSzgA/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_rrSzgA/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_PMYEYR/Project.toml`
 [no changes]
  Updating `/tmp/jl_PMYEYR/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_2hjC5D/Project.toml`
 [no changes]
  Updating `/tmp/jl_2hjC5D/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_hRKd1C/Project.toml`
 [no changes]
  Updating `/tmp/jl_hRKd1C/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_rrSzgA/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.141179462
│   t_steps = 0.00754367
└   t_step / t_steps = 18.714957308577922
Sampling  0%|                               |  ETA: 5:15:05[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.7141660630833587
  log_density:                   -11.530109399693417
  hamiltonian_energy:            14.037866546781085
  hamiltonian_energy_error:      0.17380676257374006
  max_hamiltonian_energy_error:  0.48558232535543766
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:22[K
  iterations:                    1236
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.065150235561338
  hamiltonian_energy:            20.02196392544827
  hamiltonian_energy_error:      -0.5933671859586305
  max_hamiltonian_energy_error:  -1.1271980220203481
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.9075190616241446
  nom_step_size:                 0.9075190616241446
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9231366586427342, 0.8122 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:19[K
  iterations:                    1484
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.8330163107738269
  log_density:                   -12.01081378910979
  hamiltonian_energy:            17.177023012520788
  hamiltonian_energy_error:      -0.06589045890139644
  max_hamiltonian_energy_error:  0.6778211654330377
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.8253516837776015
  nom_step_size:                 0.8253516837776015
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9231366586427342, 0.8122 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:17[K
  iterations:                    1680
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9223141232486353
  log_density:                   -12.406089406325023
  hamiltonian_energy:            18.947993849878674
  hamiltonian_energy_error:      -0.2657027059074757
  max_hamiltonian_energy_error:  -0.2657027059074757
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7165080722357594
  nom_step_size:                 0.7165080722357594
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9231366586427342, 0.8122 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:16[K
  iterations:                    1884
  n_steps:                       35
  is_accept:                     true
  acceptance_rate:               0.787382556356518
  log_density:                   -13.138049464320735
  hamiltonian_energy:            17.589944581557543
  hamiltonian_energy_error:      0.09577502632509649
  max_hamiltonian_energy_error:  0.5247020437308834
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.9000499901390561
  nom_step_size:                 0.9000499901390561
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9231366586427342, 0.8122 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:14[K
  iterations:                    2060
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.92557430449889
  log_density:                   -15.406206913670992
  hamiltonian_energy:            22.918786944165582
  hamiltonian_energy_error:      -0.17187811325379698
  max_hamiltonian_energy_error:  -0.27132254630630825
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▍                        |  ETA: 0:00:12[K
  iterations:                    2455
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7865349527871565
  log_density:                   -16.072791016913037
  hamiltonian_energy:            19.480115011172373
  hamiltonian_energy_error:      0.4161745101274654
  max_hamiltonian_energy_error:  0.47174264120869935
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:11[K
  iterations:                    2753
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.715483884944826
  log_density:                   -13.590004555249408
  hamiltonian_energy:            19.682628625854623
  hamiltonian_energy_error:      0.14757473827074818
  max_hamiltonian_energy_error:  0.6470310524738956
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:09[K
  iterations:                    3157
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9987521029912817
  log_density:                   -13.214295219049518
  hamiltonian_energy:            19.421549000169065
  hamiltonian_energy_error:      -0.39574832242912805
  max_hamiltonian_energy_error:  -0.39574832242912805
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:08[K
  iterations:                    3472
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.999692098179177
  log_density:                   -15.71893466658177
  hamiltonian_energy:            20.236828944183888
  hamiltonian_energy_error:      -0.11545304819974689
  max_hamiltonian_energy_error:  -0.43458507370388233
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:07[K
  iterations:                    3878
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.836212003696879
  log_density:                   -13.603457914809688
  hamiltonian_energy:            19.603758163887154
  hamiltonian_energy_error:      -0.06097061708148388
  max_hamiltonian_energy_error:  0.407629029990499
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4188
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7274271477006007
  log_density:                   -16.47734787167078
  hamiltonian_energy:            18.34492354948765
  hamiltonian_energy_error:      0.5737381196480946
  max_hamiltonian_energy_error:  0.6311704176250927
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4599
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.446220787937424
  hamiltonian_energy:            18.9701384401815
  hamiltonian_energy_error:      -0.3712704391245012
  max_hamiltonian_energy_error:  -0.5159459676110885
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▊                  |  ETA: 0:00:05[K
  iterations:                    4920
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9397443386746954
  log_density:                   -19.806792835136868
  hamiltonian_energy:            22.06834844273038
  hamiltonian_energy_error:      0.26499468192720244
  max_hamiltonian_energy_error:  -0.7141215532943903
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▊                 |  ETA: 0:00:05[K
  iterations:                    5320
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9962196569428453
  log_density:                   -12.972746786724183
  hamiltonian_energy:            18.5641908431796
  hamiltonian_energy_error:      -0.2896508731316345
  max_hamiltonian_energy_error:  -0.3102564787813016
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5636
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9607339603537294
  log_density:                   -11.974478577416235
  hamiltonian_energy:            15.76678849943945
  hamiltonian_energy_error:      -0.10610983037058475
  max_hamiltonian_energy_error:  -0.134181896350821
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 50%|███████████████▌               |  ETA: 0:00:04[K
  iterations:                    5998
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7890009405281191
  log_density:                   -14.40612381656025
  hamiltonian_energy:            20.391676986362576
  hamiltonian_energy_error:      0.09835749708580366
  max_hamiltonian_energy_error:  0.5969805094820764
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▎              |  ETA: 0:00:04[K
  iterations:                    6313
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.968444951244052
  log_density:                   -13.935077893562198
  hamiltonian_energy:            18.099135107524496
  hamiltonian_energy_error:      0.0029264421618115932
  max_hamiltonian_energy_error:  0.10804530769785714
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:03[K
  iterations:                    6705
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5898094278272686
  log_density:                   -13.827631407355653
  hamiltonian_energy:            17.323023378278997
  hamiltonian_energy_error:      0.41986619451465756
  max_hamiltonian_energy_error:  0.7728559628988378
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▏            |  ETA: 0:00:03[K
  iterations:                    7029
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7169299312874625
  log_density:                   -13.072303476883475
  hamiltonian_energy:            19.546838405931403
  hamiltonian_energy_error:      0.11599347567281271
  max_hamiltonian_energy_error:  0.6390407415149753
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7430
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.85171809562979
  log_density:                   -14.384717507284783
  hamiltonian_energy:            21.554472034728207
  hamiltonian_energy_error:      -0.12061772098072865
  max_hamiltonian_energy_error:  0.46870244171750386
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:03[K
  iterations:                    7747
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9394983313279308
  log_density:                   -12.899369628630673
  hamiltonian_energy:            19.271779301994904
  hamiltonian_energy_error:      -0.2988618729017709
  max_hamiltonian_energy_error:  -0.32768112461766563
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8159
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9767725231206662
  log_density:                   -12.441870287866898
  hamiltonian_energy:            15.955747603973617
  hamiltonian_energy_error:      -0.0927138669258234
  max_hamiltonian_energy_error:  -0.1297208289728644
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:02[K
  iterations:                    8480
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7836773204404929
  log_density:                   -14.456379465195813
  hamiltonian_energy:            20.624121602301024
  hamiltonian_energy_error:      0.060383182808998015
  max_hamiltonian_energy_error:  0.5246849350133687
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8876
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9629470479421246
  log_density:                   -14.208669105720208
  hamiltonian_energy:            17.6219251461587
  hamiltonian_energy_error:      0.032594349668134015
  max_hamiltonian_energy_error:  -0.1771113752438893
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9223
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7351504544432645
  log_density:                   -15.446763451780349
  hamiltonian_energy:            19.65004749132986
  hamiltonian_energy_error:      0.3262667560531973
  max_hamiltonian_energy_error:  0.5005325253307049
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9816
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.404670690568086
  hamiltonian_energy:            18.347170543671822
  hamiltonian_energy_error:      -0.7935199466607195
  max_hamiltonian_energy_error:  -0.7935199466607195
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▎    |  ETA: 0:00:01[K
  iterations:                    10152
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.717103819752573
  log_density:                   -12.58154354053782
  hamiltonian_energy:            20.1202458007837
  hamiltonian_energy_error:      -0.023648294347921706
  max_hamiltonian_energy_error:  0.6229309300247863
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:01[K
  iterations:                    10540
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9937228360999308
  log_density:                   -13.265535171126182
  hamiltonian_energy:            17.574336168988694
  hamiltonian_energy_error:      -0.10946154462030933
  max_hamiltonian_energy_error:  -0.1426829295293146
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▏  |  ETA: 0:00:01[K
  iterations:                    10864
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9414277271311888
  log_density:                   -16.327044269341748
  hamiltonian_energy:            23.845664634528685
  hamiltonian_energy_error:      -0.29287049905113705
  max_hamiltonian_energy_error:  -0.6208592414651974
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████  |  ETA: 0:00:00[K
  iterations:                    11244
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.855011418692331
  log_density:                   -16.219634904461074
  hamiltonian_energy:            18.30488936091941
  hamiltonian_energy_error:      0.3869615306242018
  max_hamiltonian_energy_error:  0.4833961141949743
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▉ |  ETA: 0:00:00[K
  iterations:                    11564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.608593352454909
  log_density:                   -18.537096988869187
  hamiltonian_energy:            23.805193340376434
  hamiltonian_energy_error:      0.7576953909132271
  max_hamiltonian_energy_error:  1.0652423570298808
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|██████████████████████████████▉|  ETA: 0:00:00[K
  iterations:                    11953
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9901526369486214
  log_density:                   -13.925930972068791
  hamiltonian_energy:            19.272070368035596
  hamiltonian_energy_error:      -0.26411522881479854
  max_hamiltonian_energy_error:  -0.4343394474620652
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7287741411632938
  log_density:                   -12.952992714375574
  hamiltonian_energy:            19.952288853765364
  hamiltonian_energy_error:      0.05094799933531746
  max_hamiltonian_energy_error:  0.7289664704217955
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7204139897581606
  nom_step_size:                 0.7204139897581606
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9750328814225093, 1.0051 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.795539023 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9750328814225093, 1.0051 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.72), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0857578937162835
└   average_acceptance_rate = 0.8647390852017769
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.031507005 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠉⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠘⡄⠀⢠⠤⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢣⢠⠃⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⢠⡄⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠤⠢⣀⡇⠀⠀⠈⠃⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡎⠱⡀⠀⠀⢀⠤⠒⠒⠉⠁⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠃⠀⠀⠀⠀⠀⡸⠀⠀⠱⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⢀⡠⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⢀⡜⠀⣀⣀⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠢⢧⡠⠞⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
