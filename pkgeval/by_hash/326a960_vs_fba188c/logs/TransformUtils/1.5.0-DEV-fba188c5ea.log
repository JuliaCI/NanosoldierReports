Julia Version 1.5.0-DEV.162
Commit fba188c5ea (2020-01-28 03:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_wm7dvZ/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_wm7dvZ/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_wm7dvZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.19147128296443072 -0.04751048676841053; -0.19147128296443072 0.0 0.042015796649345835; 0.04751048676841053 -0.042015796649345835 0.0])
dAA = so3([0.0 -0.11779184443250562 0.01061313034785397; 0.11779184443250562 0.0 0.040860530750881675; -0.01061313034785397 -0.040860530750881675 0.0])
dAA = so3([0.0 0.036508632120408606 0.05075795192544195; -0.036508632120408606 0.0 0.0965797534790181; -0.05075795192544195 -0.0965797534790181 0.0])
dAA = Quaternion(0.9947638111337559, [-0.08716725262765407, 0.02717267426415753, 0.04591814348736323])
dAA = SO3([0.9989807196997741 -0.0395072846995468 0.021833371791612863; 0.04040426487248806 0.9982878549596516 -0.042294846260178966; -0.020125035359861307 0.04313389729351271 0.9988665826105295])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9566441768983455 -0.29104440101540757 0.011183713339929064; 0.2883560680411614 0.9518182729264785 0.10436835414577017; -0.04102068783343571 -0.09661848664121389 0.9944758273627536]), [-0.4201579664934583, -0.47510486768410526, -1.914712829644307])
xj = SE3(SO3([0.9651057459309655 -0.24076594981669874 0.10296920209410894; 0.1753769068684213 0.88630237202076 0.4286152655793299; -0.1944578095842377 -0.39560063543836393 0.8976002994275699]), [-0.9657975347901809, 0.5075795192544195, -0.365086321204086])
Dx = SE3(SO3([0.98181058032952 0.04147113337694283 0.1852785185860552; -0.09517345985672293 0.951894709387105 0.29127044954773496; -0.1642863259431901 -0.30360600675426497 0.9385272482836166]), [-0.3021866550144978, 0.9444197292282646, 1.6375249796751097])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
