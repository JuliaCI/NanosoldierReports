Julia Version 1.5.0-DEV.164
Commit 75996845a6 (2020-01-28 14:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_YYf1bY/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_YYf1bY/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_YYf1bY/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07298705483319691 -0.16864019660295998; -0.07298705483319691 0.0 0.1905384539118984; 0.16864019660295998 -0.1905384539118984 0.0])
dAA = so3([0.0 -0.07193190590606627 0.0017147737586781934; 0.07193190590606627 0.0 0.12095104222021469; -0.0017147737586781934 -0.12095104222021469 0.0])
dAA = so3([0.0 -0.06955542986913234 -0.02194301490301831; 0.06955542986913234 0.0 -0.0667639403597205; 0.02194301490301831 0.0667639403597205 0.0])
dAA = Quaternion(0.9987646960908518, [-0.03995182848613136, -0.008742084532794426, -0.028222494595356907])
dAA = SO3([0.993434905727296 0.06880399903139106 -0.09139528324747759; -0.07078796117465225 0.9973171649852617 -0.018642343696435124; 0.08986741698376696 0.02498964071467267 0.9956401785894426])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9839876462582066 -0.17678397119916472 -0.0227098995657734; 0.175501015249969 0.938750288162703 0.2965590836927307; -0.03110796774887061 -0.29579608516931866 0.9547444528988059]), [-1.9053845391189839, -1.6864019660295997, -0.7298705483319691])
xj = SE3(SO3([0.9891394994604198 0.14274198202003385 -0.03503965148489076; -0.13300503376299325 0.9707425268980711 0.19992150325878597; 0.0625516714476544 -0.1930898056359788 0.9791851792988723]), [0.667639403597205, -0.2194301490301831, 0.6955542986913233])
Dx = SE3(SO3([0.9480126740582857 0.3168292773734158 -0.029852618375909974; -0.31822506209168083 0.9431655410122407 -0.09576832515938402; -0.002186248294362883 0.10028943736070414 0.9949559030792615]), [2.7449367462161627, 0.5006157358983014, 1.7375271682526097])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
