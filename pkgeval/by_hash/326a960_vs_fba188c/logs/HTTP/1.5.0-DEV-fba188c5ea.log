Julia Version 1.5.0-DEV.162
Commit fba188c5ea (2020-01-28 03:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed IniFile ──────── v0.5.0
 Installed MbedTLS ──────── v0.7.0
 Installed BinaryProvider ─ v0.5.8
 Installed HTTP ─────────── v0.8.8
  Updating `~/.julia/environments/v1.5/Project.toml`
  [cd3eb016] + HTTP v0.8.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v0.7.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
  Building MbedTLS → `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Updating `/tmp/jl_Y7F4a7/Project.toml`
 [no changes]
  Updating `/tmp/jl_Y7F4a7/Manifest.toml`
 [no changes]
   Testing HTTP
 Installed ConstructionBase ─ v1.0.0
 Installed Parsers ────────── v0.3.10
 Installed Compat ─────────── v2.2.0
 Installed JSON ───────────── v0.21.0
 Installed BufferedStreams ── v1.0.0
 Installed Unitful ────────── v1.0.0
  Updating `/tmp/jl_ghzTvH/Project.toml`
  [e1450e63] + BufferedStreams v1.0.0
  [682c06a0] + JSON v0.21.0
  [1986cc42] + Unitful v1.0.0
  Updating `/tmp/jl_ghzTvH/Manifest.toml`
  [e1450e63] + BufferedStreams v1.0.0
  [34da2185] + Compat v2.2.0
  [187b0558] + ConstructionBase v1.0.0
  [682c06a0] + JSON v0.21.0
  [69de0a69] + Parsers v0.3.10
  [1986cc42] + Unitful v1.0.0
  [8bb1440f] + DelimitedFiles 
  [76f85450] + LibGit2 
  [37e2e46d] + LinearAlgebra 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [3fa0cd96] + REPL 
  [1a1011a3] + SharedArrays 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [cf7118a7] + UUIDs 
Running sandbox
Status `/tmp/jl_ghzTvH/Project.toml`
  [e1450e63] BufferedStreams v1.0.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [739be429] MbedTLS v0.7.0
  [1986cc42] Unitful v1.0.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Running ascii.jl tests...
Running chunking.jl tests...
Running utils.jl tests...
Running client.jl tests...
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d5-2c6bc618f5c516d80157f338"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 0,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 1,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 2,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 3,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 4,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 5,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 6,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 7,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 8,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 9,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 90,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 91,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 92,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 93,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 94,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 95,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 96,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 97,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 98,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5d7-4fd816f069b50ab041367100"),"args" => Dict{String,Any}(),"id" => 99,"url" => "http://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
client transfer-encoding chunked
Client Streaming Test: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
  Expression: a == b
   Evaluated: Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ec-666d383af7f586fdaee7db0d"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")] == Dict{String,Any}[Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 0,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 1,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 2,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 3,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 4,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 5,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 6,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 7,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 8,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 9,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")  …  Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 90,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 91,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 92,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 93,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 94,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 95,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 96,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 97,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 98,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6"), Dict("headers" => Dict{String,Any}("Content-Length" => "0","Host" => "httpbin.org","X-Amzn-Trace-Id" => "Root=1-5e30c5ed-4a339c5a3d48a36e3253adc8"),"args" => Dict{String,Any}(),"id" => 99,"url" => "https://httpbin.org/stream/100","origin" => "38.140.156.6")]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:76
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/client.jl:57
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
client transfer-encoding chunked
Running multipart.jl tests...
Running sniff.jl tests...
Running uri.jl tests...
Running url.jl tests...
Running cookies.jl tests...
Running parser.jl tests...
WARNING: using Messages.status in module Main conflicts with an existing identifier.
Running loopback.jl tests...
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /delay10 HTTP/1.1
📡  PUT /delay10 HTTP/1.1
📡  PUT /abort HTTP/1.1
📡  GET /echo HTTP/1.1
📡  GET /abort HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 2.882416009902954
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.6551308631896973
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
t = 0.739922046661377
📡  POST /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  GET /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
📡  GET /delay1 HTTP/1.1
📡  GET /delay2 HTTP/1.1
📡  POST /delay3 HTTP/1.1
📡  GET /delay4 HTTP/1.1
📡  GET /delay5 HTTP/1.1
Running websockets.jl tests...
Running messages.jl tests...
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
GET /ip HTTP/1.1
HTTP/1.1 200 OK <= (GET /ip HTTP/1.1)
HEAD /ip HTTP/1.1
HTTP/1.1 200 OK <= (HEAD /ip HTTP/1.1)
OPTIONS /ip HTTP/1.1
HTTP/1.1 200 OK <= (OPTIONS /ip HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x72, 0x67, 0x2f, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
Body - Response Stream: Test Failed at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
  Expression: read(io) == body
   Evaluated: UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a] == UInt8[0x7b, 0x0a, 0x20, 0x20, 0x22, 0x61, 0x72, 0x67, 0x73, 0x22  …  0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0a, 0x7d, 0x0a]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:119
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1186
 [3] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:110
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
 [5] top-level scope at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/messages.jl:18
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PUT /put HTTP/1.1
HTTP/1.1 200 OK <= (PUT /put HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
DELETE /delete HTTP/1.1
HTTP/1.1 200 OK <= (DELETE /delete HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
PATCH /patch HTTP/1.1
HTTP/1.1 200 OK <= (PATCH /patch HTTP/1.1)
POST /post HTTP/1.1
HTTP/1.1 200 OK <= (POST /post HTTP/1.1)
GET /stream/50 HTTP/1.1
HTTP/1.1 200 OK <= (GET /stream/50 HTTP/1.1)
Running handlers.jl tests...
Running server.jl tests...
length(x) = 100018
client:
HTTP/1.1 200 OK
Transfer-Encoding: chunked

f
Body of Request
0


client = "HTTP/1.1 200 OK\r\n\r\nHello"
Testing server port reuse
Starting second server listening on same port
Starting server on same port without port reuse (throws error)
Running async.jl tests...
ConnectionPool[
   🔁    3↑🔒    2↓🔒   0s httpbin.org:80:49086 ≣16
   ⏸    3↑🔒    3↓    0s httpbin.org:80:34872 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:49090 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:34876 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:49094 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:49096 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:49098 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:80:49100 ≣16
]

ConnectionPool[
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:38580 ≣16
   ⏸    4↑🔒    4↓    0s httpbin.org:443:41102 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:38584 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:38586 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:42062 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:41110 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:38592 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:41114 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    0s httpbin.org:80:46776 ≣16
   🔁   13↑    13↓    0s httpbin.org:80:34906 ≣16
   🔁   13↑    13↓    0s httpbin.org:80:34908 ≣16
   🔁   11↑     1↓🔒   0s httpbin.org:80:49126 ≣16
   🔁   13↑     1↓🔒   0s httpbin.org:80:49128 ≣16
   🔁   13↑     2↓🔒   0s httpbin.org:80:49130 ≣16
   🔁   12↑    12↓    0s httpbin.org:80:34916 ≣16
   🔁   11↑     4↓🔒   0s httpbin.org:80:49134 ≣16
]

ConnectionPool[
   🔁   14↑    14↓    1s httpbin.org:80:46776 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:34906 ≣16
   🔁   13↑    13↓    1s httpbin.org:80:34908 ≣16
   🔁   11↑     7↓🔒   1s httpbin.org:80:49126 ≣16 2-byte excess
   🔁   13↑     6↓🔒   1s httpbin.org:80:49128 ≣16
   🔁   13↑     9↓🔒   1s httpbin.org:80:49130 ≣16
   🔁   12↑    12↓    1s httpbin.org:80:34916 ≣16
   🔁   11↑    11↓    1s httpbin.org:80:49134 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:41174 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:41178 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:38660 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:38662 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:38664 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:41188 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:42156 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:42172 ≣16
]

ConnectionPool[
   ⏸    6↑🔒    6↓    0s httpbin.org:443:41236 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:38718 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:38720 ≣16
   🔁    5↑     3↓🔒   0s httpbin.org:443:41242 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:38724 ≣16
   🔁    3↑     1↓🔒   0s httpbin.org:443:41248 ≣16
   🔁    2↑     0↓🔒   0s httpbin.org:443:41252 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:41254 ≣16
]

ConnectionPool[
   ⏸   15↑    15↓    1s httpbin.org:443:41236 ≣16
   ⏸   15↑    15↓    1s httpbin.org:443:38718 ≣16
   ⏸   15↑    15↓    1s httpbin.org:443:38720 ≣16
   🔁   13↑    10↓🔒   1s httpbin.org:443:41242 ≣16
   ⏸   12↑    12↓    1s httpbin.org:443:38724 ≣16
   🔁   11↑     9↓🔒   1s httpbin.org:443:41248 ≣16
   ⏸   10↑    10↓    1s httpbin.org:443:41252 ≣16
   🔁    9↑     8↓🔒   1s httpbin.org:443:41254 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49276 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:35062 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49280 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:35066 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49284 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:49286 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49288 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49290 ≣16
]

ConnectionPool[
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:41288 ≣16
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:42244 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:41292 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:41294 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:41296 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:41298 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:41300 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:41302 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49320 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:80:49322 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:35108 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49326 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:35112 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:35114 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49332 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:35118 ≣16
]

ConnectionPool[
   🔁   16↑    16↓    0s httpbin.org:80:49320 ≣16
   🔁   11↑    11↓    0s httpbin.org:80:49322 ≣16
   🔁   13↑    13↓    0s httpbin.org:80:35108 ≣16
   🔁    9↑     9↓    0s httpbin.org:80:49326 ≣16
   🔁   13↑    13↓    0s httpbin.org:80:35112 ≣16
   🔁   13↑🔒   13↓🔒   0s httpbin.org:80:35114 ≣16 2-byte excess
   🔁   11↑    11↓    0s httpbin.org:80:49332 ≣16
   🔁   13↑    13↓    0s httpbin.org:80:35118 ≣16
]

ConnectionPool[
   ⏸    6↑🔒    6↓    0s httpbin.org:443:41370 ≣16
   🔁    6↑🔒    6↓🔒   0s httpbin.org:443:41386 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:41394 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:41400 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:42356 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:41404 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:38888 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:38894 ≣16
]

ConnectionPool[
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49428 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49432 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49434 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:80:49438 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:35224 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:80:35228 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:35230 ≣16 2-byte excess
   🔁    0↑🔒    0↓🔒   0s httpbin.org:80:49452 ≣16
]

ConnectionPool[
   🔁   13↑🔒   13↓🔒   0s httpbin.org:80:49428 ≣16
   🔁   14↑🔒   14↓🔒   0s httpbin.org:80:49432 ≣16 2-byte excess
   🔁   12↑🔒   12↓🔒   0s httpbin.org:80:49434 ≣16
   🔁   11↑🔒   11↓🔒   0s httpbin.org:80:49438 ≣16
   🔁   12↑🔒   12↓🔒   0s httpbin.org:80:35224 ≣16
   🔁    8↑🔒    8↓🔒   0s httpbin.org:80:35228 ≣16
   🔁    6↑🔒    6↓🔒   0s httpbin.org:80:35230 ≣16
   🔁   10↑🔒   10↓🔒   0s httpbin.org:80:49452 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:41452 ≣16
   🔁    5↑🔒    5↓🔒   0s httpbin.org:443:41454 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:41456 ≣16
   🔁    4↑🔒    4↓🔒   0s httpbin.org:443:41458 ≣16
   🔁    3↑🔒    3↓🔒   0s httpbin.org:443:41460 ≣16
   🔁    2↑🔒    2↓🔒   0s httpbin.org:443:41462 ≣16
   🔁    1↑🔒    1↓🔒   0s httpbin.org:443:38944 ≣16
   🔁    0↑🔒    0↓🔒   0s httpbin.org:443:41466 ≣16
]

ConnectionPool[
   ⏸   17↑    17↓    0s httpbin.org:443:41452 ≣16
   🔁   16↑🔒   16↓🔒   0s httpbin.org:443:41454 ≣16
   ⏸   10↑    10↓    0s httpbin.org:443:41456 ≣16
   🔁   12↑🔒   12↓🔒   0s httpbin.org:443:41458 ≣16
   ⏸   12↑    12↓    0s httpbin.org:443:41460 ≣16
   ⏸    9↑     9↓    0s httpbin.org:443:41462 ≣16
   🔁   12↑🔒   12↓🔒   0s httpbin.org:443:38944 ≣16
   🔁    8↑🔒    8↓🔒   0s httpbin.org:443:41466 ≣16
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:38964 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:45988 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:41520 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:41522 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:41524 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:41526 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:41534 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:41550 ≣16
]

ConnectionPool[
   🔁    3↑🔒    3↓    0s httpbin.org:80:49608 ≣16
   🔁    2↑🔒    2↓    0s httpbin.org:80:49614 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:80:49620 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:35410 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:80:49628 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:35416 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:80:35424 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:80:53136 ≣16
]

ConnectionPool[
   🔁    7↑🔒    6↓🔒   0s httpbin.org:443:41654 ≣16
   🔁    6↑🔒    5↓🔒   0s httpbin.org:443:46146 ≣16
   🔁    6↑     4↓🔒   0s httpbin.org:443:41668 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:39150 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:46154 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:39154 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:39156 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:39158 ≣16
]

ConnectionPool[
   🔁   14↑     3↓🔒   0s httpbin.org:80:53178 ≣16 2-byte excess
   🔁   13↑     3↓🔒   0s httpbin.org:80:35474 ≣16
   🔁   13↑     3↓🔒   0s httpbin.org:80:47348 ≣16
   🔁   12↑     3↓🔒   0s httpbin.org:80:47350 ≣16
   🔁   13↑     2↓🔒   0s httpbin.org:80:53186 ≣16
   🔁   12↑     2↓🔒   0s httpbin.org:80:35482 ≣16
   🔁   12↑     1↓🔒   0s httpbin.org:80:35484 ≣16
   🔁   11↑     0↓🔒   0s httpbin.org:80:49702 ≣16 2-byte excess
]

ConnectionPool[
   ⏸    7↑🔒    7↓    0s httpbin.org:443:46182 ≣16
   ⏸    6↑🔒    6↓    0s httpbin.org:443:39188 ≣16
   🔁    6↑     5↓🔒   0s httpbin.org:443:42666 ≣16
   🔁    5↑     4↓🔒   0s httpbin.org:443:42668 ≣16
   🔁    4↑     3↓🔒   0s httpbin.org:443:46198 ≣16
   🔁    3↑     2↓🔒   0s httpbin.org:443:42672 ≣16
   🔁    2↑     1↓🔒   0s httpbin.org:443:46202 ≣16
   🔁    1↑     0↓🔒   0s httpbin.org:443:39202 ≣16
]

Running aws4.jl tests...
Running insert_layers.jl tests...
WARNING: replacing module TestRequest.
WARNING: using TestRequest.TestLayer in module Main conflicts with an existing identifier.
Running mwe.jl tests...
Test Summary:                                                                    | Pass  Fail  Broken  Total
HTTP                                                                             | 4743    10     107   4860
  ascii.jl                                                                       |  648                  648
  Chunking                                                                       |   15                   15
  utils.jl                                                                       |   26                   26
  Custom HTTP Stack                                                              |    1                    1
  Client.jl - http                                                               |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Client.jl - https                                                              |   56     1             57
    GET, HEAD, POST, PUT, DELETE, PATCH                                          |    7                    7
    ASync Client Requests                                                        |    2                    2
    Query to URI                                                                 |    1                    1
    Cookie Requests                                                              |    4                    4
    Client Streaming Test                                                        |    4     1              5
    Client Body Posting - Vector{UTF8}, String, IOStream, IOBuffer, BufferStream |    5                    5
    Chunksize                                                                    |    5                    5
    ASync Client Request Body                                                    |    1                    1
    Client Redirect Following - GET                                              |    6                    6
    Client Redirect Following - HEAD                                             |    6                    6
    Client Basic Auth                                                            |    3                    3
    Misc                                                                         |    8                    8
    openraw client method - wss                                                  |    2                    2
    openraw client method - ws                                                   |    2                    2
  Public entry point of HTTP.request and friends (e.g. issue #463)               |  205                  205
  HTTP.Form for multipart/form-data                                              |    4                    4
  sniff.jl                                                                       |   47                   47
  HTTP.URI                                                                       |  128                  128
  HTTP.URL                                                                       |   12                   12
  Cookies                                                                        |   57                   57
  HTTP.parser                                                                    |  727           106    833
  loopback                                                                       |   53                   53
  websockets.jl                                                                  |    8                    8
  HTTP.Messages                                                                  |  141     8            149
    Body Length                                                                  |   13                   13
    Body Bytes                                                                   |    7                    7
    Request                                                                      |    7                    7
    Header Append                                                                |   11                   11
    HTTP Version                                                                 |    6                    6
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Read methods                                                                 |    1                    1
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - Response Stream                                                       |    2     1              3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Body - JSON Parse                                                            |    3                    3
    Write to file                                                                |   51                   51
  Handlers                                                                       |   31                   31
  HTTP.listen                                                                    |   27                   27
  ASync                                                                          | 2400                 2400
  AWS Signature Version 4                                                        |   96                   96
  HTTP Stack Inserting                                                           |    5                    5
ERROR: LoadError: Some tests did not pass: 4743 passed, 10 failed, 0 errored, 107 broken.
in expression starting at /home/pkgeval/.julia/packages/HTTP/lZVI1/test/runtests.jl:8
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/HTTP/lZVI1/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/HTTP/lZVI1/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package HTTP errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
