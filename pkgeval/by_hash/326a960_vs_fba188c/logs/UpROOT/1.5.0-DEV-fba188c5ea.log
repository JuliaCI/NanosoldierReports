Julia Version 1.5.0-DEV.162
Commit fba188c5ea (2020-01-28 03:57 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Requires ──────────────────── v1.0.0
 Installed UnsafeArrays ──────────────── v1.0.0
 Installed Indexing ──────────────────── v1.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed UpROOT ────────────────────── v0.2.1
 Installed PyCall ────────────────────── v1.91.2
 Installed JSON ──────────────────────── v0.21.0
 Installed VersionParsing ────────────── v1.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed SplitApplyCombine ─────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed DataAPI ───────────────────── v1.1.0
 Installed MacroTools ────────────────── v0.5.3
 Installed DataStructures ────────────── v0.17.9
 Installed TypedTables ───────────────── v1.2.0
 Installed Conda ─────────────────────── v1.3.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Dictionaries ──────────────── v0.2.1
 Installed ArraysOfArrays ────────────── v0.4.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [69ce31c6] + UpROOT v0.2.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [65a8f2f4] + ArraysOfArrays v0.4.1
  [8f4d0f93] + Conda v1.3.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [85a47980] + Dictionaries v0.2.1
  [313cdc1a] + Indexing v1.1.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [ae029012] + Requires v1.0.0
  [03a91e81] + SplitApplyCombine v1.0.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9d95f2ec] + TypedTables v1.2.0
  [c4a57d5a] + UnsafeArrays v1.0.0
  [69ce31c6] + UpROOT v0.2.1
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_SGwAzf/Project.toml`
 [no changes]
  Updating `/tmp/jl_SGwAzf/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_p2oJI6/Project.toml`
 [no changes]
  Updating `/tmp/jl_p2oJI6/Manifest.toml`
 [no changes]
  Building UpROOT → `~/.julia/packages/UpROOT/4HMu5/deps/build.log`
  Updating `/tmp/jl_UZGZar/Project.toml`
 [no changes]
  Updating `/tmp/jl_UZGZar/Manifest.toml`
 [no changes]
   Testing UpROOT
  Updating `/tmp/jl_FePdFW/Project.toml`
 [no changes]
  Updating `/tmp/jl_FePdFW/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_FePdFW/Project.toml`
  [65a8f2f4] ArraysOfArrays v0.4.1
  [438e738f] PyCall v1.91.2
  [bd369af6] Tables v0.2.11
  [9d95f2ec] TypedTables v1.2.0
  [69ce31c6] UpROOT v0.2.1
  [8dfed614] Test 
[ Info: PyCall uses python command "python3"
Package UpROOT: Error During Test at /home/pkgeval/.julia/packages/UpROOT/4HMu5/test/runtests.jl:4
  Got exception outside of a @test
  LoadError: InitError: PyError (PyImport_ImportModule
  
  The Python package awkward could not be found by pyimport. Usually this means
  that you did not install awkward in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Python version at:
  
  /usr/bin/python3
  
  and you should use whatever mechanism you usually use (apt-get, pip, conda,
  etcetera) to install the Python package containing the awkward module.
  
  One alternative is to re-configure PyCall to use a different Python
  version on your system: set ENV["PYTHON"] to the path/name of the python
  executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  Another alternative is to configure PyCall to use a Julia-specific Python
  distribution via the Conda.jl package (which installs a private Anaconda
  Python distribution), which has the advantage that packages can be installed
  and kept up-to-date via Julia.  As explained in the PyCall documentation,
  set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
  To install the awkward module, you can use `pyimport_conda("awkward", PKG)`,
  where PKG is the Anaconda package the contains the module awkward,
  or alternatively you can use the Conda package directly (via
  `using Conda` followed by `Conda.add` etcetera).
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'awkward'",)
  
  Stacktrace:
   [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
   [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
   [3] __init__() at /home/pkgeval/.julia/packages/UpROOT/4HMu5/src/UpROOT.jl:25
   [4] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
   [5] _require_from_serialized(::String) at ./loading.jl:748
   [6] _require(::Base.PkgId) at ./loading.jl:1039
   [7] require(::Base.PkgId) at ./loading.jl:927
   [8] require(::Module, ::Symbol) at ./loading.jl:922
   [9] include(::String) at ./client.jl:439
   [10] top-level scope at /home/pkgeval/.julia/packages/UpROOT/4HMu5/test/runtests.jl:7
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [12] top-level scope at /home/pkgeval/.julia/packages/UpROOT/4HMu5/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  during initialization of module UpROOT
  in expression starting at /home/pkgeval/.julia/packages/UpROOT/4HMu5/test/test_testfiles.jl:3
  
Test Summary:  | Error  Total
Package UpROOT |     1      1
  PyCall       |        No tests
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/UpROOT/4HMu5/test/runtests.jl:4
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/UpROOT/4HMu5/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/UpROOT/4HMu5/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package UpROOT errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
