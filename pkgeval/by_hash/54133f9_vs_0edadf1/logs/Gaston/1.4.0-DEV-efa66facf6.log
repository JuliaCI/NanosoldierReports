Julia Version 1.4.0-DEV.648
Commit efa66facf6 (2019-12-19 21:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Gaston ─ v0.10.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [4b11ee91] + Gaston v0.10.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4b11ee91] + Gaston v0.10.0
  [8bb1440f] + DelimitedFiles 
  [a63ad114] + Mmap 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
   Testing Gaston
Path `/home/pkgeval/.julia/packages/Gaston/JtE39` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_Xmq9yG/Project.toml`
  [4b11ee91] + Gaston v0.10.0 [`~/.julia/packages/Gaston/JtE39`]
  [8dfed614] + Test 
  Updating `/tmp/jl_Xmq9yG/Manifest.toml`
  [4b11ee91] ~ Gaston v0.10.0 ⇒ v0.10.0 [`~/.julia/packages/Gaston/JtE39`]
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_Xmq9yG/Project.toml`
  [4b11ee91] Gaston v0.10.0 [`~/.julia/packages/Gaston/JtE39`]
  [8bb1440f] DelimitedFiles 
  [9a3f8284] Random 
  [8dfed614] Test 
ERROR: LoadError: InitError: Gaston cannot be loaded: gnuplot is not available on this system.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] __init__() at /home/pkgeval/.julia/packages/Gaston/JtE39/src/Gaston.jl:64
 [3] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [4] _require_from_serialized(::String) at ./loading.jl:748
 [5] _require(::Base.PkgId) at ./loading.jl:1039
 [6] require(::Base.PkgId) at ./loading.jl:927
 [7] require(::Module, ::Symbol) at ./loading.jl:922
 [8] include(::String) at ./client.jl:439
 [9] top-level scope at none:6
during initialization of module Gaston
in expression starting at /home/pkgeval/.julia/packages/Gaston/JtE39/test/runtests.jl:13
caused by [exception 1]
IOError: could not spawn `gnuplot --version`: no such file or directory (ENOENT)
Stacktrace:
 [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
 [2] #550 at ./process.jl:112 [inlined]
 [3] setup_stdios(::Base.var"#550#551"{Cmd}, ::Array{Any,1}) at ./process.jl:196
 [4] _spawn at ./process.jl:111 [inlined]
 [5] _spawn at ./process.jl:106 [inlined]
 [6] success(::Cmd) at ./process.jl:496
 [7] __init__() at /home/pkgeval/.julia/packages/Gaston/JtE39/src/Gaston.jl:62
 [8] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [9] _require_from_serialized(::String) at ./loading.jl:748
 [10] _require(::Base.PkgId) at ./loading.jl:1039
 [11] require(::Base.PkgId) at ./loading.jl:927
 [12] require(::Module, ::Symbol) at ./loading.jl:922
 [13] include(::String) at ./client.jl:439
 [14] top-level scope at none:6
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Gaston/JtE39/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Gaston/JtE39/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Gaston errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
