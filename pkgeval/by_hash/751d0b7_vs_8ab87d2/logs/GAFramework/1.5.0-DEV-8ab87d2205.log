Julia Version 1.5.0-DEV.803
Commit 8ab87d2205 (2020-05-03 08:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Z4tOJM/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Z4tOJM/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172309690057176
curgen: 20 fitness: 0.2172309690057176
curgen: 30 fitness: 0.2172309690057176
curgen: 40 fitness: 0.21723174802363718
curgen: 50 fitness: 0.21723174802363718
CoordinateCreature{Array{Float64,1}}([-0.2223422224228734], -0.21723174802363718) -0.2223422224228734 -0.21723174802363718
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25803600544068
curgen: 100 fitness: 3.2583091340983135
curgen: 150 fitness: 3.2583187625508225
curgen: 200 fitness: 3.258351236824925
curgen: 250 fitness: 3.2583837480957487
curgen: 300 fitness: 3.2584057442418755
curgen: 350 fitness: 3.2584164209358146
curgen: 400 fitness: 3.258429050311807
curgen: 450 fitness: 3.2584462493623296
curgen: 500 fitness: 3.2584462493623296
CoordinateCreature{Array{Float64,1}}([-0.222866213306154, -0.22258301693462773, -0.22184636869652172, -0.22256129327131616, -0.22257753755523657, 0.2223965625429242, 0.22252448433013852, 0.2222898075786647, -0.2224756658021292, -0.22249683150811023, -0.22285849877285888, 0.22249444339898788, 0.22242568073878496, 0.22205797472598465, 0.22203642325172654], -3.2584462493623296) [-0.222866213306154, -0.22258301693462773, -0.22184636869652172, -0.22256129327131616, -0.22257753755523657, 0.2223965625429242, 0.22252448433013852, 0.2222898075786647, -0.2224756658021292, -0.22249683150811023, -0.22285849877285888, 0.22249444339898788, 0.22242568073878496, 0.22205797472598465, 0.22203642325172654] -3.2584462493623296
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.014797980349044337
curgen: 100 fitness: -0.011873027230620892
curgen: 150 fitness: -0.006275811715710233
curgen: 200 fitness: -0.004412569946680378
curgen: 250 fitness: -0.004124838630644945
curgen: 300 fitness: -0.00243147623200457
curgen: 350 fitness: -0.002425278351580573
curgen: 400 fitness: -0.00228235334552096
curgen: 450 fitness: -0.00228235334552096
curgen: 500 fitness: -0.002238661438497047
CoordinateCreature{Array{Float64,1}}([0.00041502696141659974, 0.0006208353315718894, -0.0006003020008577735, -2.9044370404817917e-5, -0.0004084444324532957, 0.0009369601069956087, 0.002053918516262759, -0.001469729062782967, 4.1071485184578874e-6, -0.0007580329863476683, -0.000306205277028553, 0.00037295655261641825, 3.5082423584841275e-5, 0.0014198405554011148, -0.00034227839939110217], 0.002238661438497047) [0.00041502696141659974, 0.0006208353315718894, -0.0006003020008577735, -2.9044370404817917e-5, -0.0004084444324532957, 0.0009369601069956087, 0.002053918516262759, -0.001469729062782967, 4.1071485184578874e-6, -0.0007580329863476683, -0.000306205277028553, 0.00037295655261641825, 3.5082423584841275e-5, 0.0014198405554011148, -0.00034227839939110217] 0.002238661438497047
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
