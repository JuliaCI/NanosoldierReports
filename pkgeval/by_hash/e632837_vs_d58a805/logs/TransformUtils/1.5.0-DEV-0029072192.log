Julia Version 1.5.0-DEV.202
Commit 0029072192 (2020-01-29 16:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_y7gsRa/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_y7gsRa/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_y7gsRa/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.2716283515932667 -0.11803794097889642; -0.2716283515932667 0.0 0.15298721662486242; 0.11803794097889642 -0.15298721662486242 0.0])
dAA = so3([0.0 -0.013097571456387434 0.07736375642635457; 0.013097571456387434 0.0 -0.09650852763353848; -0.07736375642635457 0.09650852763353848 0.0])
dAA = so3([0.0 0.06078020360929938 -0.10642072692176333; -0.06078020360929938 0.0 0.012781539063805648; 0.10642072692176333 -0.012781539063805648 0.0])
dAA = Quaternion(0.9975075066036503, [-0.043977553391488546, 0.03374850606608033, 0.04365532505176328])
dAA = SO3([0.9974659809958869 -0.06910004925832693 -0.01693516898083972; 0.06960066828939489 0.9970928900393125 0.031008315122257955; 0.014743260480043843 -0.0321084385411129 0.9993756473142964])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9809148481463378 -0.009074125011545971 0.1942259533155181; 0.05536347270114517 0.9705960678416025 -0.23426087804174403; -0.1863892340681632 0.2405429968751827 0.9525744695706416]), [-1.529872166248624, -1.1803794097889642, -2.716283515932667])
xj = SE3(SO3([0.9622489319275367 -0.22559976421593644 0.15225550692841552; 0.18809384725852385 0.9555368198548538 0.22709048972856552; -0.19671730383421276 -0.1898792571277509 0.9618982119147594]), [-0.12781539063805647, -1.0642072692176332, -0.6078020360929938])
Dx = SE3(SO3([0.990963781108239 -0.13300087251527834 -0.01736526538342023; 0.12651261163229774 0.8838132749381191 0.4504094294540605; -0.044557195037808695 -0.448536356333945 0.8926532324576161]), [0.9887317541995144, 0.6072142383925554, 2.253586853449013])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
