Julia Version 1.5.0-DEV.202
Commit 0029072192 (2020-01-29 16:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InplaceOps ───────── v0.3.0
 Installed ArgCheck ─────────── v1.0.1
 Installed Missings ─────────── v0.4.3
 Installed ArrayLayouts ─────── v0.1.5
 Installed OrderedCollections ─ v1.1.0
 Installed AdvancedHMC ──────── v0.2.20
 Installed DataStructures ───── v0.17.9
 Installed LazyArrays ───────── v0.14.11
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed Parameters ───────── v0.12.0
 Installed MacroTools ───────── v0.5.3
 Installed SortingAlgorithms ── v0.3.1
 Installed DataAPI ──────────── v1.1.0
 Installed Requires ─────────── v1.0.0
 Installed Rmath ────────────── v0.6.0
 Installed StatsBase ────────── v0.32.0
 Installed StatsFuns ────────── v0.9.3
 Installed BinaryProvider ───── v0.5.8
 Installed FillArrays ───────── v0.8.4
 Installed ProgressMeter ────── v1.2.0
 Installed SpecialFunctions ─── v0.9.0
 Installed StaticArrays ─────── v0.12.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_yLIwKP/Project.toml`
 [no changes]
  Updating `/tmp/jl_yLIwKP/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed Bijectors ─────────────────── v0.5.2
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Zygote ────────────────────── v0.4.7
 Installed KernelDensity ─────────────── v0.5.1
 Installed Distributions ─────────────── v0.22.3
 Installed UnicodePlots ──────────────── v1.1.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed Tracker ───────────────────── v0.2.6
 Installed DocStringExtensions ───────── v0.8.1
 Installed OrdinaryDiffEq ────────────── v5.28.1
 Installed GenericSVD ────────────────── v0.2.2
 Installed Turing ────────────────────── v0.8.3
 Installed Showoff ───────────────────── v0.3.1
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed LogDensityProblems ────────── v0.10.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed DataFrames ────────────────── v0.20.0
 Installed DiffResults ───────────────── v1.0.2
 Installed OpenBLAS_jll ──────────────── v0.3.7+5
 Installed Ratios ────────────────────── v0.3.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed LineSearches ──────────────── v7.0.1
 Installed AxisArrays ────────────────── v0.4.1
 Installed MCMCChains ────────────────── v1.0.2
 Installed NNlib ─────────────────────── v0.6.4
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed NaNMath ───────────────────── v0.3.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed CommonSubexpressions ──────── v0.2.0
 Installed OffsetArrays ──────────────── v1.0.2
 Installed Arpack ────────────────────── v0.4.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed NLSolversBase ─────────────── v7.6.0
 Installed DiffEqBase ────────────────── v6.13.1
 Installed Interpolations ────────────── v0.12.8
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DistributionsAD ───────────── v0.2.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed ExponentialUtilities ──────── v1.6.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed IRTools ───────────────────── v0.3.1
 Installed TableTraits ───────────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed Tables ────────────────────── v0.2.11
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed Combinatorics ─────────────── v0.7.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed SparseDiffTools ───────────── v1.3.3
 Installed BenchmarkTools ────────────── v0.4.3
 Installed Compat ────────────────────── v2.2.0
 Installed RangeArrays ───────────────── v0.3.2
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed TreeViews ─────────────────── v0.3.0
 Installed TransformVariables ────────── v0.3.9
 Installed DiffRules ─────────────────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed ChainRulesCore ────────────── v0.6.1
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed PDMats ────────────────────── v0.9.11
 Installed IterTools ─────────────────── v1.3.0
 Installed Polynomials ───────────────── v0.6.0
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed FiniteDiff ────────────────── v2.1.0
 Installed Libtask ───────────────────── v0.3.1
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed PooledArrays ──────────────── v0.5.3
 Installed MuladdMacro ───────────────── v0.2.2
 Installed RecursiveArrayTools ───────── v2.0.4
 Installed JSON ──────────────────────── v0.21.0
 Installed Roots ─────────────────────── v0.8.4
 Installed Inflate ───────────────────── v0.1.1
 Installed Adapt ─────────────────────── v1.0.0
 Installed Optim ─────────────────────── v0.20.0
  Updating `/tmp/jl_QoVi6v/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.7
  Updating `/tmp/jl_QoVi6v/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.6.1
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.1.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.1
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.8
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.2
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+5
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.1
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.4
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.7
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_sUagLm/Project.toml`
 [no changes]
  Updating `/tmp/jl_sUagLm/Manifest.toml`
 [no changes]
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_KbKomJ/Project.toml`
 [no changes]
  Updating `/tmp/jl_KbKomJ/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_STIDW7/Project.toml`
 [no changes]
  Updating `/tmp/jl_STIDW7/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_QoVi6v/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.7
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.155152827
│   t_steps = 0.0106434
└   t_step / t_steps = 14.577374429223742
Sampling  0%|                               |  ETA: 5:46:51[K
  iterations:                    1
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.2686554040021128
  log_density:                   -11.294044424149792
  hamiltonian_energy:            20.08925013840587
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.7135588476420942
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9
  nom_step_size:                 0.9
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:18[K
  iterations:                    1676
  n_steps:                       51
  is_accept:                     true
  acceptance_rate:               0.9307624236895806
  log_density:                   -13.439007607808879
  hamiltonian_energy:            16.28509052344955
  hamiltonian_energy_error:      0.1302710176317774
  max_hamiltonian_energy_error:  0.30527158353774553
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8148985064103483
  nom_step_size:                 0.8148985064103483
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9758999623509638, 1.0087 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:16[K
  iterations:                    1865
  n_steps:                       39
  is_accept:                     true
  acceptance_rate:               0.7467244246969402
  log_density:                   -14.373608723861086
  hamiltonian_energy:            22.583797665660455
  hamiltonian_energy_error:      -0.1629880658567906
  max_hamiltonian_energy_error:  0.8086551997574851
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8636577311775662
  nom_step_size:                 0.8636577311775662
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9758999623509638, 1.0087 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:14[K
  iterations:                    2189
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.891829366065079
  log_density:                   -14.112839710956187
  hamiltonian_energy:            24.32719209523015
  hamiltonian_energy_error:      -0.409338463420422
  max_hamiltonian_energy_error:  -0.409338463420422
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:12[K
  iterations:                    2596
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9191726278066515
  log_density:                   -11.600111710415337
  hamiltonian_energy:            14.23895522143357
  hamiltonian_energy_error:      0.05359273977979839
  max_hamiltonian_energy_error:  0.19646375932143556
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▉                       |  ETA: 0:00:10[K
  iterations:                    3049
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.991138694249037
  log_density:                   -14.503333670928757
  hamiltonian_energy:            18.622177539765232
  hamiltonian_energy_error:      -0.10935571883462458
  max_hamiltonian_energy_error:  -0.338936343826429
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████                      |  ETA: 0:00:08[K
  iterations:                    3485
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9943240022772502
  log_density:                   -11.763853765900201
  hamiltonian_energy:            15.053922994582909
  hamiltonian_energy_error:      -0.15754282147540621
  max_hamiltonian_energy_error:  -0.22198306380158073
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▊                     |  ETA: 0:00:08[K
  iterations:                    3793
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9324347939160958
  log_density:                   -12.476989378209167
  hamiltonian_energy:            18.677412183521255
  hamiltonian_energy_error:      -0.22685987984760914
  max_hamiltonian_energy_error:  -0.2408361374962098
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▉                    |  ETA: 0:00:07[K
  iterations:                    4196
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8849886379137286
  log_density:                   -13.239517463542391
  hamiltonian_energy:            21.843294600012786
  hamiltonian_energy_error:      -0.35913482492148674
  max_hamiltonian_energy_error:  -0.40658648019664057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4587
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7291916927200501
  log_density:                   -14.130067056457701
  hamiltonian_energy:            19.374462223564848
  hamiltonian_energy_error:      0.26038075153745766
  max_hamiltonian_energy_error:  0.6979556207555824
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:05[K
  iterations:                    5026
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9881567239518647
  log_density:                   -14.718761926014066
  hamiltonian_energy:            21.738251401593978
  hamiltonian_energy_error:      -0.4056908887499766
  max_hamiltonian_energy_error:  -0.5946882389319263
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5356
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9657645675783085
  log_density:                   -13.36597568838684
  hamiltonian_energy:            14.822230869961514
  hamiltonian_energy_error:      0.10972457144240977
  max_hamiltonian_energy_error:  -0.20483324914355627
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:04[K
  iterations:                    5774
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9054149850731259
  log_density:                   -13.442035662758546
  hamiltonian_energy:            16.827334541049165
  hamiltonian_energy_error:      0.09915180313936389
  max_hamiltonian_energy_error:  0.23774143272784087
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6091
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7870183691864775
  log_density:                   -13.547530270492334
  hamiltonian_energy:            20.07072196018039
  hamiltonian_energy_error:      0.07019534057116417
  max_hamiltonian_energy_error:  0.4886227027951122
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▊              |  ETA: 0:00:04[K
  iterations:                    6483
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9302802252559087
  log_density:                   -12.54948299484631
  hamiltonian_energy:            16.848745839843062
  hamiltonian_energy_error:      -0.1254045778746331
  max_hamiltonian_energy_error:  -0.26284087640514286
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▌             |  ETA: 0:00:03[K
  iterations:                    6785
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9731968548832567
  log_density:                   -15.025301811224072
  hamiltonian_energy:            19.079312078703648
  hamiltonian_energy_error:      0.07423211810852237
  max_hamiltonian_energy_error:  0.07423211810852237
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7164
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9229389683134424
  log_density:                   -14.734841717515987
  hamiltonian_energy:            18.61015288932438
  hamiltonian_energy_error:      0.16298559768636878
  max_hamiltonian_energy_error:  0.16298559768636878
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▎           |  ETA: 0:00:03[K
  iterations:                    7475
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8273367210424445
  log_density:                   -15.677439871296048
  hamiltonian_energy:            19.610474889526092
  hamiltonian_energy_error:      0.28286554323173974
  max_hamiltonian_energy_error:  0.3298537573830558
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:02[K
  iterations:                    7866
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9540652709571786
  log_density:                   -18.959284113084898
  hamiltonian_energy:            23.308788809256267
  hamiltonian_energy_error:      0.22656704862658117
  max_hamiltonian_energy_error:  -0.24743329503179012
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▏         |  ETA: 0:00:02[K
  iterations:                    8187
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8498106047263578
  log_density:                   -13.655783527962743
  hamiltonian_energy:            15.735964035283319
  hamiltonian_energy_error:      0.2456440132943225
  max_hamiltonian_energy_error:  0.2826007516292446
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▎        |  ETA: 0:00:02[K
  iterations:                    8618
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.555968343293088
  hamiltonian_energy:            15.797167943189137
  hamiltonian_energy_error:      -0.5493238600281032
  max_hamiltonian_energy_error:  -0.5978576934534967
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 75%|███████████████████████▎       |  ETA: 0:00:02[K
  iterations:                    9024
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9326049419453858
  log_density:                   -11.233343659788824
  hamiltonian_energy:            17.340314494338163
  hamiltonian_energy_error:      -0.33246674923972463
  max_hamiltonian_energy_error:  -0.33246674923972463
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▏      |  ETA: 0:00:01[K
  iterations:                    9343
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.926295077004247
  log_density:                   -17.274050486900833
  hamiltonian_energy:            24.00059470816274
  hamiltonian_energy_error:      0.12078652883586471
  max_hamiltonian_energy_error:  0.19260342563677924
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▏     |  ETA: 0:00:01[K
  iterations:                    9713
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9940160526455314
  log_density:                   -12.641214336843626
  hamiltonian_energy:            21.792457505774212
  hamiltonian_energy_error:      -0.7547409046176838
  max_hamiltonian_energy_error:  -0.7547409046176838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▉     |  ETA: 0:00:01[K
  iterations:                    10016
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.725720054735799
  hamiltonian_energy:            17.1207103771571
  hamiltonian_energy_error:      -0.08767727290784322
  max_hamiltonian_energy_error:  -0.28298606372690216
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10401
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8249297871628141
  log_density:                   -13.53790821687446
  hamiltonian_energy:            17.16047379120606
  hamiltonian_energy_error:      0.20699653561759135
  max_hamiltonian_energy_error:  0.3577945932405626
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▊   |  ETA: 0:00:01[K
  iterations:                    10722
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8194774950938333
  log_density:                   -12.752548655660675
  hamiltonian_energy:            20.054749492674034
  hamiltonian_energy_error:      -0.1083629189891262
  max_hamiltonian_energy_error:  0.4604670013168892
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▋  |  ETA: 0:00:00[K
  iterations:                    11090
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9061790400306373
  log_density:                   -16.436355076493903
  hamiltonian_energy:            24.07435812623499
  hamiltonian_energy_error:      0.004520848699080204
  max_hamiltonian_energy_error:  0.20428442384816492
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▌ |  ETA: 0:00:00[K
  iterations:                    11425
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9964685454081819
  log_density:                   -14.91275783680964
  hamiltonian_energy:            22.609330069246184
  hamiltonian_energy_error:      -0.33632521741154164
  max_hamiltonian_energy_error:  -0.3646856729079424
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▌|  ETA: 0:00:00[K
  iterations:                    11814
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.031091460236796
  hamiltonian_energy:            22.45243207083766
  hamiltonian_energy_error:      -1.0327040325581471
  max_hamiltonian_energy_error:  -1.0327040325581471
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9857901605172189
  log_density:                   -17.752554143280083
  hamiltonian_energy:            23.117082941837573
  hamiltonian_energy_error:      0.048443925338339966
  max_hamiltonian_energy_error:  -0.28229309400194325
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6848204338909841
  nom_step_size:                 0.6848204338909841
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.998507548457481, 1.00498 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.877243711 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.998507548457481, 1.00498 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.685), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.107367301048733
└   average_acceptance_rate = 0.8747447310491454
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.957674568 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠢⡀⠀⠀⠀⡸⠑⢄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠈⠣⡀⢰⠁⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠑⢄⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠘⠇⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠈⠁⠀⠀⡸⡇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢀⠇⠸⡀⠀⠀⣀⠤⠒⠤⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⡜⠀⠀⢣⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⠀⠀⡰⠁⠀⠀⠀⣀⠤⠃⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢻⡄⠀⢀⡜⠀⠀⣀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⢻⡔⠋⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
