Julia Version 1.6.0-DEV.922
Commit 832e104fff (2020-09-16 07:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_4WWv1J/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_4WWv1J/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0798977169623234 -0.008127369528643028; -0.0798977169623234 0.0 -0.0158052256209427; 0.008127369528643028 0.0158052256209427 0.0])
dAA = so3([0.0 -0.06589228397952501 0.01605521126621007; 0.06589228397952501 0.0 -0.10968399986188726; -0.01605521126621007 0.10968399986188726 0.0])
dAA = so3([0.0 0.06537585323401572 -0.13872924782659754; -0.06537585323401572 0.0 -0.15977244084565578; 0.13872924782659754 0.15977244084565578 0.0])
dAA = Quaternion(0.9957105594743025, [-0.03200135930783363, -0.07296518411786203, -0.04703697120849615])
dAA = SO3([0.9945825091295137 0.02163417616283071 0.10167396399962111; -0.01726713067393677 0.998898219196384 -0.043637070073295904; -0.10250599363905427 0.04164504902204045 0.9938602573601694])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.98575043311157 -0.15643623890228428 0.06183677529156691; 0.16734748628177099 0.9492779578866284 -0.2662070200159361; -0.01705586279039478 0.27276191418286383 0.9619303694736825]), [0.15805225620942698, -0.08127369528643028, -0.798977169623234])
xj = SE3(SO3([0.9070136830408819 0.2437920848216397 -0.3433534595062835; -0.19119449108677786 0.9648984307513647 0.1800435639272392; 0.37519441007920495 -0.09765468607226326 0.9217877830246206]), [1.5977244084565576, -1.3872924782659755, -0.6537585323401572])
Dx = SE3(SO3([0.8556939490433407 0.4034570650320579 -0.32405286952337015; -0.22104777978193957 0.8511824159860267 0.4760529106829049; 0.46789501453220006 -0.33572442775572425 0.8175349313540087]), [1.1981216580957623, -1.4253816265379415, 0.5763862690900313])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
