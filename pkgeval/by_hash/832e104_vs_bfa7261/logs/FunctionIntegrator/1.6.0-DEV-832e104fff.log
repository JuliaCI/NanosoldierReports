Julia Version 1.6.0-DEV.922
Commit 832e104fff (2020-09-16 07:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_40fpmM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_40fpmM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.879209 seconds (1.36 M allocations: 72.281 MiB, 1.88% gc time)
Running: chebyshev_quadrature with k=1
  1.752301 seconds (2.19 M allocations: 126.254 MiB, 6.12% gc time)
Running: chebyshev_quadrature with k=2
  0.279905 seconds (409.21 k allocations: 23.530 MiB, 7.94% gc time)
Running: chebyshev_quadrature with k=3
  0.307947 seconds (522.62 k allocations: 28.712 MiB)
Running: chebyshev_quadrature with k=4
  0.375216 seconds (467.27 k allocations: 25.328 MiB, 15.37% gc time)
Running: jacobi_quadrature with α=β=1
 41.730606 seconds (37.19 M allocations: 3.043 GiB, 9.81% gc time)
Running: laguerre_quadrature with k=1
  3.096380 seconds (3.17 M allocations: 177.134 MiB, 8.09% gc time)
Running: legendre_quadrature
  0.233678 seconds (206.07 k allocations: 11.838 MiB)
Running: lobatto_quadrature
  0.406736 seconds (329.40 k allocations: 19.881 MiB)
Running: radau_quadrature
  0.418919 seconds (437.93 k allocations: 26.762 MiB, 12.05% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.480468 seconds (100.02 M allocations: 1.491 GiB, 0.48% gc time)
Running: rectangle_rule_midpoint.
  0.152609 seconds (172.63 k allocations: 3.836 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.198330 seconds (100.02 M allocations: 1.491 GiB, 0.53% gc time)
Running: rombergs_method
  0.621770 seconds (722.08 k allocations: 41.773 MiB)
Running: simpsons_rule
  0.077588 seconds (45.97 k allocations: 2.054 MiB, 47.82% gc time)
Running: simpsons38_rule
  0.087663 seconds (109.12 k allocations: 5.781 MiB)
Running: trapezoidal_rule
  0.293464 seconds (1.51 M allocations: 25.690 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.104861 seconds (31.26 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.609675 seconds (297.02 k allocations: 15.743 MiB)
Running: chebyshev_quadrature with k=2
  0.177595 seconds (93.84 k allocations: 2.677 MiB)
Running: chebyshev_quadrature with k=3
  0.205860 seconds (82.09 k allocations: 2.478 MiB)
Running: chebyshev_quadrature with k=4
  0.224944 seconds (64.71 k allocations: 2.124 MiB, 13.11% gc time)
Running: jacobi_quadrature with α=β=1
  3.042041 seconds (499.29 k allocations: 161.612 MiB, 6.90% gc time)
Running: legendre_quadrature
  0.184803 seconds (41.64 k allocations: 2.407 MiB)
Running: lobatto_quadrature
  0.025357 seconds (16.18 k allocations: 1.009 MiB)
Running: radau_quadrature
  0.022174 seconds (16.29 k allocations: 1.016 MiB)
Running: rectangle_rule_left
 31.088988 seconds (471.41 M allocations: 7.025 GiB, 3.17% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.728612 seconds (476.96 M allocations: 7.107 GiB, 2.17% gc time)
Running: rombergs_method
  0.375020 seconds (326.60 k allocations: 18.560 MiB, 2.35% gc time)
Running: simpsons_rule
  0.000079 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.062974 seconds (19.12 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.056418 seconds (17.61 k allocations: 1.065 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030819 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.105774 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.105211 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.124605 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.114861 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.285090 seconds (362.14 k allocations: 18.889 MiB)
Running: legendre_quadrature
  0.069602 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000091 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000061 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000616 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000355 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000497 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.073330 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000049 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024827 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022303 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059891 seconds (72.77 k allocations: 4.238 MiB)
Running: chebyshev_quadrature with k=1
  0.206373 seconds (230.11 k allocations: 12.936 MiB, 12.66% gc time)
Running: chebyshev_quadrature with k=2
  0.215272 seconds (282.77 k allocations: 15.876 MiB)
Running: chebyshev_quadrature with k=3
  0.197672 seconds (262.34 k allocations: 14.303 MiB)
Running: chebyshev_quadrature with k=4
  0.277714 seconds (262.37 k allocations: 14.229 MiB, 22.50% gc time)
Running: jacobi_quadrature with α=β=1
  2.801735 seconds (445.68 k allocations: 163.134 MiB, 2.56% gc time)
Running: legendre_quadrature
  0.169933 seconds (184.98 k allocations: 10.685 MiB, 7.57% gc time)
Running: lobatto_quadrature
  0.178501 seconds (195.84 k allocations: 11.376 MiB)
Running: radau_quadrature
  0.179666 seconds (195.84 k allocations: 11.373 MiB)
Running: rectangle_rule_left
  1.124184 seconds (18.94 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.025569 seconds (24.84 k allocations: 1.564 MiB)
Running: rectangle_rule_right
  1.118180 seconds (17.51 k allocations: 1.071 MiB)
Running: rombergs_method
  0.159749 seconds (133.60 k allocations: 7.727 MiB, 11.66% gc time)
Running: simpsons_rule
  0.029271 seconds (27.73 k allocations: 1.739 MiB)
Running: simpsons38_rule
  0.032201 seconds (42.67 k allocations: 2.694 MiB)
Running: trapezoidal_rule
  0.027297 seconds (44.25 k allocations: 1.780 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045299 seconds (99.77 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.202703 seconds (236.70 k allocations: 13.009 MiB)
Running: chebyshev_quadrature with k=2
  0.196864 seconds (289.78 k allocations: 15.845 MiB)
Running: chebyshev_quadrature with k=3
  0.209841 seconds (269.06 k allocations: 14.289 MiB, 8.85% gc time)
Running: chebyshev_quadrature with k=4
  0.355708 seconds (269.09 k allocations: 14.353 MiB)
Running: hermite_quadrature with k=2
 15.923523 seconds (20.86 M allocations: 1.086 GiB, 10.57% gc time)
Running: jacobi_quadrature with α=β=1
  0.484800 seconds (454.89 k allocations: 49.397 MiB, 20.13% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.277061 seconds (275.97 k allocations: 15.225 MiB, 19.00% gc time)
Running: legendre_quadrature
  0.148718 seconds (191.54 k allocations: 11.012 MiB)
Running: lobatto_quadrature
  0.242011 seconds (216.66 k allocations: 37.144 MiB, 10.46% gc time)
Running: radau_quadrature
  0.293279 seconds (213.26 k allocations: 29.804 MiB)
Running: rectangle_rule_left
  0.028829 seconds (21.89 k allocations: 1.301 MiB)
Running: rectangle_rule_midpoint
  0.027362 seconds (26.66 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.025155 seconds (18.64 k allocations: 1.124 MiB)
Running: rombergs_method
  0.197235 seconds (136.09 k allocations: 7.773 MiB)
Running: simpsons_rule
  0.059369 seconds (39.61 k allocations: 2.073 MiB, 37.60% gc time)
Running: simpsons38_rule
  0.032767 seconds (57.69 k allocations: 3.080 MiB)
Running: trapezoidal_rule
  0.025128 seconds (30.32 k allocations: 1.707 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046171 seconds (60.13 k allocations: 2.291 MiB)
Running: chebyshev_quadrature with k=1
  0.200942 seconds (232.22 k allocations: 12.792 MiB)
Running: chebyshev_quadrature with k=2
  0.219885 seconds (284.99 k allocations: 15.610 MiB)
Running: chebyshev_quadrature with k=3
  0.193756 seconds (264.48 k allocations: 14.078 MiB, 15.58% gc time)
Running: chebyshev_quadrature with k=4
  0.165048 seconds (264.50 k allocations: 14.079 MiB)
Running: hermite_quadrature with k=2
  0.117047 seconds (170.26 k allocations: 9.767 MiB)
Running: jacobi_quadrature with α=β=1
 12.070999 seconds (448.13 k allocations: 1.175 GiB, 12.40% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.220461 seconds (271.25 k allocations: 15.047 MiB)
Running: legendre_quadrature
  0.155177 seconds (187.10 k allocations: 10.791 MiB)
Running: lobatto_quadrature
  0.227157 seconds (207.41 k allocations: 22.877 MiB, 6.60% gc time)
Running: radau_quadrature
  0.199188 seconds (206.56 k allocations: 20.810 MiB)
Running: rectangle_rule_left
  0.025576 seconds (19.66 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.025768 seconds (25.54 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.023041 seconds (17.49 k allocations: 1.069 MiB)
Running: rombergs_method
  0.109328 seconds (131.91 k allocations: 7.588 MiB)
Running: simpsons_rule
  0.033866 seconds (32.11 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.054396 seconds (48.48 k allocations: 2.838 MiB, 30.48% gc time)
Running: trapezoidal_rule
  0.028178 seconds (25.21 k allocations: 1.544 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.073073 seconds (31.08 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.184697 seconds (230.60 k allocations: 13.011 MiB)
Running: chebyshev_quadrature with k=2
  0.221258 seconds (283.28 k allocations: 15.968 MiB)
Running: chebyshev_quadrature with k=3
  0.220821 seconds (262.85 k allocations: 14.295 MiB, 8.52% gc time)
Running: chebyshev_quadrature with k=4
  0.200171 seconds (262.88 k allocations: 14.131 MiB)
Running: jacobi_quadrature with α=β=1
  2.940005 seconds (446.22 k allocations: 194.167 MiB, 5.01% gc time)
Running: legendre_quadrature
  0.200434 seconds (185.48 k allocations: 10.711 MiB, 7.81% gc time)
Running: lobatto_quadrature
  0.182152 seconds (196.34 k allocations: 11.405 MiB)
Running: radau_quadrature
  0.186050 seconds (196.34 k allocations: 11.401 MiB)
Running: rectangle_rule_left
  0.332266 seconds (19.47 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.024639 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.109797 seconds (17.85 k allocations: 1.087 MiB)
Running: rombergs_method
  0.132499 seconds (144.42 k allocations: 8.459 MiB)
Running: simpsons_rule
  0.043250 seconds (28.43 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.069581 seconds (43.39 k allocations: 2.724 MiB, 32.35% gc time)
Running: trapezoidal_rule
  0.027114 seconds (45.19 k allocations: 1.814 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025235 seconds (31.84 k allocations: 1.837 MiB)
Running: chebyshev_quadrature with k=1
  0.145131 seconds (231.19 k allocations: 13.018 MiB)
Running: chebyshev_quadrature with k=2
  0.187218 seconds (283.90 k allocations: 15.859 MiB)
Running: chebyshev_quadrature with k=3
  0.261908 seconds (263.43 k allocations: 14.216 MiB, 12.18% gc time)
Running: chebyshev_quadrature with k=4
  0.225157 seconds (263.45 k allocations: 14.295 MiB)
Running: jacobi_quadrature with α=β=1
  2.208011 seconds (446.93 k allocations: 148.855 MiB, 5.42% gc time)
Running: legendre_quadrature
  0.191068 seconds (186.07 k allocations: 10.734 MiB, 10.05% gc time)
Running: lobatto_quadrature
  0.185839 seconds (196.94 k allocations: 11.415 MiB)
Running: radau_quadrature
  0.199914 seconds (196.93 k allocations: 11.417 MiB)
Running: rectangle_rule_left
  1.378215 seconds (19.72 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.030080 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  1.289687 seconds (17.81 k allocations: 1.085 MiB)
Running: rombergs_method
  0.134207 seconds (134.82 k allocations: 7.783 MiB)
Running: simpsons_rule
  0.033576 seconds (29.12 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.035629 seconds (44.09 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.028036 seconds (57.42 k allocations: 2.014 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.167958 seconds (146.08 k allocations: 8.743 MiB)
Running: chebyshev_quadrature with k=1
  0.167549 seconds (69.97 k allocations: 2.207 MiB, 12.57% gc time)
Running: chebyshev_quadrature with k=2
  0.157579 seconds (105.13 k allocations: 2.869 MiB)
Running: chebyshev_quadrature with k=3
  0.167848 seconds (92.61 k allocations: 2.658 MiB)
Running: chebyshev_quadrature with k=4
  0.166403 seconds (72.14 k allocations: 2.252 MiB)
Running: jacobi_quadrature with α=β=1
  2.382649 seconds (474.87 k allocations: 167.569 MiB, 5.18% gc time)
Running: legendre_quadrature
  0.122849 seconds (18.76 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000106 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000097 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 47.511839 seconds (590.00 M allocations: 8.792 GiB, 3.10% gc time)
Running: rectangle_rule_midpoint
  0.000056 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.673617 seconds (592.75 M allocations: 8.833 GiB, 3.10% gc time)
Running: rombergs_method
  0.133996 seconds (20.54 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000050 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029281 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022356 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.197972 seconds (629.33 M allocations: 9.387 GiB, 4.46% gc time)
Running: chebyshev_quadrature with k=1
  0.577537 seconds (418.87 k allocations: 23.156 MiB)
Running: chebyshev_quadrature with k=2
 14.219238 seconds (473.59 k allocations: 4.041 GiB, 4.51% gc time)
Running: chebyshev_quadrature with k=3
  6.528766 seconds (276.76 k allocations: 1.643 GiB, 5.01% gc time)
Running: chebyshev_quadrature with k=4
  8.874420 seconds (276.78 k allocations: 2.261 GiB, 2.46% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.666578 seconds (483.68 k allocations: 13.254 GiB, 3.46% gc time)
Running: legendre_quadrature.
  6.133732 seconds (223.21 k allocations: 1.976 GiB, 1.79% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.060302 seconds (8.23 M allocations: 13.383 GiB, 3.50% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.164052 seconds (7.23 M allocations: 13.369 GiB, 2.14% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.543618 seconds (22.38 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.231095 seconds (30.63 k allocations: 1.894 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.069044 seconds (22.59 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.223910 seconds (437.94 k allocations: 152.685 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.809074 seconds (600.04 M allocations: 8.943 GiB, 8.40% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.874059 seconds (600.05 M allocations: 8.943 GiB, 7.80% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.082609 seconds (600.03 M allocations: 8.943 GiB, 8.32% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064384 seconds (180.71 k allocations: 4.420 MiB)
Running: chebyshev_quadrature with k=1
  0.227183 seconds (247.17 k allocations: 13.417 MiB)
Running: chebyshev_quadrature with k=2
  0.241409 seconds (271.77 k allocations: 14.550 MiB)
Running: chebyshev_quadrature with k=3
  0.217901 seconds (247.88 k allocations: 12.783 MiB)
Running: chebyshev_quadrature with k=4
  0.260848 seconds (247.90 k allocations: 12.779 MiB)
Running: jacobi_quadrature with α=β=1
  0.416055 seconds (387.50 k allocations: 34.885 MiB)
Running: laguerre_quadrature with k=2
  0.237046 seconds (180.07 k allocations: 10.496 MiB)
Running: legendre_quadrature
  0.228554 seconds (145.31 k allocations: 8.044 MiB)
Running: lobatto_quadrature
  0.051142 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.043934 seconds (9.47 k allocations: 13.174 MiB)
Running: rectangle_rule_left
  0.093262 seconds (18.99 k allocations: 1.129 MiB)
Running: rectangle_rule_midpoint
  0.059957 seconds (25.65 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.061257 seconds (17.59 k allocations: 1.055 MiB)
Running: rombergs_method
  0.288297 seconds (171.01 k allocations: 9.767 MiB)
Running: simpsons_rule
  0.001911 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.061746 seconds (79.17 k allocations: 3.400 MiB)
Running: trapezoidal_rule
  0.213632 seconds (2.39 M allocations: 37.700 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002269 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.122641 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.142253 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.125916 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.128794 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.408325 seconds (364.54 k allocations: 904.719 MiB, 6.26% gc time)
Running: legendre_quadrature
  0.072385 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000265 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000213 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.182767 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000588 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.582927 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094466 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000948 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000746 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.123698 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.114224 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.122478 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.121023 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.759202 seconds (371.10 k allocations: 252.840 MiB)
Running: legendre_quadrature
  0.085150 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000102 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000067 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.086703 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001118 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.956292 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.096720 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001885 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
