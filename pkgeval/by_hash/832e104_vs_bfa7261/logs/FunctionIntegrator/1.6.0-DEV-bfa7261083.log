Julia Version 1.6.0-DEV.921
Commit bfa7261083 (2020-09-16 06:22 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_9exIYd/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_9exIYd/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.030220 seconds (1.36 M allocations: 72.200 MiB, 5.92% gc time)
Running: chebyshev_quadrature with k=1
  1.767062 seconds (2.15 M allocations: 123.639 MiB, 3.50% gc time)
Running: chebyshev_quadrature with k=2
  0.311847 seconds (409.21 k allocations: 23.542 MiB, 10.21% gc time)
Running: chebyshev_quadrature with k=3
  0.319502 seconds (522.62 k allocations: 28.692 MiB)
Running: chebyshev_quadrature with k=4
  0.351030 seconds (467.27 k allocations: 25.335 MiB, 11.96% gc time)
Running: jacobi_quadrature with α=β=1
 42.428507 seconds (37.16 M allocations: 3.041 GiB, 8.83% gc time)
Running: laguerre_quadrature with k=1
  3.320288 seconds (3.17 M allocations: 177.223 MiB, 6.18% gc time)
Running: legendre_quadrature
  0.241380 seconds (206.05 k allocations: 11.848 MiB, 10.43% gc time)
Running: lobatto_quadrature
  0.369578 seconds (329.79 k allocations: 19.906 MiB)
Running: radau_quadrature
  0.388672 seconds (414.18 k allocations: 25.234 MiB, 6.99% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 82.219118 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rectangle_rule_midpoint.
  0.148936 seconds (172.63 k allocations: 3.836 MiB, 7.38% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.635574 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rombergs_method
  0.529459 seconds (722.03 k allocations: 41.693 MiB, 5.26% gc time)
Running: simpsons_rule
  0.039968 seconds (45.97 k allocations: 2.054 MiB)
Running: simpsons38_rule
  0.106013 seconds (109.07 k allocations: 5.777 MiB, 17.23% gc time)
Running: trapezoidal_rule
  0.312365 seconds (1.51 M allocations: 25.686 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.089084 seconds (31.26 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.480151 seconds (272.94 k allocations: 14.184 MiB)
Running: chebyshev_quadrature with k=2
  0.150857 seconds (93.84 k allocations: 2.677 MiB)
Running: chebyshev_quadrature with k=3
  0.157220 seconds (82.09 k allocations: 2.478 MiB)
Running: chebyshev_quadrature with k=4
  0.167274 seconds (64.70 k allocations: 2.124 MiB)
Running: jacobi_quadrature with α=β=1
  2.999177 seconds (499.16 k allocations: 161.594 MiB, 9.92% gc time)
Running: legendre_quadrature
  0.174772 seconds (41.63 k allocations: 2.406 MiB)
Running: lobatto_quadrature
  0.018775 seconds (16.11 k allocations: 1.004 MiB)
Running: radau_quadrature
  0.020142 seconds (16.23 k allocations: 1.011 MiB)
Running: rectangle_rule_left
 32.040817 seconds (471.41 M allocations: 7.025 GiB, 3.13% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.680462 seconds (476.96 M allocations: 7.107 GiB, 1.95% gc time)
Running: rombergs_method
  0.344032 seconds (326.54 k allocations: 18.555 MiB)
Running: simpsons_rule
  0.000057 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.062346 seconds (19.12 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.075963 seconds (17.62 k allocations: 1.065 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030148 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.118604 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.117949 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.121839 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.116289 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.326254 seconds (362.17 k allocations: 18.911 MiB)
Running: legendre_quadrature
  0.151034 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000140 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000095 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000530 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000363 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000505 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.084623 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000062 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025855 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.033052 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.061924 seconds (72.77 k allocations: 4.238 MiB)
Running: chebyshev_quadrature with k=1
  0.197975 seconds (230.11 k allocations: 12.932 MiB)
Running: chebyshev_quadrature with k=2
  0.251132 seconds (282.77 k allocations: 15.902 MiB, 10.72% gc time)
Running: chebyshev_quadrature with k=3
  0.214961 seconds (262.34 k allocations: 14.292 MiB)
Running: chebyshev_quadrature with k=4
  0.230474 seconds (262.37 k allocations: 14.214 MiB, 10.08% gc time)
Running: jacobi_quadrature with α=β=1
  2.258978 seconds (445.69 k allocations: 163.101 MiB, 2.31% gc time)
Running: legendre_quadrature
  0.185467 seconds (184.98 k allocations: 10.715 MiB)
Running: lobatto_quadrature
  0.220777 seconds (195.85 k allocations: 11.375 MiB, 8.98% gc time)
Running: radau_quadrature
  0.203202 seconds (195.85 k allocations: 11.379 MiB)
Running: rectangle_rule_left
  1.239578 seconds (18.94 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.026190 seconds (24.84 k allocations: 1.564 MiB)
Running: rectangle_rule_right
  1.090895 seconds (17.51 k allocations: 1.071 MiB)
Running: rombergs_method
  0.108685 seconds (133.60 k allocations: 7.727 MiB)
Running: simpsons_rule
  0.025590 seconds (27.73 k allocations: 1.739 MiB)
Running: simpsons38_rule
  0.034219 seconds (42.67 k allocations: 2.694 MiB)
Running: trapezoidal_rule
  0.025068 seconds (44.25 k allocations: 1.780 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036118 seconds (99.77 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.201035 seconds (236.70 k allocations: 13.003 MiB, 9.62% gc time)
Running: chebyshev_quadrature with k=2
  0.183115 seconds (289.78 k allocations: 15.848 MiB)
Running: chebyshev_quadrature with k=3
  0.177562 seconds (269.06 k allocations: 14.290 MiB)
Running: chebyshev_quadrature with k=4
  0.200134 seconds (269.08 k allocations: 14.284 MiB, 8.71% gc time)
Running: hermite_quadrature with k=2
 13.954277 seconds (20.86 M allocations: 1.086 GiB, 11.13% gc time)
Running: jacobi_quadrature with α=β=1
  0.400847 seconds (454.91 k allocations: 49.320 MiB, 8.60% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.231333 seconds (275.97 k allocations: 15.221 MiB)
Running: legendre_quadrature
  0.184873 seconds (191.54 k allocations: 11.006 MiB, 16.47% gc time)
Running: lobatto_quadrature
  0.200393 seconds (216.66 k allocations: 37.160 MiB)
Running: radau_quadrature
  0.231404 seconds (213.26 k allocations: 29.810 MiB, 13.88% gc time)
Running: rectangle_rule_left
  0.025604 seconds (21.89 k allocations: 1.301 MiB)
Running: rectangle_rule_midpoint
  0.024631 seconds (26.66 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.022569 seconds (18.64 k allocations: 1.124 MiB)
Running: rombergs_method
  0.110558 seconds (136.09 k allocations: 7.768 MiB)
Running: simpsons_rule
  0.033594 seconds (39.61 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.036473 seconds (57.69 k allocations: 3.080 MiB)
Running: trapezoidal_rule
  0.035912 seconds (30.32 k allocations: 1.707 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034807 seconds (60.13 k allocations: 2.291 MiB)
Running: chebyshev_quadrature with k=1
  0.201449 seconds (232.22 k allocations: 12.800 MiB, 12.10% gc time)
Running: chebyshev_quadrature with k=2
  0.204620 seconds (284.99 k allocations: 15.610 MiB)
Running: chebyshev_quadrature with k=3
  0.186378 seconds (264.48 k allocations: 14.079 MiB)
Running: chebyshev_quadrature with k=4
  0.215710 seconds (264.50 k allocations: 14.078 MiB, 12.70% gc time)
Running: hermite_quadrature with k=2
  0.133048 seconds (170.26 k allocations: 9.766 MiB)
Running: jacobi_quadrature with α=β=1
 12.993120 seconds (448.15 k allocations: 1.175 GiB, 10.22% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.264679 seconds (271.25 k allocations: 15.041 MiB)
Running: legendre_quadrature
  0.236762 seconds (187.10 k allocations: 10.791 MiB)
Running: lobatto_quadrature
  0.259093 seconds (207.42 k allocations: 22.877 MiB)
Running: radau_quadrature
  0.304635 seconds (206.57 k allocations: 20.811 MiB, 9.99% gc time)
Running: rectangle_rule_left
  0.028129 seconds (19.66 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.026432 seconds (25.54 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.025518 seconds (17.49 k allocations: 1.069 MiB)
Running: rombergs_method
  0.142003 seconds (131.91 k allocations: 7.590 MiB)
Running: simpsons_rule
  0.069163 seconds (32.11 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.084789 seconds (48.48 k allocations: 2.838 MiB)
Running: trapezoidal_rule
  0.028035 seconds (25.21 k allocations: 1.544 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034840 seconds (31.08 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.217001 seconds (230.60 k allocations: 13.011 MiB)
Running: chebyshev_quadrature with k=2
  0.268189 seconds (283.28 k allocations: 15.955 MiB, 7.42% gc time)
Running: chebyshev_quadrature with k=3
  0.285036 seconds (262.85 k allocations: 14.294 MiB)
Running: chebyshev_quadrature with k=4
  0.244494 seconds (262.88 k allocations: 14.194 MiB)
Running: jacobi_quadrature with α=β=1
  1.359020 seconds (446.24 k allocations: 194.169 MiB, 3.57% gc time)
Running: legendre_quadrature
  0.150507 seconds (185.48 k allocations: 10.711 MiB)
Running: lobatto_quadrature
  0.168663 seconds (196.35 k allocations: 11.469 MiB)
Running: radau_quadrature
  0.196722 seconds (196.35 k allocations: 11.401 MiB, 10.30% gc time)
Running: rectangle_rule_left
  0.295401 seconds (19.47 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.024491 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.104318 seconds (17.85 k allocations: 1.087 MiB)
Running: rombergs_method
  0.119478 seconds (144.42 k allocations: 8.455 MiB)
Running: simpsons_rule
  0.034754 seconds (28.43 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.036298 seconds (43.39 k allocations: 2.724 MiB)
Running: trapezoidal_rule
  0.025958 seconds (45.19 k allocations: 1.814 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.060185 seconds (31.84 k allocations: 1.837 MiB)
Running: chebyshev_quadrature with k=1
  0.228275 seconds (231.19 k allocations: 12.975 MiB)
Running: chebyshev_quadrature with k=2
  0.378175 seconds (283.90 k allocations: 15.859 MiB, 11.52% gc time)
Running: chebyshev_quadrature with k=3
  0.205723 seconds (263.43 k allocations: 14.220 MiB)
Running: chebyshev_quadrature with k=4
  0.212166 seconds (263.45 k allocations: 14.303 MiB)
Running: jacobi_quadrature with α=β=1
  2.161559 seconds (446.95 k allocations: 148.856 MiB, 10.64% gc time)
Running: legendre_quadrature
  0.181415 seconds (186.07 k allocations: 10.789 MiB)
Running: lobatto_quadrature
  0.225682 seconds (196.95 k allocations: 11.434 MiB)
Running: radau_quadrature
  0.319036 seconds (196.94 k allocations: 11.435 MiB, 9.09% gc time)
Running: rectangle_rule_left
  1.441163 seconds (19.72 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.031549 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  1.508666 seconds (17.81 k allocations: 1.085 MiB)
Running: rombergs_method
  0.131945 seconds (134.82 k allocations: 7.783 MiB)
Running: simpsons_rule
  0.036678 seconds (29.12 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.032859 seconds (44.09 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.024908 seconds (57.42 k allocations: 2.014 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.171070 seconds (146.08 k allocations: 8.743 MiB)
Running: chebyshev_quadrature with k=1
  0.173057 seconds (69.97 k allocations: 2.207 MiB)
Running: chebyshev_quadrature with k=2
  0.160150 seconds (105.13 k allocations: 2.869 MiB)
Running: chebyshev_quadrature with k=3
  0.166325 seconds (92.61 k allocations: 2.658 MiB)
Running: chebyshev_quadrature with k=4
  0.196928 seconds (72.14 k allocations: 2.252 MiB)
Running: jacobi_quadrature with α=β=1
  2.297291 seconds (474.82 k allocations: 167.566 MiB, 9.81% gc time)
Running: legendre_quadrature
  0.107192 seconds (18.76 k allocations: 1.093 MiB)
Running: lobatto_quadrature
  0.000128 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000086 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 49.349107 seconds (590.00 M allocations: 8.792 GiB, 3.45% gc time)
Running: rectangle_rule_midpoint
  0.000023 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.479860 seconds (592.75 M allocations: 8.833 GiB, 3.35% gc time)
Running: rombergs_method
  0.171650 seconds (20.54 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.043878 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.060817 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.791536 seconds (629.33 M allocations: 9.387 GiB, 4.98% gc time)
Running: chebyshev_quadrature with k=1
  0.715213 seconds (418.89 k allocations: 23.197 MiB, 6.23% gc time)
Running: chebyshev_quadrature with k=2
 14.834169 seconds (473.61 k allocations: 4.040 GiB, 4.27% gc time)
Running: chebyshev_quadrature with k=3
  6.373851 seconds (276.75 k allocations: 1.643 GiB, 5.39% gc time)
Running: chebyshev_quadrature with k=4
  8.914973 seconds (276.78 k allocations: 2.261 GiB, 2.39% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 68.705487 seconds (483.62 k allocations: 13.254 GiB, 2.72% gc time)
Running: legendre_quadrature.
  6.987415 seconds (223.19 k allocations: 1.976 GiB, 1.22% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.526970 seconds (8.23 M allocations: 13.383 GiB, 3.87% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.297232 seconds (7.23 M allocations: 13.369 GiB, 2.51% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.325144 seconds (22.38 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.210387 seconds (30.63 k allocations: 1.894 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.194717 seconds (22.59 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.293425 seconds (437.88 k allocations: 152.678 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.838855 seconds (600.04 M allocations: 8.943 GiB, 8.60% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.990186 seconds (600.05 M allocations: 8.943 GiB, 8.05% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.126492 seconds (600.03 M allocations: 8.943 GiB, 8.24% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.072377 seconds (180.71 k allocations: 4.420 MiB)
Running: chebyshev_quadrature with k=1
  0.262531 seconds (247.17 k allocations: 13.416 MiB)
Running: chebyshev_quadrature with k=2
  0.317587 seconds (271.77 k allocations: 14.487 MiB)
Running: chebyshev_quadrature with k=3
  0.216699 seconds (247.88 k allocations: 12.783 MiB)
Running: chebyshev_quadrature with k=4
  0.256020 seconds (247.91 k allocations: 12.782 MiB)
Running: jacobi_quadrature with α=β=1
  0.417297 seconds (387.52 k allocations: 34.885 MiB)
Running: laguerre_quadrature with k=2
  0.200067 seconds (180.07 k allocations: 10.457 MiB)
Running: legendre_quadrature
  0.133069 seconds (145.31 k allocations: 8.035 MiB)
Running: lobatto_quadrature
  0.037453 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.034086 seconds (9.47 k allocations: 13.174 MiB)
Running: rectangle_rule_left
  0.056826 seconds (18.99 k allocations: 1.129 MiB)
Running: rectangle_rule_midpoint
  0.048107 seconds (25.65 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.051846 seconds (17.59 k allocations: 1.055 MiB)
Running: rombergs_method
  0.241991 seconds (171.90 k allocations: 9.876 MiB)
Running: simpsons_rule
  0.001989 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052132 seconds (79.17 k allocations: 3.400 MiB)
Running: trapezoidal_rule
  0.186349 seconds (2.39 M allocations: 37.700 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.003964 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.180655 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.178516 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.162053 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.188311 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  9.306147 seconds (364.56 k allocations: 904.721 MiB, 3.68% gc time)
Running: legendre_quadrature
  0.070120 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000173 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000138 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.716436 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.036130 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.079708 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000096 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001266 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000718 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.111196 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.125568 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.135914 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.120385 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.227359 seconds (371.12 k allocations: 252.864 MiB)
Running: legendre_quadrature
  0.085993 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000091 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000049 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.950131 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001087 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.638448 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.130931 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002017 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
