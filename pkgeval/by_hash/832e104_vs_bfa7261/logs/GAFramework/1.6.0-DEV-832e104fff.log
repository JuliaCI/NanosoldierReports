Julia Version 1.6.0-DEV.922
Commit 832e104fff (2020-09-16 07:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_dTcLRF/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_dTcLRF/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172317286699108
curgen: 20 fitness: 0.21723322408175091
curgen: 30 fitness: 0.21723322408175091
curgen: 40 fitness: 0.21723322408175091
curgen: 50 fitness: 0.21723322408175091
CoordinateCreature{Vector{Float64}}([-0.22264372019702477], -0.21723322408175091) -0.22264372019702477 -0.21723322408175091
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579193529354202
curgen: 100 fitness: 3.257961840000568
curgen: 150 fitness: 3.258041721230825
curgen: 200 fitness: 3.2581734816326318
curgen: 250 fitness: 3.258276958099632
curgen: 300 fitness: 3.258316205209621
curgen: 350 fitness: 3.2584362065577617
curgen: 400 fitness: 3.2584362065577617
curgen: 450 fitness: 3.2584433362813905
curgen: 500 fitness: 3.2584705855797824
CoordinateCreature{Vector{Float64}}([-0.2225415833887945, 0.22281390573832477, -0.22258259750238957, 0.22256160864025915, -0.2231299656795574, -0.22227988002929056, -0.2226236030942364, -0.2227838683496956, 0.22231449404568215, -0.22251730611524356, 0.2222029077504657, -0.22266689201748904, 0.2224492423912223, 0.22256606198820222, 0.22269794694667047], -3.2584705855797824) [-0.2225415833887945, 0.22281390573832477, -0.22258259750238957, 0.22256160864025915, -0.2231299656795574, -0.22227988002929056, -0.2226236030942364, -0.2227838683496956, 0.22231449404568215, -0.22251730611524356, 0.2222029077504657, -0.22266689201748904, 0.2224492423912223, 0.22256606198820222, 0.22269794694667047] -3.2584705855797824
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003739179884320265
curgen: 100 fitness: -0.003502195314808887
curgen: 150 fitness: -0.002900510535880585
curgen: 200 fitness: -0.0016857649368660077
curgen: 250 fitness: -0.0016857649368660077
curgen: 300 fitness: -0.0016363563967445316
curgen: 350 fitness: -0.0016363563967445316
curgen: 400 fitness: -0.0011561500904804234
curgen: 450 fitness: -0.0009939292454532733
curgen: 500 fitness: -0.0006894746976513488
CoordinateCreature{Vector{Float64}}([7.585210769472321e-5, 0.0002934069236902549, 0.00011423105385852407, -0.0007377943268441327, 1.3937887870541735e-5, 0.001289551457755524, -8.809400793322622e-5, 0.0001390843261854216, -0.0005332450387092194, -0.00021892788828332867, -0.00021774704428053097, -0.0005480373727799052, 0.00042694050614426084, -0.0004936675247012574, 0.00017270657207990765], 0.0006894746976513488) [7.585210769472321e-5, 0.0002934069236902549, 0.00011423105385852407, -0.0007377943268441327, 1.3937887870541735e-5, 0.001289551457755524, -8.809400793322622e-5, 0.0001390843261854216, -0.0005332450387092194, -0.00021892788828332867, -0.00021774704428053097, -0.0005480373727799052, 0.00042694050614426084, -0.0004936675247012574, 0.00017270657207990765] 0.0006894746976513488
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
