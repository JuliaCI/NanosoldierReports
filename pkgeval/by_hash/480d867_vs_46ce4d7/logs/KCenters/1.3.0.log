Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Missings ──────────────────── v0.4.3
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataFrames ────────────────── v0.20.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed StatsBase ─────────────────── v0.32.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
    Status `/tmp/jl_k8Er5y/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.4
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 162.6
Test Summary:        | Pass  Total
Clustering with enet[ Info: 77.80000000000003
[ Info: 43.79999999999999
[ Info: 26.71999999999999
 |    4      4
Test Summary:        |
Clustering with dnet | No tests
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 75.78000114538527
inertia(cfft.distances) = 18.105161281515848
inertia(cdnet.distances) = 24.163308960631547
inertia(crand.distances) = 21.384551897070835
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8071699134199143,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.5859375,"distances_sum":2144.834630499147}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4580078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4580078125,"f1":null,"seconds":8.517876267433167e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.46875,"distances_sum":1294.013777210708}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.689574314574315,"seconds":4.371628165245056e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4375,"distances_sum":1607.7317746924991}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8071699134199143,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.5859375,"distances_sum":2144.834630499147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9346414002664009,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8515625,"distances_sum":2970.5848999146233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9438160797535801,"seconds":3.781542181968689e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":3057.916644815855}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9187073343323349,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7890625,"distances_sum":2847.0838887308078}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9438160797535801,"seconds":3.781542181968689e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":3057.916644815855}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957875457875458,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":3168.9649118519933}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9512534340659345,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.96875,"distances_sum":3086.4589914019066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968177655677656,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":3243.7618153882477}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727163461538464,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9765625,"distances_sum":3286.540931717749}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9736263736263739,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3305.308634103624}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706673534798539,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.984375,"distances_sum":3261.231755649738}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612408424908426,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.953125,"distances_sum":3204.6894386313043}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736263736263739,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3305.308634103624}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9736263736263739,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3305.308634103624}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8564794580419591,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.671875,"distances_sum":2110.4498109426136}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7977439227439235,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.3046875,"distances_sum":1825.112758334992}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8564794580419591,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.671875,"distances_sum":2110.4498109426136}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9121794871794878,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.703125,"distances_sum":2441.7944866665803}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9143231768231777,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.71875,"distances_sum":2480.010837596617}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9143231768231777,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.71875,"distances_sum":2480.010837596617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588369963369969,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2844.860656446437}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609775641025644,"seconds":9.033828973770142e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2875.98920514111}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609775641025644,"seconds":9.033828973770142e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2875.98920514111}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609775641025644,"seconds":9.033828973770142e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2875.98920514111}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.689900040626526e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.3984375,"distances_sum":553.7072588670144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.1875,"distances_sum":1064.0227492743145}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4326171875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4326171875,"f1":null,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.1875,"distances_sum":1064.0227492743145}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9188738344988351,"seconds":7.74487853050232e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2475.097931334118}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9188738344988351,"seconds":7.74487853050232e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2475.097931334118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455242673992678,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2663.540823200357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9367845695970702,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2599.8896257013084}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765573,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2861.2873857392397}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765573,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2861.2873857392397}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765573,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2861.2873857392397}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.576171875,"f1":null,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.7109375,"distances_sum":1468.1976862462234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":4.2244791984558105e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.6796875,"distances_sum":991.4226683585039}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8152451714951724,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0,"distances_sum":1828.6785758442018}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8152451714951724,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0,"distances_sum":1828.6785758442018}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.871134074259075,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.78125,"distances_sum":2131.842698580572}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9284397893772898,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2525.4365281503356}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9284397893772898,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2525.4365281503356}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777758699633703,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2894.0508918837654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960325091575092,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2756.03933741507}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9564961080586084,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2751.0706619731077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957726648351649,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2777.034596162659}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777758699633703,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2894.0508918837654}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777758699633703,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2894.0508918837654}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5,"f1":0.650877594627595,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.59375,"distances_sum":1283.6002933535167}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.028661012649536e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":4.5234375,"distances_sum":502.0813336270831}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8641691641691651,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.453125,"distances_sum":2107.080675874455}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8641691641691651,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.453125,"distances_sum":2107.080675874455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9334566475191479,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.78125,"distances_sum":2504.205450312689}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9334566475191479,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.78125,"distances_sum":2504.205450312689}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131868,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2810.7111120121276}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.939420475357976,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.75,"distances_sum":2551.8341843581047}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9378236346986351,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8046875,"distances_sum":2548.6571949397194}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131868,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2810.7111120121276}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131868,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2810.7111120121276}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.228515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.228515625,"f1":null,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.703125,"distances_sum":562.700011103577}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.228515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.228515625,"f1":null,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.703125,"distances_sum":562.700011103577}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8429523601398609,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.1640625,"distances_sum":1992.9865242831308}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":5.7109375,"distances_sum":448.09053192751065}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7809792637917645,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.703125,"distances_sum":1625.0558329436822}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8429523601398609,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.1640625,"distances_sum":1992.9865242831308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9156364468864475,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.5625,"distances_sum":2333.3365258881977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616300366300371,"seconds":6.670132279396057e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2706.4255617027316}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9554945054945059,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.75,"distances_sum":2726.087791119394}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8945746961371969,"seconds":6.288290023803711e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.453125,"distances_sum":2254.159124060816}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616300366300371,"seconds":6.670132279396057e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8828125,"distances_sum":2706.4255617027316}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717662545787549,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2828.078100795507}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9805803571428575,"seconds":7.292255759239197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.953125,"distances_sum":2865.5204249568683}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637706043956048,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8515625,"distances_sum":2733.5961393691855}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655681,"seconds":7.016584277153015e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.90625,"distances_sum":2788.12648412939}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788347069597072,"seconds":6.910413503646851e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9140625,"distances_sum":2872.4887714003335}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644230769230774,"seconds":6.880611181259155e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.890625,"distances_sum":2747.9099159985003}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805803571428575,"seconds":7.292255759239197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.953125,"distances_sum":2865.5204249568683}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805803571428575,"seconds":7.292255759239197e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.953125,"distances_sum":2865.5204249568683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":6.8359375,"distances_sum":472.6023651980509}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":7.0703125,"distances_sum":878.2457101345842}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8554070929070937,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.375,"distances_sum":1912.3880237302935}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8554070929070937,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.375,"distances_sum":1912.3880237302935}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9473672161172166,"seconds":6.701797246932983e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.828125,"distances_sum":2460.7583669128803}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9536572802197807,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.8125,"distances_sum":2555.2173961406675}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9038872585747593,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.53125,"distances_sum":2164.95223392008}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9536572802197807,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.8125,"distances_sum":2555.2173961406675}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9725675366300368,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9453125,"distances_sum":2648.7138843841535}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":6.9569796323776245e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9453125,"distances_sum":2691.771715329375}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552515193140199,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.8046875,"distances_sum":2554.619047379141}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":6.9569796323776245e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9453125,"distances_sum":2691.771715329375}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":6.9569796323776245e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.9453125,"distances_sum":2691.771715329375}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.234375,"distances_sum":761.4355575952146}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8534090909090919,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3125,"distances_sum":1889.2344359058825}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8534090909090919,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3125,"distances_sum":1889.2344359058825}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575377747252752,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2594.390029832013}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9575377747252752,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.765625,"distances_sum":2594.390029832013}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9651614010989014,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2628.5075162884095}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2702.312744402304}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2702.312744402304}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746108058608062,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2702.312744402304}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":3.432855010032654e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.1640625,"distances_sum":448.802504443164}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7713135822510832,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.6796875,"distances_sum":1723.2862206179582}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1591796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1591796875,"f1":null,"seconds":3.1348317861557007e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.921875,"distances_sum":445.1344526129763}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7713135822510832,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.6796875,"distances_sum":1723.2862206179582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8507622585747593,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3359375,"distances_sum":2036.5587022118077}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8507622585747593,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3359375,"distances_sum":2036.5587022118077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384990009990016,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6171875,"distances_sum":2623.721435408258}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9261535339660347,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6015625,"distances_sum":2483.591097959519}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9248688811188817,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.578125,"distances_sum":2499.690638959593}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9267518939393947,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6015625,"distances_sum":2500.358786396148}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8774475524475532,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0859375,"distances_sum":2269.8466720997785}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9245540917415924,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.5234375,"distances_sum":2521.8283772654186}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9384990009990016,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6171875,"distances_sum":2623.721435408258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.892578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9384990009990016,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6171875,"distances_sum":2623.721435408258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7135243228993235,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.5859375,"distances_sum":1421.130400524968}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7128356018981024,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6328125,"distances_sum":1392.5541218129874}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7135243228993235,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.5859375,"distances_sum":1421.130400524968}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.893218240093241,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5390625,"distances_sum":2245.5847936086593}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9064909049284057,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.65625,"distances_sum":2280.00290672852}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83984375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.83984375,"f1":0.9064909049284057,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.65625,"distances_sum":2280.00290672852}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677655677655683,"seconds":6.731599569320679e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2729.0732092813632}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9149584790209799,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7734375,"distances_sum":2316.762540119907}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9411775724275729,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2565.9043991036124}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9264225357975365,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2429.8670639151237}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9571085164835169,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2634.39151042442}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9677655677655683,"seconds":6.731599569320679e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2729.0732092813632}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9677655677655683,"seconds":6.731599569320679e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2729.0732092813632}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.158203125,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":5.703125,"distances_sum":404.4940855664501}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8603859681984689,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.171875,"distances_sum":2073.2902274137327}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8603859681984689,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.171875,"distances_sum":2073.2902274137327}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948466117216118,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.7265625,"distances_sum":2649.640890151559}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.948466117216118,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.7265625,"distances_sum":2649.640890151559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681322,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.765625,"distances_sum":2656.961953903357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.8359375,"distances_sum":2758.2473988188935}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.8359375,"distances_sum":2758.2473988188935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666494963369967,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.2516975402832031e-6,"evaluations":8.8359375,"distances_sum":2758.2473988188935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.171875,"distances_sum":915.4815964348498}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8049974331224339,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3203125,"distances_sum":1708.0120514403031}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8049974331224339,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3203125,"distances_sum":1708.0120514403031}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9119510697635707,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2306.0443646144327}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9119510697635707,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2306.0443646144327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9217464826839834,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7578125,"distances_sum":2397.429638605518}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564106,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2642.0717676163}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564106,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2642.0717676163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586939102564106,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2642.0717676163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7032904595404601,"seconds":4.1387975215911865e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0,"distances_sum":856.0914603372735}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.1328125,"distances_sum":634.7569756518743}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7032904595404601,"seconds":4.1387975215911865e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0,"distances_sum":856.0914603372735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8532144938394948,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.15625,"distances_sum":1225.1434029895984}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9000393703518712,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.546875,"distances_sum":1403.6533331118458}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.780130633255634,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.5703125,"distances_sum":1004.3359080573298}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7969650141525151,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.7734375,"distances_sum":1023.9563721032342}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9016571969696979,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.640625,"distances_sum":1339.4193631499768}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8449014527139533,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1953125,"distances_sum":1198.2270667978948}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8490764443889453,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.125,"distances_sum":1208.290702033085}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9000393703518712,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.546875,"distances_sum":1403.6533331118458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9066053737928745,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.625,"distances_sum":1378.8199966467805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651270604395608,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":1632.984092555726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9448145604395608,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7109375,"distances_sum":1546.7350201193512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566449175824179,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":1596.4959732742627}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9248454670329675,"seconds":8.294358849525452e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.734375,"distances_sum":1483.594836136527}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9431318681318687,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7578125,"distances_sum":1557.3257325969794}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9190991300366309,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6328125,"distances_sum":1422.2917317038055}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9131472693972702,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.578125,"distances_sum":1433.1133130966534}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.916403388278389,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7109375,"distances_sum":1431.845089613714}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651270604395608,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":1632.984092555726}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651270604395608,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.890625,"distances_sum":1632.984092555726}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.28125,"distances_sum":389.90176793008237}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2529296875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.28125,"distances_sum":389.90176793008237}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2724609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2724609375,"f1":null,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.3671875,"distances_sum":437.5898525505934}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.541015625,"f1":null,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.1015625,"distances_sum":798.3359192906535}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7153998778998786,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2734375,"distances_sum":896.3011575850438}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7873355810855819,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0,"distances_sum":1069.3255216572954}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.77775817932068,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8203125,"distances_sum":1039.76117662749}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7873355810855819,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0,"distances_sum":1069.3255216572954}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.911544184981686,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6796875,"distances_sum":1430.3839626032075}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.891655740093241,"seconds":7.219798862934113e-5,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5234375,"distances_sum":1350.729942246807}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8637373043623053,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.453125,"distances_sum":1269.5815218578293}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9554258241758244,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":1635.2470706840343}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8942656302031309,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6171875,"distances_sum":1358.909001100012}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9295875999001008,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.71875,"distances_sum":1512.2091808160671}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8754760864135873,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4765625,"distances_sum":1316.8832032312077}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9554258241758244,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":1635.2470706840343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9554258241758244,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":1635.2470706840343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.3671875,"distances_sum":619.3079257462742}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.1796875,"distances_sum":535.523096895885}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7764386655011664,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.6953125,"distances_sum":977.4738833900376}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7764386655011664,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.6953125,"distances_sum":977.4738833900376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.91941391941392,"seconds":2.3517757654190063e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7421875,"distances_sum":1441.0194288092048}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8885505119880129,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.3515625,"distances_sum":1353.6825586590676}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.859375,"f1":0.91941391941392,"seconds":2.3517757654190063e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.7421875,"distances_sum":1441.0194288092048}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.932211538461539,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.65625,"distances_sum":1488.7952715656909}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.932211538461539,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.65625,"distances_sum":1488.7952715656909}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.932211538461539,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.65625,"distances_sum":1488.7952715656909}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.302469849586487e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.78125,"distances_sum":429.6897279966182}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2392578125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.302469849586487e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.78125,"distances_sum":429.6897279966182}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8617996586746595,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5390625,"distances_sum":1371.5886273255442}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8617996586746595,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5390625,"distances_sum":1371.5886273255442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9359489468864475,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":1663.2865218669829}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.952855998168499,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":1758.026275829048}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8863756035631044,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.59375,"distances_sum":1468.7353553939615}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.952855998168499,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":1758.026275829048}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.952855998168499,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":1758.026275829048}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7150514416139423,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.734375,"distances_sum":900.5617510820157}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8071697399822408,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.2734375,"distances_sum":1136.6708378790368}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8071697399822408,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.2734375,"distances_sum":1136.6708378790368}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.812375645188146,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.1640625,"distances_sum":1145.619088343643}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8553925241425251,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.359375,"distances_sum":1270.486817316741}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8553925241425251,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.359375,"distances_sum":1270.486817316741}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8959285506160511,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.5546875,"distances_sum":1413.7582502041603}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565361721611725,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8984375,"distances_sum":1649.068547968241}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9387305402930409,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.734375,"distances_sum":1625.5894938341096}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933361950549451,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.796875,"distances_sum":1567.550492863467}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9239755036630047,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.796875,"distances_sum":1522.006603128223}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9565361721611725,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8984375,"distances_sum":1649.068547968241}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9565361721611725,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8984375,"distances_sum":1649.068547968241}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8465662809412818,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.5390625,"distances_sum":1351.5093687139452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8627929362304368,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.515625,"distances_sum":1426.2495659118754}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8627929362304368,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.515625,"distances_sum":1426.2495659118754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8962485431235443,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.75,"distances_sum":1570.9601509921154}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433379120879126,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.7734375,"distances_sum":1779.118653505207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9418669871794878,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.71875,"distances_sum":1781.6970198577192}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754585,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8203125,"distances_sum":1768.789799375893}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9397607600732609,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8125,"distances_sum":1749.3782043213157}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9453754578754585,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8203125,"distances_sum":1768.789799375893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728994963369967,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8671875,"distances_sum":1929.0868622890007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463083791208796,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.7109375,"distances_sum":1792.0712461089838}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670959249084252,"seconds":6.5676867961883545e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.8515625,"distances_sum":1891.0474870568305}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735119047619049,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.9140625,"distances_sum":1919.4436712167178}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9626545329670333,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.90625,"distances_sum":1849.9098859908083}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":6.6943466663360596e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.921875,"distances_sum":1866.567267874023}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735119047619049,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.9140625,"distances_sum":1919.4436712167178}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735119047619049,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.7900019884109497e-6,"evaluations":8.9140625,"distances_sum":1919.4436712167178}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7641950063825071,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.890625,"distances_sum":1127.1878161139957}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.63671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.63671875,"f1":0.7641950063825071,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.890625,"distances_sum":1127.1878161139957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7709956709956718,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.890625,"distances_sum":1156.9041710935653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8859270937395946,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.421875,"distances_sum":1494.4639240298918}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7749614968364976,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.890625,"distances_sum":1158.9259138591226}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8702308108558117,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.390625,"distances_sum":1475.9700302150477}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8859270937395946,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.421875,"distances_sum":1494.4639240298918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535370879120882,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":1830.597019511963}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9409111721611727,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.734375,"distances_sum":1741.7070855008908}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9331246878121885,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.75,"distances_sum":1743.107696333417}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9060814185814193,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.5859375,"distances_sum":1614.4842223907729}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9327698343323347,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.7109375,"distances_sum":1730.6708819896537}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9501545329670336,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8046875,"distances_sum":1810.772605854079}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535370879120882,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":1830.597019511963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535370879120882,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":1830.597019511963}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4912109375,"f1":0.6432463369963375,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":6.671875,"distances_sum":875.2663426598072}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4912109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.4912109375,"f1":0.6432463369963375,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":6.671875,"distances_sum":875.2663426598072}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8827099983349987,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.5703125,"distances_sum":1492.7146247119754}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.895884844322345,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.6015625,"distances_sum":1536.3600582467736}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.895884844322345,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.6015625,"distances_sum":1536.3600582467736}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688644688644693,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8671875,"distances_sum":1857.2098201605372}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442250457875463,"seconds":8.089467883110046e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.6953125,"distances_sum":1744.2917342374658}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9438015109890115,"seconds":6.917864084243774e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.6796875,"distances_sum":1760.7643163967434}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688644688644693,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8671875,"distances_sum":1857.2098201605372}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9688644688644693,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.6186386346817017e-6,"evaluations":8.8671875,"distances_sum":1857.2098201605372}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":6.28125,"distances_sum":459.6918122828949}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.85646488927739,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":7.9921875,"distances_sum":1305.1055908207743}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":6.1328125,"distances_sum":419.557640764435}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.85646488927739,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":7.9921875,"distances_sum":1305.1055908207743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9096726190476196,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.6640625,"distances_sum":1535.8554517416173}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8661921411921422,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.1875,"distances_sum":1349.4506323755325}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8570325507825516,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.0390625,"distances_sum":1366.9908441654395}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9096726190476196,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.6640625,"distances_sum":1535.8554517416173}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.875,"distances_sum":1821.380668442077}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9375629578754583,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.75,"distances_sum":1632.589593405508}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9458250083250088,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.7578125,"distances_sum":1706.8927575735531}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9206959706959713,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.65625,"distances_sum":1589.7536222643719}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.875,"distances_sum":1821.380668442077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.495043635368347e-6,"exhaustive_search_seconds":2.3990869522094727e-6,"evaluations":8.875,"distances_sum":1821.380668442077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7766414141414149,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.4921875,"distances_sum":1124.4582980110652}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7766414141414149,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.4921875,"distances_sum":1124.4582980110652}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8522727272727282,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.109375,"distances_sum":1292.2686805227909}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7883767274392283,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.71875,"distances_sum":1146.908573695462}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936862096237097,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.6796875,"distances_sum":1603.8478799113248}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.936862096237097,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.6796875,"distances_sum":1603.8478799113248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754588,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.8125,"distances_sum":1690.5972728943332}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754588,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.8125,"distances_sum":1690.5972728943332}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754588,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.8125,"distances_sum":1690.5972728943332}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7866383616383624,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.7578125,"distances_sum":1139.18735882132}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.8984375,"distances_sum":630.4537978768009}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7866383616383624,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.7578125,"distances_sum":1139.18735882132}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556662087912093,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7734375,"distances_sum":1766.321725629795}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9556662087912093,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7734375,"distances_sum":1766.321725629795}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.921875,"distances_sum":1820.2395766536317}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.921875,"distances_sum":1820.2395766536317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597073,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.921875,"distances_sum":1820.2395766536317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.875,"distances_sum":398.07460247096583}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8617502289377297,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.2265625,"distances_sum":1367.885624148001}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8617502289377297,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.2265625,"distances_sum":1367.885624148001}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8960138819513828,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5,"distances_sum":1565.2236922512466}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9472012362637369,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":1762.1483856097007}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9472012362637369,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":1762.1483856097007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679544413919419,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":1836.422860755882}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703302,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9375,"distances_sum":1862.4276509132521}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703302,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9375,"distances_sum":1862.4276509132521}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9749828296703302,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9375,"distances_sum":1862.4276509132521}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2685546875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4375,"distances_sum":468.91480526772256}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2685546875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4375,"distances_sum":468.91480526772256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6732951076701084,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.0546875,"distances_sum":940.3368344797206}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":3.907829523086548e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.25,"distances_sum":975.4436954010016}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8047613844488855,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.53125,"distances_sum":1260.5956195565393}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.7060546875,"f1":null,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.578125,"distances_sum":1289.7563321296218}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":2,"bsize":4},"perf":{"precision":null,"recall":0.7060546875,"f1":null,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.578125,"distances_sum":1289.7563321296218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529075091575095,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.875,"distances_sum":1901.590990989244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8221502455877464,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.59375,"distances_sum":1285.3686001959977}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8615275349650356,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.9765625,"distances_sum":1509.8094140231913}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8584545662670672,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.953125,"distances_sum":1458.0935389217389}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433493589743593,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7109375,"distances_sum":1866.766545146434}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9028284215784222,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.3125,"distances_sum":1677.9474876728943}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9041526182151189,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.328125,"distances_sum":1676.5728679867548}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8551235223110231,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.0,"distances_sum":1479.2049494098135}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9200866841491849,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.5859375,"distances_sum":1736.092990296257}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9247309981684991,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7109375,"distances_sum":1744.9989114512277}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529075091575095,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.875,"distances_sum":1901.590990989244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691792582417587,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1970.8839536902094}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9635416666666671,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.875,"distances_sum":1934.9737582106272}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733287545787549,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9296875,"distances_sum":2000.956457840606}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682348901098904,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.890625,"distances_sum":1974.9591805983293}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417585,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9140625,"distances_sum":2013.752444392291}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657051282051285,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8984375,"distances_sum":1944.986461010176}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216121,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8515625,"distances_sum":1981.2690881775673}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9140625,"distances_sum":2021.4020430820647}, best_list's length: 15, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9602366383616389,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.828125,"distances_sum":1954.6900371301426}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417585,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9140625,"distances_sum":2013.752444392291}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417585,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9140625,"distances_sum":2013.752444392291}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":3.28943133354187e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.140625,"distances_sum":486.7835103326703}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7071869103119109,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.6796875,"distances_sum":590.1556418011415}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":5.7109375,"distances_sum":412.32268447790295}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7071869103119109,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.6796875,"distances_sum":590.1556418011415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.846509219946721,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.921875,"distances_sum":854.8760157002456}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8910344863469872,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.4296875,"distances_sum":957.6873050526518}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.889895521145522,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.359375,"distances_sum":957.6924204855366}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8951069763569769,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.4453125,"distances_sum":975.5027851280323}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8270672036297044,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.8828125,"distances_sum":807.6431731777543}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8951069763569769,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.4453125,"distances_sum":975.5027851280323}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431292665667671,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.5859375,"distances_sum":1116.8770783202624}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9009677822177833,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.3984375,"distances_sum":986.5099553593583}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9047364094239102,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.53125,"distances_sum":991.9283324517853}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9431292665667671,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.5859375,"distances_sum":1116.8770783202624}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9431292665667671,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.5859375,"distances_sum":1116.8770783202624}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.682209014892578e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.28125,"distances_sum":311.70810457997385}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5390625,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.046875,"distances_sum":680.755559109829}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6830142080142085,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.0625,"distances_sum":685.8115066916788}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5390625,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.046875,"distances_sum":680.755559109829}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8507934773559781,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1640625,"distances_sum":1034.9067364161533}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8371487887112895,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0703125,"distances_sum":971.6075859200537}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8927457958707966,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5546875,"distances_sum":1140.1798481030903}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.846772498334999,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0859375,"distances_sum":1007.0406875554472}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8927457958707966,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5546875,"distances_sum":1140.1798481030903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9139886155511162,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.71875,"distances_sum":1203.6167379049473}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9022180944055952,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5546875,"distances_sum":1171.0574586696353}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969144917582418,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":1402.7537311751862}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9021691849816856,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4296875,"distances_sum":1171.8733958988184}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9436813186813191,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.75,"distances_sum":1312.4295023356228}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9107262529137538,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.578125,"distances_sum":1184.3519127766424}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501175907425912,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":1347.1861074175604}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.929252518315019,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":1238.2544885648363}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969144917582418,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":1402.7537311751862}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969144917582418,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":1402.7537311751862}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":5.7109375,"distances_sum":388.33968490657907}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.248046875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":5.7109375,"distances_sum":388.33968490657907}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.248046875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.244727849960327e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":5.7109375,"distances_sum":388.33968490657907}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7182574370074375,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.1015625,"distances_sum":884.8826333293412}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.0063092708587646e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.0859375,"distances_sum":407.7899111850918}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.580078125,"f1":0.7182574370074375,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.1015625,"distances_sum":884.8826333293412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8017643814518822,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.546875,"distances_sum":1035.1630480249842}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8626259157509166,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0546875,"distances_sum":1195.6000655937064}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8712204462204471,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":1265.394603297456}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8712204462204471,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":1265.394603297456}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9459337537462545,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":1570.0291354312517}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9330700549450555,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.78125,"distances_sum":1490.0657394338134}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9479624542124545,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8203125,"distances_sum":1582.0213457177742}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8958109598734604,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5703125,"distances_sum":1336.0193894970525}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9459337537462545,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":1570.0291354312517}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9459337537462545,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":1570.0291354312517}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.714201770451771,"seconds":3.919005393981934e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.96875,"distances_sum":771.471134673274}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6746345668220672,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.6953125,"distances_sum":741.8808748268929}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.285706043243408e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.34375,"distances_sum":581.1367894598678}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7923517454767462,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.546875,"distances_sum":945.4491006466269}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7923517454767462,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.546875,"distances_sum":945.4491006466269}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8480316558441567,"seconds":4.7478824853897095e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.03125,"distances_sum":1058.2786422516679}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9211111804861815,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.65625,"distances_sum":1317.9635756169455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8482777639027648,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.015625,"distances_sum":1063.2159482452662}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8397222569097577,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9296875,"distances_sum":1065.3325862607987}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9343692765567773,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":1353.505563728745}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8817942474192482,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3828125,"distances_sum":1181.951635457061}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9343692765567773,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":1353.505563728745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.890625,"distances_sum":1487.7733404166988}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9524439102564107,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7265625,"distances_sum":1452.5957526497475}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":1517.5494951128546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584134615384621,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8359375,"distances_sum":1457.6314443870078}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9424767940392945,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.734375,"distances_sum":1410.6456969713306}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":1517.5494951128546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9705757783882787,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":1517.5494951128546}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7761419136419143,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.4375,"distances_sum":905.2469055932285}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2880859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2880859375,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.3203125,"distances_sum":394.1914810047993}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6959788475413481,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.9296875,"distances_sum":726.0222915934567}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8446381743256751,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.875,"distances_sum":1076.7082022896793}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8446381743256751,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.875,"distances_sum":1076.7082022896793}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9615930944055949,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8984375,"distances_sum":1484.844016129327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9435325091575095,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8203125,"distances_sum":1411.3592975238698}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642914377289381,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1487.7017507367277}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8785802738927747,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.40625,"distances_sum":1158.087365105723}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8483100233100239,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8671875,"distances_sum":1079.8097785579218}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9642914377289381,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1487.7017507367277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9769917582417587,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1552.4812957016372}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719525266400273,"seconds":8.031725883483887e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9765625,"distances_sum":1504.6043453740176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799107142857146,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.984375,"distances_sum":1545.2947909372626}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549455,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":1566.3636752757911}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9675283050283056,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":1512.8251953729207}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904762,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9609375,"distances_sum":1556.1256187634376}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549455,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":1566.3636752757911}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549455,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":1566.3636752757911}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.2223761081695557e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.28125,"distances_sum":399.5296485998456}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8025384337884347,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7734375,"distances_sum":1006.2877695203241}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7125546328671335,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.171875,"distances_sum":807.6142666419934}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8025384337884347,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7734375,"distances_sum":1006.2877695203241}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641826923076926,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":1550.0900962043038}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8824982309357317,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5390625,"distances_sum":1226.9797502469157}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9304258241758248,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":1400.9469179909258}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641826923076926,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":1550.0900962043038}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9726247710622713,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":1602.302191803061}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9726247710622713,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":1602.302191803061}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9726247710622713,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":1602.302191803061}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8629526723276731,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9609375,"distances_sum":1159.975377797081}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8629526723276731,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.9609375,"distances_sum":1159.975377797081}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550080128205132,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8203125,"distances_sum":1494.4713062219776}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9550080128205132,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8203125,"distances_sum":1494.4713062219776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":1590.450240391343}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":1590.450240391343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":1590.450240391343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.2265625,"distances_sum":476.51015277223615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2978515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.335997462272644e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.9140625,"distances_sum":401.2658465490872}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3916015625,"f1":0.5354260323010321,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.484375,"distances_sum":520.3032564655698}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7003073315573322,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.796875,"distances_sum":775.1483398855909}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55859375,"f1":0.7003073315573322,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.796875,"distances_sum":775.1483398855909}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7791942432567441,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.4296875,"distances_sum":920.6817197435919}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8970383782883791,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.4609375,"distances_sum":1246.7433398468452}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8649704462204469,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.015625,"distances_sum":1115.907261470575}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8970383782883791,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.4609375,"distances_sum":1246.7433398468452}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9563129578754586,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":1432.1371152934444}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670333,"seconds":8.715316653251648e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":1484.0536335180784}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405105311355317,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6484375,"distances_sum":1414.6936682175728}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961744505494506,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":1488.7961995762175}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9408456127206132,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.734375,"distances_sum":1415.6840859717856}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961744505494506,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":1488.7961995762175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961744505494506,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":1488.7961995762175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8455195845820854,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.0,"distances_sum":1041.2671329243315}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8455195845820854,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.0,"distances_sum":1041.2671329243315}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452152014652021,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7109375,"distances_sum":1387.302771655587}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.874746087246088,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.2578125,"distances_sum":1115.5452281057703}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452152014652021,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7109375,"distances_sum":1387.302771655587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9765625,"distances_sum":1537.1796166691809}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477564102564108,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7890625,"distances_sum":1380.92444989897}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9765625,"distances_sum":1537.1796166691809}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.9765625,"distances_sum":1537.1796166691809}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.6987248862248869,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":7.03125,"distances_sum":752.8973543990948}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":5.9375,"distances_sum":557.9561336522278}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5615234375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5615234375,"f1":0.6987248862248869,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":7.03125,"distances_sum":752.8973543990948}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7130817099567105,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":7.0703125,"distances_sum":767.5025699840705}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7744708416583425,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":7.359375,"distances_sum":875.2006374491435}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8496805278055287,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":7.8828125,"distances_sum":1064.0093999763124}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8847532675657683,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.4921875,"distances_sum":1178.6617268920202}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8847532675657683,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.4921875,"distances_sum":1178.6617268920202}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661858974358977,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.890625,"distances_sum":1478.5903956771588}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9407852564102567,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.7734375,"distances_sum":1366.6445653635783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8860951548451557,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.515625,"distances_sum":1176.3010011462254}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661858974358977,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.890625,"distances_sum":1478.5903956771588}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661858974358977,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.890625,"distances_sum":1478.5903956771588}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.6875,"distances_sum":346.1183405605489}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8513340825840836,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.7578125,"distances_sum":1107.7792440800488}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8513340825840836,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.7578125,"distances_sum":1107.7792440800488}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9169242216117223,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4609375,"distances_sum":1327.1439724879965}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608859890109892,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":1517.95959584727}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9608859890109892,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":1517.95959584727}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9608859890109892,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":1517.95959584727}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9608859890109892,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.765625,"distances_sum":1517.95959584727}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7878423659673668,"seconds":4.3101608753204346e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.625,"distances_sum":926.0076997919891}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8437250249750259,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.796875,"distances_sum":1071.2241116649127}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6954724095349101,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.8984375,"distances_sum":764.7075528208476}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8437250249750259,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.796875,"distances_sum":1071.2241116649127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8738558316683324,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.3984375,"distances_sum":1187.3267608552044}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609832875457879,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":1511.8745069273339}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9207875457875462,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.796875,"distances_sum":1351.476978846046}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609832875457879,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":1511.8745069273339}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9784054487179488,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":1593.893771219708}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":1579.291423216804}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732543498168502,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":1573.7110690938923}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784054487179488,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":1593.893771219708}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784054487179488,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":1593.893771219708}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8513314810189819,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.015625,"distances_sum":1141.999347108258}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.296875,"distances_sum":597.4619853806395}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8513314810189819,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.015625,"distances_sum":1141.999347108258}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8547083125208135,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.09375,"distances_sum":1148.4520017990403}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8957360347985357,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.546875,"distances_sum":1267.1610109483236}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8957360347985357,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.546875,"distances_sum":1267.1610109483236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":1590.5570752524818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9690876831501835,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.953125,"distances_sum":1574.7071860234278}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622825091575098,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8984375,"distances_sum":1547.6321670706739}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8983402014652023,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5078125,"distances_sum":1279.5134527845858}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":1590.5570752524818}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":1590.5570752524818}}, n: 9
inertia(cfft.distances) = 18.26697317388494
inertia(cdnet.distances) = 32.02547757741233
inertia(crand.distances) = 20.355028356481483
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> k=5
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9400000000000001
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> k=7
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> k=11
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 1, 3, 3, 3, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, Tuple{Int64,Int64}[(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, Tuple{Int64,Int64}[(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, Tuple{Int64,Int64}[(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.497866671914803] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** starting iteration: 2; err: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** starting iteration: 3; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.4918000040879427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507] ***
*** starting iteration: 2; err: [Inf, 1.4918000040879427, 0.6765446588747507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825] ***
*** starting iteration: 3; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227] ***
*** starting iteration: 4; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559] ***
*** starting iteration: 5; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247] ***
*** starting iteration: 6; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858] ***
*** starting iteration: 7; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886] ***
*** starting iteration: 8; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582] ***
*** starting iteration: 9; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582, 0.6001498570599263] ***
*** starting iteration: 10; err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582, 0.6001498570599263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582, 0.6001498570599263, 0.5903290657640942] ***
*** finished computation of 3 references, err: [Inf, 1.4918000040879427, 0.6765446588747507, 0.6472763714518825, 0.6397819848554227, 0.6381925113122559, 0.6370454412139247, 0.635415495719858, 0.6311710293014886, 0.6178150082783582, 0.6001498570599263, 0.5903290657640942] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, Tuple{Int64,Int64}[(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, Tuple{Int64,Int64}[(2, 35), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7566999966454955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7566999966454955, 0.8586565543883223] ***
*** starting iteration: 2; err: [Inf, 1.7566999966454955, 0.8586565543883223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769] ***
*** starting iteration: 3; err: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769, 0.8528107302964624] ***
*** starting iteration: 4; err: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769, 0.8528107302964624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769, 0.8528107302964624, 0.8525881754367981] ***
*** finished computation of 3 references, err: [Inf, 1.7566999966454955, 0.8586565543883223, 0.8541805832459769, 0.8528107302964624, 0.8525881754367981] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 32]]
** centroid: 2, normalized-entropy: 0.9982545693874832, Tuple{Int64,Int64}[(2, 29), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.403500000781767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356] ***
*** starting iteration: 2; err: [Inf, 3.403500000781767, 1.6514074016918356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651] ***
*** starting iteration: 3; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028] ***
*** starting iteration: 4; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718] ***
*** starting iteration: 5; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279] ***
*** starting iteration: 6; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102] ***
*** starting iteration: 7; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102, 0.49582127398247516] ***
*** starting iteration: 8; err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102, 0.49582127398247516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102, 0.49582127398247516, 0.4952242881627101] ***
*** finished computation of 3 references, err: [Inf, 3.403500000781767, 1.6514074016918356, 1.0651862480086651, 0.7106446345758028, 0.5864043817820718, 0.5073232645447279, 0.4968247150837102, 0.49582127398247516, 0.4952242881627101] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, Tuple{Int64,Int64}[(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.842264249161347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836] ***
*** starting iteration: 2; err: [Inf, 0.842264249161347, 0.44772274573244836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796] ***
*** starting iteration: 3; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013] ***
*** starting iteration: 4; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275] ***
*** starting iteration: 5; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845] ***
*** starting iteration: 6; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232] ***
*** starting iteration: 7; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535] ***
*** starting iteration: 8; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535, 0.409660973587221] ***
*** starting iteration: 9; err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535, 0.409660973587221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535, 0.409660973587221, 0.4097772638085725] ***
*** finished computation of 3 references, err: [Inf, 0.842264249161347, 0.44772274573244836, 0.43494889796799796, 0.4299370096686013, 0.42366881756527275, 0.4178818572089845, 0.4139889642596232, 0.41087233743305535, 0.409660973587221, 0.4097772638085725] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 2, normalized-entropy: 0.7642045065086204, Tuple{Int64,Int64}[(2, 35), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, Tuple{Int64,Int64}[(2, 3), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.144355822891598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087] ***
*** starting iteration: 2; err: [Inf, 4.144355822891598, 1.1023977636508087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097] ***
*** starting iteration: 3; err: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052] ***
*** starting iteration: 4; err: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021] ***
*** starting iteration: 5; err: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396] ***
*** starting iteration: 6; err: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396, 0.33120884921746735] ***
*** finished computation of 3 references, err: [Inf, 4.144355822891598, 1.1023977636508087, 0.3790272401159097, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396, 0.33120884921746735] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 9]]
** centroid: 2, normalized-entropy: 0.7897492536625221, Tuple{Int64,Int64}[(2, 29), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4922863999873892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4922863999873892, 0.36858575354619943] ***
*** starting iteration: 2; err: [Inf, 0.4922863999873892, 0.36858575354619943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754] ***
*** starting iteration: 3; err: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754, 0.34796631316319304] ***
*** starting iteration: 4; err: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754, 0.34796631316319304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754, 0.34796631316319304, 0.3473206508984791] ***
*** finished computation of 3 references, err: [Inf, 0.4922863999873892, 0.36858575354619943, 0.350476849950754, 0.34796631316319304, 0.3473206508984791] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 7]]
** centroid: 2, normalized-entropy: 0.6789538995185759, Tuple{Int64,Int64}[(2, 32), (3, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 3, normalized-entropy: 0.2222848306856879, Tuple{Int64,Int64}[(2, 1), (3, 27)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.3093000139896174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3093000139896174, 0.860338171606551] ***
*** starting iteration: 2; err: [Inf, 3.3093000139896174, 0.860338171606551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3093000139896174, 0.860338171606551, 0.705439620783142] ***
*** starting iteration: 3; err: [Inf, 3.3093000139896174, 0.860338171606551, 0.705439620783142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3093000139896174, 0.860338171606551, 0.705439620783142, 0.6429327385594666] ***
*** finished computation of 3 references, err: [Inf, 3.3093000139896174, 0.860338171606551, 0.705439620783142, 0.6429327385594666] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 13]]
** centroid: 2, normalized-entropy: 0.8267463724926181, Tuple{Int64,Int64}[(2, 37), (3, 13)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1267999912523592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1267999912523592, 0.4943231335177886] ***
*** starting iteration: 2; err: [Inf, 1.1267999912523592, 0.4943231335177886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1267999912523592, 0.4943231335177886, 0.47974182253394915] ***
*** starting iteration: 3; err: [Inf, 1.1267999912523592, 0.4943231335177886, 0.47974182253394915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1267999912523592, 0.4943231335177886, 0.47974182253394915, 0.4782306173117675] ***
*** finished computation of 3 references, err: [Inf, 1.1267999912523592, 0.4943231335177886, 0.47974182253394915, 0.4782306173117675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, Tuple{Int64,Int64}[(2, 27), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, Tuple{Int64,Int64}[(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.761900034861497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.761900034861497, 1.5376826430715391] ***
*** starting iteration: 2; err: [Inf, 2.761900034861497, 1.5376826430715391] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.761900034861497, 1.5376826430715391, 0.9959240247608715] ***
*** starting iteration: 3; err: [Inf, 2.761900034861497, 1.5376826430715391, 0.9959240247608715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.761900034861497, 1.5376826430715391, 0.9959240247608715, 0.6802685121842081] ***
*** finished computation of 3 references, err: [Inf, 2.761900034861497, 1.5376826430715391, 0.9959240247608715, 0.6802685121842081] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 19]]
** centroid: 1, normalized-entropy: 0.9633355456726842, Tuple{Int64,Int64}[(2, 30), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, Tuple{Int64,Int64}[(1, 33), (2, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8586999973008954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586999973008954, 0.3946934902179505] ***
*** starting iteration: 2; err: [Inf, 0.8586999973008954, 0.3946934902179505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586999973008954, 0.3946934902179505, 0.3591350766074957] ***
*** starting iteration: 3; err: [Inf, 0.8586999973008954, 0.3946934902179505, 0.3591350766074957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8586999973008954, 0.3946934902179505, 0.3591350766074957, 0.3586930690415422] ***
*** finished computation of 7 references, err: [Inf, 0.8586999973008954, 0.3946934902179505, 0.3591350766074957, 0.3586930690415422] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 10]]
** centroid: 2, normalized-entropy: 0.9071657675730821, Tuple{Int64,Int64}[(2, 21), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5096999954546224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501] ***
*** starting iteration: 2; err: [Inf, 0.5096999954546224, 0.3683721112888501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546] ***
*** starting iteration: 3; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588] ***
*** starting iteration: 4; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213] ***
*** starting iteration: 5; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301] ***
*** starting iteration: 6; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502] ***
*** starting iteration: 7; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687] ***
*** starting iteration: 8; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687, 0.28182271512934876] ***
*** starting iteration: 9; err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687, 0.28182271512934876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687, 0.28182271512934876, 0.28106128881377873] ***
*** finished computation of 7 references, err: [Inf, 0.5096999954546224, 0.3683721112888501, 0.31060332203798546, 0.2991193707048588, 0.29773299430198213, 0.2914465878613301, 0.284969480912502, 0.2833467471442687, 0.28182271512934876, 0.28106128881377873] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 17]]
** centroid: 1, normalized-entropy: 0.9932338197397066, Tuple{Int64,Int64}[(2, 14), (3, 17)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5741000064187299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5741000064187299, 0.2605070540066926] ***
*** starting iteration: 2; err: [Inf, 0.5741000064187299, 0.2605070540066926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953] ***
*** starting iteration: 3; err: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953, 0.23045558393241436] ***
*** starting iteration: 4; err: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953, 0.23045558393241436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953, 0.23045558393241436, 0.23017506143218977] ***
*** finished computation of 7 references, err: [Inf, 0.5741000064187299, 0.2605070540066926, 0.23370765164587953, 0.23045558393241436, 0.23017506143218977] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 1, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 15), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7803000001171587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7803000001171587, 0.45317779501004485] ***
*** finished computation of 7 references, err: [Inf, 0.7803000001171587, 0.45317779501004485] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 29, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 10]]
** centroid: 5, normalized-entropy: 0.954434002924965, Tuple{Int64,Int64}[(2, 6), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5740999933359092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5740999933359092, 0.4005245761489431] ***
*** finished computation of 7 references, err: [Inf, 0.5740999933359092, 0.4005245761489431] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, Tuple{Int64,Int64}[(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 8]]
** centroid: 6, normalized-entropy: 0.775512658133148, Tuple{Int64,Int64}[(2, 27), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5671999995654177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5671999995654177, 0.2723768732843592] ***
*** finished computation of 7 references, err: [Inf, 0.5671999995654177, 0.2723768732843592] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.02137874310033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.02137874310033, 0.5839587233738484] ***
*** finished computation of 3 references, err: [Inf, 3.02137874310033, 0.5839587233738484] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 28]]
** centroid: 1, normalized-entropy: 0.8812908992306927, Tuple{Int64,Int64}[(2, 12), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 1, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, Tuple{Int64,Int64}[(1, 28), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 6]]
** centroid: 3, normalized-entropy: 0.708835673332196, Tuple{Int64,Int64}[(2, 25), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8090310449437023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8090310449437023, 0.5730021430710944] ***
*** finished computation of 3 references, err: [Inf, 0.8090310449437023, 0.5730021430710944] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 32]]
** centroid: 2, normalized-entropy: 0.9982545693874832, Tuple{Int64,Int64}[(2, 29), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.103027746545681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.103027746545681, 0.9569259386221378] ***
*** finished computation of 3 references, err: [Inf, 8.103027746545681, 0.9569259386221378] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 34]]
** centroid: 1, normalized-entropy: 0.9954515828457716, Tuple{Int64,Int64}[(2, 29), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 4, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(1, 1), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4601999799158576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4601999799158576, 1.118560834192934] ***
*** finished computation of 3 references, err: [Inf, 3.4601999799158576, 1.118560834192934] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 7, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(1, 28), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 21]]
** centroid: 2, normalized-entropy: 0.9731560354421095, Tuple{Int64,Int64}[(2, 31), (3, 21)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.00469999371704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.00469999371704, 0.5588452774258498] ***
*** finished computation of 3 references, err: [Inf, 1.00469999371704, 0.5588452774258498] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 9]]
** centroid: 2, normalized-entropy: 0.8453509366224364, Tuple{Int64,Int64}[(2, 24), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 23]]
** centroid: 3, normalized-entropy: 0.6769418697808861, Tuple{Int64,Int64}[(2, 5), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.95879999483866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.95879999483866, 1.7524559421401102] ***
*** finished computation of 3 references, err: [Inf, 4.95879999483866, 1.7524559421401102] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 19, 1]]
** centroid: 1, normalized-entropy: 0.6714539597247018, Tuple{Int64,Int64}[(1, 33), (2, 19), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 27]]
** centroid: 2, normalized-entropy: 0.9262122127346664, Tuple{Int64,Int64}[(2, 14), (3, 27)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9729950757328387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9729950757328387, 0.5457644172650172] ***
*** starting iteration: 2; err: [Inf, 0.9729950757328387, 0.5457644172650172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9729950757328387, 0.5457644172650172, 0.41764008540454484] ***
*** starting iteration: 3; err: [Inf, 0.9729950757328387, 0.5457644172650172, 0.41764008540454484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9729950757328387, 0.5457644172650172, 0.41764008540454484, 0.4125598643585938] ***
*** finished computation of 3 references, err: [Inf, 0.9729950757328387, 0.5457644172650172, 0.41764008540454484, 0.4125598643585938] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 2, normalized-entropy: 0.6500224216483541, Tuple{Int64,Int64}[(2, 35), (3, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 27]]
** centroid: 3, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 3), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9020826737313308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9020826737313308, 0.4991121390040568] ***
*** starting iteration: 2; err: [Inf, 2.9020826737313308, 0.4991121390040568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9020826737313308, 0.4991121390040568, 0.33355413532654427] ***
*** starting iteration: 3; err: [Inf, 2.9020826737313308, 0.4991121390040568, 0.33355413532654427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9020826737313308, 0.4991121390040568, 0.33355413532654427, 0.3327252958121532] ***
*** finished computation of 3 references, err: [Inf, 2.9020826737313308, 0.4991121390040568, 0.33355413532654427, 0.3327252958121532] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 8]]
** centroid: 1, normalized-entropy: 0.787126586201269, Tuple{Int64,Int64}[(2, 26), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, Tuple{Int64,Int64}[(2, 3), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3195174789637412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3195174789637412, 0.495932570743569] ***
*** starting iteration: 2; err: [Inf, 1.3195174789637412, 0.495932570743569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3195174789637412, 0.495932570743569, 0.368101072005955] ***
*** starting iteration: 3; err: [Inf, 1.3195174789637412, 0.495932570743569, 0.368101072005955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3195174789637412, 0.495932570743569, 0.368101072005955, 0.35206733568408155] ***
*** finished computation of 3 references, err: [Inf, 1.3195174789637412, 0.495932570743569, 0.368101072005955, 0.35206733568408155] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, Tuple{Int64,Int64}[(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9783394094699919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827] ***
*** starting iteration: 2; err: [Inf, 0.9783394094699919, 0.30539268236431827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228] ***
*** starting iteration: 3; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955] ***
*** starting iteration: 4; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002] ***
*** starting iteration: 5; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348] ***
*** starting iteration: 6; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071] ***
*** starting iteration: 7; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499] ***
*** starting iteration: 8; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499, 0.17512036587003074] ***
*** starting iteration: 9; err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499, 0.17512036587003074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499, 0.17512036587003074, 0.17418591284737953] ***
*** finished computation of 7 references, err: [Inf, 0.9783394094699919, 0.30539268236431827, 0.22509704631394228, 0.21818429249210955, 0.21419230869348002, 0.20393351690447348, 0.1933048116085071, 0.1815852633081499, 0.17512036587003074, 0.17418591284737953] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 9]]
** centroid: 4, normalized-entropy: 0.940285958670631, Tuple{Int64,Int64}[(2, 5), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0828169003613177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605] ***
*** starting iteration: 2; err: [Inf, 1.0828169003613177, 0.4053988873243605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453] ***
*** starting iteration: 3; err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884] ***
*** starting iteration: 4; err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602] ***
*** starting iteration: 5; err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324] ***
*** starting iteration: 6; err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324, 0.2621492662863291] ***
*** starting iteration: 7; err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324, 0.2621492662863291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324, 0.2621492662863291, 0.2613204267719381] ***
*** finished computation of 7 references, err: [Inf, 1.0828169003613177, 0.4053988873243605, 0.3226847024087453, 0.2917668228375884, 0.2736127574375602, 0.26413500319538324, 0.2621492662863291, 0.2613204267719381] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 3, normalized-entropy: 0.5032583347756457, Tuple{Int64,Int64}[(2, 3), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 26, 8]]
** centroid: 7, normalized-entropy: 0.787126586201269, Tuple{Int64,Int64}[(2, 26), (3, 8)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4011156532166717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4011156532166717, 0.16599492997726628] ***
*** starting iteration: 2; err: [Inf, 0.4011156532166717, 0.16599492997726628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824] ***
*** starting iteration: 3; err: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824, 0.15556656034222927] ***
*** starting iteration: 4; err: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824, 0.15556656034222927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824, 0.15556656034222927, 0.15501454832993392] ***
*** finished computation of 7 references, err: [Inf, 0.4011156532166717, 0.16599492997726628, 0.1570548462313824, 0.15556656034222927, 0.15501454832993392] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 3]]
** centroid: 1, normalized-entropy: 0.7495952572594798, Tuple{Int64,Int64}[(2, 11), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.3447464809588197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3447464809588197, 1.1852087737446355] ***
*** finished computation of 3 references, err: [Inf, 3.3447464809588197, 1.1852087737446355] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [28, 9, 1]]
** centroid: 1, normalized-entropy: 0.6024712134356897, Tuple{Int64,Int64}[(1, 28), (2, 9), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, Tuple{Int64,Int64}[(2, 29), (3, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2079994014979683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2079994014979683, 1.119464900365528] ***
*** finished computation of 3 references, err: [Inf, 3.2079994014979683, 1.119464900365528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 24]]
** centroid: 1, normalized-entropy: 0.9967916319816367, Tuple{Int64,Int64}[(2, 21), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [39, 8, 0]]
** centroid: 2, normalized-entropy: 0.6581912658132184, Tuple{Int64,Int64}[(1, 39), (2, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6394012016163602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6394012016163602, 0.34517370400341135] ***
*** finished computation of 3 references, err: [Inf, 0.6394012016163602, 0.34517370400341135] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 2, normalized-entropy: 0.2222848306856879, Tuple{Int64,Int64}[(2, 27), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 33]]
** centroid: 3, normalized-entropy: 0.6193821946787638, Tuple{Int64,Int64}[(2, 6), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8309141021631465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8309141021631465, 0.4540725267648231] ***
*** starting iteration: 2; err: [Inf, 0.8309141021631465, 0.4540725267648231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8309141021631465, 0.4540725267648231, 0.43068774622485245] ***
*** starting iteration: 3; err: [Inf, 0.8309141021631465, 0.4540725267648231, 0.43068774622485245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8309141021631465, 0.4540725267648231, 0.43068774622485245, 0.41470241291494864] ***
*** finished computation of 3 references, err: [Inf, 0.8309141021631465, 0.4540725267648231, 0.43068774622485245, 0.41470241291494864] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 10]]
** centroid: 1, normalized-entropy: 0.7382848661434506, Tuple{Int64,Int64}[(2, 38), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6934416790912807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6934416790912807, 0.34973827183066264] ***
*** starting iteration: 2; err: [Inf, 0.6934416790912807, 0.34973827183066264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6934416790912807, 0.34973827183066264, 0.3364381224771948] ***
*** starting iteration: 3; err: [Inf, 0.6934416790912807, 0.34973827183066264, 0.3364381224771948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6934416790912807, 0.34973827183066264, 0.3364381224771948, 0.3325879928726141] ***
*** finished computation of 3 references, err: [Inf, 0.6934416790912807, 0.34973827183066264, 0.3364381224771948, 0.3325879928726141] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, Tuple{Int64,Int64}[(2, 29), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0485948209035798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485948209035798, 0.3613636167586455] ***
*** starting iteration: 2; err: [Inf, 1.0485948209035798, 0.3613636167586455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485948209035798, 0.3613636167586455, 0.350476849950754] ***
*** starting iteration: 3; err: [Inf, 1.0485948209035798, 0.3613636167586455, 0.350476849950754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0485948209035798, 0.3613636167586455, 0.350476849950754, 0.34796631316319304] ***
*** finished computation of 3 references, err: [Inf, 1.0485948209035798, 0.3613636167586455, 0.350476849950754, 0.34796631316319304] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 2, normalized-entropy: 0.22853814395352806, Tuple{Int64,Int64}[(2, 1), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2061259612415958] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2061259612415958, 0.42117930347430693] ***
*** starting iteration: 2; err: [Inf, 1.2061259612415958, 0.42117930347430693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2061259612415958, 0.42117930347430693, 0.4115922296714987] ***
*** starting iteration: 3; err: [Inf, 1.2061259612415958, 0.42117930347430693, 0.4115922296714987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2061259612415958, 0.42117930347430693, 0.4115922296714987, 0.4111961370156489] ***
*** finished computation of 3 references, err: [Inf, 1.2061259612415958, 0.42117930347430693, 0.4115922296714987, 0.4111961370156489] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 38, 10]]
** centroid: 3, normalized-entropy: 0.7382848661434506, Tuple{Int64,Int64}[(2, 38), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6797964554600381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6797964554600381, 0.35798737259336305] ***
*** starting iteration: 2; err: [Inf, 0.6797964554600381, 0.35798737259336305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052] ***
*** starting iteration: 3; err: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021] ***
*** starting iteration: 4; err: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396] ***
*** starting iteration: 5; err: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396, 0.33120884921746735] ***
*** finished computation of 3 references, err: [Inf, 0.6797964554600381, 0.35798737259336305, 0.3419151768660052, 0.3347270860098021, 0.33156876880174396, 0.33120884921746735] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 9]]
** centroid: 1, normalized-entropy: 0.7897492536625221, Tuple{Int64,Int64}[(2, 29), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7287779630183198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7287779630183198, 0.3491640809613539] ***
*** starting iteration: 2; err: [Inf, 0.7287779630183198, 0.3491640809613539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436] ***
*** starting iteration: 3; err: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436, 0.34165537994024875] ***
*** starting iteration: 4; err: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436, 0.34165537994024875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436, 0.34165537994024875, 0.34125006487413684] ***
*** finished computation of 3 references, err: [Inf, 0.7287779630183198, 0.3491640809613539, 0.3432855987439436, 0.34165537994024875, 0.34125006487413684] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 33]]
** centroid: 1, normalized-entropy: 0.6193821946787638, Tuple{Int64,Int64}[(2, 6), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 3, normalized-entropy: 0.2222848306856879, Tuple{Int64,Int64}[(2, 27), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47508645538737765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47508645538737765, 0.25720289651885103] ***
*** starting iteration: 2; err: [Inf, 0.47508645538737765, 0.25720289651885103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47508645538737765, 0.25720289651885103, 0.2308386658551848] ***
*** starting iteration: 3; err: [Inf, 0.47508645538737765, 0.25720289651885103, 0.2308386658551848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47508645538737765, 0.25720289651885103, 0.2308386658551848, 0.22816684634161186] ***
*** finished computation of 7 references, err: [Inf, 0.47508645538737765, 0.25720289651885103, 0.2308386658551848, 0.22816684634161186] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 16]]
** centroid: 1, normalized-entropy: 0.9946937953613056, Tuple{Int64,Int64}[(2, 19), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2587182642987953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587182642987953, 0.174546485813257] ***
*** starting iteration: 2; err: [Inf, 0.2587182642987953, 0.174546485813257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587182642987953, 0.174546485813257, 0.16440766872224624] ***
*** starting iteration: 3; err: [Inf, 0.2587182642987953, 0.174546485813257, 0.16440766872224624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2587182642987953, 0.174546485813257, 0.16440766872224624, 0.15803383183967815] ***
*** finished computation of 7 references, err: [Inf, 0.2587182642987953, 0.174546485813257, 0.16440766872224624, 0.15803383183967815] ***
*** center 1: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 7, normalized-entropy: 0.9456603046006401, Tuple{Int64,Int64}[(2, 14), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3146655097015614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146655097015614, 0.15736627010056667] ***
*** starting iteration: 2; err: [Inf, 0.3146655097015614, 0.15736627010056667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3146655097015614, 0.15736627010056667, 0.1566950560144604] ***
*** finished computation of 7 references, err: [Inf, 0.3146655097015614, 0.15736627010056667, 0.1566950560144604] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 7, normalized-entropy: 0.6962122601251459, Tuple{Int64,Int64}[(2, 13), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39825846129643594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008] ***
*** starting iteration: 2; err: [Inf, 0.39825846129643594, 0.20503704511352008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754] ***
*** starting iteration: 3; err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829] ***
*** starting iteration: 4; err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529] ***
*** starting iteration: 5; err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607] ***
*** starting iteration: 6; err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607, 0.1690531838746573] ***
*** starting iteration: 7; err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607, 0.1690531838746573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607, 0.1690531838746573, 0.1690531838746573] ***
*** finished computation of 7 references, err: [Inf, 0.39825846129643594, 0.20503704511352008, 0.18455320496119754, 0.1762370853499829, 0.1725088248956529, 0.17051551466571607, 0.1690531838746573, 0.1690531838746573] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 9]]
** centroid: 1, normalized-entropy: 0.9059282160429994, Tuple{Int64,Int64}[(2, 19), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 5, normalized-entropy: 0.3712323266408756, Tuple{Int64,Int64}[(2, 13), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.383644732070957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383644732070957, 0.16140190793764497] ***
*** starting iteration: 2; err: [Inf, 0.383644732070957, 0.16140190793764497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935] ***
*** starting iteration: 3; err: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935, 0.15867845178506798] ***
*** starting iteration: 4; err: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935, 0.15867845178506798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935, 0.15867845178506798, 0.15822102638730706] ***
*** finished computation of 7 references, err: [Inf, 0.383644732070957, 0.16140190793764497, 0.1596838914477935, 0.15867845178506798, 0.15822102638730706] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 19]]
** centroid: 4, normalized-entropy: 0.2863969571159561, Tuple{Int64,Int64}[(2, 1), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 6, normalized-entropy: 0.787126586201269, Tuple{Int64,Int64}[(2, 13), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41868874358563957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41868874358563957, 0.15710098884133256] ***
*** starting iteration: 2; err: [Inf, 0.41868874358563957, 0.15710098884133256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41868874358563957, 0.15710098884133256, 0.15095687638586872] ***
*** starting iteration: 3; err: [Inf, 0.41868874358563957, 0.15710098884133256, 0.15095687638586872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41868874358563957, 0.15710098884133256, 0.15095687638586872, 0.15053424360076792] ***
*** finished computation of 7 references, err: [Inf, 0.41868874358563957, 0.15710098884133256, 0.15095687638586872, 0.15053424360076792] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, Tuple{Int64,Int64}[(2, 14), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 4, normalized-entropy: 0.9852281360342514, Tuple{Int64,Int64}[(2, 12), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5919000015367935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5919000015367935, 0.3084210761933209] ***
*** starting iteration: 2; err: [Inf, 0.5919000015367935, 0.3084210761933209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5919000015367935, 0.3084210761933209, 0.3015836153215616] ***
*** starting iteration: 3; err: [Inf, 0.5919000015367935, 0.3084210761933209, 0.3015836153215616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5919000015367935, 0.3084210761933209, 0.3015836153215616, 0.2984716515975189] ***
*** finished computation of 7 references, err: [Inf, 0.5919000015367935, 0.3084210761933209, 0.3015836153215616, 0.2984716515975189] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 21]]
** centroid: 1, normalized-entropy: 0.634309554640566, Tuple{Int64,Int64}[(2, 4), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6066000031548543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6066000031548543, 0.23397766880981538] ***
*** starting iteration: 2; err: [Inf, 0.6066000031548543, 0.23397766880981538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6066000031548543, 0.23397766880981538, 0.21602805180100645] ***
*** starting iteration: 3; err: [Inf, 0.6066000031548543, 0.23397766880981538, 0.21602805180100645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6066000031548543, 0.23397766880981538, 0.21602805180100645, 0.2107342334649833] ***
*** finished computation of 7 references, err: [Inf, 0.6066000031548543, 0.23397766880981538, 0.21602805180100645, 0.2107342334649833] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, Tuple{Int64,Int64}[(2, 2), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6448000030761998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6448000030761998, 0.22734393516159085] ***
*** starting iteration: 2; err: [Inf, 0.6448000030761998, 0.22734393516159085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6448000030761998, 0.22734393516159085, 0.2162891813623268] ***
*** starting iteration: 3; err: [Inf, 0.6448000030761998, 0.22734393516159085, 0.2162891813623268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6448000030761998, 0.22734393516159085, 0.2162891813623268, 0.21404452488455164] ***
*** finished computation of 7 references, err: [Inf, 0.6448000030761998, 0.22734393516159085, 0.2162891813623268, 0.21404452488455164] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 5, normalized-entropy: 0.9940302114769566, Tuple{Int64,Int64}[(2, 12), (3, 10)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4239677582885358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4239677582885358, 0.20282347562807104] ***
*** starting iteration: 2; err: [Inf, 0.4239677582885358, 0.20282347562807104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4239677582885358, 0.20282347562807104, 0.1853294255057342] ***
*** starting iteration: 3; err: [Inf, 0.4239677582885358, 0.20282347562807104, 0.1853294255057342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4239677582885358, 0.20282347562807104, 0.1853294255057342, 0.1762370853499829] ***
*** finished computation of 7 references, err: [Inf, 0.4239677582885358, 0.20282347562807104, 0.1853294255057342, 0.1762370853499829] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 9]]
** centroid: 1, normalized-entropy: 0.9059282160429994, Tuple{Int64,Int64}[(2, 19), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, Tuple{Int64,Int64}[(2, 13), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31668860827008843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31668860827008843, 0.17729613881750655] ***
*** starting iteration: 2; err: [Inf, 0.31668860827008843, 0.17729613881750655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31668860827008843, 0.17729613881750655, 0.16219585656156646] ***
*** starting iteration: 3; err: [Inf, 0.31668860827008843, 0.17729613881750655, 0.16219585656156646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31668860827008843, 0.17729613881750655, 0.16219585656156646, 0.15512474941727553] ***
*** finished computation of 7 references, err: [Inf, 0.31668860827008843, 0.17729613881750655, 0.16219585656156646, 0.15512474941727553] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 7, normalized-entropy: 0.976020648236615, Tuple{Int64,Int64}[(2, 13), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44877897014492535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44877897014492535, 0.15661437024702038] ***
*** starting iteration: 2; err: [Inf, 0.44877897014492535, 0.15661437024702038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44877897014492535, 0.15661437024702038, 0.15059865650578796] ***
*** starting iteration: 3; err: [Inf, 0.44877897014492535, 0.15661437024702038, 0.15059865650578796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44877897014492535, 0.15661437024702038, 0.15059865650578796, 0.1501499031206775] ***
*** finished computation of 7 references, err: [Inf, 0.44877897014492535, 0.15661437024702038, 0.15059865650578796, 0.1501499031206775] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, Tuple{Int64,Int64}[(2, 14), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 4, normalized-entropy: 0.9852281360342514, Tuple{Int64,Int64}[(2, 12), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3795261364007911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778] ***
*** starting iteration: 2; err: [Inf, 0.3795261364007911, 0.21949872137080778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516] ***
*** starting iteration: 3; err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882] ***
*** starting iteration: 4; err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458] ***
*** starting iteration: 5; err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897] ***
*** starting iteration: 6; err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897, 0.19647202550575021] ***
*** starting iteration: 7; err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897, 0.19647202550575021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897, 0.19647202550575021, 0.19647202550575021] ***
*** finished computation of 7 references, err: [Inf, 0.3795261364007911, 0.21949872137080778, 0.21372653639084516, 0.20631072576891882, 0.1999276665267458, 0.19793435629680897, 0.19647202550575021, 0.19647202550575021] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 1, normalized-entropy: 0.9456603046006401, Tuple{Int64,Int64}[(2, 4), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 12]]
** centroid: 2, normalized-entropy: 0.9986359641585719, Tuple{Int64,Int64}[(2, 11), (3, 12)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3956979757819694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722] ***
*** starting iteration: 2; err: [Inf, 0.3956979757819694, 0.19579266222332722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537] ***
*** starting iteration: 3; err: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015] ***
*** starting iteration: 4; err: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457] ***
*** starting iteration: 5; err: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457, 0.18295550305349673] ***
*** starting iteration: 6; err: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457, 0.18295550305349673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457, 0.18295550305349673, 0.18255066168059872] ***
*** finished computation of 7 references, err: [Inf, 0.3956979757819694, 0.19579266222332722, 0.18949675733789537, 0.1875093248137015, 0.18413009658461457, 0.18295550305349673, 0.18255066168059872] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 23]]
** centroid: 2, normalized-entropy: 0.7837769474847011, Tuple{Int64,Int64}[(2, 7), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2772080653743647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294] ***
*** starting iteration: 2; err: [Inf, 0.2772080653743647, 0.21530317306280294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677] ***
*** starting iteration: 3; err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743] ***
*** starting iteration: 4; err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827] ***
*** starting iteration: 5; err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983] ***
*** starting iteration: 6; err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983, 0.19697130583785785] ***
*** starting iteration: 7; err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983, 0.19697130583785785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983, 0.19697130583785785, 0.19697130583785785] ***
*** finished computation of 7 references, err: [Inf, 0.2772080653743647, 0.21530317306280294, 0.20771878263606677, 0.20412478750757743, 0.20193038155581827, 0.1985463626641983, 0.19697130583785785, 0.19697130583785785] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 2, normalized-entropy: 0.48546076074591343, Tuple{Int64,Int64}[(2, 2), (3, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 3, normalized-entropy: 0.8453509366224364, Tuple{Int64,Int64}[(2, 8), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5844000063642371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000063642371, 0.2914790415419135] ***
*** starting iteration: 2; err: [Inf, 0.5844000063642371, 0.2914790415419135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000063642371, 0.2914790415419135, 0.2789284698065579] ***
*** starting iteration: 3; err: [Inf, 0.5844000063642371, 0.2914790415419135, 0.2789284698065579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5844000063642371, 0.2914790415419135, 0.2789284698065579, 0.2733339874866717] ***
*** finished computation of 7 references, err: [Inf, 0.5844000063642371, 0.2914790415419135, 0.2789284698065579, 0.2733339874866717] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 1, normalized-entropy: 0.5225593745369407, Tuple{Int64,Int64}[(2, 15), (3, 2)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 7]]
** centroid: 5, normalized-entropy: 0.8708644692353648, Tuple{Int64,Int64}[(2, 17), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5048000012217134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5048000012217134, 0.23963599309094707] ***
*** starting iteration: 2; err: [Inf, 0.5048000012217134, 0.23963599309094707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5048000012217134, 0.23963599309094707, 0.22614730296218863] ***
*** starting iteration: 3; err: [Inf, 0.5048000012217134, 0.23963599309094707, 0.22614730296218863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5048000012217134, 0.23963599309094707, 0.22614730296218863, 0.22321841956532626] ***
*** finished computation of 7 references, err: [Inf, 0.5048000012217134, 0.23963599309094707, 0.22614730296218863, 0.22321841956532626] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 7, normalized-entropy: 0.9023932827949788, Tuple{Int64,Int64}[(2, 15), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6422000029940236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6422000029940236, 0.24899992531199847] ***
*** starting iteration: 2; err: [Inf, 0.6422000029940236, 0.24899992531199847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6422000029940236, 0.24899992531199847, 0.23853904960159425] ***
*** starting iteration: 3; err: [Inf, 0.6422000029940236, 0.24899992531199847, 0.23853904960159425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6422000029940236, 0.24899992531199847, 0.23853904960159425, 0.23126693483991473] ***
*** finished computation of 7 references, err: [Inf, 0.6422000029940236, 0.24899992531199847, 0.23853904960159425, 0.23126693483991473] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 4]]
** centroid: 6, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 12), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, Tuple{Int64,Int64}[(2, 14), (3, 1)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.8345999974629618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805] ***
*** starting iteration: 2; err: [Inf, 0.8345999974629618, 0.28270589935356805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956] ***
*** starting iteration: 3; err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547] ***
*** starting iteration: 4; err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525] ***
*** starting iteration: 5; err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873] ***
*** starting iteration: 6; err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873, 0.24709437571819634] ***
*** starting iteration: 7; err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873, 0.24709437571819634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873, 0.24709437571819634, 0.24678510116765792] ***
*** finished computation of 7 references, err: [Inf, 0.8345999974629618, 0.28270589935356805, 0.2687733037023956, 0.2595571228036547, 0.25197969834885525, 0.24913685093743873, 0.24709437571819634, 0.24678510116765792] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 19, 9]]
** centroid: 4, normalized-entropy: 0.9059282160429994, Tuple{Int64,Int64}[(2, 19), (3, 9)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 5, normalized-entropy: 0.3712323266408756, Tuple{Int64,Int64}[(2, 13), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4491000020929799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4491000020929799, 0.3098072153868078] ***
*** starting iteration: 2; err: [Inf, 0.4491000020929799, 0.3098072153868078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754] ***
*** starting iteration: 3; err: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876] ***
*** starting iteration: 4; err: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876, 0.24845661148503886] ***
*** starting iteration: 5; err: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876, 0.24845661148503886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876, 0.24845661148503886, 0.24747405475960704] ***
*** finished computation of 7 references, err: [Inf, 0.4491000020929799, 0.3098072153868078, 0.27342114747066754, 0.25789063276100876, 0.24845661148503886, 0.24747405475960704] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 3, normalized-entropy: 0.2761954276479391, Tuple{Int64,Int64}[(2, 1), (3, 20)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8419000100633269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181] ***
*** starting iteration: 2; err: [Inf, 0.8419000100633269, 0.3545397604383181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803] ***
*** starting iteration: 3; err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575] ***
*** starting iteration: 4; err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103] ***
*** starting iteration: 5; err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755] ***
*** starting iteration: 6; err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755, 0.2584360583636946] ***
*** starting iteration: 7; err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755, 0.2584360583636946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755, 0.2584360583636946, 0.2584360583636946] ***
*** finished computation of 7 references, err: [Inf, 0.8419000100633269, 0.3545397604383181, 0.2773685165003803, 0.26675182294127575, 0.26238010865649103, 0.2595117758639755, 0.2584360583636946, 0.2584360583636946] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 11]]
** centroid: 3, normalized-entropy: 0.998363672593813, Tuple{Int64,Int64}[(2, 10), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, Tuple{Int64,Int64}[(2, 15), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6295413278182115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242] ***
*** starting iteration: 2; err: [Inf, 0.6295413278182115, 0.349782293687242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237] ***
*** starting iteration: 3; err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413] ***
*** starting iteration: 4; err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082] ***
*** starting iteration: 5; err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006] ***
*** starting iteration: 6; err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006, 0.18603240138394067] ***
*** starting iteration: 7; err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006, 0.18603240138394067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006, 0.18603240138394067, 0.18506553503917747] ***
*** finished computation of 7 references, err: [Inf, 0.6295413278182115, 0.349782293687242, 0.28072461003230237, 0.2417361966451413, 0.20847691672632082, 0.19652033250848006, 0.18603240138394067, 0.18506553503917747] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 17]]
** centroid: 1, normalized-entropy: 0.6098403047164005, Tuple{Int64,Int64}[(2, 3), (3, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, Tuple{Int64,Int64}[(2, 18), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4886672294713918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4886672294713918, 0.22282284855038012] ***
*** starting iteration: 2; err: [Inf, 0.4886672294713918, 0.22282284855038012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105] ***
*** starting iteration: 3; err: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166] ***
*** starting iteration: 4; err: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166, 0.18747622642080913] ***
*** starting iteration: 5; err: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166, 0.18747622642080913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166, 0.18747622642080913, 0.18690273145749267] ***
*** finished computation of 7 references, err: [Inf, 0.4886672294713918, 0.22282284855038012, 0.19460941225876105, 0.18902780593822166, 0.18747622642080913, 0.18690273145749267] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 23]]
** centroid: 4, normalized-entropy: 0.7355085815538399, Tuple{Int64,Int64}[(2, 6), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6294944067792934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422] ***
*** starting iteration: 2; err: [Inf, 0.6294944067792934, 0.22822985930782422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994] ***
*** starting iteration: 3; err: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088] ***
*** starting iteration: 4; err: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306] ***
*** starting iteration: 5; err: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306, 0.18177942787781165] ***
*** starting iteration: 6; err: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306, 0.18177942787781165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306, 0.18177942787781165, 0.18106945209701503] ***
*** finished computation of 7 references, err: [Inf, 0.6294944067792934, 0.22822985930782422, 0.19519768411631994, 0.1912343836212088, 0.18549982512209306, 0.18177942787781165, 0.18106945209701503] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, Tuple{Int64,Int64}[(2, 20), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 19]]
** centroid: 5, normalized-entropy: 0.9293636260137188, Tuple{Int64,Int64}[(2, 10), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.641700005558268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.641700005558268, 0.27465301780446205] ***
*** starting iteration: 2; err: [Inf, 0.641700005558268, 0.27465301780446205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.641700005558268, 0.27465301780446205, 0.26009625469569403] ***
*** starting iteration: 3; err: [Inf, 0.641700005558268, 0.27465301780446205, 0.26009625469569403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.641700005558268, 0.27465301780446205, 0.26009625469569403, 0.2559838586528574] ***
*** finished computation of 7 references, err: [Inf, 0.641700005558268, 0.27465301780446205, 0.26009625469569403, 0.2559838586528574] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 4]]
** centroid: 4, normalized-entropy: 0.7424875695421234, Tuple{Int64,Int64}[(2, 15), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5376000023792779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5376000023792779, 0.24071120562467707] ***
*** starting iteration: 2; err: [Inf, 0.5376000023792779, 0.24071120562467707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5376000023792779, 0.24071120562467707, 0.23799131775855042] ***
*** starting iteration: 3; err: [Inf, 0.5376000023792779, 0.24071120562467707, 0.23799131775855042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5376000023792779, 0.24071120562467707, 0.23799131775855042, 0.23730106036418985] ***
*** finished computation of 7 references, err: [Inf, 0.5376000023792779, 0.24071120562467707, 0.23799131775855042, 0.23730106036418985] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 6, normalized-entropy: 0.5435644431995963, Tuple{Int64,Int64}[(2, 14), (3, 2)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5009000031968383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5009000031968383, 0.23134480120762313] ***
*** starting iteration: 2; err: [Inf, 0.5009000031968383, 0.23134480120762313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5009000031968383, 0.23134480120762313, 0.21870487305861006] ***
*** starting iteration: 3; err: [Inf, 0.5009000031968383, 0.23134480120762313, 0.21870487305861006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5009000031968383, 0.23134480120762313, 0.21870487305861006, 0.2134402055147554] ***
*** finished computation of 7 references, err: [Inf, 0.5009000031968383, 0.23134480120762313, 0.21870487305861006, 0.2134402055147554] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 11]]
** centroid: 1, normalized-entropy: 1.0, Tuple{Int64,Int64}[(2, 11), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 21
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 21
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.98, 0.98, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.98
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.995652173913045, 3.1173913043478256, 5.873913043478261, 2.143478260869565], [6.32857142857143, 2.933333333333334, 4.623809523809525, 1.4809523809523808], [6.0200000000000005, 2.79, 5.0200000000000005, 1.9100000000000001], [5.444444444444445, 2.577777777777778, 3.8777777777777778, 1.1888888888888889], [5.3076923076923075, 3.6769230769230767, 1.4769230769230768, 0.26153846153846155], [4.792857142857142, 3.264285714285714, 1.4142857142857144, 0.26428571428571435]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 2, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.435714285714286, 2.9214285714285717, 4.671428571428571, 1.4499999999999997], [6.2, 2.805882352941176, 5.199999999999999, 1.8705882352941179], [7.1400000000000015, 3.1133333333333337, 6.086666666666667, 2.0933333333333333], [4.721428571428571, 3.071428571428572, 1.457142857142857, 0.1785714285714286], [5.033333333333332, 3.466666666666667, 1.4733333333333332, 0.28666666666666674], [5.680000000000001, 2.6733333333333333, 4.046666666666667, 1.24], [5.4222222222222225, 3.9222222222222225, 1.5333333333333334, 0.288888888888889]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 1, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.173333333333332, 2.92, 4.573333333333333, 1.4533333333333334], [6.009999999999999, 2.7199999999999998, 5.0600000000000005, 1.8199999999999998], [4.692857142857142, 3.1071428571428577, 1.4000000000000001, 0.1785714285714286], [5.114285714285714, 3.5499999999999994, 1.5500000000000003, 0.24285714285714288], [5.5600000000000005, 4.04, 1.44, 0.28], [6.555555555555557, 3.1333333333333337, 5.527777777777779, 2.1833333333333327], [7.459999999999999, 2.96, 6.220000000000001, 2.0199999999999996], [5.5052631578947375, 2.5894736842105264, 3.8631578947368426, 1.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 1, 1, 3, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[80, 1, 1, 16, 1, 1, 3, 38, 41, 20, 3, 13, 38, 25, 1, 42, 29, 1, 27, 22, 1, 29, 1, 43, 25, 25, 19, 40, 33, 1, 34, 41, 1, 29, 12, 27, 26, 37, 21, 21, 20, 24, 17, 50, 26, 29, 41, 37, 21, 37, 32, 23, 34, 48, 42, 24, 31, 34, 26, 49, 39, 46, 24, 15, 38, 23, 1, 22, 14, 25, 34, 37, 42, 9, 31, 30, 32, 48, 24, 47, 49, 25, 37, 47, 38, 19, 36, 34, 19, 28, 49, 41, 38, 34, 54, 31, 38, 2, 50, 38, 26, 28, 39, 39, 39, 42, 20, 44, 44, 44, 16, 37, 32, 31, 36, 39, 35, 57, 1, 1, 32, 28, 24, 39, 39, 34, 36, 40, 48, 36, 69, 19, 49, 31, 37, 36, 46, 30, 19, 74, 58, 29, 30, 44, 3, 33, 70, 57, 29, 19, 29, 21, 45, 32, 48, 32, 43, 52, 35, 37, 34, 38, 25, 45, 46, 51, 52, 38, 38, 59, 43, 20, 37, 33, 35, 31, 75, 53, 45, 38, 15, 21, 41, 37, 33, 3, 37, 51, 61, 63, 44, 36, 51, 19, 17, 31, 44, 37, 47, 59, 8, 37, 30, 25, 27, 31, 34, 31, 64, 17, 48, 45, 35, 39, 38, 34, 27, 25, 39, 29, 45, 42, 46, 25, 54, 24, 34, 50, 27, 38, 43, 60, 29, 44, 60, 4, 35, 34, 36, 32, 37, 12, 34, 31, 24, 19, 48, 36, 29, 45, 28, 25, 34, 52, 48, 26, 48, 44, 35, 16, 38, 1, 52, 1, 34, 39, 32, 42, 47, 29, 19, 36, 44, 39, 51, 5, 35, 51, 35, 27, 34, 57, 36, 35, 42, 41, 40, 29, 47, 38, 35, 53, 38, 37, 29, 29, 36, 22, 1, 21]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6120000000000002, speedup = 0.5026386947604928, eval_ratio = 0.041821)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.41319444444444436,"recall":0.41319444444444436,"f1":null,"seconds":6.816163659095764e-5,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":339.421875,"distances_sum":1746.9828655616316}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5677083333333329,"recall":0.5677083333333329,"f1":null,"seconds":9.896978735923767e-5,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":377.921875,"distances_sum":1633.7718410826442}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888884,"recall":0.6701388888888884,"f1":0.6701388888888884,"seconds":0.00013126246631145477,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":418.2265625,"distances_sum":1591.0266092431232}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7430555555555548,"recall":0.7430555555555548,"f1":0.7430555555555548,"seconds":0.00015991739928722382,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":458.171875,"distances_sum":1565.0111314483752}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7899305555555545,"recall":0.7899305555555545,"f1":0.7899305555555545,"seconds":0.0001894049346446991,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":498.3125,"distances_sum":1550.5300517292494}
KCenters.DeloneInvIndex> reached performance {"precision":0.8281249999999992,"recall":0.8281249999999992,"f1":0.8281249999999992,"seconds":0.0002232808619737625,"exhaustive_search_seconds":0.0003788042813539505,"evaluations":537.03125,"distances_sum":1541.6579859116396}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7990000000000002, speedup = 1.6585381623042856, eval_ratio = 0.053725999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
