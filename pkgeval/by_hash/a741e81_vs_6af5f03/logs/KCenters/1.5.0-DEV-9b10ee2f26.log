Julia Version 1.5.0-DEV.162
Commit 9b10ee2f26 (2020-01-27 13:16 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed KCenters ──────────────────── v0.1.9
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Tables ────────────────────── v0.2.11
 Installed Missings ──────────────────── v0.4.3
 Installed DataStructures ────────────── v0.17.9
 Installed Compat ────────────────────── v3.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MappedArrays ──────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_BKFkjE/Project.toml`
 [no changes]
  Updating `/tmp/jl_BKFkjE/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_BKFkjE/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 157.14999999999995
[ Info: 86.83000000000007
[ Info: 41.64
[ Info: 24.250000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.06122865525321
inertia(cdnet.distances) = 33.62335687456431
inertia(crand.distances) = 22.825192707592933
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.831534611222112,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.75,"distances_sum":2089.1379017773183}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7236328125,"f1":0.831534611222112,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.75,"distances_sum":2089.1379017773183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8999464077589087,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.34375,"distances_sum":2533.5166313695127}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.954824862637363,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7890625,"distances_sum":2928.2974638333226}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8541385697635705,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.8203125,"distances_sum":2269.7286243640424}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8480639152514161,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.7734375,"distances_sum":2226.3470550332386}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.954824862637363,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7890625,"distances_sum":2928.2974638333226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715086996337001,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":3051.0655301825777}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9560325091575095,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.765625,"distances_sum":2952.7305258948336}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9715086996337001,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":3051.0655301825777}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9715086996337001,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.890625,"distances_sum":3051.0655301825777}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6015625,"f1":0.7385307400932407,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.453125,"distances_sum":1381.3789012558543}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.6015625,"f1":0.7385307400932407,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.453125,"distances_sum":1381.3789012558543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9346840659340666,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2277.1761172993038}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9048909423909434,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.546875,"distances_sum":2077.0590073081794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8106419622044629,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0234375,"distances_sum":1592.733483569887}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.821018044455545,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.046875,"distances_sum":1684.4181463235566}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9346840659340666,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2277.1761172993038}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9414720695970702,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.703125,"distances_sum":2363.5217674707665}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047626,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2547.239391581945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989017,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2512.709207876938}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648466117216119,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8515625,"distances_sum":2501.0540765417177}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9369906135531143,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.78125,"distances_sum":2354.734773295179}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047626,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2547.239391581945}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047626,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2547.239391581945}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7803361568986577,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.6484375,"distances_sum":1695.0014737418123}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8848474442224451,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3828125,"distances_sum":2195.959084948765}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8736331376956384,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.265625,"distances_sum":2101.2348540764024}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8848474442224451,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3828125,"distances_sum":2195.959084948765}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9081595487845495,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5,"distances_sum":2349.3602206310566}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9369448260073263,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.703125,"distances_sum":2556.7824176047866}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9369448260073263,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.703125,"distances_sum":2556.7824176047866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9505608974358978,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.75,"distances_sum":2674.341572257205}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9567708333333338,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8046875,"distances_sum":2670.3513637567385}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9622596153846159,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8359375,"distances_sum":2710.06652131537}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545787545787547,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.78125,"distances_sum":2681.199294277077}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9622596153846159,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8359375,"distances_sum":2710.06652131537}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9622596153846159,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8359375,"distances_sum":2710.06652131537}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.328125,"distances_sum":555.9570014529755}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8090638528138536,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.875,"distances_sum":1666.9730509457795}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8090638528138536,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.875,"distances_sum":1666.9730509457795}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8525334040959052,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.34375,"distances_sum":1867.17180958321}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8525334040959052,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.34375,"distances_sum":1867.17180958321}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968103250915751,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2565.7846436010823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395234973359978,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2359.0767655549303}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968103250915751,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2565.7846436010823}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968103250915751,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2565.7846436010823}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8717140498390507,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2578125,"distances_sum":2064.8023855622046}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7307047119547125,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.46875,"distances_sum":1423.0181824889428}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8208286505161513,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.015625,"distances_sum":1821.841482106567}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8717140498390507,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2578125,"distances_sum":2064.8023855622046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.911266858141859,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6796875,"distances_sum":2245.4150274523786}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551167582417589,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2612.494302180508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570913461538465,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2597.519066040579}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9374859515484522,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7421875,"distances_sum":2454.2627193880785}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570913461538465,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2597.519066040579}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655162545787548,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":2684.588914599594}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692311,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2717.5147339816594}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763392857142861,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2749.797572060392}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358975,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2716.903643762101}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641597985347992,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2649.7598386083023}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664148351648356,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2665.5681151340864}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941396,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9453125,"distances_sum":2711.921575747469}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763392857142861,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2749.797572060392}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763392857142861,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":2749.797572060392}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.6978838869463876,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.6171875,"distances_sum":1313.362912870384}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.6978838869463876,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.6171875,"distances_sum":1313.362912870384}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8147389069264077,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.8828125,"distances_sum":1672.4199140974965}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8619687604062614,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.25,"distances_sum":1872.1678567411811}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370993589743593,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5859375,"distances_sum":2385.910735226619}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8773757492507502,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3515625,"distances_sum":1946.010893735319}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9370993589743593,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5859375,"distances_sum":2385.910735226619}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482600732600738,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.734375,"distances_sum":2441.562468911797}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535573801198804,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7734375,"distances_sum":2471.7557392600193}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535573801198804,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7734375,"distances_sum":2471.7557392600193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9535573801198804,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7734375,"distances_sum":2471.7557392600193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7881864663114669,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6953125,"distances_sum":1651.5098424600985}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7881864663114669,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6953125,"distances_sum":1651.5098424600985}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9401530760905765,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.640625,"distances_sum":2410.0158801464736}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9401530760905765,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.640625,"distances_sum":2410.0158801464736}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9684523809523813,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.875,"distances_sum":2580.9537718769616}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455986721611728,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2436.702116955937}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9684523809523813,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.875,"distances_sum":2580.9537718769616}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9684523809523813,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.875,"distances_sum":2580.9537718769616}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1279296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1279296875,"f1":null,"seconds":2.8517097234725952e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":3.5703125,"distances_sum":342.74364010203027}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.474609375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.474609375,"f1":0.6250232406482412,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.96875,"distances_sum":1208.5672006649788}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8367122460872468,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.7734375,"distances_sum":1878.0041696916528}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8367122460872468,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.7734375,"distances_sum":1878.0041696916528}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8799398518148527,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3203125,"distances_sum":2071.7575836648693}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8621290168165173,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0625,"distances_sum":2016.110787857106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8811443764568774,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2421875,"distances_sum":2076.124442033392}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7998046875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.7998046875,"f1":0.8811443764568774,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2421875,"distances_sum":2076.124442033392}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9168326465201475,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.484375,"distances_sum":2306.2931350839335}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9470695970695975,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7265625,"distances_sum":2492.2208946353517}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9470695970695975,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7265625,"distances_sum":2492.2208946353517}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9470695970695975,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7265625,"distances_sum":2492.2208946353517}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.625,"distances_sum":766.5205507963892}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.5278499126434326e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.1953125,"distances_sum":443.64608072322005}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.390625,"distances_sum":466.3068425527317}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3720703125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.625,"distances_sum":766.5205507963892}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6928916569541576,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.7109375,"distances_sum":1130.7227151839875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.7734375,"distances_sum":804.7111636339822}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7868901931401938,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.421875,"distances_sum":1437.56572463077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7107210497835506,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.7890625,"distances_sum":1182.0525306283523}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":9,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.6484375,"distances_sum":818.0470626973033}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.3359375,"distances_sum":1423.1888092655201}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7865785256410265,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.390625,"distances_sum":1392.454702261876}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":4,"bsize":4},"perf":{"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.3359375,"distances_sum":1423.1888092655201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8769324425574433,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2265625,"distances_sum":1766.6418343361227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8754774739149745,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3515625,"distances_sum":1816.1268053017357}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8501460345210353,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0703125,"distances_sum":1653.8460583618014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8828817016317025,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3984375,"distances_sum":1787.1164558214998}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8658372877122886,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3203125,"distances_sum":1723.267927006869}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.797230894105895,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.4609375,"distances_sum":1494.8610762125172}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8828817016317025,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3984375,"distances_sum":1787.1164558214998}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8017578125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8828817016317025,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.3984375,"distances_sum":1787.1164558214998}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.948807716369629e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.796875,"distances_sum":782.2739094895895}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8407519563769573,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9296875,"distances_sum":1434.7872553490067}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8407519563769573,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9296875,"distances_sum":1434.7872553490067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8958135614385622,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4921875,"distances_sum":1695.7899544704676}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8958135614385622,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4921875,"distances_sum":1695.7899544704676}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462110805860812,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":1901.9440290621735}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950641025641026,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":1953.6122863617356}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9183207417582426,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":1753.3032136999009}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.950641025641026,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":1953.6122863617356}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.950641025641026,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":1953.6122863617356}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8485925532800541,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.109375,"distances_sum":1452.4005324706472}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7012784090909095,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.1796875,"distances_sum":1017.8772916487367}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8485925532800541,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.109375,"distances_sum":1452.4005324706472}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950286172161173,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":1937.9940371331459}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9182265651015656,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.671875,"distances_sum":1758.2204817139916}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8985665376290384,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.5546875,"distances_sum":1645.765492864492}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.950286172161173,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":1937.9940371331459}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712053571428574,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2032.0115651969106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333336,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2076.63563055825}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712282509157513,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9296875,"distances_sum":2039.177395506556}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504178113553121,"seconds":6.971880793571472e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.796875,"distances_sum":1932.1550431311184}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333336,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2076.63563055825}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333336,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2076.63563055825}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.109375,"distances_sum":688.0053138282422}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.0703125,"distances_sum":687.7646475807718}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":5.7421875,"distances_sum":420.12901756160863}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4072265625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.109375,"distances_sum":688.0053138282422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.328125,"distances_sum":756.4626825258593}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.3046875,"distances_sum":947.945161846658}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.3046875,"distances_sum":947.945161846658}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.897224650349651,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.59375,"distances_sum":1532.3782079754467}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7862980769230777,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.5234375,"distances_sum":1150.6873355393036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8548716908091917,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.2578125,"distances_sum":1376.8170850125912}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.897224650349651,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.59375,"distances_sum":1532.3782079754467}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8251953125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.897224650349651,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.59375,"distances_sum":1532.3782079754467}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5302734375,"f1":null,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.046875,"distances_sum":973.4053640297345}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":5.796875,"distances_sum":672.9768568903341}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5302734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5302734375,"f1":null,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.046875,"distances_sum":973.4053640297345}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7938202422577432,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.5078125,"distances_sum":1229.59216500272}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7938202422577432,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.5078125,"distances_sum":1229.59216500272}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9358375999001003,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7109375,"distances_sum":1821.237200429917}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8986778846153856,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.5234375,"distances_sum":1614.1403851626021}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9358375999001003,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7109375,"distances_sum":1821.237200429917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9358375999001003,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7109375,"distances_sum":1821.237200429917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.6953125,"distances_sum":660.0822050171805}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.845482122044623,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9609375,"distances_sum":1378.963023300459}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.845482122044623,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.9609375,"distances_sum":1378.963023300459}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9234177281052287,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.671875,"distances_sum":1658.312128876218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9234177281052287,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.671875,"distances_sum":1658.312128876218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962185210622711,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":1857.8971493318454}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.859375,"distances_sum":1894.4424072851598}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.859375,"distances_sum":1894.4424072851598}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.859375,"distances_sum":1894.4424072851598}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.2186508178710938e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":5.28125,"distances_sum":375.8556340569807}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.68169798951049,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.0234375,"distances_sum":984.8657734415712}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.537109375,"f1":0.68169798951049,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":7.0234375,"distances_sum":984.8657734415712}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8853828463203472,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.3359375,"distances_sum":1576.0161437205848}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8853828463203472,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.3359375,"distances_sum":1576.0161437205848}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919416,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8515625,"distances_sum":1995.3801684827843}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919416,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8515625,"distances_sum":1995.3801684827843}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919416,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8515625,"distances_sum":1995.3801684827843}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6915535853035858,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.3046875,"distances_sum":995.3654622644507}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5458984375,"f1":0.6915535853035858,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.3046875,"distances_sum":995.3654622644507}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7917030885780895,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.984375,"distances_sum":1206.5999362176951}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8052041708291716,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1171875,"distances_sum":1295.0547436216752}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8004729645354653,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.078125,"distances_sum":1274.149681046171}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8052041708291716,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1171875,"distances_sum":1295.0547436216752}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959975961538462,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":1926.9106212830684}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":10,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8535948426573434,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.25,"distances_sum":1376.961366145245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358287545787554,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.84375,"distances_sum":1788.6571673979936}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9338827838827846,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7734375,"distances_sum":1781.1845945290834}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8993620962370971,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7109375,"distances_sum":1597.4158814762532}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8946543040293049,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6875,"distances_sum":1577.7316854215046}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9050480769230778,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.671875,"distances_sum":1619.8097503579177}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578353937728943,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":1923.5068811036242}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959975961538462,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":1926.9106212830684}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959975961538462,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8828125,"distances_sum":1926.9106212830684}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.236328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.236328125,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.8125,"distances_sum":405.34477659451665}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.236328125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.236328125,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.8125,"distances_sum":405.34477659451665}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.236328125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.236328125,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.8125,"distances_sum":405.34477659451665}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.291015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":5.90625,"distances_sum":579.4638620376792}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.291015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":5.90625,"distances_sum":579.4638620376792}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2919921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2919921875,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":5.8203125,"distances_sum":520.5822990633787}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2919921875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2919921875,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":5.8203125,"distances_sum":520.5822990633787}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.772320908258409,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.3125,"distances_sum":1200.6518789544323}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7753116674991686,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.3359375,"distances_sum":1237.6102473132348}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7753116674991686,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.3359375,"distances_sum":1237.6102473132348}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9013793498168506,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.25,"distances_sum":1644.7436015970939}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.927467324342325,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.703125,"distances_sum":1807.4622198755571}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.927467324342325,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.703125,"distances_sum":1807.4622198755571}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.927467324342325,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.703125,"distances_sum":1807.4622198755571}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.516674041748047e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.828125,"distances_sum":401.5473015071516}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7990036005661013,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.6171875,"distances_sum":1199.663610098042}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6771906912531916,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.828125,"distances_sum":864.4171116004402}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7990036005661013,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.6171875,"distances_sum":1199.663610098042}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8408544580419589,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0078125,"distances_sum":1292.636116209806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8120877386502394,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.734375,"distances_sum":1153.2862792154012}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8909288628038636,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3046875,"distances_sum":1453.6286797409962}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8903762903762911,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2734375,"distances_sum":1451.1953945672194}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8535974442224452,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1484375,"distances_sum":1312.0074757556304}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.8903762903762911,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2734375,"distances_sum":1451.1953945672194}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9083484224109232,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3984375,"distances_sum":1526.3454088638885}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9542868589743594,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8828125,"distances_sum":1763.6913284366897}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945135073260074,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":1698.6160422364399}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8947635697635705,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":1474.988484803885}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":1828.7871378890213}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9352621336996345,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":1620.366557227896}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120881,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":1825.4387457763817}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9391082875457882,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":1687.9868225750433}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":1828.7871378890213}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":1828.7871378890213}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.796875,"distances_sum":665.1031962338537}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.796875,"distances_sum":665.1031962338537}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9765625,"distances_sum":701.4702696453878}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4248046875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9765625,"distances_sum":701.4702696453878}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9010645604395612,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":1491.6651937568877}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6785719488844497,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5546875,"distances_sum":917.1813838882754}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8541302447552456,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1015625,"distances_sum":1328.447006618224}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.529296875,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5859375,"distances_sum":821.8006350650929}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9010645604395612,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":1491.6651937568877}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.830078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9010645604395612,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":1491.6651937568877}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.862146187146188,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.46875,"distances_sum":1455.5523498736252}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.6015625,"distances_sum":389.1794824594125}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.862146187146188,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.46875,"distances_sum":1455.5523498736252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9559409340659348,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1811.107594240807}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9012133699633708,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6171875,"distances_sum":1556.0711316758452}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585622710622714,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":1842.2828989661955}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9585622710622714,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":1842.2828989661955}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.962093635531136,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":1859.818688921743}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711137820512825,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":1903.0925809257697}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620764652014655,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":1847.6408288782293}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711137820512825,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":1903.0925809257697}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711137820512825,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":1903.0925809257697}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.203125,"distances_sum":486.7064202535686}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.0703125,"distances_sum":879.5891160752436}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9913225446428572,"recall":0.7607421875,"f1":0.8544638304403935,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1942.0877018162832}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":0.9913225446428572,"recall":0.7607421875,"f1":0.8544638304403935,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1942.0877018162832}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9887927827380952,"recall":0.8115234375,"f1":0.8854474301739932,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.59375,"distances_sum":2109.959145186741}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9888392857142857,"recall":0.931640625,"f1":0.9569253663003664,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2595.273838110521}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9888392857142857,"recall":0.931640625,"f1":0.9569253663003664,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2595.273838110521}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":12}, perf: {"precision":0.9885602678571429,"recall":0.94921875,"f1":0.9670401213369965,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2652.0649634166853}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":11}, perf: {"precision":0.985630580357143,"recall":0.94140625,"f1":0.960951093177656,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2625.4332807916817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":0.9928385416666666,"recall":0.95703125,"f1":0.9732157165750919,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2665.8126131577483}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9901413690476191,"recall":0.93359375,"f1":0.9590058379120879,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.96875,"distances_sum":2574.4260588370566}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":0.9938616071428572,"recall":0.9423828125,"f1":0.9649753891941394,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9609375,"distances_sum":2609.5907857987745}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":3,"bsize":10},"perf":{"precision":0.9928385416666666,"recall":0.95703125,"f1":0.9732157165750919,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2665.8126131577483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":3,"bsize":10},"perf":{"precision":0.9928385416666666,"recall":0.95703125,"f1":0.9732157165750919,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.984375,"distances_sum":2665.8126131577483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.669921875,"f1":null,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7265625,"distances_sum":1496.08453329947}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.90625,"distances_sum":1228.0670607980092}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8581418581418591,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1640625,"distances_sum":1798.0353420523122}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8581418581418591,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1640625,"distances_sum":1798.0353420523122}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8936017107892115,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.296875,"distances_sum":2020.2113765627291}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9258876540126549,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5078125,"distances_sum":2262.28208279854}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9047421328671336,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4375,"distances_sum":2054.8128650241906}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9423477564102573,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2386.545140593803}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9471242299367306,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2393.9947304349726}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9493360805860812,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2443.3110563549776}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9367616758241766,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4921875,"distances_sum":2281.5198914828065}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9493360805860812,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2443.3110563549776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721382783882785,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2560.0163569361193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703299,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.796875,"distances_sum":2541.350390994127}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612065018315022,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7890625,"distances_sum":2479.6557494444387}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554029304029308,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7890625,"distances_sum":2432.3900732388493}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9555116758241764,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.765625,"distances_sum":2450.604992135498}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9550652472527479,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.765625,"distances_sum":2451.3955632323}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721382783882785,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2560.0163569361193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721382783882785,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2560.0163569361193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4921875,"distances_sum":1156.8590727674236}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.8671875,"distances_sum":829.2932510510112}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5537109375,"f1":null,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.4921875,"distances_sum":1156.8590727674236}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7773892773892782,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.109375,"distances_sum":1435.560023186323}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8046224608724617,"seconds":4.477798938751221e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.21875,"distances_sum":1475.311568617365}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8276202963702972,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.0,"distances_sum":1672.765021034082}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8276202963702972,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.0,"distances_sum":1672.765021034082}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9445570054945062,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7578125,"distances_sum":2289.622324686302}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9690164002664005,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2522.3346351110813}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8906973235098244,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.3671875,"distances_sum":1945.409378594167}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.882964431401932,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2734375,"distances_sum":1943.8069454016024}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9690164002664005,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2522.3346351110813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9690164002664005,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2522.3346351110813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9921875,"distances_sum":744.4210143546475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8731461247086255,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.25,"distances_sum":1857.484855805694}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.015625,"distances_sum":550.0604962593208}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8731461247086255,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.25,"distances_sum":1857.484855805694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9370879120879129,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6796875,"distances_sum":2279.5901290858264}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9370879120879129,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6796875,"distances_sum":2279.5901290858264}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9528674450549457,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":2407.3251214338156}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2503.7233395093886}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544528388278395,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6796875,"distances_sum":2443.82015617061}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2503.7233395093886}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358979,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2503.7233395093886}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.3203125,"distances_sum":675.9495369641455}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.109375,"distances_sum":575.2990632745093}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":4.3101608753204346e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.6953125,"distances_sum":1201.6599381490746}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.564453125,"f1":null,"seconds":4.3101608753204346e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.6953125,"distances_sum":1201.6599381490746}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.851030740093241,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.265625,"distances_sum":1674.0493369699532}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.851030740093241,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.265625,"distances_sum":1674.0493369699532}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230775,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":2370.1025950470057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8988584332334341,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.390625,"distances_sum":1946.1308578084688}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230775,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":2370.1025950470057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230775,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":2370.1025950470057}}, n: 9
inertia(cfft.distances) = 19.061228632478624
inertia(cdnet.distances) = 21.55234790903542
inertia(crand.distances) = 21.57635217115724
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9155555555555557
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222224
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 1, 3, 2, 2, 3, 3, 3, 3, 2, 1, 3, 3, 1, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 3, 2, 2, 1, 3, 2, 3, 1]
acc = 0.9333333333333333
*** starting iteration: 1; err: [Inf, 0.40420000204351275] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40420000204351275, 0.17723495605166636] ***
*** starting iteration: 2; err: [Inf, 0.40420000204351275, 0.17723495605166636] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416] ***
*** starting iteration: 3; err: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.40420000204351275, 0.17723495605166636, 0.16822454140040416, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.5555863448835141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866] ***
*** starting iteration: 2; err: [Inf, 0.5555863448835141, 0.29531784105906866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915] ***
*** starting iteration: 3; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927] ***
*** starting iteration: 4; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616] ***
*** starting iteration: 5; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364] ***
*** starting iteration: 6; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325] ***
*** starting iteration: 7; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047] ***
*** starting iteration: 8; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047, 0.21275507049827425] ***
*** starting iteration: 9; err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047, 0.21275507049827425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047, 0.21275507049827425, 0.2117659005282379] ***
*** finished computation of 7 references, err: [Inf, 0.5555863448835141, 0.29531784105906866, 0.2646761423610915, 0.24434065607302927, 0.2327035716999616, 0.22663851781402364, 0.21953207014237325, 0.215915674906047, 0.21275507049827425, 0.2117659005282379] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5769000136851452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5769000136851452, 0.25030352848794735] ***
*** finished computation of 7 references, err: [Inf, 0.5769000136851452, 0.25030352848794735] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 4]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 20), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 2]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49770000429306593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49770000429306593, 0.21839735574201136] ***
*** finished computation of 7 references, err: [Inf, 0.49770000429306593, 0.21839735574201136] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45201703243317454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137] ***
*** starting iteration: 2; err: [Inf, 0.45201703243317454, 0.23665515601670137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026] ***
*** starting iteration: 3; err: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025] ***
*** starting iteration: 4; err: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358] ***
*** starting iteration: 5; err: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358, 0.16992086134114828] ***
*** starting iteration: 6; err: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358, 0.16992086134114828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358, 0.16992086134114828, 0.16966033586671775] ***
*** finished computation of 7 references, err: [Inf, 0.45201703243317454, 0.23665515601670137, 0.21882169335907026, 0.19549237004087025, 0.18237097561196358, 0.16992086134114828, 0.16966033586671775] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 11]]
** centroid: 1, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42455312135992385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862] ***
*** starting iteration: 2; err: [Inf, 0.42455312135992385, 0.19005426974488862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543] ***
*** starting iteration: 3; err: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913] ***
*** starting iteration: 4; err: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004] ***
*** starting iteration: 5; err: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004, 0.15490297933889546] ***
*** starting iteration: 6; err: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004, 0.15490297933889546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004, 0.15490297933889546, 0.15490297933889546] ***
*** finished computation of 7 references, err: [Inf, 0.42455312135992385, 0.19005426974488862, 0.16357538202494543, 0.16001317961487913, 0.15714431044477004, 0.15490297933889546, 0.15490297933889546] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 7]]
** centroid: 5, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46852809713252624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735] ***
*** starting iteration: 2; err: [Inf, 0.46852809713252624, 0.25670344993246735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535] ***
*** starting iteration: 3; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623] ***
*** starting iteration: 4; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025] ***
*** starting iteration: 5; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906] ***
*** starting iteration: 6; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862] ***
*** starting iteration: 7; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164] ***
*** starting iteration: 8; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164, 0.16560841712174657] ***
*** starting iteration: 9; err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164, 0.16560841712174657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164, 0.16560841712174657, 0.16575073371566595] ***
*** finished computation of 7 references, err: [Inf, 0.46852809713252624, 0.25670344993246735, 0.2099282192027535, 0.20541504895851623, 0.1972657447132025, 0.18906377055167906, 0.18295045200961862, 0.17874065279438164, 0.16560841712174657, 0.16575073371566595] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 7]]
** centroid: 5, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5068550704960932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289] ***
*** starting iteration: 2; err: [Inf, 0.5068550704960932, 0.2776599723847289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724] ***
*** starting iteration: 3; err: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913] ***
*** starting iteration: 4; err: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467] ***
*** starting iteration: 5; err: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467, 0.18566768763961441] ***
*** starting iteration: 6; err: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467, 0.18566768763961441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467, 0.18566768763961441, 0.18484183614375624] ***
*** finished computation of 7 references, err: [Inf, 0.5068550704960932, 0.2776599723847289, 0.24030366429115724, 0.20868728570150913, 0.1888881887978467, 0.18566768763961441, 0.18484183614375624] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49000000457377996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49000000457377996, 0.3174936123302221] ***
*** finished computation of 7 references, err: [Inf, 0.49000000457377996, 0.3174936123302221] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 9]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 2]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.511200009041292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.511200009041292, 0.36445024179913577] ***
*** finished computation of 7 references, err: [Inf, 0.511200009041292, 0.36445024179913577] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 6]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3995000025379899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3995000025379899, 0.25248822123044923] ***
*** finished computation of 7 references, err: [Inf, 0.3995000025379899, 0.25248822123044923] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 20]]
** centroid: 5, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8512999939289213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8512999939289213, 0.5372388221508222] ***
*** starting iteration: 2; err: [Inf, 0.8512999939289213, 0.5372388221508222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8512999939289213, 0.5372388221508222, 0.5355370153462217] ***
*** starting iteration: 3; err: [Inf, 0.8512999939289213, 0.5372388221508222, 0.5355370153462217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8512999939289213, 0.5372388221508222, 0.5355370153462217, 0.5355370153462217] ***
*** finished computation of 3 references, err: [Inf, 0.8512999939289213, 0.5372388221508222, 0.5355370153462217, 0.5355370153462217] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8762999960434604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8762999960434604, 0.6067703425314479] ***
*** starting iteration: 2; err: [Inf, 0.8762999960434604, 0.6067703425314479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8762999960434604, 0.6067703425314479, 0.5769181393038907] ***
*** starting iteration: 3; err: [Inf, 0.8762999960434604, 0.6067703425314479, 0.5769181393038907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8762999960434604, 0.6067703425314479, 0.5769181393038907, 0.5539716110007449] ***
*** finished computation of 3 references, err: [Inf, 0.8762999960434604, 0.6067703425314479, 0.5769181393038907, 0.5539716110007449] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 3]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.464899925674522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.464899925674522, 1.4271946635984234] ***
*** starting iteration: 2; err: [Inf, 5.464899925674522, 1.4271946635984234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.464899925674522, 1.4271946635984234, 0.8439775083910936] ***
*** starting iteration: 3; err: [Inf, 5.464899925674522, 1.4271946635984234, 0.8439775083910936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.464899925674522, 1.4271946635984234, 0.8439775083910936, 0.5895980857303159] ***
*** finished computation of 3 references, err: [Inf, 5.464899925674522, 1.4271946635984234, 0.8439775083910936, 0.5895980857303159] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 2, 0]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(1, 29), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 18]]
** centroid: 3, normalized-entropy: 0.9486131982385807, [(2, 31), (3, 18)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0853999950425033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0853999950425033, 0.5519884403092794] ***
*** starting iteration: 2; err: [Inf, 1.0853999950425033, 0.5519884403092794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0853999950425033, 0.5519884403092794, 0.5366484884534313] ***
*** starting iteration: 3; err: [Inf, 1.0853999950425033, 0.5519884403092794, 0.5366484884534313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0853999950425033, 0.5519884403092794, 0.5366484884534313, 0.5355370153462217] ***
*** finished computation of 3 references, err: [Inf, 1.0853999950425033, 0.5519884403092794, 0.5366484884534313, 0.5355370153462217] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4984999899849172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4984999899849172, 0.9801120508307245] ***
*** starting iteration: 2; err: [Inf, 1.4984999899849172, 0.9801120508307245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4984999899849172, 0.9801120508307245, 0.9797595055887544] ***
*** finished computation of 3 references, err: [Inf, 1.4984999899849172, 0.9801120508307245, 0.9797595055887544] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 3, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 12), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 32]]
** centroid: 2, normalized-entropy: 0.9982545693874832, [(2, 29), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6433000007055822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6433000007055822, 0.5305277270109646] ***
*** starting iteration: 2; err: [Inf, 0.6433000007055822, 0.5305277270109646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6433000007055822, 0.5305277270109646, 0.5267006283773291] ***
*** starting iteration: 3; err: [Inf, 0.6433000007055822, 0.5305277270109646, 0.5267006283773291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6433000007055822, 0.5305277270109646, 0.5267006283773291, 0.5216911581166229] ***
*** finished computation of 3 references, err: [Inf, 0.6433000007055822, 0.5305277270109646, 0.5267006283773291, 0.5216911581166229] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 31]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(2, 4), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9776672171002437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9776672171002437, 0.6613198713308112] ***
*** starting iteration: 2; err: [Inf, 0.9776672171002437, 0.6613198713308112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474] ***
*** starting iteration: 3; err: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474, 0.6551955608991769] ***
*** starting iteration: 4; err: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474, 0.6551955608991769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474, 0.6551955608991769, 0.654908510710906] ***
*** finished computation of 3 references, err: [Inf, 0.9776672171002437, 0.6613198713308112, 0.6567677134924474, 0.6551955608991769, 0.654908510710906] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 30]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 34), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5435440232756286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5435440232756286, 0.6853706511757558] ***
*** starting iteration: 2; err: [Inf, 1.5435440232756286, 0.6853706511757558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5435440232756286, 0.6853706511757558, 0.6694551243626309] ***
*** starting iteration: 3; err: [Inf, 1.5435440232756286, 0.6853706511757558, 0.6694551243626309] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5435440232756286, 0.6853706511757558, 0.6694551243626309, 0.6687156997738384] ***
*** finished computation of 3 references, err: [Inf, 1.5435440232756286, 0.6853706511757558, 0.6694551243626309, 0.6687156997738384] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.39570171951915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523] ***
*** starting iteration: 2; err: [Inf, 4.39570171951915, 2.136327740913523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322] ***
*** starting iteration: 3; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208] ***
*** starting iteration: 4; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515] ***
*** starting iteration: 5; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926] ***
*** starting iteration: 6; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213] ***
*** starting iteration: 7; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213, 0.35392122008653737] ***
*** starting iteration: 8; err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213, 0.35392122008653737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213, 0.35392122008653737, 0.3532344717602993] ***
*** finished computation of 3 references, err: [Inf, 4.39570171951915, 2.136327740913523, 1.3791530187556322, 0.6888289480317208, 0.4431991936864515, 0.39102667335615926, 0.36212014550857213, 0.35392122008653737, 0.3532344717602993] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5115709713103067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976] ***
*** starting iteration: 2; err: [Inf, 0.5115709713103067, 0.2755419175512976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058] ***
*** starting iteration: 3; err: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903] ***
*** starting iteration: 4; err: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703] ***
*** starting iteration: 5; err: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703, 0.18134555804514002] ***
*** starting iteration: 6; err: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703, 0.18134555804514002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703, 0.18134555804514002, 0.18124236442472802] ***
*** finished computation of 7 references, err: [Inf, 0.5115709713103067, 0.2755419175512976, 0.21585007234636058, 0.192289321559903, 0.18624637512457703, 0.18134555804514002, 0.18124236442472802] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 3]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6381572953700388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364] ***
*** starting iteration: 2; err: [Inf, 0.6381572953700388, 0.25644702796887364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959] ***
*** starting iteration: 3; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596] ***
*** starting iteration: 4; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015] ***
*** starting iteration: 5; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528] ***
*** starting iteration: 6; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998] ***
*** starting iteration: 7; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618] ***
*** starting iteration: 8; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318] ***
*** starting iteration: 9; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318, 0.1589796673868527] ***
*** starting iteration: 10; err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318, 0.1589796673868527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318, 0.1589796673868527, 0.15837027038748544] ***
*** finished computation of 7 references, err: [Inf, 0.6381572953700388, 0.25644702796887364, 0.2119515605458959, 0.20204728901750596, 0.1940728164584015, 0.18746729620728528, 0.1850545323453998, 0.17178317760582618, 0.16083804763693318, 0.1589796673868527, 0.15837027038748544] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 7]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4990146787030861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4990146787030861, 0.23890276215970302] ***
*** starting iteration: 2; err: [Inf, 0.4990146787030861, 0.23890276215970302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637] ***
*** starting iteration: 3; err: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471] ***
*** starting iteration: 4; err: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471, 0.19911828271532325] ***
*** starting iteration: 5; err: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471, 0.19911828271532325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471, 0.19911828271532325, 0.19889641342157735] ***
*** finished computation of 7 references, err: [Inf, 0.4990146787030861, 0.23890276215970302, 0.20581967695835637, 0.2004221185698471, 0.19911828271532325, 0.19889641342157735] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 13]]
** centroid: 3, normalized-entropy: 0.9744894033980525, [(2, 19), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34916085870145624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34916085870145624, 0.21203730064655932] ***
*** finished computation of 7 references, err: [Inf, 0.34916085870145624, 0.21203730064655932] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 5]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36620213071236873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36620213071236873, 0.23553907103199465] ***
*** finished computation of 7 references, err: [Inf, 0.36620213071236873, 0.23553907103199465] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 2]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 16), (3, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32057226677117273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32057226677117273, 0.2536103425217658] ***
*** finished computation of 7 references, err: [Inf, 0.32057226677117273, 0.2536103425217658] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 1, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 3), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 28, 6]]
** centroid: 6, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 7, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4160999932863723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4160999932863723, 0.5424651997422753] ***
*** finished computation of 3 references, err: [Inf, 1.4160999932863723, 0.5424651997422753] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1743000005782138] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1743000005782138, 0.546477286824176] ***
*** finished computation of 3 references, err: [Inf, 1.1743000005782138, 0.546477286824176] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.536800050480469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.536800050480469, 0.8875994771502164] ***
*** finished computation of 3 references, err: [Inf, 3.536800050480469, 0.8875994771502164] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 14]]
** centroid: 2, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 4, 0]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(1, 29), (2, 4)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4067999996604197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4067999996604197, 0.5477122569612813] ***
*** finished computation of 3 references, err: [Inf, 1.4067999996604197, 0.5477122569612813] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.38040000349818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.38040000349818, 0.613759997977747] ***
*** finished computation of 3 references, err: [Inf, 1.38040000349818, 0.613759997977747] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 16]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 32), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6612999979622272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6612999979622272, 0.5251020259708441] ***
*** finished computation of 3 references, err: [Inf, 1.6612999979622272, 0.5251020259708441] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8728779481943201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8728779481943201, 0.39456042523792767] ***
*** finished computation of 3 references, err: [Inf, 0.8728779481943201, 0.39456042523792767] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7544950445737022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7544950445737022, 0.3967175648973593] ***
*** finished computation of 3 references, err: [Inf, 0.7544950445737022, 0.3967175648973593] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1065441026809248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1065441026809248, 0.35202652160950715] ***
*** finished computation of 3 references, err: [Inf, 1.1065441026809248, 0.35202652160950715] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1301492219986973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1301492219986973, 0.3919212035592661] ***
*** finished computation of 3 references, err: [Inf, 1.1301492219986973, 0.3919212035592661] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8012112094459227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8012112094459227, 0.42574269246863894] ***
*** finished computation of 3 references, err: [Inf, 0.8012112094459227, 0.42574269246863894] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1042012490334654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1042012490334654, 0.35185075645104713] ***
*** finished computation of 3 references, err: [Inf, 1.1042012490334654, 0.35185075645104713] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1308000129633762] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013] ***
*** starting iteration: 2; err: [Inf, 1.1308000129633762, 0.5544054907127013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198] ***
*** starting iteration: 3; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697] ***
*** starting iteration: 4; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298] ***
*** starting iteration: 5; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438] ***
*** starting iteration: 6; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657] ***
*** starting iteration: 7; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657, 0.5399347117460647] ***
*** starting iteration: 8; err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657, 0.5399347117460647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657, 0.5399347117460647, 0.5399347117460647] ***
*** finished computation of 3 references, err: [Inf, 1.1308000129633762, 0.5544054907127013, 0.5470226342393198, 0.5458957931817697, 0.5445951661321298, 0.543262776807438, 0.5418775868199657, 0.5399347117460647, 0.5399347117460647] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 26]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 6), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 4]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(2, 29), (3, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0026000097886545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0026000097886545, 0.5758964718260647] ***
*** starting iteration: 2; err: [Inf, 1.0026000097886545, 0.5758964718260647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308] ***
*** starting iteration: 3; err: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137] ***
*** starting iteration: 4; err: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137, 0.5228714369680298] ***
*** starting iteration: 5; err: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137, 0.5228714369680298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137, 0.5228714369680298, 0.5228714369680298] ***
*** finished computation of 3 references, err: [Inf, 1.0026000097886545, 0.5758964718260647, 0.5372468140264308, 0.5255263761333137, 0.5228714369680298, 0.5228714369680298] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 7]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.495500005265018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.495500005265018, 0.505178657114277] ***
*** starting iteration: 2; err: [Inf, 1.495500005265018, 0.505178657114277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.495500005265018, 0.505178657114277, 0.5035848918684556] ***
*** starting iteration: 3; err: [Inf, 1.495500005265018, 0.505178657114277, 0.5035848918684556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.495500005265018, 0.505178657114277, 0.5035848918684556, 0.5035848918684556] ***
*** finished computation of 3 references, err: [Inf, 1.495500005265018, 0.505178657114277, 0.5035848918684556, 0.5035848918684556] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4048000063910597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4048000063910597, 0.541320337688875] ***
*** finished computation of 3 references, err: [Inf, 1.4048000063910597, 0.541320337688875] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0742000094628112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0742000094628112, 0.5758964718260647] ***
*** finished computation of 3 references, err: [Inf, 1.0742000094628112, 0.5758964718260647] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 12]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1829999985821613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1829999985821613, 0.5035848918684556] ***
*** finished computation of 3 references, err: [Inf, 1.1829999985821613, 0.5035848918684556] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.149439573048452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.149439573048452, 0.3919212035592661] ***
*** finished computation of 3 references, err: [Inf, 1.149439573048452, 0.3919212035592661] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8946956028244218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8946956028244218, 0.40491531550293675] ***
*** finished computation of 3 references, err: [Inf, 0.8946956028244218, 0.40491531550293675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 15]]
** centroid: 1, normalized-entropy: 0.9034535552068337, [(2, 32), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7924668359461361] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7924668359461361, 0.35529254181699765] ***
*** finished computation of 3 references, err: [Inf, 0.7924668359461361, 0.35529254181699765] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6408999996984096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6408999996984096, 0.25879478140797785] ***
*** finished computation of 7 references, err: [Inf, 0.6408999996984096, 0.25879478140797785] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 6]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41464602343697055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41464602343697055, 0.16773544430673476] ***
*** starting iteration: 2; err: [Inf, 0.41464602343697055, 0.16773544430673476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41464602343697055, 0.16773544430673476, 0.15944536340522747] ***
*** starting iteration: 3; err: [Inf, 0.41464602343697055, 0.16773544430673476, 0.15944536340522747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41464602343697055, 0.16773544430673476, 0.15944536340522747, 0.15931400884633112] ***
*** finished computation of 7 references, err: [Inf, 0.41464602343697055, 0.16773544430673476, 0.15944536340522747, 0.15931400884633112] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.7331392290902907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7331392290902907, 0.2680489695277732] ***
*** finished computation of 7 references, err: [Inf, 0.7331392290902907, 0.2680489695277732] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 30, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4111817536238831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4111817536238831, 0.24641170975611343] ***
*** finished computation of 7 references, err: [Inf, 0.4111817536238831, 0.24641170975611343] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 21, 7]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4142523016151681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4142523016151681, 0.2046393984837751] ***
*** finished computation of 7 references, err: [Inf, 0.4142523016151681, 0.2046393984837751] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 13]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5612999980861285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5612999980861285, 0.2894873896239311] ***
*** finished computation of 7 references, err: [Inf, 0.5612999980861285, 0.2894873896239311] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 10]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 6, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5314000001185504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000001185504, 0.2955214299292953] ***
*** finished computation of 7 references, err: [Inf, 0.5314000001185504, 0.2955214299292953] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 3]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 1), (3, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 6, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39020000329389704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39020000329389704, 0.27833834489877884] ***
*** finished computation of 7 references, err: [Inf, 0.39020000329389704, 0.27833834489877884] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4426571506358944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4426571506358944, 0.21069427690880357] ***
*** finished computation of 7 references, err: [Inf, 0.4426571506358944, 0.21069427690880357] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 7]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3379001155701829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3379001155701829, 0.1982969877123039] ***
*** finished computation of 7 references, err: [Inf, 0.3379001155701829, 0.1982969877123039] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 5]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46517379902640016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46517379902640016, 0.2108545656085839] ***
*** finished computation of 7 references, err: [Inf, 0.46517379902640016, 0.2108545656085839] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 27]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(2, 10), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.6550000066198008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6550000066198008, 0.2820426147930192] ***
*** starting iteration: 2; err: [Inf, 0.6550000066198008, 0.2820426147930192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6550000066198008, 0.2820426147930192, 0.266267656143964] ***
*** starting iteration: 3; err: [Inf, 0.6550000066198008, 0.2820426147930192, 0.266267656143964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6550000066198008, 0.2820426147930192, 0.266267656143964, 0.2605626230336081] ***
*** finished computation of 7 references, err: [Inf, 0.6550000066198008, 0.2820426147930192, 0.266267656143964, 0.2605626230336081] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6159000033934241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6159000033934241, 0.234796936684071] ***
*** starting iteration: 2; err: [Inf, 0.6159000033934241, 0.234796936684071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6159000033934241, 0.234796936684071, 0.22928137920468927] ***
*** starting iteration: 3; err: [Inf, 0.6159000033934241, 0.234796936684071, 0.22928137920468927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6159000033934241, 0.234796936684071, 0.22928137920468927, 0.22824834762208154] ***
*** finished computation of 7 references, err: [Inf, 0.6159000033934241, 0.234796936684071, 0.22928137920468927, 0.22824834762208154] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 8]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5046000043258532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5046000043258532, 0.24791550170549648] ***
*** starting iteration: 2; err: [Inf, 0.5046000043258532, 0.24791550170549648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5046000043258532, 0.24791550170549648, 0.24423109507492957] ***
*** starting iteration: 3; err: [Inf, 0.5046000043258532, 0.24791550170549648, 0.24423109507492957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5046000043258532, 0.24791550170549648, 0.24423109507492957, 0.24124931212008888] ***
*** finished computation of 7 references, err: [Inf, 0.5046000043258532, 0.24791550170549648, 0.24423109507492957, 0.24124931212008888] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39398776888856246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39398776888856246, 0.22460368980578507] ***
*** starting iteration: 2; err: [Inf, 0.39398776888856246, 0.22460368980578507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39398776888856246, 0.22460368980578507, 0.20499555335756597] ***
*** starting iteration: 3; err: [Inf, 0.39398776888856246, 0.22460368980578507, 0.20499555335756597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39398776888856246, 0.22460368980578507, 0.20499555335756597, 0.20292154906953488] ***
*** finished computation of 7 references, err: [Inf, 0.39398776888856246, 0.22460368980578507, 0.20499555335756597, 0.20292154906953488] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 13]]
** centroid: 6, normalized-entropy: 0.9949848281859699, [(2, 11), (3, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4159835220731746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4159835220731746, 0.1809716725045608] ***
*** starting iteration: 2; err: [Inf, 0.4159835220731746, 0.1809716725045608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4159835220731746, 0.1809716725045608, 0.17388474290597014] ***
*** starting iteration: 3; err: [Inf, 0.4159835220731746, 0.1809716725045608, 0.17388474290597014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4159835220731746, 0.1809716725045608, 0.17388474290597014, 0.17051171757667752] ***
*** finished computation of 7 references, err: [Inf, 0.4159835220731746, 0.1809716725045608, 0.17388474290597014, 0.17051171757667752] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 6, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46013907751036387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46013907751036387, 0.21152667386921492] ***
*** starting iteration: 2; err: [Inf, 0.46013907751036387, 0.21152667386921492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46013907751036387, 0.21152667386921492, 0.19954678839860499] ***
*** starting iteration: 3; err: [Inf, 0.46013907751036387, 0.21152667386921492, 0.19954678839860499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46013907751036387, 0.21152667386921492, 0.19954678839860499, 0.19267577114637152] ***
*** finished computation of 7 references, err: [Inf, 0.46013907751036387, 0.21152667386921492, 0.19954678839860499, 0.19267577114637152] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 22]]
** centroid: 1, normalized-entropy: 0.9640787648082293, [(2, 14), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.925806451612905, 3.3096774193548395, 1.4451612903225806, 0.2193548387096775], [7.62, 3.0199999999999996, 6.540000000000001, 2.12], [5.677777777777779, 2.8666666666666667, 4.2444444444444445, 1.3555555555555556], [5.400000000000001, 2.6, 4.8, 1.9000000000000001], [6.392857142857144, 2.8428571428571425, 4.671428571428572, 1.457142857142857], [6.083333333333333, 2.6999999999999997, 5.0, 1.7166666666666668], [6.473333333333333, 2.96, 5.553333333333332, 2.0933333333333337], [5.477777777777778, 2.4555555555555557, 3.5999999999999996, 1.0777777777777777], [5.45, 4.15, 1.4249999999999998, 0.275]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.845, 2.815, 4.275, 1.35], [5.85, 2.675, 4.949999999999999, 1.8], [4.8500000000000005, 3.25, 1.4636363636363638, 0.22272727272727283], [7.666666666666667, 3.133333333333333, 6.566666666666667, 2.0833333333333335], [5.385714285714286, 3.8214285714285707, 1.5357142857142858, 0.27857142857142864], [6.55, 3.0700000000000007, 5.51, 2.065], [5.1, 2.275, 3.4749999999999996, 1.025], [6.6571428571428575, 3.057142857142857, 4.614285714285715, 1.4428571428571428], [6.199999999999999, 2.75, 4.95, 1.85]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.58, 3.146666666666667, 5.6466666666666665, 2.24], [4.70625, 3.125, 1.4062499999999998, 0.21875000000000003], [5.557142857142858, 2.5785714285714287, 3.8714285714285714, 1.1285714285714286], [5.2846153846153845, 3.661538461538462, 1.5153846153846156, 0.3230769230769231], [7.471428571428571, 3.185714285714286, 6.228571428571428, 2.0571428571428574], [6.41875, 2.9625000000000004, 4.61875, 1.4562499999999998], [6.366666666666667, 2.9, 5.033333333333333, 1.7666666666666666], [5.95, 2.95, 4.949999999999999, 1.7000000000000002], [6.01111111111111, 2.7444444444444445, 5.01111111111111, 1.9333333333333331]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 1, 3, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[55, 21, 2, 1, 2, 2, 1, 39, 1, 36, 9, 2, 25, 17, 1, 2, 13, 1, 23, 1, 20, 27, 1, 13, 13, 16, 1, 24, 26, 39, 2, 28, 16, 3, 36, 44, 27, 27, 32, 6, 31, 55, 38, 54, 44, 33, 35, 46, 34, 32, 36, 24, 23, 23, 28, 15, 29, 29, 40, 42, 21, 43, 47, 23, 26, 54, 61, 40, 31, 39, 30, 30, 16, 34, 44, 44, 31, 36, 1, 58, 43, 28, 38, 39, 37, 57, 23, 35, 40, 35, 38, 39, 34, 22, 40, 38, 22, 35, 34, 34, 14, 34, 43, 36, 38, 13, 27, 36, 20, 15, 59, 34, 35, 35, 44, 50, 16, 47, 33, 30, 24, 52, 72, 33, 1, 10, 19, 33, 50, 32, 36, 45, 44, 51, 37, 56, 45, 18, 31, 35, 43, 42, 16, 27, 25, 54, 25, 44, 36, 28, 40, 44, 47, 57, 45, 26, 35, 25, 39, 38, 27, 29, 49, 40, 25, 25, 51, 18, 39, 39, 33, 48, 15, 48, 45, 58, 37, 39, 30, 29, 31, 56, 33, 24, 27, 21, 36, 27, 49, 50, 46, 61, 41, 18, 35, 43, 46, 24, 50, 27, 39, 41, 26, 27, 47, 47, 34, 52, 37, 26, 26, 38, 28, 38, 25, 39, 43, 28, 24, 39, 38, 61, 41, 47, 32, 41, 25, 19, 31, 28, 44, 31, 16, 21, 27, 39, 52, 42, 64, 84, 38, 45, 43, 34, 35, 41, 40, 41, 47, 39, 36, 53, 35, 26, 42, 62, 20, 39, 27, 29, 51, 26, 46, 32, 27, 4, 66, 29, 47, 60, 1, 37, 39, 47, 2, 46, 35, 32, 31, 19, 61, 40, 32, 61, 41, 25, 32, 47, 41, 49, 18, 24, 30, 51, 38, 23, 23, 13, 34, 27]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5829999999999999, speedup = 0.3541646688550388, eval_ratio = 0.041482)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4010416666666667,"recall":0.4010416666666667,"f1":null,"seconds":7.066503167152405e-5,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":340.4375,"distances_sum":1748.9923080928017}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5598958333333329,"recall":0.5598958333333329,"f1":null,"seconds":0.00010526366531848907,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":379.6484375,"distances_sum":1642.5260770070538}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6631944444444442,"recall":0.6631944444444442,"f1":0.6631944444444442,"seconds":0.00013558194041252136,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":418.984375,"distances_sum":1599.3260245592896}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.736979166666666,"recall":0.736979166666666,"f1":0.736979166666666,"seconds":0.0001600123941898346,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":459.4765625,"distances_sum":1575.947340158057}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7734374999999992,"recall":0.7734374999999992,"f1":0.7734374999999992,"seconds":0.00019142404198646545,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":498.6171875,"distances_sum":1566.8985779097181}
KCenters.DeloneInvIndex> reached performance {"precision":0.8177083333333326,"recall":0.8177083333333326,"f1":0.8177083333333326,"seconds":0.00021729804575443268,"exhaustive_search_seconds":0.00040263310074806213,"evaluations":536.1796875,"distances_sum":1557.4777899907938}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7920000000000001, speedup = 1.5658578479333811, eval_ratio = 0.053238)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
