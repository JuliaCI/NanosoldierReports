Julia Version 1.5.0-DEV.145
Commit 6af5f03d2a (2020-01-23 23:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.9
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed JSON ──────────────────────── v0.21.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed InvertedIndices ───────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataStructures ────────────── v0.17.9
 Installed DataFrames ────────────────── v0.20.0
 Installed Compat ────────────────────── v3.2.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_dSpY2B/Project.toml`
 [no changes]
  Updating `/tmp/jl_dSpY2B/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_dSpY2B/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 136.28999999999994
[ Info: 69.82000000000002
[ Info: 42.48000000000001
[ Info: 24.040000000000003
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 75.70000114415876
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.520677404741427
inertia(cdnet.distances) = 29.514047547541086
inertia(crand.distances) = 23.098985462886777
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7970425407925416,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.171875,"distances_sum":1806.9964165530769}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":6.65625,"distances_sum":663.4271292862445}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":6.4296875,"distances_sum":1050.2982855312948}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7970425407925416,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.171875,"distances_sum":1806.9964165530769}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8134131493506501,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.3203125,"distances_sum":1903.9028272376308}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.809770958208459,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.203125,"distances_sum":1889.3805496280193}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8134131493506501,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.3203125,"distances_sum":1903.9028272376308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9570741758241761,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9765625,"distances_sum":2786.3333018662925}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9325263278388286,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":9.0,"distances_sum":2565.8684218913977}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":10,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.850867882117883,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.6640625,"distances_sum":2045.8808910762198}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9570741758241761,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9765625,"distances_sum":2786.3333018662925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9570741758241761,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9765625,"distances_sum":2786.3333018662925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7659191502941511,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.4765625,"distances_sum":1605.8122377575678}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6376953125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6376953125,"f1":0.7659191502941511,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.4765625,"distances_sum":1605.8122377575678}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681324,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2562.4796924289058}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9308951465201472,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8203125,"distances_sum":2331.627873539451}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681324,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2562.4796924289058}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9453125,"distances_sum":2573.8329799271214}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9666723901098905,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2593.3320435622804}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9453125,"distances_sum":2573.8329799271214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9453125,"distances_sum":2573.8329799271214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7829982517482525,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7109375,"distances_sum":1598.5065659672534}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7100007631257639,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.1171875,"distances_sum":1352.984154953924}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7829982517482525,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7109375,"distances_sum":1598.5065659672534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952020375457876,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2558.4124630954248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8915267024642032,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7421875,"distances_sum":2077.313412319593}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9530563186813195,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8828125,"distances_sum":2525.5086471161594}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8610582126207135,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4375,"distances_sum":1931.2164553878827}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9331761988011995,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.875,"distances_sum":2368.037550884472}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8181558025308034,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0234375,"distances_sum":1731.6035204403079}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.952020375457876,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2558.4124630954248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9717834249084254,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2671.688929549595}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9653502747252753,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8984375,"distances_sum":2634.1844833056975}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9760989010989014,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2687.3806804965675}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963152472527473,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8984375,"distances_sum":2603.9183778135525}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760989010989014,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2687.3806804965675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760989010989014,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9609375,"distances_sum":2687.3806804965675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.3125,"distances_sum":522.8128843667827}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8212891275391284,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9453125,"distances_sum":1684.4527616296034}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8212891275391284,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9453125,"distances_sum":1684.4527616296034}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8212891275391284,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9453125,"distances_sum":1684.4527616296034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8212891275391284,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9453125,"distances_sum":1684.4527616296034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8891998626373635,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3203125,"distances_sum":2009.0871698815188}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8891998626373635,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3203125,"distances_sum":2009.0871698815188}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9027675449550456,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6484375,"distances_sum":2119.7290590447856}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9027675449550456,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6484375,"distances_sum":2119.7290590447856}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9700377747252751,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2616.1275198283506}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9700377747252751,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2616.1275198283506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9700377747252751,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2616.1275198283506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7133859196359201,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.203125,"distances_sum":1325.3185660004042}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.032386302947998e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":5.8203125,"distances_sum":499.14742718402476}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7238570457320463,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.4296875,"distances_sum":1401.7270813129257}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8653846153846163,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.375,"distances_sum":1936.835993719888}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8653846153846163,"seconds":5.014240741729736e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.375,"distances_sum":1936.835993719888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550652472527478,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.84375,"distances_sum":2555.8818757162217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9643601190476196,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2591.597888853404}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8897014443889453,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.4140625,"distances_sum":2111.284739102601}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8727538086913096,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.4140625,"distances_sum":1984.8749543742374}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8655511155511164,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.40625,"distances_sum":1949.4631921000757}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9643601190476196,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2591.597888853404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454216,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9296875,"distances_sum":2612.017502172572}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976470924908425,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9609375,"distances_sum":2687.7726601566455}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358977,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2630.9640758175847}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754120879120882,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9375,"distances_sum":2693.24966499403}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285718,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.96875,"distances_sum":2736.671467145263}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9668784340659344,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2642.43389259878}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285718,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.96875,"distances_sum":2736.671467145263}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9823660714285718,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.96875,"distances_sum":2736.671467145263}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7135349025974032,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.484375,"distances_sum":1434.4474331858403}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5732421875,"f1":null,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.4296875,"distances_sum":1425.918725353655}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.7135349025974032,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.484375,"distances_sum":1434.4474331858403}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9072287087912096,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7578125,"distances_sum":2258.8535912862203}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.926150412087913,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2382.5472889610114}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9293815559440566,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2380.5852287191474}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9293815559440566,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2380.5852287191474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705357142857146,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2686.316743997231}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9605139652014657,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2631.0030587309175}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705357142857146,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2686.316743997231}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9705357142857146,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.890625,"distances_sum":2686.316743997231}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7265271187146194,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.109375,"distances_sum":1312.7649530902688}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8646150724275733,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.359375,"distances_sum":1843.3813124270869}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8646150724275733,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.359375,"distances_sum":1843.3813124270869}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9394574175824182,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2254.5125484604496}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9060044122544131,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4765625,"distances_sum":2077.410753407368}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9394574175824182,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":2254.5125484604496}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620192307692311,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.875,"distances_sum":2434.7109802856176}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9672619047619051,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2463.251185794759}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584478021978026,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8828125,"distances_sum":2399.441885209539}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672619047619051,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2463.251185794759}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9672619047619051,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8984375,"distances_sum":2463.251185794759}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.341796875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.341796875,"f1":null,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":4.9765625,"distances_sum":693.4476237636756}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4658203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.973046875,"recall":0.4658203125,"f1":0.6196335782273285,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":5.7734375,"distances_sum":933.5914580176111}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4658203125,"state":{"ssize":4,"bsize":3},"perf":{"precision":0.973046875,"recall":0.4658203125,"f1":0.6196335782273285,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":5.7734375,"distances_sum":933.5914580176111}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4716796875, conf: {"ssize":8,"bsize":3}, perf: {"precision":0.9571614583333334,"recall":0.4716796875,"f1":0.6193507013819515,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.0546875,"distances_sum":956.9415491774844}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":7,"bsize":6}, perf: {"precision":0.9826729910714287,"recall":0.798828125,"f1":0.8745548071719951,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.125,"distances_sum":1768.3953359071813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9815290178571429,"recall":0.708984375,"f1":0.815606008574759,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.75,"distances_sum":1510.2734706873357}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":7,"bsize":6},"perf":{"precision":0.9826729910714287,"recall":0.798828125,"f1":0.8745548071719951,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.125,"distances_sum":1768.3953359071813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.9836309523809524,"recall":0.9404296875,"f1":0.9594350961538465,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8125,"distances_sum":2273.655934276825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9857700892857142,"recall":0.904296875,"f1":0.9401800022893774,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6875,"distances_sum":2134.4565094687973}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.987788318452381,"recall":0.9208984375,"f1":0.9492609603937731,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":2167.412546865418}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":8,"bsize":7}, perf: {"precision":0.9833984375,"recall":0.8330078125,"f1":0.8974008413461543,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.2421875,"distances_sum":1908.9200145081925}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.9836309523809524,"recall":0.9404296875,"f1":0.9594350961538465,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8125,"distances_sum":2273.655934276825}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.9836309523809524,"recall":0.9404296875,"f1":0.9594350961538465,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8125,"distances_sum":2273.655934276825}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3271484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3271484375,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.078125,"distances_sum":668.4852447830923}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3271484375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3271484375,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.078125,"distances_sum":668.4852447830923}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8391977813852822,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.9375,"distances_sum":1529.6075618591165}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6561827061827065,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.3984375,"distances_sum":1052.3695454982462}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8391977813852822,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.9375,"distances_sum":1529.6075618591165}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9303144771894778,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.390625,"distances_sum":1998.5554982085243}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8428149975024983,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.90625,"distances_sum":1600.561508377367}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8402373667998674,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.921875,"distances_sum":1569.3308238366444}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9029049075924082,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3125,"distances_sum":1828.5982387332344}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9303144771894778,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.390625,"distances_sum":1998.5554982085243}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9303144771894778,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.390625,"distances_sum":1998.5554982085243}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1796875,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.3515625,"distances_sum":384.91351657677285}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1796875,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.3515625,"distances_sum":384.91351657677285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8431743603618611,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.875,"distances_sum":1470.645292828676}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8431743603618611,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.875,"distances_sum":1470.645292828676}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9474650349650354,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6796875,"distances_sum":2016.0300277331385}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9366019397269403,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":2009.7390724444742}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9474650349650354,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6796875,"distances_sum":2016.0300277331385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454219,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8125,"distances_sum":2148.07476490854}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9798019688644691,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2186.7528813036024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9554143772893777,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.703125,"distances_sum":2066.8479046164653}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798019688644691,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2186.7528813036024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9798019688644691,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2186.7528813036024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.8828125,"distances_sum":799.6264075594818}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4541015625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.8828125,"distances_sum":799.6264075594818}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8628756660006667,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":1537.2334453219355}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8628756660006667,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":1537.2334453219355}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9193795787545794,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6796875,"distances_sum":1806.9481856185764}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9193795787545794,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6796875,"distances_sum":1806.9481856185764}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8642578125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9193795787545794,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6796875,"distances_sum":1806.9481856185764}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.859375,"distances_sum":411.03823045014326}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.21875,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.859375,"distances_sum":411.03823045014326}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":9,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.953125,"distances_sum":420.6400785150966}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8485041000666009,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0625,"distances_sum":1551.2960453638823}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8485041000666009,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0625,"distances_sum":1551.2960453638823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400240384615389,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":1988.7604381797014}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453640109890117,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2042.307777125601}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549908424908429,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.78125,"distances_sum":2094.594537063883}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9549908424908429,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.78125,"distances_sum":2094.594537063883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9549908424908429,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.78125,"distances_sum":2094.594537063883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8512575965700975,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.828125,"distances_sum":1635.1752567899464}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8512575965700975,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.828125,"distances_sum":1635.1752567899464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8947177822177831,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1171875,"distances_sum":1786.9881171691907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552712912087918,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2162.5088403344153}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9571829212454217,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2156.600302530684}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9571829212454217,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2156.600302530684}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454217,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2247.9721882304525}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9652186355311362,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2236.038435587111}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9618017399267402,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.71875,"distances_sum":2196.924245721867}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454217,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2247.9721882304525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454217,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2247.9721882304525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7176909895659901,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.4765625,"distances_sum":1129.1738337800728}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5810546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5810546875,"f1":0.7176909895659901,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.4765625,"distances_sum":1129.1738337800728}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9284913003663013,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4375,"distances_sum":1951.769862015184}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.875,"f1":0.9284913003663013,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4375,"distances_sum":1951.769862015184}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.875,"f1":0.9284913003663013,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4375,"distances_sum":1951.769862015184}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.875,"f1":0.9284913003663013,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.4375,"distances_sum":1951.769862015184}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8686110764235772,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1015625,"distances_sum":1720.1445576916647}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7107814060939067,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9609375,"distances_sum":1187.934126839355}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5,"distances_sum":754.2292868502245}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8686110764235772,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1015625,"distances_sum":1720.1445576916647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8686110764235772,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1015625,"distances_sum":1720.1445576916647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.783203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8686110764235772,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1015625,"distances_sum":1720.1445576916647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.6640625,"distances_sum":399.1926824906376}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.703125,"distances_sum":392.87112356011096}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1943359375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.6640625,"distances_sum":399.1926824906376}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7167483558108563,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.65625,"distances_sum":1170.920040173123}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.3515625,"distances_sum":778.8038283797923}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8804237429237436,"seconds":6.863847374916077e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.46875,"distances_sum":1761.541322448007}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.7226433288933297,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.5703125,"distances_sum":1196.1699276021825}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7998046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7998046875,"f1":0.8804237429237436,"seconds":6.863847374916077e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.46875,"distances_sum":1761.541322448007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9352564102564109,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.5625,"distances_sum":2088.0891868311305}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9380156302031306,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.71875,"distances_sum":2073.962501620464}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9174252830502838,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4609375,"distances_sum":1923.318392996497}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9180579836829845,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4609375,"distances_sum":1980.0180373252947}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9380156302031306,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.71875,"distances_sum":2073.962501620464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9380156302031306,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.71875,"distances_sum":2073.962501620464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7945953352203358,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.15625,"distances_sum":1569.2708372333536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.3046875,"distances_sum":556.3192451947335}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6804667554667561,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4921875,"distances_sum":1137.7072293120427}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7945953352203358,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.15625,"distances_sum":1569.2708372333536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9357944139194145,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.546875,"distances_sum":2365.3721611582296}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8841231684981694,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.921875,"distances_sum":2047.053162078121}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8652019855144866,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.609375,"distances_sum":1875.2257025741783}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8635905760905769,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.7109375,"distances_sum":1851.6596517535322}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9357944139194145,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.546875,"distances_sum":2365.3721611582296}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758012820512825,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2608.807807683944}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704613095238099,"seconds":6.590038537979126e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2577.6767403684685}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433836996337,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.640625,"distances_sum":2407.7503152215118}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.937342865467866,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":2377.8766260052466}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9539491758241767,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7265625,"distances_sum":2489.302405294464}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9508814102564108,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2467.426015139036}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758012820512825,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2608.807807683944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758012820512825,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2608.807807683944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.6640625,"distances_sum":869.9937550020597}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3984375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3984375,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.6640625,"distances_sum":869.9937550020597}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.671875,"distances_sum":889.2072873528988}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6954177766677773,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.609375,"distances_sum":1194.6646512893255}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5498046875,"f1":0.6954177766677773,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.609375,"distances_sum":1194.6646512893255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8355169136419144,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.5625,"distances_sum":1736.5579166392129}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9419929029304036,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7578125,"distances_sum":2419.660354826719}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.84073998917749,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.6015625,"distances_sum":1744.241860525611}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7962939837939846,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.0625,"distances_sum":1545.370163177931}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9419929029304036,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7578125,"distances_sum":2419.660354826719}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9419929029304036,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7578125,"distances_sum":2419.660354826719}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7106787309912316,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.2421875,"distances_sum":1240.010123613624}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7106787309912316,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.2421875,"distances_sum":1240.010123613624}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8932551823176831,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.53125,"distances_sum":2090.4242903587538}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8995884324009332,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5546875,"distances_sum":2080.9714452077114}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.8995884324009332,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5546875,"distances_sum":2080.9714452077114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666323260073265,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":2598.5215154588604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9351476648351654,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2359.4096432868387}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545615842490848,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2488.895974733023}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666323260073265,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":2598.5215154588604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9666323260073265,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":2598.5215154588604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5693359375,"f1":null,"seconds":4.371628165245056e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.0703125,"distances_sum":1326.1430671371552}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7017439158064164,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.0078125,"distances_sum":1218.9410614902747}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.793324904262405,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3671875,"distances_sum":1563.2340236926802}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.793324904262405,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3671875,"distances_sum":1563.2340236926802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9226648351648361,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.703125,"distances_sum":2346.222501020665}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9320944680319686,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6796875,"distances_sum":2425.55425938693}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8021861818736828,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.2890625,"distances_sum":1575.1870302190218}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.886547827172828,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.640625,"distances_sum":2032.5810097434874}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9320944680319686,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6796875,"distances_sum":2425.55425938693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9695169413919417,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9140625,"distances_sum":2654.520850667977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9789835164835167,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.921875,"distances_sum":2730.151310585755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.96151868964369,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.84375,"distances_sum":2616.1863770993696}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565934065934069,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8515625,"distances_sum":2591.1946053102492}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9347756410256415,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7734375,"distances_sum":2392.1976646915077}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9789835164835167,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.921875,"distances_sum":2730.151310585755}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9789835164835167,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.921875,"distances_sum":2730.151310585755}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":2.382323145866394e-6,"evaluations":5.625,"distances_sum":568.582583881257}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":2.382323145866394e-6,"evaluations":5.625,"distances_sum":568.582583881257}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.801441267066268,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.4375,"distances_sum":1577.7744254820968}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.40625,"distances_sum":936.5039696840323}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5341796875,"f1":null,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.265625,"distances_sum":1199.458978232473}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.801441267066268,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.4375,"distances_sum":1577.7744254820968}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8673852189477199,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.640625,"distances_sum":1903.8802694279605}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9138679029304034,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5546875,"distances_sum":2336.0030246616857}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.818253621378622,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.6328125,"distances_sum":1710.479993231985}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9138679029304034,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5546875,"distances_sum":2336.0030246616857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9180574633699641,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6171875,"distances_sum":2337.0707012463126}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9455445596070602,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2519.4346316750625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559409340659344,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2591.2941291208986}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453754578754584,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2529.0065159563032}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559409340659344,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2591.2941291208986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559409340659344,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2591.2941291208986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8151707667332676,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.3984375,"distances_sum":1651.848152544537}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7095026501276507,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.3515625,"distances_sum":1314.24748680488}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8151707667332676,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.3984375,"distances_sum":1651.848152544537}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8707353410478418,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.6796875,"distances_sum":2013.7306619553658}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8847501456876464,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.2265625,"distances_sum":2143.3727157574103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8981945138195147,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.421875,"distances_sum":2182.906903327641}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.898509303196804,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.375,"distances_sum":2227.757606076936}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.898509303196804,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.375,"distances_sum":2227.757606076936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":7.677823305130005e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2752.4409718296147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519402472527476,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.765625,"distances_sum":2656.4164217172765}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9193395146520155,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.6015625,"distances_sum":2389.764656028294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9215289918414926,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.6328125,"distances_sum":2376.867698692018}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499885531135538,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.71875,"distances_sum":2654.4169692922655}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487980769230775,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.7578125,"distances_sum":2621.8028195715656}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":7.677823305130005e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2752.4409718296147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683264652014656,"seconds":7.677823305130005e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2752.4409718296147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.1328125,"distances_sum":645.9470479211184}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.455078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.455078125,"f1":null,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.234375,"distances_sum":1069.78521143153}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":5.8671875,"distances_sum":552.9459461335612}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.455078125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.455078125,"f1":null,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.234375,"distances_sum":1069.78521143153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8983604936729945,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.3046875,"distances_sum":2268.4208362579357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8630582958707966,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.71875,"distances_sum":1994.2674659897186}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8007617382617391,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.2421875,"distances_sum":1654.1352475577878}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6933065198690206,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.9765625,"distances_sum":1287.198161346358}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8983604936729945,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.3046875,"distances_sum":2268.4208362579357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517914377289382,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.7734375,"distances_sum":2681.160164999533}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.936395375457876,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.6171875,"distances_sum":2572.2661474501338}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9289892399267404,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.5390625,"distances_sum":2499.27301452255}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646062271062275,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8203125,"distances_sum":2805.2779393637798}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952873168498169,"seconds":6.692484021186829e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8046875,"distances_sum":2690.395580601795}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485405219780225,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.7578125,"distances_sum":2629.448305007843}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646062271062275,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8203125,"distances_sum":2805.2779393637798}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646062271062275,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8203125,"distances_sum":2805.2779393637798}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8004944708069718,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.375,"distances_sum":1687.9802580164605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.3359375,"distances_sum":914.7008746736904}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8004944708069718,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.375,"distances_sum":1687.9802580164605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8726736804861813,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6640625,"distances_sum":2061.6554765674887}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8975623334998343,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.4296875,"distances_sum":2256.0162068816635}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8975623334998343,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.4296875,"distances_sum":2256.0162068816635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9392430486180492,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2633.704714784649}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9434123168498175,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2697.0643614896876}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538469,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2861.010305790476}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547905219780224,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2773.6886102356902}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628376831501834,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.875,"distances_sum":2776.091148891165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9130666208791216,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.59375,"distances_sum":2390.9445489125687}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588198260073266,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8046875,"distances_sum":2790.194216534617}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9068056943056951,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.4921875,"distances_sum":2390.2127257714433}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9516597985347991,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.765625,"distances_sum":2722.6147709288534}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538469,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2861.010305790476}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538469,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2861.010305790476}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.28125,"distances_sum":955.3708665092213}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6732536560661565,"seconds":4.0512531995773315e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.078125,"distances_sum":1196.3887389608558}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8629557942057949,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.6484375,"distances_sum":1970.3794984325189}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8629557942057949,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.6484375,"distances_sum":1970.3794984325189}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9021348443223451,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.453125,"distances_sum":2275.449758773455}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8717202935952945,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.6484375,"distances_sum":2057.526760222053}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8944571053946063,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.40625,"distances_sum":2194.0702627067617}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9021348443223451,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.453125,"distances_sum":2275.449758773455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9441506410256414,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6875,"distances_sum":2654.5366740658774}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614640567765569,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2743.6520794136063}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614640567765569,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2743.6520794136063}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614640567765569,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2743.6520794136063}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1015625,"distances_sum":650.5189318611165}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8266067266067274,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.3828125,"distances_sum":1817.5281495069637}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8266067266067274,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.3828125,"distances_sum":1817.5281495069637}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8661614427239435,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.65625,"distances_sum":2009.778867073191}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8752912018537028,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.703125,"distances_sum":2117.1908098131244}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8752912018537028,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.703125,"distances_sum":2117.1908098131244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598958333333337,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2779.8035592542597}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8824123792873799,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.7421875,"distances_sum":2174.0014789003553}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8888023434898443,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.40625,"distances_sum":2193.880738302284}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9327838827838836,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":2517.803382653715}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536916208791212,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2735.8828664640805}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598958333333337,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2779.8035592542597}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598958333333337,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7890625,"distances_sum":2779.8035592542597}}, n: 9
inertia(cfft.distances) = 18.520677347139028
inertia(cdnet.distances) = 21.57911492673993
inertia(crand.distances) = 22.499402107696227
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9155555555555557
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8777777777777779
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.86
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8444444444444444
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 1, 3, 3, 3, 1, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 11, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 1, 2, 3, 2, 3]
acc = 0.96
*** starting iteration: 1; err: [Inf, 0.35093333675785865] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35093333675785865, 0.19069272842119386] ***
*** starting iteration: 2; err: [Inf, 0.35093333675785865, 0.19069272842119386] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275] ***
*** starting iteration: 3; err: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466] ***
*** starting iteration: 4; err: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466, 0.1601941699303141] ***
*** starting iteration: 5; err: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466, 0.1601941699303141] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466, 0.1601941699303141, 0.1597212068150173] ***
*** finished computation of 12 references, err: [Inf, 0.35093333675785865, 0.19069272842119386, 0.16969532544523275, 0.1625112670944466, 0.1601941699303141, 0.1597212068150173] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 10: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 11, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 12, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 14 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 2.6816999963859303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6816999963859303, 0.5809867320688697] ***
*** finished computation of 3 references, err: [Inf, 2.6816999963859303, 0.5809867320688697] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 1, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 5]]
** centroid: 2, normalized-entropy: 0.6373874992221911, [(2, 26), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37270165776731945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667] ***
*** starting iteration: 2; err: [Inf, 0.37270165776731945, 0.19894992025373667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663] ***
*** starting iteration: 3; err: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594] ***
*** starting iteration: 4; err: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098] ***
*** starting iteration: 5; err: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098, 0.1599449206801662] ***
*** starting iteration: 6; err: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098, 0.1599449206801662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098, 0.1599449206801662, 0.1599449206801662] ***
*** finished computation of 7 references, err: [Inf, 0.37270165776731945, 0.19894992025373667, 0.18585960087237663, 0.1733605553368594, 0.16207675785774098, 0.1599449206801662, 0.1599449206801662] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 5, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4134262203173594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4134262203173594, 0.21124633140926755] ***
*** starting iteration: 2; err: [Inf, 0.4134262203173594, 0.21124633140926755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944] ***
*** starting iteration: 3; err: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944, 0.18738433474255234] ***
*** starting iteration: 4; err: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944, 0.18738433474255234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944, 0.18738433474255234, 0.18701116709890175] ***
*** finished computation of 7 references, err: [Inf, 0.4134262203173594, 0.21124633140926755, 0.19036435253153944, 0.18738433474255234, 0.18701116709890175] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 10]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 9), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41241023659398124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41241023659398124, 0.20687943660688757] ***
*** starting iteration: 2; err: [Inf, 0.41241023659398124, 0.20687943660688757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41241023659398124, 0.20687943660688757, 0.19974813457473423] ***
*** starting iteration: 3; err: [Inf, 0.41241023659398124, 0.20687943660688757, 0.19974813457473423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41241023659398124, 0.20687943660688757, 0.19974813457473423, 0.18805677582523345] ***
*** finished computation of 7 references, err: [Inf, 0.41241023659398124, 0.20687943660688757, 0.19974813457473423, 0.18805677582523345] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 4]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 7]]
** centroid: 7, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38162005388497294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38162005388497294, 0.16510403705522955] ***
*** starting iteration: 2; err: [Inf, 0.38162005388497294, 0.16510403705522955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38162005388497294, 0.16510403705522955, 0.14690062946235521] ***
*** starting iteration: 3; err: [Inf, 0.38162005388497294, 0.16510403705522955, 0.14690062946235521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38162005388497294, 0.16510403705522955, 0.14690062946235521, 0.1452831229309629] ***
*** finished computation of 7 references, err: [Inf, 0.38162005388497294, 0.16510403705522955, 0.14690062946235521, 0.1452831229309629] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3907752469086036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3907752469086036, 0.1838522231325043] ***
*** starting iteration: 2; err: [Inf, 0.3907752469086036, 0.1838522231325043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3907752469086036, 0.1838522231325043, 0.1694977168623522] ***
*** starting iteration: 3; err: [Inf, 0.3907752469086036, 0.1838522231325043, 0.1694977168623522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3907752469086036, 0.1838522231325043, 0.1694977168623522, 0.16695140193420582] ***
*** finished computation of 7 references, err: [Inf, 0.3907752469086036, 0.1838522231325043, 0.1694977168623522, 0.16695140193420582] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8728000104683118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8728000104683118, 0.5653901093653255] ***
*** starting iteration: 2; err: [Inf, 0.8728000104683118, 0.5653901093653255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8728000104683118, 0.5653901093653255, 0.5072827778132047] ***
*** starting iteration: 3; err: [Inf, 0.8728000104683118, 0.5653901093653255, 0.5072827778132047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8728000104683118, 0.5653901093653255, 0.5072827778132047, 0.5006009890793505] ***
*** finished computation of 3 references, err: [Inf, 0.8728000104683118, 0.5653901093653255, 0.5072827778132047, 0.5006009890793505] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 13]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.69360000195076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.69360000195076, 0.557289667147246] ***
*** starting iteration: 2; err: [Inf, 1.69360000195076, 0.557289667147246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.69360000195076, 0.557289667147246, 0.5376336613784563] ***
*** starting iteration: 3; err: [Inf, 1.69360000195076, 0.557289667147246, 0.5376336613784563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.69360000195076, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** finished computation of 3 references, err: [Inf, 1.69360000195076, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 6]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 35), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2702999922298464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2702999922298464, 0.590352898032419] ***
*** starting iteration: 2; err: [Inf, 1.2702999922298464, 0.590352898032419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2702999922298464, 0.590352898032419, 0.5307422633030547] ***
*** starting iteration: 3; err: [Inf, 1.2702999922298464, 0.590352898032419, 0.5307422633030547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2702999922298464, 0.590352898032419, 0.5307422633030547, 0.5261133584674185] ***
*** finished computation of 3 references, err: [Inf, 1.2702999922298464, 0.590352898032419, 0.5307422633030547, 0.5261133584674185] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4206999964515865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4206999964515865, 0.553861408363134] ***
*** finished computation of 3 references, err: [Inf, 1.4206999964515865, 0.553861408363134] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 28]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 5]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 35), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.0593000213257473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0593000213257473, 0.7527506892563715] ***
*** finished computation of 3 references, err: [Inf, 3.0593000213257473, 0.7527506892563715] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 33]]
** centroid: 1, normalized-entropy: 0.9113423759758414, [(2, 16), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4137000020936178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4137000020936178, 0.26868803774218486] ***
*** finished computation of 7 references, err: [Inf, 0.4137000020936178, 0.26868803774218486] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 15]]
** centroid: 5, normalized-entropy: 0.9828586897127057, [(2, 11), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.629100003065944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.629100003065944, 0.33133210179223144] ***
*** finished computation of 7 references, err: [Inf, 0.629100003065944, 0.33133210179223144] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 20]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 12), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.570900003714154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.570900003714154, 0.32038191796273024] ***
*** finished computation of 7 references, err: [Inf, 0.570900003714154, 0.32038191796273024] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 11]]
** centroid: 1, normalized-entropy: 0.9575534837147484, [(2, 18), (3, 11)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3541201685873469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3541201685873469, 0.2134462576131902] ***
*** finished computation of 7 references, err: [Inf, 0.3541201685873469, 0.2134462576131902] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 13]]
** centroid: 4, normalized-entropy: 0.9922666387194963, [(2, 16), (3, 13)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45214922549164255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45214922549164255, 0.2447366216684578] ***
*** finished computation of 7 references, err: [Inf, 0.45214922549164255, 0.2447366216684578] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 25, 5]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 25), (3, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30658483247784984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30658483247784984, 0.23628224835585476] ***
*** finished computation of 7 references, err: [Inf, 0.30658483247784984, 0.23628224835585476] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 12]]
** centroid: 3, normalized-entropy: 0.9986359641585719, [(2, 11), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.519599996687536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519599996687536, 0.5006009890793505] ***
*** starting iteration: 2; err: [Inf, 1.519599996687536, 0.5006009890793505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519599996687536, 0.5006009890793505, 0.49953760620449117] ***
*** starting iteration: 3; err: [Inf, 1.519599996687536, 0.5006009890793505, 0.49953760620449117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.519599996687536, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** finished computation of 3 references, err: [Inf, 1.519599996687536, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7818999846541141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7818999846541141, 0.711648168331251] ***
*** starting iteration: 2; err: [Inf, 1.7818999846541141, 0.711648168331251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7818999846541141, 0.711648168331251, 0.5358236140764121] ***
*** starting iteration: 3; err: [Inf, 1.7818999846541141, 0.711648168331251, 0.5358236140764121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7818999846541141, 0.711648168331251, 0.5358236140764121, 0.5325733895717716] ***
*** finished computation of 3 references, err: [Inf, 1.7818999846541141, 0.711648168331251, 0.5358236140764121, 0.5325733895717716] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 4]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 34), (3, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4207000044903766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4207000044903766, 0.6107506863207586] ***
*** starting iteration: 2; err: [Inf, 1.4207000044903766, 0.6107506863207586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4207000044903766, 0.6107506863207586, 0.5394061963963995] ***
*** starting iteration: 3; err: [Inf, 1.4207000044903766, 0.6107506863207586, 0.5394061963963995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4207000044903766, 0.6107506863207586, 0.5394061963963995, 0.5371350803767089] ***
*** finished computation of 3 references, err: [Inf, 1.4207000044903766, 0.6107506863207586, 0.5394061963963995, 0.5371350803767089] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 33]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 8), (3, 33)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 25, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8139999979400276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8139999979400276, 0.5325254808323966] ***
*** starting iteration: 2; err: [Inf, 0.8139999979400276, 0.5325254808323966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8139999979400276, 0.5325254808323966, 0.5006009890793505] ***
*** starting iteration: 3; err: [Inf, 0.8139999979400276, 0.5325254808323966, 0.5006009890793505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8139999979400276, 0.5325254808323966, 0.5006009890793505, 0.49953760620449117] ***
*** finished computation of 3 references, err: [Inf, 0.8139999979400276, 0.5325254808323966, 0.5006009890793505, 0.49953760620449117] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6439000085801274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6439000085801274, 1.051543804222971] ***
*** starting iteration: 2; err: [Inf, 1.6439000085801274, 1.051543804222971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6439000085801274, 1.051543804222971, 1.0417549521425056] ***
*** starting iteration: 3; err: [Inf, 1.6439000085801274, 1.051543804222971, 1.0417549521425056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6439000085801274, 1.051543804222971, 1.0417549521425056, 1.032963985980461] ***
*** finished computation of 3 references, err: [Inf, 1.6439000085801274, 1.051543804222971, 1.0417549521425056, 1.032963985980461] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 3, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 33]]
** centroid: 3, normalized-entropy: 0.9998393017810486, [(2, 34), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2916000124064317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2916000124064317, 0.561262261739875] ***
*** starting iteration: 2; err: [Inf, 1.2916000124064317, 0.561262261739875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2916000124064317, 0.561262261739875, 0.5394061963963995] ***
*** starting iteration: 3; err: [Inf, 1.2916000124064317, 0.561262261739875, 0.5394061963963995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2916000124064317, 0.561262261739875, 0.5394061963963995, 0.5371350803767089] ***
*** finished computation of 3 references, err: [Inf, 1.2916000124064317, 0.561262261739875, 0.5394061963963995, 0.5371350803767089] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 33]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 8), (3, 33)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.800599996945967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917] ***
*** starting iteration: 2; err: [Inf, 0.800599996945967, 0.3961095716072917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173] ***
*** starting iteration: 3; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635] ***
*** starting iteration: 4; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454] ***
*** starting iteration: 5; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092] ***
*** starting iteration: 6; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314] ***
*** starting iteration: 7; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923] ***
*** starting iteration: 8; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607] ***
*** starting iteration: 9; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607, 0.2858178607738626] ***
*** starting iteration: 10; err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607, 0.2858178607738626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607, 0.2858178607738626, 0.2817984371991121] ***
*** finished computation of 7 references, err: [Inf, 0.800599996945967, 0.3961095716072917, 0.3181010293976173, 0.30818685183351635, 0.3016820123759454, 0.2977511760157092, 0.29444958274634314, 0.2925190314105923, 0.29148794053941607, 0.2858178607738626, 0.2817984371991121] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7194000050714844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7194000050714844, 0.3310869270951046] ***
*** starting iteration: 2; err: [Inf, 0.7194000050714844, 0.3310869270951046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156] ***
*** starting iteration: 3; err: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657] ***
*** starting iteration: 4; err: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657, 0.2541595439159697] ***
*** starting iteration: 5; err: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657, 0.2541595439159697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657, 0.2541595439159697, 0.2541595439159697] ***
*** finished computation of 7 references, err: [Inf, 0.7194000050714844, 0.3310869270951046, 0.26327997634548156, 0.2563509524695657, 0.2541595439159697, 0.2541595439159697] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5639000039054473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5639000039054473, 0.314176824735798] ***
*** starting iteration: 2; err: [Inf, 0.5639000039054473, 0.314176824735798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5639000039054473, 0.314176824735798, 0.3075010131214103] ***
*** starting iteration: 3; err: [Inf, 0.5639000039054473, 0.314176824735798, 0.3075010131214103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5639000039054473, 0.314176824735798, 0.3075010131214103, 0.3075010131214103] ***
*** finished computation of 7 references, err: [Inf, 0.5639000039054473, 0.314176824735798, 0.3075010131214103, 0.3075010131214103] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 26]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(2, 9), (3, 26)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4347999942106913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4347999942106913, 0.5039998714281364] ***
*** finished computation of 3 references, err: [Inf, 1.4347999942106913, 0.5039998714281364] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 14]]
** centroid: 3, normalized-entropy: 0.9023932827949788, [(2, 30), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.656199999228989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.656199999228989, 0.557289667147246] ***
*** finished computation of 3 references, err: [Inf, 1.656199999228989, 0.557289667147246] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 7]]
** centroid: 3, normalized-entropy: 0.6321302781219708, [(2, 37), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1528999926620593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1528999926620593, 0.5556985053927241] ***
*** finished computation of 3 references, err: [Inf, 1.1528999926620593, 0.5556985053927241] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 33]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6621999977825777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6621999977825777, 0.5039998714281364] ***
*** starting iteration: 2; err: [Inf, 1.6621999977825777, 0.5039998714281364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505] ***
*** starting iteration: 3; err: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117] ***
*** starting iteration: 4; err: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** finished computation of 3 references, err: [Inf, 1.6621999977825777, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7243999991838026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7243999991838026, 0.557289667147246] ***
*** starting iteration: 2; err: [Inf, 1.7243999991838026, 0.557289667147246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563] ***
*** starting iteration: 3; err: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** starting iteration: 4; err: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563, 0.5326790636210249, 0.5326790636210249] ***
*** finished computation of 3 references, err: [Inf, 1.7243999991838026, 0.557289667147246, 0.5376336613784563, 0.5326790636210249, 0.5326790636210249] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 6]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 35), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4122999948206398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4122999948206398, 0.5307422633030547] ***
*** starting iteration: 2; err: [Inf, 1.4122999948206398, 0.5307422633030547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4122999948206398, 0.5307422633030547, 0.5261133584674185] ***
*** starting iteration: 3; err: [Inf, 1.4122999948206398, 0.5307422633030547, 0.5261133584674185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4122999948206398, 0.5307422633030547, 0.5261133584674185, 0.5261133584674185] ***
*** finished computation of 3 references, err: [Inf, 1.4122999948206398, 0.5307422633030547, 0.5261133584674185, 0.5261133584674185] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5324860884489917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116] ***
*** starting iteration: 2; err: [Inf, 0.5324860884489917, 0.19924207004733116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144] ***
*** starting iteration: 3; err: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531] ***
*** starting iteration: 4; err: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978] ***
*** starting iteration: 5; err: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978, 0.16155059351102666] ***
*** starting iteration: 6; err: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978, 0.16155059351102666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978, 0.16155059351102666, 0.16155059351102666] ***
*** finished computation of 7 references, err: [Inf, 0.5324860884489917, 0.19924207004733116, 0.1918175840691144, 0.1793736159418531, 0.16749692528890978, 0.16155059351102666, 0.16155059351102666] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3827844623455073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955] ***
*** starting iteration: 2; err: [Inf, 0.3827844623455073, 0.15749873019575955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574] ***
*** starting iteration: 3; err: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872] ***
*** starting iteration: 4; err: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332] ***
*** starting iteration: 5; err: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332, 0.1444682942339901] ***
*** starting iteration: 6; err: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332, 0.1444682942339901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332, 0.1444682942339901, 0.1444682942339901] ***
*** finished computation of 7 references, err: [Inf, 0.3827844623455073, 0.15749873019575955, 0.15113633816379574, 0.14896567766015872, 0.14660889070907332, 0.1444682942339901, 0.1444682942339901] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4012443999709588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4012443999709588, 0.21208889356918256] ***
*** starting iteration: 2; err: [Inf, 0.4012443999709588, 0.21208889356918256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676] ***
*** starting iteration: 3; err: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296] ***
*** starting iteration: 4; err: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296, 0.1877226547640774] ***
*** starting iteration: 5; err: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296, 0.1877226547640774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296, 0.1877226547640774, 0.18720791460110256] ***
*** finished computation of 7 references, err: [Inf, 0.4012443999709588, 0.21208889356918256, 0.1969925663777676, 0.18992066986832296, 0.1877226547640774, 0.18720791460110256] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 10]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 9), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5825000008664908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5825000008664908, 0.24528330178638202] ***
*** starting iteration: 2; err: [Inf, 0.5825000008664908, 0.24528330178638202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5825000008664908, 0.24528330178638202, 0.23348945237584331] ***
*** starting iteration: 3; err: [Inf, 0.5825000008664908, 0.24528330178638202, 0.23348945237584331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5825000008664908, 0.24528330178638202, 0.23348945237584331, 0.22996803920880787] ***
*** finished computation of 7 references, err: [Inf, 0.5825000008664908, 0.24528330178638202, 0.23348945237584331, 0.22996803920880787] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5108000037636369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000037636369, 0.2482277318917658] ***
*** starting iteration: 2; err: [Inf, 0.5108000037636369, 0.2482277318917658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000037636369, 0.2482277318917658, 0.2420545471187262] ***
*** starting iteration: 3; err: [Inf, 0.5108000037636369, 0.2482277318917658, 0.2420545471187262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000037636369, 0.2482277318917658, 0.2420545471187262, 0.24054976938157824] ***
*** finished computation of 7 references, err: [Inf, 0.5108000037636369, 0.2482277318917658, 0.2420545471187262, 0.24054976938157824] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.597700005609253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.597700005609253, 0.245566219667351] ***
*** starting iteration: 2; err: [Inf, 0.597700005609253, 0.245566219667351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.597700005609253, 0.245566219667351, 0.23541382518469486] ***
*** starting iteration: 3; err: [Inf, 0.597700005609253, 0.245566219667351, 0.23541382518469486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.597700005609253, 0.245566219667351, 0.23541382518469486, 0.2308534103424876] ***
*** finished computation of 7 references, err: [Inf, 0.597700005609253, 0.245566219667351, 0.23541382518469486, 0.2308534103424876] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49019331425251317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49019331425251317, 0.17450735388815178] ***
*** finished computation of 7 references, err: [Inf, 0.49019331425251317, 0.17450735388815178] ***
*** center 1: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 5]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44767582515702314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44767582515702314, 0.15234512595525165] ***
*** finished computation of 7 references, err: [Inf, 0.44767582515702314, 0.15234512595525165] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4531150233485154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4531150233485154, 0.1830487623446614] ***
*** finished computation of 7 references, err: [Inf, 0.4531150233485154, 0.1830487623446614] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 9]]
** centroid: 1, normalized-entropy: 0.8691375806126381, [(2, 22), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5739000081388193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5739000081388193, 0.2583280053792511] ***
*** starting iteration: 2; err: [Inf, 0.5739000081388193, 0.2583280053792511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5739000081388193, 0.2583280053792511, 0.24746412627446682] ***
*** starting iteration: 3; err: [Inf, 0.5739000081388193, 0.2583280053792511, 0.24746412627446682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5739000081388193, 0.2583280053792511, 0.24746412627446682, 0.24505640285619698] ***
*** finished computation of 7 references, err: [Inf, 0.5739000081388193, 0.2583280053792511, 0.24746412627446682, 0.24505640285619698] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 12]]
** centroid: 1, normalized-entropy: 0.9784493292686188, [(2, 17), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5522000068099854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5522000068099854, 0.24863693716623803] ***
*** starting iteration: 2; err: [Inf, 0.5522000068099854, 0.24863693716623803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5522000068099854, 0.24863693716623803, 0.2365327825567099] ***
*** starting iteration: 3; err: [Inf, 0.5522000068099854, 0.24863693716623803, 0.2365327825567099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5522000068099854, 0.24863693716623803, 0.2365327825567099, 0.2337935259232215] ***
*** finished computation of 7 references, err: [Inf, 0.5522000068099854, 0.24863693716623803, 0.2365327825567099, 0.2337935259232215] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5817000025118516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5817000025118516, 0.2584143667346479] ***
*** starting iteration: 2; err: [Inf, 0.5817000025118516, 0.2584143667346479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5817000025118516, 0.2584143667346479, 0.24215942430178594] ***
*** starting iteration: 3; err: [Inf, 0.5817000025118516, 0.2584143667346479, 0.24215942430178594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5817000025118516, 0.2584143667346479, 0.24215942430178594, 0.23530198008937153] ***
*** finished computation of 7 references, err: [Inf, 0.5817000025118516, 0.2584143667346479, 0.24215942430178594, 0.23530198008937153] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 3, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45046639972820474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45046639972820474, 0.20504676140759684] ***
*** starting iteration: 2; err: [Inf, 0.45046639972820474, 0.20504676140759684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045] ***
*** starting iteration: 3; err: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298] ***
*** starting iteration: 4; err: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298, 0.18782115955113035] ***
*** starting iteration: 5; err: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298, 0.18782115955113035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298, 0.18782115955113035, 0.1873474988633664] ***
*** finished computation of 7 references, err: [Inf, 0.45046639972820474, 0.20504676140759684, 0.19838650319018045, 0.19351293620882298, 0.18782115955113035, 0.1873474988633664] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 6 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6727792927421038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6727792927421038, 0.21010834427395114] ***
*** starting iteration: 2; err: [Inf, 0.6727792927421038, 0.21010834427395114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535] ***
*** starting iteration: 3; err: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998] ***
*** starting iteration: 4; err: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998, 0.1845905072672786] ***
*** starting iteration: 5; err: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998, 0.1845905072672786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998, 0.1845905072672786, 0.1845905072672786] ***
*** finished computation of 7 references, err: [Inf, 0.6727792927421038, 0.21010834427395114, 0.18742535631506535, 0.1858753598454998, 0.1845905072672786, 0.1845905072672786] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.992644349602646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.992644349602646, 0.4601067719311993] ***
*** starting iteration: 2; err: [Inf, 2.992644349602646, 0.4601067719311993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381] ***
*** starting iteration: 3; err: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333] ***
*** starting iteration: 4; err: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333, 0.17188677626983545] ***
*** starting iteration: 5; err: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333, 0.17188677626983545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333, 0.17188677626983545, 0.17129221490162658] ***
*** finished computation of 7 references, err: [Inf, 2.992644349602646, 0.4601067719311993, 0.1841793510977381, 0.17308430169444333, 0.17188677626983545, 0.17129221490162658] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 5]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3495257801426979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3495257801426979, 0.21085053674148757] ***
*** starting iteration: 2; err: [Inf, 0.3495257801426979, 0.21085053674148757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785] ***
*** starting iteration: 3; err: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785, 0.1899122737593577] ***
*** starting iteration: 4; err: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785, 0.1899122737593577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785, 0.1899122737593577, 0.1898204668916033] ***
*** finished computation of 7 references, err: [Inf, 0.3495257801426979, 0.21085053674148757, 0.19136760236948785, 0.1899122737593577, 0.1898204668916033] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 26]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 8), (3, 26)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.436778247898563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.436778247898563, 0.20657558399992731] ***
*** starting iteration: 2; err: [Inf, 0.436778247898563, 0.20657558399992731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.436778247898563, 0.20657558399992731, 0.19947325230721777] ***
*** starting iteration: 3; err: [Inf, 0.436778247898563, 0.20657558399992731, 0.19947325230721777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.436778247898563, 0.20657558399992731, 0.19947325230721777, 0.18786124758255077] ***
*** finished computation of 7 references, err: [Inf, 0.436778247898563, 0.20657558399992731, 0.19947325230721777, 0.18786124758255077] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 5]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4196497387348785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4196497387348785, 0.15417345628715848] ***
*** starting iteration: 2; err: [Inf, 0.4196497387348785, 0.15417345628715848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4196497387348785, 0.15417345628715848, 0.1466855861149109] ***
*** starting iteration: 3; err: [Inf, 0.4196497387348785, 0.15417345628715848, 0.1466855861149109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4196497387348785, 0.15417345628715848, 0.1466855861149109, 0.1444682942339901] ***
*** finished computation of 7 references, err: [Inf, 0.4196497387348785, 0.15417345628715848, 0.1466855861149109, 0.1444682942339901] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3800284714645181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800284714645181, 0.1838522231325043] ***
*** starting iteration: 2; err: [Inf, 0.3800284714645181, 0.1838522231325043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800284714645181, 0.1838522231325043, 0.1694977168623522] ***
*** starting iteration: 3; err: [Inf, 0.3800284714645181, 0.1838522231325043, 0.1694977168623522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3800284714645181, 0.1838522231325043, 0.1694977168623522, 0.16695140193420582] ***
*** finished computation of 7 references, err: [Inf, 0.3800284714645181, 0.1838522231325043, 0.1694977168623522, 0.16695140193420582] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.8329000088971157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8329000088971157, 0.6243528004058984] ***
*** finished computation of 3 references, err: [Inf, 0.8329000088971157, 0.6243528004058984] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 33]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 12), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0739000024799938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0739000024799938, 0.6437522952721869] ***
*** finished computation of 3 references, err: [Inf, 1.0739000024799938, 0.6437522952721869] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 14]]
** centroid: 3, normalized-entropy: 0.8554508105601307, [(2, 36), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6887999847354438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6887999847354438, 0.9501802823122635] ***
*** finished computation of 3 references, err: [Inf, 1.6887999847354438, 0.9501802823122635] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 33]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 31), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 1, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3935513112691003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3935513112691003, 0.20907952024664017] ***
*** starting iteration: 2; err: [Inf, 0.3935513112691003, 0.20907952024664017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3935513112691003, 0.20907952024664017, 0.19371466198411494] ***
*** starting iteration: 3; err: [Inf, 0.3935513112691003, 0.20907952024664017, 0.19371466198411494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3935513112691003, 0.20907952024664017, 0.19371466198411494, 0.18513301694645523] ***
*** finished computation of 7 references, err: [Inf, 0.3935513112691003, 0.20907952024664017, 0.19371466198411494, 0.18513301694645523] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2752655236900794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2752655236900794, 0.3309200651104662] ***
*** starting iteration: 2; err: [Inf, 3.2752655236900794, 0.3309200651104662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2752655236900794, 0.3309200651104662, 0.18111262963451144] ***
*** starting iteration: 3; err: [Inf, 3.2752655236900794, 0.3309200651104662, 0.18111262963451144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2752655236900794, 0.3309200651104662, 0.18111262963451144, 0.17371547657392525] ***
*** finished computation of 7 references, err: [Inf, 3.2752655236900794, 0.3309200651104662, 0.18111262963451144, 0.17371547657392525] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 2]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5449084174305692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5449084174305692, 0.30022148958038025] ***
*** starting iteration: 2; err: [Inf, 0.5449084174305692, 0.30022148958038025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5449084174305692, 0.30022148958038025, 0.2682001197367563] ***
*** starting iteration: 3; err: [Inf, 0.5449084174305692, 0.30022148958038025, 0.2682001197367563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5449084174305692, 0.30022148958038025, 0.2682001197367563, 0.2320064165474032] ***
*** finished computation of 7 references, err: [Inf, 0.5449084174305692, 0.30022148958038025, 0.2682001197367563, 0.2320064165474032] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.603699984599854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.603699984599854, 0.5802366436399403] ***
*** starting iteration: 2; err: [Inf, 4.603699984599854, 0.5802366436399403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.603699984599854, 0.5802366436399403, 0.3124852302536272] ***
*** starting iteration: 3; err: [Inf, 4.603699984599854, 0.5802366436399403, 0.3124852302536272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.603699984599854, 0.5802366436399403, 0.3124852302536272, 0.2978312719119935] ***
*** finished computation of 7 references, err: [Inf, 4.603699984599854, 0.5802366436399403, 0.3124852302536272, 0.2978312719119935] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48559999991936004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48559999991936004, 0.3410377394913054] ***
*** starting iteration: 2; err: [Inf, 0.48559999991936004, 0.3410377394913054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48559999991936004, 0.3410377394913054, 0.2963665321975803] ***
*** starting iteration: 3; err: [Inf, 0.48559999991936004, 0.3410377394913054, 0.2963665321975803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48559999991936004, 0.3410377394913054, 0.2963665321975803, 0.2898112836786276] ***
*** finished computation of 7 references, err: [Inf, 0.48559999991936004, 0.3410377394913054, 0.2963665321975803, 0.2898112836786276] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9994000014001506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9994000014001506, 0.47539776469389056] ***
*** starting iteration: 2; err: [Inf, 0.9994000014001506, 0.47539776469389056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9994000014001506, 0.47539776469389056, 0.4587751029479554] ***
*** starting iteration: 3; err: [Inf, 0.9994000014001506, 0.47539776469389056, 0.4587751029479554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9994000014001506, 0.47539776469389056, 0.4587751029479554, 0.45119247705294085] ***
*** finished computation of 7 references, err: [Inf, 0.9994000014001506, 0.47539776469389056, 0.4587751029479554, 0.45119247705294085] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 4.457909383634175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789] ***
*** starting iteration: 2; err: [Inf, 4.457909383634175, 0.8001985088641789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488] ***
*** starting iteration: 3; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229] ***
*** starting iteration: 4; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286] ***
*** starting iteration: 5; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376] ***
*** starting iteration: 6; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432] ***
*** starting iteration: 7; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432, 0.17948415370455303] ***
*** starting iteration: 8; err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432, 0.17948415370455303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432, 0.17948415370455303, 0.17886316344311134] ***
*** finished computation of 7 references, err: [Inf, 4.457909383634175, 0.8001985088641789, 0.23436890018654488, 0.19512966364635229, 0.19067823032990286, 0.18675667857339376, 0.18300017207765432, 0.17948415370455303, 0.17886316344311134] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 5]]
** centroid: 6, normalized-entropy: 0.961236604722876, [(2, 8), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42246030176894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756] ***
*** starting iteration: 2; err: [Inf, 0.42246030176894, 0.20212474218011756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367] ***
*** starting iteration: 3; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367] ***
*** starting iteration: 4; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936] ***
*** starting iteration: 5; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393] ***
*** starting iteration: 6; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866] ***
*** starting iteration: 7; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866, 0.14826288980355218] ***
*** starting iteration: 8; err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866, 0.14826288980355218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866, 0.14826288980355218, 0.14788807992725603] ***
*** finished computation of 7 references, err: [Inf, 0.42246030176894, 0.20212474218011756, 0.18662545238308367, 0.16962683106046367, 0.16401790926608936, 0.15683552991261393, 0.15193459061421866, 0.14826288980355218, 0.14788807992725603] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.894884782191438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606] ***
*** starting iteration: 2; err: [Inf, 0.894884782191438, 0.39874951399488606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656] ***
*** starting iteration: 3; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877] ***
*** starting iteration: 4; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893] ***
*** starting iteration: 5; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385] ***
*** starting iteration: 6; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602] ***
*** starting iteration: 7; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602, 0.21459928872911102] ***
*** starting iteration: 8; err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602, 0.21459928872911102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602, 0.21459928872911102, 0.21481021796105604] ***
*** finished computation of 7 references, err: [Inf, 0.894884782191438, 0.39874951399488606, 0.3139415124998656, 0.2502359401119877, 0.22410424788962893, 0.21983333728312385, 0.21730838584665602, 0.21459928872911102, 0.21481021796105604] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 13]]
** centroid: 1, normalized-entropy: 0.9963165195589622, [(2, 15), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5455000083870822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147] ***
*** starting iteration: 2; err: [Inf, 0.5455000083870822, 0.32799286146720147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417] ***
*** starting iteration: 3; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515] ***
*** starting iteration: 4; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176] ***
*** starting iteration: 5; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311] ***
*** starting iteration: 6; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207] ***
*** starting iteration: 7; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175] ***
*** starting iteration: 8; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175, 0.26849534067785874] ***
*** starting iteration: 9; err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175, 0.26849534067785874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175, 0.26849534067785874, 0.26780049184984345] ***
*** finished computation of 7 references, err: [Inf, 0.5455000083870822, 0.32799286146720147, 0.3142563063517417, 0.30452269024579515, 0.29945141497731176, 0.2953398836081311, 0.2908277811721207, 0.2776873975236175, 0.26849534067785874, 0.26780049184984345] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4309000071068608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154] ***
*** starting iteration: 2; err: [Inf, 0.4309000071068608, 0.25909894802071154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605] ***
*** starting iteration: 3; err: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954] ***
*** starting iteration: 4; err: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861] ***
*** starting iteration: 5; err: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861, 0.2158846096716269] ***
*** starting iteration: 6; err: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861, 0.2158846096716269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861, 0.2158846096716269, 0.2158846096716269] ***
*** finished computation of 7 references, err: [Inf, 0.4309000071068608, 0.25909894802071154, 0.22889356360269605, 0.22154529866616954, 0.2180797158107861, 0.2158846096716269, 0.2158846096716269] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3724000022986354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885] ***
*** starting iteration: 2; err: [Inf, 0.3724000022986354, 0.2610906710849885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857] ***
*** starting iteration: 3; err: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716] ***
*** starting iteration: 4; err: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547] ***
*** starting iteration: 5; err: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547, 0.22034198742114464] ***
*** starting iteration: 6; err: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547, 0.22034198742114464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547, 0.22034198742114464, 0.22034198742114464] ***
*** finished computation of 7 references, err: [Inf, 0.3724000022986354, 0.2610906710849885, 0.23977842860210857, 0.22604257131753716, 0.22187059728374547, 0.22034198742114464, 0.22034198742114464] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 10]]
** centroid: 2, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 24
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.7275999927234051] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7275999927234051, 0.5039998714281364] ***
*** starting iteration: 2; err: [Inf, 1.7275999927234051, 0.5039998714281364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505] ***
*** starting iteration: 3; err: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117] ***
*** starting iteration: 4; err: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** finished computation of 3 references, err: [Inf, 1.7275999927234051, 0.5039998714281364, 0.5006009890793505, 0.49953760620449117, 0.49888828526095536] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.652199998452584] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.652199998452584, 0.557289667147246] ***
*** starting iteration: 2; err: [Inf, 1.652199998452584, 0.557289667147246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563] ***
*** starting iteration: 3; err: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** starting iteration: 4; err: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563, 0.5326790636210249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563, 0.5326790636210249, 0.5326790636210249] ***
*** finished computation of 3 references, err: [Inf, 1.652199998452584, 0.557289667147246, 0.5376336613784563, 0.5326790636210249, 0.5326790636210249] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 6]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 35), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4644999963371026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4644999963371026, 0.5391777287318059] ***
*** starting iteration: 2; err: [Inf, 1.4644999963371026, 0.5391777287318059] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4644999963371026, 0.5391777287318059, 0.5269901124348612] ***
*** starting iteration: 3; err: [Inf, 1.4644999963371026, 0.5391777287318059, 0.5269901124348612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4644999963371026, 0.5391777287318059, 0.5269901124348612, 0.5261133584674185] ***
*** finished computation of 3 references, err: [Inf, 1.4644999963371026, 0.5391777287318059, 0.5269901124348612, 0.5261133584674185] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1341310118934544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1341310118934544, 0.3525622520512863] ***
*** starting iteration: 2; err: [Inf, 1.1341310118934544, 0.3525622520512863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1341310118934544, 0.3525622520512863, 0.3515679565648398] ***
*** finished computation of 3 references, err: [Inf, 1.1341310118934544, 0.3525622520512863, 0.3515679565648398] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 12]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 28), (3, 12)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2971833453876656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2971833453876656, 0.38756499529711974] ***
*** starting iteration: 2; err: [Inf, 1.2971833453876656, 0.38756499529711974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146] ***
*** starting iteration: 3; err: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146, 0.3703122070394382] ***
*** starting iteration: 4; err: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146, 0.3703122070394382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146, 0.3703122070394382, 0.3695951261766926] ***
*** finished computation of 3 references, err: [Inf, 1.2971833453876656, 0.38756499529711974, 0.37188815358726146, 0.3703122070394382, 0.3695951261766926] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 4]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 34), (3, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7430579996943563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7430579996943563, 0.3759229383546803] ***
*** starting iteration: 2; err: [Inf, 0.7430579996943563, 0.3759229383546803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823] ***
*** starting iteration: 3; err: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823, 0.36702328370534537] ***
*** starting iteration: 4; err: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823, 0.36702328370534537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823, 0.36702328370534537, 0.36702328370534537] ***
*** finished computation of 3 references, err: [Inf, 0.7430579996943563, 0.3759229383546803, 0.3690918395044823, 0.36702328370534537, 0.36702328370534537] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 33]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 8), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 24)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1) => 0.9666666666666667
finished with 24
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.3764705882352954, 2.9352941176470586, 4.588235294117648, 1.4470588235294117], [6.008333333333333, 2.75, 4.999999999999999, 1.8500000000000003], [4.836363636363637, 3.2409090909090907, 1.418181818181818, 0.21818181818181817], [7.5, 3.2375000000000003, 6.262500000000001, 2.0500000000000003], [5.4, 2.375, 3.525, 1.0], [5.3500000000000005, 3.8428571428571425, 1.5214285714285711, 0.28571428571428575], [6.63846153846154, 3.146153846153846, 5.6230769230769235, 2.1692307692307695], [5.550000000000001, 2.74, 4.180000000000001, 1.35]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.536363636363636, 2.6499999999999995, 3.963636363636364, 1.2227272727272729], [7.540000000000001, 2.82, 6.5200000000000005, 2.02], [4.707142857142856, 3.028571428571429, 1.4642857142857142, 0.18571428571428575], [6.552631578947369, 3.0368421052631582, 5.531578947368421, 2.121052631578947], [5.2375, 3.531249999999999, 1.4812499999999997, 0.29375], [6.456250000000001, 2.975, 4.6625000000000005, 1.46875], [6.116666666666666, 2.716666666666667, 5.133333333333333, 1.7166666666666668], [7.433333333333334, 3.533333333333333, 6.166666666666667, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.264705882352941, 3.747058823529411, 1.5176470588235293, 0.2941176470588236], [7.7, 3.05, 6.6, 2.2], [6.188235294117647, 2.8529411764705883, 4.576470588235294, 1.4529411764705884], [5.944444444444445, 2.6888888888888887, 4.955555555555555, 1.8444444444444446], [5.457142857142856, 2.521428571428572, 3.778571428571428, 1.1642857142857141], [6.42857142857143, 3.0500000000000003, 5.435714285714285, 2.1857142857142855], [4.711764705882352, 3.1823529411764713, 1.4058823529411764, 0.1941176470588236], [6.866666666666667, 2.9, 5.749999999999999, 1.7999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[34, 16, 20, 1, 23, 22, 1, 1, 17, 33, 1, 21, 38, 19, 6, 32, 31, 9, 7, 28, 35, 2, 12, 1, 29, 51, 32, 20, 27, 24, 39, 45, 53, 35, 1, 25, 8, 15, 6, 37, 43, 29, 40, 3, 31, 1, 33, 34, 22, 36, 48, 36, 35, 23, 38, 4, 40, 25, 43, 26, 40, 30, 19, 62, 23, 48, 14, 1, 57, 33, 25, 16, 20, 43, 27, 56, 26, 38, 35, 40, 43, 49, 17, 43, 36, 49, 34, 53, 26, 28, 36, 39, 25, 50, 32, 37, 30, 42, 37, 27, 19, 28, 29, 29, 60, 35, 35, 43, 44, 36, 29, 36, 21, 29, 23, 52, 42, 51, 57, 29, 24, 31, 54, 12, 31, 28, 30, 40, 34, 36, 34, 30, 40, 26, 34, 14, 40, 42, 17, 28, 50, 46, 19, 43, 62, 36, 49, 50, 35, 26, 26, 28, 27, 32, 52, 45, 30, 29, 20, 68, 41, 26, 38, 35, 39, 47, 28, 27, 40, 38, 19, 52, 37, 20, 10, 16, 30, 42, 50, 18, 26, 38, 33, 2, 31, 33, 58, 36, 36, 45, 30, 59, 33, 1, 36, 23, 41, 81, 40, 49, 37, 45, 63, 35, 35, 45, 26, 40, 55, 36, 29, 26, 75, 44, 1, 36, 24, 29, 48, 22, 23, 40, 29, 32, 56, 28, 23, 30, 54, 17, 29, 18, 29, 27, 36, 49, 39, 57, 45, 20, 32, 42, 38, 43, 28, 64, 55, 56, 29, 34, 42, 41, 30, 32, 45, 1, 23, 19, 20, 43, 20, 32, 47, 30, 51, 28, 43, 24, 51, 76, 26, 33, 73, 44, 39, 17, 48, 25, 38, 26, 31, 32, 53, 26, 32, 33, 43, 34, 4, 43, 56, 38, 54, 30, 27, 35, 48, 37, 38, 44]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6030000000000001, speedup = 0.4122798423380989, eval_ratio = 0.04192)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.35763888888888895,"f1":null,"seconds":6.851181387901306e-5,"exhaustive_search_seconds":0.0003872811794281006,"evaluations":339.4765625,"distances_sum":1708.6338978451001}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5451388888888886,"recall":0.5451388888888886,"f1":0.5451388888888886,"seconds":9.810738265514374e-5,"exhaustive_search_seconds":0.0003872811794281006,"evaluations":378.6171875,"distances_sum":1619.2760643850895}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6736111111111107,"recall":0.6736111111111107,"f1":0.6736111111111107,"seconds":0.00012686289846897125,"exhaustive_search_seconds":0.0003872811794281006,"evaluations":417.34375,"distances_sum":1563.4880779448943}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7499999999999998,"recall":0.7499999999999998,"f1":0.7499999999999998,"seconds":0.00016544945538043976,"exhaustive_search_seconds":0.0003872811794281006,"evaluations":457.0625,"distances_sum":1538.1771342941263}
KCenters.DeloneInvIndex> reached performance {"precision":0.8020833333333325,"recall":0.8020833333333325,"f1":0.8020833333333325,"seconds":0.00019632652401924133,"exhaustive_search_seconds":0.0003872811794281006,"evaluations":498.734375,"distances_sum":1524.8794726548595}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.748, speedup = 1.9919769869398458, eval_ratio = 0.049933)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
