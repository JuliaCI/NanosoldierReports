Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_SImoUk/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_SImoUk/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.819106 seconds (1.25 M allocations: 58.642 MiB)
Running: chebyshev_quadrature with k=1
  1.666324 seconds (2.15 M allocations: 111.787 MiB, 7.13% gc time)
Running: chebyshev_quadrature with k=2
  0.253003 seconds (356.12 k allocations: 20.587 MiB)
Running: chebyshev_quadrature with k=3
  0.338813 seconds (517.30 k allocations: 27.244 MiB, 5.33% gc time)
Running: chebyshev_quadrature with k=4
  0.283064 seconds (476.56 k allocations: 24.346 MiB, 4.51% gc time)
Running: jacobi_quadrature with α=β=1
 41.033528 seconds (46.44 M allocations: 3.240 GiB, 8.65% gc time)
Running: laguerre_quadrature with k=1
  2.893820 seconds (3.55 M allocations: 177.123 MiB, 2.52% gc time)
Running: legendre_quadrature
  0.189286 seconds (193.51 k allocations: 9.763 MiB)
Running: lobatto_quadrature
  0.296664 seconds (315.77 k allocations: 16.795 MiB)
Running: radau_quadrature
  0.248334 seconds (297.90 k allocations: 15.867 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 70.889174 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.155391 seconds (26.53 k allocations: 1.473 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 72.792194 seconds (19.38 k allocations: 1.042 MiB)
Running: rombergs_method
  0.873384 seconds (1.37 M allocations: 70.888 MiB, 10.14% gc time)
Running: simpsons_rule
  0.051437 seconds (44.95 k allocations: 1.890 MiB)
Running: simpsons38_rule
  0.088405 seconds (108.33 k allocations: 5.242 MiB)
Running: trapezoidal_rule
  0.310335 seconds (1.30 M allocations: 22.133 MiB, 8.43% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.083450 seconds (32.69 k allocations: 1.754 MiB)
Running: chebyshev_quadrature with k=1
  0.445624 seconds (268.41 k allocations: 12.440 MiB, 5.86% gc time)
Running: chebyshev_quadrature with k=2
  0.155773 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.157266 seconds (90.34 k allocations: 2.750 MiB)
Running: chebyshev_quadrature with k=4
  0.155574 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  2.524166 seconds (489.40 k allocations: 159.052 MiB, 8.89% gc time)
Running: legendre_quadrature
  0.179122 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.021319 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.020664 seconds (15.06 k allocations: 845.060 KiB)
Running: rectangle_rule_left
 26.512324 seconds (471.41 M allocations: 7.025 GiB, 3.94% gc time)
Running: rectangle_rule_midpoint
  0.000066 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 26.783127 seconds (476.96 M allocations: 7.107 GiB, 3.76% gc time)
Running: rombergs_method
  0.399275 seconds (371.90 k allocations: 19.009 MiB, 3.15% gc time)
Running: simpsons_rule
  0.000030 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.046166 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.055278 seconds (18.27 k allocations: 1011.216 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000225 seconds (1.51 k allocations: 24.328 KiB)
Running: chebyshev_quadrature with k=1
  0.119662 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.110743 seconds (3.34 k allocations: 166.016 KiB)
Running: chebyshev_quadrature with k=3
  0.120528 seconds (4.38 k allocations: 194.406 KiB)
Running: chebyshev_quadrature with k=4
  0.115999 seconds (4.38 k allocations: 194.406 KiB)
Running: jacobi_quadrature with α=β=1
  0.185104 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.064078 seconds (1.35 k allocations: 70.484 KiB)
Running: lobatto_quadrature
  0.000102 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000044 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000468 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000327 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000464 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.082455 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000539 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060826 seconds (77.44 k allocations: 4.008 MiB)
Running: chebyshev_quadrature with k=1
  0.152990 seconds (217.40 k allocations: 10.841 MiB)
Running: chebyshev_quadrature with k=2
  0.199382 seconds (279.07 k allocations: 14.003 MiB, 12.65% gc time)
Running: chebyshev_quadrature with k=3
  0.206278 seconds (270.37 k allocations: 13.058 MiB)
Running: chebyshev_quadrature with k=4
  0.204302 seconds (270.36 k allocations: 12.969 MiB)
Running: jacobi_quadrature with α=β=1
  2.771401 seconds (445.00 k allocations: 160.693 MiB, 3.35% gc time)
Running: legendre_quadrature
  0.149287 seconds (172.34 k allocations: 8.747 MiB)
Running: lobatto_quadrature
  0.170785 seconds (181.34 k allocations: 9.260 MiB)
Running: radau_quadrature
  0.189618 seconds (181.33 k allocations: 9.262 MiB, 11.43% gc time)
Running: rectangle_rule_left
  0.968988 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.026703 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  0.975546 seconds (18.92 k allocations: 1.021 MiB)
Running: rombergs_method
  0.129959 seconds (120.85 k allocations: 6.243 MiB)
Running: simpsons_rule
  0.031561 seconds (29.01 k allocations: 1.612 MiB)
Running: simpsons38_rule
  0.037556 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.027863 seconds (44.86 k allocations: 1.654 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043105 seconds (102.01 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=1
  0.206571 seconds (223.48 k allocations: 10.884 MiB)
Running: chebyshev_quadrature with k=2
  0.169448 seconds (286.19 k allocations: 13.973 MiB)
Running: chebyshev_quadrature with k=3
  0.226810 seconds (276.72 k allocations: 13.031 MiB, 9.77% gc time)
Running: chebyshev_quadrature with k=4
  0.169578 seconds (276.72 k allocations: 13.055 MiB)
Running: hermite_quadrature with k=2
 15.519384 seconds (24.31 M allocations: 1.131 GiB, 8.46% gc time)
Running: jacobi_quadrature with α=β=1
  0.468954 seconds (454.19 k allocations: 46.859 MiB, 17.31% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.202261 seconds (269.06 k allocations: 13.154 MiB)
Running: legendre_quadrature
  0.164621 seconds (178.33 k allocations: 9.050 MiB)
Running: lobatto_quadrature
  0.299890 seconds (200.75 k allocations: 34.986 MiB, 10.74% gc time)
Running: radau_quadrature
  0.224787 seconds (197.32 k allocations: 27.639 MiB)
Running: rectangle_rule_left
  0.022196 seconds (23.95 k allocations: 1.258 MiB)
Running: rectangle_rule_midpoint
  0.028820 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.026177 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.162814 seconds (124.01 k allocations: 6.335 MiB, 16.45% gc time)
Running: simpsons_rule
  0.048505 seconds (41.85 k allocations: 1.965 MiB)
Running: simpsons38_rule
  0.038012 seconds (60.33 k allocations: 2.889 MiB)
Running: trapezoidal_rule
  0.034265 seconds (31.74 k allocations: 1.597 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041789 seconds (61.72 k allocations: 2.169 MiB)
Running: chebyshev_quadrature with k=1
  0.195526 seconds (219.33 k allocations: 10.692 MiB)
Running: chebyshev_quadrature with k=2
  0.234771 seconds (281.26 k allocations: 13.753 MiB)
Running: chebyshev_quadrature with k=3
  0.249682 seconds (272.35 k allocations: 12.855 MiB, 11.32% gc time)
Running: chebyshev_quadrature with k=4
  0.239685 seconds (272.35 k allocations: 12.856 MiB)
Running: hermite_quadrature with k=2
  0.151131 seconds (171.22 k allocations: 8.676 MiB)
Running: jacobi_quadrature with α=β=1
  7.933050 seconds (447.45 k allocations: 1.172 GiB, 14.23% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.210726 seconds (264.38 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.160131 seconds (174.27 k allocations: 8.826 MiB)
Running: lobatto_quadrature
  0.199452 seconds (191.88 k allocations: 20.732 MiB)
Running: radau_quadrature
  0.202379 seconds (191.03 k allocations: 18.724 MiB, 5.96% gc time)
Running: rectangle_rule_left
  0.027114 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.029103 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.026188 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.123006 seconds (119.49 k allocations: 6.154 MiB)
Running: simpsons_rule
  0.034132 seconds (33.69 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.040976 seconds (50.47 k allocations: 2.633 MiB)
Running: trapezoidal_rule
  0.030038 seconds (26.08 k allocations: 1.423 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035480 seconds (32.40 k allocations: 1.750 MiB)
Running: chebyshev_quadrature with k=1
  0.202462 seconds (217.90 k allocations: 10.919 MiB, 7.34% gc time)
Running: chebyshev_quadrature with k=2
  0.238544 seconds (279.63 k allocations: 14.106 MiB)
Running: chebyshev_quadrature with k=3
  0.180892 seconds (270.92 k allocations: 13.104 MiB)
Running: chebyshev_quadrature with k=4
  0.191920 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  1.650351 seconds (445.59 k allocations: 191.725 MiB, 6.99% gc time)
Running: legendre_quadrature
  0.154406 seconds (172.85 k allocations: 8.750 MiB)
Running: lobatto_quadrature
  0.164935 seconds (181.84 k allocations: 9.281 MiB)
Running: radau_quadrature
  0.171755 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.317254 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.023717 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.147677 seconds (19.30 k allocations: 1.040 MiB, 10.41% gc time)
Running: rombergs_method
  0.121288 seconds (131.63 k allocations: 6.895 MiB)
Running: simpsons_rule
  0.025966 seconds (29.80 k allocations: 1.644 MiB)
Running: simpsons38_rule
  0.039226 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.027687 seconds (45.88 k allocations: 1.689 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035734 seconds (33.33 k allocations: 1.714 MiB)
Running: chebyshev_quadrature with k=1
  0.231385 seconds (218.34 k allocations: 10.851 MiB)
Running: chebyshev_quadrature with k=2
  0.244403 seconds (280.15 k allocations: 13.998 MiB)
Running: chebyshev_quadrature with k=3
  0.243530 seconds (271.33 k allocations: 12.987 MiB, 4.76% gc time)
Running: chebyshev_quadrature with k=4
  0.225030 seconds (271.33 k allocations: 13.066 MiB)
Running: jacobi_quadrature with α=β=1
  1.656937 seconds (446.20 k allocations: 146.397 MiB, 13.77% gc time)
Running: legendre_quadrature
  0.173454 seconds (173.29 k allocations: 8.761 MiB, 7.25% gc time)
Running: lobatto_quadrature
  0.222573 seconds (182.29 k allocations: 9.297 MiB)
Running: radau_quadrature
  0.177599 seconds (182.28 k allocations: 9.292 MiB)
Running: rectangle_rule_left
  0.935385 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.019068 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.936090 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.167433 seconds (122.15 k allocations: 6.297 MiB)
Running: simpsons_rule
  0.035808 seconds (30.61 k allocations: 1.672 MiB)
Running: simpsons38_rule
  0.039794 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.030179 seconds (58.19 k allocations: 1.890 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.167705 seconds (155.15 k allocations: 8.245 MiB)
Running: chebyshev_quadrature with k=1
  0.170728 seconds (77.50 k allocations: 2.461 MiB, 17.27% gc time)
Running: chebyshev_quadrature with k=2
  0.153072 seconds (112.77 k allocations: 3.132 MiB)
Running: chebyshev_quadrature with k=3
  0.154029 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.155095 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  1.730936 seconds (467.90 k allocations: 165.424 MiB, 2.08% gc time)
Running: legendre_quadrature
  0.122445 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000233 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000213 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 43.617369 seconds (590.00 M allocations: 8.792 GiB, 3.91% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 43.496293 seconds (592.75 M allocations: 8.833 GiB, 3.81% gc time)
Running: rombergs_method
  0.146164 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000042 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.028225 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.022132 seconds (174 allocations: 9.719 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.683791 seconds (629.34 M allocations: 9.387 GiB, 5.71% gc time)
Running: chebyshev_quadrature with k=1
  0.516394 seconds (426.05 k allocations: 21.108 MiB)
Running: chebyshev_quadrature with k=2
 12.366158 seconds (491.02 k allocations: 4.039 GiB, 3.91% gc time)
Running: chebyshev_quadrature with k=3
  6.210324 seconds (283.70 k allocations: 1.641 GiB, 4.29% gc time)
Running: chebyshev_quadrature with k=4
  8.467696 seconds (283.70 k allocations: 2.260 GiB, 2.69% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.421083 seconds (481.81 k allocations: 13.252 GiB, 3.80% gc time)
Running: legendre_quadrature.
  5.771937 seconds (210.19 k allocations: 1.974 GiB, 2.02% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.430360 seconds (8.21 M allocations: 13.381 GiB, 4.12% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.353041 seconds (7.21 M allocations: 13.366 GiB, 2.79% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.730519 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.656504 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.618800 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.107063 seconds (466.53 k allocations: 151.600 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.121504 seconds (600.04 M allocations: 8.943 GiB, 8.57% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.387313 seconds (600.05 M allocations: 8.943 GiB, 8.21% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.933885 seconds (600.04 M allocations: 8.943 GiB, 9.04% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063061 seconds (184.62 k allocations: 4.370 MiB)
Running: chebyshev_quadrature with k=1
  0.210407 seconds (231.69 k allocations: 11.186 MiB)
Running: chebyshev_quadrature with k=2
  0.210496 seconds (266.13 k allocations: 12.736 MiB)
Running: chebyshev_quadrature with k=3
  0.226095 seconds (253.76 k allocations: 11.694 MiB)
Running: chebyshev_quadrature with k=4
  0.206300 seconds (253.75 k allocations: 11.689 MiB)
Running: jacobi_quadrature with α=β=1
  0.362335 seconds (382.95 k allocations: 32.804 MiB)
Running: laguerre_quadrature with k=2
  0.200614 seconds (168.36 k allocations: 8.619 MiB)
Running: legendre_quadrature
  0.133843 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.036296 seconds (9.87 k allocations: 15.074 MiB)
Running: radau_quadrature
  0.031847 seconds (8.63 k allocations: 13.148 MiB)
Running: rectangle_rule_left
  0.075004 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.049588 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.049062 seconds (19.11 k allocations: 1.015 MiB)
Running: rombergs_method
  0.283100 seconds (184.38 k allocations: 9.651 MiB)
Running: simpsons_rule
  0.002170 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.058123 seconds (82.91 k allocations: 3.274 MiB)
Running: trapezoidal_rule
  0.282451 seconds (2.40 M allocations: 37.631 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002241 seconds (30.72 k allocations: 480.688 KiB)
Running: chebyshev_quadrature with k=1
  0.112264 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.114793 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.124548 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.121820 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  8.204790 seconds (380.11 k allocations: 903.520 MiB, 2.41% gc time)
Running: legendre_quadrature
  0.093926 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000225 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000187 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.418885 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000417 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.471627 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.080921 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000075 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000792 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000820 seconds (6.35 k allocations: 99.891 KiB)
Running: chebyshev_quadrature with k=1
  0.101281 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.108296 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.116117 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.115123 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.180919 seconds (368.70 k allocations: 250.900 MiB, 8.57% gc time)
Running: legendre_quadrature
  0.067328 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000138 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000051 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.114833 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001120 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.812539 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.132725 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000098 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000098 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002517 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
