Julia Version 1.5.1-pre.0
Commit f0b8c76f6f (2020-08-02 04:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_8WAEXD/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_8WAEXD/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.105882 seconds (1.25 M allocations: 58.647 MiB, 16.19% gc time)
Running: chebyshev_quadrature with k=1
  1.765679 seconds (2.15 M allocations: 111.783 MiB, 3.54% gc time)
Running: chebyshev_quadrature with k=2
  0.256228 seconds (356.12 k allocations: 20.586 MiB)
Running: chebyshev_quadrature with k=3
  0.327048 seconds (517.30 k allocations: 27.245 MiB, 3.45% gc time)
Running: chebyshev_quadrature with k=4
  0.424414 seconds (476.56 k allocations: 24.346 MiB, 7.48% gc time)
Running: jacobi_quadrature with α=β=1
 47.304004 seconds (46.44 M allocations: 3.240 GiB, 8.61% gc time)
Running: laguerre_quadrature with k=1
  3.311841 seconds (3.55 M allocations: 177.122 MiB, 2.48% gc time)
Running: legendre_quadrature
  0.221271 seconds (193.51 k allocations: 9.763 MiB)
Running: lobatto_quadrature
  0.466910 seconds (315.76 k allocations: 16.796 MiB, 5.84% gc time)
Running: radau_quadrature
  0.276664 seconds (297.89 k allocations: 15.866 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.720705 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.197848 seconds (26.53 k allocations: 1.473 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.461827 seconds (19.38 k allocations: 1.042 MiB)
Running: rombergs_method
  1.000089 seconds (1.37 M allocations: 70.886 MiB, 9.08% gc time)
Running: simpsons_rule
  0.037901 seconds (44.95 k allocations: 1.890 MiB)
Running: simpsons38_rule
  0.098078 seconds (108.33 k allocations: 5.242 MiB)
Running: trapezoidal_rule
  0.277950 seconds (1.30 M allocations: 22.133 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084387 seconds (32.69 k allocations: 1.754 MiB)
Running: chebyshev_quadrature with k=1
  0.466250 seconds (268.41 k allocations: 12.440 MiB)
Running: chebyshev_quadrature with k=2
  0.149662 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.189366 seconds (90.34 k allocations: 2.750 MiB, 16.82% gc time)
Running: chebyshev_quadrature with k=4
  0.165262 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  2.910818 seconds (489.39 k allocations: 159.049 MiB, 10.51% gc time)
Running: legendre_quadrature
  0.148971 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.018658 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.018278 seconds (15.06 k allocations: 845.060 KiB)
Running: rectangle_rule_left
 30.851264 seconds (471.41 M allocations: 7.025 GiB, 3.69% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.034312 seconds (476.96 M allocations: 7.107 GiB, 3.88% gc time)
Running: rombergs_method
  0.638848 seconds (371.90 k allocations: 19.009 MiB)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.088942 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.055905 seconds (18.27 k allocations: 1011.216 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000250 seconds (1.51 k allocations: 24.328 KiB)
Running: chebyshev_quadrature with k=1
  0.156315 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.195297 seconds (3.34 k allocations: 166.016 KiB)
Running: chebyshev_quadrature with k=3
  0.176881 seconds (4.38 k allocations: 194.406 KiB)
Running: chebyshev_quadrature with k=4
  0.183849 seconds (4.38 k allocations: 194.406 KiB)
Running: jacobi_quadrature with α=β=1
  0.309922 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.093229 seconds (1.35 k allocations: 70.484 KiB)
Running: lobatto_quadrature
  0.000138 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000108 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000680 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000366 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000476 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.104883 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000023 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000790 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.073222 seconds (77.44 k allocations: 4.008 MiB)
Running: chebyshev_quadrature with k=1
  0.232846 seconds (217.40 k allocations: 10.841 MiB)
Running: chebyshev_quadrature with k=2
  0.267660 seconds (279.07 k allocations: 14.004 MiB)
Running: chebyshev_quadrature with k=3
  0.325247 seconds (270.37 k allocations: 13.058 MiB, 14.10% gc time)
Running: chebyshev_quadrature with k=4
  0.278963 seconds (270.36 k allocations: 12.969 MiB)
Running: jacobi_quadrature with α=β=1
  1.801979 seconds (445.00 k allocations: 160.698 MiB, 7.82% gc time)
Running: legendre_quadrature
  0.154652 seconds (172.34 k allocations: 8.749 MiB)
Running: lobatto_quadrature
  0.215859 seconds (181.34 k allocations: 9.260 MiB)
Running: radau_quadrature
  0.165348 seconds (181.33 k allocations: 9.262 MiB)
Running: rectangle_rule_left
  1.004294 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.024903 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  1.003462 seconds (18.92 k allocations: 1.021 MiB)
Running: rombergs_method
  0.162364 seconds (120.85 k allocations: 6.243 MiB, 14.57% gc time)
Running: simpsons_rule
  0.031618 seconds (29.01 k allocations: 1.612 MiB)
Running: simpsons38_rule
  0.037847 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.027628 seconds (44.86 k allocations: 1.654 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045077 seconds (102.01 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=1
  0.216266 seconds (223.48 k allocations: 10.884 MiB)
Running: chebyshev_quadrature with k=2
  0.266701 seconds (286.19 k allocations: 13.973 MiB)
Running: chebyshev_quadrature with k=3
  0.325630 seconds (276.72 k allocations: 13.031 MiB)
Running: chebyshev_quadrature with k=4
  0.322191 seconds (276.72 k allocations: 13.055 MiB, 9.94% gc time)
Running: hermite_quadrature with k=2
 18.349068 seconds (24.31 M allocations: 1.131 GiB, 8.88% gc time)
Running: jacobi_quadrature with α=β=1
  0.517856 seconds (454.19 k allocations: 46.858 MiB, 8.38% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.318339 seconds (269.06 k allocations: 13.150 MiB)
Running: legendre_quadrature
  0.194078 seconds (178.33 k allocations: 9.048 MiB)
Running: lobatto_quadrature
  0.354305 seconds (200.75 k allocations: 34.986 MiB, 9.23% gc time)
Running: radau_quadrature
  0.237905 seconds (197.32 k allocations: 27.639 MiB)
Running: rectangle_rule_left
  0.061941 seconds (23.95 k allocations: 1.258 MiB, 45.10% gc time)
Running: rectangle_rule_midpoint
  0.027853 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.037855 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.147860 seconds (124.01 k allocations: 6.335 MiB)
Running: simpsons_rule
  0.063200 seconds (41.85 k allocations: 1.965 MiB)
Running: simpsons38_rule
  0.062549 seconds (60.33 k allocations: 2.889 MiB)
Running: trapezoidal_rule
  0.029683 seconds (31.74 k allocations: 1.597 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051529 seconds (61.72 k allocations: 2.169 MiB)
Running: chebyshev_quadrature with k=1
  0.204973 seconds (219.33 k allocations: 10.692 MiB)
Running: chebyshev_quadrature with k=2
  0.239964 seconds (281.26 k allocations: 13.753 MiB)
Running: chebyshev_quadrature with k=3
  0.245813 seconds (272.35 k allocations: 12.855 MiB, 11.23% gc time)
Running: chebyshev_quadrature with k=4
  0.207030 seconds (272.35 k allocations: 12.855 MiB)
Running: hermite_quadrature with k=2
  0.166781 seconds (171.22 k allocations: 8.676 MiB)
Running: jacobi_quadrature with α=β=1
 11.872096 seconds (447.45 k allocations: 1.172 GiB, 10.92% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.302730 seconds (264.39 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.238958 seconds (174.27 k allocations: 8.830 MiB, 7.61% gc time)
Running: lobatto_quadrature
  0.275523 seconds (191.88 k allocations: 20.732 MiB)
Running: radau_quadrature
  0.265297 seconds (191.02 k allocations: 18.661 MiB)
Running: rectangle_rule_left
  0.037432 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.037379 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.033069 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.181201 seconds (119.49 k allocations: 6.154 MiB, 8.90% gc time)
Running: simpsons_rule
  0.044277 seconds (33.69 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.051912 seconds (50.47 k allocations: 2.633 MiB)
Running: trapezoidal_rule
  0.036945 seconds (26.08 k allocations: 1.423 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.044708 seconds (32.40 k allocations: 1.750 MiB)
Running: chebyshev_quadrature with k=1
  0.263858 seconds (217.90 k allocations: 10.919 MiB)
Running: chebyshev_quadrature with k=2
  0.308930 seconds (279.63 k allocations: 14.106 MiB)
Running: chebyshev_quadrature with k=3
  0.326444 seconds (270.92 k allocations: 13.104 MiB, 6.18% gc time)
Running: chebyshev_quadrature with k=4
  0.298924 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  2.937688 seconds (445.59 k allocations: 191.728 MiB, 8.87% gc time)
Running: legendre_quadrature
  0.261536 seconds (172.84 k allocations: 8.749 MiB, 6.97% gc time)
Running: lobatto_quadrature
  0.239373 seconds (181.84 k allocations: 9.281 MiB)
Running: radau_quadrature
  0.164286 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.303467 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.038417 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.252634 seconds (19.30 k allocations: 1.040 MiB)
Running: rombergs_method
  0.133877 seconds (131.63 k allocations: 6.895 MiB)
Running: simpsons_rule
  0.033391 seconds (29.80 k allocations: 1.644 MiB)
Running: simpsons38_rule
  0.035088 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.027665 seconds (45.88 k allocations: 1.689 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031689 seconds (33.33 k allocations: 1.714 MiB)
Running: chebyshev_quadrature with k=1
  0.204859 seconds (218.34 k allocations: 10.856 MiB, 8.11% gc time)
Running: chebyshev_quadrature with k=2
  0.264460 seconds (280.15 k allocations: 13.999 MiB)
Running: chebyshev_quadrature with k=3
  0.254005 seconds (271.33 k allocations: 13.007 MiB)
Running: chebyshev_quadrature with k=4
  0.274996 seconds (271.33 k allocations: 13.062 MiB, 7.06% gc time)
Running: jacobi_quadrature with α=β=1
  1.937956 seconds (446.20 k allocations: 146.397 MiB, 2.85% gc time)
Running: legendre_quadrature
  0.255737 seconds (173.29 k allocations: 8.766 MiB)
Running: lobatto_quadrature
  0.284740 seconds (182.29 k allocations: 9.301 MiB)
Running: radau_quadrature
  0.308590 seconds (182.28 k allocations: 9.297 MiB, 7.04% gc time)
Running: rectangle_rule_left
  2.137658 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.038174 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  1.254627 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.163522 seconds (122.15 k allocations: 6.297 MiB)
Running: simpsons_rule
  0.042963 seconds (30.61 k allocations: 1.672 MiB)
Running: simpsons38_rule
  0.037345 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.031191 seconds (58.19 k allocations: 1.890 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.194162 seconds (155.15 k allocations: 8.244 MiB)
Running: chebyshev_quadrature with k=1
  0.243156 seconds (77.50 k allocations: 2.461 MiB)
Running: chebyshev_quadrature with k=2
  0.268341 seconds (112.77 k allocations: 3.128 MiB)
Running: chebyshev_quadrature with k=3
  0.253125 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.180563 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  1.726447 seconds (467.90 k allocations: 165.424 MiB, 12.59% gc time)
Running: legendre_quadrature
  0.117758 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000134 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000108 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 45.307579 seconds (590.00 M allocations: 8.792 GiB, 3.36% gc time)
Running: rectangle_rule_midpoint
  0.000059 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 52.058887 seconds (592.75 M allocations: 8.833 GiB, 3.25% gc time)
Running: rombergs_method
  0.140404 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000161 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.030451 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.023219 seconds (174 allocations: 9.719 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.930771 seconds (629.34 M allocations: 9.387 GiB, 5.16% gc time)
Running: chebyshev_quadrature with k=1
  0.661914 seconds (426.05 k allocations: 21.108 MiB, 5.02% gc time)
Running: chebyshev_quadrature with k=2
 15.113028 seconds (491.02 k allocations: 4.039 GiB, 4.46% gc time)
Running: chebyshev_quadrature with k=3
  5.753746 seconds (283.70 k allocations: 1.641 GiB, 5.62% gc time)
Running: chebyshev_quadrature with k=4
  8.872617 seconds (283.70 k allocations: 2.260 GiB, 2.33% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 68.990256 seconds (481.81 k allocations: 13.252 GiB, 3.37% gc time)
Running: legendre_quadrature.
  7.418613 seconds (210.19 k allocations: 1.974 GiB, 2.36% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 69.635929 seconds (8.21 M allocations: 13.381 GiB, 4.13% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.081436 seconds (7.21 M allocations: 13.366 GiB, 2.36% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.902125 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.755023 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.813436 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.152057 seconds (466.53 k allocations: 151.600 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.323442 seconds (600.04 M allocations: 8.943 GiB, 8.91% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.488178 seconds (600.05 M allocations: 8.943 GiB, 8.16% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.828801 seconds (600.04 M allocations: 8.943 GiB, 8.68% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064554 seconds (184.62 k allocations: 4.370 MiB)
Running: chebyshev_quadrature with k=1
  0.236248 seconds (231.69 k allocations: 11.186 MiB)
Running: chebyshev_quadrature with k=2
  0.233738 seconds (266.13 k allocations: 12.736 MiB)
Running: chebyshev_quadrature with k=3
  0.225349 seconds (253.76 k allocations: 11.694 MiB)
Running: chebyshev_quadrature with k=4
  0.267982 seconds (253.75 k allocations: 11.689 MiB)
Running: jacobi_quadrature with α=β=1
  0.379522 seconds (382.95 k allocations: 32.804 MiB)
Running: laguerre_quadrature with k=2
  0.194484 seconds (168.36 k allocations: 8.619 MiB)
Running: legendre_quadrature
  0.129906 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.035135 seconds (9.87 k allocations: 15.074 MiB)
Running: radau_quadrature
  0.032964 seconds (8.63 k allocations: 13.148 MiB)
Running: rectangle_rule_left
  0.060855 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.047173 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.050755 seconds (19.11 k allocations: 1.015 MiB)
Running: rombergs_method
  0.250587 seconds (184.38 k allocations: 9.650 MiB)
Running: simpsons_rule
  0.002017 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054959 seconds (82.91 k allocations: 3.274 MiB)
Running: trapezoidal_rule
  0.187019 seconds (2.40 M allocations: 37.631 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002148 seconds (30.72 k allocations: 480.688 KiB)
Running: chebyshev_quadrature with k=1
  0.109811 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.114744 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.126938 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.125720 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  8.868140 seconds (380.11 k allocations: 903.520 MiB, 2.27% gc time)
Running: legendre_quadrature
  0.070250 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000648 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000153 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.723364 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000471 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.576822 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.093311 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000084 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000086 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000874 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000636 seconds (6.35 k allocations: 99.891 KiB)
Running: chebyshev_quadrature with k=1
  0.099236 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.112894 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.114378 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.153664 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.693861 seconds (368.70 k allocations: 250.900 MiB, 9.06% gc time)
Running: legendre_quadrature
  0.055053 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000154 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000081 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.107094 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001325 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 13.024355 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.173536 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000066 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002417 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
