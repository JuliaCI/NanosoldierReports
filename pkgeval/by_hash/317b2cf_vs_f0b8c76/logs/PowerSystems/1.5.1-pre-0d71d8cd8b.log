Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Parsers ────────────────────── v1.0.10
  Installed SpecialFunctions ───────────── v0.10.3
  Installed HDF5 ───────────────────────── v0.13.4
  Installed StaticArrays ───────────────── v0.12.4
  Installed DocStringExtensions ────────── v0.8.2
  Installed ForwardDiff ────────────────── v0.10.12
  Installed PowerSystems ───────────────── v0.26.0
  Installed HDF5_jll ───────────────────── v1.10.5+5
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed UnPack ─────────────────────── v1.0.2
  Installed Blosc ──────────────────────── v0.7.0
  Installed YAML ───────────────────────── v0.4.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Mustache ───────────────────── v1.0.4
  Installed DataStructures ─────────────── v0.17.20
  Installed NLsolve ────────────────────── v4.4.1
  Installed DataValueInterfaces ────────── v1.0.0
  Installed Blosc_jll ──────────────────── v1.14.3+1
  Installed PooledArrays ───────────────── v0.5.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed MacroTools ─────────────────── v0.5.5
  Installed JSON2 ──────────────────────── v0.3.2
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed Requires ───────────────────── v1.0.1
  Installed PrettyTables ───────────────── v0.9.1
  Installed NLSolversBase ──────────────── v7.6.3
  Installed Reexport ───────────────────── v0.2.0
  Installed TableTraits ────────────────── v1.0.0
  Installed SentinelArrays ─────────────── v1.2.11
  Installed Distances ──────────────────── v0.9.0
  Installed Compat ─────────────────────── v3.13.0
  Installed DiffResults ────────────────── v1.0.2
  Installed InvertedIndices ────────────── v1.0.0
  Installed Missings ───────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed JSON ───────────────────────── v0.21.0
  Installed Tables ─────────────────────── v1.0.5
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Formatting ─────────────────── v0.4.1
  Installed FiniteDiff ─────────────────── v2.5.2
  Installed NaNMath ────────────────────── v0.3.4
  Installed DiffRules ──────────────────── v1.0.1
  Installed InfrastructureSystems ──────── v0.15.1
  Installed OrderedCollections ─────────── v1.3.0
  Installed RecipesBase ────────────────── v1.0.2
  Installed TimeSeries ─────────────────── v0.18.0
  Installed Zstd_jll ───────────────────── v1.4.5+0
  Installed DataFrames ─────────────────── v0.21.6
  Installed ArrayInterface ─────────────── v2.11.0
  Installed CategoricalArrays ──────────── v0.8.1
  Installed DataAPI ────────────────────── v1.3.0
  Installed Parameters ─────────────────── v0.12.1
  Installed Lz4_jll ────────────────────── v1.9.2+2
  Installed Crayons ────────────────────── v4.0.3
  Installed CSV ────────────────────────── v0.7.7
Updating `~/.julia/environments/v1.5/Project.toml`
  [bcd98974] + PowerSystems v0.26.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.11.0
  [a74b3585] + Blosc v0.7.0
  [0b7ba130] + Blosc_jll v1.14.3+1
  [336ed68f] + CSV v0.7.7
  [324d7699] + CategoricalArrays v0.8.1
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [a8cc5b0e] + Crayons v4.0.3
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.6
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.0
  [ffbed154] + DocStringExtensions v0.8.2
  [6a86dc24] + FiniteDiff v2.5.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [f67ccb44] + HDF5 v0.13.4
  [0234f1f7] + HDF5_jll v1.10.5+5
  [2cd47ed4] + InfrastructureSystems v0.15.1
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [2535ab7d] + JSON2 v0.3.2
  [d3d80556] + LineSearches v7.0.1
  [5ced341a] + Lz4_jll v1.9.2+2
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [ffc61752] + Mustache v1.0.4
  [d41bc354] + NLSolversBase v7.6.3
  [2774e3e8] + NLsolve v4.4.1
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [2dfb63ee] + PooledArrays v0.5.3
  [bcd98974] + PowerSystems v0.26.0
  [08abe8d2] + PrettyTables v0.9.1
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [91c51154] + SentinelArrays v1.2.11
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [9e3dc215] + TimeSeries v0.18.0
  [3a884ed6] + UnPack v1.0.2
  [ddb6d928] + YAML v0.4.0
  [83775a58] + Zlib_jll v1.2.11+15
  [3161d3a3] + Zstd_jll v1.4.5+0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building HDF5 → `~/.julia/packages/HDF5/cvKpY/deps/build.log`
    Testing PowerSystems
Status `/tmp/jl_cGexZn/Project.toml`
  [4c88cf16] Aqua v0.4.4
  [336ed68f] CSV v0.7.7
  [a93c6f00] DataFrames v0.21.6
  [ffbed154] DocStringExtensions v0.8.2
  [2cd47ed4] InfrastructureSystems v0.15.1
  [682c06a0] JSON v0.21.0
  [2535ab7d] JSON2 v0.3.2
  [2774e3e8] NLsolve v4.4.1
  [bcd98974] PowerSystems v0.26.0
  [9e3dc215] TimeSeries v0.18.0
  [ddb6d928] YAML v0.4.0
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_cGexZn/Manifest.toml`
  [4c88cf16] Aqua v0.4.4
  [4fba245c] ArrayInterface v2.11.0
  [a74b3585] Blosc v0.7.0
  [0b7ba130] Blosc_jll v1.14.3+1
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [a8cc5b0e] Crayons v4.0.3
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.6
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [ffbed154] DocStringExtensions v0.8.2
  [6a86dc24] FiniteDiff v2.5.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [f67ccb44] HDF5 v0.13.4
  [0234f1f7] HDF5_jll v1.10.5+5
  [2cd47ed4] InfrastructureSystems v0.15.1
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2535ab7d] JSON2 v0.3.2
  [d3d80556] LineSearches v7.0.1
  [5ced341a] Lz4_jll v1.9.2+2
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [ffc61752] Mustache v1.0.4
  [d41bc354] NLSolversBase v7.6.3
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [bcd98974] PowerSystems v0.26.0
  [08abe8d2] PrettyTables v0.9.1
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [91c51154] SentinelArrays v1.2.11
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [9e3dc215] TimeSeries v0.18.0
  [3a884ed6] UnPack v1.0.2
  [ddb6d928] YAML v0.4.0
  [83775a58] Zlib_jll v1.2.11+15
  [3161d3a3] Zstd_jll v1.4.5+0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode

test_base_checks: 
test_branchchecks_testing: 
test_busnumberchecks: 
test_constructors: 
test_cost_functions: 
test_data: 
test_devices: 
test_dynamic_generator: 
test_dynamic_inverter: 
test_generate_structs: diff --strip-trailing-cr tmp-test-generated-structs/AC1A.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AC1A.jl
35,39c35,39
< - `Tr::Float64`: Regulator input filter time constant in s, validation range: `(0, nothing)`
< - `Tb::Float64`: Regulator denominator (lag) time constant in s, validation range: `(0, nothing)`
< - `Tc::Float64`: Regulator numerator (lead) time constant in s, validation range: `(0, nothing)`
< - `Ka::Float64`: Regulator output gain, validation range: `(0, nothing)`
< - `Ta::Float64`: Regulator output time constant in s, validation range: `(0, nothing)`
---
> - `Tr::Float64`: Regulator input filter time constant in s, validation range: (0, nothing)
> - `Tb::Float64`: Regulator denominator (lag) time constant in s, validation range: (0, nothing)
> - `Tc::Float64`: Regulator numerator (lead) time constant in s, validation range: (0, nothing)
> - `Ka::Float64`: Regulator output gain, validation range: (0, nothing)
> - `Ta::Float64`: Regulator output time constant in s, validation range: (0, nothing)
41,46c41,46
< - `Te::Float64`: Exciter field time constant in s, validation range: `("eps()", nothing)`
< - `Kf::Float64`: Rate feedback excitation system stabilizer gain, validation range: `(0, nothing)`
< - `Tf::Float64`: Rate feedback time constant, validation range: `("eps()", nothing)`
< - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: `(0, nothing)`
< - `Kd::Float64`: Demagnetizing factor, function of exciter alternator reactances, validation range: `(0, nothing)`
< - `Ke::Float64`: Exciter field proportional constant, validation range: `(0, nothing)`
---
> - `Te::Float64`: Exciter field time constant in s, validation range: (&quot;eps()&quot;, nothing)
> - `Kf::Float64`: Rate feedback excitation system stabilizer gain, validation range: (0, nothing)
> - `Tf::Float64`: Rate feedback time constant, validation range: (&quot;eps()&quot;, nothing)
> - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: (0, nothing)
> - `Kd::Float64`: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, nothing)
> - `Ke::Float64`: Exciter field proportional constant, validation range: (0, nothing)
50c50
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
146c146
< """Get [`AC1A`](@ref) `Tr`."""
---
> """Get AC1A Tr."""
148c148
< """Get [`AC1A`](@ref) `Tb`."""
---
> """Get AC1A Tb."""
150c150
< """Get [`AC1A`](@ref) `Tc`."""
---
> """Get AC1A Tc."""
152c152
< """Get [`AC1A`](@ref) `Ka`."""
---
> """Get AC1A Ka."""
154c154
< """Get [`AC1A`](@ref) `Ta`."""
---
> """Get AC1A Ta."""
156c156
< """Get [`AC1A`](@ref) `Va_lim`."""
---
> """Get AC1A Va_lim."""
158c158
< """Get [`AC1A`](@ref) `Te`."""
---
> """Get AC1A Te."""
160c160
< """Get [`AC1A`](@ref) `Kf`."""
---
> """Get AC1A Kf."""
162c162
< """Get [`AC1A`](@ref) `Tf`."""
---
> """Get AC1A Tf."""
164c164
< """Get [`AC1A`](@ref) `Kc`."""
---
> """Get AC1A Kc."""
166c166
< """Get [`AC1A`](@ref) `Kd`."""
---
> """Get AC1A Kd."""
168c168
< """Get [`AC1A`](@ref) `Ke`."""
---
> """Get AC1A Ke."""
170c170
< """Get [`AC1A`](@ref) `E_sat`."""
---
> """Get AC1A E_sat."""
172c172
< """Get [`AC1A`](@ref) `Se`."""
---
> """Get AC1A Se."""
174c174
< """Get [`AC1A`](@ref) `Vr_lim`."""
---
> """Get AC1A Vr_lim."""
176c176
< """Get [`AC1A`](@ref) `V_ref`."""
---
> """Get AC1A V_ref."""
178c178
< """Get [`AC1A`](@ref) `saturation_coeffs`."""
---
> """Get AC1A saturation_coeffs."""
180c180
< """Get [`AC1A`](@ref) `ext`."""
---
> """Get AC1A ext."""
182c182
< """Get [`AC1A`](@ref) `states`."""
---
> """Get AC1A states."""
184c184
< """Get [`AC1A`](@ref) `n_states`."""
---
> """Get AC1A n_states."""
186c186
< """Get [`AC1A`](@ref) `states_types`."""
---
> """Get AC1A states_types."""
188c188
< """Get [`AC1A`](@ref) `internal`."""
---
> """Get AC1A internal."""
191c191
< """Set [`AC1A`](@ref) `Tr`."""
---
> """Set AC1A Tr."""
193c193
< """Set [`AC1A`](@ref) `Tb`."""
---
> """Set AC1A Tb."""
195c195
< """Set [`AC1A`](@ref) `Tc`."""
---
> """Set AC1A Tc."""
197c197
< """Set [`AC1A`](@ref) `Ka`."""
---
> """Set AC1A Ka."""
199c199
< """Set [`AC1A`](@ref) `Ta`."""
---
> """Set AC1A Ta."""
201c201
< """Set [`AC1A`](@ref) `Va_lim`."""
---
> """Set AC1A Va_lim."""
203c203
< """Set [`AC1A`](@ref) `Te`."""
---
> """Set AC1A Te."""
205c205
< """Set [`AC1A`](@ref) `Kf`."""
---
> """Set AC1A Kf."""
207c207
< """Set [`AC1A`](@ref) `Tf`."""
---
> """Set AC1A Tf."""
209c209
< """Set [`AC1A`](@ref) `Kc`."""
---
> """Set AC1A Kc."""
211c211
< """Set [`AC1A`](@ref) `Kd`."""
---
> """Set AC1A Kd."""
213c213
< """Set [`AC1A`](@ref) `Ke`."""
---
> """Set AC1A Ke."""
215c215
< """Set [`AC1A`](@ref) `E_sat`."""
---
> """Set AC1A E_sat."""
217c217
< """Set [`AC1A`](@ref) `Se`."""
---
> """Set AC1A Se."""
219c219
< """Set [`AC1A`](@ref) `Vr_lim`."""
---
> """Set AC1A Vr_lim."""
221c221
< """Set [`AC1A`](@ref) `V_ref`."""
---
> """Set AC1A V_ref."""
223c223
< """Set [`AC1A`](@ref) `saturation_coeffs`."""
---
> """Set AC1A saturation_coeffs."""
225c225
< """Set [`AC1A`](@ref) `ext`."""
---
> """Set AC1A ext."""
227c227
< """Set [`AC1A`](@ref) `states`."""
---
> """Set AC1A states."""
229c229
< """Set [`AC1A`](@ref) `n_states`."""
---
> """Set AC1A n_states."""
231c231
< """Set [`AC1A`](@ref) `states_types`."""
---
> """Set AC1A states_types."""
233c233
< """Set [`AC1A`](@ref) `internal`."""
---
> """Set AC1A internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AGC.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AGC.jl
81c81
< """Get [`AGC`](@ref) `available`."""
---
> """Get AGC available."""
83c83
< """Get [`AGC`](@ref) `bias`."""
---
> """Get AGC bias."""
85c85
< """Get [`AGC`](@ref) `K_p`."""
---
> """Get AGC K_p."""
87c87
< """Get [`AGC`](@ref) `K_i`."""
---
> """Get AGC K_i."""
89c89
< """Get [`AGC`](@ref) `K_d`."""
---
> """Get AGC K_d."""
91c91
< """Get [`AGC`](@ref) `delta_t`."""
---
> """Get AGC delta_t."""
93c93
< """Get [`AGC`](@ref) `area`."""
---
> """Get AGC area."""
95c95
< """Get [`AGC`](@ref) `initial_ace`."""
---
> """Get AGC initial_ace."""
97c97
< """Get [`AGC`](@ref) `ext`."""
---
> """Get AGC ext."""
99c99
< """Get [`AGC`](@ref) `internal`."""
---
> """Get AGC internal."""
104c104
< """Set [`AGC`](@ref) `available`."""
---
> """Set AGC available."""
106c106
< """Set [`AGC`](@ref) `bias`."""
---
> """Set AGC bias."""
108c108
< """Set [`AGC`](@ref) `K_p`."""
---
> """Set AGC K_p."""
110c110
< """Set [`AGC`](@ref) `K_i`."""
---
> """Set AGC K_i."""
112c112
< """Set [`AGC`](@ref) `K_d`."""
---
> """Set AGC K_d."""
114c114
< """Set [`AGC`](@ref) `delta_t`."""
---
> """Set AGC delta_t."""
116c116
< """Set [`AGC`](@ref) `area`."""
---
> """Set AGC area."""
118c118
< """Set [`AGC`](@ref) `initial_ace`."""
---
> """Set AGC initial_ace."""
120c120
< """Set [`AGC`](@ref) `ext`."""
---
> """Set AGC ext."""
122c122
< """Set [`AGC`](@ref) `internal`."""
---
> """Set AGC internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AVRFixed.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AVRFixed.jl
18,19c18,19
< - `Vf::Float64`: Fixed voltage field applied to the rotor winding, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `Vf::Float64`: Fixed voltage field applied to the rotor winding, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
59c59
< """Get [`AVRFixed`](@ref) `Vf`."""
---
> """Get AVRFixed Vf."""
61c61
< """Get [`AVRFixed`](@ref) `V_ref`."""
---
> """Get AVRFixed V_ref."""
63c63
< """Get [`AVRFixed`](@ref) `ext`."""
---
> """Get AVRFixed ext."""
65c65
< """Get [`AVRFixed`](@ref) `states`."""
---
> """Get AVRFixed states."""
67c67
< """Get [`AVRFixed`](@ref) `n_states`."""
---
> """Get AVRFixed n_states."""
69c69
< """Get [`AVRFixed`](@ref) `states_types`."""
---
> """Get AVRFixed states_types."""
71c71
< """Get [`AVRFixed`](@ref) `internal`."""
---
> """Get AVRFixed internal."""
74c74
< """Set [`AVRFixed`](@ref) `Vf`."""
---
> """Set AVRFixed Vf."""
76c76
< """Set [`AVRFixed`](@ref) `V_ref`."""
---
> """Set AVRFixed V_ref."""
78c78
< """Set [`AVRFixed`](@ref) `ext`."""
---
> """Set AVRFixed ext."""
80c80
< """Set [`AVRFixed`](@ref) `states`."""
---
> """Set AVRFixed states."""
82c82
< """Set [`AVRFixed`](@ref) `n_states`."""
---
> """Set AVRFixed n_states."""
84c84
< """Set [`AVRFixed`](@ref) `states_types`."""
---
> """Set AVRFixed states_types."""
86c86
< """Set [`AVRFixed`](@ref) `internal`."""
---
> """Set AVRFixed internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AVRSimple.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AVRSimple.jl
19,20c19,20
< - `Kv::Float64`: Proportional Gain, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `Kv::Float64`: Proportional Gain, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
62c62
< """Get [`AVRSimple`](@ref) `Kv`."""
---
> """Get AVRSimple Kv."""
64c64
< """Get [`AVRSimple`](@ref) `V_ref`."""
---
> """Get AVRSimple V_ref."""
66c66
< """Get [`AVRSimple`](@ref) `ext`."""
---
> """Get AVRSimple ext."""
68c68
< """Get [`AVRSimple`](@ref) `states`."""
---
> """Get AVRSimple states."""
70c70
< """Get [`AVRSimple`](@ref) `n_states`."""
---
> """Get AVRSimple n_states."""
72c72
< """Get [`AVRSimple`](@ref) `states_types`."""
---
> """Get AVRSimple states_types."""
74c74
< """Get [`AVRSimple`](@ref) `internal`."""
---
> """Get AVRSimple internal."""
77c77
< """Set [`AVRSimple`](@ref) `Kv`."""
---
> """Set AVRSimple Kv."""
79c79
< """Set [`AVRSimple`](@ref) `V_ref`."""
---
> """Set AVRSimple V_ref."""
81c81
< """Set [`AVRSimple`](@ref) `ext`."""
---
> """Set AVRSimple ext."""
83c83
< """Set [`AVRSimple`](@ref) `states`."""
---
> """Set AVRSimple states."""
85c85
< """Set [`AVRSimple`](@ref) `n_states`."""
---
> """Set AVRSimple n_states."""
87c87
< """Set [`AVRSimple`](@ref) `states_types`."""
---
> """Set AVRSimple states_types."""
89c89
< """Set [`AVRSimple`](@ref) `internal`."""
---
> """Set AVRSimple internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AVRTypeI.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AVRTypeI.jl
28,39c28,39
< - `Ka::Float64`: Amplifier Gain, validation range: `(0, nothing)`
< - `Ke::Float64`: Field circuit integral deviation, validation range: `(0, nothing)`
< - `Kf::Float64`: Stabilizer Gain in s * pu/pu, validation range: `(0, nothing)`
< - `Ta::Float64`: Amplifier Time Constant in s, validation range: `(0, nothing)`
< - `Te::Float64`: Field Circuit Time Constant in s, validation range: `(0, nothing)`
< - `Tf::Float64`: Stabilizer Time Constant in s, validation range: `(0, nothing)`
< - `Tr::Float64`: Voltage Measurement Time Constant in s, validation range: `(0, nothing)`
< - `Vr_max::Float64`: Maximum regulator voltage in pu, validation range: `(0, nothing)`
< - `Vr_min::Float64`: Minimum regulator voltage in pu, validation range: `(0, nothing)`
< - `Ae::Float64`: 1st ceiling coefficient, validation range: `(0, nothing)`
< - `Be::Float64`: 2nd ceiling coefficient, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `Ka::Float64`: Amplifier Gain, validation range: (0, nothing)
> - `Ke::Float64`: Field circuit integral deviation, validation range: (0, nothing)
> - `Kf::Float64`: Stabilizer Gain in s * pu/pu, validation range: (0, nothing)
> - `Ta::Float64`: Amplifier Time Constant in s, validation range: (0, nothing)
> - `Te::Float64`: Field Circuit Time Constant in s, validation range: (0, nothing)
> - `Tf::Float64`: Stabilizer Time Constant in s, validation range: (0, nothing)
> - `Tr::Float64`: Voltage Measurement Time Constant in s, validation range: (0, nothing)
> - `Vr_max::Float64`: Maximum regulator voltage in pu, validation range: (0, nothing)
> - `Vr_min::Float64`: Minimum regulator voltage in pu, validation range: (0, nothing)
> - `Ae::Float64`: 1st ceiling coefficient, validation range: (0, nothing)
> - `Be::Float64`: 2nd ceiling coefficient, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
117c117
< """Get [`AVRTypeI`](@ref) `Ka`."""
---
> """Get AVRTypeI Ka."""
119c119
< """Get [`AVRTypeI`](@ref) `Ke`."""
---
> """Get AVRTypeI Ke."""
121c121
< """Get [`AVRTypeI`](@ref) `Kf`."""
---
> """Get AVRTypeI Kf."""
123c123
< """Get [`AVRTypeI`](@ref) `Ta`."""
---
> """Get AVRTypeI Ta."""
125c125
< """Get [`AVRTypeI`](@ref) `Te`."""
---
> """Get AVRTypeI Te."""
127c127
< """Get [`AVRTypeI`](@ref) `Tf`."""
---
> """Get AVRTypeI Tf."""
129c129
< """Get [`AVRTypeI`](@ref) `Tr`."""
---
> """Get AVRTypeI Tr."""
131c131
< """Get [`AVRTypeI`](@ref) `Vr_max`."""
---
> """Get AVRTypeI Vr_max."""
133c133
< """Get [`AVRTypeI`](@ref) `Vr_min`."""
---
> """Get AVRTypeI Vr_min."""
135c135
< """Get [`AVRTypeI`](@ref) `Ae`."""
---
> """Get AVRTypeI Ae."""
137c137
< """Get [`AVRTypeI`](@ref) `Be`."""
---
> """Get AVRTypeI Be."""
139c139
< """Get [`AVRTypeI`](@ref) `V_ref`."""
---
> """Get AVRTypeI V_ref."""
141c141
< """Get [`AVRTypeI`](@ref) `ext`."""
---
> """Get AVRTypeI ext."""
143c143
< """Get [`AVRTypeI`](@ref) `states`."""
---
> """Get AVRTypeI states."""
145c145
< """Get [`AVRTypeI`](@ref) `n_states`."""
---
> """Get AVRTypeI n_states."""
147c147
< """Get [`AVRTypeI`](@ref) `states_types`."""
---
> """Get AVRTypeI states_types."""
149c149
< """Get [`AVRTypeI`](@ref) `internal`."""
---
> """Get AVRTypeI internal."""
152c152
< """Set [`AVRTypeI`](@ref) `Ka`."""
---
> """Set AVRTypeI Ka."""
154c154
< """Set [`AVRTypeI`](@ref) `Ke`."""
---
> """Set AVRTypeI Ke."""
156c156
< """Set [`AVRTypeI`](@ref) `Kf`."""
---
> """Set AVRTypeI Kf."""
158c158
< """Set [`AVRTypeI`](@ref) `Ta`."""
---
> """Set AVRTypeI Ta."""
160c160
< """Set [`AVRTypeI`](@ref) `Te`."""
---
> """Set AVRTypeI Te."""
162c162
< """Set [`AVRTypeI`](@ref) `Tf`."""
---
> """Set AVRTypeI Tf."""
164c164
< """Set [`AVRTypeI`](@ref) `Tr`."""
---
> """Set AVRTypeI Tr."""
166c166
< """Set [`AVRTypeI`](@ref) `Vr_max`."""
---
> """Set AVRTypeI Vr_max."""
168c168
< """Set [`AVRTypeI`](@ref) `Vr_min`."""
---
> """Set AVRTypeI Vr_min."""
170c170
< """Set [`AVRTypeI`](@ref) `Ae`."""
---
> """Set AVRTypeI Ae."""
172c172
< """Set [`AVRTypeI`](@ref) `Be`."""
---
> """Set AVRTypeI Be."""
174c174
< """Set [`AVRTypeI`](@ref) `V_ref`."""
---
> """Set AVRTypeI V_ref."""
176c176
< """Set [`AVRTypeI`](@ref) `ext`."""
---
> """Set AVRTypeI ext."""
178c178
< """Set [`AVRTypeI`](@ref) `states`."""
---
> """Set AVRTypeI states."""
180c180
< """Set [`AVRTypeI`](@ref) `n_states`."""
---
> """Set AVRTypeI n_states."""
182c182
< """Set [`AVRTypeI`](@ref) `states_types`."""
---
> """Set AVRTypeI states_types."""
184c184
< """Set [`AVRTypeI`](@ref) `internal`."""
---
> """Set AVRTypeI internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AVRTypeII.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AVRTypeII.jl
28,39c28,39
< - `K0::Float64`: Regulator Gain, validation range: `(0, nothing)`
< - `T1::Float64`: First Pole in s, validation range: `(0, nothing)`
< - `T2::Float64`: First zero in s, validation range: `(0, nothing)`
< - `T3::Float64`: First Pole in s, validation range: `(0, nothing)`
< - `T4::Float64`: First zero in s, validation range: `(0, nothing)`
< - `Te::Float64`: Field Circuit Time Constant in s, validation range: `(0, nothing)`
< - `Tr::Float64`: Voltage Measurement Time Constant in s, validation range: `(0, nothing)`
< - `Vr_max::Float64`: Maximum regulator voltage in pu, validation range: `(0, nothing)`
< - `Vr_min::Float64`: Minimum regulator voltage in pu, validation range: `(0, nothing)`
< - `Ae::Float64`: 1st ceiling coefficient, validation range: `(0, nothing)`
< - `Be::Float64`: 2nd ceiling coefficient, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `K0::Float64`: Regulator Gain, validation range: (0, nothing)
> - `T1::Float64`: First Pole in s, validation range: (0, nothing)
> - `T2::Float64`: First zero in s, validation range: (0, nothing)
> - `T3::Float64`: First Pole in s, validation range: (0, nothing)
> - `T4::Float64`: First zero in s, validation range: (0, nothing)
> - `Te::Float64`: Field Circuit Time Constant in s, validation range: (0, nothing)
> - `Tr::Float64`: Voltage Measurement Time Constant in s, validation range: (0, nothing)
> - `Vr_max::Float64`: Maximum regulator voltage in pu, validation range: (0, nothing)
> - `Vr_min::Float64`: Minimum regulator voltage in pu, validation range: (0, nothing)
> - `Ae::Float64`: 1st ceiling coefficient, validation range: (0, nothing)
> - `Be::Float64`: 2nd ceiling coefficient, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
117c117
< """Get [`AVRTypeII`](@ref) `K0`."""
---
> """Get AVRTypeII K0."""
119c119
< """Get [`AVRTypeII`](@ref) `T1`."""
---
> """Get AVRTypeII T1."""
121c121
< """Get [`AVRTypeII`](@ref) `T2`."""
---
> """Get AVRTypeII T2."""
123c123
< """Get [`AVRTypeII`](@ref) `T3`."""
---
> """Get AVRTypeII T3."""
125c125
< """Get [`AVRTypeII`](@ref) `T4`."""
---
> """Get AVRTypeII T4."""
127c127
< """Get [`AVRTypeII`](@ref) `Te`."""
---
> """Get AVRTypeII Te."""
129c129
< """Get [`AVRTypeII`](@ref) `Tr`."""
---
> """Get AVRTypeII Tr."""
131c131
< """Get [`AVRTypeII`](@ref) `Vr_max`."""
---
> """Get AVRTypeII Vr_max."""
133c133
< """Get [`AVRTypeII`](@ref) `Vr_min`."""
---
> """Get AVRTypeII Vr_min."""
135c135
< """Get [`AVRTypeII`](@ref) `Ae`."""
---
> """Get AVRTypeII Ae."""
137c137
< """Get [`AVRTypeII`](@ref) `Be`."""
---
> """Get AVRTypeII Be."""
139c139
< """Get [`AVRTypeII`](@ref) `V_ref`."""
---
> """Get AVRTypeII V_ref."""
141c141
< """Get [`AVRTypeII`](@ref) `ext`."""
---
> """Get AVRTypeII ext."""
143c143
< """Get [`AVRTypeII`](@ref) `states`."""
---
> """Get AVRTypeII states."""
145c145
< """Get [`AVRTypeII`](@ref) `n_states`."""
---
> """Get AVRTypeII n_states."""
147c147
< """Get [`AVRTypeII`](@ref) `states_types`."""
---
> """Get AVRTypeII states_types."""
149c149
< """Get [`AVRTypeII`](@ref) `internal`."""
---
> """Get AVRTypeII internal."""
152c152
< """Set [`AVRTypeII`](@ref) `K0`."""
---
> """Set AVRTypeII K0."""
154c154
< """Set [`AVRTypeII`](@ref) `T1`."""
---
> """Set AVRTypeII T1."""
156c156
< """Set [`AVRTypeII`](@ref) `T2`."""
---
> """Set AVRTypeII T2."""
158c158
< """Set [`AVRTypeII`](@ref) `T3`."""
---
> """Set AVRTypeII T3."""
160c160
< """Set [`AVRTypeII`](@ref) `T4`."""
---
> """Set AVRTypeII T4."""
162c162
< """Set [`AVRTypeII`](@ref) `Te`."""
---
> """Set AVRTypeII Te."""
164c164
< """Set [`AVRTypeII`](@ref) `Tr`."""
---
> """Set AVRTypeII Tr."""
166c166
< """Set [`AVRTypeII`](@ref) `Vr_max`."""
---
> """Set AVRTypeII Vr_max."""
168c168
< """Set [`AVRTypeII`](@ref) `Vr_min`."""
---
> """Set AVRTypeII Vr_min."""
170c170
< """Set [`AVRTypeII`](@ref) `Ae`."""
---
> """Set AVRTypeII Ae."""
172c172
< """Set [`AVRTypeII`](@ref) `Be`."""
---
> """Set AVRTypeII Be."""
174c174
< """Set [`AVRTypeII`](@ref) `V_ref`."""
---
> """Set AVRTypeII V_ref."""
176c176
< """Set [`AVRTypeII`](@ref) `ext`."""
---
> """Set AVRTypeII ext."""
178c178
< """Set [`AVRTypeII`](@ref) `states`."""
---
> """Set AVRTypeII states."""
180c180
< """Set [`AVRTypeII`](@ref) `n_states`."""
---
> """Set AVRTypeII n_states."""
182c182
< """Set [`AVRTypeII`](@ref) `states_types`."""
---
> """Set AVRTypeII states_types."""
184c184
< """Set [`AVRTypeII`](@ref) `internal`."""
---
> """Set AVRTypeII internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AndersonFouadMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AndersonFouadMachine.jl
26,36c26,36
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
112c112
< """Get [`AndersonFouadMachine`](@ref) `R`."""
---
> """Get AndersonFouadMachine R."""
114c114
< """Get [`AndersonFouadMachine`](@ref) `Xd`."""
---
> """Get AndersonFouadMachine Xd."""
116c116
< """Get [`AndersonFouadMachine`](@ref) `Xq`."""
---
> """Get AndersonFouadMachine Xq."""
118c118
< """Get [`AndersonFouadMachine`](@ref) `Xd_p`."""
---
> """Get AndersonFouadMachine Xd_p."""
120c120
< """Get [`AndersonFouadMachine`](@ref) `Xq_p`."""
---
> """Get AndersonFouadMachine Xq_p."""
122c122
< """Get [`AndersonFouadMachine`](@ref) `Xd_pp`."""
---
> """Get AndersonFouadMachine Xd_pp."""
124c124
< """Get [`AndersonFouadMachine`](@ref) `Xq_pp`."""
---
> """Get AndersonFouadMachine Xq_pp."""
126c126
< """Get [`AndersonFouadMachine`](@ref) `Td0_p`."""
---
> """Get AndersonFouadMachine Td0_p."""
128c128
< """Get [`AndersonFouadMachine`](@ref) `Tq0_p`."""
---
> """Get AndersonFouadMachine Tq0_p."""
130c130
< """Get [`AndersonFouadMachine`](@ref) `Td0_pp`."""
---
> """Get AndersonFouadMachine Td0_pp."""
132c132
< """Get [`AndersonFouadMachine`](@ref) `Tq0_pp`."""
---
> """Get AndersonFouadMachine Tq0_pp."""
134c134
< """Get [`AndersonFouadMachine`](@ref) `ext`."""
---
> """Get AndersonFouadMachine ext."""
136c136
< """Get [`AndersonFouadMachine`](@ref) `states`."""
---
> """Get AndersonFouadMachine states."""
138c138
< """Get [`AndersonFouadMachine`](@ref) `n_states`."""
---
> """Get AndersonFouadMachine n_states."""
140c140
< """Get [`AndersonFouadMachine`](@ref) `internal`."""
---
> """Get AndersonFouadMachine internal."""
143c143
< """Set [`AndersonFouadMachine`](@ref) `R`."""
---
> """Set AndersonFouadMachine R."""
145c145
< """Set [`AndersonFouadMachine`](@ref) `Xd`."""
---
> """Set AndersonFouadMachine Xd."""
147c147
< """Set [`AndersonFouadMachine`](@ref) `Xq`."""
---
> """Set AndersonFouadMachine Xq."""
149c149
< """Set [`AndersonFouadMachine`](@ref) `Xd_p`."""
---
> """Set AndersonFouadMachine Xd_p."""
151c151
< """Set [`AndersonFouadMachine`](@ref) `Xq_p`."""
---
> """Set AndersonFouadMachine Xq_p."""
153c153
< """Set [`AndersonFouadMachine`](@ref) `Xd_pp`."""
---
> """Set AndersonFouadMachine Xd_pp."""
155c155
< """Set [`AndersonFouadMachine`](@ref) `Xq_pp`."""
---
> """Set AndersonFouadMachine Xq_pp."""
157c157
< """Set [`AndersonFouadMachine`](@ref) `Td0_p`."""
---
> """Set AndersonFouadMachine Td0_p."""
159c159
< """Set [`AndersonFouadMachine`](@ref) `Tq0_p`."""
---
> """Set AndersonFouadMachine Tq0_p."""
161c161
< """Set [`AndersonFouadMachine`](@ref) `Td0_pp`."""
---
> """Set AndersonFouadMachine Td0_pp."""
163c163
< """Set [`AndersonFouadMachine`](@ref) `Tq0_pp`."""
---
> """Set AndersonFouadMachine Tq0_pp."""
165c165
< """Set [`AndersonFouadMachine`](@ref) `ext`."""
---
> """Set AndersonFouadMachine ext."""
167c167
< """Set [`AndersonFouadMachine`](@ref) `states`."""
---
> """Set AndersonFouadMachine states."""
169c169
< """Set [`AndersonFouadMachine`](@ref) `n_states`."""
---
> """Set AndersonFouadMachine n_states."""
171c171
< """Set [`AndersonFouadMachine`](@ref) `internal`."""
---
> """Set AndersonFouadMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Arc.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Arc.jl
43c43
< """Get [`Arc`](@ref) `from`."""
---
> """Get Arc from."""
45c45
< """Get [`Arc`](@ref) `to`."""
---
> """Get Arc to."""
47c47
< """Get [`Arc`](@ref) `internal`."""
---
> """Get Arc internal."""
50c50
< """Set [`Arc`](@ref) `from`."""
---
> """Set Arc from."""
52c52
< """Set [`Arc`](@ref) `to`."""
---
> """Set Arc to."""
54c54
< """Set [`Arc`](@ref) `internal`."""
---
> """Set Arc internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Area.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Area.jl
56c56
< """Get [`Area`](@ref) `peak_active_power`."""
---
> """Get Area peak_active_power."""
58c58
< """Get [`Area`](@ref) `peak_reactive_power`."""
---
> """Get Area peak_reactive_power."""
60c60
< """Get [`Area`](@ref) `load_response`."""
---
> """Get Area load_response."""
64c64
< """Get [`Area`](@ref) `internal`."""
---
> """Get Area internal."""
69c69
< """Set [`Area`](@ref) `peak_active_power`."""
---
> """Set Area peak_active_power."""
71c71
< """Set [`Area`](@ref) `peak_reactive_power`."""
---
> """Set Area peak_reactive_power."""
73c73
< """Set [`Area`](@ref) `load_response`."""
---
> """Set Area load_response."""
77c77
< """Set [`Area`](@ref) `internal`."""
---
> """Set Area internal."""
diff --strip-trailing-cr tmp-test-generated-structs/AverageConverter.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/AverageConverter.jl
16,17c16,17
< - `rated_voltage::Float64`: rated voltage, validation range: `(0, nothing)`
< - `rated_current::Float64`: rated VA, validation range: `(0, nothing)`
---
> - `rated_voltage::Float64`: rated voltage, validation range: (0, nothing)
> - `rated_current::Float64`: rated VA, validation range: (0, nothing)
50c50
< """Get [`AverageConverter`](@ref) `rated_voltage`."""
---
> """Get AverageConverter rated_voltage."""
52c52
< """Get [`AverageConverter`](@ref) `rated_current`."""
---
> """Get AverageConverter rated_current."""
54c54
< """Get [`AverageConverter`](@ref) `ext`."""
---
> """Get AverageConverter ext."""
56c56
< """Get [`AverageConverter`](@ref) `states`."""
---
> """Get AverageConverter states."""
58c58
< """Get [`AverageConverter`](@ref) `n_states`."""
---
> """Get AverageConverter n_states."""
61c61
< """Set [`AverageConverter`](@ref) `rated_voltage`."""
---
> """Set AverageConverter rated_voltage."""
63c63
< """Set [`AverageConverter`](@ref) `rated_current`."""
---
> """Set AverageConverter rated_current."""
65c65
< """Set [`AverageConverter`](@ref) `ext`."""
---
> """Set AverageConverter ext."""
67c67
< """Set [`AverageConverter`](@ref) `states`."""
---
> """Set AverageConverter states."""
69c69
< """Set [`AverageConverter`](@ref) `n_states`."""
---
> """Set AverageConverter n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/BaseMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/BaseMachine.jl
18,20c18,20
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Reactance after EMF in machine per unit, validation range: `(0, nothing)`
< - `eq_p::Float64`: Fixed EMF behind the impedance, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Reactance after EMF in machine per unit, validation range: (0, nothing)
> - `eq_p::Float64`: Fixed EMF behind the impedance, validation range: (0, nothing)
60c60
< """Get [`BaseMachine`](@ref) `R`."""
---
> """Get BaseMachine R."""
62c62
< """Get [`BaseMachine`](@ref) `Xd_p`."""
---
> """Get BaseMachine Xd_p."""
64c64
< """Get [`BaseMachine`](@ref) `eq_p`."""
---
> """Get BaseMachine eq_p."""
66c66
< """Get [`BaseMachine`](@ref) `ext`."""
---
> """Get BaseMachine ext."""
68c68
< """Get [`BaseMachine`](@ref) `states`."""
---
> """Get BaseMachine states."""
70c70
< """Get [`BaseMachine`](@ref) `n_states`."""
---
> """Get BaseMachine n_states."""
72c72
< """Get [`BaseMachine`](@ref) `internal`."""
---
> """Get BaseMachine internal."""
75c75
< """Set [`BaseMachine`](@ref) `R`."""
---
> """Set BaseMachine R."""
77c77
< """Set [`BaseMachine`](@ref) `Xd_p`."""
---
> """Set BaseMachine Xd_p."""
79c79
< """Set [`BaseMachine`](@ref) `eq_p`."""
---
> """Set BaseMachine eq_p."""
81c81
< """Set [`BaseMachine`](@ref) `ext`."""
---
> """Set BaseMachine ext."""
83c83
< """Set [`BaseMachine`](@ref) `states`."""
---
> """Set BaseMachine states."""
85c85
< """Set [`BaseMachine`](@ref) `n_states`."""
---
> """Set BaseMachine n_states."""
87c87
< """Set [`BaseMachine`](@ref) `internal`."""
---
> """Set BaseMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Bus.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Bus.jl
25,26c25,26
< - `angle::Union{Nothing, Float64}`: angle of the bus in radians, validation range: `(-1.571, 1.571)`, action if invalid: `error`
< - `magnitude::Union{Nothing, Float64}`: voltage as a multiple of basevoltage, validation range: `voltage_limits`, action if invalid: `warn`
---
> - `angle::Union{Nothing, Float64}`: angle of the bus in radians, validation range: (-1.571, 1.571), action if invalid: error
> - `magnitude::Union{Nothing, Float64}`: voltage as a multiple of basevoltage, validation range: voltage_limits, action if invalid: warn
28c28
< - `base_voltage::Union{Nothing, Float64}`: the base voltage in kV, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `base_voltage::Union{Nothing, Float64}`: the base voltage in kV, validation range: (0, nothing), action if invalid: error
99c99
< """Get [`Bus`](@ref) `number`."""
---
> """Get Bus number."""
103c103
< """Get [`Bus`](@ref) `bustype`."""
---
> """Get Bus bustype."""
105c105
< """Get [`Bus`](@ref) `angle`."""
---
> """Get Bus angle."""
107c107
< """Get [`Bus`](@ref) `magnitude`."""
---
> """Get Bus magnitude."""
109c109
< """Get [`Bus`](@ref) `voltage_limits`."""
---
> """Get Bus voltage_limits."""
111c111
< """Get [`Bus`](@ref) `base_voltage`."""
---
> """Get Bus base_voltage."""
113c113
< """Get [`Bus`](@ref) `area`."""
---
> """Get Bus area."""
115c115
< """Get [`Bus`](@ref) `load_zone`."""
---
> """Get Bus load_zone."""
117c117
< """Get [`Bus`](@ref) `ext`."""
---
> """Get Bus ext."""
119c119
< """Get [`Bus`](@ref) `internal`."""
---
> """Get Bus internal."""
122c122
< """Set [`Bus`](@ref) `number`."""
---
> """Set Bus number."""
126c126
< """Set [`Bus`](@ref) `bustype`."""
---
> """Set Bus bustype."""
128c128
< """Set [`Bus`](@ref) `angle`."""
---
> """Set Bus angle."""
130c130
< """Set [`Bus`](@ref) `magnitude`."""
---
> """Set Bus magnitude."""
132c132
< """Set [`Bus`](@ref) `voltage_limits`."""
---
> """Set Bus voltage_limits."""
134c134
< """Set [`Bus`](@ref) `base_voltage`."""
---
> """Set Bus base_voltage."""
136c136
< """Set [`Bus`](@ref) `area`."""
---
> """Set Bus area."""
138c138
< """Set [`Bus`](@ref) `load_zone`."""
---
> """Set Bus load_zone."""
140c140
< """Set [`Bus`](@ref) `ext`."""
---
> """Set Bus ext."""
142c142
< """Set [`Bus`](@ref) `internal`."""
---
> """Set Bus internal."""
diff --strip-trailing-cr tmp-test-generated-structs/CurrentControl.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/CurrentControl.jl
26,35c26,35
< - `kpv::Float64`: voltage controller proportional gain, validation range: `(0, nothing)`
< - `kiv::Float64`: voltage controller integral gain, validation range: `(0, nothing)`
< - `kffv::Float64`: Binary variable to enable feed-forward gain of voltage., validation range: `(0, nothing)`
< - `rv::Float64`: virtual resistance, validation range: `(0, nothing)`
< - `lv::Float64`: virtual inductance, validation range: `(0, nothing)`
< - `kpc::Float64`: current controller proportional gain, validation range: `(0, nothing)`
< - `kic::Float64`: current controller integral gain, validation range: `(0, nothing)`
< - `kffi::Float64`: Binary variable to enable feed-forward gain of current, validation range: `(0, nothing)`
< - `ωad::Float64`: active damping filter cutoff frequency (rad/sec), validation range: `(0, nothing)`
< - `kad::Float64`: active damping gain, validation range: `(0, nothing)`
---
> - `kpv::Float64`: voltage controller proportional gain, validation range: (0, nothing)
> - `kiv::Float64`: voltage controller integral gain, validation range: (0, nothing)
> - `kffv::Float64`: Binary variable to enable feed-forward gain of voltage., validation range: (0, nothing)
> - `rv::Float64`: virtual resistance, validation range: (0, nothing)
> - `lv::Float64`: virtual inductance, validation range: (0, nothing)
> - `kpc::Float64`: current controller proportional gain, validation range: (0, nothing)
> - `kic::Float64`: current controller integral gain, validation range: (0, nothing)
> - `kffi::Float64`: Binary variable to enable feed-forward gain of current, validation range: (0, nothing)
> - `ωad::Float64`: active damping filter cutoff frequency (rad/sec), validation range: (0, nothing)
> - `kad::Float64`: active damping gain, validation range: (0, nothing)
105c105
< """Get [`CurrentControl`](@ref) `kpv`."""
---
> """Get CurrentControl kpv."""
107c107
< """Get [`CurrentControl`](@ref) `kiv`."""
---
> """Get CurrentControl kiv."""
109c109
< """Get [`CurrentControl`](@ref) `kffv`."""
---
> """Get CurrentControl kffv."""
111c111
< """Get [`CurrentControl`](@ref) `rv`."""
---
> """Get CurrentControl rv."""
113c113
< """Get [`CurrentControl`](@ref) `lv`."""
---
> """Get CurrentControl lv."""
115c115
< """Get [`CurrentControl`](@ref) `kpc`."""
---
> """Get CurrentControl kpc."""
117c117
< """Get [`CurrentControl`](@ref) `kic`."""
---
> """Get CurrentControl kic."""
119c119
< """Get [`CurrentControl`](@ref) `kffi`."""
---
> """Get CurrentControl kffi."""
121c121
< """Get [`CurrentControl`](@ref) `ωad`."""
---
> """Get CurrentControl ωad."""
123c123
< """Get [`CurrentControl`](@ref) `kad`."""
---
> """Get CurrentControl kad."""
125c125
< """Get [`CurrentControl`](@ref) `ext`."""
---
> """Get CurrentControl ext."""
127c127
< """Get [`CurrentControl`](@ref) `states`."""
---
> """Get CurrentControl states."""
129c129
< """Get [`CurrentControl`](@ref) `n_states`."""
---
> """Get CurrentControl n_states."""
132c132
< """Set [`CurrentControl`](@ref) `kpv`."""
---
> """Set CurrentControl kpv."""
134c134
< """Set [`CurrentControl`](@ref) `kiv`."""
---
> """Set CurrentControl kiv."""
136c136
< """Set [`CurrentControl`](@ref) `kffv`."""
---
> """Set CurrentControl kffv."""
138c138
< """Set [`CurrentControl`](@ref) `rv`."""
---
> """Set CurrentControl rv."""
140c140
< """Set [`CurrentControl`](@ref) `lv`."""
---
> """Set CurrentControl lv."""
142c142
< """Set [`CurrentControl`](@ref) `kpc`."""
---
> """Set CurrentControl kpc."""
144c144
< """Set [`CurrentControl`](@ref) `kic`."""
---
> """Set CurrentControl kic."""
146c146
< """Set [`CurrentControl`](@ref) `kffi`."""
---
> """Set CurrentControl kffi."""
148c148
< """Set [`CurrentControl`](@ref) `ωad`."""
---
> """Set CurrentControl ωad."""
150c150
< """Set [`CurrentControl`](@ref) `kad`."""
---
> """Set CurrentControl kad."""
152c152
< """Set [`CurrentControl`](@ref) `ext`."""
---
> """Set CurrentControl ext."""
154c154
< """Set [`CurrentControl`](@ref) `states`."""
---
> """Set CurrentControl states."""
156c156
< """Set [`CurrentControl`](@ref) `n_states`."""
---
> """Set CurrentControl n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/FiveMassShaft.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/FiveMassShaft.jl
35,52c35,52
< - `H::Float64`: Rotor inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `H_hp::Float64`: High pressure turbine inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `H_ip::Float64`: Intermediate pressure turbine inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `H_lp::Float64`: Low pressure turbine inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `H_ex::Float64`:  Exciter inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `D::Float64`: Rotor natural damping in pu, validation range: `(0, nothing)`
< - `D_hp::Float64`: High pressure turbine natural damping in pu, validation range: `(0, nothing)`
< - `D_ip::Float64`: Intermediate pressure turbine natural damping in pu, validation range: `(0, nothing)`
< - `D_lp::Float64`: Low pressure turbine natural damping in pu, validation range: `(0, nothing)`
< - `D_ex::Float64`: Exciter natural damping in pu, validation range: `(0, nothing)`
< - `D_12::Float64`: High-Intermediate pressure turbine damping, validation range: `(0, nothing)`
< - `D_23::Float64`: Intermediate-Low pressure turbine damping, validation range: `(0, nothing)`
< - `D_34::Float64`: Low pressure turbine-Rotor damping, validation range: `(0, nothing)`
< - `D_45::Float64`: Rotor-Exciter damping, validation range: `(0, nothing)`
< - `K_hp::Float64`: High pressure turbine angle coefficient, validation range: `(0, nothing)`
< - `K_ip::Float64`: Intermediate pressure turbine angle coefficient, validation range: `(0, nothing)`
< - `K_lp::Float64`: Low pressure turbine angle coefficient, validation range: `(0, nothing)`
< - `K_ex::Float64`: Exciter angle coefficient, validation range: `(0, nothing)`
---
> - `H::Float64`: Rotor inertia constant in MWs/MVA, validation range: (0, nothing)
> - `H_hp::Float64`: High pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)
> - `H_ip::Float64`: Intermediate pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)
> - `H_lp::Float64`: Low pressure turbine inertia constant in MWs/MVA, validation range: (0, nothing)
> - `H_ex::Float64`:  Exciter inertia constant in MWs/MVA, validation range: (0, nothing)
> - `D::Float64`: Rotor natural damping in pu, validation range: (0, nothing)
> - `D_hp::Float64`: High pressure turbine natural damping in pu, validation range: (0, nothing)
> - `D_ip::Float64`: Intermediate pressure turbine natural damping in pu, validation range: (0, nothing)
> - `D_lp::Float64`: Low pressure turbine natural damping in pu, validation range: (0, nothing)
> - `D_ex::Float64`: Exciter natural damping in pu, validation range: (0, nothing)
> - `D_12::Float64`: High-Intermediate pressure turbine damping, validation range: (0, nothing)
> - `D_23::Float64`: Intermediate-Low pressure turbine damping, validation range: (0, nothing)
> - `D_34::Float64`: Low pressure turbine-Rotor damping, validation range: (0, nothing)
> - `D_45::Float64`: Rotor-Exciter damping, validation range: (0, nothing)
> - `K_hp::Float64`: High pressure turbine angle coefficient, validation range: (0, nothing)
> - `K_ip::Float64`: Intermediate pressure turbine angle coefficient, validation range: (0, nothing)
> - `K_lp::Float64`: Low pressure turbine angle coefficient, validation range: (0, nothing)
> - `K_ex::Float64`: Exciter angle coefficient, validation range: (0, nothing)
157c157
< """Get [`FiveMassShaft`](@ref) `H`."""
---
> """Get FiveMassShaft H."""
159c159
< """Get [`FiveMassShaft`](@ref) `H_hp`."""
---
> """Get FiveMassShaft H_hp."""
161c161
< """Get [`FiveMassShaft`](@ref) `H_ip`."""
---
> """Get FiveMassShaft H_ip."""
163c163
< """Get [`FiveMassShaft`](@ref) `H_lp`."""
---
> """Get FiveMassShaft H_lp."""
165c165
< """Get [`FiveMassShaft`](@ref) `H_ex`."""
---
> """Get FiveMassShaft H_ex."""
167c167
< """Get [`FiveMassShaft`](@ref) `D`."""
---
> """Get FiveMassShaft D."""
169c169
< """Get [`FiveMassShaft`](@ref) `D_hp`."""
---
> """Get FiveMassShaft D_hp."""
171c171
< """Get [`FiveMassShaft`](@ref) `D_ip`."""
---
> """Get FiveMassShaft D_ip."""
173c173
< """Get [`FiveMassShaft`](@ref) `D_lp`."""
---
> """Get FiveMassShaft D_lp."""
175c175
< """Get [`FiveMassShaft`](@ref) `D_ex`."""
---
> """Get FiveMassShaft D_ex."""
177c177
< """Get [`FiveMassShaft`](@ref) `D_12`."""
---
> """Get FiveMassShaft D_12."""
179c179
< """Get [`FiveMassShaft`](@ref) `D_23`."""
---
> """Get FiveMassShaft D_23."""
181c181
< """Get [`FiveMassShaft`](@ref) `D_34`."""
---
> """Get FiveMassShaft D_34."""
183c183
< """Get [`FiveMassShaft`](@ref) `D_45`."""
---
> """Get FiveMassShaft D_45."""
185c185
< """Get [`FiveMassShaft`](@ref) `K_hp`."""
---
> """Get FiveMassShaft K_hp."""
187c187
< """Get [`FiveMassShaft`](@ref) `K_ip`."""
---
> """Get FiveMassShaft K_ip."""
189c189
< """Get [`FiveMassShaft`](@ref) `K_lp`."""
---
> """Get FiveMassShaft K_lp."""
191c191
< """Get [`FiveMassShaft`](@ref) `K_ex`."""
---
> """Get FiveMassShaft K_ex."""
193c193
< """Get [`FiveMassShaft`](@ref) `ext`."""
---
> """Get FiveMassShaft ext."""
195c195
< """Get [`FiveMassShaft`](@ref) `states`."""
---
> """Get FiveMassShaft states."""
197c197
< """Get [`FiveMassShaft`](@ref) `n_states`."""
---
> """Get FiveMassShaft n_states."""
199c199
< """Get [`FiveMassShaft`](@ref) `internal`."""
---
> """Get FiveMassShaft internal."""
202c202
< """Set [`FiveMassShaft`](@ref) `H`."""
---
> """Set FiveMassShaft H."""
204c204
< """Set [`FiveMassShaft`](@ref) `H_hp`."""
---
> """Set FiveMassShaft H_hp."""
206c206
< """Set [`FiveMassShaft`](@ref) `H_ip`."""
---
> """Set FiveMassShaft H_ip."""
208c208
< """Set [`FiveMassShaft`](@ref) `H_lp`."""
---
> """Set FiveMassShaft H_lp."""
210c210
< """Set [`FiveMassShaft`](@ref) `H_ex`."""
---
> """Set FiveMassShaft H_ex."""
212c212
< """Set [`FiveMassShaft`](@ref) `D`."""
---
> """Set FiveMassShaft D."""
214c214
< """Set [`FiveMassShaft`](@ref) `D_hp`."""
---
> """Set FiveMassShaft D_hp."""
216c216
< """Set [`FiveMassShaft`](@ref) `D_ip`."""
---
> """Set FiveMassShaft D_ip."""
218c218
< """Set [`FiveMassShaft`](@ref) `D_lp`."""
---
> """Set FiveMassShaft D_lp."""
220c220
< """Set [`FiveMassShaft`](@ref) `D_ex`."""
---
> """Set FiveMassShaft D_ex."""
222c222
< """Set [`FiveMassShaft`](@ref) `D_12`."""
---
> """Set FiveMassShaft D_12."""
224c224
< """Set [`FiveMassShaft`](@ref) `D_23`."""
---
> """Set FiveMassShaft D_23."""
226c226
< """Set [`FiveMassShaft`](@ref) `D_34`."""
---
> """Set FiveMassShaft D_34."""
228c228
< """Set [`FiveMassShaft`](@ref) `D_45`."""
---
> """Set FiveMassShaft D_45."""
230c230
< """Set [`FiveMassShaft`](@ref) `K_hp`."""
---
> """Set FiveMassShaft K_hp."""
232c232
< """Set [`FiveMassShaft`](@ref) `K_ip`."""
---
> """Set FiveMassShaft K_ip."""
234c234
< """Set [`FiveMassShaft`](@ref) `K_lp`."""
---
> """Set FiveMassShaft K_lp."""
236c236
< """Set [`FiveMassShaft`](@ref) `K_ex`."""
---
> """Set FiveMassShaft K_ex."""
238c238
< """Set [`FiveMassShaft`](@ref) `ext`."""
---
> """Set FiveMassShaft ext."""
240c240
< """Set [`FiveMassShaft`](@ref) `states`."""
---
> """Set FiveMassShaft states."""
242c242
< """Set [`FiveMassShaft`](@ref) `n_states`."""
---
> """Set FiveMassShaft n_states."""
244c244
< """Set [`FiveMassShaft`](@ref) `internal`."""
---
> """Set FiveMassShaft internal."""
diff --strip-trailing-cr tmp-test-generated-structs/FixedAdmittance.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/FixedAdmittance.jl
66c66
< """Get [`FixedAdmittance`](@ref) `available`."""
---
> """Get FixedAdmittance available."""
68c68
< """Get [`FixedAdmittance`](@ref) `bus`."""
---
> """Get FixedAdmittance bus."""
70c70
< """Get [`FixedAdmittance`](@ref) `Y`."""
---
> """Get FixedAdmittance Y."""
72c72
< """Get [`FixedAdmittance`](@ref) `services`."""
---
> """Get FixedAdmittance services."""
74c74
< """Get [`FixedAdmittance`](@ref) `ext`."""
---
> """Get FixedAdmittance ext."""
78c78
< """Get [`FixedAdmittance`](@ref) `internal`."""
---
> """Get FixedAdmittance internal."""
83c83
< """Set [`FixedAdmittance`](@ref) `available`."""
---
> """Set FixedAdmittance available."""
85c85
< """Set [`FixedAdmittance`](@ref) `bus`."""
---
> """Set FixedAdmittance bus."""
87c87
< """Set [`FixedAdmittance`](@ref) `Y`."""
---
> """Set FixedAdmittance Y."""
89c89
< """Set [`FixedAdmittance`](@ref) `services`."""
---
> """Set FixedAdmittance services."""
91c91
< """Set [`FixedAdmittance`](@ref) `ext`."""
---
> """Set FixedAdmittance ext."""
95c95
< """Set [`FixedAdmittance`](@ref) `internal`."""
---
> """Set FixedAdmittance internal."""
diff --strip-trailing-cr tmp-test-generated-structs/FixedDCSource.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/FixedDCSource.jl
16c16
< - `voltage::Float64`: rated VA, validation range: `(0, nothing)`
---
> - `voltage::Float64`: rated VA, validation range: (0, nothing)
49c49
< """Get [`FixedDCSource`](@ref) `voltage`."""
---
> """Get FixedDCSource voltage."""
51c51
< """Get [`FixedDCSource`](@ref) `ext`."""
---
> """Get FixedDCSource ext."""
53c53
< """Get [`FixedDCSource`](@ref) `states`."""
---
> """Get FixedDCSource states."""
55c55
< """Get [`FixedDCSource`](@ref) `n_states`."""
---
> """Get FixedDCSource n_states."""
57c57
< """Get [`FixedDCSource`](@ref) `internal`."""
---
> """Get FixedDCSource internal."""
60c60
< """Set [`FixedDCSource`](@ref) `voltage`."""
---
> """Set FixedDCSource voltage."""
62c62
< """Set [`FixedDCSource`](@ref) `ext`."""
---
> """Set FixedDCSource ext."""
64c64
< """Set [`FixedDCSource`](@ref) `states`."""
---
> """Set FixedDCSource states."""
66c66
< """Set [`FixedDCSource`](@ref) `n_states`."""
---
> """Set FixedDCSource n_states."""
68c68
< """Set [`FixedDCSource`](@ref) `internal`."""
---
> """Set FixedDCSource internal."""
diff --strip-trailing-cr tmp-test-generated-structs/FullMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/FullMachine.jl
32,43c32,43
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `R_f::Float64`: Field rotor winding resistance in per unit, validation range: `(0, nothing)`
< - `R_1d::Float64`:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: `(0, nothing)`
< - `R_1q::Float64`: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: `(0, nothing)`
< - `L_d::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski)., validation range: `(0, nothing)`
< - `L_q::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur., validation range: `(0, nothing)`
< - `L_ad::Float64`: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: `(0, nothing)`
< - `L_aq::Float64`: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: `(0, nothing)`
< - `L_f1d::Float64`: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: `(0, nothing)`
< - `L_ff::Float64`: Field rotor winding inductance, in per unit, validation range: `(0, nothing)`
< - `L_1d::Float64`: Inductance of the d-axis rotor damping circuit, in per unit, validation range: `(0, nothing)`
< - `L_1q::Float64`: Inductance of the q-axis rotor damping circuit, in per unit, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `R_f::Float64`: Field rotor winding resistance in per unit, validation range: (0, nothing)
> - `R_1d::Float64`:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: (0, nothing)
> - `R_1q::Float64`: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: (0, nothing)
> - `L_d::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski)., validation range: (0, nothing)
> - `L_q::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur., validation range: (0, nothing)
> - `L_ad::Float64`: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: (0, nothing)
> - `L_aq::Float64`: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: (0, nothing)
> - `L_f1d::Float64`: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: (0, nothing)
> - `L_ff::Float64`: Field rotor winding inductance, in per unit, validation range: (0, nothing)
> - `L_1d::Float64`: Inductance of the d-axis rotor damping circuit, in per unit, validation range: (0, nothing)
> - `L_1q::Float64`: Inductance of the q-axis rotor damping circuit, in per unit, validation range: (0, nothing)
126c126
< """Get [`FullMachine`](@ref) `R`."""
---
> """Get FullMachine R."""
128c128
< """Get [`FullMachine`](@ref) `R_f`."""
---
> """Get FullMachine R_f."""
130c130
< """Get [`FullMachine`](@ref) `R_1d`."""
---
> """Get FullMachine R_1d."""
132c132
< """Get [`FullMachine`](@ref) `R_1q`."""
---
> """Get FullMachine R_1q."""
134c134
< """Get [`FullMachine`](@ref) `L_d`."""
---
> """Get FullMachine L_d."""
136c136
< """Get [`FullMachine`](@ref) `L_q`."""
---
> """Get FullMachine L_q."""
138c138
< """Get [`FullMachine`](@ref) `L_ad`."""
---
> """Get FullMachine L_ad."""
140c140
< """Get [`FullMachine`](@ref) `L_aq`."""
---
> """Get FullMachine L_aq."""
142c142
< """Get [`FullMachine`](@ref) `L_f1d`."""
---
> """Get FullMachine L_f1d."""
144c144
< """Get [`FullMachine`](@ref) `L_ff`."""
---
> """Get FullMachine L_ff."""
146c146
< """Get [`FullMachine`](@ref) `L_1d`."""
---
> """Get FullMachine L_1d."""
148c148
< """Get [`FullMachine`](@ref) `L_1q`."""
---
> """Get FullMachine L_1q."""
150c150
< """Get [`FullMachine`](@ref) `ext`."""
---
> """Get FullMachine ext."""
152c152
< """Get [`FullMachine`](@ref) `inv_d_fluxlink`."""
---
> """Get FullMachine inv_d_fluxlink."""
154c154
< """Get [`FullMachine`](@ref) `inv_q_fluxlink`."""
---
> """Get FullMachine inv_q_fluxlink."""
156c156
< """Get [`FullMachine`](@ref) `states`."""
---
> """Get FullMachine states."""
158c158
< """Get [`FullMachine`](@ref) `n_states`."""
---
> """Get FullMachine n_states."""
160c160
< """Get [`FullMachine`](@ref) `internal`."""
---
> """Get FullMachine internal."""
163c163
< """Set [`FullMachine`](@ref) `R`."""
---
> """Set FullMachine R."""
165c165
< """Set [`FullMachine`](@ref) `R_f`."""
---
> """Set FullMachine R_f."""
167c167
< """Set [`FullMachine`](@ref) `R_1d`."""
---
> """Set FullMachine R_1d."""
169c169
< """Set [`FullMachine`](@ref) `R_1q`."""
---
> """Set FullMachine R_1q."""
171c171
< """Set [`FullMachine`](@ref) `L_d`."""
---
> """Set FullMachine L_d."""
173c173
< """Set [`FullMachine`](@ref) `L_q`."""
---
> """Set FullMachine L_q."""
175c175
< """Set [`FullMachine`](@ref) `L_ad`."""
---
> """Set FullMachine L_ad."""
177c177
< """Set [`FullMachine`](@ref) `L_aq`."""
---
> """Set FullMachine L_aq."""
179c179
< """Set [`FullMachine`](@ref) `L_f1d`."""
---
> """Set FullMachine L_f1d."""
181c181
< """Set [`FullMachine`](@ref) `L_ff`."""
---
> """Set FullMachine L_ff."""
183c183
< """Set [`FullMachine`](@ref) `L_1d`."""
---
> """Set FullMachine L_1d."""
185c185
< """Set [`FullMachine`](@ref) `L_1q`."""
---
> """Set FullMachine L_1q."""
187c187
< """Set [`FullMachine`](@ref) `ext`."""
---
> """Set FullMachine ext."""
189c189
< """Set [`FullMachine`](@ref) `inv_d_fluxlink`."""
---
> """Set FullMachine inv_d_fluxlink."""
191c191
< """Set [`FullMachine`](@ref) `inv_q_fluxlink`."""
---
> """Set FullMachine inv_q_fluxlink."""
193c193
< """Set [`FullMachine`](@ref) `states`."""
---
> """Set FullMachine states."""
195c195
< """Set [`FullMachine`](@ref) `n_states`."""
---
> """Set FullMachine n_states."""
197c197
< """Set [`FullMachine`](@ref) `internal`."""
---
> """Set FullMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/GasTG.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/GasTG.jl
24,29c24,29
< - `R::Float64`: Speed droop parameter, validation range: `("eps()", nothing)`
< - `T1::Float64`: Governor time constant in s, validation range: `("eps()", nothing)`
< - `T2::Float64`: Combustion chamber time constant, validation range: `("eps()", nothing)`
< - `T3::Float64`: Load limit time constant (exhaust gas measurement time), validation range: `("eps()", nothing)`
< - `AT::Float64`: Ambient temperature load limit, validation range: `(0, nothing)`
< - `Kt::Float64`: Load limit feedback gain, validation range: `(0, nothing)`
---
> - `R::Float64`: Speed droop parameter, validation range: (&quot;eps()&quot;, nothing)
> - `T1::Float64`: Governor time constant in s, validation range: (&quot;eps()&quot;, nothing)
> - `T2::Float64`: Combustion chamber time constant, validation range: (&quot;eps()&quot;, nothing)
> - `T3::Float64`: Load limit time constant (exhaust gas measurement time), validation range: (&quot;eps()&quot;, nothing)
> - `AT::Float64`: Ambient temperature load limit, validation range: (0, nothing)
> - `Kt::Float64`: Load limit feedback gain, validation range: (0, nothing)
31,32c31,32
< - `D_turb::Float64`: Speed damping coefficient of gas turbine rotor, validation range: `(0, nothing)`
< - `Load_ref::Float64`: Reference Load Set-point, validation range: `(0, nothing)`
---
> - `D_turb::Float64`: Speed damping coefficient of gas turbine rotor, validation range: (0, nothing)
> - `Load_ref::Float64`: Reference Load Set-point, validation range: (0, nothing)
96c96
< """Get [`GasTG`](@ref) `R`."""
---
> """Get GasTG R."""
98c98
< """Get [`GasTG`](@ref) `T1`."""
---
> """Get GasTG T1."""
100c100
< """Get [`GasTG`](@ref) `T2`."""
---
> """Get GasTG T2."""
102c102
< """Get [`GasTG`](@ref) `T3`."""
---
> """Get GasTG T3."""
104c104
< """Get [`GasTG`](@ref) `AT`."""
---
> """Get GasTG AT."""
106c106
< """Get [`GasTG`](@ref) `Kt`."""
---
> """Get GasTG Kt."""
108c108
< """Get [`GasTG`](@ref) `V_lim`."""
---
> """Get GasTG V_lim."""
110c110
< """Get [`GasTG`](@ref) `D_turb`."""
---
> """Get GasTG D_turb."""
112c112
< """Get [`GasTG`](@ref) `Load_ref`."""
---
> """Get GasTG Load_ref."""
114c114
< """Get [`GasTG`](@ref) `ext`."""
---
> """Get GasTG ext."""
116c116
< """Get [`GasTG`](@ref) `states`."""
---
> """Get GasTG states."""
118c118
< """Get [`GasTG`](@ref) `n_states`."""
---
> """Get GasTG n_states."""
120c120
< """Get [`GasTG`](@ref) `internal`."""
---
> """Get GasTG internal."""
123c123
< """Set [`GasTG`](@ref) `R`."""
---
> """Set GasTG R."""
125c125
< """Set [`GasTG`](@ref) `T1`."""
---
> """Set GasTG T1."""
127c127
< """Set [`GasTG`](@ref) `T2`."""
---
> """Set GasTG T2."""
129c129
< """Set [`GasTG`](@ref) `T3`."""
---
> """Set GasTG T3."""
131c131
< """Set [`GasTG`](@ref) `AT`."""
---
> """Set GasTG AT."""
133c133
< """Set [`GasTG`](@ref) `Kt`."""
---
> """Set GasTG Kt."""
135c135
< """Set [`GasTG`](@ref) `V_lim`."""
---
> """Set GasTG V_lim."""
137c137
< """Set [`GasTG`](@ref) `D_turb`."""
---
> """Set GasTG D_turb."""
139c139
< """Set [`GasTG`](@ref) `Load_ref`."""
---
> """Set GasTG Load_ref."""
141c141
< """Set [`GasTG`](@ref) `ext`."""
---
> """Set GasTG ext."""
143c143
< """Set [`GasTG`](@ref) `states`."""
---
> """Set GasTG states."""
145c145
< """Set [`GasTG`](@ref) `n_states`."""
---
> """Set GasTG n_states."""
147c147
< """Set [`GasTG`](@ref) `internal`."""
---
> """Set GasTG internal."""
diff --strip-trailing-cr tmp-test-generated-structs/GenericBattery.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/GenericBattery.jl
34,35c34,35
< - `initial_energy::Float64`: State of Charge of the Battery p.u.-hr, validation range: `(0, nothing)`, action if invalid: `error`
< - `state_of_charge_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`: Maximum and Minimum storage capacity in p.u.-hr, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `initial_energy::Float64`: State of Charge of the Battery p.u.-hr, validation range: (0, nothing), action if invalid: error
> - `state_of_charge_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`: Maximum and Minimum storage capacity in p.u.-hr, validation range: (0, nothing), action if invalid: error
38,41c38,41
< - `input_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: `(0, nothing)`, action if invalid: `error`
< - `output_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: `(0, nothing)`, action if invalid: `error`
< - `efficiency::NamedTuple{(:in, :out), Tuple{Float64, Float64}}`, validation range: `(0, 1)`, action if invalid: `warn`
< - `reactive_power::Float64`, validation range: `reactive_power_limits`, action if invalid: `warn`
---
> - `input_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: (0, nothing), action if invalid: error
> - `output_active_power_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: (0, nothing), action if invalid: error
> - `efficiency::NamedTuple{(:in, :out), Tuple{Float64, Float64}}`, validation range: (0, 1), action if invalid: warn
> - `reactive_power::Float64`, validation range: reactive_power_limits, action if invalid: warn
43c43
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
114c114
< """Get [`GenericBattery`](@ref) `available`."""
---
> """Get GenericBattery available."""
116c116
< """Get [`GenericBattery`](@ref) `bus`."""
---
> """Get GenericBattery bus."""
118c118
< """Get [`GenericBattery`](@ref) `prime_mover`."""
---
> """Get GenericBattery prime_mover."""
120c120
< """Get [`GenericBattery`](@ref) `initial_energy`."""
---
> """Get GenericBattery initial_energy."""
122c122
< """Get [`GenericBattery`](@ref) `state_of_charge_limits`."""
---
> """Get GenericBattery state_of_charge_limits."""
124c124
< """Get [`GenericBattery`](@ref) `rating`."""
---
> """Get GenericBattery rating."""
126c126
< """Get [`GenericBattery`](@ref) `active_power`."""
---
> """Get GenericBattery active_power."""
128c128
< """Get [`GenericBattery`](@ref) `input_active_power_limits`."""
---
> """Get GenericBattery input_active_power_limits."""
130c130
< """Get [`GenericBattery`](@ref) `output_active_power_limits`."""
---
> """Get GenericBattery output_active_power_limits."""
132c132
< """Get [`GenericBattery`](@ref) `efficiency`."""
---
> """Get GenericBattery efficiency."""
134c134
< """Get [`GenericBattery`](@ref) `reactive_power`."""
---
> """Get GenericBattery reactive_power."""
136c136
< """Get [`GenericBattery`](@ref) `reactive_power_limits`."""
---
> """Get GenericBattery reactive_power_limits."""
138c138
< """Get [`GenericBattery`](@ref) `base_power`."""
---
> """Get GenericBattery base_power."""
140c140
< """Get [`GenericBattery`](@ref) `services`."""
---
> """Get GenericBattery services."""
142c142
< """Get [`GenericBattery`](@ref) `dynamic_injector`."""
---
> """Get GenericBattery dynamic_injector."""
144c144
< """Get [`GenericBattery`](@ref) `ext`."""
---
> """Get GenericBattery ext."""
148c148
< """Get [`GenericBattery`](@ref) `internal`."""
---
> """Get GenericBattery internal."""
153c153
< """Set [`GenericBattery`](@ref) `available`."""
---
> """Set GenericBattery available."""
155c155
< """Set [`GenericBattery`](@ref) `bus`."""
---
> """Set GenericBattery bus."""
157c157
< """Set [`GenericBattery`](@ref) `prime_mover`."""
---
> """Set GenericBattery prime_mover."""
159c159
< """Set [`GenericBattery`](@ref) `initial_energy`."""
---
> """Set GenericBattery initial_energy."""
161c161
< """Set [`GenericBattery`](@ref) `state_of_charge_limits`."""
---
> """Set GenericBattery state_of_charge_limits."""
163c163
< """Set [`GenericBattery`](@ref) `rating`."""
---
> """Set GenericBattery rating."""
165c165
< """Set [`GenericBattery`](@ref) `active_power`."""
---
> """Set GenericBattery active_power."""
167c167
< """Set [`GenericBattery`](@ref) `input_active_power_limits`."""
---
> """Set GenericBattery input_active_power_limits."""
169c169
< """Set [`GenericBattery`](@ref) `output_active_power_limits`."""
---
> """Set GenericBattery output_active_power_limits."""
171c171
< """Set [`GenericBattery`](@ref) `efficiency`."""
---
> """Set GenericBattery efficiency."""
173c173
< """Set [`GenericBattery`](@ref) `reactive_power`."""
---
> """Set GenericBattery reactive_power."""
175c175
< """Set [`GenericBattery`](@ref) `reactive_power_limits`."""
---
> """Set GenericBattery reactive_power_limits."""
177c177
< """Set [`GenericBattery`](@ref) `base_power`."""
---
> """Set GenericBattery base_power."""
179c179
< """Set [`GenericBattery`](@ref) `services`."""
---
> """Set GenericBattery services."""
181c181
< """Set [`GenericBattery`](@ref) `ext`."""
---
> """Set GenericBattery ext."""
185c185
< """Set [`GenericBattery`](@ref) `internal`."""
---
> """Set GenericBattery internal."""
diff --strip-trailing-cr tmp-test-generated-structs/HVDCLine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/HVDCLine.jl
85c85
< """Get [`HVDCLine`](@ref) `available`."""
---
> """Get HVDCLine available."""
87c87
< """Get [`HVDCLine`](@ref) `active_power_flow`."""
---
> """Get HVDCLine active_power_flow."""
89c89
< """Get [`HVDCLine`](@ref) `arc`."""
---
> """Get HVDCLine arc."""
91c91
< """Get [`HVDCLine`](@ref) `active_power_limits_from`."""
---
> """Get HVDCLine active_power_limits_from."""
93c93
< """Get [`HVDCLine`](@ref) `active_power_limits_to`."""
---
> """Get HVDCLine active_power_limits_to."""
95c95
< """Get [`HVDCLine`](@ref) `reactive_power_limits_from`."""
---
> """Get HVDCLine reactive_power_limits_from."""
97c97
< """Get [`HVDCLine`](@ref) `reactive_power_limits_to`."""
---
> """Get HVDCLine reactive_power_limits_to."""
99c99
< """Get [`HVDCLine`](@ref) `loss`."""
---
> """Get HVDCLine loss."""
101c101
< """Get [`HVDCLine`](@ref) `services`."""
---
> """Get HVDCLine services."""
103c103
< """Get [`HVDCLine`](@ref) `ext`."""
---
> """Get HVDCLine ext."""
107c107
< """Get [`HVDCLine`](@ref) `internal`."""
---
> """Get HVDCLine internal."""
112c112
< """Set [`HVDCLine`](@ref) `available`."""
---
> """Set HVDCLine available."""
114c114
< """Set [`HVDCLine`](@ref) `active_power_flow`."""
---
> """Set HVDCLine active_power_flow."""
116c116
< """Set [`HVDCLine`](@ref) `arc`."""
---
> """Set HVDCLine arc."""
118c118
< """Set [`HVDCLine`](@ref) `active_power_limits_from`."""
---
> """Set HVDCLine active_power_limits_from."""
120c120
< """Set [`HVDCLine`](@ref) `active_power_limits_to`."""
---
> """Set HVDCLine active_power_limits_to."""
122c122
< """Set [`HVDCLine`](@ref) `reactive_power_limits_from`."""
---
> """Set HVDCLine reactive_power_limits_from."""
124c124
< """Set [`HVDCLine`](@ref) `reactive_power_limits_to`."""
---
> """Set HVDCLine reactive_power_limits_to."""
126c126
< """Set [`HVDCLine`](@ref) `loss`."""
---
> """Set HVDCLine loss."""
128c128
< """Set [`HVDCLine`](@ref) `services`."""
---
> """Set HVDCLine services."""
130c130
< """Set [`HVDCLine`](@ref) `ext`."""
---
> """Set HVDCLine ext."""
134c134
< """Set [`HVDCLine`](@ref) `internal`."""
---
> """Set HVDCLine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/HydroDispatch.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/HydroDispatch.jl
32,33c32,33
< - `reactive_power::Float64`, validation range: `reactive_power_limits`, action if invalid: `warn`
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `reactive_power::Float64`, validation range: reactive_power_limits, action if invalid: warn
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
36,39c36,39
< - `reactive_power_limits::Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}`, action if invalid: `warn`
< - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: `(0, nothing)`, action if invalid: `error`
< - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: `(0, nothing)`, action if invalid: `error`
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `reactive_power_limits::Union{Nothing, NamedTuple{(:min, :max), Tuple{Float64, Float64}}}`, action if invalid: warn
> - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error
> - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
107c107
< """Get [`HydroDispatch`](@ref) `available`."""
---
> """Get HydroDispatch available."""
109c109
< """Get [`HydroDispatch`](@ref) `bus`."""
---
> """Get HydroDispatch bus."""
111c111
< """Get [`HydroDispatch`](@ref) `active_power`."""
---
> """Get HydroDispatch active_power."""
113c113
< """Get [`HydroDispatch`](@ref) `reactive_power`."""
---
> """Get HydroDispatch reactive_power."""
115c115
< """Get [`HydroDispatch`](@ref) `rating`."""
---
> """Get HydroDispatch rating."""
117c117
< """Get [`HydroDispatch`](@ref) `prime_mover`."""
---
> """Get HydroDispatch prime_mover."""
119c119
< """Get [`HydroDispatch`](@ref) `active_power_limits`."""
---
> """Get HydroDispatch active_power_limits."""
121c121
< """Get [`HydroDispatch`](@ref) `reactive_power_limits`."""
---
> """Get HydroDispatch reactive_power_limits."""
123c123
< """Get [`HydroDispatch`](@ref) `ramp_limits`."""
---
> """Get HydroDispatch ramp_limits."""
125c125
< """Get [`HydroDispatch`](@ref) `time_limits`."""
---
> """Get HydroDispatch time_limits."""
127c127
< """Get [`HydroDispatch`](@ref) `base_power`."""
---
> """Get HydroDispatch base_power."""
129c129
< """Get [`HydroDispatch`](@ref) `services`."""
---
> """Get HydroDispatch services."""
131c131
< """Get [`HydroDispatch`](@ref) `dynamic_injector`."""
---
> """Get HydroDispatch dynamic_injector."""
133c133
< """Get [`HydroDispatch`](@ref) `ext`."""
---
> """Get HydroDispatch ext."""
137c137
< """Get [`HydroDispatch`](@ref) `internal`."""
---
> """Get HydroDispatch internal."""
142c142
< """Set [`HydroDispatch`](@ref) `available`."""
---
> """Set HydroDispatch available."""
144c144
< """Set [`HydroDispatch`](@ref) `bus`."""
---
> """Set HydroDispatch bus."""
146c146
< """Set [`HydroDispatch`](@ref) `active_power`."""
---
> """Set HydroDispatch active_power."""
148c148
< """Set [`HydroDispatch`](@ref) `reactive_power`."""
---
> """Set HydroDispatch reactive_power."""
150c150
< """Set [`HydroDispatch`](@ref) `rating`."""
---
> """Set HydroDispatch rating."""
152c152
< """Set [`HydroDispatch`](@ref) `prime_mover`."""
---
> """Set HydroDispatch prime_mover."""
154c154
< """Set [`HydroDispatch`](@ref) `active_power_limits`."""
---
> """Set HydroDispatch active_power_limits."""
156c156
< """Set [`HydroDispatch`](@ref) `reactive_power_limits`."""
---
> """Set HydroDispatch reactive_power_limits."""
158c158
< """Set [`HydroDispatch`](@ref) `ramp_limits`."""
---
> """Set HydroDispatch ramp_limits."""
160c160
< """Set [`HydroDispatch`](@ref) `time_limits`."""
---
> """Set HydroDispatch time_limits."""
162c162
< """Set [`HydroDispatch`](@ref) `base_power`."""
---
> """Set HydroDispatch base_power."""
164c164
< """Set [`HydroDispatch`](@ref) `services`."""
---
> """Set HydroDispatch services."""
166c166
< """Set [`HydroDispatch`](@ref) `ext`."""
---
> """Set HydroDispatch ext."""
170c170
< """Set [`HydroDispatch`](@ref) `internal`."""
---
> """Set HydroDispatch internal."""
diff --strip-trailing-cr tmp-test-generated-structs/HydroEnergyReservoir.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/HydroEnergyReservoir.jl
38,39c38,39
< - `reactive_power::Float64`, validation range: `reactive_power_limits`, action if invalid: `warn`
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `reactive_power::Float64`, validation range: reactive_power_limits, action if invalid: warn
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
42,44c42,44
< - `reactive_power_limits::Union{Nothing, Min_Max}`, action if invalid: `warn`
< - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: `(0, nothing)`, action if invalid: `error`
< - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `reactive_power_limits::Union{Nothing, Min_Max}`, action if invalid: warn
> - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error
> - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error
46,49c46,49
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
< - `storage_capacity::Float64`: Maximum storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: `(0, nothing)`, action if invalid: `error`
< - `inflow::Float64`: Baseline inflow into the reservoir (units can be p.u. or m^3/hr), validation range: `(0, nothing)`, action if invalid: `error`
< - `initial_storage::Float64`: Initial storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: `(0, nothing)`, action if invalid: `error`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
> - `storage_capacity::Float64`: Maximum storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: (0, nothing), action if invalid: error
> - `inflow::Float64`: Baseline inflow into the reservoir (units can be p.u. or m^3/hr), validation range: (0, nothing), action if invalid: error
> - `initial_storage::Float64`: Initial storage capacity in the reservoir (units can be p.u-hr or m^3)., validation range: (0, nothing), action if invalid: error
137c137
< """Get [`HydroEnergyReservoir`](@ref) `available`."""
---
> """Get HydroEnergyReservoir available."""
139c139
< """Get [`HydroEnergyReservoir`](@ref) `bus`."""
---
> """Get HydroEnergyReservoir bus."""
141c141
< """Get [`HydroEnergyReservoir`](@ref) `active_power`."""
---
> """Get HydroEnergyReservoir active_power."""
143c143
< """Get [`HydroEnergyReservoir`](@ref) `reactive_power`."""
---
> """Get HydroEnergyReservoir reactive_power."""
145c145
< """Get [`HydroEnergyReservoir`](@ref) `rating`."""
---
> """Get HydroEnergyReservoir rating."""
147c147
< """Get [`HydroEnergyReservoir`](@ref) `prime_mover`."""
---
> """Get HydroEnergyReservoir prime_mover."""
149c149
< """Get [`HydroEnergyReservoir`](@ref) `active_power_limits`."""
---
> """Get HydroEnergyReservoir active_power_limits."""
151c151
< """Get [`HydroEnergyReservoir`](@ref) `reactive_power_limits`."""
---
> """Get HydroEnergyReservoir reactive_power_limits."""
153c153
< """Get [`HydroEnergyReservoir`](@ref) `ramp_limits`."""
---
> """Get HydroEnergyReservoir ramp_limits."""
155c155
< """Get [`HydroEnergyReservoir`](@ref) `time_limits`."""
---
> """Get HydroEnergyReservoir time_limits."""
157c157
< """Get [`HydroEnergyReservoir`](@ref) `operation_cost`."""
---
> """Get HydroEnergyReservoir operation_cost."""
159c159
< """Get [`HydroEnergyReservoir`](@ref) `base_power`."""
---
> """Get HydroEnergyReservoir base_power."""
161c161
< """Get [`HydroEnergyReservoir`](@ref) `storage_capacity`."""
---
> """Get HydroEnergyReservoir storage_capacity."""
163c163
< """Get [`HydroEnergyReservoir`](@ref) `inflow`."""
---
> """Get HydroEnergyReservoir inflow."""
165c165
< """Get [`HydroEnergyReservoir`](@ref) `initial_storage`."""
---
> """Get HydroEnergyReservoir initial_storage."""
167c167
< """Get [`HydroEnergyReservoir`](@ref) `storage_target`."""
---
> """Get HydroEnergyReservoir storage_target."""
169c169
< """Get [`HydroEnergyReservoir`](@ref) `conversion_factor`."""
---
> """Get HydroEnergyReservoir conversion_factor."""
171c171
< """Get [`HydroEnergyReservoir`](@ref) `services`."""
---
> """Get HydroEnergyReservoir services."""
173c173
< """Get [`HydroEnergyReservoir`](@ref) `dynamic_injector`."""
---
> """Get HydroEnergyReservoir dynamic_injector."""
175c175
< """Get [`HydroEnergyReservoir`](@ref) `ext`."""
---
> """Get HydroEnergyReservoir ext."""
179c179
< """Get [`HydroEnergyReservoir`](@ref) `internal`."""
---
> """Get HydroEnergyReservoir internal."""
184c184
< """Set [`HydroEnergyReservoir`](@ref) `available`."""
---
> """Set HydroEnergyReservoir available."""
186c186
< """Set [`HydroEnergyReservoir`](@ref) `bus`."""
---
> """Set HydroEnergyReservoir bus."""
188c188
< """Set [`HydroEnergyReservoir`](@ref) `active_power`."""
---
> """Set HydroEnergyReservoir active_power."""
190c190
< """Set [`HydroEnergyReservoir`](@ref) `reactive_power`."""
---
> """Set HydroEnergyReservoir reactive_power."""
192c192
< """Set [`HydroEnergyReservoir`](@ref) `rating`."""
---
> """Set HydroEnergyReservoir rating."""
194c194
< """Set [`HydroEnergyReservoir`](@ref) `prime_mover`."""
---
> """Set HydroEnergyReservoir prime_mover."""
196c196
< """Set [`HydroEnergyReservoir`](@ref) `active_power_limits`."""
---
> """Set HydroEnergyReservoir active_power_limits."""
198c198
< """Set [`HydroEnergyReservoir`](@ref) `reactive_power_limits`."""
---
> """Set HydroEnergyReservoir reactive_power_limits."""
200c200
< """Set [`HydroEnergyReservoir`](@ref) `ramp_limits`."""
---
> """Set HydroEnergyReservoir ramp_limits."""
202c202
< """Set [`HydroEnergyReservoir`](@ref) `time_limits`."""
---
> """Set HydroEnergyReservoir time_limits."""
204c204
< """Set [`HydroEnergyReservoir`](@ref) `operation_cost`."""
---
> """Set HydroEnergyReservoir operation_cost."""
206c206
< """Set [`HydroEnergyReservoir`](@ref) `base_power`."""
---
> """Set HydroEnergyReservoir base_power."""
208c208
< """Set [`HydroEnergyReservoir`](@ref) `storage_capacity`."""
---
> """Set HydroEnergyReservoir storage_capacity."""
210c210
< """Set [`HydroEnergyReservoir`](@ref) `inflow`."""
---
> """Set HydroEnergyReservoir inflow."""
212c212
< """Set [`HydroEnergyReservoir`](@ref) `initial_storage`."""
---
> """Set HydroEnergyReservoir initial_storage."""
214c214
< """Set [`HydroEnergyReservoir`](@ref) `storage_target`."""
---
> """Set HydroEnergyReservoir storage_target."""
216c216
< """Set [`HydroEnergyReservoir`](@ref) `conversion_factor`."""
---
> """Set HydroEnergyReservoir conversion_factor."""
218c218
< """Set [`HydroEnergyReservoir`](@ref) `services`."""
---
> """Set HydroEnergyReservoir services."""
220c220
< """Set [`HydroEnergyReservoir`](@ref) `ext`."""
---
> """Set HydroEnergyReservoir ext."""
224c224
< """Set [`HydroEnergyReservoir`](@ref) `internal`."""
---
> """Set HydroEnergyReservoir internal."""
diff --strip-trailing-cr tmp-test-generated-structs/InterruptibleLoad.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/InterruptibleLoad.jl
34c34
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
96c96
< """Get [`InterruptibleLoad`](@ref) `available`."""
---
> """Get InterruptibleLoad available."""
98c98
< """Get [`InterruptibleLoad`](@ref) `bus`."""
---
> """Get InterruptibleLoad bus."""
100c100
< """Get [`InterruptibleLoad`](@ref) `model`."""
---
> """Get InterruptibleLoad model."""
102c102
< """Get [`InterruptibleLoad`](@ref) `active_power`."""
---
> """Get InterruptibleLoad active_power."""
104c104
< """Get [`InterruptibleLoad`](@ref) `reactive_power`."""
---
> """Get InterruptibleLoad reactive_power."""
106c106
< """Get [`InterruptibleLoad`](@ref) `max_active_power`."""
---
> """Get InterruptibleLoad max_active_power."""
108c108
< """Get [`InterruptibleLoad`](@ref) `max_reactive_power`."""
---
> """Get InterruptibleLoad max_reactive_power."""
110c110
< """Get [`InterruptibleLoad`](@ref) `base_power`."""
---
> """Get InterruptibleLoad base_power."""
112c112
< """Get [`InterruptibleLoad`](@ref) `operation_cost`."""
---
> """Get InterruptibleLoad operation_cost."""
114c114
< """Get [`InterruptibleLoad`](@ref) `services`."""
---
> """Get InterruptibleLoad services."""
116c116
< """Get [`InterruptibleLoad`](@ref) `dynamic_injector`."""
---
> """Get InterruptibleLoad dynamic_injector."""
118c118
< """Get [`InterruptibleLoad`](@ref) `ext`."""
---
> """Get InterruptibleLoad ext."""
122c122
< """Get [`InterruptibleLoad`](@ref) `internal`."""
---
> """Get InterruptibleLoad internal."""
127c127
< """Set [`InterruptibleLoad`](@ref) `available`."""
---
> """Set InterruptibleLoad available."""
129c129
< """Set [`InterruptibleLoad`](@ref) `bus`."""
---
> """Set InterruptibleLoad bus."""
131c131
< """Set [`InterruptibleLoad`](@ref) `model`."""
---
> """Set InterruptibleLoad model."""
133c133
< """Set [`InterruptibleLoad`](@ref) `active_power`."""
---
> """Set InterruptibleLoad active_power."""
135c135
< """Set [`InterruptibleLoad`](@ref) `reactive_power`."""
---
> """Set InterruptibleLoad reactive_power."""
137c137
< """Set [`InterruptibleLoad`](@ref) `max_active_power`."""
---
> """Set InterruptibleLoad max_active_power."""
139c139
< """Set [`InterruptibleLoad`](@ref) `max_reactive_power`."""
---
> """Set InterruptibleLoad max_reactive_power."""
141c141
< """Set [`InterruptibleLoad`](@ref) `base_power`."""
---
> """Set InterruptibleLoad base_power."""
143c143
< """Set [`InterruptibleLoad`](@ref) `operation_cost`."""
---
> """Set InterruptibleLoad operation_cost."""
145c145
< """Set [`InterruptibleLoad`](@ref) `services`."""
---
> """Set InterruptibleLoad services."""
147c147
< """Set [`InterruptibleLoad`](@ref) `ext`."""
---
> """Set InterruptibleLoad ext."""
151c151
< """Set [`InterruptibleLoad`](@ref) `internal`."""
---
> """Set InterruptibleLoad internal."""
diff --strip-trailing-cr tmp-test-generated-structs/KauraPLL.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/KauraPLL.jl
19,21c19,21
< - `ω_lp::Float64`: PLL low-pass filter frequency (rad/sec), validation range: `(0, nothing)`
< - `kp_pll::Float64`: PLL proportional gain, validation range: `(0, nothing)`
< - `ki_pll::Float64`: PLL integral gain, validation range: `(0, nothing)`
---
> - `ω_lp::Float64`: PLL low-pass filter frequency (rad/sec), validation range: (0, nothing)
> - `kp_pll::Float64`: PLL proportional gain, validation range: (0, nothing)
> - `ki_pll::Float64`: PLL integral gain, validation range: (0, nothing)
66c66
< """Get [`KauraPLL`](@ref) `ω_lp`."""
---
> """Get KauraPLL ω_lp."""
68c68
< """Get [`KauraPLL`](@ref) `kp_pll`."""
---
> """Get KauraPLL kp_pll."""
70c70
< """Get [`KauraPLL`](@ref) `ki_pll`."""
---
> """Get KauraPLL ki_pll."""
72c72
< """Get [`KauraPLL`](@ref) `ext`."""
---
> """Get KauraPLL ext."""
74c74
< """Get [`KauraPLL`](@ref) `states`."""
---
> """Get KauraPLL states."""
76c76
< """Get [`KauraPLL`](@ref) `n_states`."""
---
> """Get KauraPLL n_states."""
79c79
< """Set [`KauraPLL`](@ref) `ω_lp`."""
---
> """Set KauraPLL ω_lp."""
81c81
< """Set [`KauraPLL`](@ref) `kp_pll`."""
---
> """Set KauraPLL kp_pll."""
83c83
< """Set [`KauraPLL`](@ref) `ki_pll`."""
---
> """Set KauraPLL ki_pll."""
85c85
< """Set [`KauraPLL`](@ref) `ext`."""
---
> """Set KauraPLL ext."""
87c87
< """Set [`KauraPLL`](@ref) `states`."""
---
> """Set KauraPLL states."""
89c89
< """Set [`KauraPLL`](@ref) `n_states`."""
---
> """Set KauraPLL n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/LCFilter.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/LCFilter.jl
17,19c17,19
< - `lf::Float64`: filter inductance, validation range: `(0, nothing)`
< - `rf::Float64`: filter resistance, validation range: `(0, nothing)`
< - `cf::Float64`: filter capacitance, validation range: `(0, nothing)`
---
> - `lf::Float64`: filter inductance, validation range: (0, nothing)
> - `rf::Float64`: filter resistance, validation range: (0, nothing)
> - `cf::Float64`: filter capacitance, validation range: (0, nothing)
60c60
< """Get [`LCFilter`](@ref) `lf`."""
---
> """Get LCFilter lf."""
62c62
< """Get [`LCFilter`](@ref) `rf`."""
---
> """Get LCFilter rf."""
64c64
< """Get [`LCFilter`](@ref) `cf`."""
---
> """Get LCFilter cf."""
66c66
< """Get [`LCFilter`](@ref) `ext`."""
---
> """Get LCFilter ext."""
68c68
< """Get [`LCFilter`](@ref) `states`."""
---
> """Get LCFilter states."""
70c70
< """Get [`LCFilter`](@ref) `n_states`."""
---
> """Get LCFilter n_states."""
73c73
< """Set [`LCFilter`](@ref) `lf`."""
---
> """Set LCFilter lf."""
75c75
< """Set [`LCFilter`](@ref) `rf`."""
---
> """Set LCFilter rf."""
77c77
< """Set [`LCFilter`](@ref) `cf`."""
---
> """Set LCFilter cf."""
79c79
< """Set [`LCFilter`](@ref) `ext`."""
---
> """Set LCFilter ext."""
81c81
< """Set [`LCFilter`](@ref) `states`."""
---
> """Set LCFilter states."""
83c83
< """Set [`LCFilter`](@ref) `n_states`."""
---
> """Set LCFilter n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/LCLFilter.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/LCLFilter.jl
19,23c19,23
< - `lf::Float64`: Series inductance in p.u. of converter filter, validation range: `(0, nothing)`
< - `rf::Float64`: Series resistance in p.u. of converter filter, validation range: `(0, nothing)`
< - `cf::Float64`: Shunt capacitance in p.u. of converter filter, validation range: `(0, nothing)`
< - `lg::Float64`: Series inductance in p.u. of converter filter to the grid, validation range: `(0, nothing)`
< - `rg::Float64`: Series resistance in p.u. of converter filter to the grid, validation range: `(0, nothing)`
---
> - `lf::Float64`: Series inductance in p.u. of converter filter, validation range: (0, nothing)
> - `rf::Float64`: Series resistance in p.u. of converter filter, validation range: (0, nothing)
> - `cf::Float64`: Shunt capacitance in p.u. of converter filter, validation range: (0, nothing)
> - `lg::Float64`: Series inductance in p.u. of converter filter to the grid, validation range: (0, nothing)
> - `rg::Float64`: Series resistance in p.u. of converter filter to the grid, validation range: (0, nothing)
78c78
< """Get [`LCLFilter`](@ref) `lf`."""
---
> """Get LCLFilter lf."""
80c80
< """Get [`LCLFilter`](@ref) `rf`."""
---
> """Get LCLFilter rf."""
82c82
< """Get [`LCLFilter`](@ref) `cf`."""
---
> """Get LCLFilter cf."""
84c84
< """Get [`LCLFilter`](@ref) `lg`."""
---
> """Get LCLFilter lg."""
86c86
< """Get [`LCLFilter`](@ref) `rg`."""
---
> """Get LCLFilter rg."""
88c88
< """Get [`LCLFilter`](@ref) `ext`."""
---
> """Get LCLFilter ext."""
90c90
< """Get [`LCLFilter`](@ref) `states`."""
---
> """Get LCLFilter states."""
92c92
< """Get [`LCLFilter`](@ref) `n_states`."""
---
> """Get LCLFilter n_states."""
95c95
< """Set [`LCLFilter`](@ref) `lf`."""
---
> """Set LCLFilter lf."""
97c97
< """Set [`LCLFilter`](@ref) `rf`."""
---
> """Set LCLFilter rf."""
99c99
< """Set [`LCLFilter`](@ref) `cf`."""
---
> """Set LCLFilter cf."""
101c101
< """Set [`LCLFilter`](@ref) `lg`."""
---
> """Set LCLFilter lg."""
103c103
< """Set [`LCLFilter`](@ref) `rg`."""
---
> """Set LCLFilter rg."""
105c105
< """Set [`LCLFilter`](@ref) `ext`."""
---
> """Set LCLFilter ext."""
107c107
< """Set [`LCLFilter`](@ref) `states`."""
---
> """Set LCLFilter states."""
109c109
< """Set [`LCLFilter`](@ref) `n_states`."""
---
> """Set LCLFilter n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/Line.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Line.jl
30,32c30,32
< - `r::Float64`: System per-unit value, validation range: `(0, 4)`, action if invalid: `error`
< - `x::Float64`: System per-unit value, validation range: `(0, 4)`, action if invalid: `error`
< - `b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}`: System per-unit value, validation range: `(0, 100)`, action if invalid: `error`
---
> - `r::Float64`: System per-unit value, validation range: (0, 4), action if invalid: error
> - `x::Float64`: System per-unit value, validation range: (0, 4), action if invalid: error
> - `b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}`: System per-unit value, validation range: (0, 100), action if invalid: error
34c34
< - `angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: `(-1.571, 1.571)`, action if invalid: `error`
---
> - `angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: (-1.571, 1.571), action if invalid: error
92c92
< """Get [`Line`](@ref) `available`."""
---
> """Get Line available."""
94c94
< """Get [`Line`](@ref) `active_power_flow`."""
---
> """Get Line active_power_flow."""
96c96
< """Get [`Line`](@ref) `reactive_power_flow`."""
---
> """Get Line reactive_power_flow."""
98c98
< """Get [`Line`](@ref) `arc`."""
---
> """Get Line arc."""
100c100
< """Get [`Line`](@ref) `r`."""
---
> """Get Line r."""
102c102
< """Get [`Line`](@ref) `x`."""
---
> """Get Line x."""
104c104
< """Get [`Line`](@ref) `b`."""
---
> """Get Line b."""
106c106
< """Get [`Line`](@ref) `rate`."""
---
> """Get Line rate."""
108c108
< """Get [`Line`](@ref) `angle_limits`."""
---
> """Get Line angle_limits."""
110c110
< """Get [`Line`](@ref) `services`."""
---
> """Get Line services."""
112c112
< """Get [`Line`](@ref) `ext`."""
---
> """Get Line ext."""
116c116
< """Get [`Line`](@ref) `internal`."""
---
> """Get Line internal."""
121c121
< """Set [`Line`](@ref) `available`."""
---
> """Set Line available."""
123c123
< """Set [`Line`](@ref) `active_power_flow`."""
---
> """Set Line active_power_flow."""
125c125
< """Set [`Line`](@ref) `reactive_power_flow`."""
---
> """Set Line reactive_power_flow."""
127c127
< """Set [`Line`](@ref) `arc`."""
---
> """Set Line arc."""
129c129
< """Set [`Line`](@ref) `r`."""
---
> """Set Line r."""
131c131
< """Set [`Line`](@ref) `x`."""
---
> """Set Line x."""
133c133
< """Set [`Line`](@ref) `b`."""
---
> """Set Line b."""
135c135
< """Set [`Line`](@ref) `rate`."""
---
> """Set Line rate."""
137c137
< """Set [`Line`](@ref) `angle_limits`."""
---
> """Set Line angle_limits."""
139c139
< """Set [`Line`](@ref) `services`."""
---
> """Set Line services."""
141c141
< """Set [`Line`](@ref) `ext`."""
---
> """Set Line ext."""
145c145
< """Set [`Line`](@ref) `internal`."""
---
> """Set Line internal."""
diff --strip-trailing-cr tmp-test-generated-structs/LoadZone.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/LoadZone.jl
52c52
< """Get [`LoadZone`](@ref) `peak_active_power`."""
---
> """Get LoadZone peak_active_power."""
54c54
< """Get [`LoadZone`](@ref) `peak_reactive_power`."""
---
> """Get LoadZone peak_reactive_power."""
58c58
< """Get [`LoadZone`](@ref) `internal`."""
---
> """Get LoadZone internal."""
63c63
< """Set [`LoadZone`](@ref) `peak_active_power`."""
---
> """Set LoadZone peak_active_power."""
65c65
< """Set [`LoadZone`](@ref) `peak_reactive_power`."""
---
> """Set LoadZone peak_reactive_power."""
69c69
< """Set [`LoadZone`](@ref) `internal`."""
---
> """Set LoadZone internal."""
diff --strip-trailing-cr tmp-test-generated-structs/MarconatoMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/MarconatoMachine.jl
29,40c29,40
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
< - `T_AA::Float64`: Time constant of d-axis additional leakage, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
> - `T_AA::Float64`: Time constant of d-axis additional leakage, validation range: (0, nothing)
123c123
< """Get [`MarconatoMachine`](@ref) `R`."""
---
> """Get MarconatoMachine R."""
125c125
< """Get [`MarconatoMachine`](@ref) `Xd`."""
---
> """Get MarconatoMachine Xd."""
127c127
< """Get [`MarconatoMachine`](@ref) `Xq`."""
---
> """Get MarconatoMachine Xq."""
129c129
< """Get [`MarconatoMachine`](@ref) `Xd_p`."""
---
> """Get MarconatoMachine Xd_p."""
131c131
< """Get [`MarconatoMachine`](@ref) `Xq_p`."""
---
> """Get MarconatoMachine Xq_p."""
133c133
< """Get [`MarconatoMachine`](@ref) `Xd_pp`."""
---
> """Get MarconatoMachine Xd_pp."""
135c135
< """Get [`MarconatoMachine`](@ref) `Xq_pp`."""
---
> """Get MarconatoMachine Xq_pp."""
137c137
< """Get [`MarconatoMachine`](@ref) `Td0_p`."""
---
> """Get MarconatoMachine Td0_p."""
139c139
< """Get [`MarconatoMachine`](@ref) `Tq0_p`."""
---
> """Get MarconatoMachine Tq0_p."""
141c141
< """Get [`MarconatoMachine`](@ref) `Td0_pp`."""
---
> """Get MarconatoMachine Td0_pp."""
143c143
< """Get [`MarconatoMachine`](@ref) `Tq0_pp`."""
---
> """Get MarconatoMachine Tq0_pp."""
145c145
< """Get [`MarconatoMachine`](@ref) `T_AA`."""
---
> """Get MarconatoMachine T_AA."""
147c147
< """Get [`MarconatoMachine`](@ref) `ext`."""
---
> """Get MarconatoMachine ext."""
149c149
< """Get [`MarconatoMachine`](@ref) `γd`."""
---
> """Get MarconatoMachine γd."""
151c151
< """Get [`MarconatoMachine`](@ref) `γq`."""
---
> """Get MarconatoMachine γq."""
153c153
< """Get [`MarconatoMachine`](@ref) `states`."""
---
> """Get MarconatoMachine states."""
155c155
< """Get [`MarconatoMachine`](@ref) `n_states`."""
---
> """Get MarconatoMachine n_states."""
157c157
< """Get [`MarconatoMachine`](@ref) `internal`."""
---
> """Get MarconatoMachine internal."""
160c160
< """Set [`MarconatoMachine`](@ref) `R`."""
---
> """Set MarconatoMachine R."""
162c162
< """Set [`MarconatoMachine`](@ref) `Xd`."""
---
> """Set MarconatoMachine Xd."""
164c164
< """Set [`MarconatoMachine`](@ref) `Xq`."""
---
> """Set MarconatoMachine Xq."""
166c166
< """Set [`MarconatoMachine`](@ref) `Xd_p`."""
---
> """Set MarconatoMachine Xd_p."""
168c168
< """Set [`MarconatoMachine`](@ref) `Xq_p`."""
---
> """Set MarconatoMachine Xq_p."""
170c170
< """Set [`MarconatoMachine`](@ref) `Xd_pp`."""
---
> """Set MarconatoMachine Xd_pp."""
172c172
< """Set [`MarconatoMachine`](@ref) `Xq_pp`."""
---
> """Set MarconatoMachine Xq_pp."""
174c174
< """Set [`MarconatoMachine`](@ref) `Td0_p`."""
---
> """Set MarconatoMachine Td0_p."""
176c176
< """Set [`MarconatoMachine`](@ref) `Tq0_p`."""
---
> """Set MarconatoMachine Tq0_p."""
178c178
< """Set [`MarconatoMachine`](@ref) `Td0_pp`."""
---
> """Set MarconatoMachine Td0_pp."""
180c180
< """Set [`MarconatoMachine`](@ref) `Tq0_pp`."""
---
> """Set MarconatoMachine Tq0_pp."""
182c182
< """Set [`MarconatoMachine`](@ref) `T_AA`."""
---
> """Set MarconatoMachine T_AA."""
184c184
< """Set [`MarconatoMachine`](@ref) `ext`."""
---
> """Set MarconatoMachine ext."""
186c186
< """Set [`MarconatoMachine`](@ref) `γd`."""
---
> """Set MarconatoMachine γd."""
188c188
< """Set [`MarconatoMachine`](@ref) `γq`."""
---
> """Set MarconatoMachine γq."""
190c190
< """Set [`MarconatoMachine`](@ref) `states`."""
---
> """Set MarconatoMachine states."""
192c192
< """Set [`MarconatoMachine`](@ref) `n_states`."""
---
> """Set MarconatoMachine n_states."""
194c194
< """Set [`MarconatoMachine`](@ref) `internal`."""
---
> """Set MarconatoMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ModifiedAC1A.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ModifiedAC1A.jl
32,36c32,36
< - `Tr::Float64`: Regulator input filter time constant in s, validation range: `(0, nothing)`
< - `Tb::Float64`: Regulator denominator (lag) time constant in s, validation range: `(0, nothing)`
< - `Tc::Float64`: Regulator numerator (lead) time constant in s, validation range: `(0, nothing)`
< - `Ka::Float64`: Regulator output gain, validation range: `(0, nothing)`
< - `Ta::Float64`: Regulator output time constant in s, validation range: `(0, nothing)`
---
> - `Tr::Float64`: Regulator input filter time constant in s, validation range: (0, nothing)
> - `Tb::Float64`: Regulator denominator (lag) time constant in s, validation range: (0, nothing)
> - `Tc::Float64`: Regulator numerator (lead) time constant in s, validation range: (0, nothing)
> - `Ka::Float64`: Regulator output gain, validation range: (0, nothing)
> - `Ta::Float64`: Regulator output time constant in s, validation range: (0, nothing)
38,43c38,43
< - `Te::Float64`: Exciter field time constant in s, validation range: `("eps()", nothing)`
< - `Kf::Float64`: Rate feedback excitation system stabilizer gain, validation range: `(0, nothing)`
< - `Tf::Float64`: Rate feedback time constant, validation range: `("eps()", nothing)`
< - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: `(0, nothing)`
< - `Kd::Float64`: Demagnetizing factor, function of exciter alternator reactances, validation range: `(0, nothing)`
< - `Ke::Float64`: Exciter field proportional constant, validation range: `(0, nothing)`
---
> - `Te::Float64`: Exciter field time constant in s, validation range: (&quot;eps()&quot;, nothing)
> - `Kf::Float64`: Rate feedback excitation system stabilizer gain, validation range: (0, nothing)
> - `Tf::Float64`: Rate feedback time constant, validation range: (&quot;eps()&quot;, nothing)
> - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: (0, nothing)
> - `Kd::Float64`: Demagnetizing factor, function of exciter alternator reactances, validation range: (0, nothing)
> - `Ke::Float64`: Exciter field proportional constant, validation range: (0, nothing)
46c46
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
138c138
< """Get [`ModifiedAC1A`](@ref) `Tr`."""
---
> """Get ModifiedAC1A Tr."""
140c140
< """Get [`ModifiedAC1A`](@ref) `Tb`."""
---
> """Get ModifiedAC1A Tb."""
142c142
< """Get [`ModifiedAC1A`](@ref) `Tc`."""
---
> """Get ModifiedAC1A Tc."""
144c144
< """Get [`ModifiedAC1A`](@ref) `Ka`."""
---
> """Get ModifiedAC1A Ka."""
146c146
< """Get [`ModifiedAC1A`](@ref) `Ta`."""
---
> """Get ModifiedAC1A Ta."""
148c148
< """Get [`ModifiedAC1A`](@ref) `Vr_lim`."""
---
> """Get ModifiedAC1A Vr_lim."""
150c150
< """Get [`ModifiedAC1A`](@ref) `Te`."""
---
> """Get ModifiedAC1A Te."""
152c152
< """Get [`ModifiedAC1A`](@ref) `Kf`."""
---
> """Get ModifiedAC1A Kf."""
154c154
< """Get [`ModifiedAC1A`](@ref) `Tf`."""
---
> """Get ModifiedAC1A Tf."""
156c156
< """Get [`ModifiedAC1A`](@ref) `Kc`."""
---
> """Get ModifiedAC1A Kc."""
158c158
< """Get [`ModifiedAC1A`](@ref) `Kd`."""
---
> """Get ModifiedAC1A Kd."""
160c160
< """Get [`ModifiedAC1A`](@ref) `Ke`."""
---
> """Get ModifiedAC1A Ke."""
162c162
< """Get [`ModifiedAC1A`](@ref) `E_sat`."""
---
> """Get ModifiedAC1A E_sat."""
164c164
< """Get [`ModifiedAC1A`](@ref) `Se`."""
---
> """Get ModifiedAC1A Se."""
166c166
< """Get [`ModifiedAC1A`](@ref) `V_ref`."""
---
> """Get ModifiedAC1A V_ref."""
168c168
< """Get [`ModifiedAC1A`](@ref) `saturation_coeffs`."""
---
> """Get ModifiedAC1A saturation_coeffs."""
170c170
< """Get [`ModifiedAC1A`](@ref) `ext`."""
---
> """Get ModifiedAC1A ext."""
172c172
< """Get [`ModifiedAC1A`](@ref) `states`."""
---
> """Get ModifiedAC1A states."""
174c174
< """Get [`ModifiedAC1A`](@ref) `n_states`."""
---
> """Get ModifiedAC1A n_states."""
176c176
< """Get [`ModifiedAC1A`](@ref) `states_types`."""
---
> """Get ModifiedAC1A states_types."""
178c178
< """Get [`ModifiedAC1A`](@ref) `internal`."""
---
> """Get ModifiedAC1A internal."""
181c181
< """Set [`ModifiedAC1A`](@ref) `Tr`."""
---
> """Set ModifiedAC1A Tr."""
183c183
< """Set [`ModifiedAC1A`](@ref) `Tb`."""
---
> """Set ModifiedAC1A Tb."""
185c185
< """Set [`ModifiedAC1A`](@ref) `Tc`."""
---
> """Set ModifiedAC1A Tc."""
187c187
< """Set [`ModifiedAC1A`](@ref) `Ka`."""
---
> """Set ModifiedAC1A Ka."""
189c189
< """Set [`ModifiedAC1A`](@ref) `Ta`."""
---
> """Set ModifiedAC1A Ta."""
191c191
< """Set [`ModifiedAC1A`](@ref) `Vr_lim`."""
---
> """Set ModifiedAC1A Vr_lim."""
193c193
< """Set [`ModifiedAC1A`](@ref) `Te`."""
---
> """Set ModifiedAC1A Te."""
195c195
< """Set [`ModifiedAC1A`](@ref) `Kf`."""
---
> """Set ModifiedAC1A Kf."""
197c197
< """Set [`ModifiedAC1A`](@ref) `Tf`."""
---
> """Set ModifiedAC1A Tf."""
199c199
< """Set [`ModifiedAC1A`](@ref) `Kc`."""
---
> """Set ModifiedAC1A Kc."""
201c201
< """Set [`ModifiedAC1A`](@ref) `Kd`."""
---
> """Set ModifiedAC1A Kd."""
203c203
< """Set [`ModifiedAC1A`](@ref) `Ke`."""
---
> """Set ModifiedAC1A Ke."""
205c205
< """Set [`ModifiedAC1A`](@ref) `E_sat`."""
---
> """Set ModifiedAC1A E_sat."""
207c207
< """Set [`ModifiedAC1A`](@ref) `Se`."""
---
> """Set ModifiedAC1A Se."""
209c209
< """Set [`ModifiedAC1A`](@ref) `V_ref`."""
---
> """Set ModifiedAC1A V_ref."""
211c211
< """Set [`ModifiedAC1A`](@ref) `saturation_coeffs`."""
---
> """Set ModifiedAC1A saturation_coeffs."""
213c213
< """Set [`ModifiedAC1A`](@ref) `ext`."""
---
> """Set ModifiedAC1A ext."""
215c215
< """Set [`ModifiedAC1A`](@ref) `states`."""
---
> """Set ModifiedAC1A states."""
217c217
< """Set [`ModifiedAC1A`](@ref) `n_states`."""
---
> """Set ModifiedAC1A n_states."""
219c219
< """Set [`ModifiedAC1A`](@ref) `states_types`."""
---
> """Set ModifiedAC1A states_types."""
221c221
< """Set [`ModifiedAC1A`](@ref) `internal`."""
---
> """Set ModifiedAC1A internal."""
diff --strip-trailing-cr tmp-test-generated-structs/MonitoredLine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/MonitoredLine.jl
31,33c31,33
< - `r::Float64`: System per-unit value, validation range: `(0, 4)`, action if invalid: `error`
< - `x::Float64`: System per-unit value, validation range: `(0, 4)`, action if invalid: `error`
< - `b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}`: System per-unit value, validation range: `(0, 2)`, action if invalid: `error`
---
> - `r::Float64`: System per-unit value, validation range: (0, 4), action if invalid: error
> - `x::Float64`: System per-unit value, validation range: (0, 4), action if invalid: error
> - `b::NamedTuple{(:from, :to), Tuple{Float64, Float64}}`: System per-unit value, validation range: (0, 2), action if invalid: error
36c36
< - `angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: `(-1.571, 1.571)`, action if invalid: `error`
---
> - `angle_limits::NamedTuple{(:min, :max), Tuple{Float64, Float64}}`, validation range: (-1.571, 1.571), action if invalid: error
98c98
< """Get [`MonitoredLine`](@ref) `available`."""
---
> """Get MonitoredLine available."""
100c100
< """Get [`MonitoredLine`](@ref) `active_power_flow`."""
---
> """Get MonitoredLine active_power_flow."""
102c102
< """Get [`MonitoredLine`](@ref) `reactive_power_flow`."""
---
> """Get MonitoredLine reactive_power_flow."""
104c104
< """Get [`MonitoredLine`](@ref) `arc`."""
---
> """Get MonitoredLine arc."""
106c106
< """Get [`MonitoredLine`](@ref) `r`."""
---
> """Get MonitoredLine r."""
108c108
< """Get [`MonitoredLine`](@ref) `x`."""
---
> """Get MonitoredLine x."""
110c110
< """Get [`MonitoredLine`](@ref) `b`."""
---
> """Get MonitoredLine b."""
112c112
< """Get [`MonitoredLine`](@ref) `flow_limits`."""
---
> """Get MonitoredLine flow_limits."""
114c114
< """Get [`MonitoredLine`](@ref) `rate`."""
---
> """Get MonitoredLine rate."""
116c116
< """Get [`MonitoredLine`](@ref) `angle_limits`."""
---
> """Get MonitoredLine angle_limits."""
118c118
< """Get [`MonitoredLine`](@ref) `services`."""
---
> """Get MonitoredLine services."""
120c120
< """Get [`MonitoredLine`](@ref) `ext`."""
---
> """Get MonitoredLine ext."""
124c124
< """Get [`MonitoredLine`](@ref) `internal`."""
---
> """Get MonitoredLine internal."""
129c129
< """Set [`MonitoredLine`](@ref) `available`."""
---
> """Set MonitoredLine available."""
131c131
< """Set [`MonitoredLine`](@ref) `active_power_flow`."""
---
> """Set MonitoredLine active_power_flow."""
133c133
< """Set [`MonitoredLine`](@ref) `reactive_power_flow`."""
---
> """Set MonitoredLine reactive_power_flow."""
135c135
< """Set [`MonitoredLine`](@ref) `arc`."""
---
> """Set MonitoredLine arc."""
137c137
< """Set [`MonitoredLine`](@ref) `r`."""
---
> """Set MonitoredLine r."""
139c139
< """Set [`MonitoredLine`](@ref) `x`."""
---
> """Set MonitoredLine x."""
141c141
< """Set [`MonitoredLine`](@ref) `b`."""
---
> """Set MonitoredLine b."""
143c143
< """Set [`MonitoredLine`](@ref) `flow_limits`."""
---
> """Set MonitoredLine flow_limits."""
145c145
< """Set [`MonitoredLine`](@ref) `rate`."""
---
> """Set MonitoredLine rate."""
147c147
< """Set [`MonitoredLine`](@ref) `angle_limits`."""
---
> """Set MonitoredLine angle_limits."""
149c149
< """Set [`MonitoredLine`](@ref) `services`."""
---
> """Set MonitoredLine services."""
151c151
< """Set [`MonitoredLine`](@ref) `ext`."""
---
> """Set MonitoredLine ext."""
155c155
< """Set [`MonitoredLine`](@ref) `internal`."""
---
> """Set MonitoredLine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/MultiStartCost.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/MultiStartCost.jl
22c22
< - `shutdn::Float64`: shutdown cost, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `shutdn::Float64`: shutdown cost, validation range: (0, nothing), action if invalid: warn
63c63
< """Get [`MultiStartCost`](@ref) `variable`."""
---
> """Get MultiStartCost variable."""
65c65
< """Get [`MultiStartCost`](@ref) `no_load`."""
---
> """Get MultiStartCost no_load."""
67c67
< """Get [`MultiStartCost`](@ref) `fixed`."""
---
> """Get MultiStartCost fixed."""
69c69
< """Get [`MultiStartCost`](@ref) `startup`."""
---
> """Get MultiStartCost startup."""
71c71
< """Get [`MultiStartCost`](@ref) `shutdn`."""
---
> """Get MultiStartCost shutdn."""
75c75
< """Get [`MultiStartCost`](@ref) `internal`."""
---
> """Get MultiStartCost internal."""
78c78
< """Set [`MultiStartCost`](@ref) `variable`."""
---
> """Set MultiStartCost variable."""
80c80
< """Set [`MultiStartCost`](@ref) `no_load`."""
---
> """Set MultiStartCost no_load."""
82c82
< """Set [`MultiStartCost`](@ref) `fixed`."""
---
> """Set MultiStartCost fixed."""
84c84
< """Set [`MultiStartCost`](@ref) `startup`."""
---
> """Set MultiStartCost startup."""
86c86
< """Set [`MultiStartCost`](@ref) `shutdn`."""
---
> """Set MultiStartCost shutdn."""
90c90
< """Set [`MultiStartCost`](@ref) `internal`."""
---
> """Set MultiStartCost internal."""
diff --strip-trailing-cr tmp-test-generated-structs/OneDOneQMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/OneDOneQMachine.jl
25,31c25,31
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
87c87
< """Get [`OneDOneQMachine`](@ref) `R`."""
---
> """Get OneDOneQMachine R."""
89c89
< """Get [`OneDOneQMachine`](@ref) `Xd`."""
---
> """Get OneDOneQMachine Xd."""
91c91
< """Get [`OneDOneQMachine`](@ref) `Xq`."""
---
> """Get OneDOneQMachine Xq."""
93c93
< """Get [`OneDOneQMachine`](@ref) `Xd_p`."""
---
> """Get OneDOneQMachine Xd_p."""
95c95
< """Get [`OneDOneQMachine`](@ref) `Xq_p`."""
---
> """Get OneDOneQMachine Xq_p."""
97c97
< """Get [`OneDOneQMachine`](@ref) `Td0_p`."""
---
> """Get OneDOneQMachine Td0_p."""
99c99
< """Get [`OneDOneQMachine`](@ref) `Tq0_p`."""
---
> """Get OneDOneQMachine Tq0_p."""
101c101
< """Get [`OneDOneQMachine`](@ref) `ext`."""
---
> """Get OneDOneQMachine ext."""
103c103
< """Get [`OneDOneQMachine`](@ref) `states`."""
---
> """Get OneDOneQMachine states."""
105c105
< """Get [`OneDOneQMachine`](@ref) `n_states`."""
---
> """Get OneDOneQMachine n_states."""
107c107
< """Get [`OneDOneQMachine`](@ref) `internal`."""
---
> """Get OneDOneQMachine internal."""
110c110
< """Set [`OneDOneQMachine`](@ref) `R`."""
---
> """Set OneDOneQMachine R."""
112c112
< """Set [`OneDOneQMachine`](@ref) `Xd`."""
---
> """Set OneDOneQMachine Xd."""
114c114
< """Set [`OneDOneQMachine`](@ref) `Xq`."""
---
> """Set OneDOneQMachine Xq."""
116c116
< """Set [`OneDOneQMachine`](@ref) `Xd_p`."""
---
> """Set OneDOneQMachine Xd_p."""
118c118
< """Set [`OneDOneQMachine`](@ref) `Xq_p`."""
---
> """Set OneDOneQMachine Xq_p."""
120c120
< """Set [`OneDOneQMachine`](@ref) `Td0_p`."""
---
> """Set OneDOneQMachine Td0_p."""
122c122
< """Set [`OneDOneQMachine`](@ref) `Tq0_p`."""
---
> """Set OneDOneQMachine Tq0_p."""
124c124
< """Set [`OneDOneQMachine`](@ref) `ext`."""
---
> """Set OneDOneQMachine ext."""
126c126
< """Set [`OneDOneQMachine`](@ref) `states`."""
---
> """Set OneDOneQMachine states."""
128c128
< """Set [`OneDOneQMachine`](@ref) `n_states`."""
---
> """Set OneDOneQMachine n_states."""
130c130
< """Set [`OneDOneQMachine`](@ref) `internal`."""
---
> """Set OneDOneQMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/PSSFixed.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/PSSFixed.jl
16c16
< - `V_pss::Float64`: Fixed voltage stabilization signal, validation range: `(0, nothing)`
---
> - `V_pss::Float64`: Fixed voltage stabilization signal, validation range: (0, nothing)
49c49
< """Get [`PSSFixed`](@ref) `V_pss`."""
---
> """Get PSSFixed V_pss."""
51c51
< """Get [`PSSFixed`](@ref) `ext`."""
---
> """Get PSSFixed ext."""
53c53
< """Get [`PSSFixed`](@ref) `states`."""
---
> """Get PSSFixed states."""
55c55
< """Get [`PSSFixed`](@ref) `n_states`."""
---
> """Get PSSFixed n_states."""
57c57
< """Get [`PSSFixed`](@ref) `internal`."""
---
> """Get PSSFixed internal."""
60c60
< """Set [`PSSFixed`](@ref) `V_pss`."""
---
> """Set PSSFixed V_pss."""
62c62
< """Set [`PSSFixed`](@ref) `ext`."""
---
> """Set PSSFixed ext."""
64c64
< """Set [`PSSFixed`](@ref) `states`."""
---
> """Set PSSFixed states."""
66c66
< """Set [`PSSFixed`](@ref) `n_states`."""
---
> """Set PSSFixed n_states."""
68c68
< """Set [`PSSFixed`](@ref) `internal`."""
---
> """Set PSSFixed internal."""
diff --strip-trailing-cr tmp-test-generated-structs/PSSSimple.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/PSSSimple.jl
17,18c17,18
< - `K_ω::Float64`: Proportional gain for frequency, validation range: `(0, nothing)`
< - `K_p::Float64`: Proportional gain for active power, validation range: `(0, nothing)`
---
> - `K_ω::Float64`: Proportional gain for frequency, validation range: (0, nothing)
> - `K_p::Float64`: Proportional gain for active power, validation range: (0, nothing)
54c54
< """Get [`PSSSimple`](@ref) `K_ω`."""
---
> """Get PSSSimple K_ω."""
56c56
< """Get [`PSSSimple`](@ref) `K_p`."""
---
> """Get PSSSimple K_p."""
58c58
< """Get [`PSSSimple`](@ref) `ext`."""
---
> """Get PSSSimple ext."""
60c60
< """Get [`PSSSimple`](@ref) `states`."""
---
> """Get PSSSimple states."""
62c62
< """Get [`PSSSimple`](@ref) `n_states`."""
---
> """Get PSSSimple n_states."""
64c64
< """Get [`PSSSimple`](@ref) `internal`."""
---
> """Get PSSSimple internal."""
67c67
< """Set [`PSSSimple`](@ref) `K_ω`."""
---
> """Set PSSSimple K_ω."""
69c69
< """Set [`PSSSimple`](@ref) `K_p`."""
---
> """Set PSSSimple K_p."""
71c71
< """Set [`PSSSimple`](@ref) `ext`."""
---
> """Set PSSSimple ext."""
73c73
< """Set [`PSSSimple`](@ref) `states`."""
---
> """Set PSSSimple states."""
75c75
< """Set [`PSSSimple`](@ref) `n_states`."""
---
> """Set PSSSimple n_states."""
77c77
< """Set [`PSSSimple`](@ref) `internal`."""
---
> """Set PSSSimple internal."""
diff --strip-trailing-cr tmp-test-generated-structs/PhaseShiftingTransformer.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/PhaseShiftingTransformer.jl
31,36c31,36
< - `r::Float64`: System per-unit value, validation range: `(0, 4)`, action if invalid: `error`
< - `x::Float64`: System per-unit value, validation range: `(-2, 4)`, action if invalid: `error`
< - `primary_shunt::Float64`, validation range: `(0, 2)`, action if invalid: `error`
< - `tap::Float64`, validation range: `(0, 2)`, action if invalid: `error`
< - `α::Float64`, validation range: `(-1.571, 1.571)`, action if invalid: `warn`
< - `rate::Union{Nothing, Float64}`, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `r::Float64`: System per-unit value, validation range: (0, 4), action if invalid: error
> - `x::Float64`: System per-unit value, validation range: (-2, 4), action if invalid: error
> - `primary_shunt::Float64`, validation range: (0, 2), action if invalid: error
> - `tap::Float64`, validation range: (0, 2), action if invalid: error
> - `α::Float64`, validation range: (-1.571, 1.571), action if invalid: warn
> - `rate::Union{Nothing, Float64}`, validation range: (0, nothing), action if invalid: error
95c95
< """Get [`PhaseShiftingTransformer`](@ref) `available`."""
---
> """Get PhaseShiftingTransformer available."""
97c97
< """Get [`PhaseShiftingTransformer`](@ref) `active_power_flow`."""
---
> """Get PhaseShiftingTransformer active_power_flow."""
99c99
< """Get [`PhaseShiftingTransformer`](@ref) `reactive_power_flow`."""
---
> """Get PhaseShiftingTransformer reactive_power_flow."""
101c101
< """Get [`PhaseShiftingTransformer`](@ref) `arc`."""
---
> """Get PhaseShiftingTransformer arc."""
103c103
< """Get [`PhaseShiftingTransformer`](@ref) `r`."""
---
> """Get PhaseShiftingTransformer r."""
105c105
< """Get [`PhaseShiftingTransformer`](@ref) `x`."""
---
> """Get PhaseShiftingTransformer x."""
107c107
< """Get [`PhaseShiftingTransformer`](@ref) `primary_shunt`."""
---
> """Get PhaseShiftingTransformer primary_shunt."""
109c109
< """Get [`PhaseShiftingTransformer`](@ref) `tap`."""
---
> """Get PhaseShiftingTransformer tap."""
111c111
< """Get [`PhaseShiftingTransformer`](@ref) `α`."""
---
> """Get PhaseShiftingTransformer α."""
113c113
< """Get [`PhaseShiftingTransformer`](@ref) `rate`."""
---
> """Get PhaseShiftingTransformer rate."""
115c115
< """Get [`PhaseShiftingTransformer`](@ref) `services`."""
---
> """Get PhaseShiftingTransformer services."""
117c117
< """Get [`PhaseShiftingTransformer`](@ref) `ext`."""
---
> """Get PhaseShiftingTransformer ext."""
121c121
< """Get [`PhaseShiftingTransformer`](@ref) `internal`."""
---
> """Get PhaseShiftingTransformer internal."""
126c126
< """Set [`PhaseShiftingTransformer`](@ref) `available`."""
---
> """Set PhaseShiftingTransformer available."""
128c128
< """Set [`PhaseShiftingTransformer`](@ref) `active_power_flow`."""
---
> """Set PhaseShiftingTransformer active_power_flow."""
130c130
< """Set [`PhaseShiftingTransformer`](@ref) `reactive_power_flow`."""
---
> """Set PhaseShiftingTransformer reactive_power_flow."""
132c132
< """Set [`PhaseShiftingTransformer`](@ref) `arc`."""
---
> """Set PhaseShiftingTransformer arc."""
134c134
< """Set [`PhaseShiftingTransformer`](@ref) `r`."""
---
> """Set PhaseShiftingTransformer r."""
136c136
< """Set [`PhaseShiftingTransformer`](@ref) `x`."""
---
> """Set PhaseShiftingTransformer x."""
138c138
< """Set [`PhaseShiftingTransformer`](@ref) `primary_shunt`."""
---
> """Set PhaseShiftingTransformer primary_shunt."""
140c140
< """Set [`PhaseShiftingTransformer`](@ref) `tap`."""
---
> """Set PhaseShiftingTransformer tap."""
142c142
< """Set [`PhaseShiftingTransformer`](@ref) `α`."""
---
> """Set PhaseShiftingTransformer α."""
144c144
< """Set [`PhaseShiftingTransformer`](@ref) `rate`."""
---
> """Set PhaseShiftingTransformer rate."""
146c146
< """Set [`PhaseShiftingTransformer`](@ref) `services`."""
---
> """Set PhaseShiftingTransformer services."""
148c148
< """Set [`PhaseShiftingTransformer`](@ref) `ext`."""
---
> """Set PhaseShiftingTransformer ext."""
152c152
< """Set [`PhaseShiftingTransformer`](@ref) `internal`."""
---
> """Set PhaseShiftingTransformer internal."""
diff --strip-trailing-cr tmp-test-generated-structs/PowerLoad.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/PowerLoad.jl
31c31
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
91c91
< """Get [`PowerLoad`](@ref) `available`."""
---
> """Get PowerLoad available."""
93c93
< """Get [`PowerLoad`](@ref) `bus`."""
---
> """Get PowerLoad bus."""
95c95
< """Get [`PowerLoad`](@ref) `model`."""
---
> """Get PowerLoad model."""
97c97
< """Get [`PowerLoad`](@ref) `active_power`."""
---
> """Get PowerLoad active_power."""
99c99
< """Get [`PowerLoad`](@ref) `reactive_power`."""
---
> """Get PowerLoad reactive_power."""
101c101
< """Get [`PowerLoad`](@ref) `base_power`."""
---
> """Get PowerLoad base_power."""
103c103
< """Get [`PowerLoad`](@ref) `max_active_power`."""
---
> """Get PowerLoad max_active_power."""
105c105
< """Get [`PowerLoad`](@ref) `max_reactive_power`."""
---
> """Get PowerLoad max_reactive_power."""
107c107
< """Get [`PowerLoad`](@ref) `services`."""
---
> """Get PowerLoad services."""
109c109
< """Get [`PowerLoad`](@ref) `dynamic_injector`."""
---
> """Get PowerLoad dynamic_injector."""
111c111
< """Get [`PowerLoad`](@ref) `ext`."""
---
> """Get PowerLoad ext."""
115c115
< """Get [`PowerLoad`](@ref) `internal`."""
---
> """Get PowerLoad internal."""
120c120
< """Set [`PowerLoad`](@ref) `available`."""
---
> """Set PowerLoad available."""
122c122
< """Set [`PowerLoad`](@ref) `bus`."""
---
> """Set PowerLoad bus."""
124c124
< """Set [`PowerLoad`](@ref) `model`."""
---
> """Set PowerLoad model."""
126c126
< """Set [`PowerLoad`](@ref) `active_power`."""
---
> """Set PowerLoad active_power."""
128c128
< """Set [`PowerLoad`](@ref) `reactive_power`."""
---
> """Set PowerLoad reactive_power."""
130c130
< """Set [`PowerLoad`](@ref) `base_power`."""
---
> """Set PowerLoad base_power."""
132c132
< """Set [`PowerLoad`](@ref) `max_active_power`."""
---
> """Set PowerLoad max_active_power."""
134c134
< """Set [`PowerLoad`](@ref) `max_reactive_power`."""
---
> """Set PowerLoad max_reactive_power."""
136c136
< """Set [`PowerLoad`](@ref) `services`."""
---
> """Set PowerLoad services."""
138c138
< """Set [`PowerLoad`](@ref) `ext`."""
---
> """Set PowerLoad ext."""
142c142
< """Set [`PowerLoad`](@ref) `internal`."""
---
> """Set PowerLoad internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ReactivePowerDroop.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ReactivePowerDroop.jl
17,19c17,19
< - `kq::Float64`: frequency droop gain, validation range: `(0, nothing)`
< - `ωf::Float64`: filter frequency cutoff, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `kq::Float64`: frequency droop gain, validation range: (0, nothing)
> - `ωf::Float64`: filter frequency cutoff, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
58c58
< """Get [`ReactivePowerDroop`](@ref) `kq`."""
---
> """Get ReactivePowerDroop kq."""
60c60
< """Get [`ReactivePowerDroop`](@ref) `ωf`."""
---
> """Get ReactivePowerDroop ωf."""
62c62
< """Get [`ReactivePowerDroop`](@ref) `V_ref`."""
---
> """Get ReactivePowerDroop V_ref."""
64c64
< """Get [`ReactivePowerDroop`](@ref) `ext`."""
---
> """Get ReactivePowerDroop ext."""
66c66
< """Get [`ReactivePowerDroop`](@ref) `states`."""
---
> """Get ReactivePowerDroop states."""
68c68
< """Get [`ReactivePowerDroop`](@ref) `n_states`."""
---
> """Get ReactivePowerDroop n_states."""
71c71
< """Set [`ReactivePowerDroop`](@ref) `kq`."""
---
> """Set ReactivePowerDroop kq."""
73c73
< """Set [`ReactivePowerDroop`](@ref) `ωf`."""
---
> """Set ReactivePowerDroop ωf."""
75c75
< """Set [`ReactivePowerDroop`](@ref) `V_ref`."""
---
> """Set ReactivePowerDroop V_ref."""
77c77
< """Set [`ReactivePowerDroop`](@ref) `ext`."""
---
> """Set ReactivePowerDroop ext."""
79c79
< """Set [`ReactivePowerDroop`](@ref) `states`."""
---
> """Set ReactivePowerDroop states."""
81c81
< """Set [`ReactivePowerDroop`](@ref) `n_states`."""
---
> """Set ReactivePowerDroop n_states."""
diff --strip-trailing-cr tmp-test-generated-structs/RenewableDispatch.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/RenewableDispatch.jl
32c32
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
35c35
< - `power_factor::Float64`, validation range: `(0, 1)`, action if invalid: `error`
---
> - `power_factor::Float64`, validation range: (0, 1), action if invalid: error
37c37
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
102c102
< """Get [`RenewableDispatch`](@ref) `available`."""
---
> """Get RenewableDispatch available."""
104c104
< """Get [`RenewableDispatch`](@ref) `bus`."""
---
> """Get RenewableDispatch bus."""
106c106
< """Get [`RenewableDispatch`](@ref) `active_power`."""
---
> """Get RenewableDispatch active_power."""
108c108
< """Get [`RenewableDispatch`](@ref) `reactive_power`."""
---
> """Get RenewableDispatch reactive_power."""
110c110
< """Get [`RenewableDispatch`](@ref) `rating`."""
---
> """Get RenewableDispatch rating."""
112c112
< """Get [`RenewableDispatch`](@ref) `prime_mover`."""
---
> """Get RenewableDispatch prime_mover."""
114c114
< """Get [`RenewableDispatch`](@ref) `reactive_power_limits`."""
---
> """Get RenewableDispatch reactive_power_limits."""
116c116
< """Get [`RenewableDispatch`](@ref) `power_factor`."""
---
> """Get RenewableDispatch power_factor."""
118c118
< """Get [`RenewableDispatch`](@ref) `operation_cost`."""
---
> """Get RenewableDispatch operation_cost."""
120c120
< """Get [`RenewableDispatch`](@ref) `base_power`."""
---
> """Get RenewableDispatch base_power."""
122c122
< """Get [`RenewableDispatch`](@ref) `services`."""
---
> """Get RenewableDispatch services."""
124c124
< """Get [`RenewableDispatch`](@ref) `dynamic_injector`."""
---
> """Get RenewableDispatch dynamic_injector."""
126c126
< """Get [`RenewableDispatch`](@ref) `ext`."""
---
> """Get RenewableDispatch ext."""
130c130
< """Get [`RenewableDispatch`](@ref) `internal`."""
---
> """Get RenewableDispatch internal."""
135c135
< """Set [`RenewableDispatch`](@ref) `available`."""
---
> """Set RenewableDispatch available."""
137c137
< """Set [`RenewableDispatch`](@ref) `bus`."""
---
> """Set RenewableDispatch bus."""
139c139
< """Set [`RenewableDispatch`](@ref) `active_power`."""
---
> """Set RenewableDispatch active_power."""
141c141
< """Set [`RenewableDispatch`](@ref) `reactive_power`."""
---
> """Set RenewableDispatch reactive_power."""
143c143
< """Set [`RenewableDispatch`](@ref) `rating`."""
---
> """Set RenewableDispatch rating."""
145c145
< """Set [`RenewableDispatch`](@ref) `prime_mover`."""
---
> """Set RenewableDispatch prime_mover."""
147c147
< """Set [`RenewableDispatch`](@ref) `reactive_power_limits`."""
---
> """Set RenewableDispatch reactive_power_limits."""
149c149
< """Set [`RenewableDispatch`](@ref) `power_factor`."""
---
> """Set RenewableDispatch power_factor."""
151c151
< """Set [`RenewableDispatch`](@ref) `operation_cost`."""
---
> """Set RenewableDispatch operation_cost."""
153c153
< """Set [`RenewableDispatch`](@ref) `base_power`."""
---
> """Set RenewableDispatch base_power."""
155c155
< """Set [`RenewableDispatch`](@ref) `services`."""
---
> """Set RenewableDispatch services."""
157c157
< """Set [`RenewableDispatch`](@ref) `ext`."""
---
> """Set RenewableDispatch ext."""
161c161
< """Set [`RenewableDispatch`](@ref) `internal`."""
---
> """Set RenewableDispatch internal."""
diff --strip-trailing-cr tmp-test-generated-structs/RenewableFix.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/RenewableFix.jl
30c30
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
32,33c32,33
< - `power_factor::Float64`, validation range: `(0, 1)`, action if invalid: `error`
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `power_factor::Float64`, validation range: (0, 1), action if invalid: error
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
93c93
< """Get [`RenewableFix`](@ref) `available`."""
---
> """Get RenewableFix available."""
95c95
< """Get [`RenewableFix`](@ref) `bus`."""
---
> """Get RenewableFix bus."""
97c97
< """Get [`RenewableFix`](@ref) `active_power`."""
---
> """Get RenewableFix active_power."""
99c99
< """Get [`RenewableFix`](@ref) `reactive_power`."""
---
> """Get RenewableFix reactive_power."""
101c101
< """Get [`RenewableFix`](@ref) `rating`."""
---
> """Get RenewableFix rating."""
103c103
< """Get [`RenewableFix`](@ref) `prime_mover`."""
---
> """Get RenewableFix prime_mover."""
105c105
< """Get [`RenewableFix`](@ref) `power_factor`."""
---
> """Get RenewableFix power_factor."""
107c107
< """Get [`RenewableFix`](@ref) `base_power`."""
---
> """Get RenewableFix base_power."""
109c109
< """Get [`RenewableFix`](@ref) `services`."""
---
> """Get RenewableFix services."""
111c111
< """Get [`RenewableFix`](@ref) `dynamic_injector`."""
---
> """Get RenewableFix dynamic_injector."""
113c113
< """Get [`RenewableFix`](@ref) `ext`."""
---
> """Get RenewableFix ext."""
117c117
< """Get [`RenewableFix`](@ref) `internal`."""
---
> """Get RenewableFix internal."""
122c122
< """Set [`RenewableFix`](@ref) `available`."""
---
> """Set RenewableFix available."""
124c124
< """Set [`RenewableFix`](@ref) `bus`."""
---
> """Set RenewableFix bus."""
126c126
< """Set [`RenewableFix`](@ref) `active_power`."""
---
> """Set RenewableFix active_power."""
128c128
< """Set [`RenewableFix`](@ref) `reactive_power`."""
---
> """Set RenewableFix reactive_power."""
130c130
< """Set [`RenewableFix`](@ref) `rating`."""
---
> """Set RenewableFix rating."""
132c132
< """Set [`RenewableFix`](@ref) `prime_mover`."""
---
> """Set RenewableFix prime_mover."""
134c134
< """Set [`RenewableFix`](@ref) `power_factor`."""
---
> """Set RenewableFix power_factor."""
136c136
< """Set [`RenewableFix`](@ref) `base_power`."""
---
> """Set RenewableFix base_power."""
138c138
< """Set [`RenewableFix`](@ref) `services`."""
---
> """Set RenewableFix services."""
140c140
< """Set [`RenewableFix`](@ref) `ext`."""
---
> """Set RenewableFix ext."""
144c144
< """Set [`RenewableFix`](@ref) `internal`."""
---
> """Set RenewableFix internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ReserveDemandCurve.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ReserveDemandCurve.jl
20c20
< - `time_frame::Float64`: the relative saturation time_frame, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `time_frame::Float64`: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error
62c62
< """Get [`ReserveDemandCurve`](@ref) `available`."""
---
> """Get ReserveDemandCurve available."""
64c64
< """Get [`ReserveDemandCurve`](@ref) `time_frame`."""
---
> """Get ReserveDemandCurve time_frame."""
66c66
< """Get [`ReserveDemandCurve`](@ref) `operation_cost`."""
---
> """Get ReserveDemandCurve operation_cost."""
68c68
< """Get [`ReserveDemandCurve`](@ref) `ext`."""
---
> """Get ReserveDemandCurve ext."""
72c72
< """Get [`ReserveDemandCurve`](@ref) `internal`."""
---
> """Get ReserveDemandCurve internal."""
77c77
< """Set [`ReserveDemandCurve`](@ref) `available`."""
---
> """Set ReserveDemandCurve available."""
79c79
< """Set [`ReserveDemandCurve`](@ref) `time_frame`."""
---
> """Set ReserveDemandCurve time_frame."""
81c81
< """Set [`ReserveDemandCurve`](@ref) `operation_cost`."""
---
> """Set ReserveDemandCurve operation_cost."""
83c83
< """Set [`ReserveDemandCurve`](@ref) `ext`."""
---
> """Set ReserveDemandCurve ext."""
87c87
< """Set [`ReserveDemandCurve`](@ref) `internal`."""
---
> """Set ReserveDemandCurve internal."""
diff --strip-trailing-cr tmp-test-generated-structs/RoundRotorMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/RoundRotorMachine.jl
33,43c33,43
< - `R::Float64`: Armature resistance, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp, validation range: `(0, nothing)`
< - `Xl::Float64`: Stator leakage reactance, validation range: `(0, nothing)`
---
> - `R::Float64`: Armature resistance, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp, validation range: (0, nothing)
> - `Xl::Float64`: Stator leakage reactance, validation range: (0, nothing)
134c134
< """Get [`RoundRotorMachine`](@ref) `R`."""
---
> """Get RoundRotorMachine R."""
136c136
< """Get [`RoundRotorMachine`](@ref) `Td0_p`."""
---
> """Get RoundRotorMachine Td0_p."""
138c138
< """Get [`RoundRotorMachine`](@ref) `Td0_pp`."""
---
> """Get RoundRotorMachine Td0_pp."""
140c140
< """Get [`RoundRotorMachine`](@ref) `Tq0_p`."""
---
> """Get RoundRotorMachine Tq0_p."""
142c142
< """Get [`RoundRotorMachine`](@ref) `Tq0_pp`."""
---
> """Get RoundRotorMachine Tq0_pp."""
144c144
< """Get [`RoundRotorMachine`](@ref) `Xd`."""
---
> """Get RoundRotorMachine Xd."""
146c146
< """Get [`RoundRotorMachine`](@ref) `Xq`."""
---
> """Get RoundRotorMachine Xq."""
148c148
< """Get [`RoundRotorMachine`](@ref) `Xd_p`."""
---
> """Get RoundRotorMachine Xd_p."""
150c150
< """Get [`RoundRotorMachine`](@ref) `Xq_p`."""
---
> """Get RoundRotorMachine Xq_p."""
152c152
< """Get [`RoundRotorMachine`](@ref) `Xd_pp`."""
---
> """Get RoundRotorMachine Xd_pp."""
154c154
< """Get [`RoundRotorMachine`](@ref) `Xl`."""
---
> """Get RoundRotorMachine Xl."""
156c156
< """Get [`RoundRotorMachine`](@ref) `Se`."""
---
> """Get RoundRotorMachine Se."""
158c158
< """Get [`RoundRotorMachine`](@ref) `ext`."""
---
> """Get RoundRotorMachine ext."""
160c160
< """Get [`RoundRotorMachine`](@ref) `γ_d1`."""
---
> """Get RoundRotorMachine γ_d1."""
162c162
< """Get [`RoundRotorMachine`](@ref) `γ_q1`."""
---
> """Get RoundRotorMachine γ_q1."""
164c164
< """Get [`RoundRotorMachine`](@ref) `γ_d2`."""
---
> """Get RoundRotorMachine γ_d2."""
166c166
< """Get [`RoundRotorMachine`](@ref) `γ_q2`."""
---
> """Get RoundRotorMachine γ_q2."""
168c168
< """Get [`RoundRotorMachine`](@ref) `γ_qd`."""
---
> """Get RoundRotorMachine γ_qd."""
170c170
< """Get [`RoundRotorMachine`](@ref) `states`."""
---
> """Get RoundRotorMachine states."""
172c172
< """Get [`RoundRotorMachine`](@ref) `n_states`."""
---
> """Get RoundRotorMachine n_states."""
174c174
< """Get [`RoundRotorMachine`](@ref) `internal`."""
---
> """Get RoundRotorMachine internal."""
177c177
< """Set [`RoundRotorMachine`](@ref) `R`."""
---
> """Set RoundRotorMachine R."""
179c179
< """Set [`RoundRotorMachine`](@ref) `Td0_p`."""
---
> """Set RoundRotorMachine Td0_p."""
181c181
< """Set [`RoundRotorMachine`](@ref) `Td0_pp`."""
---
> """Set RoundRotorMachine Td0_pp."""
183c183
< """Set [`RoundRotorMachine`](@ref) `Tq0_p`."""
---
> """Set RoundRotorMachine Tq0_p."""
185c185
< """Set [`RoundRotorMachine`](@ref) `Tq0_pp`."""
---
> """Set RoundRotorMachine Tq0_pp."""
187c187
< """Set [`RoundRotorMachine`](@ref) `Xd`."""
---
> """Set RoundRotorMachine Xd."""
189c189
< """Set [`RoundRotorMachine`](@ref) `Xq`."""
---
> """Set RoundRotorMachine Xq."""
191c191
< """Set [`RoundRotorMachine`](@ref) `Xd_p`."""
---
> """Set RoundRotorMachine Xd_p."""
193c193
< """Set [`RoundRotorMachine`](@ref) `Xq_p`."""
---
> """Set RoundRotorMachine Xq_p."""
195c195
< """Set [`RoundRotorMachine`](@ref) `Xd_pp`."""
---
> """Set RoundRotorMachine Xd_pp."""
197c197
< """Set [`RoundRotorMachine`](@ref) `Xl`."""
---
> """Set RoundRotorMachine Xl."""
199c199
< """Set [`RoundRotorMachine`](@ref) `Se`."""
---
> """Set RoundRotorMachine Se."""
201c201
< """Set [`RoundRotorMachine`](@ref) `ext`."""
---
> """Set RoundRotorMachine ext."""
203c203
< """Set [`RoundRotorMachine`](@ref) `γ_d1`."""
---
> """Set RoundRotorMachine γ_d1."""
205c205
< """Set [`RoundRotorMachine`](@ref) `γ_q1`."""
---
> """Set RoundRotorMachine γ_q1."""
207c207
< """Set [`RoundRotorMachine`](@ref) `γ_d2`."""
---
> """Set RoundRotorMachine γ_d2."""
209c209
< """Set [`RoundRotorMachine`](@ref) `γ_q2`."""
---
> """Set RoundRotorMachine γ_q2."""
211c211
< """Set [`RoundRotorMachine`](@ref) `γ_qd`."""
---
> """Set RoundRotorMachine γ_qd."""
213c213
< """Set [`RoundRotorMachine`](@ref) `states`."""
---
> """Set RoundRotorMachine states."""
215c215
< """Set [`RoundRotorMachine`](@ref) `n_states`."""
---
> """Set RoundRotorMachine n_states."""
217c217
< """Set [`RoundRotorMachine`](@ref) `internal`."""
---
> """Set RoundRotorMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ST1A.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ST1A.jl
35,37c35,37
< - `UEL_flags::Int64`: Code input for Underexcitization limiter (UEL) entry. Not supported., validation range: `(1, 3)`
< - `PSS_flags::Int64`: Code input for Power System Stabilizer (PSS) or (VOS) entry., validation range: `(1, 2)`
< - `Tr::Float64`: Regulator input filter time constant in s, validation range: `(0, nothing)`
---
> - `UEL_flags::Int64`: Code input for Underexcitization limiter (UEL) entry. Not supported., validation range: (1, 3)
> - `PSS_flags::Int64`: Code input for Power System Stabilizer (PSS) or (VOS) entry., validation range: (1, 2)
> - `Tr::Float64`: Regulator input filter time constant in s, validation range: (0, nothing)
39,44c39,44
< - `Tc::Float64`: First regulator denominator (lead) time constant in s, validation range: `(0, nothing)`
< - `Tb::Float64`: First regulator denominator (lag) time constant in s, validation range: `(0, nothing)`
< - `Tc1::Float64`: Second regulator denominator (lead) time constant in s, validation range: `(0, nothing)`
< - `Tb1::Float64`: Second regulator denominator (lead) time constant in s, validation range: `(0, nothing)`
< - `Ka::Float64`: Voltage regulator gain, validation range: `(0, nothing)`
< - `Ta::Float64`: Voltage regulator time constant in s, validation range: `(0, nothing)`
---
> - `Tc::Float64`: First regulator denominator (lead) time constant in s, validation range: (0, nothing)
> - `Tb::Float64`: First regulator denominator (lag) time constant in s, validation range: (0, nothing)
> - `Tc1::Float64`: Second regulator denominator (lead) time constant in s, validation range: (0, nothing)
> - `Tb1::Float64`: Second regulator denominator (lead) time constant in s, validation range: (0, nothing)
> - `Ka::Float64`: Voltage regulator gain, validation range: (0, nothing)
> - `Ta::Float64`: Voltage regulator time constant in s, validation range: (0, nothing)
47,52c47,52
< - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: `(0, nothing)`
< - `Kf::Float64`: Rate feedback gain, validation range: `(0, nothing)`
< - `Tf::Float64`: Rate feedback time constant in s, validation range: `("eps()", nothing)`
< - `K_lr::Float64`: Exciter output current limiter gain, validation range: `(0, nothing)`
< - `I_lr::Float64`: Exciter output current limit reference, validation range: `(0, nothing)`
< - `V_ref::Float64`: Reference Voltage Set-point, validation range: `(0, nothing)`
---
> - `Kc::Float64`: Rectifier loading factor proportional to commutating reactance, validation range: (0, nothing)
> - `Kf::Float64`: Rate feedback gain, validation range: (0, nothing)
> - `Tf::Float64`: Rate feedback time constant in s, validation range: (&quot;eps()&quot;, nothing)
> - `K_lr::Float64`: Exciter output current limiter gain, validation range: (0, nothing)
> - `I_lr::Float64`: Exciter output current limit reference, validation range: (0, nothing)
> - `V_ref::Float64`: Reference Voltage Set-point, validation range: (0, nothing)
150c150
< """Get [`ST1A`](@ref) `UEL_flags`."""
---
> """Get ST1A UEL_flags."""
152c152
< """Get [`ST1A`](@ref) `PSS_flags`."""
---
> """Get ST1A PSS_flags."""
154c154
< """Get [`ST1A`](@ref) `Tr`."""
---
> """Get ST1A Tr."""
156c156
< """Get [`ST1A`](@ref) `Vi_lim`."""
---
> """Get ST1A Vi_lim."""
158c158
< """Get [`ST1A`](@ref) `Tc`."""
---
> """Get ST1A Tc."""
160c160
< """Get [`ST1A`](@ref) `Tb`."""
---
> """Get ST1A Tb."""
162c162
< """Get [`ST1A`](@ref) `Tc1`."""
---
> """Get ST1A Tc1."""
164c164
< """Get [`ST1A`](@ref) `Tb1`."""
---
> """Get ST1A Tb1."""
166c166
< """Get [`ST1A`](@ref) `Ka`."""
---
> """Get ST1A Ka."""
168c168
< """Get [`ST1A`](@ref) `Ta`."""
---
> """Get ST1A Ta."""
170c170
< """Get [`ST1A`](@ref) `Va_lim`."""
---
> """Get ST1A Va_lim."""
172c172
< """Get [`ST1A`](@ref) `Vr_lim`."""
---
> """Get ST1A Vr_lim."""
174c174
< """Get [`ST1A`](@ref) `Kc`."""
---
> """Get ST1A Kc."""
176c176
< """Get [`ST1A`](@ref) `Kf`."""
---
> """Get ST1A Kf."""
178c178
< """Get [`ST1A`](@ref) `Tf`."""
---
> """Get ST1A Tf."""
180c180
< """Get [`ST1A`](@ref) `K_lr`."""
---
> """Get ST1A K_lr."""
182c182
< """Get [`ST1A`](@ref) `I_lr`."""
---
> """Get ST1A I_lr."""
184c184
< """Get [`ST1A`](@ref) `V_ref`."""
---
> """Get ST1A V_ref."""
186c186
< """Get [`ST1A`](@ref) `ext`."""
---
> """Get ST1A ext."""
188c188
< """Get [`ST1A`](@ref) `states`."""
---
> """Get ST1A states."""
190c190
< """Get [`ST1A`](@ref) `n_states`."""
---
> """Get ST1A n_states."""
192c192
< """Get [`ST1A`](@ref) `states_types`."""
---
> """Get ST1A states_types."""
194c194
< """Get [`ST1A`](@ref) `internal`."""
---
> """Get ST1A internal."""
197c197
< """Set [`ST1A`](@ref) `UEL_flags`."""
---
> """Set ST1A UEL_flags."""
199c199
< """Set [`ST1A`](@ref) `PSS_flags`."""
---
> """Set ST1A PSS_flags."""
201c201
< """Set [`ST1A`](@ref) `Tr`."""
---
> """Set ST1A Tr."""
203c203
< """Set [`ST1A`](@ref) `Vi_lim`."""
---
> """Set ST1A Vi_lim."""
205c205
< """Set [`ST1A`](@ref) `Tc`."""
---
> """Set ST1A Tc."""
207c207
< """Set [`ST1A`](@ref) `Tb`."""
---
> """Set ST1A Tb."""
209c209
< """Set [`ST1A`](@ref) `Tc1`."""
---
> """Set ST1A Tc1."""
211c211
< """Set [`ST1A`](@ref) `Tb1`."""
---
> """Set ST1A Tb1."""
213c213
< """Set [`ST1A`](@ref) `Ka`."""
---
> """Set ST1A Ka."""
215c215
< """Set [`ST1A`](@ref) `Ta`."""
---
> """Set ST1A Ta."""
217c217
< """Set [`ST1A`](@ref) `Va_lim`."""
---
> """Set ST1A Va_lim."""
219c219
< """Set [`ST1A`](@ref) `Vr_lim`."""
---
> """Set ST1A Vr_lim."""
221c221
< """Set [`ST1A`](@ref) `Kc`."""
---
> """Set ST1A Kc."""
223c223
< """Set [`ST1A`](@ref) `Kf`."""
---
> """Set ST1A Kf."""
225c225
< """Set [`ST1A`](@ref) `Tf`."""
---
> """Set ST1A Tf."""
227c227
< """Set [`ST1A`](@ref) `K_lr`."""
---
> """Set ST1A K_lr."""
229c229
< """Set [`ST1A`](@ref) `I_lr`."""
---
> """Set ST1A I_lr."""
231c231
< """Set [`ST1A`](@ref) `V_ref`."""
---
> """Set ST1A V_ref."""
233c233
< """Set [`ST1A`](@ref) `ext`."""
---
> """Set ST1A ext."""
235c235
< """Set [`ST1A`](@ref) `states`."""
---
> """Set ST1A states."""
237c237
< """Set [`ST1A`](@ref) `n_states`."""
---
> """Set ST1A n_states."""
239c239
< """Set [`ST1A`](@ref) `states_types`."""
---
> """Set ST1A states_types."""
241c241
< """Set [`ST1A`](@ref) `internal`."""
---
> """Set ST1A internal."""
diff --strip-trailing-cr tmp-test-generated-structs/SalientPoleMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/SalientPoleMachine.jl
29,37c29,37
< - `R::Float64`: Armature resistance, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp, validation range: `(0, nothing)`
< - `Xl::Float64`: Stator leakage reactance, validation range: `(0, nothing)`
---
> - `R::Float64`: Armature resistance, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit. Note: Xd_pp = Xq_pp, validation range: (0, nothing)
> - `Xl::Float64`: Stator leakage reactance, validation range: (0, nothing)
114c114
< """Get [`SalientPoleMachine`](@ref) `R`."""
---
> """Get SalientPoleMachine R."""
116c116
< """Get [`SalientPoleMachine`](@ref) `Td0_p`."""
---
> """Get SalientPoleMachine Td0_p."""
118c118
< """Get [`SalientPoleMachine`](@ref) `Td0_pp`."""
---
> """Get SalientPoleMachine Td0_pp."""
120c120
< """Get [`SalientPoleMachine`](@ref) `Tq0_pp`."""
---
> """Get SalientPoleMachine Tq0_pp."""
122c122
< """Get [`SalientPoleMachine`](@ref) `Xd`."""
---
> """Get SalientPoleMachine Xd."""
124c124
< """Get [`SalientPoleMachine`](@ref) `Xq`."""
---
> """Get SalientPoleMachine Xq."""
126c126
< """Get [`SalientPoleMachine`](@ref) `Xd_p`."""
---
> """Get SalientPoleMachine Xd_p."""
128c128
< """Get [`SalientPoleMachine`](@ref) `Xd_pp`."""
---
> """Get SalientPoleMachine Xd_pp."""
130c130
< """Get [`SalientPoleMachine`](@ref) `Xl`."""
---
> """Get SalientPoleMachine Xl."""
132c132
< """Get [`SalientPoleMachine`](@ref) `Se`."""
---
> """Get SalientPoleMachine Se."""
134c134
< """Get [`SalientPoleMachine`](@ref) `ext`."""
---
> """Get SalientPoleMachine ext."""
136c136
< """Get [`SalientPoleMachine`](@ref) `γ_d1`."""
---
> """Get SalientPoleMachine γ_d1."""
138c138
< """Get [`SalientPoleMachine`](@ref) `γ_q1`."""
---
> """Get SalientPoleMachine γ_q1."""
140c140
< """Get [`SalientPoleMachine`](@ref) `γ_d2`."""
---
> """Get SalientPoleMachine γ_d2."""
142c142
< """Get [`SalientPoleMachine`](@ref) `states`."""
---
> """Get SalientPoleMachine states."""
144c144
< """Get [`SalientPoleMachine`](@ref) `n_states`."""
---
> """Get SalientPoleMachine n_states."""
146c146
< """Get [`SalientPoleMachine`](@ref) `internal`."""
---
> """Get SalientPoleMachine internal."""
149c149
< """Set [`SalientPoleMachine`](@ref) `R`."""
---
> """Set SalientPoleMachine R."""
151c151
< """Set [`SalientPoleMachine`](@ref) `Td0_p`."""
---
> """Set SalientPoleMachine Td0_p."""
153c153
< """Set [`SalientPoleMachine`](@ref) `Td0_pp`."""
---
> """Set SalientPoleMachine Td0_pp."""
155c155
< """Set [`SalientPoleMachine`](@ref) `Tq0_pp`."""
---
> """Set SalientPoleMachine Tq0_pp."""
157c157
< """Set [`SalientPoleMachine`](@ref) `Xd`."""
---
> """Set SalientPoleMachine Xd."""
159c159
< """Set [`SalientPoleMachine`](@ref) `Xq`."""
---
> """Set SalientPoleMachine Xq."""
161c161
< """Set [`SalientPoleMachine`](@ref) `Xd_p`."""
---
> """Set SalientPoleMachine Xd_p."""
163c163
< """Set [`SalientPoleMachine`](@ref) `Xd_pp`."""
---
> """Set SalientPoleMachine Xd_pp."""
165c165
< """Set [`SalientPoleMachine`](@ref) `Xl`."""
---
> """Set SalientPoleMachine Xl."""
167c167
< """Set [`SalientPoleMachine`](@ref) `Se`."""
---
> """Set SalientPoleMachine Se."""
169c169
< """Set [`SalientPoleMachine`](@ref) `ext`."""
---
> """Set SalientPoleMachine ext."""
171c171
< """Set [`SalientPoleMachine`](@ref) `γ_d1`."""
---
> """Set SalientPoleMachine γ_d1."""
173c173
< """Set [`SalientPoleMachine`](@ref) `γ_q1`."""
---
> """Set SalientPoleMachine γ_q1."""
175c175
< """Set [`SalientPoleMachine`](@ref) `γ_d2`."""
---
> """Set SalientPoleMachine γ_d2."""
177c177
< """Set [`SalientPoleMachine`](@ref) `states`."""
---
> """Set SalientPoleMachine states."""
179c179
< """Set [`SalientPoleMachine`](@ref) `n_states`."""
---
> """Set SalientPoleMachine n_states."""
181c181
< """Set [`SalientPoleMachine`](@ref) `internal`."""
---
> """Set SalientPoleMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/SimpleAFMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/SimpleAFMachine.jl
30,40c30,40
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
112c112
< """Get [`SimpleAFMachine`](@ref) `R`."""
---
> """Get SimpleAFMachine R."""
114c114
< """Get [`SimpleAFMachine`](@ref) `Xd`."""
---
> """Get SimpleAFMachine Xd."""
116c116
< """Get [`SimpleAFMachine`](@ref) `Xq`."""
---
> """Get SimpleAFMachine Xq."""
118c118
< """Get [`SimpleAFMachine`](@ref) `Xd_p`."""
---
> """Get SimpleAFMachine Xd_p."""
120c120
< """Get [`SimpleAFMachine`](@ref) `Xq_p`."""
---
> """Get SimpleAFMachine Xq_p."""
122c122
< """Get [`SimpleAFMachine`](@ref) `Xd_pp`."""
---
> """Get SimpleAFMachine Xd_pp."""
124c124
< """Get [`SimpleAFMachine`](@ref) `Xq_pp`."""
---
> """Get SimpleAFMachine Xq_pp."""
126c126
< """Get [`SimpleAFMachine`](@ref) `Td0_p`."""
---
> """Get SimpleAFMachine Td0_p."""
128c128
< """Get [`SimpleAFMachine`](@ref) `Tq0_p`."""
---
> """Get SimpleAFMachine Tq0_p."""
130c130
< """Get [`SimpleAFMachine`](@ref) `Td0_pp`."""
---
> """Get SimpleAFMachine Td0_pp."""
132c132
< """Get [`SimpleAFMachine`](@ref) `Tq0_pp`."""
---
> """Get SimpleAFMachine Tq0_pp."""
134c134
< """Get [`SimpleAFMachine`](@ref) `ext`."""
---
> """Get SimpleAFMachine ext."""
136c136
< """Get [`SimpleAFMachine`](@ref) `states`."""
---
> """Get SimpleAFMachine states."""
138c138
< """Get [`SimpleAFMachine`](@ref) `n_states`."""
---
> """Get SimpleAFMachine n_states."""
140c140
< """Get [`SimpleAFMachine`](@ref) `internal`."""
---
> """Get SimpleAFMachine internal."""
143c143
< """Set [`SimpleAFMachine`](@ref) `R`."""
---
> """Set SimpleAFMachine R."""
145c145
< """Set [`SimpleAFMachine`](@ref) `Xd`."""
---
> """Set SimpleAFMachine Xd."""
147c147
< """Set [`SimpleAFMachine`](@ref) `Xq`."""
---
> """Set SimpleAFMachine Xq."""
149c149
< """Set [`SimpleAFMachine`](@ref) `Xd_p`."""
---
> """Set SimpleAFMachine Xd_p."""
151c151
< """Set [`SimpleAFMachine`](@ref) `Xq_p`."""
---
> """Set SimpleAFMachine Xq_p."""
153c153
< """Set [`SimpleAFMachine`](@ref) `Xd_pp`."""
---
> """Set SimpleAFMachine Xd_pp."""
155c155
< """Set [`SimpleAFMachine`](@ref) `Xq_pp`."""
---
> """Set SimpleAFMachine Xq_pp."""
157c157
< """Set [`SimpleAFMachine`](@ref) `Td0_p`."""
---
> """Set SimpleAFMachine Td0_p."""
159c159
< """Set [`SimpleAFMachine`](@ref) `Tq0_p`."""
---
> """Set SimpleAFMachine Tq0_p."""
161c161
< """Set [`SimpleAFMachine`](@ref) `Td0_pp`."""
---
> """Set SimpleAFMachine Td0_pp."""
163c163
< """Set [`SimpleAFMachine`](@ref) `Tq0_pp`."""
---
> """Set SimpleAFMachine Tq0_pp."""
165c165
< """Set [`SimpleAFMachine`](@ref) `ext`."""
---
> """Set SimpleAFMachine ext."""
167c167
< """Set [`SimpleAFMachine`](@ref) `states`."""
---
> """Set SimpleAFMachine states."""
169c169
< """Set [`SimpleAFMachine`](@ref) `n_states`."""
---
> """Set SimpleAFMachine n_states."""
171c171
< """Set [`SimpleAFMachine`](@ref) `internal`."""
---
> """Set SimpleAFMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/SimpleFullMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/SimpleFullMachine.jl
34,45c34,45
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `R_f::Float64`: Field rotor winding resistance in per unit, validation range: `(0, nothing)`
< - `R_1d::Float64`:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: `(0, nothing)`
< - `R_1q::Float64`: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: `(0, nothing)`
< - `L_d::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski)., validation range: `(0, nothing)`
< - `L_q::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur., validation range: `(0, nothing)`
< - `L_ad::Float64`: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: `(0, nothing)`
< - `L_aq::Float64`: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: `(0, nothing)`
< - `L_f1d::Float64`: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: `(0, nothing)`
< - `L_ff::Float64`: Field rotor winding inductance, in per unit, validation range: `(0, nothing)`
< - `L_1d::Float64`: Inductance of the d-axis rotor damping circuit, in per unit, validation range: `(0, nothing)`
< - `L_1q::Float64`: Inductance of the q-axis rotor damping circuit, in per unit, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `R_f::Float64`: Field rotor winding resistance in per unit, validation range: (0, nothing)
> - `R_1d::Float64`:  Damping rotor winding resistance on d-axis in per unit. This value is denoted as RD in Machowski., validation range: (0, nothing)
> - `R_1q::Float64`: Damping rotor winding resistance on q-axis in per unit. This value is denoted as RQ in Machowski., validation range: (0, nothing)
> - `L_d::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the d-axis of the rotor, in per unit. This value is denoted as L_ad + L_l in Kundur (and Ld in Machowski)., validation range: (0, nothing)
> - `L_q::Float64`: Inductance of fictitious damping that represent the effect of the three-phase stator winding in the q-axis of the rotor, in per unit. This value is denoted as L_aq + L_l in Kundur., validation range: (0, nothing)
> - `L_ad::Float64`: Mutual inductance between stator winding and rotor field (and damping) winding inductance on d-axis, in per unit, validation range: (0, nothing)
> - `L_aq::Float64`: Mutual inductance between stator winding and rotor damping winding inductance on q-axis, in per unit, validation range: (0, nothing)
> - `L_f1d::Float64`: Mutual inductance between rotor field winding and rotor damping winding inductance on d-axis, in per unit, validation range: (0, nothing)
> - `L_ff::Float64`: Field rotor winding inductance, in per unit, validation range: (0, nothing)
> - `L_1d::Float64`: Inductance of the d-axis rotor damping circuit, in per unit, validation range: (0, nothing)
> - `L_1q::Float64`: Inductance of the q-axis rotor damping circuit, in per unit, validation range: (0, nothing)
124c124
< """Get [`SimpleFullMachine`](@ref) `R`."""
---
> """Get SimpleFullMachine R."""
126c126
< """Get [`SimpleFullMachine`](@ref) `R_f`."""
---
> """Get SimpleFullMachine R_f."""
128c128
< """Get [`SimpleFullMachine`](@ref) `R_1d`."""
---
> """Get SimpleFullMachine R_1d."""
130c130
< """Get [`SimpleFullMachine`](@ref) `R_1q`."""
---
> """Get SimpleFullMachine R_1q."""
132c132
< """Get [`SimpleFullMachine`](@ref) `L_d`."""
---
> """Get SimpleFullMachine L_d."""
134c134
< """Get [`SimpleFullMachine`](@ref) `L_q`."""
---
> """Get SimpleFullMachine L_q."""
136c136
< """Get [`SimpleFullMachine`](@ref) `L_ad`."""
---
> """Get SimpleFullMachine L_ad."""
138c138
< """Get [`SimpleFullMachine`](@ref) `L_aq`."""
---
> """Get SimpleFullMachine L_aq."""
140c140
< """Get [`SimpleFullMachine`](@ref) `L_f1d`."""
---
> """Get SimpleFullMachine L_f1d."""
142c142
< """Get [`SimpleFullMachine`](@ref) `L_ff`."""
---
> """Get SimpleFullMachine L_ff."""
144c144
< """Get [`SimpleFullMachine`](@ref) `L_1d`."""
---
> """Get SimpleFullMachine L_1d."""
146c146
< """Get [`SimpleFullMachine`](@ref) `L_1q`."""
---
> """Get SimpleFullMachine L_1q."""
148c148
< """Get [`SimpleFullMachine`](@ref) `ext`."""
---
> """Get SimpleFullMachine ext."""
150c150
< """Get [`SimpleFullMachine`](@ref) `inv_d_fluxlink`."""
---
> """Get SimpleFullMachine inv_d_fluxlink."""
152c152
< """Get [`SimpleFullMachine`](@ref) `inv_q_fluxlink`."""
---
> """Get SimpleFullMachine inv_q_fluxlink."""
154c154
< """Get [`SimpleFullMachine`](@ref) `states`."""
---
> """Get SimpleFullMachine states."""
156c156
< """Get [`SimpleFullMachine`](@ref) `n_states`."""
---
> """Get SimpleFullMachine n_states."""
158c158
< """Get [`SimpleFullMachine`](@ref) `internal`."""
---
> """Get SimpleFullMachine internal."""
161c161
< """Set [`SimpleFullMachine`](@ref) `R`."""
---
> """Set SimpleFullMachine R."""
163c163
< """Set [`SimpleFullMachine`](@ref) `R_f`."""
---
> """Set SimpleFullMachine R_f."""
165c165
< """Set [`SimpleFullMachine`](@ref) `R_1d`."""
---
> """Set SimpleFullMachine R_1d."""
167c167
< """Set [`SimpleFullMachine`](@ref) `R_1q`."""
---
> """Set SimpleFullMachine R_1q."""
169c169
< """Set [`SimpleFullMachine`](@ref) `L_d`."""
---
> """Set SimpleFullMachine L_d."""
171c171
< """Set [`SimpleFullMachine`](@ref) `L_q`."""
---
> """Set SimpleFullMachine L_q."""
173c173
< """Set [`SimpleFullMachine`](@ref) `L_ad`."""
---
> """Set SimpleFullMachine L_ad."""
175c175
< """Set [`SimpleFullMachine`](@ref) `L_aq`."""
---
> """Set SimpleFullMachine L_aq."""
177c177
< """Set [`SimpleFullMachine`](@ref) `L_f1d`."""
---
> """Set SimpleFullMachine L_f1d."""
179c179
< """Set [`SimpleFullMachine`](@ref) `L_ff`."""
---
> """Set SimpleFullMachine L_ff."""
181c181
< """Set [`SimpleFullMachine`](@ref) `L_1d`."""
---
> """Set SimpleFullMachine L_1d."""
183c183
< """Set [`SimpleFullMachine`](@ref) `L_1q`."""
---
> """Set SimpleFullMachine L_1q."""
185c185
< """Set [`SimpleFullMachine`](@ref) `ext`."""
---
> """Set SimpleFullMachine ext."""
187c187
< """Set [`SimpleFullMachine`](@ref) `inv_d_fluxlink`."""
---
> """Set SimpleFullMachine inv_d_fluxlink."""
189c189
< """Set [`SimpleFullMachine`](@ref) `inv_q_fluxlink`."""
---
> """Set SimpleFullMachine inv_q_fluxlink."""
191c191
< """Set [`SimpleFullMachine`](@ref) `states`."""
---
> """Set SimpleFullMachine states."""
193c193
< """Set [`SimpleFullMachine`](@ref) `n_states`."""
---
> """Set SimpleFullMachine n_states."""
195c195
< """Set [`SimpleFullMachine`](@ref) `internal`."""
---
> """Set SimpleFullMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/SimpleMarconatoMachine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/SimpleMarconatoMachine.jl
32,43c32,43
< - `R::Float64`: Resistance after EMF in machine per unit, validation range: `(0, nothing)`
< - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: `(0, nothing)`
< - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: `(0, nothing)`
< - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: `(0, nothing)`
< - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: `(0, nothing)`
< - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: `(0, nothing)`
< - `T_AA::Float64`: Time constant of d-axis additional leakage, validation range: `(0, nothing)`
---
> - `R::Float64`: Resistance after EMF in machine per unit, validation range: (0, nothing)
> - `Xd::Float64`: Reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq::Float64`: Reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_p::Float64`: Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_p::Float64`: Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Xd_pp::Float64`: Sub-Transient reactance after EMF in d-axis per unit, validation range: (0, nothing)
> - `Xq_pp::Float64`: Sub-Transient reactance after EMF in q-axis per unit, validation range: (0, nothing)
> - `Td0_p::Float64`: Time constant of transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_p::Float64`: Time constant of transient q-axis voltage, validation range: (0, nothing)
> - `Td0_pp::Float64`: Time constant of sub-transient d-axis voltage, validation range: (0, nothing)
> - `Tq0_pp::Float64`: Time constant of sub-transient q-axis voltage, validation range: (0, nothing)
> - `T_AA::Float64`: Time constant of d-axis additional leakage, validation range: (0, nothing)
122c122
< """Get [`SimpleMarconatoMachine`](@ref) `R`."""
---
> """Get SimpleMarconatoMachine R."""
124c124
< """Get [`SimpleMarconatoMachine`](@ref) `Xd`."""
---
> """Get SimpleMarconatoMachine Xd."""
126c126
< """Get [`SimpleMarconatoMachine`](@ref) `Xq`."""
---
> """Get SimpleMarconatoMachine Xq."""
128c128
< """Get [`SimpleMarconatoMachine`](@ref) `Xd_p`."""
---
> """Get SimpleMarconatoMachine Xd_p."""
130c130
< """Get [`SimpleMarconatoMachine`](@ref) `Xq_p`."""
---
> """Get SimpleMarconatoMachine Xq_p."""
132c132
< """Get [`SimpleMarconatoMachine`](@ref) `Xd_pp`."""
---
> """Get SimpleMarconatoMachine Xd_pp."""
134c134
< """Get [`SimpleMarconatoMachine`](@ref) `Xq_pp`."""
---
> """Get SimpleMarconatoMachine Xq_pp."""
136c136
< """Get [`SimpleMarconatoMachine`](@ref) `Td0_p`."""
---
> """Get SimpleMarconatoMachine Td0_p."""
138c138
< """Get [`SimpleMarconatoMachine`](@ref) `Tq0_p`."""
---
> """Get SimpleMarconatoMachine Tq0_p."""
140c140
< """Get [`SimpleMarconatoMachine`](@ref) `Td0_pp`."""
---
> """Get SimpleMarconatoMachine Td0_pp."""
142c142
< """Get [`SimpleMarconatoMachine`](@ref) `Tq0_pp`."""
---
> """Get SimpleMarconatoMachine Tq0_pp."""
144c144
< """Get [`SimpleMarconatoMachine`](@ref) `T_AA`."""
---
> """Get SimpleMarconatoMachine T_AA."""
146c146
< """Get [`SimpleMarconatoMachine`](@ref) `ext`."""
---
> """Get SimpleMarconatoMachine ext."""
148c148
< """Get [`SimpleMarconatoMachine`](@ref) `γd`."""
---
> """Get SimpleMarconatoMachine γd."""
150c150
< """Get [`SimpleMarconatoMachine`](@ref) `γq`."""
---
> """Get SimpleMarconatoMachine γq."""
152c152
< """Get [`SimpleMarconatoMachine`](@ref) `states`."""
---
> """Get SimpleMarconatoMachine states."""
154c154
< """Get [`SimpleMarconatoMachine`](@ref) `n_states`."""
---
> """Get SimpleMarconatoMachine n_states."""
156c156
< """Get [`SimpleMarconatoMachine`](@ref) `internal`."""
---
> """Get SimpleMarconatoMachine internal."""
159c159
< """Set [`SimpleMarconatoMachine`](@ref) `R`."""
---
> """Set SimpleMarconatoMachine R."""
161c161
< """Set [`SimpleMarconatoMachine`](@ref) `Xd`."""
---
> """Set SimpleMarconatoMachine Xd."""
163c163
< """Set [`SimpleMarconatoMachine`](@ref) `Xq`."""
---
> """Set SimpleMarconatoMachine Xq."""
165c165
< """Set [`SimpleMarconatoMachine`](@ref) `Xd_p`."""
---
> """Set SimpleMarconatoMachine Xd_p."""
167c167
< """Set [`SimpleMarconatoMachine`](@ref) `Xq_p`."""
---
> """Set SimpleMarconatoMachine Xq_p."""
169c169
< """Set [`SimpleMarconatoMachine`](@ref) `Xd_pp`."""
---
> """Set SimpleMarconatoMachine Xd_pp."""
171c171
< """Set [`SimpleMarconatoMachine`](@ref) `Xq_pp`."""
---
> """Set SimpleMarconatoMachine Xq_pp."""
173c173
< """Set [`SimpleMarconatoMachine`](@ref) `Td0_p`."""
---
> """Set SimpleMarconatoMachine Td0_p."""
175c175
< """Set [`SimpleMarconatoMachine`](@ref) `Tq0_p`."""
---
> """Set SimpleMarconatoMachine Tq0_p."""
177c177
< """Set [`SimpleMarconatoMachine`](@ref) `Td0_pp`."""
---
> """Set SimpleMarconatoMachine Td0_pp."""
179c179
< """Set [`SimpleMarconatoMachine`](@ref) `Tq0_pp`."""
---
> """Set SimpleMarconatoMachine Tq0_pp."""
181c181
< """Set [`SimpleMarconatoMachine`](@ref) `T_AA`."""
---
> """Set SimpleMarconatoMachine T_AA."""
183c183
< """Set [`SimpleMarconatoMachine`](@ref) `ext`."""
---
> """Set SimpleMarconatoMachine ext."""
185c185
< """Set [`SimpleMarconatoMachine`](@ref) `γd`."""
---
> """Set SimpleMarconatoMachine γd."""
187c187
< """Set [`SimpleMarconatoMachine`](@ref) `γq`."""
---
> """Set SimpleMarconatoMachine γq."""
189c189
< """Set [`SimpleMarconatoMachine`](@ref) `states`."""
---
> """Set SimpleMarconatoMachine states."""
191c191
< """Set [`SimpleMarconatoMachine`](@ref) `n_states`."""
---
> """Set SimpleMarconatoMachine n_states."""
193c193
< """Set [`SimpleMarconatoMachine`](@ref) `internal`."""
---
> """Set SimpleMarconatoMachine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/SingleMass.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/SingleMass.jl
17,18c17,18
< - `H::Float64`: Rotor inertia constant in MWs/MVA, validation range: `(0, nothing)`
< - `D::Float64`: Rotor natural damping in pu, validation range: `(0, nothing)`
---
> - `H::Float64`: Rotor inertia constant in MWs/MVA, validation range: (0, nothing)
> - `D::Float64`: Rotor natural damping in pu, validation range: (0, nothing)
59c59
< """Get [`SingleMass`](@ref) `H`."""
---
> """Get SingleMass H."""
61c61
< """Get [`SingleMass`](@ref) `D`."""
---
> """Get SingleMass D."""
63c63
< """Get [`SingleMass`](@ref) `ext`."""
---
> """Get SingleMass ext."""
65c65
< """Get [`SingleMass`](@ref) `states`."""
---
> """Get SingleMass states."""
67c67
< """Get [`SingleMass`](@ref) `n_states`."""
---
> """Get SingleMass n_states."""
69c69
< """Get [`SingleMass`](@ref) `internal`."""
---
> """Get SingleMass internal."""
72c72
< """Set [`SingleMass`](@ref) `H`."""
---
> """Set SingleMass H."""
74c74
< """Set [`SingleMass`](@ref) `D`."""
---
> """Set SingleMass D."""
76c76
< """Set [`SingleMass`](@ref) `ext`."""
---
> """Set SingleMass ext."""
78c78
< """Set [`SingleMass`](@ref) `states`."""
---
> """Set SingleMass states."""
80c80
< """Set [`SingleMass`](@ref) `n_states`."""
---
> """Set SingleMass n_states."""
82c82
< """Set [`SingleMass`](@ref) `internal`."""
---
> """Set SingleMass internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Source.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Source.jl
28,30c28,30
< - `R_th::Float64`: Source Thevenin resistance, validation range: `(0, nothing)`
< - `X_th::Float64`: Source Thevenin reactance, validation range: `(0, nothing)`
< - `internal_voltage::Float64`: Internal Voltage, validation range: `(0, nothing)`
---
> - `R_th::Float64`: Source Thevenin resistance, validation range: (0, nothing)
> - `X_th::Float64`: Source Thevenin reactance, validation range: (0, nothing)
> - `internal_voltage::Float64`: Internal Voltage, validation range: (0, nothing)
84c84
< """Get [`Source`](@ref) `available`."""
---
> """Get Source available."""
86c86
< """Get [`Source`](@ref) `bus`."""
---
> """Get Source bus."""
88c88
< """Get [`Source`](@ref) `active_power`."""
---
> """Get Source active_power."""
90c90
< """Get [`Source`](@ref) `reactive_power`."""
---
> """Get Source reactive_power."""
92c92
< """Get [`Source`](@ref) `R_th`."""
---
> """Get Source R_th."""
94c94
< """Get [`Source`](@ref) `X_th`."""
---
> """Get Source X_th."""
96c96
< """Get [`Source`](@ref) `internal_voltage`."""
---
> """Get Source internal_voltage."""
98c98
< """Get [`Source`](@ref) `internal_angle`."""
---
> """Get Source internal_angle."""
100c100
< """Get [`Source`](@ref) `services`."""
---
> """Get Source services."""
102c102
< """Get [`Source`](@ref) `ext`."""
---
> """Get Source ext."""
104c104
< """Get [`Source`](@ref) `internal`."""
---
> """Get Source internal."""
109c109
< """Set [`Source`](@ref) `available`."""
---
> """Set Source available."""
111c111
< """Set [`Source`](@ref) `bus`."""
---
> """Set Source bus."""
113c113
< """Set [`Source`](@ref) `active_power`."""
---
> """Set Source active_power."""
115c115
< """Set [`Source`](@ref) `reactive_power`."""
---
> """Set Source reactive_power."""
117c117
< """Set [`Source`](@ref) `R_th`."""
---
> """Set Source R_th."""
119c119
< """Set [`Source`](@ref) `X_th`."""
---
> """Set Source X_th."""
121c121
< """Set [`Source`](@ref) `internal_voltage`."""
---
> """Set Source internal_voltage."""
123c123
< """Set [`Source`](@ref) `internal_angle`."""
---
> """Set Source internal_angle."""
125c125
< """Set [`Source`](@ref) `services`."""
---
> """Set Source services."""
127c127
< """Set [`Source`](@ref) `ext`."""
---
> """Set Source ext."""
129c129
< """Set [`Source`](@ref) `internal`."""
---
> """Set Source internal."""
diff --strip-trailing-cr tmp-test-generated-structs/StaticReserve.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/StaticReserve.jl
19,20c19,20
< - `time_frame::Float64`: the relative saturation time_frame, validation range: `(0, nothing)`, action if invalid: `error`
< - `requirement::Float64`: the static value of required reserves in system p.u., validation range: `(0, nothing)`, action if invalid: `error`
---
> - `time_frame::Float64`: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error
> - `requirement::Float64`: the static value of required reserves in system p.u., validation range: (0, nothing), action if invalid: error
57c57
< """Get [`StaticReserve`](@ref) `available`."""
---
> """Get StaticReserve available."""
59c59
< """Get [`StaticReserve`](@ref) `time_frame`."""
---
> """Get StaticReserve time_frame."""
61c61
< """Get [`StaticReserve`](@ref) `requirement`."""
---
> """Get StaticReserve requirement."""
63c63
< """Get [`StaticReserve`](@ref) `ext`."""
---
> """Get StaticReserve ext."""
65c65
< """Get [`StaticReserve`](@ref) `internal`."""
---
> """Get StaticReserve internal."""
70c70
< """Set [`StaticReserve`](@ref) `available`."""
---
> """Set StaticReserve available."""
72c72
< """Set [`StaticReserve`](@ref) `time_frame`."""
---
> """Set StaticReserve time_frame."""
74c74
< """Set [`StaticReserve`](@ref) `requirement`."""
---
> """Set StaticReserve requirement."""
76c76
< """Set [`StaticReserve`](@ref) `ext`."""
---
> """Set StaticReserve ext."""
78c78
< """Set [`StaticReserve`](@ref) `internal`."""
---
> """Set StaticReserve internal."""
diff --strip-trailing-cr tmp-test-generated-structs/StaticReserveGroup.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/StaticReserveGroup.jl
19c19
< - `requirement::Float64`: the static value of required reserves in system p.u., validation range: `(0, nothing)`, action if invalid: `error`
---
> - `requirement::Float64`: the static value of required reserves in system p.u., validation range: (0, nothing), action if invalid: error
57c57
< """Get [`StaticReserveGroup`](@ref) `available`."""
---
> """Get StaticReserveGroup available."""
59c59
< """Get [`StaticReserveGroup`](@ref) `requirement`."""
---
> """Get StaticReserveGroup requirement."""
61c61
< """Get [`StaticReserveGroup`](@ref) `ext`."""
---
> """Get StaticReserveGroup ext."""
63c63
< """Get [`StaticReserveGroup`](@ref) `contributing_services`."""
---
> """Get StaticReserveGroup contributing_services."""
65c65
< """Get [`StaticReserveGroup`](@ref) `internal`."""
---
> """Get StaticReserveGroup internal."""
70c70
< """Set [`StaticReserveGroup`](@ref) `available`."""
---
> """Set StaticReserveGroup available."""
72c72
< """Set [`StaticReserveGroup`](@ref) `requirement`."""
---
> """Set StaticReserveGroup requirement."""
74c74
< """Set [`StaticReserveGroup`](@ref) `ext`."""
---
> """Set StaticReserveGroup ext."""
76c76
< """Set [`StaticReserveGroup`](@ref) `internal`."""
---
> """Set StaticReserveGroup internal."""
diff --strip-trailing-cr tmp-test-generated-structs/TGFixed.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/TGFixed.jl
18,19c18,19
< - `efficiency::Float64`:  Efficiency factor that multiplies P_ref, validation range: `(0, nothing)`
< - `P_ref::Float64`: Reference Power Set-point, validation range: `(0, nothing)`
---
> - `efficiency::Float64`:  Efficiency factor that multiplies P_ref, validation range: (0, nothing)
> - `P_ref::Float64`: Reference Power Set-point, validation range: (0, nothing)
55c55
< """Get [`TGFixed`](@ref) `efficiency`."""
---
> """Get TGFixed efficiency."""
57c57
< """Get [`TGFixed`](@ref) `P_ref`."""
---
> """Get TGFixed P_ref."""
59c59
< """Get [`TGFixed`](@ref) `ext`."""
---
> """Get TGFixed ext."""
61c61
< """Get [`TGFixed`](@ref) `states`."""
---
> """Get TGFixed states."""
63c63
< """Get [`TGFixed`](@ref) `n_states`."""
---
> """Get TGFixed n_states."""
65c65
< """Get [`TGFixed`](@ref) `internal`."""
---
> """Get TGFixed internal."""
68c68
< """Set [`TGFixed`](@ref) `efficiency`."""
---
> """Set TGFixed efficiency."""
70c70
< """Set [`TGFixed`](@ref) `P_ref`."""
---
> """Set TGFixed P_ref."""
72c72
< """Set [`TGFixed`](@ref) `ext`."""
---
> """Set TGFixed ext."""
74c74
< """Set [`TGFixed`](@ref) `states`."""
---
> """Set TGFixed states."""
76c76
< """Set [`TGFixed`](@ref) `n_states`."""
---
> """Set TGFixed n_states."""
78c78
< """Set [`TGFixed`](@ref) `internal`."""
---
> """Set TGFixed internal."""
diff --strip-trailing-cr tmp-test-generated-structs/TGTypeI.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/TGTypeI.jl
24,32c24,32
< - `R::Float64`: Droop parameter, validation range: `(0, nothing)`
< - `Ts::Float64`: Governor time constant, validation range: `(0, nothing)`
< - `Tc::Float64`: Servo time constant, validation range: `(0, nothing)`
< - `T3::Float64`: Transient gain time constant, validation range: `(0, nothing)`
< - `T4::Float64`: Power fraction time constant, validation range: `(0, nothing)`
< - `T5::Float64`: Reheat time constant, validation range: `(0, nothing)`
< - `P_min::Float64`: Min Power into the Governor, validation range: `(0, nothing)`
< - `P_max::Float64`: Max Power into the Governor, validation range: `(0, nothing)`
< - `P_ref::Float64`: Reference Power Set-point, validation range: `(0, nothing)`
---
> - `R::Float64`: Droop parameter, validation range: (0, nothing)
> - `Ts::Float64`: Governor time constant, validation range: (0, nothing)
> - `Tc::Float64`: Servo time constant, validation range: (0, nothing)
> - `T3::Float64`: Transient gain time constant, validation range: (0, nothing)
> - `T4::Float64`: Power fraction time constant, validation range: (0, nothing)
> - `T5::Float64`: Reheat time constant, validation range: (0, nothing)
> - `P_min::Float64`: Min Power into the Governor, validation range: (0, nothing)
> - `P_max::Float64`: Max Power into the Governor, validation range: (0, nothing)
> - `P_ref::Float64`: Reference Power Set-point, validation range: (0, nothing)
96c96
< """Get [`TGTypeI`](@ref) `R`."""
---
> """Get TGTypeI R."""
98c98
< """Get [`TGTypeI`](@ref) `Ts`."""
---
> """Get TGTypeI Ts."""
100c100
< """Get [`TGTypeI`](@ref) `Tc`."""
---
> """Get TGTypeI Tc."""
102c102
< """Get [`TGTypeI`](@ref) `T3`."""
---
> """Get TGTypeI T3."""
104c104
< """Get [`TGTypeI`](@ref) `T4`."""
---
> """Get TGTypeI T4."""
106c106
< """Get [`TGTypeI`](@ref) `T5`."""
---
> """Get TGTypeI T5."""
108c108
< """Get [`TGTypeI`](@ref) `P_min`."""
---
> """Get TGTypeI P_min."""
110c110
< """Get [`TGTypeI`](@ref) `P_max`."""
---
> """Get TGTypeI P_max."""
112c112
< """Get [`TGTypeI`](@ref) `P_ref`."""
---
> """Get TGTypeI P_ref."""
114c114
< """Get [`TGTypeI`](@ref) `ext`."""
---
> """Get TGTypeI ext."""
116c116
< """Get [`TGTypeI`](@ref) `states`."""
---
> """Get TGTypeI states."""
118c118
< """Get [`TGTypeI`](@ref) `n_states`."""
---
> """Get TGTypeI n_states."""
120c120
< """Get [`TGTypeI`](@ref) `internal`."""
---
> """Get TGTypeI internal."""
123c123
< """Set [`TGTypeI`](@ref) `R`."""
---
> """Set TGTypeI R."""
125c125
< """Set [`TGTypeI`](@ref) `Ts`."""
---
> """Set TGTypeI Ts."""
127c127
< """Set [`TGTypeI`](@ref) `Tc`."""
---
> """Set TGTypeI Tc."""
129c129
< """Set [`TGTypeI`](@ref) `T3`."""
---
> """Set TGTypeI T3."""
131c131
< """Set [`TGTypeI`](@ref) `T4`."""
---
> """Set TGTypeI T4."""
133c133
< """Set [`TGTypeI`](@ref) `T5`."""
---
> """Set TGTypeI T5."""
135c135
< """Set [`TGTypeI`](@ref) `P_min`."""
---
> """Set TGTypeI P_min."""
137c137
< """Set [`TGTypeI`](@ref) `P_max`."""
---
> """Set TGTypeI P_max."""
139c139
< """Set [`TGTypeI`](@ref) `P_ref`."""
---
> """Set TGTypeI P_ref."""
141c141
< """Set [`TGTypeI`](@ref) `ext`."""
---
> """Set TGTypeI ext."""
143c143
< """Set [`TGTypeI`](@ref) `states`."""
---
> """Set TGTypeI states."""
145c145
< """Set [`TGTypeI`](@ref) `n_states`."""
---
> """Set TGTypeI n_states."""
147c147
< """Set [`TGTypeI`](@ref) `internal`."""
---
> """Set TGTypeI internal."""
diff --strip-trailing-cr tmp-test-generated-structs/TGTypeII.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/TGTypeII.jl
21,26c21,26
< - `R::Float64`: Droop parameter, validation range: `(0, nothing)`
< - `T1::Float64`: Transient gain time constant, validation range: `(0, nothing)`
< - `T2::Float64`: Power fraction time constant, validation range: `(0, nothing)`
< - `τ_min::Float64`: Min Power into the Governor, validation range: `(0, nothing)`
< - `τ_max::Float64`: Max Power into the Governor, validation range: `(0, nothing)`
< - `P_ref::Float64`: Reference Power Set-point, validation range: `(0, nothing)`
---
> - `R::Float64`: Droop parameter, validation range: (0, nothing)
> - `T1::Float64`: Transient gain time constant, validation range: (0, nothing)
> - `T2::Float64`: Power fraction time constant, validation range: (0, nothing)
> - `τ_min::Float64`: Min Power into the Governor, validation range: (0, nothing)
> - `τ_max::Float64`: Max Power into the Governor, validation range: (0, nothing)
> - `P_ref::Float64`: Reference Power Set-point, validation range: (0, nothing)
77c77
< """Get [`TGTypeII`](@ref) `R`."""
---
> """Get TGTypeII R."""
79c79
< """Get [`TGTypeII`](@ref) `T1`."""
---
> """Get TGTypeII T1."""
81c81
< """Get [`TGTypeII`](@ref) `T2`."""
---
> """Get TGTypeII T2."""
83c83
< """Get [`TGTypeII`](@ref) `τ_min`."""
---
> """Get TGTypeII τ_min."""
85c85
< """Get [`TGTypeII`](@ref) `τ_max`."""
---
> """Get TGTypeII τ_max."""
87c87
< """Get [`TGTypeII`](@ref) `P_ref`."""
---
> """Get TGTypeII P_ref."""
89c89
< """Get [`TGTypeII`](@ref) `ext`."""
---
> """Get TGTypeII ext."""
91c91
< """Get [`TGTypeII`](@ref) `states`."""
---
> """Get TGTypeII states."""
93c93
< """Get [`TGTypeII`](@ref) `n_states`."""
---
> """Get TGTypeII n_states."""
95c95
< """Get [`TGTypeII`](@ref) `internal`."""
---
> """Get TGTypeII internal."""
98c98
< """Set [`TGTypeII`](@ref) `R`."""
---
> """Set TGTypeII R."""
100c100
< """Set [`TGTypeII`](@ref) `T1`."""
---
> """Set TGTypeII T1."""
102c102
< """Set [`TGTypeII`](@ref) `T2`."""
---
> """Set TGTypeII T2."""
104c104
< """Set [`TGTypeII`](@ref) `τ_min`."""
---
> """Set TGTypeII τ_min."""
106c106
< """Set [`TGTypeII`](@ref) `τ_max`."""
---
> """Set TGTypeII τ_max."""
108c108
< """Set [`TGTypeII`](@ref) `P_ref`."""
---
> """Set TGTypeII P_ref."""
110c110
< """Set [`TGTypeII`](@ref) `ext`."""
---
> """Set TGTypeII ext."""
112c112
< """Set [`TGTypeII`](@ref) `states`."""
---
> """Set TGTypeII states."""
114c114
< """Set [`TGTypeII`](@ref) `n_states`."""
---
> """Set TGTypeII n_states."""
116c116
< """Set [`TGTypeII`](@ref) `internal`."""
---
> """Set TGTypeII internal."""
diff --strip-trailing-cr tmp-test-generated-structs/TapTransformer.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/TapTransformer.jl
30,34c30,34
< - `r::Float64`: System per-unit value, validation range: `(-2, 2)`, action if invalid: `error`
< - `x::Float64`: System per-unit value, validation range: `(-2, 4)`, action if invalid: `error`
< - `primary_shunt::Float64`: System per-unit value, validation range: `(0, 2)`, action if invalid: `error`
< - `tap::Float64`, validation range: `(0, 2)`, action if invalid: `error`
< - `rate::Union{Nothing, Float64}`, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `r::Float64`: System per-unit value, validation range: (-2, 2), action if invalid: error
> - `x::Float64`: System per-unit value, validation range: (-2, 4), action if invalid: error
> - `primary_shunt::Float64`: System per-unit value, validation range: (0, 2), action if invalid: error
> - `tap::Float64`, validation range: (0, 2), action if invalid: error
> - `rate::Union{Nothing, Float64}`, validation range: (0, nothing), action if invalid: error
92c92
< """Get [`TapTransformer`](@ref) `available`."""
---
> """Get TapTransformer available."""
94c94
< """Get [`TapTransformer`](@ref) `active_power_flow`."""
---
> """Get TapTransformer active_power_flow."""
96c96
< """Get [`TapTransformer`](@ref) `reactive_power_flow`."""
---
> """Get TapTransformer reactive_power_flow."""
98c98
< """Get [`TapTransformer`](@ref) `arc`."""
---
> """Get TapTransformer arc."""
100c100
< """Get [`TapTransformer`](@ref) `r`."""
---
> """Get TapTransformer r."""
102c102
< """Get [`TapTransformer`](@ref) `x`."""
---
> """Get TapTransformer x."""
104c104
< """Get [`TapTransformer`](@ref) `primary_shunt`."""
---
> """Get TapTransformer primary_shunt."""
106c106
< """Get [`TapTransformer`](@ref) `tap`."""
---
> """Get TapTransformer tap."""
108c108
< """Get [`TapTransformer`](@ref) `rate`."""
---
> """Get TapTransformer rate."""
110c110
< """Get [`TapTransformer`](@ref) `services`."""
---
> """Get TapTransformer services."""
112c112
< """Get [`TapTransformer`](@ref) `ext`."""
---
> """Get TapTransformer ext."""
116c116
< """Get [`TapTransformer`](@ref) `internal`."""
---
> """Get TapTransformer internal."""
121c121
< """Set [`TapTransformer`](@ref) `available`."""
---
> """Set TapTransformer available."""
123c123
< """Set [`TapTransformer`](@ref) `active_power_flow`."""
---
> """Set TapTransformer active_power_flow."""
125c125
< """Set [`TapTransformer`](@ref) `reactive_power_flow`."""
---
> """Set TapTransformer reactive_power_flow."""
127c127
< """Set [`TapTransformer`](@ref) `arc`."""
---
> """Set TapTransformer arc."""
129c129
< """Set [`TapTransformer`](@ref) `r`."""
---
> """Set TapTransformer r."""
131c131
< """Set [`TapTransformer`](@ref) `x`."""
---
> """Set TapTransformer x."""
133c133
< """Set [`TapTransformer`](@ref) `primary_shunt`."""
---
> """Set TapTransformer primary_shunt."""
135c135
< """Set [`TapTransformer`](@ref) `tap`."""
---
> """Set TapTransformer tap."""
137c137
< """Set [`TapTransformer`](@ref) `rate`."""
---
> """Set TapTransformer rate."""
139c139
< """Set [`TapTransformer`](@ref) `services`."""
---
> """Set TapTransformer services."""
141c141
< """Set [`TapTransformer`](@ref) `ext`."""
---
> """Set TapTransformer ext."""
145c145
< """Set [`TapTransformer`](@ref) `internal`."""
---
> """Set TapTransformer internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ThermalMultiStart.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ThermalMultiStart.jl
40,42c40,42
< - `active_power::Float64`, validation range: `active_power_limits`, action if invalid: `warn`
< - `reactive_power::Float64`, validation range: `reactive_power_limits`, action if invalid: `warn`
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `active_power::Float64`, validation range: active_power_limits, action if invalid: warn
> - `reactive_power::Float64`, validation range: reactive_power_limits, action if invalid: warn
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
47,49c47,49
< - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`, validation range: `(0, nothing)`, action if invalid: `error`
< - `power_trajectory::Union{Nothing, NamedTuple{(:startup, :shutdown), Tuple{Float64, Float64}}}`: Power trajectory the unit will take during the startup and shutdown ramp process, validation range: `(0, nothing)`, action if invalid: `error`
< - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`, validation range: (0, nothing), action if invalid: error
> - `power_trajectory::Union{Nothing, NamedTuple{(:startup, :shutdown), Tuple{Float64, Float64}}}`: Power trajectory the unit will take during the startup and shutdown ramp process, validation range: (0, nothing), action if invalid: error
> - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error
51c51
< - `start_types::Int`:  Number of startup based on turbine temperature, validation range: `(1, 3)`, action if invalid: `error`
---
> - `start_types::Int`:  Number of startup based on turbine temperature, validation range: (1, 3), action if invalid: error
53c53
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
142c142
< """Get [`ThermalMultiStart`](@ref) `available`."""
---
> """Get ThermalMultiStart available."""
144c144
< """Get [`ThermalMultiStart`](@ref) `status`."""
---
> """Get ThermalMultiStart status."""
146c146
< """Get [`ThermalMultiStart`](@ref) `bus`."""
---
> """Get ThermalMultiStart bus."""
148c148
< """Get [`ThermalMultiStart`](@ref) `active_power`."""
---
> """Get ThermalMultiStart active_power."""
150c150
< """Get [`ThermalMultiStart`](@ref) `reactive_power`."""
---
> """Get ThermalMultiStart reactive_power."""
152c152
< """Get [`ThermalMultiStart`](@ref) `rating`."""
---
> """Get ThermalMultiStart rating."""
154c154
< """Get [`ThermalMultiStart`](@ref) `prime_mover`."""
---
> """Get ThermalMultiStart prime_mover."""
156c156
< """Get [`ThermalMultiStart`](@ref) `fuel`."""
---
> """Get ThermalMultiStart fuel."""
158c158
< """Get [`ThermalMultiStart`](@ref) `active_power_limits`."""
---
> """Get ThermalMultiStart active_power_limits."""
160c160
< """Get [`ThermalMultiStart`](@ref) `reactive_power_limits`."""
---
> """Get ThermalMultiStart reactive_power_limits."""
162c162
< """Get [`ThermalMultiStart`](@ref) `ramp_limits`."""
---
> """Get ThermalMultiStart ramp_limits."""
164c164
< """Get [`ThermalMultiStart`](@ref) `power_trajectory`."""
---
> """Get ThermalMultiStart power_trajectory."""
166c166
< """Get [`ThermalMultiStart`](@ref) `time_limits`."""
---
> """Get ThermalMultiStart time_limits."""
168c168
< """Get [`ThermalMultiStart`](@ref) `start_time_limits`."""
---
> """Get ThermalMultiStart start_time_limits."""
170c170
< """Get [`ThermalMultiStart`](@ref) `start_types`."""
---
> """Get ThermalMultiStart start_types."""
172c172
< """Get [`ThermalMultiStart`](@ref) `operation_cost`."""
---
> """Get ThermalMultiStart operation_cost."""
174c174
< """Get [`ThermalMultiStart`](@ref) `base_power`."""
---
> """Get ThermalMultiStart base_power."""
176c176
< """Get [`ThermalMultiStart`](@ref) `services`."""
---
> """Get ThermalMultiStart services."""
178c178
< """Get [`ThermalMultiStart`](@ref) `time_at_status`."""
---
> """Get ThermalMultiStart time_at_status."""
180c180
< """Get [`ThermalMultiStart`](@ref) `must_run`."""
---
> """Get ThermalMultiStart must_run."""
182c182
< """Get [`ThermalMultiStart`](@ref) `dynamic_injector`."""
---
> """Get ThermalMultiStart dynamic_injector."""
184c184
< """Get [`ThermalMultiStart`](@ref) `ext`."""
---
> """Get ThermalMultiStart ext."""
188c188
< """Get [`ThermalMultiStart`](@ref) `internal`."""
---
> """Get ThermalMultiStart internal."""
193c193
< """Set [`ThermalMultiStart`](@ref) `available`."""
---
> """Set ThermalMultiStart available."""
195c195
< """Set [`ThermalMultiStart`](@ref) `status`."""
---
> """Set ThermalMultiStart status."""
197c197
< """Set [`ThermalMultiStart`](@ref) `bus`."""
---
> """Set ThermalMultiStart bus."""
199c199
< """Set [`ThermalMultiStart`](@ref) `active_power`."""
---
> """Set ThermalMultiStart active_power."""
201c201
< """Set [`ThermalMultiStart`](@ref) `reactive_power`."""
---
> """Set ThermalMultiStart reactive_power."""
203c203
< """Set [`ThermalMultiStart`](@ref) `rating`."""
---
> """Set ThermalMultiStart rating."""
205c205
< """Set [`ThermalMultiStart`](@ref) `prime_mover`."""
---
> """Set ThermalMultiStart prime_mover."""
207c207
< """Set [`ThermalMultiStart`](@ref) `fuel`."""
---
> """Set ThermalMultiStart fuel."""
209c209
< """Set [`ThermalMultiStart`](@ref) `active_power_limits`."""
---
> """Set ThermalMultiStart active_power_limits."""
211c211
< """Set [`ThermalMultiStart`](@ref) `reactive_power_limits`."""
---
> """Set ThermalMultiStart reactive_power_limits."""
213c213
< """Set [`ThermalMultiStart`](@ref) `ramp_limits`."""
---
> """Set ThermalMultiStart ramp_limits."""
215c215
< """Set [`ThermalMultiStart`](@ref) `power_trajectory`."""
---
> """Set ThermalMultiStart power_trajectory."""
217c217
< """Set [`ThermalMultiStart`](@ref) `time_limits`."""
---
> """Set ThermalMultiStart time_limits."""
219c219
< """Set [`ThermalMultiStart`](@ref) `start_time_limits`."""
---
> """Set ThermalMultiStart start_time_limits."""
221c221
< """Set [`ThermalMultiStart`](@ref) `start_types`."""
---
> """Set ThermalMultiStart start_types."""
223c223
< """Set [`ThermalMultiStart`](@ref) `operation_cost`."""
---
> """Set ThermalMultiStart operation_cost."""
225c225
< """Set [`ThermalMultiStart`](@ref) `base_power`."""
---
> """Set ThermalMultiStart base_power."""
227c227
< """Set [`ThermalMultiStart`](@ref) `services`."""
---
> """Set ThermalMultiStart services."""
229c229
< """Set [`ThermalMultiStart`](@ref) `time_at_status`."""
---
> """Set ThermalMultiStart time_at_status."""
231c231
< """Set [`ThermalMultiStart`](@ref) `must_run`."""
---
> """Set ThermalMultiStart must_run."""
233c233
< """Set [`ThermalMultiStart`](@ref) `ext`."""
---
> """Set ThermalMultiStart ext."""
237c237
< """Set [`ThermalMultiStart`](@ref) `internal`."""
---
> """Set ThermalMultiStart internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ThermalStandard.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ThermalStandard.jl
36,38c36,38
< - `active_power::Float64`, validation range: `active_power_limits`, action if invalid: `warn`
< - `reactive_power::Float64`, validation range: `reactive_power_limits`, action if invalid: `warn`
< - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `active_power::Float64`, validation range: active_power_limits, action if invalid: warn
> - `reactive_power::Float64`, validation range: reactive_power_limits, action if invalid: warn
> - `rating::Float64`: Thermal limited MVA Power Output of the unit. <= Capacity, validation range: (0, nothing), action if invalid: error
41c41
< - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `ramp_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: ramp up and ramp down limits in MW (in component base per unit) per minute, validation range: (0, nothing), action if invalid: error
43,44c43,44
< - `base_power::Float64`: Base power of the unit in MVA, validation range: `(0, nothing)`, action if invalid: `warn`
< - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `base_power::Float64`: Base power of the unit in MVA, validation range: (0, nothing), action if invalid: warn
> - `time_limits::Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}`: Minimum up and Minimum down time limits in hours, validation range: (0, nothing), action if invalid: error
124c124
< """Get [`ThermalStandard`](@ref) `available`."""
---
> """Get ThermalStandard available."""
126c126
< """Get [`ThermalStandard`](@ref) `status`."""
---
> """Get ThermalStandard status."""
128c128
< """Get [`ThermalStandard`](@ref) `bus`."""
---
> """Get ThermalStandard bus."""
130c130
< """Get [`ThermalStandard`](@ref) `active_power`."""
---
> """Get ThermalStandard active_power."""
132c132
< """Get [`ThermalStandard`](@ref) `reactive_power`."""
---
> """Get ThermalStandard reactive_power."""
134c134
< """Get [`ThermalStandard`](@ref) `rating`."""
---
> """Get ThermalStandard rating."""
136c136
< """Get [`ThermalStandard`](@ref) `active_power_limits`."""
---
> """Get ThermalStandard active_power_limits."""
138c138
< """Get [`ThermalStandard`](@ref) `reactive_power_limits`."""
---
> """Get ThermalStandard reactive_power_limits."""
140c140
< """Get [`ThermalStandard`](@ref) `ramp_limits`."""
---
> """Get ThermalStandard ramp_limits."""
142c142
< """Get [`ThermalStandard`](@ref) `operation_cost`."""
---
> """Get ThermalStandard operation_cost."""
144c144
< """Get [`ThermalStandard`](@ref) `base_power`."""
---
> """Get ThermalStandard base_power."""
146c146
< """Get [`ThermalStandard`](@ref) `time_limits`."""
---
> """Get ThermalStandard time_limits."""
148c148
< """Get [`ThermalStandard`](@ref) `prime_mover`."""
---
> """Get ThermalStandard prime_mover."""
150c150
< """Get [`ThermalStandard`](@ref) `fuel`."""
---
> """Get ThermalStandard fuel."""
152c152
< """Get [`ThermalStandard`](@ref) `services`."""
---
> """Get ThermalStandard services."""
154c154
< """Get [`ThermalStandard`](@ref) `time_at_status`."""
---
> """Get ThermalStandard time_at_status."""
156c156
< """Get [`ThermalStandard`](@ref) `dynamic_injector`."""
---
> """Get ThermalStandard dynamic_injector."""
158c158
< """Get [`ThermalStandard`](@ref) `ext`."""
---
> """Get ThermalStandard ext."""
162c162
< """Get [`ThermalStandard`](@ref) `internal`."""
---
> """Get ThermalStandard internal."""
167c167
< """Set [`ThermalStandard`](@ref) `available`."""
---
> """Set ThermalStandard available."""
169c169
< """Set [`ThermalStandard`](@ref) `status`."""
---
> """Set ThermalStandard status."""
171c171
< """Set [`ThermalStandard`](@ref) `bus`."""
---
> """Set ThermalStandard bus."""
173c173
< """Set [`ThermalStandard`](@ref) `active_power`."""
---
> """Set ThermalStandard active_power."""
175c175
< """Set [`ThermalStandard`](@ref) `reactive_power`."""
---
> """Set ThermalStandard reactive_power."""
177c177
< """Set [`ThermalStandard`](@ref) `rating`."""
---
> """Set ThermalStandard rating."""
179c179
< """Set [`ThermalStandard`](@ref) `active_power_limits`."""
---
> """Set ThermalStandard active_power_limits."""
181c181
< """Set [`ThermalStandard`](@ref) `reactive_power_limits`."""
---
> """Set ThermalStandard reactive_power_limits."""
183c183
< """Set [`ThermalStandard`](@ref) `ramp_limits`."""
---
> """Set ThermalStandard ramp_limits."""
185c185
< """Set [`ThermalStandard`](@ref) `operation_cost`."""
---
> """Set ThermalStandard operation_cost."""
187c187
< """Set [`ThermalStandard`](@ref) `base_power`."""
---
> """Set ThermalStandard base_power."""
189c189
< """Set [`ThermalStandard`](@ref) `time_limits`."""
---
> """Set ThermalStandard time_limits."""
191c191
< """Set [`ThermalStandard`](@ref) `prime_mover`."""
---
> """Set ThermalStandard prime_mover."""
193c193
< """Set [`ThermalStandard`](@ref) `fuel`."""
---
> """Set ThermalStandard fuel."""
195c195
< """Set [`ThermalStandard`](@ref) `services`."""
---
> """Set ThermalStandard services."""
197c197
< """Set [`ThermalStandard`](@ref) `time_at_status`."""
---
> """Set ThermalStandard time_at_status."""
199c199
< """Set [`ThermalStandard`](@ref) `ext`."""
---
> """Set ThermalStandard ext."""
203c203
< """Set [`ThermalStandard`](@ref) `internal`."""
---
> """Set ThermalStandard internal."""
diff --strip-trailing-cr tmp-test-generated-structs/ThreePartCost.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/ThreePartCost.jl
19,20c19,20
< - `startup::Float64`: startup cost, validation range: `(0, nothing)`, action if invalid: `warn`
< - `shutdn::Float64`: shutdown cost, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `startup::Float64`: startup cost, validation range: (0, nothing), action if invalid: warn
> - `shutdn::Float64`: shutdown cost, validation range: (0, nothing), action if invalid: warn
58c58
< """Get [`ThreePartCost`](@ref) `variable`."""
---
> """Get ThreePartCost variable."""
60c60
< """Get [`ThreePartCost`](@ref) `fixed`."""
---
> """Get ThreePartCost fixed."""
62c62
< """Get [`ThreePartCost`](@ref) `startup`."""
---
> """Get ThreePartCost startup."""
64c64
< """Get [`ThreePartCost`](@ref) `shutdn`."""
---
> """Get ThreePartCost shutdn."""
68c68
< """Get [`ThreePartCost`](@ref) `internal`."""
---
> """Get ThreePartCost internal."""
71c71
< """Set [`ThreePartCost`](@ref) `variable`."""
---
> """Set ThreePartCost variable."""
73c73
< """Set [`ThreePartCost`](@ref) `fixed`."""
---
> """Set ThreePartCost fixed."""
75c75
< """Set [`ThreePartCost`](@ref) `startup`."""
---
> """Set ThreePartCost startup."""
77c77
< """Set [`ThreePartCost`](@ref) `shutdn`."""
---
> """Set ThreePartCost shutdn."""
81c81
< """Set [`ThreePartCost`](@ref) `internal`."""
---
> """Set ThreePartCost internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Transfer.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Transfer.jl
56c56
< """Get [`Transfer`](@ref) `available`."""
---
> """Get Transfer available."""
58c58
< """Get [`Transfer`](@ref) `requirement`."""
---
> """Get Transfer requirement."""
60c60
< """Get [`Transfer`](@ref) `ext`."""
---
> """Get Transfer ext."""
64c64
< """Get [`Transfer`](@ref) `internal`."""
---
> """Get Transfer internal."""
69c69
< """Set [`Transfer`](@ref) `available`."""
---
> """Set Transfer available."""
71c71
< """Set [`Transfer`](@ref) `requirement`."""
---
> """Set Transfer requirement."""
73c73
< """Set [`Transfer`](@ref) `ext`."""
---
> """Set Transfer ext."""
77c77
< """Set [`Transfer`](@ref) `internal`."""
---
> """Set Transfer internal."""
diff --strip-trailing-cr tmp-test-generated-structs/Transformer2W.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/Transformer2W.jl
29,32c29,32
< - `r::Float64`: System per-unit value, validation range: `(-2, 4)`, action if invalid: `error`
< - `x::Float64`: System per-unit value, validation range: `(-2, 4)`, action if invalid: `error`
< - `primary_shunt::Float64`: System per-unit value, validation range: `(0, 2)`, action if invalid: `error`
< - `rate::Union{Nothing, Float64}`, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `r::Float64`: System per-unit value, validation range: (-2, 4), action if invalid: error
> - `x::Float64`: System per-unit value, validation range: (-2, 4), action if invalid: error
> - `primary_shunt::Float64`: System per-unit value, validation range: (0, 2), action if invalid: error
> - `rate::Union{Nothing, Float64}`, validation range: (0, nothing), action if invalid: error
88c88
< """Get [`Transformer2W`](@ref) `available`."""
---
> """Get Transformer2W available."""
90c90
< """Get [`Transformer2W`](@ref) `active_power_flow`."""
---
> """Get Transformer2W active_power_flow."""
92c92
< """Get [`Transformer2W`](@ref) `reactive_power_flow`."""
---
> """Get Transformer2W reactive_power_flow."""
94c94
< """Get [`Transformer2W`](@ref) `arc`."""
---
> """Get Transformer2W arc."""
96c96
< """Get [`Transformer2W`](@ref) `r`."""
---
> """Get Transformer2W r."""
98c98
< """Get [`Transformer2W`](@ref) `x`."""
---
> """Get Transformer2W x."""
100c100
< """Get [`Transformer2W`](@ref) `primary_shunt`."""
---
> """Get Transformer2W primary_shunt."""
102c102
< """Get [`Transformer2W`](@ref) `rate`."""
---
> """Get Transformer2W rate."""
104c104
< """Get [`Transformer2W`](@ref) `services`."""
---
> """Get Transformer2W services."""
106c106
< """Get [`Transformer2W`](@ref) `ext`."""
---
> """Get Transformer2W ext."""
110c110
< """Get [`Transformer2W`](@ref) `internal`."""
---
> """Get Transformer2W internal."""
115c115
< """Set [`Transformer2W`](@ref) `available`."""
---
> """Set Transformer2W available."""
117c117
< """Set [`Transformer2W`](@ref) `active_power_flow`."""
---
> """Set Transformer2W active_power_flow."""
119c119
< """Set [`Transformer2W`](@ref) `reactive_power_flow`."""
---
> """Set Transformer2W reactive_power_flow."""
121c121
< """Set [`Transformer2W`](@ref) `arc`."""
---
> """Set Transformer2W arc."""
123c123
< """Set [`Transformer2W`](@ref) `r`."""
---
> """Set Transformer2W r."""
125c125
< """Set [`Transformer2W`](@ref) `x`."""
---
> """Set Transformer2W x."""
127c127
< """Set [`Transformer2W`](@ref) `primary_shunt`."""
---
> """Set Transformer2W primary_shunt."""
129c129
< """Set [`Transformer2W`](@ref) `rate`."""
---
> """Set Transformer2W rate."""
131c131
< """Set [`Transformer2W`](@ref) `services`."""
---
> """Set Transformer2W services."""
133c133
< """Set [`Transformer2W`](@ref) `ext`."""
---
> """Set Transformer2W ext."""
137c137
< """Set [`Transformer2W`](@ref) `internal`."""
---
> """Set Transformer2W internal."""
diff --strip-trailing-cr tmp-test-generated-structs/TwoPartCost.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/TwoPartCost.jl
16c16
< - `fixed::Float64`: fixed cost, validation range: `(0, nothing)`, action if invalid: `warn`
---
> - `fixed::Float64`: fixed cost, validation range: (0, nothing), action if invalid: warn
48c48
< """Get [`TwoPartCost`](@ref) `variable`."""
---
> """Get TwoPartCost variable."""
50c50
< """Get [`TwoPartCost`](@ref) `fixed`."""
---
> """Get TwoPartCost fixed."""
54c54
< """Get [`TwoPartCost`](@ref) `internal`."""
---
> """Get TwoPartCost internal."""
57c57
< """Set [`TwoPartCost`](@ref) `variable`."""
---
> """Set TwoPartCost variable."""
59c59
< """Set [`TwoPartCost`](@ref) `fixed`."""
---
> """Set TwoPartCost fixed."""
63c63
< """Set [`TwoPartCost`](@ref) `internal`."""
---
> """Set TwoPartCost internal."""
diff --strip-trailing-cr tmp-test-generated-structs/VSCDCLine.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/VSCDCLine.jl
89c89
< """Get [`VSCDCLine`](@ref) `available`."""
---
> """Get VSCDCLine available."""
91c91
< """Get [`VSCDCLine`](@ref) `active_power_flow`."""
---
> """Get VSCDCLine active_power_flow."""
93c93
< """Get [`VSCDCLine`](@ref) `arc`."""
---
> """Get VSCDCLine arc."""
95c95
< """Get [`VSCDCLine`](@ref) `rectifier_tap_limits`."""
---
> """Get VSCDCLine rectifier_tap_limits."""
97c97
< """Get [`VSCDCLine`](@ref) `rectifier_xrc`."""
---
> """Get VSCDCLine rectifier_xrc."""
99c99
< """Get [`VSCDCLine`](@ref) `rectifier_firing_angle`."""
---
> """Get VSCDCLine rectifier_firing_angle."""
101c101
< """Get [`VSCDCLine`](@ref) `inverter_tap_limits`."""
---
> """Get VSCDCLine inverter_tap_limits."""
103c103
< """Get [`VSCDCLine`](@ref) `inverter_xrc`."""
---
> """Get VSCDCLine inverter_xrc."""
105c105
< """Get [`VSCDCLine`](@ref) `inverter_firing_angle`."""
---
> """Get VSCDCLine inverter_firing_angle."""
107c107
< """Get [`VSCDCLine`](@ref) `services`."""
---
> """Get VSCDCLine services."""
109c109
< """Get [`VSCDCLine`](@ref) `ext`."""
---
> """Get VSCDCLine ext."""
113c113
< """Get [`VSCDCLine`](@ref) `internal`."""
---
> """Get VSCDCLine internal."""
118c118
< """Set [`VSCDCLine`](@ref) `available`."""
---
> """Set VSCDCLine available."""
120c120
< """Set [`VSCDCLine`](@ref) `active_power_flow`."""
---
> """Set VSCDCLine active_power_flow."""
122c122
< """Set [`VSCDCLine`](@ref) `arc`."""
---
> """Set VSCDCLine arc."""
124c124
< """Set [`VSCDCLine`](@ref) `rectifier_tap_limits`."""
---
> """Set VSCDCLine rectifier_tap_limits."""
126c126
< """Set [`VSCDCLine`](@ref) `rectifier_xrc`."""
---
> """Set VSCDCLine rectifier_xrc."""
128c128
< """Set [`VSCDCLine`](@ref) `rectifier_firing_angle`."""
---
> """Set VSCDCLine rectifier_firing_angle."""
130c130
< """Set [`VSCDCLine`](@ref) `inverter_tap_limits`."""
---
> """Set VSCDCLine inverter_tap_limits."""
132c132
< """Set [`VSCDCLine`](@ref) `inverter_xrc`."""
---
> """Set VSCDCLine inverter_xrc."""
134c134
< """Set [`VSCDCLine`](@ref) `inverter_firing_angle`."""
---
> """Set VSCDCLine inverter_firing_angle."""
136c136
< """Set [`VSCDCLine`](@ref) `services`."""
---
> """Set VSCDCLine services."""
138c138
< """Set [`VSCDCLine`](@ref) `ext`."""
---
> """Set VSCDCLine ext."""
142c142
< """Set [`VSCDCLine`](@ref) `internal`."""
---
> """Set VSCDCLine internal."""
diff --strip-trailing-cr tmp-test-generated-structs/VariableReserve.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/VariableReserve.jl
20c20
< - `time_frame::Float64`: the relative saturation time_frame, validation range: `(0, nothing)`, action if invalid: `error`
---
> - `time_frame::Float64`: the relative saturation time_frame, validation range: (0, nothing), action if invalid: error
62c62
< """Get [`VariableReserve`](@ref) `available`."""
---
> """Get VariableReserve available."""
64c64
< """Get [`VariableReserve`](@ref) `time_frame`."""
---
> """Get VariableReserve time_frame."""
66c66
< """Get [`VariableReserve`](@ref) `requirement`."""
---
> """Get VariableReserve requirement."""
68c68
< """Get [`VariableReserve`](@ref) `ext`."""
---
> """Get VariableReserve ext."""
72c72
< """Get [`VariableReserve`](@ref) `internal`."""
---
> """Get VariableReserve internal."""
77c77
< """Set [`VariableReserve`](@ref) `available`."""
---
> """Set VariableReserve available."""
79c79
< """Set [`VariableReserve`](@ref) `time_frame`."""
---
> """Set VariableReserve time_frame."""
81c81
< """Set [`VariableReserve`](@ref) `requirement`."""
---
> """Set VariableReserve requirement."""
83c83
< """Set [`VariableReserve`](@ref) `ext`."""
---
> """Set VariableReserve ext."""
87c87
< """Set [`VariableReserve`](@ref) `internal`."""
---
> """Set VariableReserve internal."""
diff --strip-trailing-cr tmp-test-generated-structs/VirtualInertia.jl /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated/VirtualInertia.jl
18,21c18,21
< - `Ta::Float64`: VSM inertia constant, validation range: `(0, nothing)`
< - `kd::Float64`: VSM damping constant, validation range: `(0, nothing)`
< - `kω::Float64`: frequency droop gain, validation range: `(0, nothing)`
< - `P_ref::Float64`: Reference Power Set-point, validation range: `(0, nothing)`
---
> - `Ta::Float64`: VSM inertia constant, validation range: (0, nothing)
> - `kd::Float64`: VSM damping constant, validation range: (0, nothing)
> - `kω::Float64`: frequency droop gain, validation range: (0, nothing)
> - `P_ref::Float64`: Reference Power Set-point, validation range: (0, nothing)
65c65
< """Get [`VirtualInertia`](@ref) `Ta`."""
---
> """Get VirtualInertia Ta."""
67c67
< """Get [`VirtualInertia`](@ref) `kd`."""
---
> """Get VirtualInertia kd."""
69c69
< """Get [`VirtualInertia`](@ref) `kω`."""
---
> """Get VirtualInertia kω."""
71c71
< """Get [`VirtualInertia`](@ref) `P_ref`."""
---
> """Get VirtualInertia P_ref."""
73c73
< """Get [`VirtualInertia`](@ref) `ext`."""
---
> """Get VirtualInertia ext."""
75c75
< """Get [`VirtualInertia`](@ref) `states`."""
---
> """Get VirtualInertia states."""
77c77
< """Get [`VirtualInertia`](@ref) `n_states`."""
---
> """Get VirtualInertia n_states."""
80c80
< """Set [`VirtualInertia`](@ref) `Ta`."""
---
> """Set VirtualInertia Ta."""
82c82
< """Set [`VirtualInertia`](@ref) `kd`."""
---
> """Set VirtualInertia kd."""
84c84
< """Set [`VirtualInertia`](@ref) `kω`."""
---
> """Set VirtualInertia kω."""
86c86
< """Set [`VirtualInertia`](@ref) `P_ref`."""
---
> """Set VirtualInertia P_ref."""
88c88
< """Set [`VirtualInertia`](@ref) `ext`."""
---
> """Set VirtualInertia ext."""
90c90
< """Set [`VirtualInertia`](@ref) `states`."""
---
> """Set VirtualInertia states."""
92c92
< """Set [`VirtualInertia`](@ref) `n_states`."""
---
> """Set VirtualInertia n_states."""
┌ Error: Generated structs do not match the descriptor file.
│   err =
│    failed process: Process(`diff --strip-trailing-cr tmp-test-generated-structs /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/../src/models/generated`, ProcessExited(1)) [1]
│    
└ @ InfrastructureSystems ~/.julia/packages/InfrastructureSystems/3hN9J/src/utils/generate_structs.jl:240
Test generated structs: Test Failed at /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/test_generate_structs.jl:5
  Expression: IS.test_generated_structs(descriptor_file, existing_dir)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/test_generate_structs.jl:5
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/test_generate_structs.jl:2

test_internal: 
test_network_matrices: 
test_parse_dynamics: 
test_parse_matpower: 
test_parse_psse: 
test_parse_tamu: 
test_power_system_table_data: 
test_powerflow: 
test_powersystemconstructors: 
test_printing: 
test_readforecastdata: 
test_readnetworkdata: 
test_serialization: 
test_services: 
test_system: 
test_topology: 
test_validation: 
Test Summary:                                                    |  Pass  Fail  Total
Begin PowerSystems tests                                         | 13839     1  13840
  Test base checks                                               |     1            1
  Time resolution                                                |     4            4
  Angle limits                                                   |     7            7
  Check bus index                                                |     3            3
  Test unique bus numbers                                        |     1            1
  Bus Constructors                                               |     2            2
  Generation Constructors                                        |     8            8
  Source Constructors                                            |     1            1
  Storage Constructors                                           |     1            1
  Load Constructors                                              |     5            5
  Branch Constructors                                            |     7            7
  Service Constructors                                           |     2            2
  Forecast Constructors                                          |     6            6
  Regulation Device                                              |     7            7
  TestData                                                       |     1            1
  Test special accessors                                         |     5            5
  Dynamic Machines                                               |    10           10
  Dynamic Shaft                                                  |     2            2
  Dynamic PSS                                                    |     1            1
  Dynamic Turbine Governor Constructors                          |     4            4
  Dynamic AVR Constructors                                       |     7            7
  Dynamic Generators                                             |    19           19
  Forward functions                                              |    60           60
  Inverter Components                                            |     8            8
  Dynamic Inverter                                               |     2            2
  Test generated structs                                         |           1      1
  Test internal values                                           |     1            1
  PTDF matrices                                                  |  8793         8793
  LODF matrices                                                  |    40           40
  Ybus Matrix                                                    |    75           75
  2-area, 11-bus, 4-generator benchmark system Parsing           |     7            7
  GENCLS dyr parsing                                             |    27           27
  Parse Matpower data files                                      |   266          266
  Parse PowerModel Matpower data files                           |   194          194
  PSSE Parsing                                                   |     5            5
  PSSE PowerModel Parsing                                        |     5            5
  TAMU Parsing                                                   |     1            1
  PowerSystemTableData parsing                                   |   712          712
  PowerSystemTableData parsing invalid directory                 |     1            1
  consistency between PowerSystemTableData and standardfiles     |   799          799
  Test reserve direction                                         |     6            6
  test set                                                       |     6            6
  Test System constructors from .jl files                        |              No tests
  Test System constructor from Matpower                          |              No tests
  Test accessor functions of PowerSystems auto-generated types   |  1199         1199
  Test component conversion                                      |     8            8
  Test read_time_series_metadata                                 |   544          544
  Test forecast normalization                                    |     3            3
  Test single forecast addition                                  |     3            3
  Forecast data matpower                                         |     4            4
  read_data                                                      |              No tests
  Test JSON serialization of RTS data with mutable time series   |    49           49
  Test JSON serialization of RTS data with immutable time series |     2            2
  Test JSON serialization of matpower data                       |     1            1
  Test JSON serialization of ACTIVSg2000 data                    |     1            1
  Test JSON serialization of dynamic inverter                    |     1            1
  Test JSON serialization of StaticGroupReserve                  |     1            1
  Test deepcopy of a system                                      |     1            1
  Test add/remove services                                       |    10           10
  Test add_component Service                                     |     2            2
  Test add_service errors                                        |     2            2
  Test remove service from device                                |     2            2
  Test has service                                               |     4            4
  Test remove device with service                                |     2            2
  Test clear_services                                            |     2            2
  Test add device with service                                   |     2            2
  Test get_contributing_devices                                  |    11           11
  Test get_component combinations                                |    10           10
  Test struct type collections                                   |     1            1
  Test AGC Device and Regulation Services                        |    27           27
  Test StaticReserveGroup                                        |     3            3
  Test StaticReserveGroup errors                                 |     3            3
  Test functionality of System                                   |    28           28
  Test handling of bus_numbers                                   |     7            7
  Test System iterators                                          |     2            2
  Test remove_component                                          |     7            7
  Test missing Arc bus                                           |     1            1
  Test frequency set                                             |     1            1
  Test exported names                                            |     1            1
  Test system ext                                                |     2            2
  Test system checks                                             |     1            1
  Test system units                                              |     2            2
  Test topology mappings                                         |    50           50
  Test PM areas and load zones                                   |    50           50
  Test get_components_in_aggregation_topology                    |    26           26
  Test reading in config data                                    |     4            4
  Test adding custom validation YAML file to System              |     2            2
  Test extracting struct info from validation_descriptor vector  |     4            4
  Test extracting field info from struct descriptor dictionary   |     3            3
  Test retrieving validation action                              |     3            3
  Test field validation                                          |     5            5
  Test field validation                                          |     2            2
  Test field validation after deserialization                    |     2            2
ERROR: LoadError: Some tests did not pass: 13839 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PowerSystems/cvPQ9/test/runtests.jl:119
ERROR: Package PowerSystems errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1566
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:328
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:315
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:16
