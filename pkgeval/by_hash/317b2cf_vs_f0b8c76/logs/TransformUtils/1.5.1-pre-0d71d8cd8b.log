Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_yzmDi3/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_yzmDi3/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08820936628493241 0.06385934925428997; -0.08820936628493241 0.0 -0.012057451617848427; -0.06385934925428997 0.012057451617848427 0.0])
dAA = so3([0.0 -0.04419046745405066 -0.17426955673036443; 0.04419046745405066 0.0 0.32687841823815417; 0.17426955673036443 -0.32687841823815417 0.0])
dAA = so3([0.0 -0.17116200336164852 -0.016455019859512126; 0.17116200336164852 0.0 -0.19561556915105327; 0.016455019859512126 0.19561556915105327 0.0])
dAA = Quaternion(0.9990041609361713, [-0.028688161859602948, 0.029368037656299004, 0.017469807255715772])
dAA = SO3([0.9981814997520317 -0.023088313999450452 -0.05568324083104128; 0.021002963457133206 0.999066505195572 -0.037749089026421045; 0.056502823635667006 0.03651092922631681 0.9977346255233543])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9061042610326729 0.07033769672120777 -0.4171662457083375; 0.2606229432869944 0.6839348263117191 0.6814021094701591; 0.33324277872274694 -0.7261444496640556 0.6013846428461805]), [0.12057451617848426, 0.6385934925428998, -0.882093662849324])
xj = SE3(SO3([0.9854539263688266 -0.09301993264521816 0.14222465023666772; 0.07204750418248833 0.9866437848475313 0.14609311743820327; -0.15391463915215378 -0.13372110511216023 0.9789938456917106]), [1.9561556915105325, -0.16455019859512127, 1.711620033616485])
Dx = SE3(SO3([0.8604102922935212 0.12829465721052652 0.4931882093548171; 0.23035461760727932 0.7653580760899458 -0.6009690220892427; -0.45456669374513303 0.6306881133295049 0.6289686992549696]), [2.318246611194473, -2.30359819359046, 0.24681327203907183])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
