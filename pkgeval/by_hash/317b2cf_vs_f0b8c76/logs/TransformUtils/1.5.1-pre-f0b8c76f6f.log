Julia Version 1.5.1-pre.0
Commit f0b8c76f6f (2020-08-02 04:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_s96PnB/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_s96PnB/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.133820429028378 -0.15364880395998426; -0.133820429028378 0.0 -0.03163468418737919; 0.15364880395998426 0.03163468418737919 0.0])
dAA = so3([0.0 0.00822862017168674 -0.013058391922984074; -0.00822862017168674 0.0 -0.17281858748139778; 0.013058391922984074 0.17281858748139778 0.0])
dAA = so3([0.0 -0.0742074158966864 -0.06556432633418467; 0.0742074158966864 0.0 0.12189722874962482; 0.06556432633418467 -0.12189722874962482 0.0])
dAA = Quaternion(0.9950513020396019, [0.0960551210206131, 0.009688435811027728, -0.02350434526941904])
dAA = SO3([0.9915846904278457 0.12675798255662182 -0.02630998987625632; -0.12414180943243294 0.9886594464091972 0.08450627300207585; 0.0367234647052134 -0.08052895680458692 0.9960755364208128])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9992671256228105 0.012990086555459907 -0.036006517476811016; -0.026874897502193174 0.9079138730206345 -0.41829432109570613; 0.02725713729966609 0.4189554353722514 0.9075975934511255]), [0.3163468418737919, -1.5364880395998426, -1.33820429028378])
xj = SE3(SO3([0.9920826628458467 0.12178253868598629 0.030675777934557273; -0.09381533313392655 0.8810398097776657 -0.46364591754474127; -0.08349055844623633 0.45709721816932 0.885489389994146]), [-1.218972287496248, -0.6556432633418466, 0.742074158966864])
Dx = SE3(SO3([0.9916011547295066 0.1104745944356043 0.06724963883470192; -0.10726782605712099 0.9929935957446507 -0.04957148679521911; -0.0722548505782715 0.04194142098687276 0.9965039657590499]), [-1.5011641110838303, 1.651331227362937, 1.574884841636731])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
