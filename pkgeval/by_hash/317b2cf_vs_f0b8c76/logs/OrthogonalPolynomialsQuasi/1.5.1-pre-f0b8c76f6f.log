Julia Version 1.5.1-pre.0
Commit f0b8c76f6f (2020-08-02 04:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed EllipsisNotation ───────────── v0.4.0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed MatrixFactorizations ───────── v0.4.1
  Installed LazyBandedMatrices ─────────── v0.2.12
  Installed OrthogonalPolynomialsQuasi ─── v0.1.3
  Installed LazyArrays ─────────────────── v0.16.16
  Installed Intervals ──────────────────── v1.4.2
  Installed DataAPI ────────────────────── v1.3.0
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed MPFR_jll ───────────────────── v4.0.2+2
  Installed InfiniteArrays ─────────────── v0.7.3
  Installed ArrayLayouts ───────────────── v0.3.8
  Installed BinaryProvider ─────────────── v0.5.10
  Installed BandedMatrices ─────────────── v0.15.15
  Installed TimeZones ──────────────────── v1.3.2
  Installed ContinuumArrays ────────────── v0.2.4
  Installed OrderedCollections ─────────── v1.3.0
  Installed RecipesBase ────────────────── v1.0.2
  Installed BlockArrays ────────────────── v0.12.11
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed GMP_jll ────────────────────── v6.1.2+5
  Installed InfiniteLinearAlgebra ──────── v0.3.5
  Installed DomainSets ─────────────────── v0.4.1
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed FastTransforms_jll ─────────── v0.3.3+0
  Installed Mocking ────────────────────── v0.7.1
  Installed Polynomials ────────────────── v1.1.4
  Installed QuasiArrays ────────────────── v0.2.3
  Installed ToeplitzMatrices ───────────── v0.6.2
  Installed Compat ─────────────────────── v3.13.0
  Installed IterTools ──────────────────── v1.3.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed StatsBase ──────────────────── v0.33.0
  Installed ExprTools ──────────────────── v0.1.1
  Installed Reexport ───────────────────── v0.2.0
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed IntervalSets ───────────────── v0.5.1
  Installed BlockBandedMatrices ────────── v0.8.11
  Installed OffsetArrays ───────────────── v1.1.2
  Installed MacroTools ─────────────────── v0.5.5
  Installed StaticArrays ───────────────── v0.12.4
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed EzXML ──────────────────────── v1.1.0
  Installed FillArrays ─────────────────── v0.8.14
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FFTW ───────────────────────── v1.2.2
  Installed DSP ────────────────────────── v0.6.7
  Installed DataStructures ─────────────── v0.17.20
  Installed FastTransforms ─────────────── v0.9.4
  Installed SemiseparableMatrices ──────── v0.1.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [aa41a628] + OrthogonalPolynomialsQuasi v0.1.3
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4c555306] + ArrayLayouts v0.3.8
  [aae01518] + BandedMatrices v0.15.15
  [b99e7846] + BinaryProvider v0.5.10
  [8e7c35d0] + BlockArrays v0.12.11
  [ffab5731] + BlockBandedMatrices v0.8.11
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [7ae1f121] + ContinuumArrays v0.2.4
  [717857b8] + DSP v0.6.7
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [5b8099bc] + DomainSets v0.4.1
  [da5c29d0] + EllipsisNotation v0.4.0
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.2
  [057dd010] + FastTransforms v0.9.4
  [34b6f7d7] + FastTransforms_jll v0.3.3+0
  [1a297f60] + FillArrays v0.8.14
  [781609d7] + GMP_jll v6.1.2+5
  [4858937d] + InfiniteArrays v0.7.3
  [cde9dba0] + InfiniteLinearAlgebra v0.3.5
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [8197267c] + IntervalSets v0.5.1
  [d8418881] + Intervals v1.4.2
  [c8e1da08] + IterTools v1.3.0
  [5078a376] + LazyArrays v0.16.16
  [d7e5e226] + LazyBandedMatrices v0.2.12
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [856f044c] + MKL_jll v2020.2.254+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.4.1
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [aa41a628] + OrthogonalPolynomialsQuasi v0.1.3
  [f27b6e38] + Polynomials v1.1.4
  [c4ea9172] + QuasiArrays v0.2.3
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [f8ebbe35] + SemiseparableMatrices v0.1.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.3.2
  [c751599d] + ToeplitzMatrices v0.6.2
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones ─────→ `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
   Building FFTW ──────────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building FastTransforms → `~/.julia/packages/FastTransforms/H10MA/deps/build.log`
    Testing OrthogonalPolynomialsQuasi
Status `/tmp/jl_70313L/Project.toml`
  [4c555306] ArrayLayouts v0.3.8
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.11
  [ffab5731] BlockBandedMatrices v0.8.11
  [7ae1f121] ContinuumArrays v0.2.4
  [5b8099bc] DomainSets v0.4.1
  [057dd010] FastTransforms v0.9.4
  [1a297f60] FillArrays v0.8.14
  [f6369f11] ForwardDiff v0.10.12
  [4858937d] InfiniteArrays v0.7.3
  [cde9dba0] InfiniteLinearAlgebra v0.3.5
  [8197267c] IntervalSets v0.5.1
  [5078a376] LazyArrays v0.16.16
  [d7e5e226] LazyBandedMatrices v0.2.12
  [aa41a628] OrthogonalPolynomialsQuasi v0.1.3
  [c4ea9172] QuasiArrays v0.2.3
  [f8ebbe35] SemiseparableMatrices v0.1.2
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_70313L/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4c555306] ArrayLayouts v0.3.8
  [aae01518] BandedMatrices v0.15.15
  [b99e7846] BinaryProvider v0.5.10
  [8e7c35d0] BlockArrays v0.12.11
  [ffab5731] BlockBandedMatrices v0.8.11
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [7ae1f121] ContinuumArrays v0.2.4
  [717857b8] DSP v0.6.7
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [5b8099bc] DomainSets v0.4.1
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.9.4
  [34b6f7d7] FastTransforms_jll v0.3.3+0
  [1a297f60] FillArrays v0.8.14
  [f6369f11] ForwardDiff v0.10.12
  [781609d7] GMP_jll v6.1.2+5
  [4858937d] InfiniteArrays v0.7.3
  [cde9dba0] InfiniteLinearAlgebra v0.3.5
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.4.2
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.16
  [d7e5e226] LazyBandedMatrices v0.2.12
  [94ce4f54] Libiconv_jll v1.16.0+5
  [856f044c] MKL_jll v2020.2.254+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.4.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [aa41a628] OrthogonalPolynomialsQuasi v0.1.3
  [f27b6e38] Polynomials v1.1.4
  [c4ea9172] QuasiArrays v0.2.3
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [f8ebbe35] SemiseparableMatrices v0.1.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.3.2
  [c751599d] ToeplitzMatrices v0.6.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Chebyshev     |  104    104
Test Summary: | Pass  Broken  Total
Legendre      |   13       1     14
Test Summary:  | Pass  Total
Ultraspherical |   28     28
Test Summary: | Pass  Broken  Total
Jacobi        |   59       3     62
cos(θ): Error During Test at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:50
  Test threw exception
  Expression: XY[Block.(1:N), Block.(1:N)] isa BlockSkylineMatrix
  ArgumentError: new length must be ≥ 0
  Stacktrace:
   [1] resize! at ./array.jl:1088 [inlined]
   [2] rehash!(::Dict{Block{1,Int64},Nothing}, ::Int64) at ./dict.jl:183
   [3] sizehint! at ./dict.jl:242 [inlined]
   [4] sizehint! at ./set.jl:74 [inlined]
   [5] union! at ./abstractset.jl:89 [inlined]
   [6] Set{Block{1,Int64}}(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}) at ./set.jl:10
   [7] _Set at ./set.jl:23 [inlined]
   [8] Set at ./set.jl:21 [inlined]
   [9] _shrink(::Function, ::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}) at ./array.jl:2562
   [10] intersect(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at ./array.jl:2566
   [11] _broadcast_getindex_evalf at ./broadcast.jl:648 [inlined]
   [12] _broadcast_getindex at ./broadcast.jl:621 [inlined]
   [13] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(intersect),Tuple{Tuple{BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}},Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}}}})(::Int64) at ./broadcast.jl:1046
   [14] ntuple at ./ntuple.jl:41 [inlined]
   [15] copy at ./broadcast.jl:1046 [inlined]
   [16] materialize at ./broadcast.jl:837 [inlined]
   [17] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{Block{1,Int64},Block{1,Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:195
   [18] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:192
   [19] _mat_mul_arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:216
   [20] arguments(::LazyArrays.ApplyLayout{typeof(*)}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:219
   [21] arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:25
   [22] Applied at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:236 [inlined]
   [23] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:274 [inlined]
   [24] copyto!(::SubArray{Float64,2,BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:155
   [25] _blockbanded_copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:63
   [26] blockbanded_copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:74 [inlined]
   [27] _copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:82 [inlined]
   [28] copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:159
   [29] convert(::Type{BlockSkylineMatrix}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:269
   [30] convert at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:273 [inlined]
   [31] BlockSkylineMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:278 [inlined]
   [32] sub_materialize at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:328 [inlined]
   [33] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:105 [inlined]
   [34] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:106 [inlined]
   [35] layout_getindex at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:108 [inlined]
   [36] getindex(::ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:116
   [37] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:50
   [38] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [39] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:42
   [40] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [41] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:7
  
cos(θ): Error During Test at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:51
  Test threw exception
  Expression: blockbandwidths(XY[Block.(1:N), Block.(1:N)]) == (2, 2)
  ArgumentError: new length must be ≥ 0
  Stacktrace:
   [1] resize! at ./array.jl:1088 [inlined]
   [2] rehash!(::Dict{Block{1,Int64},Nothing}, ::Int64) at ./dict.jl:183
   [3] sizehint! at ./dict.jl:242 [inlined]
   [4] sizehint! at ./set.jl:74 [inlined]
   [5] union! at ./abstractset.jl:89 [inlined]
   [6] Set{Block{1,Int64}}(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}) at ./set.jl:10
   [7] _Set at ./set.jl:23 [inlined]
   [8] Set at ./set.jl:21 [inlined]
   [9] _shrink(::Function, ::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}) at ./array.jl:2562
   [10] intersect(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at ./array.jl:2566
   [11] _broadcast_getindex_evalf at ./broadcast.jl:648 [inlined]
   [12] _broadcast_getindex at ./broadcast.jl:621 [inlined]
   [13] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(intersect),Tuple{Tuple{BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}},Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}}}})(::Int64) at ./broadcast.jl:1046
   [14] ntuple at ./ntuple.jl:41 [inlined]
   [15] copy at ./broadcast.jl:1046 [inlined]
   [16] materialize at ./broadcast.jl:837 [inlined]
   [17] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{Block{1,Int64},Block{1,Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:195
   [18] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:192
   [19] _mat_mul_arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:216
   [20] arguments(::LazyArrays.ApplyLayout{typeof(*)}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:219
   [21] arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:25
   [22] Applied at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:236 [inlined]
   [23] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:274 [inlined]
   [24] copyto!(::SubArray{Float64,2,BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:155
   [25] _blockbanded_copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:63
   [26] blockbanded_copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:74 [inlined]
   [27] _copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:82 [inlined]
   [28] copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:159
   [29] convert(::Type{BlockSkylineMatrix}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:269
   [30] convert at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:273 [inlined]
   [31] BlockSkylineMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:278 [inlined]
   [32] sub_materialize at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:328 [inlined]
   [33] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:105 [inlined]
   [34] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:106 [inlined]
   [35] layout_getindex at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:108 [inlined]
   [36] getindex(::ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:116
   [37] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:51
   [38] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [39] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:42
   [40] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [41] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:7
  
cos(θ): Error During Test at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:52
  Test threw exception
  Expression: XY[Block.(1:N), Block.(1:N)] ≈ (ApplyMatrix(*, Y, X))[Block.(1:N), Block.(1:N)]
  ArgumentError: new length must be ≥ 0
  Stacktrace:
   [1] resize! at ./array.jl:1088 [inlined]
   [2] rehash!(::Dict{Block{1,Int64},Nothing}, ::Int64) at ./dict.jl:183
   [3] sizehint! at ./dict.jl:242 [inlined]
   [4] sizehint! at ./set.jl:74 [inlined]
   [5] union! at ./abstractset.jl:89 [inlined]
   [6] Set{Block{1,Int64}}(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}) at ./set.jl:10
   [7] _Set at ./set.jl:23 [inlined]
   [8] Set at ./set.jl:21 [inlined]
   [9] _shrink(::Function, ::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}) at ./array.jl:2562
   [10] intersect(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at ./array.jl:2566
   [11] _broadcast_getindex_evalf at ./broadcast.jl:648 [inlined]
   [12] _broadcast_getindex at ./broadcast.jl:621 [inlined]
   [13] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(intersect),Tuple{Tuple{BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}},Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}}}})(::Int64) at ./broadcast.jl:1046
   [14] ntuple at ./ntuple.jl:41 [inlined]
   [15] copy at ./broadcast.jl:1046 [inlined]
   [16] materialize at ./broadcast.jl:837 [inlined]
   [17] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{Block{1,Int64},Block{1,Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:195
   [18] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:192
   [19] _mat_mul_arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:216
   [20] arguments(::LazyArrays.ApplyLayout{typeof(*)}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:219
   [21] arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:25
   [22] Applied at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:236 [inlined]
   [23] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:274 [inlined]
   [24] copyto!(::SubArray{Float64,2,BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:155
   [25] _blockbanded_copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:63
   [26] blockbanded_copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:74 [inlined]
   [27] _copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:82 [inlined]
   [28] copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:159
   [29] convert(::Type{BlockSkylineMatrix}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:269
   [30] convert at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:273 [inlined]
   [31] BlockSkylineMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:278 [inlined]
   [32] sub_materialize at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:328 [inlined]
   [33] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:105 [inlined]
   [34] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:106 [inlined]
   [35] layout_getindex at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:108 [inlined]
   [36] getindex(::ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:116
   [37] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:52
   [38] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [39] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:42
   [40] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [41] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:7
  
cos(θ): Error During Test at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:53
  Test threw exception
  Expression: (ApplyMatrix(*, X, X))[Block.(1:N), Block.(1:N)] + (ApplyMatrix(*, Y, Y))[Block.(1:N), Block.(1:N)] ≈ Eye(19)
  ArgumentError: new length must be ≥ 0
  Stacktrace:
   [1] resize! at ./array.jl:1088 [inlined]
   [2] rehash!(::Dict{Block{1,Int64},Nothing}, ::Int64) at ./dict.jl:183
   [3] sizehint! at ./dict.jl:242 [inlined]
   [4] sizehint! at ./set.jl:74 [inlined]
   [5] union! at ./abstractset.jl:89 [inlined]
   [6] Set{Block{1,Int64}}(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}) at ./set.jl:10
   [7] _Set at ./set.jl:23 [inlined]
   [8] Set at ./set.jl:21 [inlined]
   [9] _shrink(::Function, ::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}) at ./array.jl:2562
   [10] intersect(::BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at ./array.jl:2566
   [11] _broadcast_getindex_evalf at ./broadcast.jl:648 [inlined]
   [12] _broadcast_getindex at ./broadcast.jl:621 [inlined]
   [13] (::Base.Broadcast.var"#19#20"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(intersect),Tuple{Tuple{BroadcastArray{Block{1,Int64},1,Type{Block},Tuple{InfiniteArrays.OneToInf{Int64}}}},Tuple{BlockRange{1,Tuple{UnitRange{Int64}}}}}}})(::Int64) at ./broadcast.jl:1046
   [14] ntuple at ./ntuple.jl:41 [inlined]
   [15] copy at ./broadcast.jl:1046 [inlined]
   [16] materialize at ./broadcast.jl:837 [inlined]
   [17] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{Block{1,Int64},Block{1,Int64}}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:195
   [18] _mat_mul_arguments(::Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}, ::Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:192
   [19] _mat_mul_arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:216
   [20] arguments(::LazyArrays.ApplyLayout{typeof(*)}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/linalg/mul.jl:219
   [21] arguments(::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:25
   [22] Applied at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:236 [inlined]
   [23] _copyto! at /home/pkgeval/.julia/packages/LazyArrays/MAEFm/src/lazyapplying.jl:274 [inlined]
   [24] copyto!(::SubArray{Float64,2,BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}},BlockArrays.BlockSlice{Block{1,Int64},UnitRange{Int64}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:155
   [25] _blockbanded_copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:63
   [26] blockbanded_copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:74 [inlined]
   [27] _copyto! at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/broadcast.jl:82 [inlined]
   [28] copyto!(::BlockSkylineMatrix{Float64,Array{Float64,1},BlockBandedMatrices.BlockSkylineSizes{Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},Array{Int64,1}}}}},Fill{Int64,1,Tuple{OneTo{Int64}}},Fill{Int64,1,Tuple{OneTo{Int64}}},BandedMatrix{Int64,Array{Int64,2},OneTo{Int64}},Array{Int64,1}}}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:159
   [29] convert(::Type{BlockSkylineMatrix}, ::SubArray{Float64,2,ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}},Tuple{BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}},BlockArrays.BlockSlice{BlockRange{1,Tuple{UnitRange{Int64}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true},SubArray{Int64,1,InfiniteArrays.InfStepRange{Int64,Int64},Tuple{UnitRange{Int64}},true}}}}}},false}) at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:269
   [30] convert at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:273 [inlined]
   [31] BlockSkylineMatrix at /home/pkgeval/.julia/packages/BlockBandedMatrices/ljLQ0/src/BlockSkylineMatrix.jl:278 [inlined]
   [32] sub_materialize at /home/pkgeval/.julia/packages/LazyBandedMatrices/EPkAA/src/LazyBandedMatrices.jl:328 [inlined]
   [33] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:105 [inlined]
   [34] sub_materialize at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:106 [inlined]
   [35] layout_getindex at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:108 [inlined]
   [36] getindex(::ApplyArray{Float64,2,typeof(*),Tuple{BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}},BlockArray{Float64,2,Tridiagonal{Array{Float64,2},ApplyArray{Array{Float64,2},1,typeof(vcat),Tuple{Array{Array{Float64,2},1},Fill{Array{Float64,2},1,Tuple{InfiniteArrays.OneToInf{Int64}}}}}},Tuple{BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}},BlockedUnitRange{ApplyArray{Int64,1,typeof(vcat),Tuple{Array{Int64,1},InfiniteArrays.InfStepRange{Int64,Int64}}}}}}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}, ::BlockRange{1,Tuple{UnitRange{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/x9nhz/src/ArrayLayouts.jl:116
   [37] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:53
   [38] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [39] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:42
   [40] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [41] top-level scope at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:7
  
Test Summary: | Pass  Error  Total
Fourier       |   20      4     24
  Evaluation  |   10            10
  Derivative  |    8             8
  cos(θ)      |    2      4      6
ERROR: LoadError: LoadError: Some tests did not pass: 20 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/test_fourier.jl:6
in expression starting at /home/pkgeval/.julia/packages/OrthogonalPolynomialsQuasi/llrOw/test/runtests.jl:17
ERROR: Package OrthogonalPolynomialsQuasi errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1566
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:328
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:315
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:16
