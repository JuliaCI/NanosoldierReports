Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed QuadGK ─────────────────────── v2.4.0
  Installed OffsetArrays ───────────────── v1.1.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed SpecialPolynomials ─────────── v0.1.1
  Installed StatsBase ──────────────────── v0.33.0
  Installed DualNumbers ────────────────── v0.6.2
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed GMP_jll ────────────────────── v6.1.2+5
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed BinaryProvider ─────────────── v0.5.10
  Installed DataStructures ─────────────── v0.17.20
  Installed MacroTools ─────────────────── v0.5.5
  Installed Polynomials ────────────────── v1.1.4
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Reexport ───────────────────── v0.2.0
  Installed Calculus ───────────────────── v0.5.1
  Installed Mocking ────────────────────── v0.7.1
  Installed ArrayLayouts ───────────────── v0.3.8
  Installed IterTools ──────────────────── v1.3.0
  Installed FastTransforms ─────────────── v0.9.4
  Installed FFTW ───────────────────────── v1.2.2
  Installed FillArrays ─────────────────── v0.8.14
  Installed MPFR_jll ───────────────────── v4.0.2+2
  Installed Missings ───────────────────── v0.4.3
  Installed RecipesBase ────────────────── v1.0.2
  Installed EzXML ──────────────────────── v1.1.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed Memoize ────────────────────── v0.4.3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed ToeplitzMatrices ───────────── v0.6.2
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed TimeZones ──────────────────── v1.3.2
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed HypergeometricFunctions ────── v0.2.3
  Installed DataAPI ────────────────────── v1.3.0
  Installed FastTransforms_jll ─────────── v0.3.3+0
  Installed Intervals ──────────────────── v1.4.2
  Installed ExprTools ──────────────────── v0.1.1
  Installed DSP ────────────────────────── v0.6.7
Updating `~/.julia/environments/v1.5/Project.toml`
  [a25cea48] + SpecialPolynomials v0.1.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4c555306] + ArrayLayouts v0.3.8
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [fa6b7ba4] + DualNumbers v0.6.2
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.2
  [057dd010] + FastTransforms v0.9.4
  [34b6f7d7] + FastTransforms_jll v0.3.3+0
  [1a297f60] + FillArrays v0.8.14
  [781609d7] + GMP_jll v6.1.2+5
  [34004b35] + HypergeometricFunctions v0.2.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [d8418881] + Intervals v1.4.2
  [c8e1da08] + IterTools v1.3.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [856f044c] + MKL_jll v2020.2.254+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [1914dd2f] + MacroTools v0.5.5
  [c03570c3] + Memoize v0.4.3
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [f27b6e38] + Polynomials v1.1.4
  [1fd47b50] + QuadGK v2.4.0
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [a25cea48] + SpecialPolynomials v0.1.1
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.3.2
  [c751599d] + ToeplitzMatrices v0.6.2
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW ──────────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building TimeZones ─────→ `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
   Building FastTransforms → `~/.julia/packages/FastTransforms/H10MA/deps/build.log`
    Testing SpecialPolynomials
Status `/tmp/jl_7lEV85/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.9.4
  [34004b35] HypergeometricFunctions v0.2.3
  [c03570c3] Memoize v0.4.3
  [f27b6e38] Polynomials v1.1.4
  [1fd47b50] QuadGK v2.4.0
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_7lEV85/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4c555306] ArrayLayouts v0.3.8
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [fa6b7ba4] DualNumbers v0.6.2
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.9.4
  [34b6f7d7] FastTransforms_jll v0.3.3+0
  [1a297f60] FillArrays v0.8.14
  [781609d7] GMP_jll v6.1.2+5
  [34004b35] HypergeometricFunctions v0.2.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.4.2
  [c8e1da08] IterTools v1.3.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [856f044c] MKL_jll v2020.2.254+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [f27b6e38] Polynomials v1.1.4
  [1fd47b50] QuadGK v2.4.0
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.3.2
  [c751599d] ToeplitzMatrices v0.6.2
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain(::Type{Chebyshev}) at Chebyshev.jl:40
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(::Type{Jacobi{0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(::Type{Jacobi{0.25,0.75,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain(::Type{Jacobi{-0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain(::Type{Jacobi{0.5,-0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,3}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,4}, ::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,4}, ::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,4}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,4}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,5}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::Chebyshev{Float64,5}, ::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,5}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,5}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,3}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,4}, ::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,4}, ::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,4}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,4}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,5}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::ChebyshevU{Float64,5}, ::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,3}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,4}, ::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,4}, ::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,4}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,4}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,5}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::Jacobi{0.5,0.5,Float64,5}, ::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,3}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,4}, ::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,4}, ::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,4}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,4}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,5}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::Jacobi{0.25,0.75,Float64,5}, ::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,3}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,4}, ::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,4}, ::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,4}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,4}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,5}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::Jacobi{-0.5,0.5,Float64,5}, ::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,3}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,4}, ::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,4}, ::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,4}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,4}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,5}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::Jacobi{0.5,-0.5,Float64,5}, ::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,5}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,5}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,3}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,4}, ::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,4}, ::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,4}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,4}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,5}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::Legendre{Float64,5}, ::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,5}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,5}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,3}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,4}, ::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,4}, ::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,4}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,4}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,5}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::Gegenbauer{0.5,Float64,5}, ::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,5}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,5}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,1}, ::OrthonormalChebyshev{Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,1}, ::OrthonormalChebyshev{Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,2}, ::OrthonormalChebyshev{Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,2}, ::OrthonormalChebyshev{Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,3}, ::OrthonormalChebyshev{Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,4}, ::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,5}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,5}, ::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,6}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,6}, ::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,7}, ::OrthonormalChebyshev{Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,7}, ::OrthonormalChebyshev{Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,8}, ::OrthonormalChebyshev{Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,8}, ::OrthonormalChebyshev{Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,9}, ::OrthonormalChebyshev{Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,9}, ::OrthonormalChebyshev{Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,10}, ::OrthonormalChebyshev{Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,10}, ::OrthonormalChebyshev{Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,11}, ::OrthonormalChebyshev{Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::OrthonormalChebyshev{Float64,11}, ::OrthonormalChebyshev{Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,1}, ::OrthonormalJacobi{0.5,0.5,Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,1}, ::OrthonormalJacobi{0.5,0.5,Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,2}, ::OrthonormalJacobi{0.5,0.5,Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,2}, ::OrthonormalJacobi{0.5,0.5,Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,3}, ::OrthonormalJacobi{0.5,0.5,Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,4}, ::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,5}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,5}, ::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,6}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,6}, ::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,7}, ::OrthonormalJacobi{0.5,0.5,Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,7}, ::OrthonormalJacobi{0.5,0.5,Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,8}, ::OrthonormalJacobi{0.5,0.5,Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,8}, ::OrthonormalJacobi{0.5,0.5,Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,9}, ::OrthonormalJacobi{0.5,0.5,Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,9}, ::OrthonormalJacobi{0.5,0.5,Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,10}, ::OrthonormalJacobi{0.5,0.5,Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,10}, ::OrthonormalJacobi{0.5,0.5,Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,11}, ::OrthonormalJacobi{0.5,0.5,Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::OrthonormalJacobi{0.5,0.5,Float64,11}, ::OrthonormalJacobi{0.5,0.5,Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,1}, ::OrthonormalLegendre{Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,1}, ::OrthonormalLegendre{Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,2}, ::OrthonormalLegendre{Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,2}, ::OrthonormalLegendre{Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,3}, ::OrthonormalLegendre{Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,4}, ::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,5}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,5}, ::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,6}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,6}, ::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,7}, ::OrthonormalLegendre{Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,7}, ::OrthonormalLegendre{Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,8}, ::OrthonormalLegendre{Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,8}, ::OrthonormalLegendre{Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,9}, ::OrthonormalLegendre{Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,9}, ::OrthonormalLegendre{Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,10}, ::OrthonormalLegendre{Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,10}, ::OrthonormalLegendre{Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,11}, ::OrthonormalLegendre{Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::OrthonormalLegendre{Float64,11}, ::OrthonormalLegendre{Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::typeof(one), ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,1}, ::OrthonormalGegenbauer{0.5,Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,1}, ::OrthonormalGegenbauer{0.5,Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,2}, ::OrthonormalGegenbauer{0.5,Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,2}, ::OrthonormalGegenbauer{0.5,Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,3}, ::OrthonormalGegenbauer{0.5,Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,4}, ::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,5}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,5}, ::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,6}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,6}, ::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,7}, ::OrthonormalGegenbauer{0.5,Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,7}, ::OrthonormalGegenbauer{0.5,Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,8}, ::OrthonormalGegenbauer{0.5,Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,8}, ::OrthonormalGegenbauer{0.5,Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,9}, ::OrthonormalGegenbauer{0.5,Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,9}, ::OrthonormalGegenbauer{0.5,Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,10}, ::OrthonormalGegenbauer{0.5,Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,10}, ::OrthonormalGegenbauer{0.5,Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,11}, ::OrthonormalGegenbauer{0.5,Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::OrthonormalGegenbauer{0.5,Float64,11}, ::OrthonormalGegenbauer{0.5,Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Chebyshev}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalChebyshev}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{ChebyshevU}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.25,0.75,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{-0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Jacobi{0.5,-0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Legendre}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalLegendre}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{Gegenbauer{0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, ::var"#f#29", ::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
Test Summary: | Pass  Total
Orthogonal    | 6268   6268
Test Summary:                  | Pass  Total
Orthogonal compare with tables |  649    649
Test Summary: | Pass  Total
Lagrange      |   15     15
Test Summary: | Pass  Total
Newton        |   11     11
Test Summary: | Pass  Total
Bernstein     |  168    168
    Testing SpecialPolynomials tests passed 
