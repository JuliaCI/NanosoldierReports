Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed JSON ─────────────── v0.21.0
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed SortingAlgorithms ── v0.3.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_SqzudJ/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_SqzudJ/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(24, 0.010509968f0), Item(3, 0.0111243725f0), Item(8, 0.021918654f0), Item(18, 0.024151206f0)])
Vsorted = Item[Item(24, 0.010509968f0), Item(3, 0.0111243725f0), Item(8, 0.021918654f0), Item(18, 0.024151206f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004242054621378581, 0.004674832026163737, 301.0, 51.98597001284361))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004102571805318197, 0.004478160540262858, 301.0, 75.18040800094604))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004454572995503743, 0.004460263252258301, 301.0, 42.09289240837097))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035466988881429034, 0.003954664866129557, 301.0, 10.038318231585436))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0013246695200602213, 0.006955099105834961, 301.0, 47.00176591798663))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0004517157872517904, 0.0004054705301920573, 301.0, 184.01666179299355))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 9.897549947102864e-5, 0.00425106684366862, 300.0, 30.794113902840763)
p = PerformanceResult(1.0, 1.0, 1.0, 9.204546610514323e-5, 5.639394124348958e-5, 300.0, 30.794113902840763)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004234480857849121, 0.003934796651204427, 300.0, 1.9285873638546036)
p = PerformanceResult(1.0, 1.0, 1.0, 4.659493764241536e-5, 1.9470850626627605e-5, 300.0, 1.9285873638546036)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 9.897549947102864e-5, 0.00425106684366862, 300.0, 30.794113902840763), PerformanceResult(1.0, 1.0, 1.0, 9.204546610514323e-5, 5.639394124348958e-5, 300.0, 30.794113902840763), PerformanceResult(1.0, 1.0, 1.0, 0.004234480857849121, 0.003934796651204427, 300.0, 1.9285873638546036), PerformanceResult(1.0, 1.0, 1.0, 4.659493764241536e-5, 1.9470850626627605e-5, 300.0, 1.9285873638546036))
[ Info: select_sss: db=Array{Array{UInt32,1},1}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006864388783772786, 0.0038056373596191406, 349.06666666666666, 28683.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007380827267964681, 0.00280149777730306, 302.46666666666664, 6991.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4366378784179688e-5, 1.3566017150878906e-5, 93.8, 51.99048504978418))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4239222208658855e-5, 1.133282979329427e-5, 84.43333333333334, 75.21840846538544))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5478998819986978e-5, 1.320044199625651e-5, 89.0, 42.09289240837097))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003026723861694336, 0.0004225651423136393, 93.63333333333334, 47.00176591798663))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.77, 0.77, 0.7700000000000001, 0.0004068613052368164, 0.00042533079783121746, 70.66666666666667, 195.20044395327568))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-18T01:09:48.823
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8980000000000002, 0.8980000000000002, 0.8980000000000002, 2.378702163696289e-5, 2.717018127441406e-5, 151.32, 51.42684855055995))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2153854370117188e-5, 2.04014778137207e-5, 154.43, 0.0))
*** advance 1 from 1000; 2020-08-18T01:09:49.652
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.885, 0.885, 0.885, 2.282381057739258e-5, 2.471923828125e-5, 151.23, 77.60021793469787))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1898746490478514e-5, 1.8870830535888673e-5, 154.37, 0.0))
*** advance 1 from 1000; 2020-08-18T01:09:50.329
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.889, 0.889, 0.889, 2.3376941680908202e-5, 3.4189224243164064e-5, 151.8, 41.94137970544398))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.239227294921875e-5, 3.0009746551513673e-5, 155.24, 0.0))
*** advance 1 from 1000; 2020-08-18T01:09:51.172
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(0.8790000000000003, 0.8790000000000003, 0.8790000000000003, 0.00023836612701416015, 0.0015522694587707519, 150.93, 46.83063488546759))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0002629280090332031, 0.002661290168762207, 154.21, 0.0))
*** advance 1 from 1000; 2020-08-18T01:09:52.634
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.867, 0.867, 0.867, 0.00020437955856323243, 0.0011688995361328126, 151.34, 205.03074701409787))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00020981788635253905, 0.0013331890106201172, 154.57, 0.0))
*** advance 1 from 1000; 2020-08-18T01:09:53.936
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8980000000000002, 0.8980000000000002, 0.8980000000000002, 5.512237548828125e-5, 0.00017689943313598633, 151.32, 51.437526014400646))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 5.690574645996094e-5, 0.00019352912902832032, 154.43, 0.015333084273152053))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:09:55.437
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.763, 0.763, 0.763, 0.0016375327110290528, 9.363889694213867e-5, 201.36, 187.48333540558815))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:09:56.458
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7770000000000001, 0.7770000000000001, 0.7770000000000001, 0.0016827058792114257, 7.387161254882812e-5, 205.06, 106.99920853227377))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:09:57.42
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6159999999999999, 0.6159999999999999, NaN, 0.00152846097946167, 7.032871246337891e-5, 250.03, 3.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:09:58.362
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9670000000000003, 0.9660000000000004, 0.9664736842105266, 0.0014679336547851563, 2.053976058959961e-5, 219.46, 595.6000202000141))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:09:59.462
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5960000000000002, 0.5960000000000002, 0.5960000000000002, 0.0020641589164733885, 0.0005112695693969727, 261.4, 2328.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:10:00.511
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3770000000000001, 0.3770000000000001, NaN, 0.0016306614875793457, 0.0003842806816101074, 247.03, 3660.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-18T01:10:01.578
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5890000000000001, 0.5890000000000001, 0.5890000000000001, 0.0014367842674255372, 2.7740001678466796e-5, 244.16, 2355.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0549450549450547,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.968303571428572,"seconds":0.002456817775964737,"exhaustive_search_seconds":2.3674219846725464e-6,"evaluations":8.53125,"distances_sum":687.9466065764427}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0549450549450547,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.968303571428572,"seconds":0.002456817775964737,"exhaustive_search_seconds":2.3674219846725464e-6,"evaluations":8.53125,"distances_sum":687.9466065764427}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8897569444444428, conf: {"restarts":9}, perf: {"precision":0.8897569444444428,"recall":0.8897569444444428,"f1":0.8897569444444428,"seconds":2.2122636437416077e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":51.453125,"distances_sum":292.3132642544806}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.655604912464071, conf: {"restarts":13}, perf: {"precision":0.9036458333333325,"recall":0.9036458333333325,"f1":0.9036458333333325,"seconds":2.6615336537361145e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":59.796875,"distances_sum":289.9415095336735}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.655604912464071,"state":{"restarts":13},"perf":{"precision":0.9036458333333325,"recall":0.9036458333333325,"f1":0.9036458333333325,"seconds":2.6615336537361145e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":59.796875,"distances_sum":289.9415095336735}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.734939759036145, conf: {"restarts":12}, perf: {"precision":0.9001736111111099,"recall":0.9001736111111099,"f1":0.9001736111111099,"seconds":2.9303133487701416e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":57.0625,"distances_sum":290.9024871774018}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.734939759036145,"state":{"restarts":12},"perf":{"precision":0.9001736111111099,"recall":0.9001736111111099,"f1":0.9001736111111099,"seconds":2.9303133487701416e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":57.0625,"distances_sum":290.9024871774018}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.734939759036145,"state":{"restarts":12},"perf":{"precision":0.9001736111111099,"recall":0.9001736111111099,"f1":0.9001736111111099,"seconds":2.9303133487701416e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":57.0625,"distances_sum":290.9024871774018}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.734939759036145,"state":{"restarts":12},"perf":{"precision":0.9001736111111099,"recall":0.9001736111111099,"f1":0.9001736111111099,"seconds":2.9303133487701416e-5,"exhaustive_search_seconds":7.320195436477661e-6,"evaluations":57.0625,"distances_sum":290.9024871774018}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444433, conf: {"restarts":13}, perf: {"precision":0.8819444444444433,"recall":0.8819444444444433,"f1":0.8819444444444433,"seconds":5.398876965045929e-5,"exhaustive_search_seconds":2.9928982257843018e-5,"evaluations":145.09375,"distances_sum":121.35555390501395}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.888020833333332, conf: {"restarts":9}, perf: {"precision":0.888020833333332,"recall":0.888020833333332,"f1":0.888020833333332,"seconds":4.387460649013519e-5,"exhaustive_search_seconds":2.9928982257843018e-5,"evaluations":122.03125,"distances_sum":120.93877424532548}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.888020833333332,"state":{"restarts":9},"perf":{"precision":0.888020833333332,"recall":0.888020833333332,"f1":0.888020833333332,"seconds":4.387460649013519e-5,"exhaustive_search_seconds":2.9928982257843018e-5,"evaluations":122.03125,"distances_sum":120.93877424532548}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.888020833333332,"state":{"restarts":9},"perf":{"precision":0.888020833333332,"recall":0.888020833333332,"f1":0.888020833333332,"seconds":4.387460649013519e-5,"exhaustive_search_seconds":2.9928982257843018e-5,"evaluations":122.03125,"distances_sum":120.93877424532548}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666654, conf: {"restarts":1}, perf: {"precision":0.8385416666666654,"recall":0.8385416666666654,"f1":0.8385416666666654,"seconds":7.175840437412262e-5,"exhaustive_search_seconds":0.0003654696047306061,"evaluations":127.96875,"distances_sum":56.2255431599915}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8515624999999993, conf: {"restarts":8}, perf: {"precision":0.8515624999999993,"recall":0.8515624999999993,"f1":0.8515624999999993,"seconds":0.00010100565850734711,"exhaustive_search_seconds":0.0003654696047306061,"evaluations":188.3359375,"distances_sum":55.85497034341097}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999993,"state":{"restarts":8},"perf":{"precision":0.8515624999999993,"recall":0.8515624999999993,"f1":0.8515624999999993,"seconds":0.00010100565850734711,"exhaustive_search_seconds":0.0003654696047306061,"evaluations":188.3359375,"distances_sum":55.85497034341097}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8515624999999993,"state":{"restarts":8},"perf":{"precision":0.8515624999999993,"recall":0.8515624999999993,"f1":0.8515624999999993,"seconds":0.00010100565850734711,"exhaustive_search_seconds":0.0003654696047306061,"evaluations":188.3359375,"distances_sum":55.85497034341097}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8515624999999993,"state":{"restarts":8},"perf":{"precision":0.8515624999999993,"recall":0.8515624999999993,"f1":0.8515624999999993,"seconds":0.00010100565850734711,"exhaustive_search_seconds":0.0003654696047306061,"evaluations":188.3359375,"distances_sum":55.85497034341097}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(8), SatNeighborhood(32), 2020-08-18T01:10:08.967
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9962, 0.031398647f0), Item(5862, 0.040118847f0), Item(8573, 0.04702521f0), Item(3314, 0.05079999f0), Item(7819, 0.053130437f0), Item(8088, 0.056685798f0), Item(3215, 0.060874704f0), Item(6338, 0.06351106f0), Item(746, 0.06530405f0), Item(3546, 0.068154044f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0656799259944494, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538467,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":2.117827534675598e-6,"evaluations":8.4453125,"distances_sum":673.7573801279068}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0656799259944494,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538467,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":2.117827534675598e-6,"evaluations":8.4453125,"distances_sum":673.7573801279068}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0656799259944494,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538467,"seconds":6.549060344696045e-6,"exhaustive_search_seconds":2.117827534675598e-6,"evaluations":8.4453125,"distances_sum":673.7573801279068}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.066053714009194, conf: {"bsize":3}, perf: {"precision":0.981770833333333,"recall":0.981770833333333,"f1":0.981770833333333,"seconds":1.6964972019195557e-5,"exhaustive_search_seconds":7.156282663345337e-6,"evaluations":32.2890625,"distances_sum":294.1157638281584}, best_list's length: 4, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.306889352818372, conf: {"bsize":2}, perf: {"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":1.560710370540619e-5,"exhaustive_search_seconds":7.156282663345337e-6,"evaluations":29.9375,"distances_sum":296.52603021264076}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.306889352818372,"state":{"bsize":2},"perf":{"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":1.560710370540619e-5,"exhaustive_search_seconds":7.156282663345337e-6,"evaluations":29.9375,"distances_sum":296.52603021264076}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.306889352818372,"state":{"bsize":2},"perf":{"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":1.560710370540619e-5,"exhaustive_search_seconds":7.156282663345337e-6,"evaluations":29.9375,"distances_sum":296.52603021264076}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.306889352818372,"state":{"bsize":2},"perf":{"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":1.560710370540619e-5,"exhaustive_search_seconds":7.156282663345337e-6,"evaluations":29.9375,"distances_sum":296.52603021264076}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.56587640886125,"state":{"bsize":2},"perf":{"precision":0.9470486111111104,"recall":0.9470486111111104,"f1":0.9470486111111104,"seconds":3.199838101863861e-5,"exhaustive_search_seconds":3.2376497983932495e-5,"evaluations":60.3046875,"distances_sum":120.72599015943706}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.56587640886125,"state":{"bsize":2},"perf":{"precision":0.9470486111111104,"recall":0.9470486111111104,"f1":0.9470486111111104,"seconds":3.199838101863861e-5,"exhaustive_search_seconds":3.2376497983932495e-5,"evaluations":60.3046875,"distances_sum":120.72599015943706}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 92.09409252669039, conf: {"bsize":10}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":0.00022891350090503693,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":109.765625,"distances_sum":54.18392926873639}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.97694397532858, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.612071931362152e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":106.3984375,"distances_sum":54.18392926873639}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.69310446877775, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.891600787639618e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":105.59375,"distances_sum":54.18392926873639}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.34285714285714, conf: {"bsize":3}, perf: {"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":6.253272294998169e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":108.28125,"distances_sum":54.31853568600491}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.00455380095482, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.848201155662537e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":106.3671875,"distances_sum":54.208236165810376}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.69310446877775,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.891600787639618e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":105.59375,"distances_sum":54.18392926873639}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.11207359141433, conf: {"bsize":4}, perf: {"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":6.718933582305908e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":101.9140625,"distances_sum":54.21949322940782}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.11207359141433,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":6.718933582305908e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":101.9140625,"distances_sum":54.21949322940782}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.11207359141433,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":6.718933582305908e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":101.9140625,"distances_sum":54.21949322940782}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.11207359141433,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":6.718933582305908e-5,"exhaustive_search_seconds":0.0004254300147294998,"evaluations":101.9140625,"distances_sum":54.21949322940782}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(4), SatNeighborhood(32), 2020-08-18T01:10:13.573
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6953, 0.017873507f0), Item(2752, 0.03432526f0), Item(3614, 0.03625883f0), Item(563, 0.044914503f0), Item(5575, 0.04881953f0), Item(2310, 0.049775995f0), Item(314, 0.05251812f0), Item(8477, 0.053212624f0), Item(7290, 0.055072993f0), Item(5224, 0.055771917f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
