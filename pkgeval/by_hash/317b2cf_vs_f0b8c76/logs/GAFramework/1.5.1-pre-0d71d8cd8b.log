Julia Version 1.5.1-pre.28
Commit 0d71d8cd8b (2020-08-14 20:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_3Fo82E/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_3Fo82E/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723353202025705
curgen: 20 fitness: 0.21723353202025705
curgen: 30 fitness: 0.21723353202025705
curgen: 40 fitness: 0.21723353202025705
curgen: 50 fitness: 0.21723353202025705
CoordinateCreature{Array{Float64,1}}([-0.22250155629065715], -0.21723353202025705) -0.22250155629065715 -0.21723353202025705
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258153080912992
curgen: 100 fitness: 3.2582003614969115
curgen: 150 fitness: 3.25832450195471
curgen: 200 fitness: 3.2583336717334284
curgen: 250 fitness: 3.2583969265220323
curgen: 300 fitness: 3.2584014511701067
curgen: 350 fitness: 3.258421555160437
curgen: 400 fitness: 3.2584538285405173
curgen: 450 fitness: 3.258459416574294
curgen: 500 fitness: 3.2584608294857644
CoordinateCreature{Array{Float64,1}}([0.2230449020061166, -0.22233421863396352, 0.22260066981516566, 0.22244960002050687, 0.22210007449459535, 0.22312281879894733, 0.222584462383053, 0.2226006621760184, 0.22254973918993767, -0.22239739906047992, -0.2223762838725768, -0.22225575170070308, 0.2225695899746969, -0.22255966398458066, -0.2224637073215528], -3.2584608294857644) [0.2230449020061166, -0.22233421863396352, 0.22260066981516566, 0.22244960002050687, 0.22210007449459535, 0.22312281879894733, 0.222584462383053, 0.2226006621760184, 0.22254973918993767, -0.22239739906047992, -0.2223762838725768, -0.22225575170070308, 0.2225695899746969, -0.22255966398458066, -0.2224637073215528] -3.2584608294857644
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005168207347907128
curgen: 100 fitness: -0.0029326296625242776
curgen: 150 fitness: -0.0028381158056447475
curgen: 200 fitness: -0.002462090067524514
curgen: 250 fitness: -0.002462090067524514
curgen: 300 fitness: -0.002322137409549896
curgen: 350 fitness: -0.0018055892151949138
curgen: 400 fitness: -0.0018055892151949138
curgen: 450 fitness: -0.0009379841783641041
curgen: 500 fitness: -0.0009379841783641041
CoordinateCreature{Array{Float64,1}}([0.0011723798634308406, 0.00021190846167862894, 9.030983165113945e-5, -0.0002451010452725294, 0.00010020717969000392, -0.00043988290369756784, 7.554747311420359e-5, 0.0005276122610975766, 0.0005743864732818671, 0.0008523686588941997, -0.00019720620694799358, -0.0001541235023814532, -0.0007108391578336687, -2.8009149462767042e-5, 0.0010618573526240975], 0.0009379841783641041) [0.0011723798634308406, 0.00021190846167862894, 9.030983165113945e-5, -0.0002451010452725294, 0.00010020717969000392, -0.00043988290369756784, 7.554747311420359e-5, 0.0005276122610975766, 0.0005743864732818671, 0.0008523686588941997, -0.00019720620694799358, -0.0001541235023814532, -0.0007108391578336687, -2.8009149462767042e-5, 0.0010618573526240975] 0.0009379841783641041
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
