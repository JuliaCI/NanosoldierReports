Julia Version 1.6.0-DEV.1153
Commit 0669b64613 (2020-10-07 09:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_CFFFZZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_CFFFZZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.282675 seconds (379.69 k allocations: 15.429 MiB, 4.08% gc time, 93.83% compilation time)
Running: chebyshev_quadrature with k=1
  1.499881 seconds (2.19 M allocations: 126.608 MiB, 3.84% gc time, 98.57% compilation time)
Running: chebyshev_quadrature with k=2
  0.202592 seconds (409.38 k allocations: 23.550 MiB, 84.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.255352 seconds (473.75 k allocations: 26.613 MiB, 4.39% gc time, 86.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.226773 seconds (418.56 k allocations: 23.259 MiB, 90.31% compilation time)
Running: jacobi_quadrature with α=β=1
 31.352418 seconds (36.41 M allocations: 3.000 GiB, 10.58% gc time, 81.56% compilation time)
Running: laguerre_quadrature with k=1
  2.678121 seconds (3.17 M allocations: 177.056 MiB, 3.98% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.173689 seconds (206.16 k allocations: 11.836 MiB, 98.99% compilation time)
Running: lobatto_quadrature
  0.282445 seconds (329.61 k allocations: 19.901 MiB, 99.22% compilation time)
Running: radau_quadrature
  0.316887 seconds (444.23 k allocations: 27.144 MiB, 9.46% gc time, 99.35% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 50.855831 seconds (100.02 M allocations: 1.491 GiB, 0.54% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.102925 seconds (172.46 k allocations: 3.827 MiB, 24.51% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 50.320596 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time, 0.10% compilation time)
Running: rombergs_method
  0.511860 seconds (723.10 k allocations: 41.743 MiB, 4.84% gc time, 99.56% compilation time)
Running: simpsons_rule
  0.026632 seconds (45.77 k allocations: 2.043 MiB, 93.26% compilation time)
Running: simpsons38_rule
  0.068874 seconds (108.38 k allocations: 5.745 MiB, 97.28% compilation time)
Running: trapezoidal_rule
  0.281687 seconds (1.51 M allocations: 25.665 MiB, 6.49% gc time, 23.18% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.091723 seconds (30.97 k allocations: 1.864 MiB, 99.80% compilation time)
Running: chebyshev_quadrature with k=1
  0.410724 seconds (292.28 k allocations: 15.453 MiB, 99.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.144961 seconds (93.80 k allocations: 2.675 MiB, 97.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.150959 seconds (82.06 k allocations: 2.476 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.153104 seconds (64.67 k allocations: 2.122 MiB, 98.89% compilation time)
Running: jacobi_quadrature with α=β=1
  2.019768 seconds (504.27 k allocations: 161.845 MiB, 9.97% gc time, 20.93% compilation time)
Running: legendre_quadrature
  0.145624 seconds (41.21 k allocations: 2.375 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.019688 seconds (15.60 k allocations: 995.185 KiB, 99.13% compilation time)
Running: radau_quadrature
  0.019892 seconds (15.71 k allocations: 1002.399 KiB, 99.24% compilation time)
Running: rectangle_rule_left
 14.870449 seconds (471.41 M allocations: 7.025 GiB, 6.03% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 15.194833 seconds (476.96 M allocations: 7.107 GiB, 5.94% gc time)
Running: rombergs_method
  0.315720 seconds (326.52 k allocations: 18.530 MiB, 2.37% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.000018 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.060572 seconds (18.91 k allocations: 1.146 MiB, 99.82% compilation time)
Running: trapezoidal_rule
  0.059845 seconds (17.40 k allocations: 1.054 MiB, 99.86% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027836 seconds (1.99 k allocations: 53.594 KiB, 99.50% compilation time)
Running: chebyshev_quadrature with k=1
  0.104350 seconds (2.46 k allocations: 116.359 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=2
  0.137222 seconds (2.71 k allocations: 124.266 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=3
  0.100176 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.097467 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: jacobi_quadrature with α=β=1
  0.246779 seconds (364.11 k allocations: 19.000 MiB, 99.17% compilation time)
Running: legendre_quadrature
  0.068832 seconds (1.28 k allocations: 65.891 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000101 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000247 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000341 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.080049 seconds (1.04 k allocations: 56.469 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000026 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024503 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.020446 seconds (44.33 k allocations: 704.859 KiB, 94.33% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065231 seconds (72.27 k allocations: 4.214 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.156289 seconds (230.62 k allocations: 12.967 MiB, 98.75% compilation time)
Running: chebyshev_quadrature with k=2
  0.175169 seconds (283.17 k allocations: 15.881 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.197986 seconds (234.76 k allocations: 13.133 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=4
  0.155112 seconds (234.76 k allocations: 13.071 MiB, 98.82% compilation time)
Running: jacobi_quadrature with α=β=1
  1.394971 seconds (447.19 k allocations: 163.211 MiB, 10.33% gc time, 36.55% compilation time)
Running: legendre_quadrature
  0.140275 seconds (185.44 k allocations: 10.724 MiB, 98.77% compilation time)
Running: lobatto_quadrature
  0.144339 seconds (196.77 k allocations: 11.419 MiB, 98.63% compilation time)
Running: radau_quadrature
  0.152741 seconds (196.76 k allocations: 11.417 MiB, 98.73% compilation time)
Running: rectangle_rule_left
  0.664272 seconds (18.82 k allocations: 1.147 MiB, 3.54% compilation time)
Running: rectangle_rule_midpoint
  0.028377 seconds (24.67 k allocations: 1.555 MiB, 99.32% compilation time)
Running: rectangle_rule_right
  0.649075 seconds (17.39 k allocations: 1.065 MiB, 3.56% compilation time)
Running: rombergs_method
  0.152605 seconds (134.24 k allocations: 7.758 MiB, 98.32% compilation time)
Running: simpsons_rule
  0.077310 seconds (27.54 k allocations: 1.729 MiB, 42.28% gc time, 99.79% compilation time)
Running: simpsons38_rule
  0.047262 seconds (42.37 k allocations: 2.678 MiB, 99.52% compilation time)
Running: trapezoidal_rule
  0.037213 seconds (44.10 k allocations: 1.772 MiB, 97.91% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036252 seconds (99.53 k allocations: 2.979 MiB, 95.28% compilation time)
Running: chebyshev_quadrature with k=1
  0.183888 seconds (237.20 k allocations: 13.054 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=2
  0.174837 seconds (290.20 k allocations: 15.875 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.160190 seconds (241.33 k allocations: 13.116 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.188324 seconds (241.34 k allocations: 13.157 MiB, 12.57% gc time, 99.02% compilation time)
Running: hermite_quadrature with k=2
 12.750421 seconds (20.10 M allocations: 1.056 GiB, 9.58% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.364475 seconds (456.36 k allocations: 49.428 MiB, 10.67% gc time, 80.60% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.291823 seconds (276.26 k allocations: 15.239 MiB, 12.96% gc time, 85.86% compilation time)
Running: legendre_quadrature
  0.140861 seconds (191.98 k allocations: 11.070 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.237497 seconds (217.43 k allocations: 37.194 MiB, 10.95% gc time, 77.64% compilation time)
Running: radau_quadrature
  0.212295 seconds (214.01 k allocations: 29.854 MiB, 90.63% compilation time)
Running: rectangle_rule_left
  0.024487 seconds (21.73 k allocations: 1.293 MiB, 99.42% compilation time)
Running: rectangle_rule_midpoint
  0.044396 seconds (26.47 k allocations: 1.642 MiB, 45.63% gc time, 99.69% compilation time)
Running: rectangle_rule_right
  0.021402 seconds (18.50 k allocations: 1.117 MiB, 99.39% compilation time)
Running: rombergs_method
  0.158977 seconds (136.71 k allocations: 7.808 MiB, 98.52% compilation time)
Running: simpsons_rule
  0.032415 seconds (39.38 k allocations: 2.061 MiB, 98.89% compilation time)
Running: simpsons38_rule
  0.034976 seconds (57.34 k allocations: 3.063 MiB, 98.83% compilation time)
Running: trapezoidal_rule
  0.025874 seconds (30.13 k allocations: 1.697 MiB, 98.93% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040404 seconds (59.92 k allocations: 2.280 MiB, 97.38% compilation time)
Running: chebyshev_quadrature with k=1
  0.244428 seconds (232.72 k allocations: 12.824 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=2
  0.227883 seconds (285.38 k allocations: 15.643 MiB, 10.97% gc time, 98.58% compilation time)
Running: chebyshev_quadrature with k=3
  0.159205 seconds (236.87 k allocations: 12.928 MiB, 98.60% compilation time)
Running: chebyshev_quadrature with k=4
  0.158465 seconds (236.87 k allocations: 12.929 MiB, 98.56% compilation time)
Running: hermite_quadrature with k=2
  0.120856 seconds (170.79 k allocations: 9.794 MiB, 98.25% compilation time)
Running: jacobi_quadrature with α=β=1
  6.657563 seconds (449.62 k allocations: 1.175 GiB, 17.99% gc time, 5.77% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.165596 seconds (271.55 k allocations: 15.067 MiB, 97.88% compilation time)
Running: legendre_quadrature
  0.139028 seconds (187.55 k allocations: 10.817 MiB, 12.81% gc time, 98.60% compilation time)
Running: lobatto_quadrature
  0.186425 seconds (208.18 k allocations: 22.921 MiB, 87.91% compilation time)
Running: radau_quadrature
  0.181529 seconds (207.34 k allocations: 20.852 MiB, 91.30% compilation time)
Running: rectangle_rule_left
  0.022927 seconds (19.52 k allocations: 1.188 MiB, 99.24% compilation time)
Running: rectangle_rule_midpoint
  0.022545 seconds (25.36 k allocations: 1.591 MiB, 99.23% compilation time)
Running: rectangle_rule_right
  0.023672 seconds (17.36 k allocations: 1.062 MiB, 99.26% compilation time)
Running: rombergs_method
  0.132019 seconds (132.56 k allocations: 7.621 MiB, 97.94% compilation time)
Running: simpsons_rule
  0.026073 seconds (31.90 k allocations: 1.853 MiB, 98.93% compilation time)
Running: simpsons38_rule
  0.029238 seconds (48.16 k allocations: 2.821 MiB, 98.93% compilation time)
Running: trapezoidal_rule
  0.021347 seconds (25.05 k allocations: 1.535 MiB, 98.85% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.058161 seconds (30.87 k allocations: 1.875 MiB, 52.08% gc time, 99.60% compilation time)
Running: chebyshev_quadrature with k=1
  0.197198 seconds (231.10 k allocations: 13.043 MiB, 95.51% compilation time)
Running: chebyshev_quadrature with k=2
  0.279803 seconds (283.67 k allocations: 16.048 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=3
  0.209105 seconds (235.25 k allocations: 13.146 MiB, 98.72% compilation time)
Running: chebyshev_quadrature with k=4
  0.169009 seconds (235.25 k allocations: 12.971 MiB, 98.59% compilation time)
Running: jacobi_quadrature with α=β=1
  1.976730 seconds (447.72 k allocations: 194.271 MiB, 8.78% gc time, 23.67% compilation time)
Running: legendre_quadrature
  0.142822 seconds (185.93 k allocations: 10.745 MiB, 98.42% compilation time)
Running: lobatto_quadrature
  0.160074 seconds (197.26 k allocations: 11.445 MiB, 9.71% gc time, 98.50% compilation time)
Running: radau_quadrature
  0.143511 seconds (197.26 k allocations: 11.451 MiB, 98.32% compilation time)
Running: rectangle_rule_left
  0.371266 seconds (19.34 k allocations: 1.173 MiB, 6.99% compilation time)
Running: rectangle_rule_midpoint
  0.021431 seconds (25.01 k allocations: 1.573 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.161830 seconds (17.73 k allocations: 1.081 MiB, 15.45% compilation time)
Running: rombergs_method
  0.119720 seconds (145.00 k allocations: 8.487 MiB, 96.67% compilation time)
Running: simpsons_rule
  0.060099 seconds (28.23 k allocations: 1.758 MiB, 99.64% compilation time)
Running: simpsons38_rule
  0.039722 seconds (43.08 k allocations: 2.708 MiB, 99.50% compilation time)
Running: trapezoidal_rule
  0.030445 seconds (45.03 k allocations: 1.805 MiB, 98.05% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032416 seconds (31.64 k allocations: 1.826 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.240174 seconds (231.69 k allocations: 12.988 MiB, 98.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.271868 seconds (284.30 k allocations: 15.895 MiB, 13.29% gc time, 98.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.169950 seconds (235.84 k allocations: 13.067 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=4
  0.162929 seconds (235.84 k allocations: 13.142 MiB, 98.31% compilation time)
Running: jacobi_quadrature with α=β=1
  1.462762 seconds (448.43 k allocations: 148.940 MiB, 11.54% gc time, 32.40% compilation time)
Running: legendre_quadrature
  0.139865 seconds (186.53 k allocations: 10.750 MiB, 98.33% compilation time)
Running: lobatto_quadrature
  0.154402 seconds (197.86 k allocations: 11.468 MiB, 98.40% compilation time)
Running: radau_quadrature
  0.198133 seconds (197.85 k allocations: 11.462 MiB, 8.94% gc time, 98.73% compilation time)
Running: rectangle_rule_left
  0.714329 seconds (19.59 k allocations: 1.186 MiB, 4.49% compilation time)
Running: rectangle_rule_midpoint
  0.022628 seconds (25.01 k allocations: 1.574 MiB, 99.06% compilation time)
Running: rectangle_rule_right
  0.715771 seconds (17.69 k allocations: 1.078 MiB, 4.11% compilation time)
Running: rombergs_method
  0.192822 seconds (135.46 k allocations: 7.815 MiB, 85.17% compilation time)
Running: simpsons_rule
  0.031717 seconds (28.93 k allocations: 1.785 MiB, 99.35% compilation time)
Running: simpsons38_rule
  0.034818 seconds (43.78 k allocations: 2.734 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.028408 seconds (57.27 k allocations: 2.006 MiB, 96.41% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.150828 seconds (146.67 k allocations: 8.789 MiB, 99.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.138243 seconds (69.93 k allocations: 2.205 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=2
  0.153586 seconds (105.09 k allocations: 2.868 MiB, 97.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.154127 seconds (92.57 k allocations: 2.654 MiB, 97.95% compilation time)
Running: chebyshev_quadrature with k=4
  0.193344 seconds (72.10 k allocations: 2.248 MiB, 98.60% compilation time)
Running: jacobi_quadrature with α=β=1
  2.181706 seconds (480.63 k allocations: 167.781 MiB, 4.12% gc time, 22.61% compilation time)
Running: legendre_quadrature
  0.202409 seconds (18.73 k allocations: 1.094 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.000172 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000671 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.262222 seconds (590.00 M allocations: 8.792 GiB, 5.69% gc time)
Running: rectangle_rule_midpoint
  0.000041 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 21.696774 seconds (592.75 M allocations: 8.833 GiB, 5.37% gc time)
Running: rombergs_method
  0.115005 seconds (20.50 k allocations: 1.165 MiB, 99.51% compilation time)
Running: simpsons_rule
  0.000056 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027384 seconds (463 allocations: 22.578 KiB, 99.56% compilation time)
Running: trapezoidal_rule
  0.022342 seconds (179 allocations: 8.766 KiB, 99.47% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.081113 seconds (629.32 M allocations: 9.387 GiB, 3.97% gc time, 0.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.594546 seconds (414.01 k allocations: 23.021 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=2
 18.654810 seconds (468.64 k allocations: 4.040 GiB, 5.93% gc time, 3.06% compilation time)
Running: chebyshev_quadrature with k=3
  8.219861 seconds (249.08 k allocations: 1.642 GiB, 4.12% gc time, 3.06% compilation time)
Running: chebyshev_quadrature with k=4
 11.207102 seconds (249.08 k allocations: 2.260 GiB, 1.80% gc time, 2.00% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 32.982844 seconds (484.52 k allocations: 13.254 GiB, 6.62% gc time, 1.94% compilation time)
Running: legendre_quadrature.
  9.698559 seconds (223.27 k allocations: 1.976 GiB, 0.97% gc time, 2.06% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.657436 seconds (8.23 M allocations: 13.384 GiB, 7.66% gc time, 1.18% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.368312 seconds (7.23 M allocations: 13.369 GiB, 9.16% gc time, 0.62% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.125575 seconds (22.24 k allocations: 1.347 MiB, 0.30% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.978369 seconds (30.43 k allocations: 1.884 MiB, 1.13% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.830878 seconds (22.44 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.958436 seconds (438.08 k allocations: 152.671 MiB, 1.89% gc time, 12.17% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.441257 seconds (600.04 M allocations: 8.943 GiB, 5.63% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.568236 seconds (600.05 M allocations: 8.943 GiB, 5.72% gc time, 0.14% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.325248 seconds (600.03 M allocations: 8.943 GiB, 5.49% gc time, 0.14% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.047719 seconds (180.45 k allocations: 4.404 MiB, 88.49% compilation time)
Running: chebyshev_quadrature with k=1
  0.186515 seconds (247.70 k allocations: 13.449 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.198103 seconds (272.34 k allocations: 14.523 MiB, 98.59% compilation time)
Running: chebyshev_quadrature with k=3
  0.185483 seconds (220.25 k allocations: 11.631 MiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.190721 seconds (220.25 k allocations: 11.626 MiB, 99.27% compilation time)
Running: jacobi_quadrature with α=β=1
  0.312273 seconds (389.30 k allocations: 34.995 MiB, 91.30% compilation time)
Running: laguerre_quadrature with k=2
  0.156947 seconds (180.54 k allocations: 10.477 MiB, 76.18% compilation time)
Running: legendre_quadrature
  0.123902 seconds (145.99 k allocations: 8.082 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.020591 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018447 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.043606 seconds (18.88 k allocations: 1.122 MiB, 60.03% compilation time)
Running: rectangle_rule_midpoint
  0.033778 seconds (25.48 k allocations: 1.576 MiB, 63.88% compilation time)
Running: rectangle_rule_right
  0.037620 seconds (17.48 k allocations: 1.049 MiB, 53.87% compilation time)
Running: rombergs_method
  0.316127 seconds (172.15 k allocations: 9.864 MiB, 35.75% gc time, 99.13% compilation time)
Running: simpsons_rule
  0.000682 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.035422 seconds (78.86 k allocations: 3.384 MiB, 97.27% compilation time)
Running: trapezoidal_rule
  0.090780 seconds (2.39 M allocations: 37.691 MiB, 29.31% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001221 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.107805 seconds (2.46 k allocations: 1.691 MiB, 98.13% compilation time)
Running: chebyshev_quadrature with k=2
  0.114668 seconds (2.71 k allocations: 2.355 MiB, 97.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.104888 seconds (2.31 k allocations: 2.028 MiB, 96.40% compilation time)
Running: chebyshev_quadrature with k=4
  0.098702 seconds (2.31 k allocations: 1.469 MiB, 97.99% compilation time)
Running: jacobi_quadrature with α=β=1
  5.995556 seconds (366.38 k allocations: 904.821 MiB, 6.46% gc time, 6.06% compilation time)
Running: legendre_quadrature
  0.068414 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000157 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000117 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.920336 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000366 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.929392 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081482 seconds (993 allocations: 56.609 KiB, 99.53% compilation time)
Running: simpsons_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000567 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000203 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.097391 seconds (2.53 k allocations: 579.203 KiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.101097 seconds (2.79 k allocations: 780.188 KiB, 98.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.105059 seconds (2.39 k allocations: 661.047 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.103546 seconds (2.39 k allocations: 491.547 KiB, 99.32% compilation time)
Running: jacobi_quadrature with α=β=1
  2.663135 seconds (372.94 k allocations: 252.986 MiB, 6.12% gc time, 19.17% compilation time)
Running: legendre_quadrature
  0.071172 seconds (1.32 k allocations: 67.859 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000036 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.414761 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000140 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.401707 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.110159 seconds (1.21 k allocations: 64.875 KiB, 99.60% compilation time)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000290 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
