Julia Version 1.6.0-DEV.1148
Commit 7d3dac44dc (2020-10-06 21:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_7DRhVW/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7DRhVW/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722659445309817
curgen: 20 fitness: 0.2172319618499218
curgen: 30 fitness: 0.2172319618499218
curgen: 40 fitness: 0.2172319618499218
curgen: 50 fitness: 0.2172319618499218
CoordinateCreature{Vector{Float64}}([0.22235427890498566], -0.2172319618499218) 0.22235427890498566 -0.2172319618499218
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25711294803787
curgen: 100 fitness: 3.2579046832635075
curgen: 150 fitness: 3.2581476260919935
curgen: 200 fitness: 3.2581654954386527
curgen: 250 fitness: 3.258287055711338
curgen: 300 fitness: 3.258287055711338
curgen: 350 fitness: 3.258412763920184
curgen: 400 fitness: 3.2584318200581768
curgen: 450 fitness: 3.2584471504250976
curgen: 500 fitness: 3.2584686215331646
CoordinateCreature{Vector{Float64}}([-0.22232756171044835, -0.22241047998888427, 0.22245918614816346, -0.22300289005205334, 0.2229977305415567, -0.22254178062069568, 0.22229619442314985, -0.2226222779846161, 0.22223560979356072, -0.2224389287675154, 0.22273554664235706, -0.22245153701419496, 0.22236396582999712, 0.22255322400102215, 0.22228796583518554], -3.2584686215331646) [-0.22232756171044835, -0.22241047998888427, 0.22245918614816346, -0.22300289005205334, 0.2229977305415567, -0.22254178062069568, 0.22229619442314985, -0.2226222779846161, 0.22223560979356072, -0.2224389287675154, 0.22273554664235706, -0.22245153701419496, 0.22236396582999712, 0.22255322400102215, 0.22228796583518554] -3.2584686215331646
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004573047244889494
curgen: 100 fitness: -0.004372280316999877
curgen: 150 fitness: -0.004372280316999877
curgen: 200 fitness: -0.003780425094078055
curgen: 250 fitness: -0.0030209344448053344
curgen: 300 fitness: -0.0023789746556417413
curgen: 350 fitness: -0.0023789746556417413
curgen: 400 fitness: -0.001672876484462904
curgen: 450 fitness: -0.0015039750524579176
curgen: 500 fitness: -0.0015039750524579176
CoordinateCreature{Vector{Float64}}([0.00030704555403876586, 0.0008140287148467154, 0.0012161149134563556, 0.0010207890679466494, -6.664232031986485e-5, 0.0004600722864198624, 0.0008023181576845076, -0.0001087529314036809, 0.00012450428238065694, -0.00024045917804961438, -0.0013798283543183713, -0.0002413944870257661, -0.00025436495048837034, -0.0010884283608558823, 0.0003826745099942616], 0.0015039750524579176) [0.00030704555403876586, 0.0008140287148467154, 0.0012161149134563556, 0.0010207890679466494, -6.664232031986485e-5, 0.0004600722864198624, 0.0008023181576845076, -0.0001087529314036809, 0.00012450428238065694, -0.00024045917804961438, -0.0013798283543183713, -0.0002413944870257661, -0.00025436495048837034, -0.0010884283608558823, 0.0003826745099942616] 0.0015039750524579176
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
