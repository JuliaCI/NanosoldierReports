Julia Version 1.6.0-DEV.1153
Commit 0669b64613 (2020-10-07 09:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_24Dob0/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_24Dob0/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723348874752707
curgen: 20 fitness: 0.21723348874752707
curgen: 30 fitness: 0.21723348874752707
curgen: 40 fitness: 0.21723348874752707
curgen: 50 fitness: 0.21723348874752707
CoordinateCreature{Vector{Float64}}([-0.22260428948714006], -0.21723348874752707) -0.22260428948714006 -0.21723348874752707
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580019464757677
curgen: 100 fitness: 3.2580019464757677
curgen: 150 fitness: 3.2580968963214185
curgen: 200 fitness: 3.258173233009471
curgen: 250 fitness: 3.258256216582003
curgen: 300 fitness: 3.2583813330797584
curgen: 350 fitness: 3.2584348066351505
curgen: 400 fitness: 3.258436477396348
curgen: 450 fitness: 3.2584453263308073
curgen: 500 fitness: 3.2584509105141715
CoordinateCreature{Vector{Float64}}([-0.22237710578537234, 0.22298850717064153, -0.2225131759445957, -0.222441504356387, 0.22277564804734534, -0.22330607973300737, -0.2221188005487724, -0.2222279600533108, 0.2225431672375167, 0.22246244257819647, -0.2227160930167493, 0.22252597536896138, -0.22248224872792735, -0.22269264111614132, -0.22251773519525397], -3.2584509105141715) [-0.22237710578537234, 0.22298850717064153, -0.2225131759445957, -0.222441504356387, 0.22277564804734534, -0.22330607973300737, -0.2221188005487724, -0.2222279600533108, 0.2225431672375167, 0.22246244257819647, -0.2227160930167493, 0.22252597536896138, -0.22248224872792735, -0.22269264111614132, -0.22251773519525397] -3.2584509105141715
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005064715662456365
curgen: 100 fitness: -0.0046896617556342335
curgen: 150 fitness: -0.004638684117963976
curgen: 200 fitness: -0.0024541931834676234
curgen: 250 fitness: -0.0024541931834676234
curgen: 300 fitness: -0.0017663775413723215
curgen: 350 fitness: -0.0017272573343234399
curgen: 400 fitness: -0.0017272573343234399
curgen: 450 fitness: -0.0013659341073548603
curgen: 500 fitness: -0.0013623744152937434
CoordinateCreature{Vector{Float64}}([-0.00028114258526121277, -0.0004639391984023779, 0.00036832703946090687, 0.00044753953228328033, 0.0013319960612383957, 3.582617474612163e-5, 0.0002316814318919641, -0.00013131066755500773, -0.0012766249783412674, -0.0006977831847976052, 0.0010021158692927823, 2.9454392127155392e-5, -0.00040926113353821777, -0.0010360904336103648, -0.000166433697750816], 0.0013623744152937434) [-0.00028114258526121277, -0.0004639391984023779, 0.00036832703946090687, 0.00044753953228328033, 0.0013319960612383957, 3.582617474612163e-5, 0.0002316814318919641, -0.00013131066755500773, -0.0012766249783412674, -0.0006977831847976052, 0.0010021158692927823, 2.9454392127155392e-5, -0.00040926113353821777, -0.0010360904336103648, -0.000166433697750816] 0.0013623744152937434
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
