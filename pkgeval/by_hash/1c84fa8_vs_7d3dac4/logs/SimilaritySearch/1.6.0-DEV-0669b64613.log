Julia Version 1.6.0-DEV.1153
Commit 0669b64613 (2020-10-07 09:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed OrderedCollections ─ v1.3.1
  Installed Parsers ──────────── v1.0.11
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_MLhqs0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_MLhqs0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(10, 0.014719725f0), Item(19, 0.06269443f0), Item(27, 0.068559885f0), Item(29, 0.07923794f0)])
Vsorted = Item[Item(10, 0.014719725f0), Item(19, 0.06269443f0), Item(27, 0.068559885f0), Item(29, 0.07923794f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0048478523890177405, 0.0048289616902669275, 301.0, 50.95882315794006))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038693507512410482, 0.003620632489522298, 301.0, 74.681764960289))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003591736157735189, 0.00394603411356608, 301.0, 41.33787000179291))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003474156061808268, 0.0031851689020792645, 301.0, 9.346398601323017))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0027213493982950845, 0.003564627965291341, 301.0, 46.05158572597429))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.193450927734375e-5, 1.4400482177734375e-5, 301.0, 184.83968346565962))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.342628479003906e-5, 0.011312031745910644, 300.0, 28.23386904131621)
p = PerformanceResult(1.0, 1.0, 1.0, 3.39349110921224e-5, 1.9431114196777344e-5, 300.0, 28.23386904131621)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0033606529235839845, 0.0032854636510213217, 300.0, 1.5918309956759913)
p = PerformanceResult(1.0, 1.0, 1.0, 2.0382139417860244e-5, 1.3033548990885416e-5, 300.0, 1.5918309956759913)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.342628479003906e-5, 0.011312031745910644, 300.0, 28.23386904131621), PerformanceResult(1.0, 1.0, 1.0, 3.39349110921224e-5, 1.9431114196777344e-5, 300.0, 28.23386904131621), PerformanceResult(1.0, 1.0, 1.0, 0.0033606529235839845, 0.0032854636510213217, 300.0, 1.5918309956759913), PerformanceResult(1.0, 1.0, 1.0, 2.0382139417860244e-5, 1.3033548990885416e-5, 300.0, 1.5918309956759913))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 123.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007413482666015625, 0.003559668858846029, 347.9, 28677.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006171266237894694, 0.002684632937113444, 302.96666666666664, 6985.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6148885091145834e-5, 7.597605387369792e-6, 92.26666666666667, 50.95941842952743))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.857280731201172e-5, 7.692972819010416e-6, 83.33333333333333, 74.6717039346695))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6427040100097658e-5, 8.662541707356771e-6, 85.36666666666666, 41.33830726146698))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.208319346110026e-5, 6.053447723388672e-5, 91.96666666666667, 46.05216971738264))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7866666666666665, 0.7866666666666665, 0.7866666666666665, 1.674493153889974e-5, 2.5796890258789063e-5, 69.5, 192.95732863992453))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-07T10:30:27.750
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8998888888888886, 0.8989999999999998, 0.8994210526315787, 9.813308715820312e-6, 1.0499954223632812e-5, 153.61, 51.124907023622654))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3725757598876953e-5, 1.3301372528076172e-5, 157.48, 0.0))
*** advance 1 from 1000; 2020-10-07T10:30:28.247
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9026666666666663, 0.8999999999999996, 0.9012046783625727, 9.610652923583985e-6, 9.758472442626953e-6, 151.95, 75.84183391369879))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 9.586811065673828e-6, 6.3300132751464845e-6, 155.64, 0.0))
*** advance 1 from 1000; 2020-10-07T10:30:28.751
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8915714285714283, 0.8879999999999996, 0.8895325077399378, 1.5859603881835937e-5, 1.959085464477539e-5, 153.17, 41.50787131674588))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4622211456298828e-5, 1.5769004821777344e-5, 156.84, 0.0))
*** advance 1 from 1000; 2020-10-07T10:30:29.280
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8971666666666666, 0.8949999999999997, 0.8959824561403508, 4.135608673095703e-5, 0.00019223928451538085, 153.52, 45.960155565990135))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.338502883911133e-5, 0.00020733118057250977, 157.28, 0.0))
*** advance 1 from 1000; 2020-10-07T10:30:29.644
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8692500000000001, 0.8680000000000001, 0.8685555555555556, 2.4356842041015624e-5, 6.901025772094726e-5, 152.55, 203.28793103527278))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.3801326751708984e-5, 7.085084915161133e-5, 156.15, 0.0))
*** advance 1 from 1000; 2020-10-07T10:30:30.294
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8998888888888886, 0.8989999999999998, 0.8994210526315787, 1.9881725311279297e-5, 4.801034927368164e-5, 153.61, 51.13519662921317))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3329982757568359e-5, 3.36909294128418e-5, 157.48, 0.014061755093280226))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:31.920
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7269999999999999, 0.7269999999999999, 0.7269999999999999, 0.0015054011344909667, 6.603002548217773e-5, 199.53, 192.53333531320095))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:32.893
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7340000000000001, 0.7340000000000001, 0.7340000000000001, 0.0014223051071166992, 5.125999450683594e-5, 202.21, 110.22698635607958))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:33.996
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6749999999999998, 0.6749999999999998, 0.6749999999999998, 0.0013130593299865722, 6.346940994262695e-5, 319.24, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:34.785
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9530000000000001, 0.9530000000000001, 0.9530000000000001, 0.00140397310256958, 9.140968322753907e-6, 223.17, 608.6000202447176))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:35.643
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5690000000000001, 0.5690000000000001, NaN, 0.0014461016654968262, 0.00017515182495117187, 252.46, 2360.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:36.511
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.35700000000000004, 0.35700000000000004, 0.35700000000000004, 0.0014282774925231934, 0.0003543782234191894, 237.92, 3674.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-07T10:30:37.260
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.581, 0.581, 0.581, 0.0014402961730957031, 1.834869384765625e-5, 245.75, 2378.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0434782608695654, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743704212454215,"seconds":2.9001384973526e-6,"exhaustive_search_seconds":2.0544975996017456e-6,"evaluations":8.625,"distances_sum":551.8065641522408}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0463215258855585, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428575,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":2.0544975996017456e-6,"evaluations":8.6015625,"distances_sum":549.7967976927757}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0463215258855585,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428575,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":2.0544975996017456e-6,"evaluations":8.6015625,"distances_sum":549.7967976927757}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0463215258855585,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428575,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":2.0544975996017456e-6,"evaluations":8.6015625,"distances_sum":549.7967976927757}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0807881773399015,"state":{"restarts":7},"perf":{"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4470890164375305e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":47.578125,"distances_sum":291.53290992602706}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.0807881773399015,"state":{"restarts":7},"perf":{"precision":0.9045138888888877,"recall":0.9045138888888877,"f1":0.9045138888888877,"seconds":1.4470890164375305e-5,"exhaustive_search_seconds":4.610046744346619e-6,"evaluations":47.578125,"distances_sum":291.53290992602706}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666655, conf: {"restarts":1}, perf: {"precision":0.8463541666666655,"recall":0.8463541666666655,"f1":0.8463541666666655,"seconds":1.802295446395874e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":61.4375,"distances_sum":125.66226090118289}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777771, conf: {"restarts":17}, perf: {"precision":0.8637152777777771,"recall":0.8637152777777771,"f1":0.8637152777777771,"seconds":4.4113025069236755e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":167.890625,"distances_sum":124.47948295995593}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8802083333333324, conf: {"restarts":14}, perf: {"precision":0.8802083333333324,"recall":0.8802083333333324,"f1":0.8802083333333324,"seconds":3.8446858525276184e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":152.859375,"distances_sum":123.88493775576353}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8802083333333324,"state":{"restarts":14},"perf":{"precision":0.8802083333333324,"recall":0.8802083333333324,"f1":0.8802083333333324,"seconds":3.8446858525276184e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":152.859375,"distances_sum":123.88493775576353}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444432, conf: {"restarts":19}, perf: {"precision":0.8819444444444432,"recall":0.8819444444444432,"f1":0.8819444444444432,"seconds":5.148537456989288e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":183.734375,"distances_sum":123.67971224710345}, best_list's length: 11, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8836805555555544, conf: {"restarts":24}, perf: {"precision":0.8836805555555544,"recall":0.8836805555555544,"f1":0.8836805555555544,"seconds":5.97536563873291e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":210.5,"distances_sum":123.3622304983437}, best_list's length: 14, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8880208333333324, conf: {"restarts":27}, perf: {"precision":0.8880208333333324,"recall":0.8880208333333324,"f1":0.8880208333333324,"seconds":6.031431257724762e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":224.5390625,"distances_sum":123.3940326757729}, best_list's length: 16, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.881076388888888, conf: {"restarts":21}, perf: {"precision":0.881076388888888,"recall":0.881076388888888,"f1":0.881076388888888,"seconds":4.974938929080963e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":197.09375,"distances_sum":123.58282866328955}, best_list's length: 19, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8880208333333324,"state":{"restarts":27},"perf":{"precision":0.8880208333333324,"recall":0.8880208333333324,"f1":0.8880208333333324,"seconds":6.031431257724762e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":224.5390625,"distances_sum":123.3940326757729}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8880208333333324,"state":{"restarts":27},"perf":{"precision":0.8880208333333324,"recall":0.8880208333333324,"f1":0.8880208333333324,"seconds":6.031431257724762e-5,"exhaustive_search_seconds":1.993030309677124e-5,"evaluations":224.5390625,"distances_sum":123.3940326757729}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444434,"state":{"restarts":27},"perf":{"precision":0.8663194444444434,"recall":0.8663194444444434,"f1":0.8663194444444434,"seconds":0.0001015644520521164,"exhaustive_search_seconds":0.00021438300609588623,"evaluations":355.1484375,"distances_sum":55.929321215022355}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8663194444444434,"state":{"restarts":27},"perf":{"precision":0.8663194444444434,"recall":0.8663194444444434,"f1":0.8663194444444434,"seconds":0.0001015644520521164,"exhaustive_search_seconds":0.00021438300609588623,"evaluations":355.1484375,"distances_sum":55.929321215022355}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(27), SatNeighborhood(32), 2020-10-07T10:30:43.520
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3372, 0.038255677f0), Item(4232, 0.03989933f0), Item(2611, 0.054188684f0), Item(8807, 0.058283295f0), Item(3546, 0.058730032f0), Item(1530, 0.06522209f0), Item(3371, 0.06840225f0), Item(3550, 0.07165961f0), Item(1149, 0.071710125f0), Item(3182, 0.07609121f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9322483072483078,"seconds":0.0029160436242818832,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.15625,"distances_sum":519.2564825415611}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9322483072483078,"seconds":0.0029160436242818832,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.15625,"distances_sum":519.2564825415611}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.258421187966058,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":1.158006489276886e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":30.3828125,"distances_sum":274.4961982090026}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.258421187966058,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":1.158006489276886e-5,"exhaustive_search_seconds":5.109235644340515e-6,"evaluations":30.3828125,"distances_sum":274.4961982090026}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.30806713589605,"state":{"bsize":3},"perf":{"precision":0.9782986111111107,"recall":0.9782986111111107,"f1":0.9782986111111107,"seconds":3.0508264899253845e-5,"exhaustive_search_seconds":2.5188550353050232e-5,"evaluations":57.71875,"distances_sum":122.64347186591476}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.30806713589605,"state":{"bsize":3},"perf":{"precision":0.9782986111111107,"recall":0.9782986111111107,"f1":0.9782986111111107,"seconds":3.0508264899253845e-5,"exhaustive_search_seconds":2.5188550353050232e-5,"evaluations":57.71875,"distances_sum":122.64347186591476}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.84748777234326, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":3.808736801147461e-5,"exhaustive_search_seconds":0.0001978352665901184,"evaluations":105.421875,"distances_sum":54.51758706010878}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.87198898830007, conf: {"bsize":4}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":4.038773477077484e-5,"exhaustive_search_seconds":0.0001978352665901184,"evaluations":102.1640625,"distances_sum":54.542881386354566}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.87198898830007,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":4.038773477077484e-5,"exhaustive_search_seconds":0.0001978352665901184,"evaluations":102.1640625,"distances_sum":54.542881386354566}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.87198898830007,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":4.038773477077484e-5,"exhaustive_search_seconds":0.0001978352665901184,"evaluations":102.1640625,"distances_sum":54.542881386354566}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.87198898830007,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":4.038773477077484e-5,"exhaustive_search_seconds":0.0001978352665901184,"evaluations":102.1640625,"distances_sum":54.542881386354566}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(4), SatNeighborhood(32), 2020-10-07T10:30:46.820
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9793, 0.032801777f0), Item(6941, 0.036100972f0), Item(5704, 0.044378616f0), Item(650, 0.052070756f0), Item(4543, 0.05637859f0), Item(9510, 0.05772087f0), Item(1612, 0.05866614f0), Item(3102, 0.0609492f0), Item(442, 0.061490048f0), Item(1575, 0.06553898f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
