Julia Version 1.5.0-DEV.190
Commit 347859e828 (2020-01-29 01:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_V2NWpD/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_V2NWpD/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_V2NWpD/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.02825890567492997 -0.15524887476985372; 0.02825890567492997 0.0 0.07717642624957542; 0.15524887476985372 -0.07717642624957542 0.0])
dAA = so3([0.0 0.04734884326893986 0.11156615683180165; -0.04734884326893986 0.0 -0.0434811311799825; -0.11156615683180165 0.0434811311799825 0.0])
dAA = so3([0.0 -0.22326746859307228 0.09057199785914265; 0.22326746859307228 0.0 -0.02816279362082673; -0.09057199785914265 0.02816279362082673 0.0])
dAA = Quaternion(0.9940372786376103, [-0.021911928548431214, 0.06578565844645055, 0.0841546386647206])
dAA = SO3([0.9924918734823225 0.016821702653666545 0.12114830329551354; -0.03440960786573369 0.98889372149111 0.14458625965834368; -0.11737060943045557 -0.14766935333810863 0.982047810509564])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9544921366450226 0.13136733990283422 0.2677449963858759; -0.10130935421863949 0.98719700085961 -0.12320103993714214; -0.28050165031710905 0.09046935116736651 0.955580515011024]), [-0.7717642624957541, -1.552488747698537, 0.2825890567492997])
xj = SE3(SO3([0.8597915950268253 -0.4101092289854712 0.3042512669195807; 0.38313425132733986 0.9119873113045583 0.14658543406260172; -0.3375893342229081 -0.00946384279375564 0.9412459174405532]), [0.28162793620826726, 0.9057199785914264, 2.2326746859307227])
Dx = SE3(SO3([0.8765435984045515 -0.4811842562740531 0.01153393297996802; 0.4606360305182612 0.8455799923433548 0.2698312879133765; -0.13959143055495807 -0.23120594296556948 0.9628385349854991]), [0.2094127946260721, 2.741540594691368, 1.8426504488222184])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
