Julia Version 1.6.0-DEV.157
Commit cd6d830082 (2020-06-03 13:26 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_WDdIt4/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_WDdIt4/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1123041490696002 -0.12898976322698938; 0.1123041490696002 0.0 -0.021525068809576067; 0.12898976322698938 0.021525068809576067 0.0])
dAA = so3([0.0 -0.020464360836773013 0.02989697850518541; 0.020464360836773013 0.0 -0.06381270751425036; -0.02989697850518541 0.06381270751425036 0.0])
dAA = so3([0.0 -0.08488959110301837 -0.033625232278362636; 0.08488959110301837 0.0 -0.014485082973900651; 0.033625232278362636 0.014485082973900651 0.0])
dAA = Quaternion(0.9990202644979305, [-0.015451397043633191, 0.04146876240542859, 0.0003274086853916214])
dAA = SO3([0.9980237937088364 0.04425966202472004 -0.04460481485758371; -0.034039229334247925 0.9774746144053613 0.20828996389509696; 0.0528189176086773 -0.20636002643571227 0.9770494877088366])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9959095554804004 -0.04492922509124894 0.07839338004915479; 0.05681961670137644 0.9860054027014735 -0.15673186338908152; -0.07025445509531761 0.16054504220375332 0.9845250636540722]), [0.21525068809576067, -1.2898976322698936, 1.123041490696002])
xj = SE3(SO3([0.9785782959916958 -0.00643206165394645 0.2057745057019184; -0.009553865392681873 0.9970162241745341 0.07659877537411194; -0.20565320875213092 -0.07692384100937091 0.9755969866775509]), [0.1448508297390065, -0.3362523227836263, 0.8488959110301837])
Dx = SE3(SO3([0.9884806829137132 0.05564857057399849 0.1407450748676834; -0.08640353050233684 0.9710026298616408 0.2229087766744709; -0.12425928304626116 -0.2325018911640249 0.9646255756416483]), [0.0033338176283291, 0.8994497248394597, -0.42488868349057995])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
