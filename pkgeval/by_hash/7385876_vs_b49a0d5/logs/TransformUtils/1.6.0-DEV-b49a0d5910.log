Julia Version 1.6.0-DEV.155
Commit b49a0d5910 (2020-06-03 13:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_XJBVlY/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_XJBVlY/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.030659870036221205 -0.0936920037185116; 0.030659870036221205 0.0 0.08485058417660729; 0.0936920037185116 -0.08485058417660729 0.0])
dAA = so3([0.0 0.017644238271941334 -0.22525042856817665; -0.017644238271941334 0.0 -0.038919351585389006; 0.22525042856817665 0.038919351585389006 0.0])
dAA = so3([0.0 -0.05348164668526381 -0.031204474758771625; 0.05348164668526381 0.0 -0.04028030470347671; 0.031204474758771625 0.04028030470347671 0.0])
dAA = Quaternion(0.9983836167869441, [-0.05462769271610606, 0.001224894707820119, -0.01563549017107583])
dAA = SO3([0.9943572678514209 -0.1002348466524628 0.034736139503621054; 0.10303371597345753 0.9904773421496963 -0.09131641725765612; -0.025252272051414185 0.09438013670593375 0.9952159125293419])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8447914983189244 0.01508094772018547 -0.5348830614105552; -0.06838851324739452 0.9944481624959536 -0.07997414184742756; 0.530707391717769 0.10414133244914123 0.8411327167884031]), [-0.8485058417660729, -0.9369200371851159, 0.30659870036221204])
xj = SE3(SO3([0.9969458002515541 0.07709588545288651 0.01246177383135583; -0.07759651006489744 0.9598419675729878 0.2695963258491548; 0.008823433942447346 -0.26973991497709565 0.9628927901285856]), [0.4028030470347671, -0.3120447475877162, 0.5348164668526381])
Dx = SE3(SO3([0.8522007079073847 -0.1436651832484696 0.5031046298379058; -0.06121193518914031 0.9275846857969821 0.36856444438566616; -0.5196220284327379 -0.3448868884099511 0.7816943019942956]), [1.1354776746070379, 0.6640439097539499, -0.5273163643117749])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
