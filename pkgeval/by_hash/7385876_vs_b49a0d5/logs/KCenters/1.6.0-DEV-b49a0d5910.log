Julia Version 1.6.0-DEV.155
Commit b49a0d5910 (2020-06-03 13:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Compat ────────────────────── v3.10.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed StatsBase ─────────────────── v0.32.2
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed CategoricalArrays ─────────── v0.7.7
  Installed TableTraits ───────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MLDataPattern ─────────────── v0.5.3
  Installed SimilaritySearch ──────────── v0.3.19
  Installed OrderedCollections ────────── v1.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Parsers ───────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.17
  Installed DataAPI ───────────────────── v1.3.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed MLLabelUtils ──────────────── v0.5.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_SQAiGp/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_SQAiGp/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.932025450070699
[ Info: 0.8326150393486023
[ Info: 0.5563809144993623
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32531724544862906
mean(cdnet.distances) = 0.40075287645061813
mean(crand.distances) = 0.3998489725589752
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":2.5816261768341064e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.4296875,"distances_sum":950.4320051705349}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6416015625,"f1":null,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.9765625,"distances_sum":1625.141719087461}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5361328125,"f1":null,"seconds":7.6070427894592285e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.5859375,"distances_sum":1294.228953926558}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6416015625,"f1":null,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.9765625,"distances_sum":1625.141719087461}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.89873563936064,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":2148.595623566373}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8415074508824517,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5625,"distances_sum":1904.7708203144216}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7700627497502506,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0390625,"distances_sum":1631.7063916072088}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9532967032967039,"seconds":7.014721632003784e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.984375,"distances_sum":2480.007508491321}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8479312354312365,"seconds":6.429851055145264e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6015625,"distances_sum":1899.7665008350575}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9532967032967039,"seconds":7.014721632003784e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.984375,"distances_sum":2480.007508491321}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824181,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2527.0516401284613}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586913086913094,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2539.3664299854086}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586913086913094,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2539.3664299854086}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586913086913094,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2539.3664299854086}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.21875,"distances_sum":918.0999963914423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":1.2449920177459717e-5,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.1953125,"distances_sum":939.7689802990685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4345703125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4345703125,"f1":null,"seconds":1.2449920177459717e-5,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.1953125,"distances_sum":939.7689802990685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6977987290487295,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.7890625,"distances_sum":1242.1193912403169}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8093697968697977,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.5234375,"distances_sum":1679.6560810451926}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7766518204018211,"seconds":1.3126060366630554e-5,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.296875,"distances_sum":1504.9423631195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9119250541125549,"seconds":6.839632987976074e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2137.2737951839995}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.3359375,"distances_sum":982.6917347984772}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9119250541125549,"seconds":6.839632987976074e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2137.2737951839995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.964325778388279,"seconds":7.3034316301345825e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.953125,"distances_sum":2452.5064974499805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9161375083250091,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6953125,"distances_sum":2161.129809655571}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":7.359310984611511e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.921875,"distances_sum":2491.1603636881377}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358375999001005,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2286.2811570237}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9414179570429576,"seconds":7.057562470436096e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2329.165647220969}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":7.359310984611511e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.921875,"distances_sum":2491.1603636881377}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966781135531136,"seconds":7.359310984611511e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.921875,"distances_sum":2491.1603636881377}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8591153638028646,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4140625,"distances_sum":1817.3420491617505}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7327328921078927,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.5859375,"distances_sum":1305.9923633074898}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8591153638028646,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4140625,"distances_sum":1817.3420491617505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8776842948717958,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.515625,"distances_sum":1927.3869617684388}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8733488733488742,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4375,"distances_sum":1957.9584578713645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9027560980685988,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.625,"distances_sum":2078.1333128648143}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8697744963369972,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5078125,"distances_sum":1896.0092590290158}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9027560980685988,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.625,"distances_sum":2078.1333128648143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9212740384615392,"seconds":7.014721632003784e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.65625,"distances_sum":2185.8604084960134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676167582417586,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2488.5465029965526}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9434237637362645,"seconds":6.647780537605286e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7265625,"distances_sum":2311.1011591547694}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9422332875457882,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7734375,"distances_sum":2302.3609689175773}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9259958791208798,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.703125,"distances_sum":2209.250424277296}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676739926739932,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9375,"distances_sum":2493.914196406465}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9322318306693312,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.71875,"distances_sum":2278.175047556766}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673592032967038,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.921875,"distances_sum":2508.2294016817914}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9456902472527478,"seconds":6.979331374168396e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.765625,"distances_sum":2335.2443000123158}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9103172868797875,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.59375,"distances_sum":2124.552114609007}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9580929487179494,"seconds":7.320195436477661e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":2456.50149847579}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9676167582417586,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2488.5465029965526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9676167582417586,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2488.5465029965526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8680491383616391,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.6171875,"distances_sum":1795.814813362597}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8332427988677996,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.421875,"distances_sum":1668.7675433697689}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8680491383616391,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.6171875,"distances_sum":1795.814813362597}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9322229853479863,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.84375,"distances_sum":2193.0013194525854}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9294070512820519,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.875,"distances_sum":2177.9407511864833}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571714743589748,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8984375,"distances_sum":2376.939571169371}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9120650183150191,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8828125,"distances_sum":2072.979074487769}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8651065947940957,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.59375,"distances_sum":1847.3189366611891}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571714743589748,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8984375,"distances_sum":2376.939571169371}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465207,"seconds":6.51925802230835e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2437.0362827671083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962688873626374,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.890625,"distances_sum":2401.814149993926}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685840201465207,"seconds":6.51925802230835e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2437.0362827671083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685840201465207,"seconds":6.51925802230835e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2437.0362827671083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7013077200577206,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.46875,"distances_sum":1212.0545521418676}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8715206668331674,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.640625,"distances_sum":1778.106838138266}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8715206668331674,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.640625,"distances_sum":1778.106838138266}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9482918123543128,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9140625,"distances_sum":2192.6124200756967}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9371222527472532,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.859375,"distances_sum":2112.8807317447922}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9482918123543128,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9140625,"distances_sum":2192.6124200756967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417584,"seconds":6.768852472305298e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9375,"distances_sum":2393.4796567244052}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512823,"seconds":9.469501674175262e-5,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9140625,"distances_sum":2360.5614215812857}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9859203296703298,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9921875,"distances_sum":2442.77962827444}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530022061272068,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8515625,"distances_sum":2246.048490886441}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9859203296703298,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9921875,"distances_sum":2442.77962827444}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9859203296703298,"seconds":7.180497050285339e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9921875,"distances_sum":2442.77962827444}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8040969447219456,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.09375,"distances_sum":1496.6494313083676}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8040969447219456,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.09375,"distances_sum":1496.6494313083676}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8558306277056285,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.734375,"distances_sum":1653.8767530970954}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9323405760905766,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2106.546834729719}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9323405760905766,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2106.546834729719}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516826923076926,"seconds":6.644055247306824e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9609375,"distances_sum":2220.709672425357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9552140567765574,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":2234.5503042568234}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968641254578755,"seconds":6.940215826034546e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9765625,"distances_sum":2326.580738069243}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9398122710622715,"seconds":6.882473826408386e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2149.8208671304433}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587683150183155,"seconds":6.927177309989929e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9296875,"distances_sum":2252.691199100337}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968641254578755,"seconds":6.940215826034546e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9765625,"distances_sum":2326.580738069243}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968641254578755,"seconds":6.940215826034546e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9765625,"distances_sum":2326.580738069243}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.203125,"distances_sum":875.6282813373454}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4462890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4462890625,"f1":null,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.265625,"distances_sum":945.9566400909403}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7161005661005667,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.765625,"distances_sum":1253.323054257856}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7161005661005667,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.765625,"distances_sum":1253.323054257856}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9103537087912097,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.84375,"distances_sum":2002.4520639429616}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8626836704961712,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":1768.037328208551}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9097584706959715,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2015.8022233481697}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9103537087912097,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.84375,"distances_sum":2002.4520639429616}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9332760989010995,"seconds":6.984919309616089e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9296875,"distances_sum":2165.6480444541744}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941396,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2396.423245321147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9528305028305034,"seconds":7.055699825286865e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2299.594910134579}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579842032967034,"seconds":6.491318345069885e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9296875,"distances_sum":2305.4754742303376}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9200237262737269,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2054.9174348848483}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658310439560444,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2345.7709378345794}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9356856684981693,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9765625,"distances_sum":2126.79641274203}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941396,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2396.423245321147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941396,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.953125,"distances_sum":2396.423245321147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8127658799533809,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.015625,"distances_sum":1512.9443648795934}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.2734375,"distances_sum":840.0530408492583}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":7.2734375,"distances_sum":881.1546746192545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8127658799533809,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.015625,"distances_sum":1512.9443648795934}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9074290293040301,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7734375,"distances_sum":1963.5973071706817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516655219780226,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.921875,"distances_sum":2234.814955283308}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9301656676656683,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.90625,"distances_sum":2122.5346717138323}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.869694368131869,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5859375,"distances_sum":1742.3210372031065}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9516655219780226,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.921875,"distances_sum":2234.814955283308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311358,"seconds":7.199123501777649e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.96875,"distances_sum":2405.702083809148}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590086996337001,"seconds":6.623566150665283e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.90625,"distances_sum":2291.9832753568066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689961080586085,"seconds":4.049390554428101e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.984375,"distances_sum":2349.9278854577656}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9642342032967036,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.96875,"distances_sum":2307.109242188556}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311358,"seconds":7.199123501777649e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.96875,"distances_sum":2405.702083809148}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311358,"seconds":7.199123501777649e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.96875,"distances_sum":2405.702083809148}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4853515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.4853515625,"f1":null,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.1796875,"distances_sum":558.5407224515446}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9635230654761903,"recall":0.7236328125,"f1":0.8181747939560443,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1328125,"distances_sum":845.329861614953}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9555989583333332,"recall":0.64453125,"f1":0.7603118235930738,"seconds":4.980713129043579e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.6171875,"distances_sum":736.4064036807903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9635230654761903,"recall":0.7236328125,"f1":0.8181747939560443,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1328125,"distances_sum":845.329861614953}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9705543154761906,"recall":0.80078125,"f1":0.8693383439477192,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6015625,"distances_sum":972.4938958049245}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.969540550595238,"recall":0.7958984375,"f1":0.8682344348359975,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.59375,"distances_sum":964.6553463806628}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9680524553571429,"recall":0.9052734375,"f1":0.9325299049908424,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":1217.2405372947533}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9691499255952378,"recall":0.7451171875,"f1":0.8335563091422472,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1796875,"distances_sum":869.3383764293236}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":0.9690476190476192,"recall":0.8701171875,"f1":0.9111566818598071,"seconds":6.517395377159119e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7734375,"distances_sum":1098.725270481341}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9680524553571429,"recall":0.9052734375,"f1":0.9325299049908424,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":1217.2405372947533}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9702845982142859,"recall":0.9169921875,"f1":0.9412667410714287,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":1215.5922810150591}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9658854166666666,"recall":0.9072265625,"f1":0.9319339514652014,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8984375,"distances_sum":1219.9088730304209}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9702845982142859,"recall":0.9169921875,"f1":0.9412667410714287,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":1215.5922810150591}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9702845982142859,"recall":0.9169921875,"f1":0.9412667410714287,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":1215.5922810150591}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8458789474414482,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0234375,"distances_sum":1097.9041043505717}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8458789474414482,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0234375,"distances_sum":1097.9041043505717}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8882242757242765,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6015625,"distances_sum":1233.1971988914327}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598271520146529,"seconds":7.638707756996155e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":1470.5297884770303}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598271520146529,"seconds":7.638707756996155e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":1470.5297884770303}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598271520146529,"seconds":7.638707756996155e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":1470.5297884770303}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9598271520146529,"seconds":7.638707756996155e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":1470.5297884770303}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.421875,"distances_sum":286.3676033170148}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.4765625,"distances_sum":275.7578699506395}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.21875,"f1":null,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.4765625,"distances_sum":275.7578699506395}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8600566100566109,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5390625,"distances_sum":1048.553155799983}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8600566100566109,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5390625,"distances_sum":1048.553155799983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9422905219780228,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":1304.1355085988066}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8702152014652023,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5078125,"distances_sum":1068.1731247344212}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9422905219780228,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":1304.1355085988066}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9422905219780228,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":1304.1355085988066}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":2.9299408197402954e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.671875,"distances_sum":359.31737051412074}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.203125,"distances_sum":567.9396841147399}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7021173271173277,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.2890625,"distances_sum":781.9060888267236}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7021173271173277,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.2890625,"distances_sum":781.9060888267236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8664377289377297,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.296875,"distances_sum":1116.6819392673856}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8556641275391283,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.265625,"distances_sum":1105.222027486879}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.930986721611722,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1354.87908041444}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8155681124431133,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.90625,"distances_sum":994.7308463693521}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9023866758241766,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6640625,"distances_sum":1216.0537512373187}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.930986721611722,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.71875,"distances_sum":1354.87908041444}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9537290834165839,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":1443.2351282203235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230773,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7734375,"distances_sum":1425.4253641714106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9488495879120882,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7578125,"distances_sum":1421.7394441651343}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9558436355311359,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1444.6671523748726}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9401098901098905,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":1373.071624960869}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514568764568772,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.734375,"distances_sum":1457.923923120889}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9558436355311359,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1444.6671523748726}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9558436355311359,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1444.6671523748726}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8046640859140866,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3203125,"distances_sum":1078.2067263787858}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8038024475524483,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3828125,"distances_sum":1074.855708623857}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8046640859140866,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3203125,"distances_sum":1078.2067263787858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500801282051289,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":1577.71632700579}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8149073149073158,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.390625,"distances_sum":1115.6538490601686}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9060273060273069,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8046875,"distances_sum":1374.8416805595186}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8506477897102906,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6015625,"distances_sum":1228.3062600232481}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9290006868131875,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":1472.0316500213842}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8682926448551457,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":1257.6113813664244}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9500801282051289,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":1577.71632700579}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9693452380952385,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":1674.2202174946005}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596268315018321,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":1626.0023175581819}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652529761904767,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":1651.411880490443}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698489010989014,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":1653.1963883960616}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989014,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":1653.1963883960616}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989014,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":1653.1963883960616}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.2109375,"distances_sum":616.64733429555}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.4140625,"distances_sum":650.2592158621992}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8692801989676999,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5234375,"distances_sum":1327.581820342636}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8692801989676999,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5234375,"distances_sum":1327.581820342636}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9024699259074266,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.609375,"distances_sum":1423.9831461513907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9529449716949725,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":1676.9068305081325}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9529449716949725,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":1676.9068305081325}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9609375,"distances_sum":1800.7036440885777}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9609375,"distances_sum":1800.7036440885777}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9609375,"distances_sum":1800.7036440885777}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":2.8014183044433594e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.2421875,"distances_sum":342.4643190646241}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.859184045121546,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.5546875,"distances_sum":1269.6291480802724}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.859184045121546,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.5546875,"distances_sum":1269.6291480802724}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8592626123876134,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.46875,"distances_sum":1289.0960838597703}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8885458291708298,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.671875,"distances_sum":1366.7579159359104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494848901098906,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8046875,"distances_sum":1614.4338485938786}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596382783882791,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.875,"distances_sum":1656.4263476653146}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596382783882791,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.875,"distances_sum":1656.4263476653146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":13,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822000915750919,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1791.9725300559423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9760645604395608,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9140625,"distances_sum":1740.8416022156507}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755608974358976,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9296875,"distances_sum":1753.60725483224}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109893,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8046875,"distances_sum":1705.0666372369553}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":13,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822000915750919,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1791.9725300559423}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":13,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822000915750919,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1791.9725300559423}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":5.5546875,"distances_sum":521.8098899075601}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1708984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1708984375,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":5.234375,"distances_sum":449.24755736719686}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.189453125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":5.5546875,"distances_sum":521.8098899075601}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.98046875,"recall":0.51953125,"f1":0.6657533438783443,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.359375,"distances_sum":1250.5486891378464}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.615234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.976171875,"recall":0.615234375,"f1":0.7416022345709851,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.375,"distances_sum":1439.3344471822622}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9889508928571429,"recall":0.7587890625,"f1":0.85016493922744,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0625,"distances_sum":1862.145577391268}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":0.9889508928571429,"recall":0.7587890625,"f1":0.85016493922744,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0625,"distances_sum":1862.145577391268}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9827938988095238,"recall":0.890625,"f1":0.9303285256410262,"seconds":6.705522537231445e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.6953125,"distances_sum":2472.4423221251236}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.986142113095238,"recall":0.8310546875,"f1":0.8960608402014654,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.65625,"distances_sum":2142.764455479434}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9858816964285714,"recall":0.880859375,"f1":0.9253720238095242,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5859375,"distances_sum":2420.4935337405022}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9827938988095238,"recall":0.890625,"f1":0.9303285256410262,"seconds":6.705522537231445e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.6953125,"distances_sum":2472.4423221251236}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9827938988095238,"recall":0.890625,"f1":0.9303285256410262,"seconds":6.705522537231445e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.6953125,"distances_sum":2472.4423221251236}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.6690941003441008,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.28125,"distances_sum":1158.4493654777912}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.6690941003441008,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.28125,"distances_sum":1158.4493654777912}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8945949883449891,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5234375,"distances_sum":2087.7004632447365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8588864260739268,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0859375,"distances_sum":1856.4324495116773}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7823504620379628,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.5546875,"distances_sum":1574.1678768213608}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8945949883449891,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5234375,"distances_sum":2087.7004632447365}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406021062271068,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.703125,"distances_sum":2428.9730726210314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8972158050283059,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.59375,"distances_sum":2069.9559945800524}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9406021062271068,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.703125,"distances_sum":2428.9730726210314}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9406021062271068,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.703125,"distances_sum":2428.9730726210314}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.501953125,"f1":0.6452165889665893,"seconds":4.248693585395813e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.84375,"distances_sum":1191.32935621212}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.51171875,"f1":null,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.671875,"distances_sum":1290.659903801127}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.51171875,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.51171875,"f1":null,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.671875,"distances_sum":1290.659903801127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9058727730602738,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.515625,"distances_sum":2229.3087608106557}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9271691849816859,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2362.966566327935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8489505286380294,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.09375,"distances_sum":1951.5224550153807}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7858806124431132,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8828125,"distances_sum":1671.1747934474909}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9271691849816859,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2362.966566327935}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416755119880122,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.640625,"distances_sum":2529.558610132397}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9268981018981025,"seconds":6.508082151412964e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2373.1531127288513}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9448202838827844,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2498.2687223972503}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9380551739926747,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7890625,"distances_sum":2455.320655664437}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9456215659340664,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2509.6389153050804}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454498626373633,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2517.5182017938278}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9456215659340664,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2509.6389153050804}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9456215659340664,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2509.6389153050804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8418019480519489,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":7.6484375,"distances_sum":1844.9645561623045}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8418019480519489,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":7.6484375,"distances_sum":1844.9645561623045}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8658633033633042,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":7.9375,"distances_sum":1960.3635632572466}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9068488802863812,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.3984375,"distances_sum":2296.384080618385}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9068488802863812,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.3984375,"distances_sum":2296.384080618385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660943223443228,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.8984375,"distances_sum":2647.866687269059}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9359775641025646,"seconds":6.5676867961883545e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.5859375,"distances_sum":2505.7628758977476}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9600675366300371,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.8125,"distances_sum":2614.794292684118}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9260531135531144,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.4296875,"distances_sum":2392.03001265933}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660943223443228,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.8984375,"distances_sum":2647.866687269059}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660943223443228,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":2.125278115272522e-6,"evaluations":8.8984375,"distances_sum":2647.866687269059}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7855113636363645,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.125,"distances_sum":1581.9977577881546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.1515955924987793e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":6.046875,"distances_sum":547.8169060401774}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":6.2734375,"distances_sum":854.996084420741}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7855113636363645,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.125,"distances_sum":1581.9977577881546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8539408508158517,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.6953125,"distances_sum":1900.421913924604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.926488095238096,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.5390625,"distances_sum":2449.526356522199}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.853504308191809,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":7.6953125,"distances_sum":1932.1389675074927}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.926488095238096,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.5390625,"distances_sum":2449.526356522199}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9489869505494508,"seconds":6.975606083869934e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.765625,"distances_sum":2584.870918612339}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9347813644688652,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.609375,"distances_sum":2450.2463074724233}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9489869505494508,"seconds":6.975606083869934e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.765625,"distances_sum":2584.870918612339}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9489869505494508,"seconds":6.975606083869934e-6,"exhaustive_search_seconds":8.605420589447021e-7,"evaluations":8.765625,"distances_sum":2584.870918612339}}, n: 9
mean(cfft.distances) = 0.32764568802009
mean(cdnet.distances) = 0.391412628593478
mean(crand.distances) = 0.3437871250166151
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.928888888888889
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8444444444444444
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8644444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8799999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8444444444444444
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8755555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8177777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5701869209607442] ***
*** center 1: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.23960223178989415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23960223178989415, 0.18982841558558963] ***
*** finished computation of 7 references, err: [Inf, 0.23960223178989415, 0.18982841558558963] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [50, 55, 0]]
** centroid: 1, normalized-entropy: 0.998363672593813, [(1, 50), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 40, 0]]
** centroid: 2, normalized-entropy: 0.9995708393473225, [(1, 42), (2, 40)]
*** center 3: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 90, 22]]
** centroid: 4, normalized-entropy: 0.7147274731317893, [(2, 90), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 78, 0]]
** centroid: 5, normalized-entropy: 0.9551678918612524, [(1, 47), (2, 78)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2497525710903399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2497525710903399, 0.19970154459098796] ***
*** finished computation of 7 references, err: [Inf, 0.2497525710903399, 0.19970154459098796] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [98, 59, 0]]
** centroid: 1, normalized-entropy: 0.9550188085372382, [(1, 98), (2, 59)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 8, 0]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 75, 28]]
** centroid: 4, normalized-entropy: 0.844099171796772, [(2, 75), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 50, 0]]
** centroid: 5, normalized-entropy: 0.9970590569034106, [(1, 44), (2, 50)]
*** center 6: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 77, 1]]
** centroid: 7, normalized-entropy: 0.098959095355743, [(2, 77), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23599641455785614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23599641455785614, 0.19506227124811917] ***
*** finished computation of 7 references, err: [Inf, 0.23599641455785614, 0.19506227124811917] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 107, 21]]
** centroid: 1, normalized-entropy: 0.6439403638806508, [(2, 107), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 14, 0]]
** centroid: 3, normalized-entropy: 0.6454495903301855, [(1, 71), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 22, 0]]
** centroid: 4, normalized-entropy: 0.725582675704817, [(1, 87), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 40, 0]]
** centroid: 5, normalized-entropy: 0.9348490242345946, [(1, 74), (2, 40)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 81, 4]]
** centroid: 6, normalized-entropy: 0.2737691686829417, [(2, 81), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32565608721606815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32565608721606815, 0.2741675318271906] ***
*** starting iteration: 2; err: [Inf, 0.32565608721606815, 0.2741675318271906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973] ***
*** starting iteration: 3; err: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973, 0.24206728295789467] ***
*** starting iteration: 4; err: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973, 0.24206728295789467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973, 0.24206728295789467, 0.24129693638309613] ***
*** finished computation of 3 references, err: [Inf, 0.32565608721606815, 0.2741675318271906, 0.25001376138037973, 0.24206728295789467, 0.24129693638309613] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 114, 0]]
** centroid: 1, normalized-entropy: 0.995312424219356, [(1, 97), (2, 114)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [65, 155, 29]]
** centroid: 2, normalized-entropy: 0.8156625433327702, [(1, 65), (2, 155), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48785991407651597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055] ***
*** starting iteration: 2; err: [Inf, 0.48785991407651597, 0.26633295302895055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833] ***
*** starting iteration: 3; err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017] ***
*** starting iteration: 4; err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833] ***
*** starting iteration: 5; err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099] ***
*** starting iteration: 6; err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099, 0.2305577466141494] ***
*** starting iteration: 7; err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099, 0.2305577466141494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099, 0.2305577466141494, 0.2296307607298379] ***
*** finished computation of 3 references, err: [Inf, 0.48785991407651597, 0.26633295302895055, 0.2476466500913833, 0.23902966753151017, 0.23527200489878833, 0.2320028170252099, 0.2305577466141494, 0.2296307607298379] ***
*** center 1: selecting labels [1] (freq >= 1) [from [225, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [18, 198, 22]]
** centroid: 2, normalized-entropy: 0.5174362836613394, [(1, 18), (2, 198), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [139, 65, 0]]
** centroid: 3, normalized-entropy: 0.9028826117978824, [(1, 139), (2, 65)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37110283778983166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37110283778983166, 0.260577035914252] ***
*** starting iteration: 2; err: [Inf, 0.37110283778983166, 0.260577035914252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756] ***
*** starting iteration: 3; err: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553] ***
*** starting iteration: 4; err: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553, 0.24097215075491238] ***
*** starting iteration: 5; err: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553, 0.24097215075491238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553, 0.24097215075491238, 0.240015491752465] ***
*** finished computation of 3 references, err: [Inf, 0.37110283778983166, 0.260577035914252, 0.24468597653007756, 0.24218644354369553, 0.24097215075491238, 0.240015491752465] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [216, 27, 0]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(1, 216), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 193, 25]]
** centroid: 2, normalized-entropy: 0.5138695865333134, [(2, 193), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [162, 44, 0]]
** centroid: 3, normalized-entropy: 0.7482932859824888, [(1, 162), (2, 44)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27089054010075714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27089054010075714, 0.21447283109963253] ***
*** starting iteration: 2; err: [Inf, 0.27089054010075714, 0.21447283109963253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27089054010075714, 0.21447283109963253, 0.20020939335164084] ***
*** starting iteration: 3; err: [Inf, 0.27089054010075714, 0.21447283109963253, 0.20020939335164084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27089054010075714, 0.21447283109963253, 0.20020939335164084, 0.18922450753381928] ***
*** finished computation of 7 references, err: [Inf, 0.27089054010075714, 0.21447283109963253, 0.20020939335164084, 0.18922450753381928] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 78, 0]]
** centroid: 1, normalized-entropy: 0.8613819514443714, [(1, 31), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 50, 0]]
** centroid: 2, normalized-entropy: 0.9917033083725819, [(1, 62), (2, 50)]
*** center 3: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 16, 0]]
** centroid: 4, normalized-entropy: 0.6623570516079519, [(1, 77), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 62, 23]]
** centroid: 6, normalized-entropy: 0.8423074510400833, [(2, 62), (3, 23)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 63, 6]]
** centroid: 7, normalized-entropy: 0.42622865699814483, [(2, 63), (3, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27032924451372364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27032924451372364, 0.22282907953471884] ***
*** starting iteration: 2; err: [Inf, 0.27032924451372364, 0.22282907953471884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27032924451372364, 0.22282907953471884, 0.21149579148789843] ***
*** starting iteration: 3; err: [Inf, 0.27032924451372364, 0.22282907953471884, 0.21149579148789843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27032924451372364, 0.22282907953471884, 0.21149579148789843, 0.20340901002918985] ***
*** finished computation of 7 references, err: [Inf, 0.27032924451372364, 0.22282907953471884, 0.21149579148789843, 0.20340901002918985] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 16, 0]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(1, 68), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 54, 0]]
** centroid: 2, normalized-entropy: 0.9924760039430819, [(1, 44), (2, 54)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 41, 22]]
** centroid: 5, normalized-entropy: 0.9333572600179806, [(2, 41), (3, 22)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [106, 16, 0]]
** centroid: 7, normalized-entropy: 0.5605769426145328, [(1, 106), (2, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22595349251469973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22595349251469973, 0.19942744266356285] ***
*** starting iteration: 2; err: [Inf, 0.22595349251469973, 0.19942744266356285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22595349251469973, 0.19942744266356285, 0.19677478334073373] ***
*** starting iteration: 3; err: [Inf, 0.22595349251469973, 0.19942744266356285, 0.19677478334073373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22595349251469973, 0.19942744266356285, 0.19677478334073373, 0.19565548853057882] ***
*** finished computation of 7 references, err: [Inf, 0.22595349251469973, 0.19942744266356285, 0.19677478334073373, 0.19565548853057882] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 91, 25]]
** centroid: 1, normalized-entropy: 0.7518972278650765, [(2, 91), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 5, 0]]
** centroid: 2, normalized-entropy: 0.3638469981769295, [(1, 67), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 1, 0]]
** centroid: 3, normalized-entropy: 0.09794058271817412, [(1, 78), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 69, 0]]
** centroid: 4, normalized-entropy: 0.9998527812126373, [(1, 71), (2, 69)]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [19, 98, 0]]
** centroid: 7, normalized-entropy: 0.6400041428422206, [(1, 19), (2, 98)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25839856510853265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25839856510853265, 0.20271731298780432] ***
*** finished computation of 7 references, err: [Inf, 0.25839856510853265, 0.20271731298780432] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 74, 0]]
** centroid: 2, normalized-entropy: 0.23750814382859295, [(1, 3), (2, 74)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 12, 0]]
** centroid: 4, normalized-entropy: 0.644694043811662, [(1, 61), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 73, 0]]
** centroid: 5, normalized-entropy: 1.0, [(1, 73), (2, 73)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 51, 29]]
** centroid: 6, normalized-entropy: 0.9447388286467892, [(2, 51), (3, 29)]
*** center 7: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2408974266442089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408974266442089, 0.2072526704201634] ***
*** finished computation of 7 references, err: [Inf, 0.2408974266442089, 0.2072526704201634] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 6, 0]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(1, 56), (2, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 96, 0]]
** centroid: 4, normalized-entropy: 0.829059069399666, [(1, 34), (2, 96)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 3, 0]]
** centroid: 5, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 2) [from [3, 158, 22]]
** centroid: 7, normalized-entropy: 0.4085988279372766, [(1, 3), (2, 158), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25718878437743997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25718878437743997, 0.1995460389927588] ***
*** finished computation of 7 references, err: [Inf, 0.25718878437743997, 0.1995460389927588] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 4, 0]]
** centroid: 1, normalized-entropy: 0.23868451135100152, [(1, 98), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 78, 0]]
** centroid: 2, normalized-entropy: 0.1686609314966701, [(1, 2), (2, 78)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 45, 0]]
** centroid: 3, normalized-entropy: 0.9899927915575186, [(1, 57), (2, 45)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 50, 0]]
** centroid: 6, normalized-entropy: 0.9807983646944296, [(1, 36), (2, 50)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 87, 25]]
** centroid: 7, normalized-entropy: 0.765993414171823, [(2, 87), (3, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.259675203265997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869] ***
*** starting iteration: 2; err: [Inf, 0.259675203265997, 0.19125299081597869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258] ***
*** starting iteration: 3; err: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016] ***
*** starting iteration: 4; err: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815] ***
*** starting iteration: 5; err: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815, 0.15235812438081378] ***
*** starting iteration: 6; err: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815, 0.15235812438081378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815, 0.15235812438081378, 0.15169335186394775] ***
*** finished computation of 7 references, err: [Inf, 0.259675203265997, 0.19125299081597869, 0.1671674254269258, 0.15797389143457016, 0.1538418977473815, 0.15235812438081378, 0.15169335186394775] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 72, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 18), (2, 72)]
*** center 2: selecting labels [1] (freq >= 1) [from [133, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 92, 0]]
** centroid: 3, normalized-entropy: 0.6051865766334207, [(1, 16), (2, 92)]
*** center 4: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 12, 0]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(1, 90), (2, 12)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 61, 2]]
** centroid: 6, normalized-entropy: 0.20307392998664567, [(2, 61), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 32, 27]]
** centroid: 7, normalized-entropy: 0.9948131754904235, [(2, 32), (3, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2158238442860421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509] ***
*** starting iteration: 2; err: [Inf, 0.2158238442860421, 0.1829837447191509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175] ***
*** starting iteration: 3; err: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823] ***
*** starting iteration: 4; err: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548] ***
*** starting iteration: 5; err: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548, 0.1517199565362565] ***
*** starting iteration: 6; err: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548, 0.1517199565362565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548, 0.1517199565362565, 0.15119329759588596] ***
*** finished computation of 7 references, err: [Inf, 0.2158238442860421, 0.1829837447191509, 0.16663725847152175, 0.15653094803464823, 0.15306867057013548, 0.1517199565362565, 0.15119329759588596] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 26, 0]]
** centroid: 2, normalized-entropy: 0.846701711600821, [(1, 69), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 58, 0]]
** centroid: 3, normalized-entropy: 0.9103480624345157, [(1, 28), (2, 58)]
*** center 4: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 36, 0]]
** centroid: 5, normalized-entropy: 0.9872927315785851, [(1, 47), (2, 36)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 56, 0]]
** centroid: 6, normalized-entropy: 0.9914266810680207, [(1, 45), (2, 56)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 87, 22]]
** centroid: 7, normalized-entropy: 0.725582675704817, [(2, 87), (3, 22)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37323806737025994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527] ***
*** starting iteration: 2; err: [Inf, 0.37323806737025994, 0.22376527451816527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996] ***
*** starting iteration: 3; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635] ***
*** starting iteration: 4; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417] ***
*** starting iteration: 5; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398] ***
*** starting iteration: 6; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752] ***
*** starting iteration: 7; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292] ***
*** starting iteration: 8; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292, 0.15023794032164153] ***
*** starting iteration: 9; err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292, 0.15023794032164153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292, 0.15023794032164153, 0.14943772933140084] ***
*** finished computation of 7 references, err: [Inf, 0.37323806737025994, 0.22376527451816527, 0.195821156082996, 0.1772450336968635, 0.16398631923900417, 0.1571653013423398, 0.15363319903455752, 0.15189241041147292, 0.15023794032164153, 0.14943772933140084] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 92, 0]]
** centroid: 1, normalized-entropy: 0.2022494245476988, [(1, 3), (2, 92)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 25]]
** centroid: 2, normalized-entropy: 0.869620774054375, [(2, 61), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 39, 0]]
** centroid: 4, normalized-entropy: 0.9937489109291138, [(1, 47), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.402810053225864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402810053225864, 0.3107742095847164] ***
*** starting iteration: 2; err: [Inf, 0.402810053225864, 0.3107742095847164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834] ***
*** starting iteration: 3; err: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834, 0.2968190544027578] ***
*** starting iteration: 4; err: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834, 0.2968190544027578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834, 0.2968190544027578, 0.29594518243147805] ***
*** finished computation of 3 references, err: [Inf, 0.402810053225864, 0.3107742095847164, 0.2998034410547834, 0.2968190544027578, 0.29594518243147805] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [53, 185, 29]]
** centroid: 1, normalized-entropy: 0.7430296909373246, [(1, 53), (2, 185), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [102, 84, 0]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(1, 102), (2, 84)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3897278465727146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897278465727146, 0.3282239395577734] ***
*** starting iteration: 2; err: [Inf, 0.3897278465727146, 0.3282239395577734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902] ***
*** starting iteration: 3; err: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902, 0.31332264077951616] ***
*** starting iteration: 4; err: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902, 0.31332264077951616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902, 0.31332264077951616, 0.31260658333404756] ***
*** finished computation of 3 references, err: [Inf, 0.3897278465727146, 0.3282239395577734, 0.316235994330902, 0.31332264077951616, 0.31260658333404756] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [253, 15, 0]]
** centroid: 1, normalized-entropy: 0.31123570787647314, [(1, 253), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 182, 22]]
** centroid: 2, normalized-entropy: 0.493375733509813, [(2, 182), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [129, 66, 0]]
** centroid: 3, normalized-entropy: 0.9233388889944429, [(1, 129), (2, 66)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40002132963104314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40002132963104314, 0.30294265691609845] ***
*** starting iteration: 2; err: [Inf, 0.40002132963104314, 0.30294265691609845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40002132963104314, 0.30294265691609845, 0.2997086399571336] ***
*** starting iteration: 3; err: [Inf, 0.40002132963104314, 0.30294265691609845, 0.2997086399571336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40002132963104314, 0.30294265691609845, 0.2997086399571336, 0.2994087637699526] ***
*** finished computation of 3 references, err: [Inf, 0.40002132963104314, 0.30294265691609845, 0.2997086399571336, 0.2994087637699526] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [67, 180, 25]]
** centroid: 1, normalized-entropy: 0.7625248946466522, [(1, 67), (2, 180), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 84, 0]]
** centroid: 3, normalized-entropy: 0.9824235181716939, [(1, 115), (2, 84)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3800585222872416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800585222872416, 0.3041868487753354] ***
*** starting iteration: 2; err: [Inf, 0.3800585222872416, 0.3041868487753354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800585222872416, 0.3041868487753354, 0.2952066068327776] ***
*** starting iteration: 3; err: [Inf, 0.3800585222872416, 0.3041868487753354, 0.2952066068327776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800585222872416, 0.3041868487753354, 0.2952066068327776, 0.29527235891412684] ***
*** finished computation of 3 references, err: [Inf, 0.3800585222872416, 0.3041868487753354, 0.2952066068327776, 0.29527235891412684] ***
*** center 1: selecting labels [1] (freq >= 1) [from [224, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [42, 184, 29]]
** centroid: 2, normalized-entropy: 0.709773570726436, [(1, 42), (2, 184), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [102, 85, 0]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(1, 102), (2, 85)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.552248912031247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.552248912031247, 0.3246386081114344] ***
*** starting iteration: 2; err: [Inf, 0.552248912031247, 0.3246386081114344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312] ***
*** starting iteration: 3; err: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675] ***
*** starting iteration: 4; err: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675, 0.29078181750927196] ***
*** starting iteration: 5; err: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675, 0.29078181750927196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675, 0.29078181750927196, 0.28990951711744783] ***
*** finished computation of 3 references, err: [Inf, 0.552248912031247, 0.3246386081114344, 0.2977449663173312, 0.29222468363827675, 0.29078181750927196, 0.28990951711744783] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [44, 178, 22]]
** centroid: 1, normalized-entropy: 0.6880673540840871, [(1, 44), (2, 178), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [224, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [114, 85, 0]]
** centroid: 3, normalized-entropy: 0.9846261723703567, [(1, 114), (2, 85)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32745759522945883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32745759522945883, 0.30370889709930105] ***
*** starting iteration: 2; err: [Inf, 0.32745759522945883, 0.30370889709930105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32745759522945883, 0.30370889709930105, 0.2997795279595772] ***
*** starting iteration: 3; err: [Inf, 0.32745759522945883, 0.30370889709930105, 0.2997795279595772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32745759522945883, 0.30370889709930105, 0.2997795279595772, 0.2993523767846322] ***
*** finished computation of 3 references, err: [Inf, 0.32745759522945883, 0.30370889709930105, 0.2997795279595772, 0.2993523767846322] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 186, 25]]
** centroid: 1, normalized-entropy: 0.3569490817438365, [(1, 1), (2, 186), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [140, 69, 0]]
** centroid: 2, normalized-entropy: 0.9150729603584477, [(1, 140), (2, 69)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [237, 9, 0]]
** centroid: 3, normalized-entropy: 0.22641094842107634, [(1, 237), (2, 9)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38700969910176397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38700969910176397, 0.3053448678743494] ***
*** finished computation of 3 references, err: [Inf, 0.38700969910176397, 0.3053448678743494] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [238, 10, 0]]
** centroid: 1, normalized-entropy: 0.24376925951524556, [(1, 238), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 63, 0]]
** centroid: 2, normalized-entropy: 0.9745996624501091, [(1, 92), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [38, 196, 29]]
** centroid: 3, normalized-entropy: 0.6751904842351182, [(1, 38), (2, 196), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36781094027082734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36781094027082734, 0.33512832726194136] ***
*** finished computation of 3 references, err: [Inf, 0.36781094027082734, 0.33512832726194136] ***
*** center 1: selecting labels [1] (freq >= 2) [from [219, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [129, 121, 0]]
** centroid: 2, normalized-entropy: 0.9992612140227842, [(1, 129), (2, 121)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [34, 142, 22]]
** centroid: 3, normalized-entropy: 0.714630830785594, [(1, 34), (2, 142), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45325447674533503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45325447674533503, 0.34073872943834654] ***
*** finished computation of 3 references, err: [Inf, 0.45325447674533503, 0.34073872943834654] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [117, 88, 0]]
** centroid: 1, normalized-entropy: 0.9855159305720778, [(1, 117), (2, 88)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [38, 118, 25]]
** centroid: 2, normalized-entropy: 0.8010457586686845, [(1, 38), (2, 118), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [223, 58, 0]]
** centroid: 3, normalized-entropy: 0.7345559451332853, [(1, 223), (2, 58)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25417449010127746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25417449010127746, 0.21673765571580994] ***
*** finished computation of 7 references, err: [Inf, 0.25417449010127746, 0.21673765571580994] ***
*** center 1: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 6, 0]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 64, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 96), (2, 64)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 113, 29]]
** centroid: 6, normalized-entropy: 0.7302987278735849, [(2, 113), (3, 29)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 86, 0]]
** centroid: 7, normalized-entropy: 0.7292739418449411, [(1, 22), (2, 86)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3237532955919695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3237532955919695, 0.2284925083086632] ***
*** finished computation of 7 references, err: [Inf, 0.3237532955919695, 0.2284925083086632] ***
*** center 1: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [17, 91, 22]]
** centroid: 3, normalized-entropy: 0.7430612078527905, [(1, 17), (2, 91), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 46, 0]]
** centroid: 4, normalized-entropy: 0.9787603904449517, [(1, 65), (2, 46)]
*** center 5: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [27, 126, 0]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(1, 27), (2, 126)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24838046123227595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24838046123227595, 0.20224083658877476] ***
*** finished computation of 7 references, err: [Inf, 0.24838046123227595, 0.20224083658877476] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 91, 0]]
** centroid: 1, normalized-entropy: 0.14981136747274781, [(1, 2), (2, 91)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 44, 0]]
** centroid: 2, normalized-entropy: 0.9906174973781801, [(1, 35), (2, 44)]
*** center 3: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 62, 0]]
** centroid: 4, normalized-entropy: 0.9934950535358746, [(1, 75), (2, 62)]
*** center 5: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 63, 25]]
** centroid: 6, normalized-entropy: 0.8609652558547648, [(2, 63), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 4, 0]]
** centroid: 7, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33732492037330036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33732492037330036, 0.3019254412474083] ***
*** starting iteration: 2; err: [Inf, 0.33732492037330036, 0.3019254412474083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33732492037330036, 0.3019254412474083, 0.2956467445397207] ***
*** starting iteration: 3; err: [Inf, 0.33732492037330036, 0.3019254412474083, 0.2956467445397207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33732492037330036, 0.3019254412474083, 0.2956467445397207, 0.29545603386845226] ***
*** finished computation of 3 references, err: [Inf, 0.33732492037330036, 0.3019254412474083, 0.2956467445397207, 0.29545603386845226] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [236, 5, 0]]
** centroid: 1, normalized-entropy: 0.14561381704393933, [(1, 236), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [3, 209, 29]]
** centroid: 2, normalized-entropy: 0.3940874551684945, [(1, 3), (2, 209), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [129, 55, 0]]
** centroid: 3, normalized-entropy: 0.8799581506577953, [(1, 129), (2, 55)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5913092079397844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5913092079397844, 0.3254682403113665] ***
*** starting iteration: 2; err: [Inf, 0.5913092079397844, 0.3254682403113665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5913092079397844, 0.3254682403113665, 0.3035750954416811] ***
*** starting iteration: 3; err: [Inf, 0.5913092079397844, 0.3254682403113665, 0.3035750954416811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5913092079397844, 0.3254682403113665, 0.3035750954416811, 0.29556290648816186] ***
*** finished computation of 3 references, err: [Inf, 0.5913092079397844, 0.3254682403113665, 0.3035750954416811, 0.29556290648816186] ***
*** center 1: selecting labels [1] (freq >= 1) [from [215, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [160, 53, 0]]
** centroid: 2, normalized-entropy: 0.8094125344332209, [(1, 160), (2, 53)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [7, 210, 22]]
** centroid: 3, normalized-entropy: 0.39745044524161327, [(1, 7), (2, 210), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34140540386802853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34140540386802853, 0.3118772637507441] ***
*** starting iteration: 2; err: [Inf, 0.34140540386802853, 0.3118772637507441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34140540386802853, 0.3118772637507441, 0.3077386228906653] ***
*** starting iteration: 3; err: [Inf, 0.34140540386802853, 0.3118772637507441, 0.3077386228906653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34140540386802853, 0.3118772637507441, 0.3077386228906653, 0.3061744271703567] ***
*** finished computation of 3 references, err: [Inf, 0.34140540386802853, 0.3118772637507441, 0.3077386228906653, 0.3061744271703567] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [221, 22, 0]]
** centroid: 1, normalized-entropy: 0.43825299234846865, [(1, 221), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 181, 25]]
** centroid: 2, normalized-entropy: 0.5332553315209451, [(2, 181), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [157, 61, 0]]
** centroid: 3, normalized-entropy: 0.8552006772204057, [(1, 157), (2, 61)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.18868913103661336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463] ***
*** starting iteration: 2; err: [Inf, 0.18868913103661336, 0.15469310076574463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805] ***
*** starting iteration: 3; err: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856] ***
*** starting iteration: 4; err: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375] ***
*** starting iteration: 5; err: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375, 0.1457778307254071] ***
*** starting iteration: 6; err: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375, 0.1457778307254071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375, 0.1457778307254071, 0.14529233363985963] ***
*** finished computation of 7 references, err: [Inf, 0.18868913103661336, 0.15469310076574463, 0.15063444190160805, 0.14900702980623856, 0.14695652100948375, 0.1457778307254071, 0.14529233363985963] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 87, 0]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(1, 3), (2, 87)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 6, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 60), (2, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 108, 0]]
** centroid: 4, normalized-entropy: 0.13110652958234514, [(1, 2), (2, 108)]
*** center 5: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [98, 7, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 98), (2, 7)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 61, 29]]
** centroid: 7, normalized-entropy: 0.9067816913292788, [(2, 61), (3, 29)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18947229516724573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18947229516724573, 0.14841551419816676] ***
*** starting iteration: 2; err: [Inf, 0.18947229516724573, 0.14841551419816676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18947229516724573, 0.14841551419816676, 0.14661495420087625] ***
*** starting iteration: 3; err: [Inf, 0.18947229516724573, 0.14841551419816676, 0.14661495420087625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18947229516724573, 0.14841551419816676, 0.14661495420087625, 0.1462922461478897] ***
*** finished computation of 7 references, err: [Inf, 0.18947229516724573, 0.14841551419816676, 0.14661495420087625, 0.1462922461478897] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 70, 0]]
** centroid: 1, normalized-entropy: 0.9621461334087003, [(1, 44), (2, 70)]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 80, 22]]
** centroid: 4, normalized-entropy: 0.7522121733341471, [(2, 80), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 40, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 60), (2, 40)]
*** center 6: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 73, 0]]
** centroid: 7, normalized-entropy: 0.1773894531859976, [(1, 2), (2, 73)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18863656166438264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18863656166438264, 0.15393134047077603] ***
*** starting iteration: 2; err: [Inf, 0.18863656166438264, 0.15393134047077603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18863656166438264, 0.15393134047077603, 0.15030562276170048] ***
*** starting iteration: 3; err: [Inf, 0.18863656166438264, 0.15393134047077603, 0.15030562276170048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18863656166438264, 0.15393134047077603, 0.15030562276170048, 0.14964695069855122] ***
*** finished computation of 7 references, err: [Inf, 0.18863656166438264, 0.15393134047077603, 0.15030562276170048, 0.14964695069855122] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 107, 23]]
** centroid: 1, normalized-entropy: 0.673299408918962, [(2, 107), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 8, 0]]
** centroid: 3, normalized-entropy: 0.4500666580964382, [(1, 77), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 44, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 55), (2, 44)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 19, 0]]
** centroid: 5, normalized-entropy: 0.7347813522127804, [(1, 73), (2, 19)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [87, 5, 0]]
** centroid: 6, normalized-entropy: 0.30458668852140236, [(1, 87), (2, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 81, 2]]
** centroid: 7, normalized-entropy: 0.1638605128691586, [(2, 81), (3, 2)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.949047850245455, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 13
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.949047850245455, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.23014542956123019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23014542956123019, 0.1974405981705006] ***
*** starting iteration: 2; err: [Inf, 0.23014542956123019, 0.1974405981705006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23014542956123019, 0.1974405981705006, 0.1954649836257815] ***
*** starting iteration: 3; err: [Inf, 0.23014542956123019, 0.1974405981705006, 0.1954649836257815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23014542956123019, 0.1974405981705006, 0.1954649836257815, 0.19465601322907156] ***
*** finished computation of 7 references, err: [Inf, 0.23014542956123019, 0.1974405981705006, 0.1954649836257815, 0.19465601322907156] ***
*** center 1: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 4, 0]]
** centroid: 2, normalized-entropy: 0.2690553027246505, [(1, 83), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 67, 22]]
** centroid: 3, normalized-entropy: 0.8067955503968327, [(2, 67), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 16, 0]]
** centroid: 4, normalized-entropy: 0.8301899714180444, [(1, 45), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 75, 0]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(1, 45), (2, 75)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 101, 0]]
** centroid: 7, normalized-entropy: 0.23348971044772968, [(1, 4), (2, 101)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23857814915941797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23857814915941797, 0.1953130218617875] ***
*** starting iteration: 2; err: [Inf, 0.23857814915941797, 0.1953130218617875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23857814915941797, 0.1953130218617875, 0.1951039337289186] ***
*** finished computation of 7 references, err: [Inf, 0.23857814915941797, 0.1953130218617875, 0.1951039337289186] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 110, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 43, 0]]
** centroid: 3, normalized-entropy: 0.96538371158956, [(1, 67), (2, 43)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 9, 0]]
** centroid: 4, normalized-entropy: 0.44886448872302936, [(1, 87), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 33, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 66), (2, 33)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 69, 25]]
** centroid: 6, normalized-entropy: 0.8356038276131503, [(2, 69), (3, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22302568226062633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22302568226062633, 0.1955571137690307] ***
*** starting iteration: 2; err: [Inf, 0.22302568226062633, 0.1955571137690307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962] ***
*** starting iteration: 3; err: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962, 0.1913346698264348] ***
*** starting iteration: 4; err: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962, 0.1913346698264348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962, 0.1913346698264348, 0.19081294509322122] ***
*** finished computation of 7 references, err: [Inf, 0.22302568226062633, 0.1955571137690307, 0.19237629305878962, 0.1913346698264348, 0.19081294509322122] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 99, 29]]
** centroid: 1, normalized-entropy: 0.7719706699485864, [(2, 99), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 7, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 56), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 36, 0]]
** centroid: 4, normalized-entropy: 0.9336337717211408, [(1, 67), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 20, 0]]
** centroid: 5, normalized-entropy: 0.8212809417449864, [(1, 58), (2, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 107, 0]]
** centroid: 7, normalized-entropy: 0.2631887790276081, [(1, 5), (2, 107)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.949047850245455, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3737655115780888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3737655115780888, 0.24716898684694735] ***
*** finished computation of 7 references, err: [Inf, 0.3737655115780888, 0.24716898684694735] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [76, 14, 0]]
** centroid: 1, normalized-entropy: 0.6235702082127973, [(1, 76), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 105, 29]]
** centroid: 2, normalized-entropy: 0.753572561997754, [(2, 105), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 16, 0]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(1, 12), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [121, 1, 0]]
** centroid: 4, normalized-entropy: 0.06858609403644415, [(1, 121), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 133, 0]]
** centroid: 5, normalized-entropy: 0.6665783579949205, [(1, 28), (2, 133)]
*** center 6: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24300555775369304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24300555775369304, 0.2078438413635209] ***
*** finished computation of 7 references, err: [Inf, 0.24300555775369304, 0.2078438413635209] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [17, 71, 5]]
** centroid: 2, normalized-entropy: 0.6133805114881979, [(1, 17), (2, 71), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 17]]
** centroid: 3, normalized-entropy: 0.9313043685793762, [(2, 32), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 26, 0]]
** centroid: 4, normalized-entropy: 0.8672816222000259, [(1, 64), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 52, 0]]
** centroid: 5, normalized-entropy: 0.9971293325151022, [(1, 59), (2, 52)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 7, 0]]
** centroid: 6, normalized-entropy: 0.3557951975011439, [(1, 97), (2, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [145, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25761143367798967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25761143367798967, 0.2199421622888136] ***
*** finished computation of 7 references, err: [Inf, 0.25761143367798967, 0.2199421622888136] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [142, 4, 0]]
** centroid: 1, normalized-entropy: 0.18116640155354563, [(1, 142), (2, 4)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 91, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 54, 0]]
** centroid: 3, normalized-entropy: 0.9097361225311661, [(1, 26), (2, 54)]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 77, 0]]
** centroid: 5, normalized-entropy: 0.9028350359954473, [(1, 36), (2, 77)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 38, 25]]
** centroid: 7, normalized-entropy: 0.9690632527820694, [(2, 38), (3, 25)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.949047850245455, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9190208172244101, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 16
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.21732963207275705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21732963207275705, 0.15862595306586352] ***
*** finished computation of 7 references, err: [Inf, 0.21732963207275705, 0.15862595306586352] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [119, 5, 0]]
** centroid: 2, normalized-entropy: 0.24376925951524556, [(1, 119), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 72, 0]]
** centroid: 3, normalized-entropy: 0.8980587934501658, [(1, 33), (2, 72)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 54, 0]]
** centroid: 4, normalized-entropy: 0.8271595195340525, [(1, 19), (2, 54)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 51, 29]]
** centroid: 6, normalized-entropy: 0.9447388286467892, [(2, 51), (3, 29)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [118, 6, 0]]
** centroid: 7, normalized-entropy: 0.2795055456366802, [(1, 118), (2, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21915500149734016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915500149734016, 0.16676261107195756] ***
*** finished computation of 7 references, err: [Inf, 0.21915500149734016, 0.16676261107195756] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 20, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 30), (2, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [142, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 54, 12]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 54), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [126, 32, 0]]
** centroid: 5, normalized-entropy: 0.7269625813353975, [(1, 126), (2, 32)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 100, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 100), (3, 10)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 57, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 19), (2, 57)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20066323171012282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20066323171012282, 0.16663091035484373] ***
*** finished computation of 7 references, err: [Inf, 0.20066323171012282, 0.16663091035484373] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 41, 0]]
** centroid: 1, normalized-entropy: 0.9998900524545515, [(1, 40), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 9, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 46, 0]]
** centroid: 3, normalized-entropy: 0.8773118802464468, [(1, 109), (2, 46)]
*** center 4: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 79, 0]]
** centroid: 6, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 89, 25]]
** centroid: 7, normalized-entropy: 0.7588840483719564, [(2, 89), (3, 25)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.949047850245455, 0.9399818980657305, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9190208172244101, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 17
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.20427710079104155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20427710079104155, 0.16034359113360802] ***
*** starting iteration: 2; err: [Inf, 0.20427710079104155, 0.16034359113360802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20427710079104155, 0.16034359113360802, 0.1534479515152975] ***
*** starting iteration: 3; err: [Inf, 0.20427710079104155, 0.16034359113360802, 0.1534479515152975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20427710079104155, 0.16034359113360802, 0.1534479515152975, 0.15160424088745997] ***
*** finished computation of 7 references, err: [Inf, 0.20427710079104155, 0.16034359113360802, 0.1534479515152975, 0.15160424088745997] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [132, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 8, 0]]
** centroid: 3, normalized-entropy: 0.43609466429612137, [(1, 81), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 83, 0]]
** centroid: 4, normalized-entropy: 0.09317131799548928, [(1, 1), (2, 83)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 65, 0]]
** centroid: 5, normalized-entropy: 0.6739468651941155, [(1, 14), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [29, 45, 0]]
** centroid: 6, normalized-entropy: 0.966009606256856, [(1, 29), (2, 45)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 68, 29]]
** centroid: 7, normalized-entropy: 0.8800270477157599, [(2, 68), (3, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2917091345771968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917091345771968, 0.19988957145830794] ***
*** starting iteration: 2; err: [Inf, 0.2917091345771968, 0.19988957145830794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917091345771968, 0.19988957145830794, 0.17688671924310667] ***
*** starting iteration: 3; err: [Inf, 0.2917091345771968, 0.19988957145830794, 0.17688671924310667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917091345771968, 0.19988957145830794, 0.17688671924310667, 0.16547978934978527] ***
*** finished computation of 7 references, err: [Inf, 0.2917091345771968, 0.19988957145830794, 0.17688671924310667, 0.16547978934978527] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 91, 0]]
** centroid: 1, normalized-entropy: 0.3347676126777638, [(1, 6), (2, 91)]
*** center 2: selecting labels [1] (freq >= 1) [from [137, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 78, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 13), (2, 78)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [126, 6, 0]]
** centroid: 4, normalized-entropy: 0.2667649878030262, [(1, 126), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [100, 29, 0]]
** centroid: 5, normalized-entropy: 0.7688468846002149, [(1, 100), (2, 29)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 17]]
** centroid: 6, normalized-entropy: 0.9977724720899819, [(2, 19), (3, 17)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 40, 5]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 40), (3, 5)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1905443031044825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905443031044825, 0.15450341647038462] ***
*** starting iteration: 2; err: [Inf, 0.1905443031044825, 0.15450341647038462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905443031044825, 0.15450341647038462, 0.15153356063137086] ***
*** starting iteration: 3; err: [Inf, 0.1905443031044825, 0.15450341647038462, 0.15153356063137086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1905443031044825, 0.15450341647038462, 0.15153356063137086, 0.15020966019084875] ***
*** finished computation of 7 references, err: [Inf, 0.1905443031044825, 0.15450341647038462, 0.15153356063137086, 0.15020966019084875] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 26, 0]]
** centroid: 1, normalized-entropy: 0.8386398715015523, [(1, 71), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 60, 0]]
** centroid: 2, normalized-entropy: 0.998845535995202, [(1, 65), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 97, 25]]
** centroid: 3, normalized-entropy: 0.7316557766078085, [(2, 97), (3, 25)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 77, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 4, 0]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.949047850245455, 0.9479959000917084, 0.9399818980657305, 0.9389868910826994, 0.9289858720996446, 0.9279908651166137, 0.9190208172244101, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.23976139889714465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23976139889714465, 0.19157947012889331] ***
*** finished computation of 7 references, err: [Inf, 0.23976139889714465, 0.19157947012889331] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 96, 0]]
** centroid: 1, normalized-entropy: 0.4507913883546652, [(1, 10), (2, 96)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 24, 0]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(1, 66), (2, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 71, 0]]
** centroid: 4, normalized-entropy: 0.9866165198488093, [(1, 54), (2, 71)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 72, 22]]
** centroid: 5, normalized-entropy: 0.7849920887641585, [(2, 72), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25214728954593013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25214728954593013, 0.19757492561032924] ***
*** finished computation of 7 references, err: [Inf, 0.25214728954593013, 0.19757492561032924] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 129, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 42, 0]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(1, 51), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 36, 0]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(1, 81), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 8, 0]]
** centroid: 5, normalized-entropy: 0.4108378385169277, [(1, 89), (2, 8)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 47, 25]]
** centroid: 6, normalized-entropy: 0.9315627684809641, [(2, 47), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [89, 2, 0]]
** centroid: 7, normalized-entropy: 0.15240699892386778, [(1, 89), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18169195588829146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18169195588829146, 0.14844905628050836] ***
*** finished computation of 7 references, err: [Inf, 0.18169195588829146, 0.14844905628050836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 28]]
** centroid: 2, normalized-entropy: 0.9379626436434424, [(2, 51), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 12, 0]]
** centroid: 3, normalized-entropy: 0.6900703653284017, [(1, 53), (2, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [86, 13, 0]]
** centroid: 4, normalized-entropy: 0.5610284863400681, [(1, 86), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 104, 0]]
** centroid: 5, normalized-entropy: 0.6824826735754346, [(1, 23), (2, 104)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 89, 1]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1931954482737845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931954482737845, 0.15418241998931947] ***
*** finished computation of 7 references, err: [Inf, 0.1931954482737845, 0.15418241998931947] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [127, 5, 0]]
** centroid: 1, normalized-entropy: 0.23248051561222705, [(1, 127), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 32, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 32), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 22]]
** centroid: 3, normalized-entropy: 0.8158009273789572, [(2, 65), (3, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 83, 0]]
** centroid: 5, normalized-entropy: 0.8977928379964871, [(1, 38), (2, 83)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 78, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18941270608058397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18941270608058397, 0.15288803211973234] ***
*** finished computation of 7 references, err: [Inf, 0.18941270608058397, 0.15288803211973234] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 94, 2]]
** centroid: 1, normalized-entropy: 0.14609425012013613, [(2, 94), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 20, 0]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(1, 56), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 106, 23]]
** centroid: 4, normalized-entropy: 0.6763319595084449, [(2, 106), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [109, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 43, 0]]
** centroid: 6, normalized-entropy: 0.9875257101057102, [(1, 56), (2, 43)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23871245674856073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23871245674856073, 0.1951727624325356] ***
*** finished computation of 7 references, err: [Inf, 0.23871245674856073, 0.1951727624325356] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 110, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 11), (2, 110)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 14, 0]]
** centroid: 2, normalized-entropy: 0.7162583911075451, [(1, 57), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 91, 29]]
** centroid: 4, normalized-entropy: 0.797800919635344, [(2, 91), (3, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 54, 0]]
** centroid: 5, normalized-entropy: 0.9982994837029028, [(1, 49), (2, 54)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.949047850245455, 0.9479959000917084, 0.9410128691565817, 0.9399818980657305, 0.9389868910826994, 0.9359988731246216, 0.9289858720996446, 0.9279908651166137, 0.9190208172244101, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 19
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.949047850245455, 0.9479959000917084, 0.9410128691565817, 0.9399818980657305, 0.9389868910826994, 0.9359988731246216, 0.9289858720996446, 0.9279908651166137, 0.9190208172244101, 0.9189968411525298, 0.9099668530806255, 0.8910047772323221, 0.8910017802233371, 0.8799757841674009, 0.8759747771723819, 0.8659677641713569, 0.8639567711424, 0.8359886832940725, 0.797003590416764]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.949047850245455
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20407949680462478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896] ***
*** starting iteration: 2; err: [Inf, 0.20407949680462478, 0.18276957156322896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327] ***
*** starting iteration: 3; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792] ***
*** starting iteration: 4; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008] ***
*** starting iteration: 5; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937] ***
*** starting iteration: 6; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983] ***
*** starting iteration: 7; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983, 0.14949767083657206] ***
*** starting iteration: 8; err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983, 0.14949767083657206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983, 0.14949767083657206, 0.14874174617603422] ***
*** finished computation of 7 references, err: [Inf, 0.20407949680462478, 0.18276957156322896, 0.17213482561940327, 0.16599639693414792, 0.1599272081675008, 0.1541571130733937, 0.15094906147615983, 0.14949767083657206, 0.14874174617603422] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 51, 0]]
** centroid: 1, normalized-entropy: 0.964354757021914, [(1, 80), (2, 51)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 79, 37]]
** centroid: 2, normalized-entropy: 0.9032529465563456, [(2, 79), (3, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [148, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [161, 23, 0]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(1, 161), (2, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 128, 0]]
** centroid: 6, normalized-entropy: 0.6550239908788728, [(1, 26), (2, 128)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 117, 1]]
** centroid: 7, normalized-entropy: 0.0705017596054147, [(2, 117), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33219294583704323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725] ***
*** starting iteration: 2; err: [Inf, 0.33219294583704323, 0.1949851802950725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647] ***
*** starting iteration: 3; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736] ***
*** starting iteration: 4; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413] ***
*** starting iteration: 5; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133] ***
*** starting iteration: 6; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806] ***
*** starting iteration: 7; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806, 0.14908123545441776] ***
*** starting iteration: 8; err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806, 0.14908123545441776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806, 0.14908123545441776, 0.14850043487828224] ***
*** finished computation of 7 references, err: [Inf, 0.33219294583704323, 0.1949851802950725, 0.17936243690247647, 0.16807024249620736, 0.15955444078147413, 0.1532890822403133, 0.15040438626147806, 0.14908123545441776, 0.14850043487828224] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 82, 16]]
** centroid: 2, normalized-entropy: 0.6420642892306891, [(2, 82), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 37, 0]]
** centroid: 3, normalized-entropy: 0.9971085167216716, [(1, 42), (2, 37)]
*** center 4: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [46, 33, 0]]
** centroid: 5, normalized-entropy: 0.980377508715691, [(1, 46), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [20, 49, 0]]
** centroid: 6, normalized-entropy: 0.868533960265235, [(1, 20), (2, 49)]
*** center 7: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3743911615202669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104] ***
*** starting iteration: 2; err: [Inf, 0.3743911615202669, 0.19496200999990104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277] ***
*** starting iteration: 3; err: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032] ***
*** starting iteration: 4; err: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952] ***
*** starting iteration: 5; err: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952, 0.15973885057866574] ***
*** starting iteration: 6; err: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952, 0.15973885057866574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952, 0.15973885057866574, 0.15882214502431452] ***
*** finished computation of 7 references, err: [Inf, 0.3743911615202669, 0.19496200999990104, 0.17442925963178277, 0.16580939329043032, 0.16202887275069952, 0.15973885057866574, 0.15882214502431452] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [88, 3, 0]]
** centroid: 1, normalized-entropy: 0.20905980566852464, [(1, 88), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 14]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(2, 44), (3, 14)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 41, 0]]
** centroid: 4, normalized-entropy: 0.9786961448300948, [(1, 29), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 23, 0]]
** centroid: 5, normalized-entropy: 0.8941071841443881, [(1, 51), (2, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 39, 3]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 39), (3, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20648981763795018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724] ***
*** starting iteration: 2; err: [Inf, 0.20648981763795018, 0.1803763753026724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506] ***
*** starting iteration: 3; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263] ***
*** starting iteration: 4; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663] ***
*** starting iteration: 5; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375] ***
*** starting iteration: 6; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015] ***
*** starting iteration: 7; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074] ***
*** starting iteration: 8; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074, 0.15392209439631552] ***
*** starting iteration: 9; err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074, 0.15392209439631552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074, 0.15392209439631552, 0.1534029022390023] ***
*** finished computation of 7 references, err: [Inf, 0.20648981763795018, 0.1803763753026724, 0.1686947791520506, 0.16359064389765263, 0.1605411876309663, 0.15813151382282375, 0.1566401866246015, 0.15519341759663074, 0.15392209439631552, 0.1534029022390023] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 14, 0]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(1, 68), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [27, 33, 0]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(1, 27), (2, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 36, 0]]
** centroid: 4, normalized-entropy: 0.9998568991526107, [(1, 35), (2, 36)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 21]]
** centroid: 5, normalized-entropy: 0.8403586716091169, [(2, 57), (3, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 1]]
** centroid: 7, normalized-entropy: 0.12229159706937456, [(2, 59), (3, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18677513437718152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18677513437718152, 0.1615130281187594] ***
*** starting iteration: 2; err: [Inf, 0.18677513437718152, 0.1615130281187594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056] ***
*** starting iteration: 3; err: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424] ***
*** starting iteration: 4; err: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424, 0.14898075288534166] ***
*** starting iteration: 5; err: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424, 0.14898075288534166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424, 0.14898075288534166, 0.14800168207939715] ***
*** finished computation of 7 references, err: [Inf, 0.18677513437718152, 0.1615130281187594, 0.1538226114558056, 0.15051020529307424, 0.14898075288534166, 0.14800168207939715] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 69, 0]]
** centroid: 2, normalized-entropy: 0.481225663841737, [(1, 8), (2, 69)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 5, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 35), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 77, 0]]
** centroid: 4, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 4, 0]]
** centroid: 6, normalized-entropy: 0.2837689703721877, [(1, 77), (2, 4)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 50, 18]]
** centroid: 7, normalized-entropy: 0.8337649072106652, [(2, 50), (3, 18)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18871219046786428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18871219046786428, 0.15334241622127592] ***
*** starting iteration: 2; err: [Inf, 0.18871219046786428, 0.15334241622127592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974] ***
*** starting iteration: 3; err: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974, 0.14980172186717391] ***
*** starting iteration: 4; err: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974, 0.14980172186717391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974, 0.14980172186717391, 0.1491463372875005] ***
*** finished computation of 7 references, err: [Inf, 0.18871219046786428, 0.15334241622127592, 0.15116621439903974, 0.14980172186717391, 0.1491463372875005] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 32, 0]]
** centroid: 1, normalized-entropy: 0.9555111232924128, [(1, 53), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 66, 0]]
** centroid: 2, normalized-entropy: 0.4558314584408233, [(1, 7), (2, 66)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [41, 29, 0]]
** centroid: 3, normalized-entropy: 0.9786961448300948, [(1, 41), (2, 29)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 69, 19]]
** centroid: 4, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22091911757178603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22091911757178603, 0.16114131696522235] ***
*** starting iteration: 2; err: [Inf, 0.22091911757178603, 0.16114131696522235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744] ***
*** starting iteration: 3; err: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744, 0.15440860338695347] ***
*** starting iteration: 4; err: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744, 0.15440860338695347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744, 0.15440860338695347, 0.1540249724360183] ***
*** finished computation of 7 references, err: [Inf, 0.22091911757178603, 0.16114131696522235, 0.15558964400924744, 0.15440860338695347, 0.1540249724360183] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 14, 0]]
** centroid: 2, normalized-entropy: 0.6111841012714984, [(1, 79), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 69, 0]]
** centroid: 3, normalized-entropy: 0.18512476010054582, [(1, 2), (2, 69)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 31, 19]]
** centroid: 4, normalized-entropy: 0.9580420222262997, [(2, 31), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 11, 0]]
** centroid: 5, normalized-entropy: 0.6329208984823799, [(1, 58), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 57, 0]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(1, 6), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20035774997621775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20035774997621775, 0.16748663151822984] ***
*** starting iteration: 2; err: [Inf, 0.20035774997621775, 0.16748663151822984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085] ***
*** starting iteration: 3; err: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798] ***
*** starting iteration: 4; err: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798, 0.14889990457706154] ***
*** starting iteration: 5; err: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798, 0.14889990457706154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798, 0.14889990457706154, 0.14808816040284] ***
*** finished computation of 7 references, err: [Inf, 0.20035774997621775, 0.16748663151822984, 0.15558469043672085, 0.1515154553502798, 0.14889990457706154, 0.14808816040284] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 58, 16]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 58), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 21, 0]]
** centroid: 2, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 1, 0]]
** centroid: 5, normalized-entropy: 0.10679203237584184, [(1, 70), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [74, 8, 0]]
** centroid: 6, normalized-entropy: 0.4612160405139095, [(1, 74), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [35, 32, 0]]
** centroid: 7, normalized-entropy: 0.9985532860835362, [(1, 35), (2, 32)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23149388367310167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036] ***
*** starting iteration: 2; err: [Inf, 0.23149388367310167, 0.16664719694294036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998] ***
*** starting iteration: 3; err: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368] ***
*** starting iteration: 4; err: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402] ***
*** starting iteration: 5; err: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402, 0.14963607702217996] ***
*** starting iteration: 6; err: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402, 0.14963607702217996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402, 0.14963607702217996, 0.14875517200492322] ***
*** finished computation of 7 references, err: [Inf, 0.23149388367310167, 0.16664719694294036, 0.15599028920195998, 0.1532805419508368, 0.15096971403807402, 0.14963607702217996, 0.14875517200492322] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 33, 0]]
** centroid: 1, normalized-entropy: 0.887976319515135, [(1, 75), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 40, 0]]
** centroid: 2, normalized-entropy: 0.9883779727795042, [(1, 31), (2, 40)]
*** center 3: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [50, 4, 0]]
** centroid: 6, normalized-entropy: 0.38094658570539014, [(1, 50), (2, 4)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 22]]
** centroid: 7, normalized-entropy: 0.8829589691462253, [(2, 51), (3, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21817832328472286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572] ***
*** starting iteration: 2; err: [Inf, 0.21817832328472286, 0.17002076631877572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816] ***
*** starting iteration: 3; err: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638] ***
*** starting iteration: 4; err: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942] ***
*** starting iteration: 5; err: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942, 0.15178844582103193] ***
*** starting iteration: 6; err: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942, 0.15178844582103193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942, 0.15178844582103193, 0.15135292138531803] ***
*** finished computation of 7 references, err: [Inf, 0.21817832328472286, 0.17002076631877572, 0.16022988760098816, 0.15532018270762638, 0.15283573810569942, 0.15178844582103193, 0.15135292138531803] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 81, 21]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 81), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 15, 0]]
** centroid: 5, normalized-entropy: 0.743898745288434, [(1, 56), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 72, 0]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(1, 4), (2, 72)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [38, 28, 0]]
** centroid: 7, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2195709775891155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2195709775891155, 0.1650905448095873] ***
*** starting iteration: 2; err: [Inf, 0.2195709775891155, 0.1650905448095873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047] ***
*** starting iteration: 3; err: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342] ***
*** starting iteration: 4; err: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342, 0.15031609009602107] ***
*** starting iteration: 5; err: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342, 0.15031609009602107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342, 0.15031609009602107, 0.14958888439740986] ***
*** finished computation of 7 references, err: [Inf, 0.2195709775891155, 0.1650905448095873, 0.15582905062288047, 0.1522159094568342, 0.15031609009602107, 0.14958888439740986] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 3, 0]]
** centroid: 1, normalized-entropy: 0.260862909647207, [(1, 65), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 72, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 8), (2, 72)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 22]]
** centroid: 3, normalized-entropy: 0.8342867421739538, [(2, 61), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [13, 63, 0]]
** centroid: 6, normalized-entropy: 0.6601070987550468, [(1, 13), (2, 63)]
*** center 7: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3070896066967398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256] ***
*** starting iteration: 2; err: [Inf, 0.3070896066967398, 0.19565439348947256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553] ***
*** starting iteration: 3; err: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058] ***
*** starting iteration: 4; err: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782] ***
*** starting iteration: 5; err: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782, 0.15604003713838757] ***
*** starting iteration: 6; err: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782, 0.15604003713838757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782, 0.15604003713838757, 0.1551082335198298] ***
*** finished computation of 7 references, err: [Inf, 0.3070896066967398, 0.19565439348947256, 0.16912902765348553, 0.16145411218889058, 0.15848363610170782, 0.15604003713838757, 0.1551082335198298] ***
*** center 1: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 18, 0]]
** centroid: 2, normalized-entropy: 0.8337649072106652, [(1, 50), (2, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 62, 0]]
** centroid: 4, normalized-entropy: 0.5127091420308771, [(1, 8), (2, 62)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 39, 0]]
** centroid: 5, normalized-entropy: 0.9966132830150962, [(1, 34), (2, 39)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 26, 18]]
** centroid: 7, normalized-entropy: 0.976020648236615, [(2, 26), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22314747946336866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314747946336866, 0.17070405865088106] ***
*** starting iteration: 2; err: [Inf, 0.22314747946336866, 0.17070405865088106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682] ***
*** starting iteration: 3; err: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473] ***
*** starting iteration: 4; err: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473, 0.15055265031754972] ***
*** starting iteration: 5; err: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473, 0.15055265031754972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473, 0.15055265031754972, 0.1500853498876095] ***
*** finished computation of 7 references, err: [Inf, 0.22314747946336866, 0.17070405865088106, 0.15586258248891682, 0.15177789498772473, 0.15055265031754972, 0.1500853498876095] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 25, 0]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(1, 35), (2, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 60, 22]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 60), (3, 22)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 76, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 6, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 54), (2, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 44, 0]]
** centroid: 7, normalized-entropy: 0.9973806632063373, [(1, 39), (2, 44)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22646351934969425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435] ***
*** starting iteration: 2; err: [Inf, 0.22646351934969425, 0.18309044828638435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903] ***
*** starting iteration: 3; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915] ***
*** starting iteration: 4; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064] ***
*** starting iteration: 5; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094] ***
*** starting iteration: 6; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128] ***
*** starting iteration: 7; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879] ***
*** starting iteration: 8; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917] ***
*** starting iteration: 9; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917, 0.15052709505148232] ***
*** starting iteration: 10; err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917, 0.15052709505148232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917, 0.15052709505148232, 0.14820389348547905] ***
*** finished computation of 7 references, err: [Inf, 0.22646351934969425, 0.18309044828638435, 0.16987004195991903, 0.16324237709119915, 0.16131288452167064, 0.15937657008320094, 0.15744724387396128, 0.1553184939622879, 0.15283681475929917, 0.15052709505148232, 0.14820389348547905] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 21]]
** centroid: 1, normalized-entropy: 0.9392547207311595, [(2, 38), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 36, 0]]
** centroid: 2, normalized-entropy: 0.9575534837147484, [(1, 22), (2, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 6, 0]]
** centroid: 4, normalized-entropy: 0.4098553703184051, [(1, 67), (2, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 80, 0]]
** centroid: 7, normalized-entropy: 0.2243269603450881, [(1, 3), (2, 80)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2707733993665315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736] ***
*** starting iteration: 2; err: [Inf, 0.2707733993665315, 0.1991973100397736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742] ***
*** starting iteration: 3; err: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278] ***
*** starting iteration: 4; err: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621] ***
*** starting iteration: 5; err: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621, 0.1541404973305762] ***
*** starting iteration: 6; err: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621, 0.1541404973305762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621, 0.1541404973305762, 0.15338706967886537] ***
*** finished computation of 7 references, err: [Inf, 0.2707733993665315, 0.1991973100397736, 0.171506028983742, 0.15916895522922278, 0.155733164511621, 0.1541404973305762, 0.15338706967886537] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 12, 0]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(1, 68), (2, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 78, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 20, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 30), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [38, 48, 0]]
** centroid: 6, normalized-entropy: 0.9902246902198684, [(1, 38), (2, 48)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 42, 19]]
** centroid: 7, normalized-entropy: 0.8948692308065576, [(2, 42), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30488004654459655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596] ***
*** starting iteration: 2; err: [Inf, 0.30488004654459655, 0.20326148370094596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842] ***
*** starting iteration: 3; err: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823] ***
*** starting iteration: 4; err: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196] ***
*** starting iteration: 5; err: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196, 0.1536856509950012] ***
*** starting iteration: 6; err: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196, 0.1536856509950012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196, 0.1536856509950012, 0.15296060711983592] ***
*** finished computation of 7 references, err: [Inf, 0.30488004654459655, 0.20326148370094596, 0.17077289626374842, 0.15746493843197823, 0.1546902898629196, 0.1536856509950012, 0.15296060711983592] ***
*** center 1: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 52, 0]]
** centroid: 2, normalized-entropy: 0.8656939941993219, [(1, 21), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 60, 17]]
** centroid: 3, normalized-entropy: 0.7615877869576693, [(2, 60), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 2, 0]]
** centroid: 4, normalized-entropy: 0.23868451135100152, [(1, 49), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 44, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 66), (2, 44)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 43, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2110605659354478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548] ***
*** starting iteration: 2; err: [Inf, 0.2110605659354478, 0.16308628732338548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741] ***
*** starting iteration: 3; err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277] ***
*** starting iteration: 4; err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927] ***
*** starting iteration: 5; err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337] ***
*** starting iteration: 6; err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337, 0.14485441230982543] ***
*** starting iteration: 7; err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337, 0.14485441230982543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337, 0.14485441230982543, 0.14448713693581522] ***
*** finished computation of 7 references, err: [Inf, 0.2110605659354478, 0.16308628732338548, 0.1569908790420741, 0.15293156190030277, 0.14896934914588927, 0.1460894898418337, 0.14485441230982543, 0.14448713693581522] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 70, 0]]
** centroid: 2, normalized-entropy: 0.4770713062193298, [(1, 8), (2, 70)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 5, 0]]
** centroid: 3, normalized-entropy: 0.47543164626872053, [(1, 44), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 49, 14]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 49), (3, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [18, 61, 0]]
** centroid: 6, normalized-entropy: 0.7742411580847273, [(1, 18), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 3, 0]]
** centroid: 7, normalized-entropy: 0.25253077151613923, [(1, 68), (2, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24346599133312702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24346599133312702, 0.16327009115181862] ***
*** starting iteration: 2; err: [Inf, 0.24346599133312702, 0.16327009115181862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258] ***
*** starting iteration: 3; err: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258, 0.15201895712688565] ***
*** starting iteration: 4; err: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258, 0.15201895712688565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258, 0.15201895712688565, 0.1510624230951071] ***
*** finished computation of 7 references, err: [Inf, 0.24346599133312702, 0.16327009115181862, 0.15371880413871258, 0.15201895712688565, 0.1510624230951071] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 48, 14]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(2, 48), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 47, 0]]
** centroid: 2, normalized-entropy: 0.9694309156463241, [(1, 31), (2, 47)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 26, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 39), (2, 26)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 74, 0]]
** centroid: 6, normalized-entropy: 0.10215803640865054, [(1, 1), (2, 74)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [61, 14, 0]]
** centroid: 7, normalized-entropy: 0.6944460704939805, [(1, 61), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18356903590634466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18356903590634466, 0.16335032332781702] ***
*** starting iteration: 2; err: [Inf, 0.18356903590634466, 0.16335032332781702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969] ***
*** starting iteration: 3; err: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292] ***
*** starting iteration: 4; err: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292, 0.15707799697108565] ***
*** starting iteration: 5; err: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292, 0.15707799697108565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292, 0.15707799697108565, 0.15628504430130125] ***
*** finished computation of 7 references, err: [Inf, 0.18356903590634466, 0.16335032332781702, 0.1596732806134969, 0.15815134627558292, 0.15707799697108565, 0.15628504430130125] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 29, 0]]
** centroid: 1, normalized-entropy: 0.99919835426364, [(1, 31), (2, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 53, 23]]
** centroid: 4, normalized-entropy: 0.8844839729019952, [(2, 53), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 45, 0]]
** centroid: 6, normalized-entropy: 0.9996273710574612, [(1, 43), (2, 45)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22561958431173115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489] ***
*** starting iteration: 2; err: [Inf, 0.22561958431173115, 0.1872135899886489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853] ***
*** starting iteration: 3; err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913] ***
*** starting iteration: 4; err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137] ***
*** starting iteration: 5; err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823] ***
*** starting iteration: 6; err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823, 0.15228397172875702] ***
*** starting iteration: 7; err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823, 0.15228397172875702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823, 0.15228397172875702, 0.1516622704192996] ***
*** finished computation of 7 references, err: [Inf, 0.22561958431173115, 0.1872135899886489, 0.17688641007430853, 0.16719369156844913, 0.15922059047222137, 0.15473960595484823, 0.15228397172875702, 0.1516622704192996] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 36, 0]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(1, 57), (2, 36)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 83, 18]]
** centroid: 2, normalized-entropy: 0.6761627418829197, [(2, 83), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [36, 37, 0]]
** centroid: 3, normalized-entropy: 0.9998646331239297, [(1, 36), (2, 37)]
*** center 4: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 37, 0]]
** centroid: 5, normalized-entropy: 0.9897525351939971, [(1, 47), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22645757965091615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478] ***
*** starting iteration: 2; err: [Inf, 0.22645757965091615, 0.18943387669045478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361] ***
*** starting iteration: 3; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842] ***
*** starting iteration: 4; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892] ***
*** starting iteration: 5; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084] ***
*** starting iteration: 6; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102] ***
*** starting iteration: 7; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102, 0.14736821378825699] ***
*** starting iteration: 8; err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102, 0.14736821378825699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102, 0.14736821378825699, 0.1466850785622373] ***
*** finished computation of 7 references, err: [Inf, 0.22645757965091615, 0.18943387669045478, 0.1816801101565361, 0.17413041537813842, 0.16337762663140892, 0.15369830190204084, 0.14915333222784102, 0.14736821378825699, 0.1466850785622373] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 62, 0]]
** centroid: 3, normalized-entropy: 0.9108783787500366, [(1, 30), (2, 62)]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 65, 21]]
** centroid: 5, normalized-entropy: 0.8019325020834525, [(2, 65), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 42, 0]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(1, 12), (2, 42)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [44, 25, 0]]
** centroid: 7, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.258963876824826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223] ***
*** starting iteration: 2; err: [Inf, 0.258963876824826, 0.17738047506660223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005] ***
*** starting iteration: 3; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376] ***
*** starting iteration: 4; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965] ***
*** starting iteration: 5; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357] ***
*** starting iteration: 6; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292] ***
*** starting iteration: 7; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982] ***
*** starting iteration: 8; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982, 0.1486795240561478] ***
*** starting iteration: 9; err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982, 0.1486795240561478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982, 0.1486795240561478, 0.14846970889577643] ***
*** finished computation of 7 references, err: [Inf, 0.258963876824826, 0.17738047506660223, 0.16653133315593005, 0.16242103650048376, 0.16012585569079965, 0.15625124073587357, 0.15167565703578292, 0.15004383417963982, 0.1486795240561478, 0.14846970889577643] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 59, 20]]
** centroid: 1, normalized-entropy: 0.8162554088088008, [(2, 59), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 25, 0]]
** centroid: 3, normalized-entropy: 0.8652817028791377, [(1, 62), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 54, 0]]
** centroid: 4, normalized-entropy: 0.7941021417852022, [(1, 17), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 4, 0]]
** centroid: 5, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 1]]
** centroid: 7, normalized-entropy: 0.12229159706937456, [(2, 59), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1808897739648819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906] ***
*** starting iteration: 2; err: [Inf, 0.1808897739648819, 0.15945609147287906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788] ***
*** starting iteration: 3; err: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064] ***
*** starting iteration: 4; err: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293] ***
*** starting iteration: 5; err: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293, 0.1515103939399123] ***
*** starting iteration: 6; err: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293, 0.1515103939399123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293, 0.1515103939399123, 0.15069179701432586] ***
*** finished computation of 7 references, err: [Inf, 0.1808897739648819, 0.15945609147287906, 0.15691227224189788, 0.1555664427448064, 0.1528472050782293, 0.1515103939399123, 0.15069179701432586] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 67, 0]]
** centroid: 3, normalized-entropy: 0.6145715612236268, [(1, 12), (2, 67)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 48, 19]]
** centroid: 4, normalized-entropy: 0.8602858652332406, [(2, 48), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 14, 0]]
** centroid: 5, normalized-entropy: 0.5699613760403499, [(1, 90), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 9, 0]]
** centroid: 6, normalized-entropy: 0.6800770457282798, [(1, 41), (2, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20350866458006203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813] ***
*** starting iteration: 2; err: [Inf, 0.20350866458006203, 0.16812259297724813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604] ***
*** starting iteration: 3; err: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665] ***
*** starting iteration: 4; err: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981] ***
*** starting iteration: 5; err: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981, 0.14872742746397852] ***
*** starting iteration: 6; err: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981, 0.14872742746397852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981, 0.14872742746397852, 0.14827914544939994] ***
*** finished computation of 7 references, err: [Inf, 0.20350866458006203, 0.16812259297724813, 0.15733195478096604, 0.15188267878908665, 0.1497745484597981, 0.14872742746397852, 0.14827914544939994] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 34, 0]]
** centroid: 1, normalized-entropy: 0.9788698505067782, [(1, 48), (2, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 66, 0]]
** centroid: 4, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 45, 20]]
** centroid: 6, normalized-entropy: 0.8904916402194913, [(2, 45), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 8, 0]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(1, 60), (2, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2277783150486648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169] ***
*** starting iteration: 2; err: [Inf, 0.2277783150486648, 0.1753104962427169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796] ***
*** starting iteration: 3; err: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099] ***
*** starting iteration: 4; err: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513] ***
*** starting iteration: 5; err: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513, 0.15430655520875006] ***
*** starting iteration: 6; err: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513, 0.15430655520875006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513, 0.15430655520875006, 0.15334198575280605] ***
*** finished computation of 7 references, err: [Inf, 0.2277783150486648, 0.1753104962427169, 0.16548131324676796, 0.1617415647637099, 0.156961907973513, 0.15430655520875006, 0.15334198575280605] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 37, 0]]
** centroid: 1, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 37, 0]]
** centroid: 2, normalized-entropy: 0.9816649485370996, [(1, 51), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [43, 15, 0]]
** centroid: 5, normalized-entropy: 0.8246578332945033, [(1, 43), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 61, 2]]
** centroid: 6, normalized-entropy: 0.20307392998664567, [(2, 61), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 45, 22]]
** centroid: 7, normalized-entropy: 0.9132401614300725, [(2, 45), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2701303325928748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375] ***
*** starting iteration: 2; err: [Inf, 0.2701303325928748, 0.18279419827554375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008] ***
*** starting iteration: 3; err: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436] ***
*** starting iteration: 4; err: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826] ***
*** starting iteration: 5; err: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826, 0.1545357697447762] ***
*** starting iteration: 6; err: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826, 0.1545357697447762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826, 0.1545357697447762, 0.15389908559061588] ***
*** finished computation of 7 references, err: [Inf, 0.2701303325928748, 0.18279419827554375, 0.16746580674313008, 0.1600996874915436, 0.15612822358030826, 0.1545357697447762, 0.15389908559061588] ***
*** center 1: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 43, 0]]
** centroid: 2, normalized-entropy: 0.8431619569518377, [(1, 16), (2, 43)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 58, 0]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(1, 16), (2, 58)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 27, 0]]
** centroid: 4, normalized-entropy: 0.8935711016541908, [(1, 60), (2, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 28, 18]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 28), (3, 18)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2504209336563945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648] ***
*** starting iteration: 2; err: [Inf, 0.2504209336563945, 0.17183500325586648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473] ***
*** starting iteration: 3; err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565] ***
*** starting iteration: 4; err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926] ***
*** starting iteration: 5; err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667] ***
*** starting iteration: 6; err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667, 0.15269131875783204] ***
*** starting iteration: 7; err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667, 0.15269131875783204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667, 0.15269131875783204, 0.15211444783350453] ***
*** finished computation of 7 references, err: [Inf, 0.2504209336563945, 0.17183500325586648, 0.16325474222749473, 0.15965143283456565, 0.1563666009143926, 0.15380751573480667, 0.15269131875783204, 0.15211444783350453] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 38, 0]]
** centroid: 1, normalized-entropy: 0.876716288999464, [(1, 16), (2, 38)]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 51, 0]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(1, 3), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [23, 48, 0]]
** centroid: 6, normalized-entropy: 0.9086185980409245, [(1, 23), (2, 48)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 53, 21]]
** centroid: 7, normalized-entropy: 0.8605553930586318, [(2, 53), (3, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19328051564842463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19328051564842463, 0.1620896001365036] ***
*** starting iteration: 2; err: [Inf, 0.19328051564842463, 0.1620896001365036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614] ***
*** starting iteration: 3; err: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614, 0.1497916369996965] ***
*** starting iteration: 4; err: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614, 0.1497916369996965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614, 0.1497916369996965, 0.14889723324403167] ***
*** finished computation of 7 references, err: [Inf, 0.19328051564842463, 0.1620896001365036, 0.1528477426953614, 0.1497916369996965, 0.14889723324403167] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 63, 19]]
** centroid: 1, normalized-entropy: 0.7809756883263416, [(2, 63), (3, 19)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [39, 30, 0]]
** centroid: 3, normalized-entropy: 0.9876925088958032, [(1, 39), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 8, 0]]
** centroid: 4, normalized-entropy: 0.5547781633412736, [(1, 54), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 33, 0]]
** centroid: 7, normalized-entropy: 0.9976432959863935, [(1, 37), (2, 33)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23197167025879026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384] ***
*** starting iteration: 2; err: [Inf, 0.23197167025879026, 0.19088918433501384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247] ***
*** starting iteration: 3; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934] ***
*** starting iteration: 4; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712] ***
*** starting iteration: 5; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502] ***
*** starting iteration: 6; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225] ***
*** starting iteration: 7; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138] ***
*** starting iteration: 8; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138, 0.148628924978897] ***
*** starting iteration: 9; err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138, 0.148628924978897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138, 0.148628924978897, 0.14814576529152693] ***
*** finished computation of 7 references, err: [Inf, 0.23197167025879026, 0.19088918433501384, 0.17727540019294247, 0.16315780787169934, 0.1578635349259712, 0.15515507806092502, 0.15243091346137225, 0.15038378928881138, 0.148628924978897, 0.14814576529152693] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 53, 2]]
** centroid: 1, normalized-entropy: 0.22536363912739493, [(2, 53), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 31, 0]]
** centroid: 2, normalized-entropy: 0.9753817903274211, [(1, 45), (2, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 52, 18]]
** centroid: 3, normalized-entropy: 0.8224042259549892, [(2, 52), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 43, 0]]
** centroid: 5, normalized-entropy: 0.7292739418449411, [(1, 11), (2, 43)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [80, 8, 0]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(1, 80), (2, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24677568565495311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24677568565495311, 0.16622219702973962] ***
*** starting iteration: 2; err: [Inf, 0.24677568565495311, 0.16622219702973962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362] ***
*** starting iteration: 3; err: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362, 0.15310945246368646] ***
*** starting iteration: 4; err: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362, 0.15310945246368646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362, 0.15310945246368646, 0.15239397474750876] ***
*** finished computation of 7 references, err: [Inf, 0.24677568565495311, 0.16622219702973962, 0.15507147601619362, 0.15310945246368646, 0.15239397474750876] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 13, 0]]
** centroid: 1, normalized-entropy: 0.6307970795750609, [(1, 69), (2, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 47, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 33, 0]]
** centroid: 5, normalized-entropy: 0.9998393017810486, [(1, 34), (2, 33)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 29, 21]]
** centroid: 6, normalized-entropy: 0.9814538950336533, [(2, 29), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 5, 0]]
** centroid: 7, normalized-entropy: 0.4090731390438265, [(1, 56), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1965876867873594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1965876867873594, 0.1621722304932773] ***
*** starting iteration: 2; err: [Inf, 0.1965876867873594, 0.1621722304932773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737] ***
*** starting iteration: 3; err: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737, 0.1539603234305978] ***
*** starting iteration: 4; err: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737, 0.1539603234305978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737, 0.1539603234305978, 0.1529636505022645] ***
*** finished computation of 7 references, err: [Inf, 0.1965876867873594, 0.1621722304932773, 0.15628746007289737, 0.1539603234305978, 0.1529636505022645] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 73, 0]]
** centroid: 1, normalized-entropy: 0.23987382528036535, [(1, 3), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 3, 0]]
** centroid: 2, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 75, 0]]
** centroid: 3, normalized-entropy: 0.10106696361212422, [(1, 1), (2, 75)]
*** center 4: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 17, 0]]
** centroid: 5, normalized-entropy: 0.7314625617214586, [(1, 66), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 7, 0]]
** centroid: 6, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 36, 23]]
** centroid: 7, normalized-entropy: 0.9646900825612559, [(2, 36), (3, 23)]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 398,3 => 38,1 => 564), Dict(2 => 358,3 => 34,1 => 608))
[ Info: ===== scores for single classifier: {"micro_f1":0.9130000000000001,"precision":0.913,"recall":0.913,"macro_recall":0.9077572700647445,"macro_f1":0.8773035690756114,"accuracy":0.913,"class_f1":{"2":0.8695652173913043,"3":0.8205128205128205,"1":0.9418326693227091},"class_precision":{"2":0.9385113268608414,"3":0.7272727272727273,"1":0.9134466769706336},"class_recall":{"2":0.8100558659217877,"3":0.9411764705882353,"1":0.9720394736842105}}
[ Info: ===== scores for 1: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9465358732437403,"macro_f1":0.9595863569893291,"accuracy":0.965,"class_f1":{"2":0.9511854951185496,"3":0.9538461538461539,"1":0.973727422003284},"class_precision":{"2":0.9498607242339833,"3":1.0,"1":0.9721311475409836},"class_recall":{"2":0.952513966480447,"3":0.9117647058823529,"1":0.975328947368421}}
[ Info: ===== scores for 5: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9432984675787398,"macro_f1":0.9493838191212403,"accuracy":0.957,"class_f1":{"2":0.9411764705882353,"3":0.9393939393939394,"1":0.967581047381546},"class_precision":{"2":0.9222520107238605,"3":0.96875,"1":0.9781512605042016},"class_recall":{"2":0.9608938547486033,"3":0.9117647058823529,"1":0.9572368421052632}}
[ Info: ===== scores for 7: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9782447564441831,"macro_f1":0.9719013234372492,"accuracy":0.968,"class_f1":{"2":0.9559228650137741,"3":0.9855072463768115,"1":0.9742738589211619},"class_precision":{"2":0.9429347826086957,"3":0.9714285714285714,"1":0.983249581239531},"class_recall":{"2":0.9692737430167597,"3":1.0,"1":0.9654605263157895}}
[ Info: ===== scores for 9: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9688236879579822,"macro_f1":0.9665172781754965,"accuracy":0.967,"class_f1":{"2":0.9547325102880658,"3":0.9705882352941176,"1":0.9742310889443059},"class_precision":{"2":0.9380053908355795,"3":0.9705882352941176,"1":0.984873949579832},"class_recall":{"2":0.9720670391061452,"3":0.9705882352941176,"1":0.9638157894736842}}
[ Info: ===== scores for 11: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.969206541040409,"macro_f1":0.9665442576542652,"accuracy":0.967,"class_f1":{"2":0.9548563611491108,"3":0.9705882352941176,"1":0.9741881765195671},"class_precision":{"2":0.935656836461126,"3":0.9705882352941176,"1":0.9865092748735245},"class_recall":{"2":0.9748603351955307,"3":0.9705882352941176,"1":0.962171052631579}}
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.968,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9782447564441831,"macro_f1":0.9719013234372492,"accuracy":0.968,"class_f1":{"2":0.9559228650137741,"3":0.9855072463768115,"1":0.9742738589211619},"class_precision":{"2":0.9429347826086957,"3":0.9714285714285714,"1":0.983249581239531},"class_recall":{"2":0.9692737430167597,"3":1.0,"1":0.9654605263157895}}
Test Summary: | Pass  Total
AKNC          |    8      8
[594, 3, 1, 8, 1, 1, 4, 5, 4, 10, 6, 2, 2, 3, 1, 4, 3, 10, 5, 10, 4, 6, 10, 1, 1, 2, 11, 12, 3, 4, 1, 6, 3, 2, 12, 12, 11, 25, 2, 55, 2, 4, 7, 9, 4, 6, 26, 59, 8, 57, 3, 14, 43, 8, 5, 45, 7, 2, 27, 8, 3, 7, 16, 25, 6, 9, 27, 2, 7, 13, 14, 5, 24, 22, 67, 11, 14, 119, 7, 25, 12, 35, 13, 4, 116, 8, 11, 37, 13, 39, 53, 74, 4, 14, 3, 26, 34, 26, 8, 2, 42, 27, 16, 2, 3, 42, 14, 9, 20, 27, 33, 16, 46, 2, 20, 74, 9, 10, 6, 23, 27, 6, 3, 9, 11, 49, 2, 22, 4, 6, 43, 43, 37, 5, 9, 4, 23, 56, 13, 10, 24, 12, 96, 19, 1, 7, 13, 11, 10, 758, 41, 30, 35, 27, 11, 6, 9, 55, 17, 3, 26, 10, 12, 172, 46, 54, 9, 82, 65, 7, 17, 20, 273, 70, 4, 95, 18, 5, 3, 2, 52, 87, 6, 7, 73, 13, 13, 55, 1, 131, 7, 5, 5, 3, 5, 6, 1, 19, 20, 188, 11, 117, 39, 18, 14, 10, 9, 5, 38, 12, 12, 106, 11, 54, 1, 8, 5, 7, 8, 9, 10, 23, 11, 2, 83, 10, 9, 39, 73, 43, 16, 16, 54, 5, 35, 21, 5, 79, 56, 27, 9, 43, 157, 9, 20, 29, 253, 17, 20, 16, 5, 18, 44, 57, 20, 63, 17, 4, 17, 27, 54, 71, 13, 30, 10, 21, 73, 31, 12, 131, 15, 21, 57, 5, 172, 43, 22, 15, 69, 2, 7, 47, 54, 6, 27, 316, 6, 12, 11, 12, 50, 23, 76, 187, 140, 105, 80, 103, 14, 47]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6619999999999997, speedup = 0.34565599562147414, eval_ratio = 0.075526)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.40596788194444455,"recall":0.3906250000000002,"f1":null,"seconds":0.00015575438737869263,"exhaustive_search_seconds":0.00041331350803375244,"evaluations":429.8515625,"distances_sum":1719.2777963685005}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5972222222222224,"recall":0.5972222222222224,"f1":0.5972222222222224,"seconds":0.00028320401906967163,"exhaustive_search_seconds":0.00041331350803375244,"evaluations":583.4921875,"distances_sum":1658.081838003847}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6866319444444438,"recall":0.6866319444444438,"f1":0.6866319444444438,"seconds":0.0005338378250598907,"exhaustive_search_seconds":0.00041331350803375244,"evaluations":707.1875,"distances_sum":1616.8102827237178}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7456597222222217,"recall":0.7456597222222217,"f1":0.7456597222222217,"seconds":0.0004543866962194443,"exhaustive_search_seconds":0.00041331350803375244,"evaluations":816.625,"distances_sum":1594.2066095383307}
KCenters.DeloneInvIndex> reached performance {"precision":0.8055555555555549,"recall":0.8055555555555549,"f1":0.8055555555555549,"seconds":0.0005284678190946579,"exhaustive_search_seconds":0.00041331350803375244,"evaluations":895.5703125,"distances_sum":1575.338046146463}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7810000000000002, speedup = 0.49786206339434697, eval_ratio = 0.102548)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
