Julia Version 1.6.0-DEV.155
Commit b49a0d5910 (2020-06-03 13:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Pihora/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Pihora/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719455825850958
curgen: 20 fitness: 0.21719455825850958
curgen: 30 fitness: 0.21722778613866606
curgen: 40 fitness: 0.21722778613866606
curgen: 50 fitness: 0.21722778613866606
CoordinateCreature{Array{Float64,1}}([0.22291178579924575], -0.21722778613866606) 0.22291178579924575 -0.21722778613866606
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579899727605133
curgen: 100 fitness: 3.2579914998944988
curgen: 150 fitness: 3.258184046746986
curgen: 200 fitness: 3.2583201389118357
curgen: 250 fitness: 3.25840824908107
curgen: 300 fitness: 3.25841637909666
curgen: 350 fitness: 3.258418321718382
curgen: 400 fitness: 3.258466258810661
curgen: 450 fitness: 3.258466258810661
curgen: 500 fitness: 3.258466258810661
CoordinateCreature{Array{Float64,1}}([-0.22254184348548578, -0.22248778328705576, 0.2225571601523481, -0.22261269911955206, 0.22324196316785166, 0.22284992180680166, -0.2228064241454501, -0.22270965806513732, -0.2225853934544168, -0.22251609906109085, 0.22287410972754126, -0.22228329565429109, 0.22262430552913326, -0.22254389476886446, -0.22262895526905419], -3.258466258810661) [-0.22254184348548578, -0.22248778328705576, 0.2225571601523481, -0.22261269911955206, 0.22324196316785166, 0.22284992180680166, -0.2228064241454501, -0.22270965806513732, -0.2225853934544168, -0.22251609906109085, 0.22287410972754126, -0.22228329565429109, 0.22262430552913326, -0.22254389476886446, -0.22262895526905419] -3.258466258810661
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0011604255711290534
curgen: 100 fitness: -0.0011604255711290534
curgen: 150 fitness: -0.0004614366310420337
curgen: 200 fitness: -0.00042067792088573697
curgen: 250 fitness: -0.00041178897345162113
curgen: 300 fitness: -0.0003843336260729302
curgen: 350 fitness: -0.0003369661161514159
curgen: 400 fitness: -0.0003369661161514159
curgen: 450 fitness: -0.0003101908678786458
curgen: 500 fitness: -0.0003101908678786458
CoordinateCreature{Array{Float64,1}}([0.00046843789079104546, -6.414605157097769e-5, 1.3790218497520712e-5, -0.0005493841162271698, 0.0003495917414348753, -0.00017186830425751668, 0.00029148068827782037, -0.00025727581420928024, -6.105946484141148e-5, 0.0004492419810233169, -0.00020305243842036035, 0.0001714995766320098, 8.927647411414915e-6, 0.000499436444660396, 0.00045755126145629417], 0.0003101908678786458) [0.00046843789079104546, -6.414605157097769e-5, 1.3790218497520712e-5, -0.0005493841162271698, 0.0003495917414348753, -0.00017186830425751668, 0.00029148068827782037, -0.00025727581420928024, -6.105946484141148e-5, 0.0004492419810233169, -0.00020305243842036035, 0.0001714995766320098, 8.927647411414915e-6, 0.000499436444660396, 0.00045755126145629417] 0.0003101908678786458
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
