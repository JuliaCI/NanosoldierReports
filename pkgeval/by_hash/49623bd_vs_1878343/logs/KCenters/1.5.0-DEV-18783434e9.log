Julia Version 1.5.0-DEV.11
Commit 18783434e9 (2020-01-04 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed SimilaritySearch ──────────── v0.3.17
 Installed CategoricalArrays ─────────── v0.7.6
 Installed MappedArrays ──────────────── v0.2.2
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataStructures ────────────── v0.17.7
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_Q3S3c2/Project.toml`
 [no changes]
  Updating `/tmp/jl_Q3S3c2/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_Q3S3c2/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.33000000000004
[ Info: 71.66
[ Info: 40.88999999999999
[ Info: 27.909999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.62000116877203
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.043383246797177
inertia(cdnet.distances) = 27.471080868205004
inertia(crand.distances) = 21.42416429909333
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.25,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":0.001039557158946991,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.40625,"distances_sum":730.0888179967329}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.25,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25,"f1":null,"seconds":0.001039557158946991,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.40625,"distances_sum":730.0888179967329}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.6953125,"distances_sum":565.3156103205382}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.6953125,"distances_sum":565.3156103205382}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.296875,"distances_sum":955.427105775983}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.435546875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.435546875,"f1":null,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.296875,"distances_sum":955.427105775983}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8288414710289719,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":1828.5486709669754}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7041430791430797,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.8125,"distances_sum":1281.1215137068143}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7950877247752256,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.6328125,"distances_sum":1666.1258409821946}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.72265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.72265625,"f1":0.8288414710289719,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":1828.5486709669754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9090888278388285,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4609375,"distances_sum":2301.1188110738613}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8449066558441568,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.234375,"distances_sum":1921.4567617483274}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9090888278388285,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4609375,"distances_sum":2301.1188110738613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8427734375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9090888278388285,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4609375,"distances_sum":2301.1188110738613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8071215243090252,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0234375,"distances_sum":1782.8976836107709}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8459266428016435,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5546875,"distances_sum":1987.835845213751}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.296875,"distances_sum":564.5583537201527}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8459266428016435,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.5546875,"distances_sum":1987.835845213751}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9098977411477418,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.796875,"distances_sum":2389.2103041664036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664663461538463,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2833.806710873149}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8587573884448892,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.640625,"distances_sum":2024.8374027278664}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9366820679320684,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2645.3503607408943}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664663461538463,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2833.806710873149}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2877.709766432869}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9609375,"distances_sum":2917.9767311448195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721211080586083,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":2875.6561409448123}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9609375,"distances_sum":2917.9767311448195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9609375,"distances_sum":2917.9767311448195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.3676624298095703e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":5.671875,"distances_sum":485.01523834662174}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.98978590965271e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.4140625,"distances_sum":1057.8293104419702}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":4.502013325691223e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.078125,"distances_sum":898.6632442724209}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8126855783105792,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.078125,"distances_sum":1878.539603242747}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8126855783105792,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.078125,"distances_sum":1878.539603242747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9272467116217123,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6796875,"distances_sum":2642.7195602860374}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9196771978021984,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.53125,"distances_sum":2594.7169044019683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8456964910089918,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.3046875,"distances_sum":2026.2553223014659}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8612489940614948,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.3515625,"distances_sum":2193.1790218123833}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8331855644355652,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.171875,"distances_sum":1978.9998884497563}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9272467116217123,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6796875,"distances_sum":2642.7195602860374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9564217032967035,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7734375,"distances_sum":2933.715454734829}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544127747252753,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7421875,"distances_sum":2884.945393343917}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490956959706962,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.796875,"distances_sum":2829.43081762593}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949708104395605,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6875,"distances_sum":2886.1066515828215}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":7.526949048042297e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9375,"distances_sum":3034.698392854767}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573489010989017,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8203125,"distances_sum":2919.433306619583}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9516254578754585,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.734375,"distances_sum":2875.2162404720902}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":7.526949048042297e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9375,"distances_sum":3034.698392854767}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":7.526949048042297e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9375,"distances_sum":3034.698392854767}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6640625,"distances_sum":588.9127593901468}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2177734375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6640625,"distances_sum":588.9127593901468}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2177734375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6640625,"distances_sum":588.9127593901468}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.447265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.447265625,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.21875,"distances_sum":1068.4603713577274}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.447265625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.447265625,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.21875,"distances_sum":1068.4603713577274}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7802830849705857,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.546875,"distances_sum":1627.8945161207746}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.898981227106228,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.359375,"distances_sum":2311.192189234634}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.798906302031303,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.6953125,"distances_sum":1741.3338037419846}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8394376456876467,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.015625,"distances_sum":1977.6500969621356}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.898981227106228,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.359375,"distances_sum":2311.192189234634}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503262362637372,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7890625,"distances_sum":2695.9792151526012}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9166984057609063,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.4375,"distances_sum":2468.922631941234}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583562271062274,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.84375,"distances_sum":2768.2374301463356}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494104853479858,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2706.487008659471}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9423248626373631,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2651.7376437175453}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9462511446886452,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2686.0829118885295}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9402987637362642,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6875,"distances_sum":2622.64352286616}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9228766025641033,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.484375,"distances_sum":2481.2736634782946}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583562271062274,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.84375,"distances_sum":2768.2374301463356}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583562271062274,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.84375,"distances_sum":2768.2374301463356}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.984375,"distances_sum":1321.213659671243}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.3125,"distances_sum":865.5452211569657}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.56640625,"f1":null,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.984375,"distances_sum":1321.213659671243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9460794413919419,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7890625,"distances_sum":2563.5103136248867}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8952927281052289,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.65625,"distances_sum":2210.099657905601}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8530651640026649,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.65625,"distances_sum":1925.298326660788}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7910761113886122,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.9609375,"distances_sum":1665.4715394819937}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9460794413919419,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7890625,"distances_sum":2563.5103136248867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098904,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.890625,"distances_sum":2698.33083739378}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9541354478854484,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2633.5562606717313}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454217,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9296875,"distances_sum":2687.335700456857}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454217,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9296875,"distances_sum":2687.335700456857}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454217,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9296875,"distances_sum":2687.335700456857}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":3.885477781295776e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":7.1484375,"distances_sum":586.2067586927011}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7826293498168506,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.1953125,"distances_sum":1608.9592315170612}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7826293498168506,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.1953125,"distances_sum":1608.9592315170612}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7831229534354541,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.09375,"distances_sum":1613.1953489434936}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538976648351656,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2603.4646182269257}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9538976648351656,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.859375,"distances_sum":2603.4646182269257}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9735691391941396,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2748.2924873717816}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.961332417582418,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2652.4630425801383}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9735691391941396,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2748.2924873717816}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9735691391941396,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9140625,"distances_sum":2748.2924873717816}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.2763928174972534e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.0546875,"distances_sum":672.8879305922438}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7218418734043739,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.0859375,"distances_sum":1433.5666515762343}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7218418734043739,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.0859375,"distances_sum":1433.5666515762343}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7896535755910762,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0859375,"distances_sum":1691.783672504252}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7850267787767795,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0234375,"distances_sum":1705.1851908586773}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.780535610223111,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.921875,"distances_sum":1612.7309611784108}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7896535755910762,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0859375,"distances_sum":1691.783672504252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9096242299367308,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.640625,"distances_sum":2374.706510457305}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7950299700299708,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.234375,"distances_sum":1720.934653587153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9521062271062276,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7265625,"distances_sum":2709.7248629845662}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9417754120879125,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8046875,"distances_sum":2604.7346981488868}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9129755661005668,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6953125,"distances_sum":2381.8201282111736}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8929091741591748,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.640625,"distances_sum":2320.9850436863217}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8929898226773235,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5234375,"distances_sum":2318.3933691524257}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9521062271062276,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7265625,"distances_sum":2709.7248629845662}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9521062271062276,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7265625,"distances_sum":2709.7248629845662}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8556755744255753,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.359375,"distances_sum":2079.6929408055034}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1875,"f1":null,"seconds":2.775341272354126e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.9453125,"distances_sum":449.45685402017835}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":2.9727816581726074e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.2109375,"distances_sum":534.9231260224791}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.769129308191809,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.546875,"distances_sum":1620.868230638721}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8556755744255753,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.359375,"distances_sum":2079.6929408055034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8920995670995681,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.34375,"distances_sum":2282.833453234385}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8564622877122884,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.390625,"distances_sum":2037.4240948781921}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9396093489843496,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":2684.2401992861073}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9342490842490848,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2574.551907915293}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9421073717948725,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2686.842173455169}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9421073717948725,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.71875,"distances_sum":2686.842173455169}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597699175824181,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.78125,"distances_sum":2798.8618709175894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9511561355311361,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2736.077911502444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562728937728944,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.84375,"distances_sum":2734.5422443624684}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628033424908428,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2814.1352890207}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628033424908428,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2814.1352890207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628033424908428,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":2814.1352890207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5927734375,"f1":0.7328005328005334,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3515625,"distances_sum":1399.900645224227}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.140625,"distances_sum":858.0592988041344}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5927734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5927734375,"f1":0.7328005328005334,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3515625,"distances_sum":1399.900645224227}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7853849275724283,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8984375,"distances_sum":1634.7862666308608}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7853849275724283,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8984375,"distances_sum":1634.7862666308608}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.855972673160174,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":1937.3532463879692}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7989104645354654,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9921875,"distances_sum":1682.106331344005}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.855972673160174,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":1937.3532463879692}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.855972673160174,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":1937.3532463879692}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.515625,"distances_sum":247.76024777991088}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.515625,"distances_sum":247.76024777991088}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.171875,"distances_sum":346.3270777348217}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7998647186147193,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.96875,"distances_sum":1113.1766203152342}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.7998647186147193,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.96875,"distances_sum":1113.1766203152342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9203010531135537,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":1479.2171389335333}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8580971112221121,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.53125,"distances_sum":1249.1708608299512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9231856684981689,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":1470.3887228648773}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.860623751248752,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":1298.0800440240312}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.806257284382285,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.984375,"distances_sum":1093.2151276697996}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9231856684981689,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":1470.3887228648773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9232085622710628,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":1489.1478455948884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":1675.8946061702222}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597126831501835,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":1671.1985057365107}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":1675.8946061702222}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":1675.8946061702222}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6876949439449445,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.296875,"distances_sum":871.7703889884234}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.626953125,"f1":0.7522371725496733,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.84375,"distances_sum":975.8506456007183}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.626953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.626953125,"f1":0.7522371725496733,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.84375,"distances_sum":975.8506456007183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8524100899100907,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.34375,"distances_sum":1225.7445729891715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9446485805860813,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.78125,"distances_sum":1621.1292034340609}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.91226585914086,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7421875,"distances_sum":1449.5728622683694}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9446485805860813,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.78125,"distances_sum":1621.1292034340609}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9604223901098906,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.859375,"distances_sum":1661.94242854322}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073264,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":1690.3457851992496}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584306318681322,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":1629.457804156621}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":1730.2776906389852}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699977106227111,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":1712.3054562530738}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644001831501836,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":1674.9023740796708}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652186355311358,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":1697.59442244661}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":1730.2776906389852}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":1730.2776906389852}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":2.8945505619049072e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.421875,"distances_sum":337.4316512292324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.296875,"distances_sum":310.8705447161195}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1865234375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.296875,"distances_sum":310.8705447161195}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8533797799422808,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3515625,"distances_sum":1309.9183951070697}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":6,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":2.779066562652588e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.0859375,"distances_sum":358.8396898718407}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8533797799422808,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3515625,"distances_sum":1309.9183951070697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9303170787545797,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":1593.752261943465}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9303170787545797,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":1593.752261943465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.87890625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9303170787545797,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":1593.752261943465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.40625,"distances_sum":638.0926311270866}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8204477813852822,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4921875,"distances_sum":1172.4966700660568}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8204477813852822,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4921875,"distances_sum":1172.4966700660568}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.900705024142525,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":1442.2625660556578}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9325466200466207,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7421875,"distances_sum":1592.4421673737822}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8632813367188374,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.53125,"distances_sum":1297.8993596675102}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945913461538462,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":1648.4411334955505}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.864166042291043,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.5703125,"distances_sum":1305.4764108202646}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.945913461538462,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":1648.4411334955505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699633699633705,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.921875,"distances_sum":1758.300879596518}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835166,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9453125,"distances_sum":1748.2663588621306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.979166666666667,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.96875,"distances_sum":1795.0245255122486}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644917582417588,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8828125,"distances_sum":1733.471602577479}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9705929487179489,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":1751.7522618058354}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979166666666667,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.96875,"distances_sum":1795.0245255122486}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979166666666667,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.96875,"distances_sum":1795.0245255122486}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7926505785880792,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8984375,"distances_sum":1233.2761295235387}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7926505785880792,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8984375,"distances_sum":1233.2761295235387}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9009703837828845,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":1559.636501358186}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9225992757242764,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":1679.5020125434885}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9225992757242764,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":1679.5020125434885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.927764423076924,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":1698.2786018333684}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9324977106227111,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":1728.8593994878343}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9324977106227111,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":1728.8593994878343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9324977106227111,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":1728.8593994878343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7713513916638923,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1484375,"distances_sum":1082.8144561778104}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7713513916638923,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1484375,"distances_sum":1082.8144561778104}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9428800366300373,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7109375,"distances_sum":1677.1639351878794}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9428800366300373,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7109375,"distances_sum":1677.1639351878794}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9519204753579761,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":1734.4021696931718}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9519204753579761,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":1734.4021696931718}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9519204753579761,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":1734.4021696931718}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.3046875,"distances_sum":650.0772460808756}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.3046875,"distances_sum":650.0772460808756}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7046710234210241,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.3515625,"distances_sum":913.0660145092197}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7959946303696313,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1115.013574905875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9072463994339002,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":1466.9105190676062}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8630759865134873,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6015625,"distances_sum":1314.8530467015241}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8651078088578096,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.609375,"distances_sum":1336.5355561458973}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9072463994339002,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":1466.9105190676062}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9426396520146527,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":1622.6548875403387}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9244333791208802,"seconds":6.673857569694519e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":1548.4921710585932}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948574862637363,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":1661.1737290063966}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9480368589743594,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":1649.0240987536074}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9448005119880125,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":1634.2349517716489}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9361893315018321,"seconds":7.06501305103302e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":1579.1278845363533}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.948574862637363,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":1661.1737290063966}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.948574862637363,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":1661.1737290063966}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.109375,"distances_sum":507.78060921647193}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.38671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.38671875,"f1":null,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.109375,"distances_sum":507.78060921647193}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":7,"bsize":5}, perf: {"precision":0.9852120535714285,"recall":0.771484375,"f1":0.8578334425990681,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1484375,"distances_sum":1126.4855220681868}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9869326636904763,"recall":0.7490234375,"f1":0.8426225467241096,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1328125,"distances_sum":1080.6477980082334}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":7,"bsize":5},"perf":{"precision":0.9852120535714285,"recall":0.771484375,"f1":0.8578334425990681,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1484375,"distances_sum":1126.4855220681868}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9913690476190476,"recall":0.775390625,"f1":0.8630041833166838,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.171875,"distances_sum":1149.1378888459894}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9855840773809524,"recall":0.826171875,"f1":0.8942865728021984,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.25,"distances_sum":1242.0589307518349}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9855840773809524,"recall":0.826171875,"f1":0.8942865728021984,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.25,"distances_sum":1242.0589307518349}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9855840773809524,"recall":0.826171875,"f1":0.8942865728021984,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.25,"distances_sum":1242.0589307518349}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":3.157183527946472e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.4453125,"distances_sum":496.1273339506494}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.40625,"distances_sum":410.5067510518511}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7133775946275953,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.9296875,"distances_sum":927.0298227086374}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5791015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5791015625,"f1":0.7133775946275953,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.9296875,"distances_sum":927.0298227086374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8665532384282392,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.9453125,"distances_sum":1323.7273205077324}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7914385961260969,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.515625,"distances_sum":1070.0545168394997}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.720033265345766,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.0234375,"distances_sum":952.8485592856225}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8665532384282392,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":7.9453125,"distances_sum":1323.7273205077324}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9497856310356314,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.734375,"distances_sum":1670.2639084149325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659349,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.734375,"distances_sum":1707.990299064664}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9446371336996343,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.7109375,"distances_sum":1630.1841043569061}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659349,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.734375,"distances_sum":1707.990299064664}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659349,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.734375,"distances_sum":1707.990299064664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8540990259740266,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0546875,"distances_sum":1246.660840269293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.6796875,"distances_sum":619.8422676600545}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.609375,"distances_sum":623.9617790864314}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8540990259740266,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0546875,"distances_sum":1246.660840269293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8569029928404936,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.0703125,"distances_sum":1258.3523689449635}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9543586621711626,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.765625,"distances_sum":1629.8919106574679}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.907718323343324,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3984375,"distances_sum":1434.7302148471251}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9543586621711626,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.765625,"distances_sum":1629.8919106574679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897442,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.71875,"distances_sum":1651.7271524503992}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605540293040298,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.796875,"distances_sum":1648.8040689963302}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605540293040298,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.796875,"distances_sum":1648.8040689963302}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605540293040298,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.796875,"distances_sum":1648.8040689963302}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.30078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.30078125,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.484375,"distances_sum":527.5529634989856}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.28125,"distances_sum":605.7950907100798}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.5234375,"distances_sum":452.5822157569717}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.375,"f1":null,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.28125,"distances_sum":605.7950907100798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8989989177489184,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.453125,"distances_sum":1395.9014945495326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.804289807414808,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.1171875,"distances_sum":1117.6849346986635}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8014967671217678,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0,"distances_sum":1118.2475797415068}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7105196886446892,"seconds":4.32133674621582e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.34375,"distances_sum":922.6483733443197}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.546875,"f1":null,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.2421875,"distances_sum":841.2486338469579}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8156369671994681,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0546875,"distances_sum":1127.8037511647758}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8647238178488186,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4296875,"distances_sum":1280.254735614981}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.8989989177489184,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.453125,"distances_sum":1395.9014945495326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967036,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8984375,"distances_sum":1660.3672292182105}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9181407134532141,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.53125,"distances_sum":1464.5137291619735}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358978,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.90625,"distances_sum":1698.2153319020363}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9159174159174168,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.640625,"distances_sum":1471.6643322413076}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9139480311355318,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.59375,"distances_sum":1461.9515404852468}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9603708791208796,"seconds":6.463378667831421e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.875,"distances_sum":1653.5008032610215}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358978,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.90625,"distances_sum":1698.2153319020363}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9693108974358978,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.90625,"distances_sum":1698.2153319020363}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8027417027417035,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.921875,"distances_sum":1093.38493932631}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.365234375,"f1":null,"seconds":3.7997961044311523e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.9765625,"distances_sum":567.7143120919656}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8494477744477752,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.21875,"distances_sum":1175.631070551201}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8494477744477752,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.21875,"distances_sum":1175.631070551201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9593750000000004,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8125,"distances_sum":1610.3360447608338}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442651098901107,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6484375,"distances_sum":1550.229782469745}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8712235680985688,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3359375,"distances_sum":1277.888836354785}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9134875541125551,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4765625,"distances_sum":1407.7178066931835}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9593750000000004,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8125,"distances_sum":1610.3360447608338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":1704.2932918275797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9739583333333337,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":1666.424371266633}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989017,"seconds":6.550922989845276e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":1664.142302442216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721554487179491,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":1661.2812268246719}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609775641025646,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.78125,"distances_sum":1610.8907725784234}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670333,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8515625,"distances_sum":1613.0800021465466}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":1704.2932918275797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000003,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":1704.2932918275797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8480951340326348,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.2890625,"distances_sum":1231.2704516002793}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6877195720945726,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.2265625,"distances_sum":889.7938261967254}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8480951340326348,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.2890625,"distances_sum":1231.2704516002793}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.957108516483517,"seconds":7.251277565956116e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":1689.9822408376024}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.957108516483517,"seconds":7.251277565956116e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":1689.9822408376024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9730883699633703,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9296875,"distances_sum":1794.7144128416915}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588026556776561,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.828125,"distances_sum":1699.6686692930048}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625801282051285,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":1723.6976179909668}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9730883699633703,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9296875,"distances_sum":1794.7144128416915}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9730883699633703,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9296875,"distances_sum":1794.7144128416915}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7837227009102017,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7578125,"distances_sum":928.5015530164367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":1.0,"recall":0.390625,"f1":0.544623432123432,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.671875,"distances_sum":545.438718934057}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7837227009102017,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.7578125,"distances_sum":928.5015530164367}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8632471694971703,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.359375,"distances_sum":1162.1831942725094}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8632471694971703,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.359375,"distances_sum":1162.1831942725094}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9268231768231774,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":1374.1603469285076}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9085003538128547,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4609375,"distances_sum":1278.9945544824116}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9268231768231774,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":1374.1603469285076}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9268231768231774,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":1374.1603469285076}}, n: 9
inertia(cfft.distances) = 20.17209767229866
inertia(cdnet.distances) = 21.751170995671007
inertia(crand.distances) = 19.99389828128221
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9266666666666666
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9400000000000001
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8688888888888888
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 1, 2, 3, 3, 3, 3, 3, 3, 1, 3, 2, 3, 2, 2, 2, 3, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.35333333658332494] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651] ***
*** starting iteration: 2; err: [Inf, 0.35333333658332494, 0.1951423132785651] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116] ***
*** starting iteration: 3; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534] ***
*** starting iteration: 4; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847] ***
*** starting iteration: 5; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346] ***
*** starting iteration: 6; err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346, 0.15812046066583346] ***
*** finished computation of 12 references, err: [Inf, 0.35333333658332494, 0.1951423132785651, 0.17982318911519116, 0.16346876077252534, 0.15947630480009847, 0.15812046066583346, 0.15812046066583346] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.9533333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.6310000053127137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6310000053127137, 0.3735610509909314] ***
*** finished computation of 7 references, err: [Inf, 0.6310000053127137, 0.3735610509909314] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 5, 2]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.768300045033609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.768300045033609, 1.5364653863170927] ***
*** finished computation of 7 references, err: [Inf, 5.768300045033609, 1.5364653863170927] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 10, 0]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(1, 31), (2, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 23, 6]]
** centroid: 6, normalized-entropy: 0.7355085815538399, [(2, 23), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7193000067991747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7193000067991747, 0.3636523190082994] ***
*** finished computation of 7 references, err: [Inf, 0.7193000067991747, 0.3636523190082994] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6434000067474905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000067474905, 0.30869287054964095] ***
*** starting iteration: 2; err: [Inf, 0.6434000067474905, 0.30869287054964095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863] ***
*** starting iteration: 3; err: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532] ***
*** starting iteration: 4; err: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532, 0.26789978551485427] ***
*** starting iteration: 5; err: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532, 0.26789978551485427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532, 0.26789978551485427, 0.2674564903140666] ***
*** finished computation of 7 references, err: [Inf, 0.6434000067474905, 0.30869287054964095, 0.2813245675379863, 0.2714201282007532, 0.26789978551485427, 0.2674564903140666] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5335000028034688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112] ***
*** starting iteration: 2; err: [Inf, 0.5335000028034688, 0.3569064622267112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505] ***
*** starting iteration: 3; err: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979] ***
*** starting iteration: 4; err: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318] ***
*** starting iteration: 5; err: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318, 0.2239958309173754] ***
*** starting iteration: 6; err: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318, 0.2239958309173754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318, 0.2239958309173754, 0.2239958309173754] ***
*** finished computation of 7 references, err: [Inf, 0.5335000028034688, 0.3569064622267112, 0.28511973798626505, 0.2358519383727979, 0.225813486492318, 0.2239958309173754, 0.2239958309173754] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 2, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6877000048996631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094] ***
*** starting iteration: 2; err: [Inf, 0.6877000048996631, 0.4076019276188094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234] ***
*** starting iteration: 3; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365] ***
*** starting iteration: 4; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907] ***
*** starting iteration: 5; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864] ***
*** starting iteration: 6; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523] ***
*** starting iteration: 7; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694] ***
*** starting iteration: 8; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126] ***
*** starting iteration: 9; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126, 0.257245178266427] ***
*** starting iteration: 10; err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126, 0.257245178266427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126, 0.257245178266427, 0.2514682733840407] ***
*** finished computation of 7 references, err: [Inf, 0.6877000048996631, 0.4076019276188094, 0.33816684316340234, 0.31274478305950365, 0.2945183349502907, 0.27733825019214864, 0.2716682151436523, 0.2658753019252694, 0.26144485641528126, 0.257245178266427, 0.2514682733840407] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5819000053911766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5819000053911766, 0.2949244457639907] ***
*** finished computation of 7 references, err: [Inf, 0.5819000053911766, 0.2949244457639907] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7379999990520006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7379999990520006, 0.3353925749797686] ***
*** finished computation of 7 references, err: [Inf, 0.7379999990520006, 0.3353925749797686] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 4]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 13]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.8151000230904475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8151000230904475, 0.343289596725338] ***
*** finished computation of 7 references, err: [Inf, 2.8151000230904475, 0.343289596725338] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 15]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 5), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6922000050694703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6922000050694703, 0.32821138085779933] ***
*** finished computation of 7 references, err: [Inf, 1.6922000050694703, 0.32821138085779933] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 5]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35650000253414577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35650000253414577, 0.2413466690137617] ***
*** finished computation of 7 references, err: [Inf, 0.35650000253414577, 0.2413466690137617] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 19, 11]]
** centroid: 2, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5208000069702864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5208000069702864, 0.3578426697484545] ***
*** finished computation of 7 references, err: [Inf, 0.5208000069702864, 0.3578426697484545] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 6]]
** centroid: 1, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.8445602109785204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8445602109785204, 1.9274878070405044] ***
*** starting iteration: 2; err: [Inf, 3.8445602109785204, 1.9274878070405044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8445602109785204, 1.9274878070405044, 1.2038064301971294] ***
*** starting iteration: 3; err: [Inf, 3.8445602109785204, 1.9274878070405044, 1.2038064301971294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8445602109785204, 1.9274878070405044, 1.2038064301971294, 0.6062919987157271] ***
*** finished computation of 3 references, err: [Inf, 3.8445602109785204, 1.9274878070405044, 1.2038064301971294, 0.6062919987157271] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 4, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 34), (2, 4)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 23]]
** centroid: 3, normalized-entropy: 0.987380023288353, [(2, 30), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7713568127088741] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7713568127088741, 0.6015151649101749] ***
*** starting iteration: 2; err: [Inf, 1.7713568127088741, 0.6015151649101749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7713568127088741, 0.6015151649101749, 0.5727861758131112] ***
*** starting iteration: 3; err: [Inf, 1.7713568127088741, 0.6015151649101749, 0.5727861758131112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7713568127088741, 0.6015151649101749, 0.5727861758131112, 0.5659317108349279] ***
*** finished computation of 3 references, err: [Inf, 1.7713568127088741, 0.6015151649101749, 0.5727861758131112, 0.5659317108349279] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 36]]
** centroid: 3, normalized-entropy: 0.9975025463691153, [(2, 32), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2931880427436144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2931880427436144, 0.6666407934798599] ***
*** starting iteration: 2; err: [Inf, 1.2931880427436144, 0.6666407934798599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2931880427436144, 0.6666407934798599, 0.43280574761831486] ***
*** starting iteration: 3; err: [Inf, 1.2931880427436144, 0.6666407934798599, 0.43280574761831486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2931880427436144, 0.6666407934798599, 0.43280574761831486, 0.37325069393740107] ***
*** finished computation of 3 references, err: [Inf, 1.2931880427436144, 0.6666407934798599, 0.43280574761831486, 0.37325069393740107] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 30]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.523877430488926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.523877430488926, 2.206410592502655] ***
*** finished computation of 3 references, err: [Inf, 6.523877430488926, 2.206410592502655] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [34, 32, 9]]
** centroid: 2, normalized-entropy: 0.8888398736973212, [(1, 34), (2, 32), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 13]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9439628213737024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9439628213737024, 1.5322235828702497] ***
*** finished computation of 3 references, err: [Inf, 2.9439628213737024, 1.5322235828702497] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 19, 0]]
** centroid: 1, normalized-entropy: 0.9580420222262997, [(1, 31), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 29]]
** centroid: 2, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5873037693223409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5873037693223409, 0.368793137992176] ***
*** finished computation of 3 references, err: [Inf, 1.5873037693223409, 0.368793137992176] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 5]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7851999981967168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7851999981967168, 0.5598315269128186] ***
*** starting iteration: 2; err: [Inf, 1.7851999981967168, 0.5598315269128186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7851999981967168, 0.5598315269128186, 0.5525390418183879] ***
*** starting iteration: 3; err: [Inf, 1.7851999981967168, 0.5598315269128186, 0.5525390418183879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7851999981967168, 0.5598315269128186, 0.5525390418183879, 0.5515657981051381] ***
*** finished computation of 3 references, err: [Inf, 1.7851999981967168, 0.5598315269128186, 0.5525390418183879, 0.5515657981051381] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0599000011582793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282] ***
*** starting iteration: 2; err: [Inf, 1.0599000011582793, 0.6102792156715282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658] ***
*** starting iteration: 3; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461] ***
*** starting iteration: 4; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915] ***
*** starting iteration: 5; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205] ***
*** starting iteration: 6; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205, 0.4876192424855374] ***
*** starting iteration: 7; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205, 0.4876192424855374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205, 0.4876192424855374, 0.48699163620255975] ***
*** finished computation of 3 references, err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461, 0.4899143983916915, 0.48880066879063205, 0.4876192424855374, 0.48699163620255975] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5245999986877814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5245999986877814, 0.5375723153371026] ***
*** starting iteration: 2; err: [Inf, 1.5245999986877814, 0.5375723153371026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5245999986877814, 0.5375723153371026, 0.5222747689889349] ***
*** starting iteration: 3; err: [Inf, 1.5245999986877814, 0.5375723153371026, 0.5222747689889349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5245999986877814, 0.5375723153371026, 0.5222747689889349, 0.5222747689889349] ***
*** finished computation of 3 references, err: [Inf, 1.5245999986877814, 0.5375723153371026, 0.5222747689889349, 0.5222747689889349] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.4302999954894084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4302999954894084, 0.5510173894018123] ***
*** starting iteration: 2; err: [Inf, 2.4302999954894084, 0.5510173894018123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4302999954894084, 0.5510173894018123, 0.5510173894018123] ***
*** finished computation of 3 references, err: [Inf, 2.4302999954894084, 0.5510173894018123, 0.5510173894018123] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0599000011582793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282] ***
*** starting iteration: 2; err: [Inf, 1.0599000011582793, 0.6102792156715282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658] ***
*** starting iteration: 3; err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461] ***
*** finished computation of 3 references, err: [Inf, 1.0599000011582793, 0.6102792156715282, 0.555566454603658, 0.5001419024735461] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1739999961422887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1739999961422887, 0.592863608557474] ***
*** starting iteration: 2; err: [Inf, 1.1739999961422887, 0.592863608557474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1739999961422887, 0.592863608557474, 0.5247087321191182] ***
*** starting iteration: 3; err: [Inf, 1.1739999961422887, 0.592863608557474, 0.5247087321191182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1739999961422887, 0.592863608557474, 0.5247087321191182, 0.5222747689889349] ***
*** finished computation of 3 references, err: [Inf, 1.1739999961422887, 0.592863608557474, 0.5247087321191182, 0.5222747689889349] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1073902977423662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1073902977423662, 0.4020491618673742] ***
*** finished computation of 3 references, err: [Inf, 1.1073902977423662, 0.4020491618673742] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7494196618355485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7494196618355485, 0.35823009212322954] ***
*** finished computation of 3 references, err: [Inf, 0.7494196618355485, 0.35823009212322954] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 14]]
** centroid: 3, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6744247668395694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6744247668395694, 0.45264825284446103] ***
*** finished computation of 3 references, err: [Inf, 0.6744247668395694, 0.45264825284446103] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 18]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 32), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6216000014984165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168] ***
*** starting iteration: 2; err: [Inf, 0.6216000014984165, 0.2544833074370168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668] ***
*** starting iteration: 3; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951] ***
*** starting iteration: 4; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536] ***
*** starting iteration: 5; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531] ***
*** starting iteration: 6; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192] ***
*** starting iteration: 7; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559] ***
*** starting iteration: 8; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559, 0.2244382086270914] ***
*** starting iteration: 9; err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559, 0.2244382086270914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559, 0.2244382086270914, 0.22405542190275626] ***
*** finished computation of 7 references, err: [Inf, 0.6216000014984165, 0.2544833074370168, 0.24346729931216668, 0.24101252480732951, 0.2376458261751536, 0.2327576658936531, 0.228381587981192, 0.2256982020724559, 0.2244382086270914, 0.22405542190275626] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4236000026192549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4236000026192549, 0.22234709819206822] ***
*** starting iteration: 2; err: [Inf, 0.4236000026192549, 0.22234709819206822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512] ***
*** starting iteration: 3; err: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512, 0.20023177080636295] ***
*** starting iteration: 4; err: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512, 0.20023177080636295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512, 0.20023177080636295, 0.20003067029738617] ***
*** finished computation of 7 references, err: [Inf, 0.4236000026192549, 0.22234709819206822, 0.21124305141321512, 0.20023177080636295, 0.20003067029738617] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5943000052904601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657] ***
*** starting iteration: 2; err: [Inf, 0.5943000052904601, 0.271642170487657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566] ***
*** starting iteration: 3; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785] ***
*** starting iteration: 4; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058] ***
*** starting iteration: 5; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873] ***
*** starting iteration: 6; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674] ***
*** starting iteration: 7; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674, 0.2315949991236654] ***
*** starting iteration: 8; err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674, 0.2315949991236654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674, 0.2315949991236654, 0.2315949991236654] ***
*** finished computation of 7 references, err: [Inf, 0.5943000052904601, 0.271642170487657, 0.26765689211145566, 0.2627321577119785, 0.2502006325759058, 0.23707431210636873, 0.23295990606247674, 0.2315949991236654, 0.2315949991236654] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 6]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3963070519550335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3963070519550335, 0.21472508275337593] ***
*** starting iteration: 2; err: [Inf, 0.3963070519550335, 0.21472508275337593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3963070519550335, 0.21472508275337593, 0.18572833095887994] ***
*** starting iteration: 3; err: [Inf, 0.3963070519550335, 0.21472508275337593, 0.18572833095887994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3963070519550335, 0.21472508275337593, 0.18572833095887994, 0.17458196163821935] ***
*** finished computation of 7 references, err: [Inf, 0.3963070519550335, 0.21472508275337593, 0.18572833095887994, 0.17458196163821935] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 14]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 12), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25837144055169897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25837144055169897, 0.1515006775834761] ***
*** starting iteration: 2; err: [Inf, 0.25837144055169897, 0.1515006775834761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25837144055169897, 0.1515006775834761, 0.14427790085642753] ***
*** starting iteration: 3; err: [Inf, 0.25837144055169897, 0.1515006775834761, 0.14427790085642753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25837144055169897, 0.1515006775834761, 0.14427790085642753, 0.14129969471933712] ***
*** finished computation of 7 references, err: [Inf, 0.25837144055169897, 0.1515006775834761, 0.14427790085642753, 0.14129969471933712] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37499396514663347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37499396514663347, 0.20185772413168204] ***
*** starting iteration: 2; err: [Inf, 0.37499396514663347, 0.20185772413168204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37499396514663347, 0.20185772413168204, 0.19210530119409291] ***
*** starting iteration: 3; err: [Inf, 0.37499396514663347, 0.20185772413168204, 0.19210530119409291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37499396514663347, 0.20185772413168204, 0.19210530119409291, 0.18799233335838422] ***
*** finished computation of 7 references, err: [Inf, 0.37499396514663347, 0.20185772413168204, 0.19210530119409291, 0.18799233335838422] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 24, 6]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 24), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37386047595051763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37386047595051763, 0.2117656651410611] ***
*** finished computation of 7 references, err: [Inf, 0.37386047595051763, 0.2117656651410611] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 20]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 5), (3, 20)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 3]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2743230919973432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743230919973432, 0.15394862238244683] ***
*** finished computation of 7 references, err: [Inf, 0.2743230919973432, 0.15394862238244683] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 11]]
** centroid: 1, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47924069520858653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47924069520858653, 0.18055880519219542] ***
*** finished computation of 7 references, err: [Inf, 0.47924069520858653, 0.18055880519219542] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5758000058034931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5758000058034931, 0.24649596732900383] ***
*** starting iteration: 2; err: [Inf, 0.5758000058034931, 0.24649596732900383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5758000058034931, 0.24649596732900383, 0.23306859880117498] ***
*** starting iteration: 3; err: [Inf, 0.5758000058034931, 0.24649596732900383, 0.23306859880117498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5758000058034931, 0.24649596732900383, 0.23306859880117498, 0.2317733365971033] ***
*** finished computation of 7 references, err: [Inf, 0.5758000058034931, 0.24649596732900383, 0.23306859880117498, 0.2317733365971033] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 11]]
** centroid: 1, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4336000101383054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336000101383054, 0.28596393240536605] ***
*** starting iteration: 2; err: [Inf, 0.4336000101383054, 0.28596393240536605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336000101383054, 0.28596393240536605, 0.2579532481276948] ***
*** starting iteration: 3; err: [Inf, 0.4336000101383054, 0.28596393240536605, 0.2579532481276948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4336000101383054, 0.28596393240536605, 0.2579532481276948, 0.24408023623934402] ***
*** finished computation of 7 references, err: [Inf, 0.4336000101383054, 0.28596393240536605, 0.2579532481276948, 0.24408023623934402] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 19, 7]]
** centroid: 6, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5656000018590617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5656000018590617, 0.2928781278927334] ***
*** starting iteration: 2; err: [Inf, 0.5656000018590617, 0.2928781278927334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5656000018590617, 0.2928781278927334, 0.27920968791720524] ***
*** starting iteration: 3; err: [Inf, 0.5656000018590617, 0.2928781278927334, 0.27920968791720524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5656000018590617, 0.2928781278927334, 0.27920968791720524, 0.2762678092011162] ***
*** finished computation of 7 references, err: [Inf, 0.5656000018590617, 0.2928781278927334, 0.27920968791720524, 0.2762678092011162] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 4]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3882950989307771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034] ***
*** starting iteration: 2; err: [Inf, 0.3882950989307771, 0.20430441920013034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388] ***
*** starting iteration: 3; err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586] ***
*** starting iteration: 4; err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418] ***
*** starting iteration: 5; err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771] ***
*** starting iteration: 6; err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771, 0.17410346681237063] ***
*** starting iteration: 7; err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771, 0.17410346681237063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771, 0.17410346681237063, 0.17410346681237063] ***
*** finished computation of 7 references, err: [Inf, 0.3882950989307771, 0.20430441920013034, 0.19023090491685388, 0.18323972249000586, 0.178138187088418, 0.1753921385954771, 0.17410346681237063, 0.17410346681237063] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2796621991290708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2796621991290708, 0.17390811252704247] ***
*** starting iteration: 2; err: [Inf, 0.2796621991290708, 0.17390811252704247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2796621991290708, 0.17390811252704247, 0.1567284242440458] ***
*** starting iteration: 3; err: [Inf, 0.2796621991290708, 0.17390811252704247, 0.1567284242440458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2796621991290708, 0.17390811252704247, 0.1567284242440458, 0.1564186442257793] ***
*** finished computation of 7 references, err: [Inf, 0.2796621991290708, 0.17390811252704247, 0.1567284242440458, 0.1564186442257793] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 10]]
** centroid: 6, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49894136884965107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49894136884965107, 0.2083557205865906] ***
*** starting iteration: 2; err: [Inf, 0.49894136884965107, 0.2083557205865906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49894136884965107, 0.2083557205865906, 0.20195440054039576] ***
*** starting iteration: 3; err: [Inf, 0.49894136884965107, 0.2083557205865906, 0.20195440054039576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49894136884965107, 0.2083557205865906, 0.20195440054039576, 0.20160044980433078] ***
*** finished computation of 7 references, err: [Inf, 0.49894136884965107, 0.2083557205865906, 0.20195440054039576, 0.20160044980433078] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40074724966189945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003] ***
*** starting iteration: 2; err: [Inf, 0.40074724966189945, 0.19780212153936003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638] ***
*** starting iteration: 3; err: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668] ***
*** starting iteration: 4; err: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156] ***
*** starting iteration: 5; err: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156, 0.1827709119062887] ***
*** starting iteration: 6; err: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156, 0.1827709119062887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156, 0.1827709119062887, 0.18250235704397688] ***
*** finished computation of 7 references, err: [Inf, 0.40074724966189945, 0.19780212153936003, 0.19246219385003638, 0.18720690745152668, 0.1842905408010156, 0.1827709119062887, 0.18250235704397688] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30463891666389853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30463891666389853, 0.14324871037947656] ***
*** starting iteration: 2; err: [Inf, 0.30463891666389853, 0.14324871037947656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30463891666389853, 0.14324871037947656, 0.1419515785996276] ***
*** starting iteration: 3; err: [Inf, 0.30463891666389853, 0.14324871037947656, 0.1419515785996276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30463891666389853, 0.14324871037947656, 0.1419515785996276, 0.1419515785996276] ***
*** finished computation of 7 references, err: [Inf, 0.30463891666389853, 0.14324871037947656, 0.1419515785996276, 0.1419515785996276] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45249697000298766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45249697000298766, 0.22183445289635878] ***
*** starting iteration: 2; err: [Inf, 0.45249697000298766, 0.22183445289635878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845] ***
*** starting iteration: 3; err: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845, 0.19267945027383718] ***
*** starting iteration: 4; err: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845, 0.19267945027383718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845, 0.19267945027383718, 0.1919521456658123] ***
*** finished computation of 7 references, err: [Inf, 0.45249697000298766, 0.22183445289635878, 0.20080358554300845, 0.19267945027383718, 0.1919521456658123] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 18]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 7), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5863000063041894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5863000063041894, 0.2501362963617603] ***
*** starting iteration: 2; err: [Inf, 0.5863000063041894, 0.2501362963617603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5863000063041894, 0.2501362963617603, 0.2402051036908749] ***
*** starting iteration: 3; err: [Inf, 0.5863000063041894, 0.2501362963617603, 0.2402051036908749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5863000063041894, 0.2501362963617603, 0.2402051036908749, 0.23771154552225546] ***
*** finished computation of 7 references, err: [Inf, 0.5863000063041894, 0.2501362963617603, 0.2402051036908749, 0.23771154552225546] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 14]]
** centroid: 4, normalized-entropy: 0.8314743880097292, [(2, 5), (3, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5822000011764753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000011764753, 0.247669193478763] ***
*** starting iteration: 2; err: [Inf, 0.5822000011764753, 0.247669193478763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000011764753, 0.247669193478763, 0.22866860020411736] ***
*** starting iteration: 3; err: [Inf, 0.5822000011764753, 0.247669193478763, 0.22866860020411736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5822000011764753, 0.247669193478763, 0.22866860020411736, 0.22579588748126167] ***
*** finished computation of 7 references, err: [Inf, 0.5822000011764753, 0.247669193478763, 0.22866860020411736, 0.22579588748126167] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 3, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.59830000464876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.59830000464876, 0.27901389296587303] ***
*** starting iteration: 2; err: [Inf, 0.59830000464876, 0.27901389296587303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.59830000464876, 0.27901389296587303, 0.24867476874077532] ***
*** starting iteration: 3; err: [Inf, 0.59830000464876, 0.27901389296587303, 0.24867476874077532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.59830000464876, 0.27901389296587303, 0.24867476874077532, 0.23842239873770477] ***
*** finished computation of 7 references, err: [Inf, 0.59830000464876, 0.27901389296587303, 0.24867476874077532, 0.23842239873770477] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 6]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 9), (3, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 16
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3556740233276811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556740233276811, 0.2505436462910308] ***
*** starting iteration: 2; err: [Inf, 0.3556740233276811, 0.2505436462910308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283] ***
*** starting iteration: 3; err: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662] ***
*** starting iteration: 4; err: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662, 0.222401537226215] ***
*** starting iteration: 5; err: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662, 0.222401537226215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662, 0.222401537226215, 0.22177468536368927] ***
*** finished computation of 7 references, err: [Inf, 0.3556740233276811, 0.2505436462910308, 0.23435722024791283, 0.226013094408662, 0.222401537226215, 0.22177468536368927] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 22]]
** centroid: 6, normalized-entropy: 0.9366673818775627, [(2, 12), (3, 22)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4054581650829758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689] ***
*** starting iteration: 2; err: [Inf, 0.4054581650829758, 0.2378824972767689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423] ***
*** starting iteration: 3; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082] ***
*** starting iteration: 4; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038] ***
*** starting iteration: 5; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825] ***
*** starting iteration: 6; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694] ***
*** starting iteration: 7; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523] ***
*** starting iteration: 8; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523, 0.15684598876679354] ***
*** starting iteration: 9; err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523, 0.15684598876679354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523, 0.15684598876679354, 0.15684598876679354] ***
*** finished computation of 7 references, err: [Inf, 0.4054581650829758, 0.2378824972767689, 0.2195338285748423, 0.20166615313449082, 0.1807254055891038, 0.16333994081048825, 0.15985736462399694, 0.15792247494297523, 0.15684598876679354, 0.15684598876679354] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 10]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3316965170781826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316965170781826, 0.22164890826275152] ***
*** starting iteration: 2; err: [Inf, 0.3316965170781826, 0.22164890826275152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313] ***
*** starting iteration: 3; err: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392] ***
*** starting iteration: 4; err: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392, 0.19876608330634815] ***
*** starting iteration: 5; err: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392, 0.19876608330634815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392, 0.19876608330634815, 0.19810647225294015] ***
*** finished computation of 7 references, err: [Inf, 0.3316965170781826, 0.22164890826275152, 0.21152492809988313, 0.20442396700917392, 0.19876608330634815, 0.19810647225294015] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 6]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.479452884459607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.479452884459607, 0.19688854239454795] ***
*** finished computation of 7 references, err: [Inf, 0.479452884459607, 0.19688854239454795] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 5]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.611495176192709] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611495176192709, 0.19936278274629213] ***
*** finished computation of 7 references, err: [Inf, 0.611495176192709, 0.19936278274629213] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 21]]
** centroid: 6, normalized-entropy: 0.9071657675730821, [(2, 10), (3, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29022828205581136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29022828205581136, 0.21490952248711237] ***
*** finished computation of 7 references, err: [Inf, 0.29022828205581136, 0.21490952248711237] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 6]]
** centroid: 1, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 2]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.4199169148561958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4199169148561958, 0.19087837154851084] ***
*** starting iteration: 2; err: [Inf, 0.4199169148561958, 0.19087837154851084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4199169148561958, 0.19087837154851084, 0.18464208494993334] ***
*** starting iteration: 3; err: [Inf, 0.4199169148561958, 0.19087837154851084, 0.18464208494993334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4199169148561958, 0.19087837154851084, 0.18464208494993334, 0.18139798733118506] ***
*** finished computation of 7 references, err: [Inf, 0.4199169148561958, 0.19087837154851084, 0.18464208494993334, 0.18139798733118506] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2772549693729996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772549693729996, 0.1600837647453571] ***
*** starting iteration: 2; err: [Inf, 0.2772549693729996, 0.1600837647453571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772549693729996, 0.1600837647453571, 0.14917875301455305] ***
*** starting iteration: 3; err: [Inf, 0.2772549693729996, 0.1600837647453571, 0.14917875301455305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2772549693729996, 0.1600837647453571, 0.14917875301455305, 0.1469582005927161] ***
*** finished computation of 7 references, err: [Inf, 0.2772549693729996, 0.1600837647453571, 0.14917875301455305, 0.1469582005927161] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 5, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 7, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4049182082355318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4049182082355318, 0.2006489675720549] ***
*** starting iteration: 2; err: [Inf, 0.4049182082355318, 0.2006489675720549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4049182082355318, 0.2006489675720549, 0.19275773904712892] ***
*** starting iteration: 3; err: [Inf, 0.4049182082355318, 0.2006489675720549, 0.19275773904712892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4049182082355318, 0.2006489675720549, 0.19275773904712892, 0.18710788314182517] ***
*** finished computation of 7 references, err: [Inf, 0.4049182082355318, 0.2006489675720549, 0.19275773904712892, 0.18710788314182517] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 6]]
** centroid: 1, normalized-entropy: 0.7355085815538399, [(2, 23), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.371674389723069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.371674389723069, 0.21570491693297358] ***
*** starting iteration: 2; err: [Inf, 0.371674389723069, 0.21570491693297358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.371674389723069, 0.21570491693297358, 0.1795176027821546] ***
*** starting iteration: 3; err: [Inf, 0.371674389723069, 0.21570491693297358, 0.1795176027821546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.371674389723069, 0.21570491693297358, 0.1795176027821546, 0.177201256207226] ***
*** finished computation of 7 references, err: [Inf, 0.371674389723069, 0.21570491693297358, 0.1795176027821546, 0.177201256207226] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34365711624177936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34365711624177936, 0.19128744343452028] ***
*** starting iteration: 2; err: [Inf, 0.34365711624177936, 0.19128744343452028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34365711624177936, 0.19128744343452028, 0.18198219744530433] ***
*** starting iteration: 3; err: [Inf, 0.34365711624177936, 0.19128744343452028, 0.18198219744530433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34365711624177936, 0.19128744343452028, 0.18198219744530433, 0.17541697853101787] ***
*** finished computation of 7 references, err: [Inf, 0.34365711624177936, 0.19128744343452028, 0.18198219744530433, 0.17541697853101787] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3187952058821663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3187952058821663, 0.231114706500098] ***
*** starting iteration: 2; err: [Inf, 0.3187952058821663, 0.231114706500098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3187952058821663, 0.231114706500098, 0.22148016075942514] ***
*** starting iteration: 3; err: [Inf, 0.3187952058821663, 0.231114706500098, 0.22148016075942514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3187952058821663, 0.231114706500098, 0.22148016075942514, 0.22128585724440245] ***
*** finished computation of 7 references, err: [Inf, 0.3187952058821663, 0.231114706500098, 0.22148016075942514, 0.22128585724440245] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 20]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 8), (3, 20)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.588200003603159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.588200003603159, 0.28521790889457166] ***
*** starting iteration: 2; err: [Inf, 0.588200003603159, 0.28521790889457166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.588200003603159, 0.28521790889457166, 0.2548960848876699] ***
*** starting iteration: 3; err: [Inf, 0.588200003603159, 0.28521790889457166, 0.2548960848876699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.588200003603159, 0.28521790889457166, 0.2548960848876699, 0.2493397186508677] ***
*** finished computation of 7 references, err: [Inf, 0.588200003603159, 0.28521790889457166, 0.2548960848876699, 0.2493397186508677] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6377000018980319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6377000018980319, 0.3092332521907004] ***
*** starting iteration: 2; err: [Inf, 0.6377000018980319, 0.3092332521907004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6377000018980319, 0.3092332521907004, 0.26333039700457594] ***
*** starting iteration: 3; err: [Inf, 0.6377000018980319, 0.3092332521907004, 0.26333039700457594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6377000018980319, 0.3092332521907004, 0.26333039700457594, 0.25106300074047927] ***
*** finished computation of 7 references, err: [Inf, 0.6377000018980319, 0.3092332521907004, 0.26333039700457594, 0.25106300074047927] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 4]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7722999931699372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7722999931699372, 0.3538770900245275] ***
*** starting iteration: 2; err: [Inf, 0.7722999931699372, 0.3538770900245275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7722999931699372, 0.3538770900245275, 0.3150424184533375] ***
*** starting iteration: 3; err: [Inf, 0.7722999931699372, 0.3538770900245275, 0.3150424184533375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7722999931699372, 0.3538770900245275, 0.3150424184533375, 0.30559471156516455] ***
*** finished computation of 7 references, err: [Inf, 0.7722999931699372, 0.3538770900245275, 0.3150424184533375, 0.30559471156516455] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.2952000004360422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2952000004360422, 1.0136819178065397] ***
*** finished computation of 3 references, err: [Inf, 1.2952000004360422, 1.0136819178065397] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [14, 4, 0]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(1, 14), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 32]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(2, 30), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9586000036352526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9586000036352526, 0.5902858287478598] ***
*** finished computation of 3 references, err: [Inf, 0.9586000036352526, 0.5902858287478598] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 20]]
** centroid: 1, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0614999898579558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0614999898579558, 0.7100490007735479] ***
*** finished computation of 3 references, err: [Inf, 1.0614999898579558, 0.7100490007735479] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 31]]
** centroid: 2, normalized-entropy: 0.9108783787500366, [(2, 15), (3, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8933333333333334, 0.8466666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 24
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.6716000026002327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6716000026002327, 0.4251699498795837] ***
*** finished computation of 7 references, err: [Inf, 0.6716000026002327, 0.4251699498795837] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36340000274435275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36340000274435275, 0.23558824949934404] ***
*** finished computation of 7 references, err: [Inf, 0.36340000274435275, 0.23558824949934404] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 12]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.888200010705858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.888200010705858, 0.37013719150808233] ***
*** finished computation of 7 references, err: [Inf, 1.888200010705858, 0.37013719150808233] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 8]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48322130657627527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48322130657627527, 0.27789197504011065] ***
*** finished computation of 7 references, err: [Inf, 0.48322130657627527, 0.27789197504011065] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 10]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31404568670011235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31404568670011235, 0.19390173904756317] ***
*** finished computation of 7 references, err: [Inf, 0.31404568670011235, 0.19390173904756317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 13]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(2, 8), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 6, 16]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 6), (3, 16)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38115369372339997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38115369372339997, 0.2404156651573241] ***
*** finished computation of 7 references, err: [Inf, 0.38115369372339997, 0.2404156651573241] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.988888888888889, 3.4555555555555553, 1.6222222222222222, 0.32222222222222224], [5.345454545454547, 3.6636363636363636, 1.4272727272727275, 0.2636363636363636], [5.573913043478262, 2.604347826086956, 4.01304347826087, 1.2565217391304349], [4.6428571428571415, 3.135714285714286, 1.3785714285714283, 0.17142857142857146], [7.500000000000001, 2.8714285714285714, 6.371428571428572, 2.071428571428571], [6.516666666666667, 3.0416666666666674, 4.666666666666667, 1.4833333333333334], [6.290909090909091, 2.940909090909091, 5.313636363636363, 1.9818181818181815], [7.550000000000001, 3.7, 6.25, 2.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.553333333333334, 2.646666666666667, 3.9933333333333327, 1.2266666666666666], [4.7733333333333325, 3.1133333333333337, 1.4466666666666665, 0.2066666666666667], [6.388888888888889, 2.9222222222222225, 4.655555555555556, 1.461111111111111], [6.04, 2.71, 5.04, 1.7400000000000002], [6.563157894736844, 3.057894736842105, 5.463157894736843, 2.1999999999999997], [5.29375, 3.7249999999999996, 1.49375, 0.29375000000000007], [7.425000000000001, 3.05, 6.125, 1.9500000000000002], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 2, 3, 3, 1, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.318181818181818, 2.9818181818181815, 4.654545454545455, 1.4545454545454546], [6.016666666666666, 2.65, 4.966666666666668, 1.8166666666666667], [5.540000000000001, 2.82, 4.23, 1.3699999999999999], [5.017142857142857, 3.434285714285714, 1.4628571428571429, 0.24000000000000002], [6.470588235294119, 3.0352941176470587, 5.53529411764706, 2.135294117647059], [5.88, 2.54, 3.97, 1.1800000000000002], [5.0, 2.3000000000000003, 3.266666666666667, 1.0333333333333334], [7.4125, 3.0125, 6.3, 1.9625000000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[72, 1, 1, 1, 1, 3, 20, 1, 29, 24, 1, 1, 2, 3, 18, 16, 40, 1, 28, 40, 24, 1, 1, 14, 1, 25, 27, 28, 37, 19, 37, 42, 31, 29, 41, 33, 22, 20, 48, 50, 34, 34, 55, 1, 14, 20, 12, 29, 1, 16, 24, 29, 24, 1, 43, 47, 35, 41, 31, 28, 38, 27, 49, 1, 36, 13, 31, 33, 20, 73, 39, 26, 26, 2, 26, 34, 30, 32, 1, 46, 44, 31, 57, 45, 32, 27, 23, 30, 36, 33, 30, 1, 35, 42, 20, 30, 35, 30, 41, 27, 1, 38, 56, 39, 23, 28, 29, 49, 57, 40, 35, 15, 53, 36, 27, 23, 34, 32, 48, 33, 31, 45, 30, 37, 4, 28, 23, 36, 17, 34, 39, 50, 21, 48, 46, 37, 16, 37, 61, 40, 35, 1, 39, 28, 26, 31, 74, 23, 36, 20, 51, 26, 30, 22, 39, 27, 26, 41, 54, 30, 50, 48, 44, 50, 38, 59, 52, 34, 29, 43, 5, 40, 31, 28, 23, 18, 38, 58, 67, 51, 40, 27, 23, 47, 44, 49, 41, 34, 35, 29, 20, 42, 60, 48, 36, 21, 46, 25, 26, 24, 47, 35, 34, 31, 54, 28, 18, 45, 41, 49, 45, 18, 21, 57, 27, 45, 52, 40, 21, 35, 30, 42, 35, 38, 38, 15, 42, 40, 26, 39, 33, 40, 39, 31, 41, 34, 33, 58, 46, 28, 36, 31, 27, 49, 43, 47, 40, 36, 51, 78, 41, 30, 25, 37, 61, 25, 40, 29, 43, 57, 29, 42, 43, 40, 60, 23, 48, 23, 41, 33, 9, 33, 50, 16, 38, 73, 21, 46, 52, 67, 25, 45, 27, 61, 17, 29, 36, 66, 41, 42, 51, 48, 34, 44, 33, 28, 40, 35, 43, 29]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5980000000000001, speedup = 0.3593434838484829, eval_ratio = 0.041846)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39670138888888884,"recall":0.39670138888888884,"f1":null,"seconds":7.098168134689331e-5,"exhaustive_search_seconds":0.00040502287447452545,"evaluations":341.265625,"distances_sum":1697.291622601044}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5651041666666664,"recall":0.5651041666666664,"f1":null,"seconds":0.00010507740080356598,"exhaustive_search_seconds":0.00040502287447452545,"evaluations":381.03125,"distances_sum":1582.342102366387}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6805555555555551,"recall":0.6805555555555551,"f1":null,"seconds":0.0001364387571811676,"exhaustive_search_seconds":0.00040502287447452545,"evaluations":423.2734375,"distances_sum":1535.940812574987}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7456597222222217,"recall":0.7456597222222217,"f1":null,"seconds":0.00016866810619831085,"exhaustive_search_seconds":0.00040502287447452545,"evaluations":462.421875,"distances_sum":1513.799434841943}
KCenters.DeloneInvIndex> reached performance {"precision":0.8003472222222213,"recall":0.8003472222222213,"f1":null,"seconds":0.00020151957869529724,"exhaustive_search_seconds":0.00040502287447452545,"evaluations":503.8515625,"distances_sum":1500.939695188312}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7450000000000003, speedup = 1.9887765066123375, eval_ratio = 0.049956)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
