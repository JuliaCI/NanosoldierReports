Julia Version 1.6.0-DEV.1147
Commit a919005a5a (2020-10-06 16:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_CYS0RX/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_CYS0RX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.02657071259778704 -0.0101659131069545; 0.02657071259778704 0.0 -0.09117874644223976; 0.0101659131069545 0.09117874644223976 0.0])
dAA = so3([0.0 0.1067569210007962 -0.08413263668649168; -0.1067569210007962 0.0 0.08781060734932516; 0.08413263668649168 -0.08781060734932516 0.0])
dAA = so3([0.0 -0.20933013457636576 0.06847761465599951; 0.20933013457636576 0.0 0.19446965531412322; -0.06847761465599951 -0.19446965531412322 0.0])
dAA = Quaternion(0.9930359188893634, [0.11345407579586482, 0.01063643565831481, -0.029911581659123464])
dAA = SO3([0.9979082676840832 -0.06012110208517949 0.023760100416787742; 0.06058947321422609 0.997972085659233 -0.01950979191543155; -0.022538966777006203 0.02090859462097551 0.9995273011016762])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9430477054791608 0.28244511348755935 -0.17574351497989793; -0.23689806435354732 0.9410982552755578 0.24127449310452087; 0.23353871691013564 -0.18590005859143952 0.9544112509393772]), [0.9117874644223976, -0.10165913106954498, 0.2657071259778704])
xj = SE3(SO3([0.9877549146372677 0.1537352382755747 0.026565110996875207; -0.11530848519611218 0.8340789042962363 -0.5394592984181178; -0.10509130245506526 0.529790390551152 0.8415925143606946]), [-1.9446965531412321, 0.6847761465599951, 2.0933013457636576])
Dx = SE3(SO3([0.9342734748371675 0.0711145538018024 0.3493934665291487; 0.19000641400993626 0.7298839037724779 -0.6566331164729152; -0.301712838392352 0.6798619030740132 0.6683989496534326]), [-2.4532916843899053, -0.4064369573914039, 2.436031800215442])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
