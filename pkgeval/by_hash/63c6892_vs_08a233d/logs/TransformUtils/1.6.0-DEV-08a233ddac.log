Julia Version 1.6.0-DEV.1145
Commit 08a233ddac (2020-10-06 16:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_zGig04/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_zGig04/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0033140844541107587 -0.10616403714814265; -0.0033140844541107587 0.0 0.1270030181570132; 0.10616403714814265 -0.1270030181570132 0.0])
dAA = so3([0.0 -0.008430625311027727 0.04281944807997227; 0.008430625311027727 0.0 -0.06508066468944072; -0.04281944807997227 0.06508066468944072 0.0])
dAA = so3([0.0 0.03998232124045983 -0.11293803352334371; -0.03998232124045983 0.0 0.06603696972379006; 0.11293803352334371 -0.06603696972379006 0.0])
dAA = Quaternion(0.9993019424814201, [0.0030045759366818386, -0.024844865088495115, -0.027736851930881313])
dAA = SO3([0.9933912798618949 -0.09460094683082368 -0.06499558410429299; 0.09207354130938031 0.9949141283167244 -0.04084532123172377; 0.06852903096568921 0.034591012336798385 0.9970492634671666])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9940671950000244 -0.01226133747593895 0.10807437914734785; 0.02962269832356618 0.9865849570216485 -0.16053852597623738; -0.1046561396613431 0.16278753693662543 0.9810949547568228]), [-1.270030181570132, -1.0616403714814264, -0.033140844541107585])
xj = SE3(SO3([0.9827021565999763 0.13725123999450328 -0.12433249186647378; -0.13953196449672847 0.9901692350214996 -0.009783501449992562; 0.12176741065424365 0.02696262481490934 0.9921923778006215]), [-0.6603696972379005, -1.129380335233437, -0.3998232124045982])
Dx = SE3(SO3([0.9599949559054012 0.16294663546166369 -0.22772368921109215; -0.1298871631170015 0.9795923676882465 0.15338878063389402; 0.2480705736148564 -0.11767407173485187 0.9615684080437217]), [0.642412408154296, -0.13399780167365472, -0.28298666884384716])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
