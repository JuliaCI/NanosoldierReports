Julia Version 1.6.0-DEV.1147
Commit a919005a5a (2020-10-06 16:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_fJ78d0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_fJ78d0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(25, 0.0098513365f0), Item(11, 0.024946332f0), Item(38, 0.0503484f0), Item(48, 0.07520449f0)])
Vsorted = Item[Item(25, 0.0098513365f0), Item(11, 0.024946332f0), Item(38, 0.0503484f0), Item(48, 0.07520449f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004141497611999512, 0.003962500890096029, 301.0, 52.83805020991713))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037789106369018554, 0.0035871028900146484, 301.0, 76.60352408885956))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037588993708292644, 0.003747407595316569, 301.0, 43.01943790912628))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0031919320424397784, 0.003527696927388509, 301.0, 10.438521225805744))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003483891487121582, 0.004185096422831217, 301.0, 47.83719629328698))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.6271413167317707e-5, 2.3698806762695314e-5, 301.0, 187.30677650868893))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.290971120198568e-5, 0.008513863881429036, 300.0, 25.412715177983046)
p = PerformanceResult(1.0, 1.0, 1.0, 3.3235549926757814e-5, 1.9733111063639323e-5, 300.0, 25.412715177983046)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0032827059427897134, 0.0034611304601033527, 300.0, 1.3105235833845654)
p = PerformanceResult(1.0, 1.0, 1.0, 2.7026070488823784e-5, 1.5036265055338542e-5, 300.0, 1.3105235833845654)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.290971120198568e-5, 0.008513863881429036, 300.0, 25.412715177983046), PerformanceResult(1.0, 1.0, 1.0, 3.3235549926757814e-5, 1.9733111063639323e-5, 300.0, 25.412715177983046), PerformanceResult(1.0, 1.0, 1.0, 0.0032827059427897134, 0.0034611304601033527, 300.0, 1.3105235833845654), PerformanceResult(1.0, 1.0, 1.0, 2.7026070488823784e-5, 1.5036265055338542e-5, 300.0, 1.3105235833845654))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008832661310831706, 0.0035327990849812825, 346.93333333333334, 28684.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006537254651387533, 0.0028669357299804686, 303.46666666666664, 6978.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8175443013509115e-5, 7.494290669759115e-6, 98.76666666666667, 52.731667780317366))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5234947204589843e-5, 7.367134094238281e-6, 87.63333333333334, 76.47123038768768))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6419092814127603e-5, 8.96453857421875e-6, 95.33333333333333, 42.925949811935425))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.670851389567057e-5, 6.026426951090495e-5, 99.7, 47.73964961152524))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8, 0.8, 0.8, 1.750787099202474e-5, 2.32696533203125e-5, 71.0, 197.01989515125751))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-06T18:30:58.815
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9155000000000001, 0.904, 0.90815873015873, 1.4226436614990235e-5, 1.4290809631347656e-5, 151.55, 50.272516686760355))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4421939849853516e-5, 1.0669231414794922e-5, 154.89, 0.0))
*** advance 1 from 1000; 2020-10-06T18:30:59.378
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.902, 0.8960000000000001, 0.8977142857142857, 1.4383792877197265e-5, 1.5740394592285155e-5, 151.6, 75.6580053716898))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3701915740966797e-5, 1.257181167602539e-5, 154.9, 0.0))
*** advance 1 from 1000; 2020-10-06T18:30:59.894
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9128888888888887, 0.8969999999999999, 0.9020364372469636, 1.53350830078125e-5, 2.1610260009765625e-5, 151.43, 40.76290893461555))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4717578887939452e-5, 1.8529891967773437e-5, 154.83, 0.0))
*** advance 1 from 1000; 2020-10-06T18:31:00.493
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9137500000000004, 0.9040000000000005, 0.9073809523809527, 4.263162612915039e-5, 0.0001900792121887207, 151.4, 46.021151205699425))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.126548767089844e-5, 0.00020303964614868164, 154.74, 0.0))
*** advance 1 from 1000; 2020-10-06T18:31:00.883
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9559999999999998, 0.9559999999999998, 0.9559999999999998, 2.6352405548095703e-5, 5.9230327606201174e-5, 165.06, 193.45842200960033))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.7430057525634765e-5, 7.57598876953125e-5, 169.85, 0.0))
*** advance 1 from 1000; 2020-10-06T18:31:01.603
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9155000000000001, 0.904, 0.90815873015873, 1.9788742065429688e-5, 4.5289993286132814e-5, 151.55, 50.283268813975155))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9826889038085937e-5, 4.793882369995117e-5, 154.89, 0.014003942138515413))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:03.027
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7179999999999996, 0.7179999999999996, 0.7179999999999996, 0.0014471006393432617, 5.492925643920898e-5, 199.88, 204.61666890978813))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:03.768
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7660000000000001, 0.7660000000000001, 0.7660000000000001, 0.0012659049034118653, 6.298065185546876e-5, 206.38, 115.68889140337706))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:04.419
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6259999999999998, 0.6259999999999998, 0.6259999999999998, 0.001500372886657715, 6.160974502563477e-5, 273.56, 5.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:05.296
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9329999999999999, 0.9329999999999999, 0.9329999999999999, 0.0014762449264526366, 1.2679100036621094e-5, 223.86, 624.8000202476978))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:06.260
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.572, 0.572, 0.5720000000000001, 0.0013805675506591798, 0.0001978898048400879, 253.31, 2382.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:07.091
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.376, 0.376, NaN, 0.0013080072402954102, 0.0003341078758239746, 245.14, 3754.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-06T18:31:07.902
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5790000000000002, 0.5790000000000002, NaN, 0.0015564990043640137, 1.9669532775878906e-5, 245.49, 2388.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0766355140186916, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550652472527479,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.359375,"distances_sum":627.8860306441784}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.097142857142857, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9437786172161178,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.203125,"distances_sum":609.3400513827801}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.097142857142857,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9437786172161178,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.203125,"distances_sum":609.3400513827801}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.097142857142857,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9437786172161178,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.203125,"distances_sum":609.3400513827801}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.097142857142857,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9437786172161178,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.203125,"distances_sum":609.3400513827801}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8871527777777766, conf: {"restarts":9}, perf: {"precision":0.8871527777777766,"recall":0.8871527777777766,"f1":0.8871527777777766,"seconds":2.3441389203071594e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":51.9453125,"distances_sum":280.6680029630661}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8984374999999987, conf: {"restarts":11}, perf: {"precision":0.8984374999999987,"recall":0.8984374999999987,"f1":0.8984374999999987,"seconds":1.5195459127426147e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":55.28125,"distances_sum":280.4443350210786}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8984374999999987,"state":{"restarts":11},"perf":{"precision":0.8984374999999987,"recall":0.8984374999999987,"f1":0.8984374999999987,"seconds":1.5195459127426147e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":55.28125,"distances_sum":280.4443350210786}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6140619029423005, conf: {"restarts":15}, perf: {"precision":0.9192708333333323,"recall":0.9192708333333323,"f1":0.9192708333333323,"seconds":1.8728896975517273e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":61.3359375,"distances_sum":279.19283682852983}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5161521895190235, conf: {"restarts":18}, perf: {"precision":0.9157986111111099,"recall":0.9157986111111099,"f1":0.9157986111111099,"seconds":1.76355242729187e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":65.296875,"distances_sum":278.90050961077213}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.754395680465181, conf: {"restarts":12}, perf: {"precision":0.9045138888888874,"recall":0.9045138888888874,"f1":0.9045138888888874,"seconds":1.3407319784164429e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":56.4296875,"distances_sum":279.3981102332473}, best_list's length: 8, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5798528861737937, conf: {"restarts":16}, perf: {"precision":0.9123263888888877,"recall":0.9123263888888877,"f1":0.9123263888888877,"seconds":1.7102807760238647e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":62.6640625,"distances_sum":280.18172162026167}, best_list's length: 11, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6788553259141494, conf: {"restarts":13}, perf: {"precision":0.9088541666666655,"recall":0.9088541666666655,"f1":0.9088541666666655,"seconds":1.601874828338623e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":58.96875,"distances_sum":280.1118451207876}, best_list's length: 12, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.754395680465181,"state":{"restarts":12},"perf":{"precision":0.9045138888888874,"recall":0.9045138888888874,"f1":0.9045138888888874,"seconds":1.3407319784164429e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":56.4296875,"distances_sum":279.3981102332473}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.845616079230993, conf: {"restarts":10}, perf: {"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":1.3509765267372131e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":53.640625,"distances_sum":280.94962341338396}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.845616079230993,"state":{"restarts":10},"perf":{"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":1.3509765267372131e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":53.640625,"distances_sum":280.94962341338396}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.845616079230993,"state":{"restarts":10},"perf":{"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":1.3509765267372131e-5,"exhaustive_search_seconds":6.8265944719314575e-6,"evaluations":53.640625,"distances_sum":280.94962341338396}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.865451388888888, conf: {"restarts":16}, perf: {"precision":0.865451388888888,"recall":0.865451388888888,"f1":null,"seconds":3.2143667340278625e-5,"exhaustive_search_seconds":1.767277717590332e-5,"evaluations":165.6171875,"distances_sum":128.10351036768407}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444436, conf: {"restarts":5}, perf: {"precision":0.8741319444444436,"recall":0.8741319444444436,"f1":0.8741319444444436,"seconds":1.819990575313568e-5,"exhaustive_search_seconds":1.767277717590332e-5,"evaluations":91.5234375,"distances_sum":127.16461650189012}, best_list's length: 9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8741319444444436,"state":{"restarts":5},"perf":{"precision":0.8741319444444436,"recall":0.8741319444444436,"f1":0.8741319444444436,"seconds":1.819990575313568e-5,"exhaustive_search_seconds":1.767277717590332e-5,"evaluations":91.5234375,"distances_sum":127.16461650189012}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8741319444444436,"state":{"restarts":5},"perf":{"precision":0.8741319444444436,"recall":0.8741319444444436,"f1":0.8741319444444436,"seconds":1.819990575313568e-5,"exhaustive_search_seconds":1.767277717590332e-5,"evaluations":91.5234375,"distances_sum":127.16461650189012}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888878, conf: {"restarts":12}, perf: {"precision":0.8498263888888878,"recall":0.8498263888888878,"f1":0.8498263888888878,"seconds":8.309632539749146e-5,"exhaustive_search_seconds":0.00021653808653354645,"evaluations":231.21875,"distances_sum":56.60281107737683}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777769, conf: {"restarts":15}, perf: {"precision":0.8480902777777769,"recall":0.8480902777777769,"f1":0.8480902777777769,"seconds":8.016638457775116e-5,"exhaustive_search_seconds":0.00021653808653354645,"evaluations":248.5078125,"distances_sum":56.64054765342735}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111096, conf: {"restarts":11}, perf: {"precision":0.8454861111111096,"recall":0.8454861111111096,"f1":0.8454861111111096,"seconds":7.073953747749329e-5,"exhaustive_search_seconds":0.00021653808653354645,"evaluations":219.1484375,"distances_sum":56.58521039201878}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8498263888888878,"state":{"restarts":12},"perf":{"precision":0.8498263888888878,"recall":0.8498263888888878,"f1":0.8498263888888878,"seconds":8.309632539749146e-5,"exhaustive_search_seconds":0.00021653808653354645,"evaluations":231.21875,"distances_sum":56.60281107737683}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8498263888888878,"state":{"restarts":12},"perf":{"precision":0.8498263888888878,"recall":0.8498263888888878,"f1":0.8498263888888878,"seconds":8.309632539749146e-5,"exhaustive_search_seconds":0.00021653808653354645,"evaluations":231.21875,"distances_sum":56.60281107737683}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(12), SatNeighborhood(32), 2020-10-06T18:31:13.529
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3095, 0.027074315f0), Item(5919, 0.0402368f0), Item(1028, 0.04190155f0), Item(885, 0.051086277f0), Item(842, 0.056460112f0), Item(765, 0.058205314f0), Item(1870, 0.05970417f0), Item(367, 0.062566996f0), Item(8769, 0.06489865f0), Item(5717, 0.06610571f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9301356629481632,"seconds":0.0030593760311603546,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.15625,"distances_sum":613.4250856637955}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9301356629481632,"seconds":0.0030593760311603546,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.15625,"distances_sum":613.4250856637955}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.041036717062635,"state":{"bsize":3},"perf":{"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":1.0047107934951782e-5,"exhaustive_search_seconds":4.6174973249435425e-6,"evaluations":32.5546875,"distances_sum":285.23639239370823}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.041036717062635,"state":{"bsize":3},"perf":{"precision":0.967881944444444,"recall":0.967881944444444,"f1":0.967881944444444,"seconds":1.0047107934951782e-5,"exhaustive_search_seconds":4.6174973249435425e-6,"evaluations":32.5546875,"distances_sum":285.23639239370823}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.31852986217458,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":1.8319115042686462e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":61.21875,"distances_sum":123.18462216481566}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.31852986217458,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":1.8319115042686462e-5,"exhaustive_search_seconds":1.889839768409729e-5,"evaluations":61.21875,"distances_sum":123.18462216481566}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.08503375559432, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.302710294723511e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.9921875,"distances_sum":54.27942069713026}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.08503375559432,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.302710294723511e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.9921875,"distances_sum":54.27942069713026}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.65542499618495, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.24129718542099e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.390625,"distances_sum":54.27719322312623}, best_list's length: 13, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.65542499618495,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.24129718542099e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.390625,"distances_sum":54.27719322312623}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.65542499618495,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.24129718542099e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.390625,"distances_sum":54.27719322312623}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.65542499618495,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.24129718542099e-5,"exhaustive_search_seconds":0.00021174177527427673,"evaluations":102.390625,"distances_sum":54.27719322312623}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(7), SatNeighborhood(32), 2020-10-06T18:31:16.766
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7670, 0.025886005f0), Item(5407, 0.033008143f0), Item(2315, 0.04508445f0), Item(8144, 0.048022695f0), Item(710, 0.05206853f0), Item(5109, 0.054810926f0), Item(5933, 0.05716412f0), Item(3330, 0.05788675f0), Item(6513, 0.05881584f0), Item(7674, 0.06108086f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
