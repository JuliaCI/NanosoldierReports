Julia Version 1.6.0-DEV.1147
Commit a919005a5a (2020-10-06 16:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_4FGirZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_4FGirZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.265090 seconds (379.87 k allocations: 15.440 MiB, 4.53% gc time, 93.52% compilation time)
Running: chebyshev_quadrature with k=1
  1.513534 seconds (2.19 M allocations: 126.704 MiB, 3.06% gc time, 98.09% compilation time)
Running: chebyshev_quadrature with k=2
  0.207971 seconds (409.38 k allocations: 23.564 MiB, 84.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.359582 seconds (473.74 k allocations: 26.612 MiB, 7.57% gc time, 88.55% compilation time)
Running: chebyshev_quadrature with k=4
  0.262940 seconds (418.56 k allocations: 23.262 MiB, 4.37% gc time, 91.48% compilation time)
Running: jacobi_quadrature with α=β=1
 30.765505 seconds (36.41 M allocations: 3.000 GiB, 12.06% gc time, 82.86% compilation time)
Running: laguerre_quadrature with k=1
  2.326546 seconds (3.17 M allocations: 177.071 MiB, 3.80% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.205944 seconds (206.21 k allocations: 11.842 MiB, 99.14% compilation time)
Running: lobatto_quadrature
  0.309525 seconds (330.04 k allocations: 19.963 MiB, 99.35% compilation time)
Running: radau_quadrature
  0.397908 seconds (448.39 k allocations: 27.433 MiB, 4.98% gc time, 99.49% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 50.007977 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time, 0.08% compilation time)
Running: rectangle_rule_midpoint.
  0.106925 seconds (172.46 k allocations: 3.827 MiB, 21.27% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 50.639625 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time, 0.05% compilation time)
Running: rombergs_method
  0.380239 seconds (722.88 k allocations: 41.720 MiB, 5.75% gc time, 99.46% compilation time)
Running: simpsons_rule
  0.029552 seconds (45.77 k allocations: 2.043 MiB, 94.31% compilation time)
Running: simpsons38_rule
  0.067918 seconds (108.47 k allocations: 5.753 MiB, 97.04% compilation time)
Running: trapezoidal_rule
  0.225954 seconds (1.51 M allocations: 25.674 MiB, 7.29% gc time, 31.36% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.072750 seconds (30.99 k allocations: 1.865 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.342012 seconds (290.88 k allocations: 15.420 MiB, 8.31% gc time, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.136393 seconds (93.80 k allocations: 2.675 MiB, 98.45% compilation time)
Running: chebyshev_quadrature with k=3
  0.149618 seconds (82.06 k allocations: 2.476 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=4
  0.169221 seconds (64.67 k allocations: 2.122 MiB, 99.07% compilation time)
Running: jacobi_quadrature with α=β=1
  1.761331 seconds (503.77 k allocations: 161.822 MiB, 6.64% gc time, 26.66% compilation time)
Running: legendre_quadrature
  0.155604 seconds (41.26 k allocations: 2.380 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.018300 seconds (15.65 k allocations: 999.716 KiB, 99.06% compilation time)
Running: radau_quadrature
  0.018686 seconds (15.76 k allocations: 1006.931 KiB, 99.05% compilation time)
Running: rectangle_rule_left
 13.927700 seconds (471.41 M allocations: 7.025 GiB, 4.10% gc time)
Running: rectangle_rule_midpoint
  0.000013 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.138219 seconds (476.96 M allocations: 7.107 GiB, 4.21% gc time)
Running: rombergs_method
  0.339846 seconds (326.43 k allocations: 18.527 MiB, 1.22% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000017 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.048705 seconds (18.91 k allocations: 1.146 MiB, 99.79% compilation time)
Running: trapezoidal_rule
  0.055296 seconds (17.40 k allocations: 1.054 MiB, 99.83% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032699 seconds (1.99 k allocations: 53.594 KiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.090902 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.106638 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.097542 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.102523 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: jacobi_quadrature with α=β=1
  0.307998 seconds (363.64 k allocations: 18.991 MiB, 9.21% gc time, 99.27% compilation time)
Running: legendre_quadrature
  0.058959 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000046 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000371 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000242 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000377 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.078891 seconds (1.04 k allocations: 56.531 KiB, 99.68% compilation time)
Running: simpsons_rule
  0.000023 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027327 seconds (923 allocations: 39.281 KiB, 99.73% compilation time)
Running: trapezoidal_rule
  0.019819 seconds (44.33 k allocations: 704.859 KiB, 93.50% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.046308 seconds (72.31 k allocations: 4.214 MiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.151451 seconds (230.62 k allocations: 13.027 MiB, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.183101 seconds (283.17 k allocations: 15.881 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.183504 seconds (234.76 k allocations: 13.133 MiB, 13.38% gc time, 98.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.144798 seconds (234.76 k allocations: 13.067 MiB, 98.71% compilation time)
Running: jacobi_quadrature with α=β=1
  1.022926 seconds (446.72 k allocations: 163.207 MiB, 9.89% gc time, 42.63% compilation time)
Running: legendre_quadrature
  0.126480 seconds (185.44 k allocations: 10.708 MiB, 98.67% compilation time)
Running: lobatto_quadrature
  0.144341 seconds (196.61 k allocations: 11.415 MiB, 95.43% compilation time)
Running: radau_quadrature
  0.177554 seconds (196.61 k allocations: 11.409 MiB, 99.02% compilation time)
Running: rectangle_rule_left
  0.676479 seconds (18.82 k allocations: 1.147 MiB, 5.61% compilation time)
Running: rectangle_rule_midpoint
  0.024130 seconds (24.67 k allocations: 1.555 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.679976 seconds (17.39 k allocations: 1.065 MiB, 2.99% gc time, 7.46% compilation time)
Running: rombergs_method
  0.114493 seconds (134.27 k allocations: 7.759 MiB, 97.69% compilation time)
Running: simpsons_rule
  0.026490 seconds (27.54 k allocations: 1.729 MiB, 99.27% compilation time)
Running: simpsons38_rule
  0.028406 seconds (42.37 k allocations: 2.678 MiB, 99.39% compilation time)
Running: trapezoidal_rule
  0.021311 seconds (44.10 k allocations: 1.772 MiB, 96.92% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.056286 seconds (99.53 k allocations: 2.979 MiB, 96.97% compilation time)
Running: chebyshev_quadrature with k=1
  0.189686 seconds (237.20 k allocations: 13.054 MiB, 99.05% compilation time)
Running: chebyshev_quadrature with k=2
  0.176832 seconds (290.20 k allocations: 15.871 MiB, 10.52% gc time, 98.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.156261 seconds (241.33 k allocations: 13.116 MiB, 98.86% compilation time)
Running: chebyshev_quadrature with k=4
  0.152014 seconds (241.34 k allocations: 13.141 MiB, 98.85% compilation time)
Running: hermite_quadrature with k=2
 11.813103 seconds (20.10 M allocations: 1.056 GiB, 8.19% gc time, 99.95% compilation time)
Running: jacobi_quadrature with α=β=1
  1.009825 seconds (455.90 k allocations: 49.401 MiB, 65.39% gc time, 96.49% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.185489 seconds (276.26 k allocations: 15.282 MiB, 98.21% compilation time)
Running: legendre_quadrature
  0.261364 seconds (191.98 k allocations: 11.043 MiB, 48.48% gc time, 99.17% compilation time)
Running: lobatto_quadrature
  0.181161 seconds (217.27 k allocations: 37.185 MiB, 83.65% compilation time)
Running: radau_quadrature
  0.177687 seconds (213.85 k allocations: 29.846 MiB, 7.95% gc time, 81.18% compilation time)
Running: rectangle_rule_left
  0.028488 seconds (21.73 k allocations: 1.293 MiB, 99.42% compilation time)
Running: rectangle_rule_midpoint
  0.022142 seconds (26.47 k allocations: 1.642 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.020675 seconds (18.50 k allocations: 1.117 MiB, 99.34% compilation time)
Running: rombergs_method
  0.097876 seconds (136.74 k allocations: 7.808 MiB, 97.64% compilation time)
Running: simpsons_rule
  0.033168 seconds (39.38 k allocations: 2.061 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.046633 seconds (57.34 k allocations: 3.063 MiB, 30.61% gc time, 99.13% compilation time)
Running: trapezoidal_rule
  0.024390 seconds (30.13 k allocations: 1.697 MiB, 98.93% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031429 seconds (59.92 k allocations: 2.280 MiB, 97.09% compilation time)
Running: chebyshev_quadrature with k=1
  0.161860 seconds (232.72 k allocations: 12.824 MiB, 98.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.221672 seconds (285.38 k allocations: 15.706 MiB, 98.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.201518 seconds (236.87 k allocations: 12.928 MiB, 10.63% gc time, 98.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.153056 seconds (236.87 k allocations: 12.929 MiB, 98.64% compilation time)
Running: hermite_quadrature with k=2
  0.140205 seconds (170.79 k allocations: 9.790 MiB, 98.50% compilation time)
Running: jacobi_quadrature with α=β=1
  7.182749 seconds (449.16 k allocations: 1.175 GiB, 21.99% gc time, 6.39% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.195705 seconds (271.55 k allocations: 15.063 MiB, 98.26% compilation time)
Running: legendre_quadrature
  0.167556 seconds (187.55 k allocations: 10.817 MiB, 12.33% gc time, 98.53% compilation time)
Running: lobatto_quadrature
  0.174509 seconds (208.03 k allocations: 22.913 MiB, 91.14% compilation time)
Running: radau_quadrature
  0.190438 seconds (207.18 k allocations: 20.844 MiB, 8.00% gc time, 92.77% compilation time)
Running: rectangle_rule_left
  0.022649 seconds (19.52 k allocations: 1.188 MiB, 99.40% compilation time)
Running: rectangle_rule_midpoint
  0.021682 seconds (25.36 k allocations: 1.591 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.021596 seconds (17.36 k allocations: 1.062 MiB, 99.38% compilation time)
Running: rombergs_method
  0.102247 seconds (132.58 k allocations: 7.622 MiB, 97.71% compilation time)
Running: simpsons_rule
  0.028621 seconds (31.90 k allocations: 1.853 MiB, 99.02% compilation time)
Running: simpsons38_rule
  0.031314 seconds (48.16 k allocations: 2.821 MiB, 99.07% compilation time)
Running: trapezoidal_rule
  0.023780 seconds (25.05 k allocations: 1.535 MiB, 99.14% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027922 seconds (30.87 k allocations: 1.875 MiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=1
  0.168748 seconds (231.10 k allocations: 13.042 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.244990 seconds (283.67 k allocations: 15.985 MiB, 10.45% gc time, 98.42% compilation time)
Running: chebyshev_quadrature with k=3
  0.198534 seconds (235.25 k allocations: 13.146 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.164192 seconds (235.25 k allocations: 12.971 MiB, 98.50% compilation time)
Running: jacobi_quadrature with α=β=1
  0.927585 seconds (447.26 k allocations: 194.236 MiB, 7.54% gc time, 45.47% compilation time)
Running: legendre_quadrature
  0.143080 seconds (185.93 k allocations: 10.745 MiB, 98.50% compilation time)
Running: lobatto_quadrature
  0.153880 seconds (197.11 k allocations: 11.441 MiB, 98.51% compilation time)
Running: radau_quadrature
  0.159792 seconds (197.11 k allocations: 11.443 MiB, 9.86% gc time, 98.52% compilation time)
Running: rectangle_rule_left
  0.350452 seconds (19.34 k allocations: 1.173 MiB, 6.80% compilation time)
Running: rectangle_rule_midpoint
  0.018779 seconds (25.01 k allocations: 1.573 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.168242 seconds (17.73 k allocations: 1.081 MiB, 17.57% compilation time)
Running: rombergs_method
  0.118092 seconds (145.02 k allocations: 8.483 MiB, 97.00% compilation time)
Running: simpsons_rule
  0.066116 seconds (28.23 k allocations: 1.758 MiB, 99.61% compilation time)
Running: simpsons38_rule
  0.028326 seconds (43.08 k allocations: 2.708 MiB, 99.22% compilation time)
Running: trapezoidal_rule
  0.020971 seconds (45.03 k allocations: 1.805 MiB, 96.98% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036410 seconds (31.64 k allocations: 1.826 MiB, 99.22% compilation time)
Running: chebyshev_quadrature with k=1
  0.232001 seconds (231.69 k allocations: 12.989 MiB, 98.63% compilation time)
Running: chebyshev_quadrature with k=2
  0.189750 seconds (284.30 k allocations: 15.892 MiB, 13.81% gc time, 98.09% compilation time)
Running: chebyshev_quadrature with k=3
  0.153057 seconds (235.84 k allocations: 13.067 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=4
  0.160751 seconds (235.84 k allocations: 13.142 MiB, 98.40% compilation time)
Running: jacobi_quadrature with α=β=1
  1.460407 seconds (447.97 k allocations: 148.916 MiB, 10.68% gc time, 37.02% compilation time)
Running: legendre_quadrature
  0.140301 seconds (186.53 k allocations: 10.754 MiB, 98.41% compilation time)
Running: lobatto_quadrature
  0.185076 seconds (197.71 k allocations: 11.461 MiB, 98.81% compilation time)
Running: radau_quadrature
  0.155180 seconds (197.70 k allocations: 11.458 MiB, 98.42% compilation time)
Running: rectangle_rule_left
  0.720416 seconds (19.59 k allocations: 1.186 MiB, 3.43% compilation time)
Running: rectangle_rule_midpoint
  0.047921 seconds (25.01 k allocations: 1.574 MiB, 45.16% gc time, 99.56% compilation time)
Running: rectangle_rule_right
  0.723839 seconds (17.69 k allocations: 1.078 MiB, 3.25% compilation time)
Running: rombergs_method
  0.113226 seconds (135.49 k allocations: 7.815 MiB, 96.93% compilation time)
Running: simpsons_rule
  0.030289 seconds (28.93 k allocations: 1.785 MiB, 99.42% compilation time)
Running: simpsons38_rule
  0.037134 seconds (43.78 k allocations: 2.734 MiB, 99.47% compilation time)
Running: trapezoidal_rule
  0.033221 seconds (57.27 k allocations: 2.006 MiB, 97.69% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.141100 seconds (146.67 k allocations: 8.788 MiB, 99.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.135624 seconds (69.93 k allocations: 2.205 MiB, 98.27% compilation time)
Running: chebyshev_quadrature with k=2
  0.149415 seconds (105.09 k allocations: 2.868 MiB, 97.60% compilation time)
Running: chebyshev_quadrature with k=3
  0.182285 seconds (92.57 k allocations: 2.654 MiB, 95.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.161340 seconds (72.10 k allocations: 2.248 MiB, 98.43% compilation time)
Running: jacobi_quadrature with α=β=1
  1.874421 seconds (480.10 k allocations: 167.755 MiB, 10.07% gc time, 24.87% compilation time)
Running: legendre_quadrature
  0.096021 seconds (18.73 k allocations: 1.094 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000042 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.379822 seconds (590.00 M allocations: 8.792 GiB, 4.93% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.869939 seconds (592.75 M allocations: 8.833 GiB, 4.98% gc time)
Running: rombergs_method
  0.116299 seconds (20.51 k allocations: 1.165 MiB, 99.49% compilation time)
Running: simpsons_rule
  0.000024 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025796 seconds (463 allocations: 22.578 KiB, 99.58% compilation time)
Running: trapezoidal_rule
  0.021326 seconds (179 allocations: 8.766 KiB, 99.54% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.879260 seconds (629.32 M allocations: 9.387 GiB, 3.86% gc time, 0.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.448491 seconds (414.10 k allocations: 22.964 MiB, 4.74% gc time, 99.27% compilation time)
Running: chebyshev_quadrature with k=2
 18.571590 seconds (468.74 k allocations: 4.040 GiB, 2.77% gc time, 2.20% compilation time)
Running: chebyshev_quadrature with k=3
  8.265819 seconds (249.12 k allocations: 1.642 GiB, 3.30% gc time, 2.03% compilation time)
Running: chebyshev_quadrature with k=4
 11.243177 seconds (249.12 k allocations: 2.260 GiB, 1.83% gc time, 1.38% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 37.802173 seconds (484.14 k allocations: 13.254 GiB, 5.25% gc time, 1.07% compilation time)
Running: legendre_quadrature.
  9.524913 seconds (223.36 k allocations: 1.976 GiB, 1.00% gc time, 1.99% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.924663 seconds (8.23 M allocations: 13.383 GiB, 6.01% gc time, 0.54% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.462426 seconds (7.23 M allocations: 13.369 GiB, 9.01% gc time, 0.52% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.934191 seconds (22.25 k allocations: 1.347 MiB, 0.18% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.858728 seconds (30.45 k allocations: 1.884 MiB, 0.33% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.707318 seconds (22.45 k allocations: 1.357 MiB, 0.24% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.922231 seconds (438.21 k allocations: 152.677 MiB, 1.72% gc time, 9.48% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.441063 seconds (600.04 M allocations: 8.943 GiB, 5.50% gc time, 0.11% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.901584 seconds (600.05 M allocations: 8.943 GiB, 5.72% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.069776 seconds (600.03 M allocations: 8.943 GiB, 5.38% gc time, 0.12% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.049583 seconds (180.45 k allocations: 4.404 MiB, 88.78% compilation time)
Running: chebyshev_quadrature with k=1
  0.193495 seconds (247.70 k allocations: 13.453 MiB, 97.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.195234 seconds (272.34 k allocations: 14.523 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.177424 seconds (220.25 k allocations: 11.631 MiB, 99.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.192748 seconds (220.25 k allocations: 11.626 MiB, 97.17% compilation time)
Running: jacobi_quadrature with α=β=1
  0.323552 seconds (388.84 k allocations: 34.965 MiB, 92.60% compilation time)
Running: laguerre_quadrature with k=2
  0.195896 seconds (180.54 k allocations: 10.483 MiB, 80.68% compilation time)
Running: legendre_quadrature
  0.107617 seconds (145.99 k allocations: 8.082 MiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.020866 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.018204 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.042427 seconds (18.88 k allocations: 1.122 MiB, 58.48% compilation time)
Running: rectangle_rule_midpoint
  0.036400 seconds (25.48 k allocations: 1.576 MiB, 64.44% compilation time)
Running: rectangle_rule_right
  0.039264 seconds (17.48 k allocations: 1.049 MiB, 55.99% compilation time)
Running: rombergs_method
  0.322982 seconds (172.07 k allocations: 9.857 MiB, 34.72% gc time, 99.16% compilation time)
Running: simpsons_rule
  0.000921 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.040174 seconds (78.86 k allocations: 3.384 MiB, 97.53% compilation time)
Running: trapezoidal_rule
  0.092286 seconds (2.39 M allocations: 37.691 MiB, 30.25% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001201 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.107831 seconds (2.46 k allocations: 1.691 MiB, 98.17% compilation time)
Running: chebyshev_quadrature with k=2
  0.105040 seconds (2.71 k allocations: 2.355 MiB, 96.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.101803 seconds (2.31 k allocations: 2.028 MiB, 92.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.115992 seconds (2.31 k allocations: 1.469 MiB, 98.06% compilation time)
Running: jacobi_quadrature with α=β=1
  4.090850 seconds (365.92 k allocations: 904.797 MiB, 5.91% gc time, 7.59% compilation time)
Running: legendre_quadrature
  0.069421 seconds (1.27 k allocations: 68.203 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000145 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000114 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.842467 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.899732 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062087 seconds (997 allocations: 56.672 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000026 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000509 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000237 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.103263 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.103563 seconds (2.79 k allocations: 780.188 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.100381 seconds (2.39 k allocations: 661.047 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=4
  0.098356 seconds (2.39 k allocations: 491.547 KiB, 99.31% compilation time)
Running: jacobi_quadrature with α=β=1
  1.837294 seconds (372.48 k allocations: 252.962 MiB, 7.91% gc time, 21.94% compilation time)
Running: legendre_quadrature
  0.064379 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000032 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.306680 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000126 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.300436 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.076897 seconds (1.21 k allocations: 64.938 KiB, 99.76% compilation time)
Running: simpsons_rule
  0.000027 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000262 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
