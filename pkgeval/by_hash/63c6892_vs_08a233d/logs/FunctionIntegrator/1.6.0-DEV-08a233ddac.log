Julia Version 1.6.0-DEV.1145
Commit 08a233ddac (2020-10-06 16:39 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_zAFbVW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_zAFbVW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.237093 seconds (379.87 k allocations: 15.441 MiB, 5.74% gc time, 93.22% compilation time)
Running: chebyshev_quadrature with k=1
  1.271580 seconds (2.20 M allocations: 126.889 MiB, 4.20% gc time, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.241544 seconds (409.38 k allocations: 23.555 MiB, 84.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.285252 seconds (473.75 k allocations: 26.620 MiB, 15.37% gc time, 90.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.215780 seconds (418.55 k allocations: 23.251 MiB, 5.28% gc time, 90.22% compilation time)
Running: jacobi_quadrature with α=β=1
 28.163618 seconds (36.42 M allocations: 3.001 GiB, 10.87% gc time, 80.93% compilation time)
Running: laguerre_quadrature with k=1
  2.318705 seconds (3.17 M allocations: 177.133 MiB, 2.56% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.162209 seconds (206.07 k allocations: 11.829 MiB, 99.02% compilation time)
Running: lobatto_quadrature
  0.300102 seconds (330.07 k allocations: 19.961 MiB, 9.05% gc time, 99.31% compilation time)
Running: radau_quadrature
  0.258617 seconds (448.64 k allocations: 27.445 MiB, 99.26% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 46.661989 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.094539 seconds (172.46 k allocations: 3.827 MiB, 26.54% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 47.300110 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time, 0.05% compilation time)
Running: rombergs_method
  0.376340 seconds (723.05 k allocations: 41.724 MiB, 3.80% gc time, 99.44% compilation time)
Running: simpsons_rule
  0.038035 seconds (45.77 k allocations: 2.043 MiB, 95.56% compilation time)
Running: simpsons38_rule
  0.072504 seconds (108.48 k allocations: 5.753 MiB, 97.27% compilation time)
Running: trapezoidal_rule
  0.147945 seconds (1.51 M allocations: 25.674 MiB, 9.37% gc time, 28.87% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084582 seconds (30.98 k allocations: 1.865 MiB, 99.73% compilation time)
Running: chebyshev_quadrature with k=1
  0.384772 seconds (290.70 k allocations: 15.405 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.099211 seconds (93.80 k allocations: 2.675 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.414656 seconds (82.06 k allocations: 2.476 MiB, 66.15% gc time, 99.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.141463 seconds (64.67 k allocations: 2.122 MiB, 98.79% compilation time)
Running: jacobi_quadrature with α=β=1
  1.966762 seconds (504.15 k allocations: 161.821 MiB, 2.41% gc time, 20.13% compilation time)
Running: legendre_quadrature
  0.146702 seconds (41.13 k allocations: 2.369 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.017437 seconds (15.52 k allocations: 988.544 KiB, 99.13% compilation time)
Running: radau_quadrature
  0.016408 seconds (15.63 k allocations: 995.759 KiB, 99.11% compilation time)
Running: rectangle_rule_left
 12.641811 seconds (471.41 M allocations: 7.025 GiB, 3.96% gc time)
Running: rectangle_rule_midpoint
  0.000014 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.088682 seconds (476.96 M allocations: 7.107 GiB, 3.82% gc time)
Running: rombergs_method
  0.326523 seconds (326.45 k allocations: 18.524 MiB, 2.05% gc time, 99.89% compilation time)
Running: simpsons_rule
  0.000017 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.067053 seconds (18.91 k allocations: 1.146 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.060295 seconds (17.40 k allocations: 1.054 MiB, 99.85% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.024796 seconds (1.99 k allocations: 53.594 KiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.098763 seconds (2.46 k allocations: 116.359 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=2
  0.083458 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.085799 seconds (2.31 k allocations: 109.297 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=4
  0.094103 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.242586 seconds (364.10 k allocations: 18.999 MiB, 99.23% compilation time)
Running: legendre_quadrature
  0.058773 seconds (1.28 k allocations: 65.891 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000029 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000193 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000159 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000203 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074849 seconds (1.04 k allocations: 56.531 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000019 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.038157 seconds (923 allocations: 39.281 KiB, 99.81% compilation time)
Running: trapezoidal_rule
  0.018798 seconds (44.33 k allocations: 704.859 KiB, 93.61% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.048507 seconds (72.31 k allocations: 4.214 MiB, 99.45% compilation time)
Running: chebyshev_quadrature with k=1
  0.206068 seconds (230.61 k allocations: 12.965 MiB, 13.93% gc time, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.170138 seconds (283.17 k allocations: 15.882 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.149991 seconds (234.76 k allocations: 13.134 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.160643 seconds (234.76 k allocations: 13.067 MiB, 12.60% gc time, 98.80% compilation time)
Running: jacobi_quadrature with α=β=1
  1.278719 seconds (447.18 k allocations: 163.211 MiB, 8.97% gc time, 26.88% compilation time)
Running: legendre_quadrature
  0.155893 seconds (185.44 k allocations: 10.708 MiB, 8.86% gc time, 98.91% compilation time)
Running: lobatto_quadrature
  0.145326 seconds (196.77 k allocations: 11.435 MiB, 98.63% compilation time)
Running: radau_quadrature
  0.136955 seconds (196.76 k allocations: 11.417 MiB, 98.69% compilation time)
Running: rectangle_rule_left
  0.628870 seconds (18.82 k allocations: 1.147 MiB, 3.54% compilation time)
Running: rectangle_rule_midpoint
  0.019022 seconds (24.67 k allocations: 1.555 MiB, 99.27% compilation time)
Running: rectangle_rule_right
  0.540751 seconds (17.39 k allocations: 1.065 MiB, 3.38% compilation time)
Running: rombergs_method
  0.099938 seconds (134.27 k allocations: 7.759 MiB, 97.27% compilation time)
Running: simpsons_rule
  0.031000 seconds (27.54 k allocations: 1.729 MiB, 99.46% compilation time)
Running: simpsons38_rule
  0.042301 seconds (42.37 k allocations: 2.678 MiB, 32.47% gc time, 99.55% compilation time)
Running: trapezoidal_rule
  0.022556 seconds (44.10 k allocations: 1.772 MiB, 97.22% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.032461 seconds (99.53 k allocations: 2.979 MiB, 94.44% compilation time)
Running: chebyshev_quadrature with k=1
  0.157893 seconds (237.20 k allocations: 13.055 MiB, 98.84% compilation time)
Running: chebyshev_quadrature with k=2
  0.162516 seconds (290.20 k allocations: 15.871 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=3
  0.159334 seconds (241.33 k allocations: 13.120 MiB, 10.83% gc time, 98.88% compilation time)
Running: chebyshev_quadrature with k=4
  0.141958 seconds (241.34 k allocations: 13.137 MiB, 98.71% compilation time)
Running: hermite_quadrature with k=2
 11.613766 seconds (20.10 M allocations: 1.056 GiB, 10.19% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.419342 seconds (456.36 k allocations: 49.425 MiB, 28.84% gc time, 93.94% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.142716 seconds (276.26 k allocations: 15.266 MiB, 97.74% compilation time)
Running: legendre_quadrature
  0.113510 seconds (191.98 k allocations: 11.106 MiB, 98.23% compilation time)
Running: lobatto_quadrature
  0.166249 seconds (217.42 k allocations: 37.193 MiB, 11.09% gc time, 71.71% compilation time)
Running: radau_quadrature
  0.178986 seconds (214.01 k allocations: 29.854 MiB, 8.01% gc time, 80.38% compilation time)
Running: rectangle_rule_left
  0.022036 seconds (21.73 k allocations: 1.293 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.021753 seconds (26.47 k allocations: 1.642 MiB, 99.31% compilation time)
Running: rectangle_rule_right
  0.020425 seconds (18.50 k allocations: 1.117 MiB, 99.29% compilation time)
Running: rombergs_method
  0.100464 seconds (136.74 k allocations: 7.808 MiB, 97.63% compilation time)
Running: simpsons_rule
  0.028074 seconds (39.38 k allocations: 2.061 MiB, 98.84% compilation time)
Running: simpsons38_rule
  0.026223 seconds (57.34 k allocations: 3.063 MiB, 98.64% compilation time)
Running: trapezoidal_rule
  0.020518 seconds (30.13 k allocations: 1.697 MiB, 98.66% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036006 seconds (59.92 k allocations: 2.280 MiB, 97.26% compilation time)
Running: chebyshev_quadrature with k=1
  0.185784 seconds (232.72 k allocations: 12.824 MiB, 8.94% gc time, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.189388 seconds (285.38 k allocations: 15.647 MiB, 98.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.140596 seconds (236.87 k allocations: 12.928 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=4
  0.183724 seconds (236.87 k allocations: 12.929 MiB, 9.46% gc time, 98.92% compilation time)
Running: hermite_quadrature with k=2
  0.124066 seconds (170.78 k allocations: 9.790 MiB, 98.26% compilation time)
Running: jacobi_quadrature with α=β=1
  6.328173 seconds (449.62 k allocations: 1.175 GiB, 20.89% gc time, 5.48% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.158723 seconds (271.55 k allocations: 15.063 MiB, 97.94% compilation time)
Running: legendre_quadrature
  0.159011 seconds (187.55 k allocations: 10.834 MiB, 96.89% compilation time)
Running: lobatto_quadrature
  0.173312 seconds (208.18 k allocations: 22.921 MiB, 9.60% gc time, 89.98% compilation time)
Running: radau_quadrature
  0.186118 seconds (207.34 k allocations: 20.853 MiB, 93.40% compilation time)
Running: rectangle_rule_left
  0.025721 seconds (19.52 k allocations: 1.188 MiB, 99.38% compilation time)
Running: rectangle_rule_midpoint
  0.016704 seconds (25.36 k allocations: 1.591 MiB, 99.33% compilation time)
Running: rectangle_rule_right
  0.015248 seconds (17.36 k allocations: 1.062 MiB, 99.32% compilation time)
Running: rombergs_method
  0.074520 seconds (132.58 k allocations: 7.622 MiB, 97.43% compilation time)
Running: simpsons_rule
  0.034106 seconds (31.90 k allocations: 1.851 MiB, 99.34% compilation time)
Running: simpsons38_rule
  0.026640 seconds (48.16 k allocations: 2.823 MiB, 98.98% compilation time)
Running: trapezoidal_rule
  0.024078 seconds (25.05 k allocations: 1.535 MiB, 99.23% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.042251 seconds (30.87 k allocations: 1.875 MiB, 37.18% gc time, 99.52% compilation time)
Running: chebyshev_quadrature with k=1
  0.160778 seconds (231.10 k allocations: 13.042 MiB, 98.54% compilation time)
Running: chebyshev_quadrature with k=2
  0.224801 seconds (283.67 k allocations: 16.001 MiB, 98.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.143159 seconds (235.25 k allocations: 13.146 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.169505 seconds (235.25 k allocations: 12.971 MiB, 11.71% gc time, 98.62% compilation time)
Running: jacobi_quadrature with α=β=1
  2.326612 seconds (447.72 k allocations: 194.260 MiB, 1.77% gc time, 16.31% compilation time)
Running: legendre_quadrature
  0.128345 seconds (185.93 k allocations: 10.746 MiB, 98.19% compilation time)
Running: lobatto_quadrature
  0.162198 seconds (197.26 k allocations: 11.448 MiB, 9.82% gc time, 98.51% compilation time)
Running: radau_quadrature
  0.165056 seconds (197.26 k allocations: 11.447 MiB, 98.49% compilation time)
Running: rectangle_rule_left
  0.344745 seconds (19.34 k allocations: 1.173 MiB, 8.21% compilation time)
Running: rectangle_rule_midpoint
  0.018349 seconds (25.01 k allocations: 1.573 MiB, 99.27% compilation time)
Running: rectangle_rule_right
  0.154092 seconds (17.73 k allocations: 1.081 MiB, 13.32% compilation time)
Running: rombergs_method
  0.111434 seconds (145.02 k allocations: 8.483 MiB, 97.02% compilation time)
Running: simpsons_rule
  0.026553 seconds (28.23 k allocations: 1.758 MiB, 99.31% compilation time)
Running: simpsons38_rule
  0.027650 seconds (43.08 k allocations: 2.708 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.032517 seconds (45.03 k allocations: 1.805 MiB, 84.82% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025788 seconds (31.64 k allocations: 1.827 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=1
  0.175157 seconds (231.69 k allocations: 12.988 MiB, 12.74% gc time, 98.56% compilation time)
Running: chebyshev_quadrature with k=2
  0.185092 seconds (284.30 k allocations: 15.891 MiB, 97.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.162552 seconds (235.84 k allocations: 13.067 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=4
  0.187083 seconds (235.84 k allocations: 13.143 MiB, 11.08% gc time, 98.64% compilation time)
Running: jacobi_quadrature with α=β=1
  1.685576 seconds (448.44 k allocations: 149.018 MiB, 9.83% gc time, 20.75% compilation time)
Running: legendre_quadrature
  0.126019 seconds (186.53 k allocations: 10.750 MiB, 98.05% compilation time)
Running: lobatto_quadrature
  0.137078 seconds (197.86 k allocations: 11.468 MiB, 98.32% compilation time)
Running: radau_quadrature
  0.171343 seconds (197.85 k allocations: 11.462 MiB, 13.43% gc time, 98.62% compilation time)
Running: rectangle_rule_left
  0.693859 seconds (19.59 k allocations: 1.186 MiB, 3.28% compilation time)
Running: rectangle_rule_midpoint
  0.019412 seconds (25.01 k allocations: 1.574 MiB, 99.07% compilation time)
Running: rectangle_rule_right
  0.689237 seconds (17.69 k allocations: 1.078 MiB, 3.13% compilation time)
Running: rombergs_method
  0.105493 seconds (135.49 k allocations: 7.815 MiB, 96.74% compilation time)
Running: simpsons_rule
  0.024866 seconds (28.93 k allocations: 1.785 MiB, 99.30% compilation time)
Running: simpsons38_rule
  0.025696 seconds (43.78 k allocations: 2.734 MiB, 99.23% compilation time)
Running: trapezoidal_rule
  0.020873 seconds (57.27 k allocations: 2.006 MiB, 96.36% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.141315 seconds (146.67 k allocations: 8.789 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.136271 seconds (69.93 k allocations: 2.205 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=2
  0.151309 seconds (105.09 k allocations: 2.930 MiB, 97.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.154775 seconds (92.57 k allocations: 2.654 MiB, 97.86% compilation time)
Running: chebyshev_quadrature with k=4
  0.162216 seconds (72.10 k allocations: 2.248 MiB, 98.20% compilation time)
Running: jacobi_quadrature with α=β=1
  1.633138 seconds (480.62 k allocations: 167.781 MiB, 5.66% gc time, 21.71% compilation time)
Running: legendre_quadrature
  0.109422 seconds (18.73 k allocations: 1.094 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.000109 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 20.929991 seconds (590.00 M allocations: 8.792 GiB, 5.71% gc time)
Running: rectangle_rule_midpoint
  0.000041 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.407644 seconds (592.75 M allocations: 8.833 GiB, 5.75% gc time)
Running: rombergs_method
  0.140552 seconds (20.51 k allocations: 1.165 MiB, 13.82% gc time, 98.74% compilation time)
Running: simpsons_rule
  0.000048 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026915 seconds (463 allocations: 22.578 KiB, 99.60% compilation time)
Running: trapezoidal_rule
  0.019773 seconds (179 allocations: 8.766 KiB, 99.46% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.606603 seconds (629.32 M allocations: 9.387 GiB, 4.11% gc time, 0.57% compilation time)
Running: chebyshev_quadrature with k=1
  0.431690 seconds (413.97 k allocations: 22.953 MiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=2
 17.838588 seconds (468.61 k allocations: 4.040 GiB, 2.84% gc time, 2.36% compilation time)
Running: chebyshev_quadrature with k=3
  7.726760 seconds (249.12 k allocations: 1.642 GiB, 4.20% gc time, 2.16% compilation time)
Running: chebyshev_quadrature with k=4
 10.698285 seconds (249.12 k allocations: 2.260 GiB, 1.72% gc time, 1.43% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 31.576087 seconds (484.47 k allocations: 13.254 GiB, 6.97% gc time, 1.04% compilation time)
Running: legendre_quadrature.
  9.421375 seconds (223.23 k allocations: 1.976 GiB, 1.05% gc time, 2.01% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.108794 seconds (8.23 M allocations: 13.383 GiB, 8.67% gc time, 0.61% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.138751 seconds (7.23 M allocations: 13.369 GiB, 7.60% gc time, 0.49% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.484813 seconds (22.25 k allocations: 1.347 MiB, 0.14% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.733931 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.912587 seconds (22.45 k allocations: 1.357 MiB, 0.25% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.758621 seconds (438.08 k allocations: 152.666 MiB, 1.82% gc time, 10.61% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.984952 seconds (600.04 M allocations: 8.943 GiB, 5.97% gc time, 0.13% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.269083 seconds (600.05 M allocations: 8.943 GiB, 5.77% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.764607 seconds (600.03 M allocations: 8.943 GiB, 5.95% gc time, 0.12% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.045707 seconds (180.45 k allocations: 4.404 MiB, 86.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.187654 seconds (247.70 k allocations: 13.449 MiB, 98.02% compilation time)
Running: chebyshev_quadrature with k=2
  0.177767 seconds (272.34 k allocations: 14.524 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=3
  0.165447 seconds (220.25 k allocations: 11.631 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.175792 seconds (220.25 k allocations: 11.626 MiB, 99.17% compilation time)
Running: jacobi_quadrature with α=β=1
  0.362045 seconds (389.30 k allocations: 34.995 MiB, 93.34% compilation time)
Running: laguerre_quadrature with k=2
  0.161114 seconds (180.54 k allocations: 10.477 MiB, 78.28% compilation time)
Running: legendre_quadrature
  0.103244 seconds (145.99 k allocations: 8.082 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.020207 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.019973 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.042488 seconds (18.88 k allocations: 1.122 MiB, 56.93% compilation time)
Running: rectangle_rule_midpoint
  0.030625 seconds (25.48 k allocations: 1.576 MiB, 60.69% compilation time)
Running: rectangle_rule_right
  0.035275 seconds (17.48 k allocations: 1.049 MiB, 61.62% compilation time)
Running: rombergs_method
  0.189192 seconds (172.21 k allocations: 9.866 MiB, 98.61% compilation time)
Running: simpsons_rule
  0.000968 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.140164 seconds (78.86 k allocations: 3.384 MiB, 77.37% gc time, 99.48% compilation time)
Running: trapezoidal_rule
  0.083496 seconds (2.39 M allocations: 37.691 MiB, 30.49% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001341 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.126630 seconds (2.46 k allocations: 1.691 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=2
  0.141225 seconds (2.71 k allocations: 2.355 MiB, 97.35% compilation time)
Running: chebyshev_quadrature with k=3
  0.105667 seconds (2.31 k allocations: 2.028 MiB, 91.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.109848 seconds (2.31 k allocations: 1.469 MiB, 97.69% compilation time)
Running: jacobi_quadrature with α=β=1
  4.872090 seconds (366.38 k allocations: 904.821 MiB, 6.07% gc time, 6.19% compilation time)
Running: legendre_quadrature
  0.066176 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000190 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000119 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.802916 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000364 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.860265 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.061530 seconds (997 allocations: 56.672 KiB, 99.57% compilation time)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000575 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000203 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.106301 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.105658 seconds (2.79 k allocations: 780.188 KiB, 99.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.115661 seconds (2.39 k allocations: 661.047 KiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=4
  0.101061 seconds (2.39 k allocations: 491.547 KiB, 99.29% compilation time)
Running: jacobi_quadrature with α=β=1
  2.286254 seconds (372.94 k allocations: 252.986 MiB, 9.57% gc time, 14.37% compilation time)
Running: legendre_quadrature
  0.066089 seconds (1.32 k allocations: 67.859 KiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000136 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.338052 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000138 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.264461 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.088659 seconds (1.21 k allocations: 64.938 KiB, 99.54% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000015 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000273 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
