Julia Version 1.6.0-DEV.1147
Commit a919005a5a (2020-10-06 16:43 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Compat ─────────────────────── v3.18.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed Missings ───────────────────── v0.4.4
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed ColorTypes ─────────────────── v0.10.9
  Installed Tables ─────────────────────── v1.1.0
  Installed MappedArrays ───────────────── v0.2.2
  Installed AugmentedGaussianProcesses ─── v0.8.4
  Installed Crayons ────────────────────── v4.0.4
  Installed DataValueInterfaces ────────── v1.0.0
  Installed MCMCChains ─────────────────── v4.2.2
  Installed Colors ─────────────────────── v0.12.4
  Installed MacroTools ─────────────────── v0.5.5
  Installed DataFrames ─────────────────── v0.21.7
  Installed InvertedIndices ────────────── v1.0.0
  Installed Transducers ────────────────── v0.4.51
  Installed LoopVectorization ──────────── v0.8.26
  Installed Distributions ──────────────── v0.23.12
  Installed CompositionsBase ───────────── v0.1.0
  Installed IntervalSets ───────────────── v0.5.1
  Installed ProgressLogging ────────────── v0.1.3
  Installed ZipFile ────────────────────── v0.9.2
  Installed TableTraits ────────────────── v1.0.0
  Installed GPUArrays ──────────────────── v5.2.1
  Installed Distances ──────────────────── v0.9.1
  Installed TerminalLoggers ────────────── v0.1.2
  Installed ChainRulesCore ─────────────── v0.9.13
  Installed SIMDPirates ────────────────── v0.8.25
  Installed Combinatorics ──────────────── v0.7.0
  Installed DocStringExtensions ────────── v0.8.3
  Installed ArgCheck ───────────────────── v2.1.0
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed CategoricalArrays ──────────── v0.8.3
  Installed Requires ───────────────────── v1.1.0
  Installed KernelFunctions ────────────── v0.8.6
  Installed Rmath ──────────────────────── v0.6.1
  Installed ScientificTypes ────────────── v1.1.0
  Installed CEnum ──────────────────────── v0.4.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed Adapt ──────────────────────── v2.3.0
  Installed Flux ───────────────────────── v0.11.1
  Installed TimerOutputs ───────────────── v0.5.6
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed DataStructures ─────────────── v0.17.20
  Installed RangeArrays ────────────────── v0.3.2
  Installed RecipesBase ────────────────── v1.1.0
  Installed NNlib ──────────────────────── v0.7.5
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed EllipsisNotation ───────────── v0.4.0
  Installed ProgressMeter ──────────────── v1.4.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Polynomials ────────────────── v0.5.2
  Installed VectorizationBase ──────────── v0.12.33
  Installed DeterminantalPointProcesses ── v0.1.0
  Installed MLJModelInterface ──────────── v0.3.5
  Installed Media ──────────────────────── v0.5.0
  Installed AxisArrays ─────────────────── v0.4.3
  Installed SimpleTraits ───────────────── v0.9.3
  Installed ZygoteRules ────────────────── v0.2.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Parameters ─────────────────── v0.12.1
  Installed TranscodingStreams ─────────── v0.9.5
  Installed UnPack ─────────────────────── v1.0.2
  Installed DefineSingletons ───────────── v0.1.0
  Installed OrderedCollections ─────────── v1.3.1
  Installed FillArrays ─────────────────── v0.9.6
  Installed MLDataUtils ────────────────── v0.5.2
  Installed Parsers ────────────────────── v1.0.10
  Installed LLVM ───────────────────────── v2.0.0
  Installed LoggingExtras ──────────────── v0.4.2
  Installed CpuId ──────────────────────── v0.2.2
  Installed Zygote ─────────────────────── v0.5.8
  Installed ForwardDiff ────────────────── v0.10.12
  Installed MLDataPattern ──────────────── v0.5.3
  Installed Formatting ─────────────────── v0.4.1
  Installed Reexport ───────────────────── v0.2.0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed Clustering ─────────────────── v0.14.1
  Installed AbstractMCMC ───────────────── v2.1.0
  Installed IterTools ──────────────────── v1.3.0
  Installed CUDA ───────────────────────── v1.3.3
  Installed DataAPI ────────────────────── v1.3.0
  Installed ChainRules ─────────────────── v0.7.23
  Installed PDMats ─────────────────────── v0.10.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed CommonSubexpressions ───────── v0.3.0
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed DiffResults ────────────────── v1.0.2
  Installed IRTools ────────────────────── v0.4.1
  Installed Juno ───────────────────────── v0.8.4
  Installed QuadGK ─────────────────────── v2.4.1
  Installed InitialValues ──────────────── v0.2.10
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Functors ───────────────────── v0.1.0
  Installed ConstructionBase ───────────── v1.0.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed BangBang ───────────────────── v0.3.29
  Installed JSON ───────────────────────── v0.21.1
  Installed StructTypes ────────────────── v1.1.0
  Installed MLLabelUtils ───────────────── v0.5.2
  Installed ExprTools ──────────────────── v0.1.2
  Installed MuladdMacro ────────────────── v0.2.2
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed NearestNeighbors ───────────── v0.4.6
  Installed OffsetArrays ───────────────── v1.3.0
  Installed LearnBase ──────────────────── v0.3.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed FixedPointNumbers ──────────── v0.8.4
  Installed SplittablesBase ────────────── v0.1.10
  Installed NaturalSort ────────────────── v1.0.0
  Installed PooledArrays ───────────────── v0.5.3
  Installed StatsBase ──────────────────── v0.33.1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed GPUCompiler ────────────────── v0.6.1
  Installed ArrayLayouts ───────────────── v0.4.8
  Installed CodecZlib ──────────────────── v0.7.0
  Installed Setfield ───────────────────── v0.7.0
  Installed PrettyTables ───────────────── v0.9.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [38eea1fd] + AugmentedGaussianProcesses v0.8.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v2.1.0
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.3.0
  [0bf59076] + AdvancedHMC v0.2.25
  [dce04be8] + ArgCheck v2.1.0
  [4c555306] + ArrayLayouts v0.4.8
  [38eea1fd] + AugmentedGaussianProcesses v0.8.4
  [39de3d68] + AxisArrays v0.4.3
  [198e06fe] + BangBang v0.3.29
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v1.3.3
  [324d7699] + CategoricalArrays v0.8.3
  [082447d4] + ChainRules v0.7.23
  [d360d2e6] + ChainRulesCore v0.9.13
  [aaaa29a8] + Clustering v0.14.1
  [944b1d66] + CodecZlib v0.7.0
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.18.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [a33af91c] + CompositionsBase v0.1.0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [a8cc5b0e] + Crayons v4.0.4
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.7
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [4d968f93] + DeterminantalPointProcesses v0.1.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.1
  [31c24e10] + Distributions v0.23.12
  [ffbed154] + DocStringExtensions v0.8.3
  [da5c29d0] + EllipsisNotation v0.4.0
  [e2ba6199] + ExprTools v0.1.2
  [442a2c76] + FastGaussQuadrature v0.4.3
  [1a297f60] + FillArrays v0.9.6
  [53c48c17] + FixedPointNumbers v0.8.4
  [587475ba] + Flux v0.11.1
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [d9f16b24] + Functors v0.1.0
  [0c68f7d7] + GPUArrays v5.2.1
  [61eb1bfa] + GPUCompiler v0.6.1
  [7869d1d1] + IRTools v0.4.1
  [22cec73e] + InitialValues v0.2.10
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.1
  [e5e0dc1b] + Juno v0.8.4
  [ec8451be] + KernelFunctions v0.8.6
  [929cbde3] + LLVM v2.0.0
  [7f8f8fb0] + LearnBase v0.3.0
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [e6f89c97] + LoggingExtras v0.4.2
  [bdcacae8] + LoopVectorization v0.8.26
  [c7f686f2] + MCMCChains v4.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.2
  [e80e1ace] + MLJModelInterface v0.3.5
  [66a33bbf] + MLLabelUtils v0.5.2
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e89f7d12] + Media v0.5.0
  [e1d29d7a] + Missings v0.4.4
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.5
  [77ba4419] + NaNMath v0.3.4
  [c020b1a1] + NaturalSort v1.0.0
  [b8a86587] + NearestNeighbors v0.4.6
  [6fe1bfb0] + OffsetArrays v1.3.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.10.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [f27b6e38] + Polynomials v0.5.2
  [2dfb63ee] + PooledArrays v0.5.3
  [08abe8d2] + PrettyTables v0.9.1
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.4.0
  [1fd47b50] + QuadGK v2.4.1
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [321657f4] + ScientificTypes v1.1.0
  [efcf1570] + Setfield v0.7.0
  [699a6c99] + SimpleTraits v0.9.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [171d559e] + SplittablesBase v0.1.10
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [856f2bd8] + StructTypes v1.1.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [5d786b92] + TerminalLoggers v0.1.2
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [28d57a85] + Transducers v0.4.51
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [e88e6eb3] + Zygote v0.5.8
  [700de1a5] + ZygoteRules v0.2.0
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [9abbd945] + Profile
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
    Testing AugmentedGaussianProcesses
Status `/tmp/jl_S808d1/Project.toml`
  [38eea1fd] AugmentedGaussianProcesses v0.8.4
  [b4f34e82] Distances v0.9.1
  [31c24e10] Distributions v0.23.12
  [cc2ba9b6] MLDataUtils v0.5.2
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_S808d1/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v2.1.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [0bf59076] AdvancedHMC v0.2.25
  [dce04be8] ArgCheck v2.1.0
  [4c555306] ArrayLayouts v0.4.8
  [38eea1fd] AugmentedGaussianProcesses v0.8.4
  [39de3d68] AxisArrays v0.4.3
  [198e06fe] BangBang v0.3.29
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [324d7699] CategoricalArrays v0.8.3
  [082447d4] ChainRules v0.7.23
  [d360d2e6] ChainRulesCore v0.9.13
  [aaaa29a8] Clustering v0.14.1
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.18.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [a33af91c] CompositionsBase v0.1.0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [4d968f93] DeterminantalPointProcesses v0.1.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.1
  [31c24e10] Distributions v0.23.12
  [ffbed154] DocStringExtensions v0.8.3
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.2
  [442a2c76] FastGaussQuadrature v0.4.3
  [1a297f60] FillArrays v0.9.6
  [53c48c17] FixedPointNumbers v0.8.4
  [587475ba] Flux v0.11.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [d9f16b24] Functors v0.1.0
  [0c68f7d7] GPUArrays v5.2.1
  [61eb1bfa] GPUCompiler v0.6.1
  [7869d1d1] IRTools v0.4.1
  [22cec73e] InitialValues v0.2.10
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [e5e0dc1b] Juno v0.8.4
  [ec8451be] KernelFunctions v0.8.6
  [929cbde3] LLVM v2.0.0
  [7f8f8fb0] LearnBase v0.3.0
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.26
  [c7f686f2] MCMCChains v4.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.2
  [e80e1ace] MLJModelInterface v0.3.5
  [66a33bbf] MLLabelUtils v0.5.2
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e89f7d12] Media v0.5.0
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.7.5
  [77ba4419] NaNMath v0.3.4
  [c020b1a1] NaturalSort v1.0.0
  [b8a86587] NearestNeighbors v0.4.6
  [6fe1bfb0] OffsetArrays v1.3.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.10.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [f27b6e38] Polynomials v0.5.2
  [2dfb63ee] PooledArrays v0.5.3
  [08abe8d2] PrettyTables v0.9.1
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.4.0
  [1fd47b50] QuadGK v2.4.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [321657f4] ScientificTypes v1.1.0
  [efcf1570] Setfield v0.7.0
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [171d559e] SplittablesBase v0.1.10
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [856f2bd8] StructTypes v1.1.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [5d786b92] TerminalLoggers v0.1.2
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [28d57a85] Transducers v0.4.51
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [e88e6eb3] Zygote v0.5.8
  [700de1a5] ZygoteRules v0.2.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
WARNING: SqExponentialKernel changed convention in version 0.8.0.
This kernel now divides the squared distance by 2 to align with standard practice.
This warning will be removed in 0.9.0.
[ Info: Found best L :-21265.384735780328 2/10
[ Info: Found best L :-13807.17633154163 3/10
[ Info: Found best L :-8855.12876760346 4/10
[ Info: Found best L :-6850.905874124658 5/10
[ Info: Found best L :-5993.499036942319 6/10
[ Info: Found best L :-5219.574890482625 7/10
[ Info: Found best L :-4875.582888532044 8/10
[ Info: Found best L :-4634.742228865791 9/10
[ Info: Found best L :-4469.057593001495 10/10
[ Info: (21, 20.0, 0.6669458812735188)
[ Info: ρ_accept reset to : 0.6405348243750875
[ Info: (21, 20.0, 0.4645980305213298)
[ Info: ρ_accept reset to : 0.44619994851268513
[ Info: (21, 20.0, 0.4543587440464007)
[ Info: ρ_accept reset to : 0.4363661377821632
[ Info: (21, 20.0, 0.16382980651033607)
[ Info: ρ_accept reset to : 0.15734214617252676
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:51
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::BayesianSVM{Float64, Vector{Float64}}, ltype::Type{BayesianSVM}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/bayesiansvm.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/bayesiansvm.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, BayesianSVM{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:51
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::BayesianSVM{Float64, Vector{Float64}}, ltype::Type{BayesianSVM}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/bayesiansvm.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/bayesiansvm.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
GP: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:33
  Test threw exception
  Expression: train!(model, 10)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._GP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._GP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._GP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{GP{Float64, GaussianLikelihood{Float64, O, A} where A<:AbstractVector{Float64} where O, Analytic{Float64}, 1}}}, m::GP{Float64, GaussianLikelihood{Float64, O, A} where A<:AbstractVector{Float64} where O, Analytic{Float64}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::GP{Float64, GaussianLikelihood{Float64, O, A} where A<:AbstractVector{Float64} where O, Analytic{Float64}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:33 [inlined]
   [20] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [21] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:24 [inlined]
   [22] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [23] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:2
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:64
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, GaussianLikelihood{Float64, ADAM, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, GaussianLikelihood{Float64, ADAM, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, GaussianLikelihood{Float64, ADAM, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, GaussianLikelihood{Float64, Nothing, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, GaussianLikelihood{Float64, ADAM, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:92 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:65 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:63 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [26] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/gaussian.jl:2
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [30] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}}}, m::VGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, model2::VGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::HeteroscedasticLikelihood{Float64, Vector{Float64}}, ltype::Type{HeteroscedasticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:12
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:177
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._OSVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 2}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:27
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._OSVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 2}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._OSVGP{Float64}, AugmentedGaussianProcesses._OSVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}, Vector{Float64}}, Tuple{Vector{Float64}, Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{OnlineSVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}}}}, m::OnlineSVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(m::OnlineSVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, X::Matrix{Float64}, y::Vector{Float64}; iterations::Int64, callback::Nothing, Convergence::Int64)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/onlinetraining.jl:92
   [18] tests(model1::OnlineSVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, model2::OnlineSVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:32
   [19] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:201 [inlined]
   [20] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [21] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:178 [inlined]
   [22] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [23] tests_likelihood(l::HeteroscedasticLikelihood{Float64, Vector{Float64}}, ltype::Type{HeteroscedasticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:174
   [24] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:12
   [25] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:2
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [30] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 2}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 2}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}, Vector{Float64}}, Tuple{Vector{Float64}, Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}}}}, m::SVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, model2::SVGP{Float64, HeteroscedasticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 2}, 2}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::HeteroscedasticLikelihood{Float64, Vector{Float64}}, ltype::Type{HeteroscedasticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:12
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/heteroscedastic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LaplaceLikelihood{Float64, Vector{Float64}}, ltype::Type{LaplaceLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:110
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}, m::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::VGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:128 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:111 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LaplaceLikelihood{Float64, Vector{Float64}}, ltype::Type{LaplaceLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LaplaceLikelihood{Float64, Vector{Float64}}, ltype::Type{LaplaceLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:341
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}}, m::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::SVGP{Float64, LaplaceLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:362 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:342 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LaplaceLikelihood{Float64, Vector{Float64}}, ltype::Type{LaplaceLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/laplace.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:7
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:110
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}, m::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::VGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:128 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:111 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:7
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:7
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:341
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}}, m::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::SVGP{Float64, LogisticLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:362 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:342 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:7
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logistic.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}}}, m::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, model2::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticSoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:14
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:110
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}}}, m::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, model2::VGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:158 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:111 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticSoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:14
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:177
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._OSVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 3}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:27
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._OSVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 3}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._OSVGP{Float64}, AugmentedGaussianProcesses._OSVGP{Float64}, AugmentedGaussianProcesses._OSVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Vector{Vector{Float64}}, Vector{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{OnlineSVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}}}}, m::OnlineSVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(m::OnlineSVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, X::Matrix{Float64}, y::Vector{Int64}; iterations::Int64, callback::Nothing, Convergence::Int64)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/onlinetraining.jl:92
   [18] tests(model1::OnlineSVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, model2::OnlineSVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:32
   [19] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:201 [inlined]
   [20] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [21] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:178 [inlined]
   [22] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [23] tests_likelihood(l::LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticSoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:174
   [24] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:14
   [25] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:2
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [30] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 3}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 3}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Vector{Vector{Float64}}, Vector{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}, AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}}}}, m::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, model2::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticSoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:14
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:341
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::MCIntegrationVI{Float64, 3}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::MCIntegrationVI{Float64, 3}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}, AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}, AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}}}}, m::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, model2::SVGP{Float64, LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:414 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:342 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::LogisticSoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{LogisticSoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:14
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/logisticsoftmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::NegBinomialLikelihood{Float64, Vector{Float64}}, ltype::Type{NegBinomialLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/negativebinomial.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/negativebinomial.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, NegBinomialLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::NegBinomialLikelihood{Float64, Vector{Float64}}, ltype::Type{NegBinomialLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/negativebinomial.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/negativebinomial.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::PoissonLikelihood{Float64, Vector{Float64}}, ltype::Type{PoissonLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/poisson.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/poisson.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, PoissonLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::PoissonLikelihood{Float64, Vector{Float64}}, ltype::Type{PoissonLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/poisson.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/poisson.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:110
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}}}, m::VGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, model2::VGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:158 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:111 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::SoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{SoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/softmax.jl:12
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/softmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:341
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::MCIntegrationVI{Float64, 3}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::MCIntegrationVI{Float64, 3}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}, AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}, AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}, AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}}}}, m::SVGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, model2::SVGP{Float64, SoftMaxLikelihood{Float64, Vector{Float64}}, MCIntegrationVI{Float64, 3}, 3}, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:414 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:342 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::SoftMaxLikelihood{Float64, Vector{Float64}}, ltype::Type{SoftMaxLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Vector{Float64}}, y::Vector{Int64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/softmax.jl:12
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/softmax.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:71
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:97 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:72 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::StudentTLikelihood{Float64, Vector{Float64}}, ltype::Type{StudentTLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:110
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VGP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize
      @ ./broadcast.jl:837 [inlined]
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}, m::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::VGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:128 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:111 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::StudentTLikelihood{Float64, Vector{Float64}}, ltype::Type{StudentTLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:69
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:286
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::AnalyticVI{Float64, 1}, opt::AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64, Descent}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}}, m::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, model2::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:315 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:287 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::StudentTLikelihood{Float64, Vector{Float64}}, ltype::Type{StudentTLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
NumericalVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:341
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:12
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._SVGP{Float64}, X::SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, ∇E_μ::Vector{Float64}, ∇E_Σ::Vector{Float64}, i::QuadratureVI{Float64, 1}, opt::AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:60
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}}, Vector{SubArray{Float64, 2, Matrix{Float64}, Tuple{Vector{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Tuple{Vector{Float64}}, Tuple{Vector{Float64}}, Vector{Any}, Tuple{AugmentedGaussianProcesses.NVIOptimizer{Float64, Momentum}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{SimpleTraits.Not{AugmentedGaussianProcesses.IsFull{SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}}}}, m::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:15
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19 [inlined]
   [19] tests(model1::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, model2::SVGP{Float64, StudentTLikelihood{Float64, Vector{Float64}}, QuadratureVI{Float64, 1}, 1}, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, problem::String)
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:19
   [20] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:362 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:342 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] tests_likelihood(l::StudentTLikelihood{Float64, Vector{Float64}}, ltype::Type{StudentTLikelihood}, dict::Dict{String, Dict{String, Bool}}, floattypes::Vector{DataType}, problem::String, nLatent::Int64, X::Matrix{Float64}, f::Vector{Float64}, y::Vector{Float64}, k::TransformedKernel{SqExponentialKernel, ScaleTransform{Float64}})
      @ Main ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/testingtools.jl:284
   [25] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:8
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/likelihood/studentt.jl:2
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:31 [inlined]
   [30] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [31] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:30 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
Variational Student-T Process with a Gaussian likelihood (σ² = 0.001) infered by Analytic Variational Inference 
Variational Student-T Processes: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/models/VStP.jl:7
  Got exception outside of a @test
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] pullback(f::Function, ps::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:172
    [7] gradient(f::Function, args::Zygote.Params)
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [8] ∇L_ρ_reverse(f::Function, gp::AugmentedGaussianProcesses._VStP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/zygote_rules.jl:4
    [9] update_hyperparameters!(gp::AugmentedGaussianProcesses._VStP{Float64}, X::Matrix{Float64})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:37
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] copy
      @ ./broadcast.jl:876 [inlined]
   [14] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(AugmentedGaussianProcesses.update_hyperparameters!), Tuple{Tuple{AugmentedGaussianProcesses._VStP{Float64}}, Vector{Matrix{Float64}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [15] update_hyperparameters!(::Type{AugmentedGaussianProcesses.IsFull{VStP{Float64, GaussianLikelihood{Float64, Nothing, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}}}, m::VStP{Float64, GaussianLikelihood{Float64, Nothing, Vector{Float64}}, AnalyticVI{Float64, 1}, 1})
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/hyperparameter/autotuning.jl:8
   [16] update_hyperparameters!
      @ ~/.julia/packages/SimpleTraits/1wYi7/src/SimpleTraits.jl:331 [inlined]
   [17] train!(model::VStP{Float64, GaussianLikelihood{Float64, Nothing, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64; callback::Nothing, convergence::Nothing)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:41
   [18] train!(model::VStP{Float64, GaussianLikelihood{Float64, Nothing, Vector{Float64}}, AnalyticVI{Float64, 1}, 1}, iterations::Int64)
      @ AugmentedGaussianProcesses ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/src/training.jl:19
   [19] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/models/VStP.jl:23
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/models/VStP.jl:8
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:36 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [25] macro expansion
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:35 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [27] top-level scope
      @ ~/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:11
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
Test Summary:                       | Pass  Error  Broken  Total
AugmentedGaussianProcesses.jl tests |  335     31       6    372
  Functions                         |                      No tests
  Hyperparameters                   |                      No tests
  Inducing Points                   |   10                    10
  Inference                         |   41                    41
  Likelihoods                       |  252     30       6    288
    bayesiansvm                     |   19      2             21
      VGP                           |    5      1              6
        AnalyticVI                  |    3      1              4
        NumericalVI                 |    2                     2
      OSVGP                         |    7                     7
      SVGP                          |    5      1              6
        AnalyticVI                  |    3      1              4
        NumericalVI                 |    2                     2
      MCGP                          |    2                     2
    classification                  |    6                     6
    event                           |    2                     2
    gaussian                        |   21      2             23
      Likelihood                    |    6                     6
      GP                            |    4      1              5
      VGP                           |    3                     3
      SVGP                          |    6      1              7
        AnalyticVI                  |    4      1              5
      MCGP                          |    2                     2
    heteroscedastic                 |   19      3             22
      VGP                           |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      OSVGP                         |    5      1              6
        AnalyticVI                  |    3      1              4
        NumericalVI                 |    2                     2
      SVGP                          |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      MCGP                          |    2                     2
    laplace                         |   25      4       1     30
      VGP                           |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      OSVGP                         |    7                     7
      SVGP                          |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      MCGP                          |    2              1      3
    likelihood                      |    2                     2
    logistic                        |   25      4       1     30
      VGP                           |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      OSVGP                         |    7                     7
      SVGP                          |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      MCGP                          |    2              1      3
    logisticsoftmax                 |   25      5       1     31
      VGP                           |    9      2             11
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    5      1              6
      OSVGP                         |    5      1              6
        AnalyticVI                  |    3      1              4
        NumericalVI                 |    2                     2
      SVGP                          |    9      2             11
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    5      1              6
      MCGP                          |    2              1      3
    multiclass                      |   21                    21
    negativebinomial                |   21      2       1     24
      VGP                           |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      OSVGP                         |    7                     7
      SVGP                          |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      MCGP                          |    2              1      3
    poisson                         |   21      2       1     24
      VGP                           |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      OSVGP                         |    7                     7
      SVGP                          |    6      1              7
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    2                     2
      MCGP                          |    2              1      3
    regresion                       |    3                     3
    softmax                         |   17      2             19
      VGP                           |    6      1              7
        AnalyticVI                  |    1                     1
        NumericalVI                 |    5      1              6
      OSVGP                         |    3                     3
      SVGP                          |    6      1              7
        AnalyticVI                  |    1                     1
        NumericalVI                 |    5      1              6
      MCGP                          |    2                     2
    studentt                        |   25      4       1     30
      VGP                           |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      OSVGP                         |    7                     7
      SVGP                          |    8      2             10
        AnalyticVI                  |    4      1              5
        NumericalVI                 |    4      1              5
      MCGP                          |    2              1      3
  Models                            |    8      1              9
    Variational Student-T Processes |    8      1              9
  Prior                             |   24                    24
ERROR: LoadError: Some tests did not pass: 335 passed, 0 failed, 31 errored, 6 broken.
in expression starting at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/CMDVz/test/runtests.jl:10
ERROR: Package AugmentedGaussianProcesses errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
