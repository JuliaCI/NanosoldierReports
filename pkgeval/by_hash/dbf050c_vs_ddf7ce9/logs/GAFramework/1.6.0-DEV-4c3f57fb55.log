Julia Version 1.6.0-DEV.2
Commit 4c3f57fb55 (2020-05-08 16:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_HektG3/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_HektG3/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172334000986168
curgen: 20 fitness: 0.2172334000986168
curgen: 30 fitness: 0.2172334000986168
curgen: 40 fitness: 0.2172334000986168
curgen: 50 fitness: 0.2172334000986168
CoordinateCreature{Array{Float64,1}}([-0.22261994903853388], -0.2172334000986168) -0.22261994903853388 -0.2172334000986168
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258156422927575
curgen: 100 fitness: 3.258286174792415
curgen: 150 fitness: 3.2583737997469897
curgen: 200 fitness: 3.2584291713253926
curgen: 250 fitness: 3.2584291713253926
curgen: 300 fitness: 3.2584291713253926
curgen: 350 fitness: 3.2584318181778507
curgen: 400 fitness: 3.2584700225186314
curgen: 450 fitness: 3.2584700225186314
curgen: 500 fitness: 3.258475155976438
CoordinateCreature{Array{Float64,1}}([-0.22242584768133905, 0.22274851808960752, -0.22295345148350054, -0.22260933251526566, 0.22254414940566142, 0.22273955245041416, 0.22234472440131642, -0.22270144934903724, 0.2223660250171137, 0.22226590118784098, 0.22250523038920741, 0.22232742703364158, -0.22243663097252542, 0.22293706192931723, 0.22244921729853326], -3.258475155976438) [-0.22242584768133905, 0.22274851808960752, -0.22295345148350054, -0.22260933251526566, 0.22254414940566142, 0.22273955245041416, 0.22234472440131642, -0.22270144934903724, 0.2223660250171137, 0.22226590118784098, 0.22250523038920741, 0.22232742703364158, -0.22243663097252542, 0.22293706192931723, 0.22244921729853326] -3.258475155976438
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.006111034980278873
curgen: 100 fitness: -0.006111034980278873
curgen: 150 fitness: -0.006111034980278873
curgen: 200 fitness: -0.003228462642624663
curgen: 250 fitness: -0.003228462642624663
curgen: 300 fitness: -0.003228462642624663
curgen: 350 fitness: -0.002072671281524663
curgen: 400 fitness: -0.00206078540597332
curgen: 450 fitness: -0.0019131871922581922
curgen: 500 fitness: -0.0017935512262283737
CoordinateCreature{Array{Float64,1}}([-0.0003371082904676263, 0.0004543341349242903, 0.0007227540520556405, -0.0025536430039146693, 7.951857379883982e-5, -0.00024569154000588823, -0.00021775718658648526, 0.00040297784086115745, 0.0007118064026761942, 0.000308747807888702, -0.0003070940723286348, 0.0007317439935286717, 9.63700572183914e-5, -0.0003915036346683826, -7.901444726552785e-5], 0.0017935512262283737) [-0.0003371082904676263, 0.0004543341349242903, 0.0007227540520556405, -0.0025536430039146693, 7.951857379883982e-5, -0.00024569154000588823, -0.00021775718658648526, 0.00040297784086115745, 0.0007118064026761942, 0.000308747807888702, -0.0003070940723286348, 0.0007317439935286717, 9.63700572183914e-5, -0.0003915036346683826, -7.901444726552785e-5] 0.0017935512262283737
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
