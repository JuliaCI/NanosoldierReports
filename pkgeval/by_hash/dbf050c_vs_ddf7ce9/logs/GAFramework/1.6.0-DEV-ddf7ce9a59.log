Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_uElgXV/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_uElgXV/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21719698338517046
curgen: 20 fitness: 0.21719698338517046
curgen: 30 fitness: 0.21723281118189847
curgen: 40 fitness: 0.21723281118189847
curgen: 50 fitness: 0.21723281118189847
CoordinateCreature{Array{Float64,1}}([-0.22268405084521609], -0.21723281118189847) -0.22268405084521609 -0.21723281118189847
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257652588047308
curgen: 100 fitness: 3.258079230603578
curgen: 150 fitness: 3.2580936434609815
curgen: 200 fitness: 3.258352477876179
curgen: 250 fitness: 3.2584130585106483
curgen: 300 fitness: 3.258418715556277
curgen: 350 fitness: 3.2584446586548257
curgen: 400 fitness: 3.2584446586548257
curgen: 450 fitness: 3.2584468668596736
curgen: 500 fitness: 3.2584477701657026
CoordinateCreature{Array{Float64,1}}([-0.2225422017475247, 0.22269197583093672, -0.22262245114997756, 0.2224394431056548, 0.22316578890122998, 0.2224768684575212, -0.22225234044916908, -0.22326676081621338, 0.2223363127798767, -0.2225415258236177, -0.22237484932585416, -0.22273005185425837, -0.22240400494716386, 0.2222813324839806, 0.2227811886714192], -3.2584477701657026) [-0.2225422017475247, 0.22269197583093672, -0.22262245114997756, 0.2224394431056548, 0.22316578890122998, 0.2224768684575212, -0.22225234044916908, -0.22326676081621338, 0.2223363127798767, -0.2225415258236177, -0.22237484932585416, -0.22273005185425837, -0.22240400494716386, 0.2222813324839806, 0.2227811886714192] -3.2584477701657026
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001850837546612638
curgen: 100 fitness: -0.001425136194740162
curgen: 150 fitness: -0.0013866351094691254
curgen: 200 fitness: -0.0010568516577507125
curgen: 250 fitness: -0.001023809408991383
curgen: 300 fitness: -0.0008873581228669991
curgen: 350 fitness: -0.0007845093006721982
curgen: 400 fitness: -0.000528448239606405
curgen: 450 fitness: -0.0005057769647294208
curgen: 500 fitness: -0.0005057769647294208
CoordinateCreature{Array{Float64,1}}([-0.0006387889808422346, -0.0002466744074509442, -0.0004960626805999742, 0.000354746964139051, -1.970671452898061e-5, 0.00047760240226862806, -0.0002274856012075918, 0.0003242770257472105, -8.176452502007075e-5, -0.0007528213279015638, -0.00019749388626481758, -0.00022101024419638273, -5.613086958756398e-5, -0.0007353443305359968, -0.00034352028528266494], 0.0005057769647294208) [-0.0006387889808422346, -0.0002466744074509442, -0.0004960626805999742, 0.000354746964139051, -1.970671452898061e-5, 0.00047760240226862806, -0.0002274856012075918, 0.0003242770257472105, -8.176452502007075e-5, -0.0007528213279015638, -0.00019749388626481758, -0.00022101024419638273, -5.613086958756398e-5, -0.0007353443305359968, -0.00034352028528266494] 0.0005057769647294208
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
