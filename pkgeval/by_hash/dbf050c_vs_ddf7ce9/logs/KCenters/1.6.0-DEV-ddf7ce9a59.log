Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed OrderedCollections ────────── v1.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed JSON ──────────────────────── v0.21.0
  Installed Parsers ───────────────────── v1.0.3
  Installed DataFrames ────────────────── v0.20.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SimilaritySearch ──────────── v0.3.19
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed Compat ────────────────────── v3.9.0
  Installed DataStructures ────────────── v0.17.15
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_PH3QNH/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_PH3QNH/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9323044313987097
[ Info: 0.8321307849884033
[ Info: 0.5531853482623895
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3289614958812793
mean(cdnet.distances) = 0.3902406999220451
mean(crand.distances) = 0.3457032091667255
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.0,"distances_sum":1113.5279489222976}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.0,"distances_sum":1113.5279489222976}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.265625,"distances_sum":1229.1990153845964}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8455367549117558,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.6640625,"distances_sum":2342.539653965412}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8014178529803537,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.4375,"distances_sum":2045.873325957811}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8455367549117558,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.6640625,"distances_sum":2342.539653965412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9123522311022316,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.859375,"distances_sum":2786.9210563965753}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492247335997344,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9609375,"distances_sum":3090.506439690683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.91820054945055,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.8828125,"distances_sum":2834.139283335068}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9492247335997344,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9609375,"distances_sum":3090.506439690683}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9492247335997344,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9609375,"distances_sum":3090.506439690683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.3203125,"distances_sum":493.8190873423139}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1787109375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.3203125,"distances_sum":493.8190873423139}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1787109375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.3203125,"distances_sum":493.8190873423139}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7822422369297377,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.390625,"distances_sum":1363.890608319171}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7822422369297377,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.390625,"distances_sum":1363.890608319171}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8949836621711632,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3203125,"distances_sum":1763.5576277603134}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8234760031635041,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.640625,"distances_sum":1507.558862910234}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8949836621711632,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3203125,"distances_sum":1763.5576277603134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527415293040297,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2128.1336983346714}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9253267565767573,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.640625,"distances_sum":1971.0064734072535}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9033284423909431,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4453125,"distances_sum":1838.1580132117517}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9527415293040297,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2128.1336983346714}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9527415293040297,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2128.1336983346714}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8065973956598963,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.8203125,"distances_sum":1480.7374230193188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8361830877455886,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0546875,"distances_sum":1560.5084358170602}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.25390625,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.0625,"distances_sum":528.7814387359879}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7888564560439567,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.6171875,"distances_sum":1362.4555894039167}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8361830877455886,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0546875,"distances_sum":1560.5084358170602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9017144314019321,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4453125,"distances_sum":1970.0577463696934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468234890109893,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.796875,"distances_sum":2209.4647518227966}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8627435064935073,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1796875,"distances_sum":1677.0934113561905}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9293841575091581,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.640625,"distances_sum":2118.2582644763884}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9286317848817854,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.625,"distances_sum":2101.1510288229533}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9466746794871803,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2194.9441457978746}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8726310148185157,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2265625,"distances_sum":1739.5124312390958}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9468234890109893,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.796875,"distances_sum":2209.4647518227966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953130723443224,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.796875,"distances_sum":2244.1069221459434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609260531135537,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8046875,"distances_sum":2296.733311891361}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9610004578754584,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8203125,"distances_sum":2280.031326204922}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611263736263741,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2309.202363506839}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2311.007649020315}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742216117216123,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2385.733168915594}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9574633699633706,"seconds":4.466623067855835e-5,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2281.8259122328873}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751717032967037,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2371.2273171629713}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9651614010989014,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.859375,"distances_sum":2309.630371395929}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949133158508159,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2210.416127214345}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751717032967037,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2371.2273171629713}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751717032967037,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2371.2273171629713}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8052530802530811,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7265625,"distances_sum":1536.318437690496}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8430897227772234,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.078125,"distances_sum":1670.006651723288}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8430897227772234,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.078125,"distances_sum":1670.006651723288}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9373288170163175,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6640625,"distances_sum":2218.316130770006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.94398205960706,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2322.306003621914}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8613412629037636,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0625,"distances_sum":1731.319001139289}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.94398205960706,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2322.306003621914}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720638736263739,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9296875,"distances_sum":2422.821585779321}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2445.9291093655015}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965762362637363,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2426.5281777097784}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715773809523811,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2431.5714595433765}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559008699633702,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2366.8722361048985}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2445.9291093655015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2445.9291093655015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":2.8908252716064453e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.0078125,"distances_sum":541.3414094800681}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2763671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2763671875,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.1484375,"distances_sum":588.8896248484942}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2763671875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2763671875,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.1484375,"distances_sum":588.8896248484942}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":7,"bsize":1}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.328125,"distances_sum":656.6424251731725}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7820864898989905,"seconds":4.265457391738892e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.6328125,"distances_sum":1480.9324384842294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7900807525807534,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.6484375,"distances_sum":1495.8204700506449}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7996519105894113,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7734375,"distances_sum":1536.9914671381025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4228515625,"f1":0.570642551892552,"seconds":3.1869858503341675e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9609375,"distances_sum":879.8689246104559}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7996519105894113,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7734375,"distances_sum":1536.9914671381025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9085539460539467,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.484375,"distances_sum":2099.7869589069155}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8709946303696312,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1640625,"distances_sum":1872.5584229792778}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8601658757908764,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1171875,"distances_sum":1796.867470226807}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9085539460539467,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.484375,"distances_sum":2099.7869589069155}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8427734375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9085539460539467,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.484375,"distances_sum":2099.7869589069155}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7109375,"distances_sum":882.1867833756562}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8498834498834507,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8203125,"distances_sum":1809.3375728748065}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8498834498834507,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8203125,"distances_sum":1809.3375728748065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544013278388284,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.71875,"distances_sum":2456.702656262207}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9544013278388284,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.71875,"distances_sum":2456.702656262207}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969717261904762,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2527.3188239618967}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969717261904762,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2527.3188239618967}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969717261904762,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2527.3188239618967}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8480972152847162,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.0234375,"distances_sum":1495.5465130666494}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.42578125,"f1":0.5674832112332111,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.0234375,"distances_sum":786.9001256228587}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7785239066489074,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.4609375,"distances_sum":1286.9969040006524}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8480972152847162,"seconds":4.760921001434326e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.0234375,"distances_sum":1495.5465130666494}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9683436355311359,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.90625,"distances_sum":2111.5096680563697}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9543555402930408,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2063.6798072729175}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9350706585081592,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":1916.1345457694342}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8970040376290384,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3828125,"distances_sum":1698.6421979160452}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8982860889110897,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3125,"distances_sum":1749.713204926614}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9353854478854486,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.75,"distances_sum":1926.8983252372634}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9683436355311359,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.90625,"distances_sum":2111.5096680563697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762477106227109,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2189.391222939663}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762477106227109,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2189.391222939663}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762477106227109,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2189.391222939663}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6201171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6201171875,"f1":0.750496205183706,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.109375,"distances_sum":1278.4952811453359}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.416015625,"f1":0.5592211607836609,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.3359375,"distances_sum":839.5346635274062}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6201171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6201171875,"f1":0.750496205183706,"seconds":4.349276423454285e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.109375,"distances_sum":1278.4952811453359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8600050990675998,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.015625,"distances_sum":1673.9544677076012}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8600050990675998,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.015625,"distances_sum":1673.9544677076012}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9263507326007331,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6875,"distances_sum":1992.6849151683434}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8921531593406602,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.1953125,"distances_sum":1794.8929311613583}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.895590347152848,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.1953125,"distances_sum":1814.7006664897992}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9263507326007331,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6875,"distances_sum":1992.6849151683434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8720703125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9263507326007331,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6875,"distances_sum":1992.6849151683434}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7845238095238102,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.3125,"distances_sum":1283.4533988669903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.4296875,"distances_sum":766.1125182956455}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.54296875,"f1":null,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.609375,"distances_sum":1021.2592229942279}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7845238095238102,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.3125,"distances_sum":1283.4533988669903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9235977564102571,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.609375,"distances_sum":1879.4811386469812}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9523695054945063,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7890625,"distances_sum":2010.1094817136984}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.845645500333001,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.796875,"distances_sum":1517.088973061911}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9523695054945063,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7890625,"distances_sum":2010.1094817136984}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633756868131871,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8671875,"distances_sum":2077.6160772577286}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.90625,"distances_sum":2125.7817711184052}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2152.6874079520103}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967839972527473,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2101.5132298435055}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522206959706966,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.734375,"distances_sum":2042.9858624513852}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2152.6874079520103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714287,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2152.6874079520103}}, n: 9
mean(cfft.distances) = 0.6711630305341558
mean(cdnet.distances) = 0.4183944185381405
mean(crand.distances) = 0.37212346321780215
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8555555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9177777777777777
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.888888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9533333333333334
*** finished computation of 12 references, err: [Inf, 0.5075764004886151] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 28, 2]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 9, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 10, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 11: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
acc = 0.96
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.351851151600575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.351851151600575, 0.22725303297041394] ***
*** starting iteration: 2; err: [Inf, 0.351851151600575, 0.22725303297041394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.351851151600575, 0.22725303297041394, 0.22556254445579366] ***
*** starting iteration: 3; err: [Inf, 0.351851151600575, 0.22725303297041394, 0.22556254445579366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.351851151600575, 0.22725303297041394, 0.22556254445579366, 0.22487379474540253] ***
*** finished computation of 3 references, err: [Inf, 0.351851151600575, 0.22725303297041394, 0.22556254445579366, 0.22487379474540253] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [50, 182, 26]]
** centroid: 1, normalized-entropy: 0.72403778190267, [(1, 50), (2, 182), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [230, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [123, 56, 0]]
** centroid: 3, normalized-entropy: 0.896434996303629, [(1, 123), (2, 56)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3014030388399802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3014030388399802, 0.2473907322320785] ***
*** starting iteration: 2; err: [Inf, 0.3014030388399802, 0.2473907322320785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304] ***
*** starting iteration: 3; err: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304, 0.238997536584142] ***
*** starting iteration: 4; err: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304, 0.238997536584142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304, 0.238997536584142, 0.23822329699148512] ***
*** finished computation of 3 references, err: [Inf, 0.3014030388399802, 0.2473907322320785, 0.24060344306735304, 0.238997536584142, 0.23822329699148512] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [261, 15, 0]]
** centroid: 1, normalized-entropy: 0.30458668852140236, [(1, 261), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 164, 28]]
** centroid: 2, normalized-entropy: 0.5993142373098089, [(2, 164), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [154, 44, 0]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(1, 154), (2, 44)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4151335859858337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4151335859858337, 0.23623566640711305] ***
*** starting iteration: 2; err: [Inf, 0.4151335859858337, 0.23623566640711305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4151335859858337, 0.23623566640711305, 0.23585977567697705] ***
*** finished computation of 3 references, err: [Inf, 0.4151335859858337, 0.23623566640711305, 0.23585977567697705] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [210, 40, 0]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(1, 210), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [216, 32, 0]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(1, 216), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 141, 28]]
** centroid: 3, normalized-entropy: 0.6477274924606293, [(2, 141), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36640349902945374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36640349902945374, 0.30559279215829754] ***
*** starting iteration: 2; err: [Inf, 0.36640349902945374, 0.30559279215829754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865] ***
*** starting iteration: 3; err: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686] ***
*** starting iteration: 4; err: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686, 0.29267461772018055] ***
*** starting iteration: 5; err: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686, 0.29267461772018055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686, 0.29267461772018055, 0.29222444691988936] ***
*** finished computation of 3 references, err: [Inf, 0.36640349902945374, 0.30559279215829754, 0.29610100634921865, 0.2936935809894686, 0.29267461772018055, 0.29222444691988936] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [142, 44, 0]]
** centroid: 1, normalized-entropy: 0.7892712724536985, [(1, 142), (2, 44)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 151, 28]]
** centroid: 2, normalized-entropy: 0.6256869870089502, [(2, 151), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [273, 28, 0]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(1, 273), (2, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35697414470568434] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35697414470568434, 0.2856696436706668] ***
*** starting iteration: 2; err: [Inf, 0.35697414470568434, 0.2856696436706668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35697414470568434, 0.2856696436706668, 0.2845254175524148] ***
*** starting iteration: 3; err: [Inf, 0.35697414470568434, 0.2856696436706668, 0.2845254175524148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35697414470568434, 0.2856696436706668, 0.2845254175524148, 0.28443031522097706] ***
*** finished computation of 3 references, err: [Inf, 0.35697414470568434, 0.2856696436706668, 0.2845254175524148, 0.28443031522097706] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [39, 181, 26]]
** centroid: 1, normalized-entropy: 0.6874680960101628, [(1, 39), (2, 181), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 57, 0]]
** centroid: 2, normalized-entropy: 0.8948692308065576, [(1, 126), (2, 57)]
*** center 3: selecting labels [1] (freq >= 1) [from [238, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32756589751025994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32756589751025994, 0.2923703107806942] ***
*** starting iteration: 2; err: [Inf, 0.32756589751025994, 0.2923703107806942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32756589751025994, 0.2923703107806942, 0.2904653746768765] ***
*** starting iteration: 3; err: [Inf, 0.32756589751025994, 0.2923703107806942, 0.2904653746768765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32756589751025994, 0.2923703107806942, 0.2904653746768765, 0.29025250485772897] ***
*** finished computation of 3 references, err: [Inf, 0.32756589751025994, 0.2923703107806942, 0.2904653746768765, 0.29025250485772897] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [157, 47, 0]]
** centroid: 1, normalized-entropy: 0.7786942948889739, [(1, 157), (2, 47)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 146, 28]]
** centroid: 2, normalized-entropy: 0.6365048555378351, [(2, 146), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [269, 20, 0]]
** centroid: 3, normalized-entropy: 0.362946660267187, [(1, 269), (2, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3163320179385421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163320179385421, 0.30021415139596025] ***
*** starting iteration: 2; err: [Inf, 0.3163320179385421, 0.30021415139596025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508] ***
*** starting iteration: 3; err: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508, 0.2940898371473033] ***
*** starting iteration: 4; err: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508, 0.2940898371473033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508, 0.2940898371473033, 0.2931780256764465] ***
*** finished computation of 3 references, err: [Inf, 0.3163320179385421, 0.30021415139596025, 0.2961377435987508, 0.2940898371473033, 0.2931780256764465] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [151, 41, 0]]
** centroid: 1, normalized-entropy: 0.7481981891199669, [(1, 151), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [264, 27, 0]]
** centroid: 2, normalized-entropy: 0.44569317772256106, [(1, 264), (2, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 155, 28]]
** centroid: 3, normalized-entropy: 0.6173106544855739, [(2, 155), (3, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3607914493149747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429] ***
*** starting iteration: 2; err: [Inf, 0.3607914493149747, 0.3318819641212429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684] ***
*** starting iteration: 3; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165] ***
*** starting iteration: 4; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796] ***
*** starting iteration: 5; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744] ***
*** starting iteration: 6; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977] ***
*** starting iteration: 7; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876] ***
*** starting iteration: 8; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016] ***
*** starting iteration: 9; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016, 0.3162747469159594] ***
*** starting iteration: 10; err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016, 0.3162747469159594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016, 0.3162747469159594, 0.2929232821868233] ***
*** finished computation of 3 references, err: [Inf, 0.3607914493149747, 0.3318819641212429, 0.3306024311671684, 0.32956919724169165, 0.32826976787796, 0.32688619012663744, 0.3255281959725977, 0.3240987878338876, 0.32108938958736016, 0.3162747469159594, 0.2929232821868233] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [227, 25, 0]]
** centroid: 1, normalized-entropy: 0.46647471969275045, [(1, 227), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [176, 24, 0]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(1, 176), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 189, 26]]
** centroid: 3, normalized-entropy: 0.5320288921501529, [(2, 189), (3, 26)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3765655024831687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923] ***
*** starting iteration: 2; err: [Inf, 0.3765655024831687, 0.3318877351683923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677] ***
*** starting iteration: 3; err: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735] ***
*** starting iteration: 4; err: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607] ***
*** starting iteration: 5; err: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607, 0.3030602709164025] ***
*** starting iteration: 6; err: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607, 0.3030602709164025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607, 0.3030602709164025, 0.3020609616954019] ***
*** finished computation of 3 references, err: [Inf, 0.3765655024831687, 0.3318877351683923, 0.3122784072823677, 0.3066186974637735, 0.3045602845868607, 0.3030602709164025, 0.3020609616954019] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [253, 12, 0]]
** centroid: 1, normalized-entropy: 0.266011098860696, [(1, 253), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 165, 28]]
** centroid: 2, normalized-entropy: 0.5973839638578601, [(2, 165), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [173, 36, 0]]
** centroid: 3, normalized-entropy: 0.6628233261809947, [(1, 173), (2, 36)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3994901976471224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3994901976471224, 0.3163439342919905] ***
*** finished computation of 3 references, err: [Inf, 0.3994901976471224, 0.3163439342919905] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [35, 117, 28]]
** centroid: 1, normalized-entropy: 0.8081861089685342, [(1, 35), (2, 117), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [218, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [162, 106, 0]]
** centroid: 3, normalized-entropy: 0.9682710238495323, [(1, 162), (2, 106)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45730780247554204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45730780247554204, 0.3302056577888833] ***
*** finished computation of 3 references, err: [Inf, 0.45730780247554204, 0.3302056577888833] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [265, 17, 0]]
** centroid: 1, normalized-entropy: 0.32857002649221706, [(1, 265), (2, 17)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [52, 85, 26]]
** centroid: 2, normalized-entropy: 0.9073395427193369, [(1, 52), (2, 85), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 136, 0]]
** centroid: 3, normalized-entropy: 0.9630928243932294, [(1, 86), (2, 136)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4743058478914905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4743058478914905, 0.30199334768207] ***
*** finished computation of 3 references, err: [Inf, 0.4743058478914905, 0.30199334768207] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [114, 42, 0]]
** centroid: 1, normalized-entropy: 0.8403586716091169, [(1, 114), (2, 42)]
*** center 2: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [98, 171, 28]]
** centroid: 3, normalized-entropy: 0.8249937534815347, [(1, 98), (2, 171), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2968959564730447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2968959564730447, 0.17976984361678855] ***
*** starting iteration: 2; err: [Inf, 0.2968959564730447, 0.17976984361678855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235] ***
*** starting iteration: 3; err: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235, 0.15573223660610527] ***
*** starting iteration: 4; err: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235, 0.15573223660610527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235, 0.15573223660610527, 0.1549986407416663] ***
*** finished computation of 7 references, err: [Inf, 0.2968959564730447, 0.17976984361678855, 0.16024847413492235, 0.15573223660610527, 0.1549986407416663] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 57, 28]]
** centroid: 1, normalized-entropy: 0.9143242464317818, [(2, 57), (3, 28)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 15, 0]]
** centroid: 3, normalized-entropy: 0.5465060858222177, [(1, 104), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 40, 0]]
** centroid: 4, normalized-entropy: 0.9065795484987461, [(1, 19), (2, 40)]
*** center 5: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 38, 0]]
** centroid: 7, normalized-entropy: 0.8832225588099292, [(1, 88), (2, 38)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22356265020484142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328] ***
*** starting iteration: 2; err: [Inf, 0.22356265020484142, 0.18172023744033328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772] ***
*** starting iteration: 3; err: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715] ***
*** starting iteration: 4; err: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544] ***
*** starting iteration: 5; err: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544, 0.15042111205113032] ***
*** starting iteration: 6; err: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544, 0.15042111205113032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544, 0.15042111205113032, 0.14948043922964913] ***
*** finished computation of 7 references, err: [Inf, 0.22356265020484142, 0.18172023744033328, 0.1680408199310772, 0.1607031260527715, 0.15431873121639544, 0.15042111205113032, 0.14948043922964913] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 53, 19]]
** centroid: 1, normalized-entropy: 0.8325582396745668, [(2, 53), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [103, 13, 0]]
** centroid: 2, normalized-entropy: 0.5061252137852816, [(1, 103), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 84, 7]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 84), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [83, 6, 0]]
** centroid: 5, normalized-entropy: 0.35620480393132253, [(1, 83), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 60, 0]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(1, 6), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [95, 22, 0]]
** centroid: 7, normalized-entropy: 0.6973409725623739, [(1, 95), (2, 22)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21442713118626036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646] ***
*** starting iteration: 2; err: [Inf, 0.21442713118626036, 0.16720480168646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634] ***
*** starting iteration: 3; err: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123] ***
*** starting iteration: 4; err: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092] ***
*** starting iteration: 5; err: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092, 0.15110761837857864] ***
*** starting iteration: 6; err: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092, 0.15110761837857864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092, 0.15110761837857864, 0.15073954415503427] ***
*** finished computation of 7 references, err: [Inf, 0.21442713118626036, 0.16720480168646, 0.15845062494322634, 0.15459698720694123, 0.15215302355283092, 0.15110761837857864, 0.15073954415503427] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 15, 0]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(1, 120), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 28]]
** centroid: 2, normalized-entropy: 0.9103480624345157, [(2, 58), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 41, 0]]
** centroid: 5, normalized-entropy: 0.8184033299219708, [(1, 14), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 24, 0]]
** centroid: 6, normalized-entropy: 0.7568336324184036, [(1, 86), (2, 24)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26576410464987205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26576410464987205, 0.21042111120536341] ***
*** finished computation of 7 references, err: [Inf, 0.26576410464987205, 0.21042111120536341] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 72, 0]]
** centroid: 1, normalized-entropy: 0.9841566800928478, [(1, 97), (2, 72)]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 80, 28]]
** centroid: 3, normalized-entropy: 0.8256265261578954, [(2, 80), (3, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [10, 26, 0]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(1, 10), (2, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 45, 0]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(1, 55), (2, 45)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30012750254058723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30012750254058723, 0.211737222387979] ***
*** finished computation of 7 references, err: [Inf, 0.30012750254058723, 0.211737222387979] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [119, 42, 0]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(1, 119), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 89, 0]]
** centroid: 2, normalized-entropy: 0.8505306682780943, [(1, 34), (2, 89)]
*** center 3: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 89, 26]]
** centroid: 4, normalized-entropy: 0.7711273724428293, [(2, 89), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 18, 0]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(1, 42), (2, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2469488587314221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2469488587314221, 0.2016011463656932] ***
*** finished computation of 7 references, err: [Inf, 0.2469488587314221, 0.2016011463656932] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 96, 28]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(2, 96), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 57, 0]]
** centroid: 3, normalized-entropy: 0.4044483864864384, [(1, 5), (2, 57)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 32, 0]]
** centroid: 4, normalized-entropy: 0.8732984198823629, [(1, 77), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [93, 15, 0]]
** centroid: 5, normalized-entropy: 0.581321498763703, [(1, 93), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [98, 13, 0]]
** centroid: 7, normalized-entropy: 0.521016937889524, [(1, 98), (2, 13)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43961829291628646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43961829291628646, 0.33880065576880947] ***
*** finished computation of 3 references, err: [Inf, 0.43961829291628646, 0.33880065576880947] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [268, 20, 0]]
** centroid: 1, normalized-entropy: 0.3638469981769295, [(1, 268), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [95, 116, 0]]
** centroid: 2, normalized-entropy: 0.9928428937961026, [(1, 95), (2, 116)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [52, 87, 28]]
** centroid: 3, normalized-entropy: 0.9124442985923764, [(1, 52), (2, 87), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3663667846705647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3663667846705647, 0.30061950653824937] ***
*** finished computation of 3 references, err: [Inf, 0.3663667846705647, 0.30061950653824937] ***
*** center 1: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [145, 71, 0]]
** centroid: 2, normalized-entropy: 0.9135964672699598, [(1, 145), (2, 71)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [55, 167, 26]]
** centroid: 3, normalized-entropy: 0.7616335969102707, [(1, 55), (2, 167), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4863705448303623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4863705448303623, 0.32332733804374] ***
*** finished computation of 3 references, err: [Inf, 0.4863705448303623, 0.32332733804374] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [117, 165, 28]]
** centroid: 1, normalized-entropy: 0.8379495904187253, [(1, 117), (2, 165), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [243, 7, 0]]
** centroid: 2, normalized-entropy: 0.18426059333965505, [(1, 243), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 41, 0]]
** centroid: 3, normalized-entropy: 0.9602553596067602, [(1, 66), (2, 41)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31705593996102344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31705593996102344, 0.24615193754728246] ***
*** starting iteration: 2; err: [Inf, 0.31705593996102344, 0.24615193754728246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389] ***
*** starting iteration: 3; err: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389, 0.23736188476541648] ***
*** starting iteration: 4; err: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389, 0.23736188476541648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389, 0.23736188476541648, 0.23697694102543415] ***
*** finished computation of 3 references, err: [Inf, 0.31705593996102344, 0.24615193754728246, 0.23881394463149389, 0.23736188476541648, 0.23697694102543415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [244, 23, 0]]
** centroid: 1, normalized-entropy: 0.4234605932806043, [(1, 244), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [171, 49, 0]]
** centroid: 2, normalized-entropy: 0.765116248037688, [(1, 171), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 151, 28]]
** centroid: 3, normalized-entropy: 0.6256869870089502, [(2, 151), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3371643217753848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3371643217753848, 0.22449828409820213] ***
*** starting iteration: 2; err: [Inf, 0.3371643217753848, 0.22449828409820213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3371643217753848, 0.22449828409820213, 0.22353882864438768] ***
*** finished computation of 3 references, err: [Inf, 0.3371643217753848, 0.22449828409820213, 0.22353882864438768] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [266, 13, 0]]
** centroid: 1, normalized-entropy: 0.27175269469961544, [(1, 266), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 177, 26]]
** centroid: 2, normalized-entropy: 0.5521456953311914, [(2, 177), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [137, 48, 0]]
** centroid: 3, normalized-entropy: 0.8259295934881627, [(1, 137), (2, 48)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34571447813495254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34571447813495254, 0.23149398413090233] ***
*** starting iteration: 2; err: [Inf, 0.34571447813495254, 0.23149398413090233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34571447813495254, 0.23149398413090233, 0.23048085439356805] ***
*** starting iteration: 3; err: [Inf, 0.34571447813495254, 0.23149398413090233, 0.23048085439356805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34571447813495254, 0.23149398413090233, 0.23048085439356805, 0.23024348781417603] ***
*** finished computation of 3 references, err: [Inf, 0.34571447813495254, 0.23149398413090233, 0.23048085439356805, 0.23024348781417603] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [269, 10, 0]]
** centroid: 1, normalized-entropy: 0.22289315241483074, [(1, 269), (2, 10)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [7, 157, 28]]
** centroid: 2, normalized-entropy: 0.5152590368171058, [(1, 7), (2, 157), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [150, 46, 0]]
** centroid: 3, normalized-entropy: 0.7861044688447759, [(1, 150), (2, 46)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.287350686276807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.287350686276807, 0.23876967894573425] ***
*** starting iteration: 2; err: [Inf, 0.287350686276807, 0.23876967894573425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.287350686276807, 0.23876967894573425, 0.23461980818541492] ***
*** starting iteration: 3; err: [Inf, 0.287350686276807, 0.23876967894573425, 0.23461980818541492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.287350686276807, 0.23876967894573425, 0.23461980818541492, 0.23347077075903816] ***
*** finished computation of 3 references, err: [Inf, 0.287350686276807, 0.23876967894573425, 0.23461980818541492, 0.23347077075903816] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [118, 75, 0]]
** centroid: 1, normalized-entropy: 0.9638908112997471, [(1, 118), (2, 75)]
*** center 2: selecting labels [1] (freq >= 1) [from [217, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [80, 148, 28]]
** centroid: 3, normalized-entropy: 0.8395326691565119, [(1, 80), (2, 148), (3, 28)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37780279035064235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37780279035064235, 0.2834894238975363] ***
*** starting iteration: 2; err: [Inf, 0.37780279035064235, 0.2834894238975363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37780279035064235, 0.2834894238975363, 0.27648322682721593] ***
*** starting iteration: 3; err: [Inf, 0.37780279035064235, 0.2834894238975363, 0.27648322682721593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37780279035064235, 0.2834894238975363, 0.27648322682721593, 0.2614431869737089] ***
*** finished computation of 3 references, err: [Inf, 0.37780279035064235, 0.2834894238975363, 0.27648322682721593, 0.2614431869737089] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [230, 36, 0]]
** centroid: 1, normalized-entropy: 0.5718989326097251, [(1, 230), (2, 36)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [37, 186, 26]]
** centroid: 2, normalized-entropy: 0.6709538467560617, [(1, 37), (2, 186), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 16, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 136), (2, 16)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4783878532479862] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4783878532479862, 0.27102104152484363] ***
*** starting iteration: 2; err: [Inf, 0.4783878532479862, 0.27102104152484363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4783878532479862, 0.27102104152484363, 0.2477997557840951] ***
*** starting iteration: 3; err: [Inf, 0.4783878532479862, 0.27102104152484363, 0.2477997557840951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4783878532479862, 0.27102104152484363, 0.2477997557840951, 0.24312967882733205] ***
*** finished computation of 3 references, err: [Inf, 0.4783878532479862, 0.27102104152484363, 0.2477997557840951, 0.24312967882733205] ***
*** center 1: selecting labels [1] (freq >= 1) [from [217, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [114, 146, 28]]
** centroid: 2, normalized-entropy: 0.8536580676400755, [(1, 114), (2, 146), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 67, 0]]
** centroid: 3, normalized-entropy: 0.9783422340444345, [(1, 95), (2, 67)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23450580861016707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23450580861016707, 0.19050367687082104] ***
*** starting iteration: 2; err: [Inf, 0.23450580861016707, 0.19050367687082104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668] ***
*** starting iteration: 3; err: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656] ***
*** starting iteration: 4; err: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656, 0.18505331790759913] ***
*** starting iteration: 5; err: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656, 0.18505331790759913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656, 0.18505331790759913, 0.18425625914990254] ***
*** finished computation of 7 references, err: [Inf, 0.23450580861016707, 0.19050367687082104, 0.18782876913684668, 0.18624162341624656, 0.18505331790759913, 0.18425625914990254] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 34, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 68), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 33, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 66), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 75, 28]]
** centroid: 3, normalized-entropy: 0.844099171796772, [(2, 75), (3, 28)]
*** center 4: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [21, 81, 0]]
** centroid: 5, normalized-entropy: 0.7335379291086666, [(1, 21), (2, 81)]
*** center 6: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24071479052852565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24071479052852565, 0.18987225627490337] ***
*** starting iteration: 2; err: [Inf, 0.24071479052852565, 0.18987225627490337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24071479052852565, 0.18987225627490337, 0.1870638873788348] ***
*** starting iteration: 3; err: [Inf, 0.24071479052852565, 0.18987225627490337, 0.1870638873788348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24071479052852565, 0.18987225627490337, 0.1870638873788348, 0.18699333104521393] ***
*** finished computation of 7 references, err: [Inf, 0.24071479052852565, 0.18987225627490337, 0.1870638873788348, 0.18699333104521393] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 54, 0]]
** centroid: 1, normalized-entropy: 0.9997431860710851, [(1, 52), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 11, 0]]
** centroid: 2, normalized-entropy: 0.693965967334286, [(1, 48), (2, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 26]]
** centroid: 4, normalized-entropy: 0.834648285181383, [(2, 72), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 11, 0]]
** centroid: 5, normalized-entropy: 0.5357150195407704, [(1, 79), (2, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 85, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [122, 5, 0]]
** centroid: 7, normalized-entropy: 0.2393965319917804, [(1, 122), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2375602522303631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111] ***
*** starting iteration: 2; err: [Inf, 0.2375602522303631, 0.1943637218935111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092] ***
*** starting iteration: 3; err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385] ***
*** starting iteration: 4; err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915] ***
*** starting iteration: 5; err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192] ***
*** starting iteration: 6; err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192, 0.18414714191013995] ***
*** starting iteration: 7; err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192, 0.18414714191013995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192, 0.18414714191013995, 0.18357417434649445] ***
*** finished computation of 7 references, err: [Inf, 0.2375602522303631, 0.1943637218935111, 0.18952207341078092, 0.18789910961213385, 0.18660751633859915, 0.18527432459768192, 0.18414714191013995, 0.18357417434649445] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 102, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 34, 0]]
** centroid: 3, normalized-entropy: 0.9052002969560479, [(1, 72), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 21, 0]]
** centroid: 4, normalized-entropy: 0.7927652363756529, [(1, 67), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [109, 4, 0]]
** centroid: 5, normalized-entropy: 0.22077992347107292, [(1, 109), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [84, 1, 0]]
** centroid: 6, normalized-entropy: 0.0922772477445739, [(1, 84), (2, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 28]]
** centroid: 7, normalized-entropy: 0.9379626436434424, [(2, 51), (3, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20428926768005118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20428926768005118, 0.15122865809284308] ***
*** finished computation of 7 references, err: [Inf, 0.20428926768005118, 0.15122865809284308] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 45, 0]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(1, 99), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 13, 0]]
** centroid: 2, normalized-entropy: 0.698124573139618, [(1, 56), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 28]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 63), (3, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 83, 0]]
** centroid: 6, normalized-entropy: 0.2690553027246505, [(1, 4), (2, 83)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [54, 19, 0]]
** centroid: 7, normalized-entropy: 0.8271595195340525, [(1, 54), (2, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19697154805586412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19697154805586412, 0.15215670754029967] ***
*** finished computation of 7 references, err: [Inf, 0.19697154805586412, 0.15215670754029967] ***
*** center 1: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 81, 26]]
** centroid: 2, normalized-entropy: 0.7999783611177544, [(2, 81), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 17, 0]]
** centroid: 3, normalized-entropy: 0.6947570868163001, [(1, 74), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 87, 0]]
** centroid: 4, normalized-entropy: 0.864663651235729, [(1, 35), (2, 87)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [46, 53, 0]]
** centroid: 5, normalized-entropy: 0.9963906193677697, [(1, 46), (2, 53)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19555238334146485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19555238334146485, 0.1486811267709111] ***
*** finished computation of 7 references, err: [Inf, 0.19555238334146485, 0.1486811267709111] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 28]]
** centroid: 2, normalized-entropy: 0.8786744932173094, [(2, 66), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 13, 0]]
** centroid: 3, normalized-entropy: 0.6652735227649414, [(1, 62), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 39, 0]]
** centroid: 4, normalized-entropy: 0.923984159141417, [(1, 76), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 95, 0]]
** centroid: 5, normalized-entropy: 0.876716288999464, [(1, 40), (2, 95)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27297426738381925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27297426738381925, 0.20365482508365693] ***
*** finished computation of 7 references, err: [Inf, 0.27297426738381925, 0.20365482508365693] ***
*** center 1: selecting labels [1] (freq >= 1) [from [148, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [89, 54, 0]]
** centroid: 2, normalized-entropy: 0.9563454593459649, [(1, 89), (2, 54)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 45, 28]]
** centroid: 4, normalized-entropy: 0.9605187074766162, [(2, 45), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [113, 24, 0]]
** centroid: 5, normalized-entropy: 0.6694238875574322, [(1, 113), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [24, 19, 0]]
** centroid: 6, normalized-entropy: 0.9902246902198684, [(1, 24), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 16, 0]]
** centroid: 7, normalized-entropy: 0.8564052389131375, [(1, 41), (2, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33076678307774454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33076678307774454, 0.23758473661148743] ***
*** finished computation of 7 references, err: [Inf, 0.33076678307774454, 0.23758473661148743] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [157, 6, 0]]
** centroid: 1, normalized-entropy: 0.22746905864633904, [(1, 157), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 28, 0]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(1, 3), (2, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 94, 7]]
** centroid: 4, normalized-entropy: 0.3633319133250508, [(2, 94), (3, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 11, 0]]
** centroid: 5, normalized-entropy: 0.8680403986166402, [(1, 27), (2, 11)]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [48, 99, 19]]
** centroid: 6, normalized-entropy: 0.8329846933056977, [(1, 48), (2, 99), (3, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3729526899095954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3729526899095954, 0.2566823221776618] ***
*** finished computation of 7 references, err: [Inf, 0.3729526899095954, 0.2566823221776618] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [19, 66, 13]]
** centroid: 1, normalized-entropy: 0.775755260414131, [(1, 19), (2, 66), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 81, 0]]
** centroid: 2, normalized-entropy: 0.9934838501304855, [(1, 98), (2, 81)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [92, 43, 0]]
** centroid: 3, normalized-entropy: 0.9027631199439022, [(1, 92), (2, 43)]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2, 3] (freq >= 1) [from [12, 23, 15]]
** centroid: 5, normalized-entropy: 0.9656755351855093, [(1, 12), (2, 23), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2915173467380126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2915173467380126, 0.24216330765156416] ***
*** starting iteration: 2; err: [Inf, 0.2915173467380126, 0.24216330765156416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395] ***
*** starting iteration: 3; err: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395, 0.2309747611427003] ***
*** starting iteration: 4; err: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395, 0.2309747611427003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395, 0.2309747611427003, 0.230733456424306] ***
*** finished computation of 3 references, err: [Inf, 0.2915173467380126, 0.24216330765156416, 0.23259898955030395, 0.2309747611427003, 0.230733456424306] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [278, 16, 0]]
** centroid: 1, normalized-entropy: 0.3048913304923677, [(1, 278), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 160, 28]]
** centroid: 2, normalized-entropy: 0.607171654871303, [(2, 160), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 47, 0]]
** centroid: 3, normalized-entropy: 0.8219259451753261, [(1, 136), (2, 47)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34136906436419695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34136906436419695, 0.23149438434112202] ***
*** starting iteration: 2; err: [Inf, 0.34136906436419695, 0.23149438434112202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948] ***
*** starting iteration: 3; err: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948, 0.22597650564212848] ***
*** starting iteration: 4; err: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948, 0.22597650564212848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948, 0.22597650564212848, 0.22497667217029557] ***
*** finished computation of 3 references, err: [Inf, 0.34136906436419695, 0.23149438434112202, 0.22839256645231948, 0.22597650564212848, 0.22497667217029557] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [50, 182, 26]]
** centroid: 1, normalized-entropy: 0.72403778190267, [(1, 50), (2, 182), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 56, 0]]
** centroid: 2, normalized-entropy: 0.898419774686072, [(1, 122), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [231, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31305457757104527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31305457757104527, 0.2503637182910269] ***
*** starting iteration: 2; err: [Inf, 0.31305457757104527, 0.2503637182910269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175] ***
*** starting iteration: 3; err: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175, 0.24215836307198657] ***
*** starting iteration: 4; err: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175, 0.24215836307198657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175, 0.24215836307198657, 0.24209143302362898] ***
*** finished computation of 3 references, err: [Inf, 0.31305457757104527, 0.2503637182910269, 0.243418267435175, 0.24215836307198657, 0.24209143302362898] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [113, 136, 24]]
** centroid: 1, normalized-entropy: 0.8428769232558196, [(1, 113), (2, 136), (3, 24)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [107, 77, 4]]
** centroid: 2, normalized-entropy: 0.6993358720721178, [(1, 107), (2, 77), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2179742685761079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2179742685761079, 0.18370626629512007] ***
*** finished computation of 7 references, err: [Inf, 0.2179742685761079, 0.18370626629512007] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [192, 5, 0]]
** centroid: 1, normalized-entropy: 0.1706688721827784, [(1, 192), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 73, 0]]
** centroid: 2, normalized-entropy: 0.7807536250860868, [(1, 22), (2, 73)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 63, 13]]
** centroid: 3, normalized-entropy: 0.6601070987550468, [(2, 63), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 7, 0]]
** centroid: 5, normalized-entropy: 0.5699613760403499, [(1, 45), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [13, 26, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 13), (2, 26)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 49, 15]]
** centroid: 7, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2073621703130284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073621703130284, 0.16802068398860487] ***
*** finished computation of 7 references, err: [Inf, 0.2073621703130284, 0.16802068398860487] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 14, 0]]
** centroid: 1, normalized-entropy: 0.7973265101474423, [(1, 44), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 50, 0]]
** centroid: 2, normalized-entropy: 0.9090221560878149, [(1, 24), (2, 50)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [95, 41, 0]]
** centroid: 3, normalized-entropy: 0.8830811134504757, [(1, 95), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [142, 3, 0]]
** centroid: 4, normalized-entropy: 0.14529544538163566, [(1, 142), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 1, 0]]
** centroid: 5, normalized-entropy: 0.10928571467638523, [(1, 68), (2, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 129, 26]]
** centroid: 6, normalized-entropy: 0.652513123846701, [(2, 129), (3, 26)]
*** center 7: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3805023720658997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3805023720658997, 0.21198809393884047] ***
*** finished computation of 7 references, err: [Inf, 0.3805023720658997, 0.21198809393884047] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [30, 54, 6]]
** centroid: 2, normalized-entropy: 0.7766490138119515, [(1, 30), (2, 54), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 1) [from [66, 159, 22]]
** centroid: 4, normalized-entropy: 0.7751516329134471, [(1, 66), (2, 159), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [138, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3336511571841264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3336511571841264, 0.2572613323968066] ***
*** finished computation of 3 references, err: [Inf, 0.3336511571841264, 0.2572613323968066] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 95, 28]]
** centroid: 1, normalized-entropy: 0.7738785654282402, [(2, 95), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [303, 5, 0]]
** centroid: 2, normalized-entropy: 0.11973667878989842, [(1, 303), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [112, 123, 0]]
** centroid: 3, normalized-entropy: 0.9984189234706247, [(1, 112), (2, 123)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3624592040291243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3624592040291243, 0.23264658559292464] ***
*** finished computation of 3 references, err: [Inf, 0.3624592040291243, 0.23264658559292464] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [111, 89, 2]]
** centroid: 1, normalized-entropy: 0.6697796685461207, [(1, 111), (2, 89), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [71, 149, 24]]
** centroid: 3, normalized-entropy: 0.8087605505793779, [(1, 71), (2, 149), (3, 24)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3697700193909317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3697700193909317, 0.2582206595339987] ***
*** finished computation of 3 references, err: [Inf, 0.3697700193909317, 0.2582206595339987] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [263, 14, 0]]
** centroid: 1, normalized-entropy: 0.288692840804849, [(1, 263), (2, 14)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [96, 159, 28]]
** centroid: 2, normalized-entropy: 0.836990864752593, [(1, 96), (2, 159), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 40, 0]]
** centroid: 3, normalized-entropy: 0.9535688597080136, [(1, 67), (2, 40)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2917738845610331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274] ***
*** starting iteration: 2; err: [Inf, 0.2917738845610331, 0.2295436084273274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257] ***
*** starting iteration: 3; err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316] ***
*** starting iteration: 4; err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458] ***
*** starting iteration: 5; err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243] ***
*** starting iteration: 6; err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243, 0.1877055880931757] ***
*** starting iteration: 7; err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243, 0.1877055880931757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243, 0.1877055880931757, 0.18701637387604317] ***
*** finished computation of 7 references, err: [Inf, 0.2917738845610331, 0.2295436084273274, 0.20246960270126257, 0.193112605429316, 0.19057887397404458, 0.18871602494068243, 0.1877055880931757, 0.18701637387604317] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 20, 0]]
** centroid: 2, normalized-entropy: 0.7510324165275097, [(1, 73), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 28]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 64), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 35, 0]]
** centroid: 5, normalized-entropy: 0.8802436087136892, [(1, 82), (2, 35)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [87, 34, 0]]
** centroid: 7, normalized-entropy: 0.8567986030485539, [(1, 87), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25014969709886425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25014969709886425, 0.20878313371082252] ***
*** starting iteration: 2; err: [Inf, 0.25014969709886425, 0.20878313371082252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086] ***
*** starting iteration: 3; err: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568] ***
*** starting iteration: 4; err: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568, 0.19289818652828727] ***
*** starting iteration: 5; err: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568, 0.19289818652828727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568, 0.19289818652828727, 0.1921485879184815] ***
*** finished computation of 7 references, err: [Inf, 0.25014969709886425, 0.20878313371082252, 0.19799760656293086, 0.19403751658183568, 0.19289818652828727, 0.1921485879184815] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 12, 0]]
** centroid: 1, normalized-entropy: 0.5830194167347007, [(1, 74), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 24, 0]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(1, 64), (2, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 33, 0]]
** centroid: 5, normalized-entropy: 0.9283620723948678, [(1, 63), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [16, 90, 0]]
** centroid: 6, normalized-entropy: 0.612196127490834, [(1, 16), (2, 90)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 79, 26]]
** centroid: 7, normalized-entropy: 0.8074825483550796, [(2, 79), (3, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25318537248407436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384] ***
*** starting iteration: 2; err: [Inf, 0.25318537248407436, 0.2162432454015384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422] ***
*** starting iteration: 3; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686] ***
*** starting iteration: 4; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284] ***
*** starting iteration: 5; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516] ***
*** starting iteration: 6; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243] ***
*** starting iteration: 7; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374] ***
*** starting iteration: 8; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374, 0.19247636106284124] ***
*** starting iteration: 9; err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374, 0.19247636106284124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374, 0.19247636106284124, 0.19176052094296156] ***
*** finished computation of 7 references, err: [Inf, 0.25318537248407436, 0.2162432454015384, 0.2110930264786422, 0.20661193481192686, 0.2011199334428284, 0.19811285764671516, 0.19626898151952243, 0.19449483781684374, 0.19247636106284124, 0.19176052094296156] ***
*** center 1: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 38, 0]]
** centroid: 2, normalized-entropy: 0.9977724720899819, [(1, 34), (2, 38)]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 44, 0]]
** centroid: 4, normalized-entropy: 0.9693253797191861, [(1, 29), (2, 44)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 79, 28]]
** centroid: 5, normalized-entropy: 0.8292743048721369, [(2, 79), (3, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 52, 0]]
** centroid: 7, normalized-entropy: 0.9827184823459943, [(1, 71), (2, 52)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209958461455466, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 18
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209958461455466, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 18
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209958461455466, 0.9209718700736665, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.23092945612899993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23092945612899993, 0.18975847773253918] ***
*** finished computation of 7 references, err: [Inf, 0.23092945612899993, 0.18975847773253918] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [115, 3, 0]]
** centroid: 1, normalized-entropy: 0.17089522427059886, [(1, 115), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 9, 0]]
** centroid: 2, normalized-entropy: 0.5484866088431741, [(1, 62), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 66, 26]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 66), (3, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [94, 26, 0]]
** centroid: 4, normalized-entropy: 0.7540340561971327, [(1, 94), (2, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 52, 0]]
** centroid: 7, normalized-entropy: 0.9794116346561961, [(1, 37), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22340502679722196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22340502679722196, 0.19581915803583175] ***
*** finished computation of 7 references, err: [Inf, 0.22340502679722196, 0.19581915803583175] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 22]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 77), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 15, 0]]
** centroid: 3, normalized-entropy: 0.7612401496918493, [(1, 53), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [119, 16, 0]]
** centroid: 4, normalized-entropy: 0.5250873464312362, [(1, 119), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [107, 25, 0]]
** centroid: 5, normalized-entropy: 0.700201905045644, [(1, 107), (2, 25)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 80, 6]]
** centroid: 6, normalized-entropy: 0.3650551896402848, [(2, 80), (3, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24651322941304193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24651322941304193, 0.19564494784843098] ***
*** finished computation of 7 references, err: [Inf, 0.24651322941304193, 0.19564494784843098] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [133, 5, 0]]
** centroid: 1, normalized-entropy: 0.22474036695139357, [(1, 133), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 28]]
** centroid: 2, normalized-entropy: 0.9833761901392238, [(2, 38), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 17, 0]]
** centroid: 3, normalized-entropy: 0.646251622274129, [(1, 86), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 2, 0]]
** centroid: 4, normalized-entropy: 0.15790637433488164, [(1, 85), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 90, 0]]
** centroid: 6, normalized-entropy: 0.08728058888363333, [(1, 1), (2, 90)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 71, 0]]
** centroid: 7, normalized-entropy: 0.18116640155354563, [(1, 2), (2, 71)]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209958461455466, 0.9209718700736665, 0.9169828511145877, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 19
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.9390198581815348, 0.9320098541655427, 0.9259828690966416, 0.9209958461455466, 0.9209718700736665, 0.9169828511145877, 0.9059778341215466, 0.902009794225363, 0.9019798241355127, 0.8949937961914011, 0.891993790197383, 0.8829398260535984, 0.8810067552582522, 0.865068661475847, 0.8649877422332511, 0.8630396863929798, 0.8629497761234287, 0.8199816583050117, 0.8019666372959785]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.3, 1) => 0.9390198581815348
finished with 20
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.18734904597450544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18734904597450544, 0.15005002570767206] ***
*** starting iteration: 2; err: [Inf, 0.18734904597450544, 0.15005002570767206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18734904597450544, 0.15005002570767206, 0.14624828244021898] ***
*** starting iteration: 3; err: [Inf, 0.18734904597450544, 0.15005002570767206, 0.14624828244021898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18734904597450544, 0.15005002570767206, 0.14624828244021898, 0.1452885711219335] ***
*** finished computation of 7 references, err: [Inf, 0.18734904597450544, 0.15005002570767206, 0.14624828244021898, 0.1452885711219335] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 27, 0]]
** centroid: 1, normalized-entropy: 0.8976844934141643, [(1, 59), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [88, 28, 0]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(1, 88), (2, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 62, 18]]
** centroid: 4, normalized-entropy: 0.7691928290130138, [(2, 62), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 35, 0]]
** centroid: 5, normalized-entropy: 0.9309350721504903, [(1, 66), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 86, 8]]
** centroid: 7, normalized-entropy: 0.4199210973757179, [(2, 86), (3, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19155076918452307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19155076918452307, 0.15426767485456783] ***
*** starting iteration: 2; err: [Inf, 0.19155076918452307, 0.15426767485456783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569] ***
*** starting iteration: 3; err: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536] ***
*** starting iteration: 4; err: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536, 0.14774790566341878] ***
*** starting iteration: 5; err: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536, 0.14774790566341878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536, 0.14774790566341878, 0.14736212631295975] ***
*** finished computation of 7 references, err: [Inf, 0.19155076918452307, 0.15426767485456783, 0.15045700920885569, 0.1488013032015536, 0.14774790566341878, 0.14736212631295975] ***
*** center 1: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 28]]
** centroid: 2, normalized-entropy: 0.8786744932173094, [(2, 66), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 32, 0]]
** centroid: 3, normalized-entropy: 0.8835850861052531, [(1, 74), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [9, 71, 0]]
** centroid: 4, normalized-entropy: 0.5074109636646968, [(1, 9), (2, 71)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 43, 0]]
** centroid: 5, normalized-entropy: 0.9935161367990846, [(1, 52), (2, 43)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 11, 0]]
** centroid: 7, normalized-entropy: 0.5869185834047994, [(1, 67), (2, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19105139249346514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105139249346514, 0.1530533162039192] ***
*** starting iteration: 2; err: [Inf, 0.19105139249346514, 0.1530533162039192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105139249346514, 0.1530533162039192, 0.1487295076452095] ***
*** starting iteration: 3; err: [Inf, 0.19105139249346514, 0.1530533162039192, 0.1487295076452095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105139249346514, 0.1530533162039192, 0.1487295076452095, 0.1478553489800068] ***
*** finished computation of 7 references, err: [Inf, 0.19105139249346514, 0.1530533162039192, 0.1487295076452095, 0.1478553489800068] ***
*** center 1: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 28]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 56), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 9, 0]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(1, 60), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [105, 29, 0]]
** centroid: 4, normalized-entropy: 0.753572561997754, [(1, 105), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 53, 0]]
** centroid: 5, normalized-entropy: 0.9997526101661924, [(1, 55), (2, 53)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 66, 0]]
** centroid: 7, normalized-entropy: 0.1914332548141934, [(1, 2), (2, 66)]
finished with 10 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.1938803796810098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1938803796810098, 0.15254021139256657] ***
*** starting iteration: 2; err: [Inf, 0.1938803796810098, 0.15254021139256657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1938803796810098, 0.15254021139256657, 0.14715847471449525] ***
*** starting iteration: 3; err: [Inf, 0.1938803796810098, 0.15254021139256657, 0.14715847471449525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1938803796810098, 0.15254021139256657, 0.14715847471449525, 0.14656182923831512] ***
*** finished computation of 7 references, err: [Inf, 0.1938803796810098, 0.15254021139256657, 0.14715847471449525, 0.14656182923831512] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [161, 30, 0]]
** centroid: 1, normalized-entropy: 0.6272490623566443, [(1, 161), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 19, 0]]
** centroid: 2, normalized-entropy: 0.6001310136416094, [(1, 111), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 120, 41]]
** centroid: 3, normalized-entropy: 0.8185783460502464, [(2, 120), (3, 41)]
*** center 4: selecting labels [1] (freq >= 1) [from [137, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 129, 0]]
** centroid: 5, normalized-entropy: 0.3478169135710632, [(1, 9), (2, 129)]
*** center 6: selecting labels [1] (freq >= 1) [from [127, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 39, 0]]
** centroid: 7, normalized-entropy: 0.9211426316005454, [(1, 77), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1973503918144852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973503918144852, 0.1504403816703707] ***
*** starting iteration: 2; err: [Inf, 0.1973503918144852, 0.1504403816703707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973503918144852, 0.1504403816703707, 0.14690518384240567] ***
*** starting iteration: 3; err: [Inf, 0.1973503918144852, 0.1504403816703707, 0.14690518384240567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1973503918144852, 0.1504403816703707, 0.14690518384240567, 0.1465127762928605] ***
*** finished computation of 7 references, err: [Inf, 0.1973503918144852, 0.1504403816703707, 0.14690518384240567, 0.1465127762928605] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 35, 0]]
** centroid: 1, normalized-entropy: 0.9954993847275952, [(1, 41), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 7, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 42), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 21]]
** centroid: 4, normalized-entropy: 0.8760643678555242, [(2, 50), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 19, 0]]
** centroid: 5, normalized-entropy: 0.7526269564427315, [(1, 69), (2, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 63, 0]]
** centroid: 7, normalized-entropy: 0.11611507530476962, [(1, 1), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20200811511464417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20200811511464417, 0.15490836414694786] ***
*** starting iteration: 2; err: [Inf, 0.20200811511464417, 0.15490836414694786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20200811511464417, 0.15490836414694786, 0.14876960165146738] ***
*** starting iteration: 3; err: [Inf, 0.20200811511464417, 0.15490836414694786, 0.14876960165146738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20200811511464417, 0.15490836414694786, 0.14876960165146738, 0.14795526949968188] ***
*** finished computation of 7 references, err: [Inf, 0.20200811511464417, 0.15490836414694786, 0.14876960165146738, 0.14795526949968188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 7, 0]]
** centroid: 1, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 20]]
** centroid: 2, normalized-entropy: 0.9238422284571813, [(2, 39), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 6, 0]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(1, 56), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 55, 0]]
** centroid: 6, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 59, 0]]
** centroid: 7, normalized-entropy: 0.3955378064564774, [(1, 5), (2, 59)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18249838578514754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18249838578514754, 0.15036059963330625] ***
*** starting iteration: 2; err: [Inf, 0.18249838578514754, 0.15036059963330625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422] ***
*** starting iteration: 3; err: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422, 0.14389100200962276] ***
*** starting iteration: 4; err: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422, 0.14389100200962276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422, 0.14389100200962276, 0.14320014777965845] ***
*** finished computation of 7 references, err: [Inf, 0.18249838578514754, 0.15036059963330625, 0.1453533176621422, 0.14389100200962276, 0.14320014777965845] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 11, 0]]
** centroid: 2, normalized-entropy: 0.7147274731317893, [(1, 45), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 49, 20]]
** centroid: 3, normalized-entropy: 0.868533960265235, [(2, 49), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 77, 0]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(1, 14), (2, 77)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 46, 0]]
** centroid: 6, normalized-entropy: 0.5159469300074472, [(1, 6), (2, 46)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19943868720158936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19943868720158936, 0.14920439974404873] ***
*** starting iteration: 2; err: [Inf, 0.19943868720158936, 0.14920439974404873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19943868720158936, 0.14920439974404873, 0.1461170482803136] ***
*** starting iteration: 3; err: [Inf, 0.19943868720158936, 0.14920439974404873, 0.1461170482803136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19943868720158936, 0.14920439974404873, 0.1461170482803136, 0.14575975221954285] ***
*** finished computation of 7 references, err: [Inf, 0.19943868720158936, 0.14920439974404873, 0.1461170482803136, 0.14575975221954285] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 12, 0]]
** centroid: 1, normalized-entropy: 0.6242741010130388, [(1, 65), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 16, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 48), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 60, 21]]
** centroid: 3, normalized-entropy: 0.8256265261578954, [(2, 60), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 25, 0]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(1, 55), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 53, 0]]
** centroid: 6, normalized-entropy: 0.13303964861069897, [(1, 1), (2, 53)]
*** center 7: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20423393360804767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423393360804767, 0.1512799357920885] ***
*** starting iteration: 2; err: [Inf, 0.20423393360804767, 0.1512799357920885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423393360804767, 0.1512799357920885, 0.1457627199292183] ***
*** starting iteration: 3; err: [Inf, 0.20423393360804767, 0.1512799357920885, 0.1457627199292183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423393360804767, 0.1512799357920885, 0.1457627199292183, 0.1451824665842578] ***
*** finished computation of 7 references, err: [Inf, 0.20423393360804767, 0.1512799357920885, 0.1457627199292183, 0.1451824665842578] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [74, 21, 0]]
** centroid: 1, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 7, 0]]
** centroid: 2, normalized-entropy: 0.5631028237513912, [(1, 46), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 21]]
** centroid: 3, normalized-entropy: 0.8208002549877175, [(2, 61), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 1, 0]]
** centroid: 5, normalized-entropy: 0.11327430349709665, [(1, 65), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 18, 0]]
** centroid: 6, normalized-entropy: 0.8997437586982626, [(1, 39), (2, 18)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 69, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1944726612381637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944726612381637, 0.14865103714819997] ***
*** starting iteration: 2; err: [Inf, 0.1944726612381637, 0.14865103714819997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868] ***
*** starting iteration: 3; err: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868, 0.1429140136707574] ***
*** starting iteration: 4; err: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868, 0.1429140136707574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868, 0.1429140136707574, 0.14252459394931793] ***
*** finished computation of 7 references, err: [Inf, 0.1944726612381637, 0.14865103714819997, 0.1439759221430868, 0.1429140136707574, 0.14252459394931793] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 65, 21]]
** centroid: 2, normalized-entropy: 0.8019325020834525, [(2, 65), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 20, 0]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(1, 45), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 31, 0]]
** centroid: 4, normalized-entropy: 0.9631672450918831, [(1, 49), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [15, 64, 0]]
** centroid: 5, normalized-entropy: 0.7012065844539666, [(1, 15), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18470057651214303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18470057651214303, 0.1559177541360259] ***
*** starting iteration: 2; err: [Inf, 0.18470057651214303, 0.1559177541360259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793] ***
*** starting iteration: 3; err: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793, 0.14919635574892162] ***
*** starting iteration: 4; err: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793, 0.14919635574892162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793, 0.14919635574892162, 0.14896902674436568] ***
*** finished computation of 7 references, err: [Inf, 0.18470057651214303, 0.1559177541360259, 0.15026323438435793, 0.14919635574892162, 0.14896902674436568] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 10, 0]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(1, 42), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 23]]
** centroid: 3, normalized-entropy: 0.9514122535330207, [(2, 39), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [96, 3, 0]]
** centroid: 5, normalized-entropy: 0.19590927087360496, [(1, 96), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 63, 0]]
** centroid: 6, normalized-entropy: 0.11611507530476962, [(1, 1), (2, 63)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [6, 52, 0]]
** centroid: 7, normalized-entropy: 0.47983202361612853, [(1, 6), (2, 52)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19486504239961505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486504239961505, 0.15478158967383207] ***
*** starting iteration: 2; err: [Inf, 0.19486504239961505, 0.15478158967383207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486504239961505, 0.15478158967383207, 0.15026362586393952] ***
*** starting iteration: 3; err: [Inf, 0.19486504239961505, 0.15478158967383207, 0.15026362586393952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486504239961505, 0.15478158967383207, 0.15026362586393952, 0.14944254893437028] ***
*** finished computation of 7 references, err: [Inf, 0.19486504239961505, 0.15478158967383207, 0.15026362586393952, 0.14944254893437028] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 47, 14]]
** centroid: 2, normalized-entropy: 0.7771529943226336, [(2, 47), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 32, 0]]
** centroid: 3, normalized-entropy: 0.9766349114440099, [(1, 46), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [70, 8, 0]]
** centroid: 4, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 49, 0]]
** centroid: 5, normalized-entropy: 0.868533960265235, [(1, 20), (2, 49)]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 46, 0]]
** centroid: 7, normalized-entropy: 0.14854949043034832, [(1, 1), (2, 46)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1977947692796588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1977947692796588, 0.1476491158604622] ***
*** starting iteration: 2; err: [Inf, 0.1977947692796588, 0.1476491158604622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875] ***
*** starting iteration: 3; err: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875, 0.1421531117539853] ***
*** starting iteration: 4; err: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875, 0.1421531117539853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875, 0.1421531117539853, 0.1415751974452287] ***
*** finished computation of 7 references, err: [Inf, 0.1977947692796588, 0.1476491158604622, 0.14360726385749875, 0.1421531117539853, 0.1415751974452287] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 19, 0]]
** centroid: 1, normalized-entropy: 0.8832225588099292, [(1, 44), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [39, 22, 0]]
** centroid: 2, normalized-entropy: 0.9432261548473416, [(1, 39), (2, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 65, 24]]
** centroid: 4, normalized-entropy: 0.8409805336163159, [(2, 65), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 54, 0]]
** centroid: 5, normalized-entropy: 0.9575534837147484, [(1, 33), (2, 54)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1995980020519346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1995980020519346, 0.15570257596485318] ***
*** starting iteration: 2; err: [Inf, 0.1995980020519346, 0.15570257596485318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1995980020519346, 0.15570257596485318, 0.1480514032582287] ***
*** starting iteration: 3; err: [Inf, 0.1995980020519346, 0.15570257596485318, 0.1480514032582287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1995980020519346, 0.15570257596485318, 0.1480514032582287, 0.14712073429394512] ***
*** finished computation of 7 references, err: [Inf, 0.1995980020519346, 0.15570257596485318, 0.1480514032582287, 0.14712073429394512] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 4, 0]]
** centroid: 1, normalized-entropy: 0.2623112196143368, [(1, 86), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 17]]
** centroid: 2, normalized-entropy: 0.8791357668533337, [(2, 40), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 8, 0]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 4, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 52, 0]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 60, 0]]
** centroid: 7, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1899450044427067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1899450044427067, 0.14500982255116104] ***
*** starting iteration: 2; err: [Inf, 0.1899450044427067, 0.14500982255116104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1899450044427067, 0.14500982255116104, 0.14253329455014319] ***
*** starting iteration: 3; err: [Inf, 0.1899450044427067, 0.14500982255116104, 0.14253329455014319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1899450044427067, 0.14500982255116104, 0.14253329455014319, 0.14229496908001601] ***
*** finished computation of 7 references, err: [Inf, 0.1899450044427067, 0.14500982255116104, 0.14253329455014319, 0.14229496908001601] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 10, 0]]
** centroid: 1, normalized-entropy: 0.4422615143479816, [(1, 99), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 16, 0]]
** centroid: 2, normalized-entropy: 0.7990485210442682, [(1, 50), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 21]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 33), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 49, 0]]
** centroid: 5, normalized-entropy: 0.8051250074646822, [(1, 16), (2, 49)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 46, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20861023875232787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20861023875232787, 0.1514032082045451] ***
*** starting iteration: 2; err: [Inf, 0.20861023875232787, 0.1514032082045451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224] ***
*** starting iteration: 3; err: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224, 0.1453677823524922] ***
*** starting iteration: 4; err: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224, 0.1453677823524922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224, 0.1453677823524922, 0.14497770156152545] ***
*** finished computation of 7 references, err: [Inf, 0.20861023875232787, 0.1514032082045451, 0.1466091445009224, 0.1453677823524922, 0.14497770156152545] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 41, 0]]
** centroid: 1, normalized-entropy: 0.9998900524545515, [(1, 40), (2, 41)]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 18, 0]]
** centroid: 3, normalized-entropy: 0.8691375806126381, [(1, 44), (2, 18)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 43, 25]]
** centroid: 4, normalized-entropy: 0.9488482942421287, [(2, 43), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 24, 0]]
** centroid: 5, normalized-entropy: 0.8196004346196011, [(1, 70), (2, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 49, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20812689884006977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20812689884006977, 0.14895743885822593] ***
*** starting iteration: 2; err: [Inf, 0.20812689884006977, 0.14895743885822593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20812689884006977, 0.14895743885822593, 0.14422142519429326] ***
*** starting iteration: 3; err: [Inf, 0.20812689884006977, 0.14895743885822593, 0.14422142519429326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20812689884006977, 0.14895743885822593, 0.14422142519429326, 0.1437338917236775] ***
*** finished computation of 7 references, err: [Inf, 0.20812689884006977, 0.14895743885822593, 0.14422142519429326, 0.1437338917236775] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 64, 21]]
** centroid: 1, normalized-entropy: 0.806583102274714, [(2, 64), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 26, 0]]
** centroid: 3, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 26, 0]]
** centroid: 4, normalized-entropy: 0.9596868937742168, [(1, 42), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 49, 0]]
** centroid: 5, normalized-entropy: 0.9679884922470298, [(1, 32), (2, 49)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18821073856949805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18821073856949805, 0.1500825287885964] ***
*** starting iteration: 2; err: [Inf, 0.18821073856949805, 0.1500825287885964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516] ***
*** starting iteration: 3; err: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516, 0.14516391174308957] ***
*** starting iteration: 4; err: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516, 0.14516391174308957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516, 0.14516391174308957, 0.1449732989380136] ***
*** finished computation of 7 references, err: [Inf, 0.18821073856949805, 0.1500825287885964, 0.14633722317032516, 0.14516391174308957, 0.1449732989380136] ***
*** center 1: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 11, 0]]
** centroid: 2, normalized-entropy: 0.6442142137378306, [(1, 56), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 52, 19]]
** centroid: 3, normalized-entropy: 0.8380078505079931, [(2, 52), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 46, 0]]
** centroid: 5, normalized-entropy: 0.9866554896538049, [(1, 35), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 54, 0]]
** centroid: 6, normalized-entropy: 0.13110652958234514, [(1, 1), (2, 54)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 5, 0]]
** centroid: 7, normalized-entropy: 0.4044483864864384, [(1, 57), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18897559770941735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18897559770941735, 0.15349659034702928] ***
*** starting iteration: 2; err: [Inf, 0.18897559770941735, 0.15349659034702928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233] ***
*** starting iteration: 3; err: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077] ***
*** starting iteration: 4; err: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077, 0.14490965754166246] ***
*** starting iteration: 5; err: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077, 0.14490965754166246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077, 0.14490965754166246, 0.1443000963628292] ***
*** finished computation of 7 references, err: [Inf, 0.18897559770941735, 0.15349659034702928, 0.14856577453017233, 0.14624154039286077, 0.14490965754166246, 0.1443000963628292] ***
*** center 1: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [81, 7, 0]]
** centroid: 2, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 15]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 54), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 23, 0]]
** centroid: 5, normalized-entropy: 0.8701883352082787, [(1, 56), (2, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 33, 0]]
** centroid: 6, normalized-entropy: 0.9915528503834039, [(1, 41), (2, 33)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18675776082463563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776082463563, 0.15368659550137817] ***
*** starting iteration: 2; err: [Inf, 0.18675776082463563, 0.15368659550137817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776082463563, 0.15368659550137817, 0.1500048628486693] ***
*** starting iteration: 3; err: [Inf, 0.18675776082463563, 0.15368659550137817, 0.1500048628486693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776082463563, 0.15368659550137817, 0.1500048628486693, 0.1490112788155675] ***
*** finished computation of 7 references, err: [Inf, 0.18675776082463563, 0.15368659550137817, 0.1500048628486693, 0.1490112788155675] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 34, 0]]
** centroid: 1, normalized-entropy: 0.98811083652183, [(1, 44), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 9, 0]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(1, 60), (2, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 9, 0]]
** centroid: 5, normalized-entropy: 0.5203346157857599, [(1, 68), (2, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 54, 19]]
** centroid: 7, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1883708799337037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883708799337037, 0.1485128962751478] ***
*** starting iteration: 2; err: [Inf, 0.1883708799337037, 0.1485128962751478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883708799337037, 0.1485128962751478, 0.14554716105386614] ***
*** starting iteration: 3; err: [Inf, 0.1883708799337037, 0.1485128962751478, 0.14554716105386614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1883708799337037, 0.1485128962751478, 0.14554716105386614, 0.14483140538539738] ***
*** finished computation of 7 references, err: [Inf, 0.1883708799337037, 0.1485128962751478, 0.14554716105386614, 0.14483140538539738] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 66, 16]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 6, 0]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(1, 50), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 22, 0]]
** centroid: 4, normalized-entropy: 0.7765557854444601, [(1, 74), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 22, 0]]
** centroid: 5, normalized-entropy: 0.8390040613676978, [(1, 60), (2, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 45, 0]]
** centroid: 7, normalized-entropy: 0.2538784402981617, [(1, 2), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18974450317025185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974450317025185, 0.1509170444291085] ***
*** starting iteration: 2; err: [Inf, 0.18974450317025185, 0.1509170444291085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974450317025185, 0.1509170444291085, 0.1477745197042823] ***
*** starting iteration: 3; err: [Inf, 0.18974450317025185, 0.1509170444291085, 0.1477745197042823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974450317025185, 0.1509170444291085, 0.1477745197042823, 0.14701256189960987] ***
*** finished computation of 7 references, err: [Inf, 0.18974450317025185, 0.1509170444291085, 0.1477745197042823, 0.14701256189960987] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 80, 23]]
** centroid: 1, normalized-entropy: 0.7661493370832159, [(2, 80), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 31, 0]]
** centroid: 4, normalized-entropy: 0.9809470132751208, [(1, 43), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 18, 0]]
** centroid: 5, normalized-entropy: 0.8224042259549892, [(1, 52), (2, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [6, 47, 0]]
** centroid: 7, normalized-entropy: 0.5095157180881823, [(1, 6), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19702540012565442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702540012565442, 0.14704977967590094] ***
*** starting iteration: 2; err: [Inf, 0.19702540012565442, 0.14704977967590094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702540012565442, 0.14704977967590094, 0.14252359608188273] ***
*** starting iteration: 3; err: [Inf, 0.19702540012565442, 0.14704977967590094, 0.14252359608188273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19702540012565442, 0.14704977967590094, 0.14252359608188273, 0.14221117810532452] ***
*** finished computation of 7 references, err: [Inf, 0.19702540012565442, 0.14704977967590094, 0.14252359608188273, 0.14221117810532452] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 76, 0]]
** centroid: 1, normalized-entropy: 0.6457523329916605, [(1, 15), (2, 76)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 22, 0]]
** centroid: 3, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 26, 0]]
** centroid: 4, normalized-entropy: 0.9842399889605549, [(1, 35), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 59, 21]]
** centroid: 5, normalized-entropy: 0.8304955225035798, [(2, 59), (3, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19643247199244798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643247199244798, 0.1525683443089947] ***
*** starting iteration: 2; err: [Inf, 0.19643247199244798, 0.1525683443089947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645] ***
*** starting iteration: 3; err: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645, 0.14412544313445688] ***
*** starting iteration: 4; err: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645, 0.14412544313445688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645, 0.14412544313445688, 0.14386692390963435] ***
*** finished computation of 7 references, err: [Inf, 0.19643247199244798, 0.1525683443089947, 0.14542902186652645, 0.14412544313445688, 0.14386692390963435] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [60, 4, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 23]]
** centroid: 2, normalized-entropy: 0.8468781063424823, [(2, 61), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 13, 0]]
** centroid: 3, normalized-entropy: 0.8841151220488478, [(1, 30), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 30, 0]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(1, 55), (2, 30)]
*** center 5: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [13, 63, 0]]
** centroid: 6, normalized-entropy: 0.6601070987550468, [(1, 13), (2, 63)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1944700355473906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944700355473906, 0.15557588948123158] ***
*** starting iteration: 2; err: [Inf, 0.1944700355473906, 0.15557588948123158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114] ***
*** starting iteration: 3; err: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073] ***
*** starting iteration: 4; err: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073, 0.1483699875418097] ***
*** starting iteration: 5; err: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073, 0.1483699875418097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073, 0.1483699875418097, 0.14785164737701417] ***
*** finished computation of 7 references, err: [Inf, 0.1944700355473906, 0.15557588948123158, 0.15130925863888114, 0.1493742946200073, 0.1483699875418097, 0.14785164737701417] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 26, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 52), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 3, 0]]
** centroid: 4, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 36, 0]]
** centroid: 5, normalized-entropy: 0.9807983646944296, [(1, 50), (2, 36)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 16]]
** centroid: 6, normalized-entropy: 0.7586638628883696, [(2, 57), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2000726398276165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2000726398276165, 0.15221210887096823] ***
*** starting iteration: 2; err: [Inf, 0.2000726398276165, 0.15221210887096823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2000726398276165, 0.15221210887096823, 0.14794830251857638] ***
*** starting iteration: 3; err: [Inf, 0.2000726398276165, 0.15221210887096823, 0.14794830251857638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2000726398276165, 0.15221210887096823, 0.14794830251857638, 0.14710172409564257] ***
*** finished computation of 7 references, err: [Inf, 0.2000726398276165, 0.15221210887096823, 0.14794830251857638, 0.14710172409564257] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 57, 0]]
** centroid: 1, normalized-entropy: 0.34918437350730797, [(1, 4), (2, 57)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 11, 0]]
** centroid: 3, normalized-entropy: 0.6619760641115651, [(1, 53), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [88, 2, 0]]
** centroid: 4, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 3, 0]]
** centroid: 5, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 67, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 22]]
** centroid: 7, normalized-entropy: 1.0, [(2, 22), (3, 22)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18598287319764495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598287319764495, 0.14708788779005408] ***
*** starting iteration: 2; err: [Inf, 0.18598287319764495, 0.14708788779005408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567] ***
*** starting iteration: 3; err: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567, 0.14102643926069142] ***
*** starting iteration: 4; err: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567, 0.14102643926069142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567, 0.14102643926069142, 0.14071818986069412] ***
*** finished computation of 7 references, err: [Inf, 0.18598287319764495, 0.14708788779005408, 0.14218463973747567, 0.14102643926069142, 0.14071818986069412] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 29, 0]]
** centroid: 1, normalized-entropy: 0.9725523165688429, [(1, 43), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 27, 0]]
** centroid: 2, normalized-entropy: 0.9466474387740499, [(1, 47), (2, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 21]]
** centroid: 4, normalized-entropy: 0.7927652363756529, [(2, 67), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 57, 0]]
** centroid: 5, normalized-entropy: 0.9293636260137188, [(1, 30), (2, 57)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19570012019854038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19570012019854038, 0.14946571404114364] ***
*** starting iteration: 2; err: [Inf, 0.19570012019854038, 0.14946571404114364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19570012019854038, 0.14946571404114364, 0.1458261042870581] ***
*** starting iteration: 3; err: [Inf, 0.19570012019854038, 0.14946571404114364, 0.1458261042870581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19570012019854038, 0.14946571404114364, 0.1458261042870581, 0.14496628142893314] ***
*** finished computation of 7 references, err: [Inf, 0.19570012019854038, 0.14946571404114364, 0.1458261042870581, 0.14496628142893314] ***
*** center 1: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 51, 24]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(2, 51), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 19, 0]]
** centroid: 3, normalized-entropy: 0.9357110512652843, [(1, 35), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 6, 0]]
** centroid: 4, normalized-entropy: 0.3877431810559867, [(1, 73), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 51, 0]]
** centroid: 5, normalized-entropy: 0.9447388286467892, [(1, 29), (2, 51)]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 48, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18693143199756743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18693143199756743, 0.14757890233106447] ***
*** starting iteration: 2; err: [Inf, 0.18693143199756743, 0.14757890233106447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697] ***
*** starting iteration: 3; err: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697, 0.14239204760454596] ***
*** starting iteration: 4; err: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697, 0.14239204760454596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697, 0.14239204760454596, 0.14174374634120612] ***
*** finished computation of 7 references, err: [Inf, 0.18693143199756743, 0.14757890233106447, 0.14366285815974697, 0.14239204760454596, 0.14174374634120612] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 1, 0]]
** centroid: 1, normalized-entropy: 0.11190990870168394, [(1, 66), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 22, 0]]
** centroid: 2, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 19]]
** centroid: 3, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 31, 0]]
** centroid: 5, normalized-entropy: 0.9631672450918831, [(1, 49), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 72, 0]]
** centroid: 6, normalized-entropy: 0.5349436990971067, [(1, 10), (2, 72)]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18450517858751117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18450517858751117, 0.15182827781699598] ***
*** starting iteration: 2; err: [Inf, 0.18450517858751117, 0.15182827781699598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18450517858751117, 0.15182827781699598, 0.14809552206657828] ***
*** starting iteration: 3; err: [Inf, 0.18450517858751117, 0.15182827781699598, 0.14809552206657828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18450517858751117, 0.15182827781699598, 0.14809552206657828, 0.14736622681468725] ***
*** finished computation of 7 references, err: [Inf, 0.18450517858751117, 0.15182827781699598, 0.14809552206657828, 0.14736622681468725] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [91, 10, 0]]
** centroid: 1, normalized-entropy: 0.46584917377204255, [(1, 91), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 8, 0]]
** centroid: 2, normalized-entropy: 0.6267511370265896, [(1, 43), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 16]]
** centroid: 3, normalized-entropy: 0.9113423759758414, [(2, 33), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [97, 4, 0]]
** centroid: 5, normalized-entropy: 0.24047340659188013, [(1, 97), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 62, 0]]
** centroid: 6, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19386725993454457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19386725993454457, 0.1551524568181485] ***
*** starting iteration: 2; err: [Inf, 0.19386725993454457, 0.1551524568181485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674] ***
*** starting iteration: 3; err: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674, 0.14896495030075313] ***
*** starting iteration: 4; err: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674, 0.14896495030075313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674, 0.14896495030075313, 0.1480423787217587] ***
*** finished computation of 7 references, err: [Inf, 0.19386725993454457, 0.1551524568181485, 0.15085335270501674, 0.14896495030075313, 0.1480423787217587] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 1, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 1, 0]]
** centroid: 2, normalized-entropy: 0.09597040299587173, [(1, 80), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 41, 23]]
** centroid: 3, normalized-entropy: 0.9421631690835511, [(2, 41), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [63, 9, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 63), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 64, 0]]
** centroid: 6, normalized-entropy: 0.11467550533614682, [(1, 1), (2, 64)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 48, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 2), (2, 48)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18918121385760606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18918121385760606, 0.15291952798888087] ***
*** starting iteration: 2; err: [Inf, 0.18918121385760606, 0.15291952798888087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742] ***
*** starting iteration: 3; err: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742, 0.1482234754189849] ***
*** starting iteration: 4; err: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742, 0.1482234754189849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742, 0.1482234754189849, 0.14736630195379258] ***
*** finished computation of 7 references, err: [Inf, 0.18918121385760606, 0.15291952798888087, 0.14930284621007742, 0.1482234754189849, 0.14736630195379258] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 35, 0]]
** centroid: 1, normalized-entropy: 0.9954993847275952, [(1, 41), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 22]]
** centroid: 4, normalized-entropy: 0.80235344282919, [(2, 68), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 19, 0]]
** centroid: 5, normalized-entropy: 0.8325582396745668, [(1, 53), (2, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 51, 0]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(1, 3), (2, 51)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18216030173376202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18216030173376202, 0.14983061310416088] ***
*** starting iteration: 2; err: [Inf, 0.18216030173376202, 0.14983061310416088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18216030173376202, 0.14983061310416088, 0.14754096825234592] ***
*** starting iteration: 3; err: [Inf, 0.18216030173376202, 0.14983061310416088, 0.14754096825234592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18216030173376202, 0.14983061310416088, 0.14754096825234592, 0.14659708908014] ***
*** finished computation of 7 references, err: [Inf, 0.18216030173376202, 0.14983061310416088, 0.14754096825234592, 0.14659708908014] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [95, 1, 0]]
** centroid: 1, normalized-entropy: 0.08354288831032243, [(1, 95), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [39, 15, 0]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(1, 39), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 21]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 48), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 49, 0]]
** centroid: 5, normalized-entropy: 0.9037762882345833, [(1, 23), (2, 49)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19866002471139654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19866002471139654, 0.14729679759219289] ***
*** starting iteration: 2; err: [Inf, 0.19866002471139654, 0.14729679759219289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19866002471139654, 0.14729679759219289, 0.14286440946534276] ***
*** starting iteration: 3; err: [Inf, 0.19866002471139654, 0.14729679759219289, 0.14286440946534276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19866002471139654, 0.14729679759219289, 0.14286440946534276, 0.14219771045260132] ***
*** finished computation of 7 references, err: [Inf, 0.19866002471139654, 0.14729679759219289, 0.14286440946534276, 0.14219771045260132] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 22, 0]]
** centroid: 1, normalized-entropy: 0.9333572600179806, [(1, 41), (2, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 58, 20]]
** centroid: 4, normalized-entropy: 0.8212809417449864, [(2, 58), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [41, 40, 0]]
** centroid: 5, normalized-entropy: 0.9998900524545515, [(1, 41), (2, 40)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 48, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 2), (2, 48)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 337,3 => 41,1 => 622), Dict(2 => 380,3 => 46,1 => 574))
[ Info: ===== scores for single classifier: {"micro_f1":0.937,"precision":0.937,"recall":0.937,"macro_recall":0.950819519636844,"macro_f1":0.8974587857171882,"accuracy":0.937,"class_f1":{"2":0.9195402298850576,"3":0.8108108108108107,"1":0.9620253164556963},"class_precision":{"2":0.8933002481389578,"3":0.6923076923076923,"1":1.0},"class_recall":{"2":0.9473684210526315,"3":0.9782608695652174,"1":0.926829268292683}}
[ Info: ===== scores for 1: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9732567101741628,"macro_f1":0.9742040607764989,"accuracy":0.969,"class_f1":{"2":0.96010296010296,"3":0.989010989010989,"1":0.9734982332155477},"class_precision":{"2":0.9395465994962217,"3":1.0,"1":0.9874551971326165},"class_recall":{"2":0.9815789473684211,"3":0.9782608695652174,"1":0.9599303135888502}}
[ Info: ===== scores for 5: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9767288050454875,"macro_f1":0.97918563721076,"accuracy":0.976,"class_f1":{"2":0.968668407310705,"3":0.989010989010989,"1":0.9798775153105862},"class_precision":{"2":0.961139896373057,"3":1.0,"1":0.984182776801406},"class_recall":{"2":0.9763157894736842,"3":0.9782608695652174,"1":0.975609756097561}}
[ Info: ===== scores for 7: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9779024709174847,"macro_f1":0.9799345902350488,"accuracy":0.977,"class_f1":{"2":0.9700910273081924,"3":0.989010989010989,"1":0.9807017543859649},"class_precision":{"2":0.9588688946015425,"3":1.0,"1":0.9876325088339223},"class_recall":{"2":0.9815789473684211,"3":0.9782608695652174,"1":0.9738675958188153}}
[ Info: ===== scores for 9: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9796446311962302,"macro_f1":0.9787964625415935,"accuracy":0.98,"class_f1":{"2":0.9738903394255874,"3":0.9782608695652174,"1":0.9842381786339756},"class_precision":{"2":0.966321243523316,"3":0.9782608695652174,"1":0.9894366197183099},"class_recall":{"2":0.9815789473684211,"3":0.9782608695652174,"1":0.9790940766550522}}
[ Info: ===== scores for 11: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9787674382137741,"macro_f1":0.978062322346109,"accuracy":0.979,"class_f1":{"2":0.9725490196078431,"3":0.9782608695652174,"1":0.9833770778652668},"class_precision":{"2":0.9662337662337662,"3":0.9782608695652174,"1":0.9876977152899824},"class_recall":{"2":0.9789473684210527,"3":0.9782608695652174,"1":0.9790940766550522}}
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.977,"k":7,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9779024709174847,"macro_f1":0.9799345902350488,"accuracy":0.977,"class_f1":{"2":0.9700910273081924,"3":0.989010989010989,"1":0.9807017543859649},"class_precision":{"2":0.9588688946015425,"3":1.0,"1":0.9876325088339223},"class_recall":{"2":0.9815789473684211,"3":0.9782608695652174,"1":0.9738675958188153}}
Test Summary: | Pass  Total
AKNC          |    8      8
[299, 1, 3, 2, 7, 1, 4, 8, 2, 4, 23, 10, 5, 3, 7, 8, 6, 2, 1, 1, 4, 4, 6, 8, 8, 5, 9, 3, 3, 62, 15, 1, 8, 21, 5, 11, 9, 18, 7, 8, 1, 6, 6, 8, 10, 9, 2, 4, 4, 5, 5, 8, 77, 9, 3, 4, 5, 65, 31, 7, 11, 6, 5, 54, 2, 143, 41, 16, 40, 3, 4, 35, 12, 3, 22, 23, 11, 9, 8, 65, 17, 61, 8, 25, 10, 14, 6, 5, 27, 7, 19, 11, 14, 11, 3, 8, 22, 15, 7, 34, 6, 2, 5, 13, 16, 28, 66, 1, 42, 12, 10, 7, 15, 7, 41, 3, 22, 11, 52, 22, 3, 5, 37, 2, 58, 326, 87, 59, 105, 11, 36, 4, 10, 8, 12, 13, 13, 6, 55, 135, 25, 12, 18, 7, 16, 23, 111, 27, 43, 7, 43, 35, 42, 17, 9, 64, 35, 13, 3, 11, 11, 4, 24, 13, 2, 29, 39, 5, 6, 6, 624, 102, 12, 2, 27, 13, 11, 9, 1, 11, 17, 18, 33, 11, 69, 13, 15, 200, 27, 45, 12, 10, 44, 5, 16, 44, 392, 75, 53, 147, 48, 4, 5, 2, 85, 77, 7, 52, 9, 28, 22, 88, 22, 417, 45, 7, 17, 46, 65, 6, 112, 5, 4, 32, 5, 35, 7, 7, 20, 20, 45, 13, 9, 51, 29, 22, 4, 12, 71, 12, 7, 62, 5, 68, 17, 187, 7, 7, 12, 15, 11, 33, 7, 23, 14, 2, 4, 35, 62, 7, 31, 54, 2, 27, 41, 68, 45, 17, 165, 12, 4, 30, 16, 97, 2, 10, 26, 540, 18, 55, 7, 13, 30, 27, 33, 12, 11, 4, 92, 12, 38, 55, 18, 31, 165, 78, 19, 3, 72, 26]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6369999999999998, speedup = 0.22722864533307682, eval_ratio = 0.069092)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.40744357638888895,"recall":0.4001736111111112,"f1":null,"seconds":0.00018010102212429047,"exhaustive_search_seconds":0.0003513600677251816,"evaluations":482.953125,"distances_sum":1701.6984937766538}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5868055555555555,"recall":0.5868055555555555,"f1":0.5868055555555555,"seconds":0.0004858318716287613,"exhaustive_search_seconds":0.0003513600677251816,"evaluations":647.6015625,"distances_sum":1606.1438819631912}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.671006944444444,"recall":0.671006944444444,"f1":0.671006944444444,"seconds":0.0003929995000362396,"exhaustive_search_seconds":0.0003513600677251816,"evaluations":757.3984375,"distances_sum":1564.4681143905354}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7499999999999993,"recall":0.7499999999999993,"f1":0.7499999999999993,"seconds":0.000494934618473053,"exhaustive_search_seconds":0.0003513600677251816,"evaluations":881.9609375,"distances_sum":1532.8595603416925}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333329,"recall":0.8098958333333329,"f1":0.8098958333333329,"seconds":0.0006026886403560638,"exhaustive_search_seconds":0.0003513600677251816,"evaluations":1030.0859375,"distances_sum":1515.6555541852977}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7749999999999997, speedup = 0.653548683664407, eval_ratio = 0.092321)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
