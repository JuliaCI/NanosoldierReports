Julia Version 1.6.0-DEV.1130
Commit ab451cdcd6 (2020-10-05 03:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ATMXp5/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ATMXp5/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722600034837258
curgen: 20 fitness: 0.21722600034837258
curgen: 30 fitness: 0.21722600034837258
curgen: 40 fitness: 0.21722600034837258
curgen: 50 fitness: 0.21722600034837258
CoordinateCreature{Vector{Float64}}([0.22296372658417996], -0.21722600034837258) 0.22296372658417996 -0.21722600034837258
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258093940438997
curgen: 100 fitness: 3.2581452727251707
curgen: 150 fitness: 3.258273075288339
curgen: 200 fitness: 3.258347675305398
curgen: 250 fitness: 3.258352869456151
curgen: 300 fitness: 3.2584214434506182
curgen: 350 fitness: 3.258428655370719
curgen: 400 fitness: 3.258431009496354
curgen: 450 fitness: 3.2584496890934074
curgen: 500 fitness: 3.258465962904977
CoordinateCreature{Vector{Float64}}([0.22250234310182737, 0.22264762286310336, 0.2225611411156865, 0.22272540661927603, 0.22247550999588017, -0.22234624746530024, 0.22272948599094472, -0.2227277125637549, -0.2225102742340393, -0.22178882228116253, -0.22264460591095514, 0.22280065775613886, 0.22236139561929816, -0.2226555106620777, -0.22266590657613602], -3.258465962904977) [0.22250234310182737, 0.22264762286310336, 0.2225611411156865, 0.22272540661927603, 0.22247550999588017, -0.22234624746530024, 0.22272948599094472, -0.2227277125637549, -0.2225102742340393, -0.22178882228116253, -0.22264460591095514, 0.22280065775613886, 0.22236139561929816, -0.2226555106620777, -0.22266590657613602] -3.258465962904977
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004103129676224171
curgen: 100 fitness: -0.0019828973181859055
curgen: 150 fitness: -0.001446559862159802
curgen: 200 fitness: -0.0011177136054811854
curgen: 250 fitness: -0.0009970297054451294
curgen: 300 fitness: -0.0007860484543300572
curgen: 350 fitness: -0.0007765621734847628
curgen: 400 fitness: -0.0007765621734847628
curgen: 450 fitness: -0.0007765621734847628
curgen: 500 fitness: -0.0006716217533835334
CoordinateCreature{Vector{Float64}}([-0.00047764093639340345, -0.0002669129284965121, 0.0006198784408336964, 0.00033491618887094096, 8.671872363046441e-5, 0.0005229710715137875, 0.0011527595812305799, -0.0004325908530835338, 0.00031970048656699245, -7.351359125514569e-6, -0.0006739521812632799, 3.3014567336165995e-5, -0.0003746140299030723, 7.965402164305187e-5, -0.0002597485773521515], 0.0006674933451336074) [-0.00047764093639340345, -0.0002669129284965121, 0.0006198784408336964, 0.00033491618887094096, 8.671872363046441e-5, 0.0005229710715137875, 0.0011527595812305799, -0.0004325908530835338, 0.00031970048656699245, -7.351359125514569e-6, -0.0006739521812632799, 3.3014567336165995e-5, -0.0003746140299030723, 7.965402164305187e-5, -0.0002597485773521515] 0.0006674933451336074
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
