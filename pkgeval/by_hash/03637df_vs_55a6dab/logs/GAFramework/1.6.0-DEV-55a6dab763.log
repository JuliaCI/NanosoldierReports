Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_2Qm8UX/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_2Qm8UX/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172143281637041
curgen: 20 fitness: 0.2172143281637041
curgen: 30 fitness: 0.21722993462568702
curgen: 40 fitness: 0.21722993462568702
curgen: 50 fitness: 0.21722993462568702
CoordinateCreature{Vector{Float64}}([0.22283722640769535], -0.21722993462568702) 0.22283722640769535 -0.21722993462568702
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578360232554493
curgen: 100 fitness: 3.258212978960467
curgen: 150 fitness: 3.2583294656592248
curgen: 200 fitness: 3.258391805135354
curgen: 250 fitness: 3.258391805135354
curgen: 300 fitness: 3.2584641916243977
curgen: 350 fitness: 3.258472188105057
curgen: 400 fitness: 3.2584753073797343
curgen: 450 fitness: 3.2584753073797343
curgen: 500 fitness: 3.258475347015251
CoordinateCreature{Vector{Float64}}([0.22225878565344045, -0.2225563805193731, 0.22221869567139113, -0.222548776581797, 0.22254648660560947, 0.22278295269161205, 0.2225649386552351, -0.22226295235435425, 0.22246839412034766, -0.22240740211412924, 0.22302713692155188, -0.2223971592334069, -0.22240298715765436, 0.22240634542906046, 0.2224580290381496], -3.258475347015251) [0.22225878565344045, -0.2225563805193731, 0.22221869567139113, -0.222548776581797, 0.22254648660560947, 0.22278295269161205, 0.2225649386552351, -0.22226295235435425, 0.22246839412034766, -0.22240740211412924, 0.22302713692155188, -0.2223971592334069, -0.22240298715765436, 0.22240634542906046, 0.2224580290381496] -3.258475347015251
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.000970718353016764
curgen: 100 fitness: -0.0006595503611777076
curgen: 150 fitness: -0.0006382089825365256
curgen: 200 fitness: -0.0006382089825365256
curgen: 250 fitness: -0.0006382089825365256
curgen: 300 fitness: -0.0006382089825365256
curgen: 350 fitness: -0.0006198407743625012
curgen: 400 fitness: -0.000286872825682849
curgen: 450 fitness: -0.000286872825682849
curgen: 500 fitness: -0.000286872825682849
CoordinateCreature{Vector{Float64}}([0.0005082172015360431, -5.6514405341022596e-5, -2.7328903630339195e-5, -8.613898844852509e-5, -0.00015257298868551496, 0.00012538011800599963, -0.0006932746980180363, 0.000339668489959955, 0.00013423977900822585, -0.0005653546098642376, -0.00011029773147607706, 0.00015065208215901996, 1.2227322711771795e-5, -0.00012736429687505713, -0.00039046528635599924], 0.000286872825682849) [0.0005082172015360431, -5.6514405341022596e-5, -2.7328903630339195e-5, -8.613898844852509e-5, -0.00015257298868551496, 0.00012538011800599963, -0.0006932746980180363, 0.000339668489959955, 0.00013423977900822585, -0.0005653546098642376, -0.00011029773147607706, 0.00015065208215901996, 1.2227322711771795e-5, -0.00012736429687505713, -0.00039046528635599924] 0.000286872825682849
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
