Julia Version 1.6.0-DEV.1124
Commit 55a6dab763 (2020-10-04 09:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed RangeArrays ────────────────── v0.3.2
  Installed AxisAlgorithms ─────────────── v1.0.0
  Installed CustomUnitRanges ───────────── v1.0.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed OffsetArrays ───────────────── v1.3.0
  Installed libpng_jll ─────────────────── v1.6.37+5
  Installed FFTViews ───────────────────── v0.3.1
  Installed Observables ────────────────── v0.3.1
  Installed CatIndices ─────────────────── v0.2.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed Tables ─────────────────────── v1.1.0
  Installed Match ──────────────────────── v1.1.0
  Installed MakieGallery ───────────────── v0.2.17
  Installed Highlights ─────────────────── v0.4.5
  Installed SimpleTraits ───────────────── v0.9.3
  Installed IdentityRanges ─────────────── v0.3.1
  Installed ImageIO ────────────────────── v0.3.0
  Installed UnicodeFun ─────────────────── v0.4.1
  Installed Missings ───────────────────── v0.4.4
  Installed PDMats ─────────────────────── v0.10.1
  Installed ImageAxes ──────────────────── v0.6.6
  Installed MeshIO ─────────────────────── v0.4.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Bzip2_jll ──────────────────── v1.0.6+4
  Installed WoodburyMatrices ───────────── v0.5.2
  Installed TiledIteration ─────────────── v0.2.4
  Installed MappedArrays ───────────────── v0.2.2
  Installed PlotUtils ──────────────────── v1.0.7
  Installed FreeType2_jll ──────────────── v2.10.1+4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FFMPEG ─────────────────────── v0.4.0
  Installed Formatting ─────────────────── v0.4.1
  Installed ColorTypes ─────────────────── v0.10.9
  Installed MosaicViews ────────────────── v0.2.3
  Installed KernelDensity ──────────────── v0.6.0
  Installed SignedDistanceFields ───────── v0.4.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed IterTools ──────────────────── v1.3.0
  Installed FreeTypeAbstraction ────────── v0.8.1
  Installed LAME_jll ───────────────────── v3.100.0+2
  Installed PaddedViews ────────────────── v0.5.5
  Installed DataValueInterfaces ────────── v1.0.0
  Installed OpenSSL_jll ────────────────── v1.1.1+5
  Installed Documenter ─────────────────── v0.25.2
  Installed StatsBase ──────────────────── v0.33.1
  Installed FFMPEG_jll ─────────────────── v4.3.1+2
  Installed FileIO ─────────────────────── v1.4.3
  Installed Parsers ────────────────────── v1.0.10
  Installed Requires ───────────────────── v1.1.0
  Installed DocStringExtensions ────────── v0.8.3
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed Compat ─────────────────────── v3.18.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed Ratios ─────────────────────── v0.4.0
  Installed GeometryBasics ─────────────── v0.3.1
  Installed Showoff ────────────────────── v0.3.2
  Installed Animations ─────────────────── v0.4.1
  Installed ImageFiltering ─────────────── v0.6.15
  Installed ImageTransformations ───────── v0.8.6
  Installed ZipFile ────────────────────── v0.9.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed EarCut_jll ─────────────────── v2.1.5+0
  Installed Colors ─────────────────────── v0.12.4
  Installed FixedPointNumbers ──────────── v0.8.4
  Installed Ogg_jll ────────────────────── v1.3.4+1
  Installed ColorVectorSpace ───────────── v0.8.6
  Installed FriBidi_jll ────────────────── v1.0.5+5
  Installed ComputationalResources ─────── v0.3.2
  Installed FFTW ───────────────────────── v1.2.4
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed CEnum ──────────────────────── v0.4.1
  Installed EllipsisNotation ───────────── v0.4.0
  Installed IndirectArrays ─────────────── v0.5.1
  Installed StructArrays ───────────────── v0.4.4
  Installed ColorSchemes ───────────────── v3.10.1
  Installed PNGFiles ───────────────────── v0.3.1
  Installed StaticArrays ───────────────── v0.12.4
  Installed ImageCore ──────────────────── v0.8.16
  Installed Grisu ──────────────────────── v1.0.0
  Installed x264_jll ───────────────────── v2020.7.14+1
  Installed Reexport ───────────────────── v0.2.0
  Installed Opus_jll ───────────────────── v1.3.1+2
  Installed TableTraits ────────────────── v1.0.0
  Installed Adapt ──────────────────────── v2.3.0
  Installed Contour ────────────────────── v0.5.5
  Installed Graphics ───────────────────── v1.0.2
  Installed libass_jll ─────────────────── v0.14.0+3
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed Packing ────────────────────── v0.4.1
  Installed ColorBrewer ────────────────── v0.4.0
  Installed OrderedCollections ─────────── v1.3.1
  Installed Distributions ──────────────── v0.23.12
  Installed SyntaxTree ─────────────────── v1.0.1
  Installed CoordinateTransformations ──── v0.6.0
  Installed x265_jll ───────────────────── v3.0.0+2
  Installed StableRNGs ─────────────────── v0.1.2
  Installed GridLayoutBase ─────────────── v0.3.7
  Installed AxisArrays ─────────────────── v0.4.3
  Installed QuadGK ─────────────────────── v2.4.1
  Installed StatsFuns ──────────────────── v0.9.5
  Installed IntervalSets ───────────────── v0.5.1
  Installed FillArrays ─────────────────── v0.9.6
  Installed FreeType ───────────────────── v3.0.1
  Installed libvorbis_jll ──────────────── v1.3.6+5
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed Rmath ──────────────────────── v0.6.1
  Installed LibVPX_jll ─────────────────── v1.9.0+0
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed Interpolations ─────────────── v0.12.10
  Installed ImageMetadata ──────────────── v0.9.3
  Installed Rotations ──────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.18.7
  Installed MacroTools ─────────────────── v0.5.5
  Installed JSON ───────────────────────── v0.21.1
  Installed libfdk_aac_jll ─────────────── v0.1.6+3
  Installed AbstractPlotting ───────────── v0.12.14
Updating `~/.julia/environments/v1.6/Project.toml`
  [dbd62bd0] + MakieGallery v0.2.17
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [537997a7] + AbstractPlotting v0.12.14
  [79e6a3ab] + Adapt v2.3.0
  [27a7e980] + Animations v0.4.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.3
  [b99e7846] + BinaryProvider v0.5.10
  [6e34b625] + Bzip2_jll v1.0.6+4
  [fa961155] + CEnum v0.4.1
  [aafaddc9] + CatIndices v0.2.1
  [a2cac450] + ColorBrewer v0.4.0
  [35d6a980] + ColorSchemes v3.10.1
  [3da002f7] + ColorTypes v0.10.9
  [c3611d14] + ColorVectorSpace v0.8.6
  [5ae59095] + Colors v0.12.4
  [34da2185] + Compat v3.18.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [ed09eef8] + ComputationalResources v0.3.2
  [d38c429a] + Contour v0.5.5
  [150eb455] + CoordinateTransformations v0.6.0
  [dc8bdbbb] + CustomUnitRanges v1.0.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [31c24e10] + Distributions v0.23.12
  [ffbed154] + DocStringExtensions v0.8.3
  [e30172f5] + Documenter v0.25.2
  [5ae413db] + EarCut_jll v2.1.5+0
  [da5c29d0] + EllipsisNotation v0.4.0
  [c87230d0] + FFMPEG v0.4.0
  [b22a6f82] + FFMPEG_jll v4.3.1+2
  [4f61f5a4] + FFTViews v0.3.1
  [7a1cc6ca] + FFTW v1.2.4
  [f5851436] + FFTW_jll v3.3.9+5
  [5789e2e9] + FileIO v1.4.3
  [1a297f60] + FillArrays v0.9.6
  [53c48c17] + FixedPointNumbers v0.8.4
  [59287772] + Formatting v0.4.1
  [b38be410] + FreeType v3.0.1
  [d7e528f0] + FreeType2_jll v2.10.1+4
  [663a7486] + FreeTypeAbstraction v0.8.1
  [559328eb] + FriBidi_jll v1.0.5+5
  [5c1252a2] + GeometryBasics v0.3.1
  [a2bd30eb] + Graphics v1.0.2
  [3955a311] + GridLayoutBase v0.3.7
  [42e2da0e] + Grisu v1.0.0
  [eafb193a] + Highlights v0.4.5
  [bbac6d45] + IdentityRanges v0.3.1
  [2803e5a7] + ImageAxes v0.6.6
  [a09fc81d] + ImageCore v0.8.16
  [6a3955dd] + ImageFiltering v0.6.15
  [82e4d734] + ImageIO v0.3.0
  [bc367c6b] + ImageMetadata v0.9.3
  [02fcd773] + ImageTransformations v0.8.6
  [9b13fd28] + IndirectArrays v0.5.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.10
  [8197267c] + IntervalSets v0.5.1
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.1
  [5ab0869b] + KernelDensity v0.6.0
  [c1c5ebd0] + LAME_jll v3.100.0+2
  [dd192d2f] + LibVPX_jll v1.9.0+0
  [856f044c] + MKL_jll v2020.2.254+0
  [1914dd2f] + MacroTools v0.5.5
  [dbd62bd0] + MakieGallery v0.2.17
  [dbb5928d] + MappedArrays v0.2.2
  [7eb4fadd] + Match v1.1.0
  [7269a6da] + MeshIO v0.4.1
  [e1d29d7a] + Missings v0.4.4
  [e94cdb99] + MosaicViews v0.2.3
  [77ba4419] + NaNMath v0.3.4
  [510215fc] + Observables v0.3.1
  [6fe1bfb0] + OffsetArrays v1.3.0
  [e7412a2a] + Ogg_jll v1.3.4+1
  [458c3c95] + OpenSSL_jll v1.1.1+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [91d4177d] + Opus_jll v1.3.1+2
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.10.1
  [f57f5aa1] + PNGFiles v0.3.1
  [19eb6ba3] + Packing v0.4.1
  [5432bcbf] + PaddedViews v0.5.5
  [69de0a69] + Parsers v1.0.10
  [995b91a9] + PlotUtils v1.0.7
  [1fd47b50] + QuadGK v2.4.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [6038ab10] + Rotations v1.0.1
  [992d4aef] + Showoff v0.3.2
  [73760f76] + SignedDistanceFields v0.4.0
  [699a6c99] + SimpleTraits v0.9.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [860ef19b] + StableRNGs v0.1.2
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.4
  [a4af3ec5] + SyntaxTree v1.0.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [06e1c1a7] + TiledIteration v0.2.4
  [1cfade01] + UnicodeFun v0.4.1
  [efce3f68] + WoodburyMatrices v0.5.2
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [0ac62f75] + libass_jll v0.14.0+3
  [f638f0a6] + libfdk_aac_jll v0.1.6+3
  [b53b4c65] + libpng_jll v1.6.37+5
  [f27f6e37] + libvorbis_jll v1.3.6+5
  [1270edf5] + x264_jll v2020.7.14+1
  [dfaa095f] + x265_jll v3.0.0+2
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/8b7c16b56936047ca41bf25effa137ae0b381ae8/build.log`
    Testing MakieGallery
┌ Error: Pkg.Types.PkgError("Error building `GLMakie`: \nlibGL error: MESA-LOADER: failed to open swrast (search paths /usr/lib/x86_64-linux-gnu/dri:\\\$\${ORIGIN}/dri:/usr/lib/dri)\nlibGL error: failed to load driver: swrast\ninit error of GLFW\nERROR: LoadError: OpenGL/GLFW wasn't installed correctly. This likely means,\nyou don't have an OpenGL capable Graphic Card,\nyou don't have the newest video driver installed,\nor the GLFW build failed. If you're on linux and `]build` GLFW failed,\ntry manually adding `sudo apt-get install libglfw3` and then `]build GLMakie`.\nIf you're on a headless server, you still need to install x-server and\nproper GPU drivers. You can take inspiration from this article\non how to get Makie running on a headless system:\nhttps://nextjournal.com/sdanisch/makie-1.0\nIf you don't have a GPU, there is also a Cairo software backend\nfor Makie which you can use:\nhttps://github.com/JuliaPlots/CairoMakie.jl.\nPlease check the below error and open an issue at:\nhttps://github.com/JuliaPlots/GLMakie.jl.\nAfter you fixed your OpenGL install, please run `]build GLMakie` again!\nGLMakie will still load, but will be disabled as a default backend for Makie\n\nStacktrace:\n [1] error(s::String)\n   @ Base ./error.jl:33\n [2] top-level scope\n   @ ~/.julia/packages/GLMakie/4EXKe/deps/build.jl:63\n [3] include(fname::String)\n   @ Base.MainInclude ./client.jl:444\n [4] top-level scope\n   @ none:5\nin expression starting at /home/pkgeval/.julia/packages/GLMakie/4EXKe/deps/build.jl:31\n\ncaused by: GLFWError (VERSION_UNAVAILABLE): GLX: Failed to create context: GLXBadFBConfig\nStacktrace:\n [1] _ErrorCallbackWrapper(code::Int32, description::Cstring)\n   @ GLFW ~/.julia/packages/GLFW/CBo9c/src/callback.jl:43\n [2] CreateWindow(width::Int64, height::Int64, title::String, monitor::GLFW.Monitor, share::GLFW.Window)\n   @ GLFW ~/.julia/packages/GLFW/CBo9c/src/glfw3.jl:499\n [3] GLFW.Window(; name::String, resolution::Tuple{Int64, Int64}, debugging::Bool, major::Int64, minor::Int64, windowhints::Vector{Tuple{UInt32, Int64}}, contexthints::Vector{Tuple{UInt32, Integer}}, visible::Bool, focus::Bool, fullscreen::Bool, monitor::Nothing, share::GLFW.Window)\n   @ GLFW ~/.julia/packages/GLFW/CBo9c/src/glfw3.jl:344\n [4] top-level scope\n   @ ~/.julia/packages/GLMakie/4EXKe/deps/build.jl:34\n [5] include(fname::String)\n   @ Base.MainInclude ./client.jl:444\n [6] top-level scope\n   @ none:5")
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1457
Status `/tmp/jl_Hd2oTW/Project.toml`
  [537997a7] AbstractPlotting v0.12.14
  [27a7e980] Animations v0.4.1
  [b99e7846] BinaryProvider v0.5.10
  [35d6a980] ColorSchemes v3.10.1
  [3da002f7] ColorTypes v0.10.9
  [c3611d14] ColorVectorSpace v0.8.6
  [5ae59095] Colors v0.12.4
  [a93c6f00] DataFrames v0.21.7
  [31c24e10] Distributions v0.23.12
  [e30172f5] Documenter v0.25.2
  [c87230d0] FFMPEG v0.4.0
  [7a1cc6ca] FFTW v1.2.4
  [5789e2e9] FileIO v1.4.3
  [53c48c17] FixedPointNumbers v0.8.4
  [add2ef01] GDAL v1.1.4
  [f7f18e0c] GLFW v3.4.0
  [e9467ef8] GLMakie v0.1.11
  [5c1252a2] GeometryBasics v0.3.1
  [eafb193a] Highlights v0.4.5
  [a09fc81d] ImageCore v0.8.16
  [6a3955dd] ImageFiltering v0.6.15
  [82e4d734] ImageIO v0.3.0
  [02fcd773] ImageTransformations v0.8.6
  [5ab0869b] KernelDensity v0.6.0
  [dbd62bd0] MakieGallery v0.2.17
  [7269a6da] MeshIO v0.4.1
  [66fc600b] ModernGL v1.1.2
  [510215fc] Observables v0.3.1
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [65888b18] ParameterizedFunctions v5.6.0
  [995b91a9] PlotUtils v1.0.7
  [ce6b1742] RDatasets v0.6.10
  [860ef19b] StableRNGs v0.1.2
  [90137ffa] StaticArrays v0.12.4
  [a4af3ec5] SyntaxTree v1.0.1
  [a5390f91] ZipFile v0.9.2
  [2a0f44e3] Base64
  [37e2e46d] LinearAlgebra
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Hd2oTW/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.10.0
  [621f4979] AbstractFFTs v0.5.0
  [537997a7] AbstractPlotting v0.12.14
  [79e6a3ab] Adapt v2.3.0
  [27a7e980] Animations v0.4.1
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.3
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.3
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+4
  [fa961155] CEnum v0.4.1
  [336ed68f] CSV v0.7.7
  [a603d957] CanonicalTraits v0.2.2
  [aafaddc9] CatIndices v0.2.1
  [324d7699] CategoricalArrays v0.8.3
  [d360d2e6] ChainRulesCore v0.9.11
  [944b1d66] CodecZlib v0.7.0
  [a2cac450] ColorBrewer v0.4.0
  [35d6a980] ColorSchemes v3.10.1
  [3da002f7] ColorTypes v0.10.9
  [c3611d14] ColorVectorSpace v0.8.6
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.18.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [ed09eef8] ComputationalResources v0.3.2
  [187b0558] ConstructionBase v1.0.0
  [d38c429a] Contour v0.5.5
  [150eb455] CoordinateTransformations v0.6.0
  [adafc99b] CpuId v0.2.2
  [dc8bdbbb] CustomUnitRanges v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.7
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.48.0
  [c894b116] DiffEqJump v6.10.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.1
  [31c24e10] Distributions v0.23.12
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [5ae413db] EarCut_jll v2.1.5+0
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.8.0
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.4.0
  [b22a6f82] FFMPEG_jll v4.3.1+2
  [4f61f5a4] FFTViews v0.3.1
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [9aa1b823] FastClosures v0.3.2
  [5789e2e9] FileIO v1.4.3
  [1a297f60] FillArrays v0.9.6
  [6a86dc24] FiniteDiff v2.7.0
  [53c48c17] FixedPointNumbers v0.8.4
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [b38be410] FreeType v3.0.1
  [d7e528f0] FreeType2_jll v2.10.1+4
  [663a7486] FreeTypeAbstraction v0.8.1
  [559328eb] FriBidi_jll v1.0.5+5
  [069b7b12] FunctionWrappers v1.1.1
  [add2ef01] GDAL v1.1.4
  [a7073274] GDAL_jll v3.0.4+2
  [d604d12d] GEOS_jll v3.8.1+0
  [f7f18e0c] GLFW v3.4.0
  [0656b61e] GLFW_jll v3.3.2+1
  [e9467ef8] GLMakie v0.1.11
  [6b9d7cbe] GeneralizedGenerated v0.2.7
  [01680d73] GenericSVD v0.3.0
  [5c1252a2] GeometryBasics v0.3.1
  [a2bd30eb] Graphics v1.0.2
  [3955a311] GridLayoutBase v0.3.7
  [42e2da0e] Grisu v1.0.0
  [eafb193a] Highlights v0.4.5
  [bbac6d45] IdentityRanges v0.3.1
  [615f187c] IfElse v0.1.0
  [2803e5a7] ImageAxes v0.6.6
  [a09fc81d] ImageCore v0.8.16
  [6a3955dd] ImageFiltering v0.6.15
  [82e4d734] ImageIO v0.3.0
  [bc367c6b] ImageMetadata v0.9.3
  [02fcd773] ImageTransformations v0.8.6
  [9b13fd28] IndirectArrays v0.5.1
  [d25df0c9] Inflate v0.1.2
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.10
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.0
  [682c06a0] JSON v0.21.1
  [aacddb02] JpegTurbo_jll v2.0.1+2
  [b14d175d] JuliaVariables v0.2.3
  [5ab0869b] KernelDensity v0.6.0
  [c1c5ebd0] LAME_jll v3.100.0+2
  [b964fa9f] LaTeXStrings v1.2.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.14.0
  [dd192d2f] LibVPX_jll v1.9.0+0
  [d4300ac3] Libgcrypt_jll v1.8.5+3
  [7e76a0d4] Libglvnd_jll v1.3.0+2
  [7add5ba3] Libgpg_error_jll v1.36.0+2
  [94ce4f54] Libiconv_jll v1.16.0+6
  [89763e89] Libtiff_jll v4.1.0+1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [d3a379c0] LittleCMS_jll v2.9.0+0
  [bdcacae8] LoopVectorization v0.8.26
  [856f044c] MKL_jll v2020.2.254+0
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.5
  [dbd62bd0] MakieGallery v0.2.17
  [dbb5928d] MappedArrays v0.2.2
  [7eb4fadd] Match v1.1.0
  [7269a6da] MeshIO v0.4.1
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [961ee093] ModelingToolkit v3.20.1
  [66fc600b] ModernGL v1.1.2
  [e94cdb99] MosaicViews v0.2.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.5
  [510215fc] Observables v0.3.1
  [6fe1bfb0] OffsetArrays v1.3.0
  [e7412a2a] Ogg_jll v1.3.4+1
  [643b3616] OpenJpeg_jll v2.3.1+0
  [458c3c95] OpenSSL_jll v1.1.1+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+2
  [bac558e1] OrderedCollections v1.3.1
  [1dea7af3] OrdinaryDiffEq v5.43.0
  [90014a1f] PDMats v0.10.1
  [f57f5aa1] PNGFiles v0.3.1
  [58948b4f] PROJ_jll v7.0.1+0
  [19eb6ba3] Packing v0.4.1
  [5432bcbf] PaddedViews v0.5.5
  [65888b18] ParameterizedFunctions v5.6.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [995b91a9] PlotUtils v1.0.7
  [e409e4f3] PoissonRandom v0.4.0
  [2dfb63ee] PooledArrays v0.5.3
  [8162dcfd] PrettyPrint v0.2.0
  [1fd47b50] QuadGK v2.4.1
  [df47a6cb] RData v0.7.2
  [ce6b1742] RDatasets v0.6.10
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.1
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [6038ab10] Rotations v1.0.1
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [76ed43ae] SQLite_jll v3.32.3+0
  [1bc83da4] SafeTestsets v0.0.1
  [91c51154] SentinelArrays v1.2.16
  [65257c39] ShaderAbstractions v0.2.3
  [992d4aef] Showoff v0.3.2
  [73760f76] SignedDistanceFields v0.4.0
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [860ef19b] StableRNGs v0.1.2
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [09ab397b] StructArrays v0.4.4
  [856f2bd8] StructTypes v1.1.0
  [d1185830] SymbolicUtils v0.5.1
  [a4af3ec5] SyntaxTree v1.0.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [06e1c1a7] TiledIteration v0.2.4
  [f269a46b] TimeZones v1.4.0
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [1cfade01] UnicodeFun v0.4.1
  [1986cc42] Unitful v1.4.1
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [efce3f68] WoodburyMatrices v0.5.2
  [02c8fc9c] XML2_jll v2.9.10+2
  [aed1982a] XSLT_jll v1.1.33+3
  [4f6342f7] Xorg_libX11_jll v1.6.9+3
  [0c0b7dd1] Xorg_libXau_jll v1.0.9+3
  [935fb764] Xorg_libXcursor_jll v1.2.0+3
  [a3789734] Xorg_libXdmcp_jll v1.1.3+3
  [1082639a] Xorg_libXext_jll v1.3.4+3
  [d091e8ba] Xorg_libXfixes_jll v5.0.3+3
  [a51aa0fd] Xorg_libXi_jll v1.7.10+3
  [d1454406] Xorg_libXinerama_jll v1.1.4+3
  [ec84b674] Xorg_libXrandr_jll v1.5.2+3
  [ea2f1a96] Xorg_libXrender_jll v0.9.10+3
  [14d82f49] Xorg_libpthread_stubs_jll v0.1.0+2
  [c7cfdc94] Xorg_libxcb_jll v1.13.0+2
  [c5fb5394] Xorg_xtrans_jll v1.4.0+2
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [3161d3a3] Zstd_jll v1.4.5+1
  [700de1a5] ZygoteRules v0.2.0
  [0ac62f75] libass_jll v0.14.0+3
  [f638f0a6] libfdk_aac_jll v0.1.6+3
  [b53b4c65] libpng_jll v1.6.37+5
  [f27f6e37] libvorbis_jll v1.3.6+5
  [1270edf5] x264_jll v2020.7.14+1
  [dfaa095f] x265_jll v3.0.0+2
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: Loaded OpenGL Backend, but OpenGL isn't working
└ @ GLMakie ~/.julia/packages/GLMakie/4EXKe/src/GLMakie.jl:73
[ Info: starting from index 1
Running tutorial_simple_scatter
[ Info: Makie/AbstractPlotting is caching fonts, this may take a while. Needed only on first run!
┌ Warning: Error thrown when evaluating Tutorial simple scatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial simple scatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_markersize
┌ Warning: Error thrown when evaluating Tutorial markersize
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial markersize: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_simple_line
┌ Warning: Error thrown when evaluating Tutorial simple line
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial simple line: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_adding_to_a_scene
┌ Warning: Error thrown when evaluating Tutorial adding to a scene
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial adding to a scene: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_removing_from_a_scene
┌ Warning: Example Tutorial removing from a scene failed
│   exception =
│    LoadError: MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save(f::File{DataFormat{:PNG}}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254
│      [7] save(file::String, args::Scene; options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136
│      [8] save
│        @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136 [inlined]
│      [9] step!(s::Stepper)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:206
│     [10] top-level scope
│        @ tutorial_removing_from_a_scene:14
│     [11] eval
│        @ ./boot.jl:360 [inlined]
│     [12] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [13] include_string
│        @ ./loading.jl:1061 [inlined]
│     [14] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [15] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [16] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [17] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [18] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [19] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [20] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [21] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [22] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [23] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [24] top-level scope
│        @ none:6
│     [25] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [26] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [27] _start()
│        @ Base ./client.jl:485
│    in expression starting at tutorial_removing_from_a_scene:14
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        x = range(0, stop = 2pi, length = 80)
        y1 = sin.(x)
        y2 = exp.(-x) .* cos.(2pi * x)
        
        scene = lines(x, y1, color = :blue)
        scatter!(scene, x, y1, color = :red, markersize = 0.1)
        
        lines!(scene, x, y2, color = :black)
        scatter!(scene, x, y2, color = :green, marker = :utriangle, markersize = 0.1)
        # initialize the stepper and give it an output destination
        st = Stepper(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/tutorial_removing_from_a_scene")
        step!(st)
        
        # remove last plot in scene
        delete!(scene, scene[end])
        step!(st)
        # remove second plot in scene
        delete!(scene, scene[2])
        step!(st)
        st
        
    
┌ Warning: Error thrown when evaluating Tutorial removing from a scene
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial removing from a scene: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_adjusting_scene_limits
┌ Warning: Error thrown when evaluating Tutorial adjusting scene limits
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial adjusting scene limits: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_basic_theming
┌ Warning: Error thrown when evaluating Tutorial basic theming
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial basic theming: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_heatmap
┌ Warning: Error thrown when evaluating Tutorial heatmap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial heatmap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_linesegments
┌ Warning: Error thrown when evaluating Tutorial linesegments
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial linesegments: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_barplot
┌ Warning: Error thrown when evaluating Tutorial barplot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial barplot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_title
┌ Warning: Error thrown when evaluating Tutorial title
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial title: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_title_function
┌ Warning: Error thrown when evaluating Tutorial title function
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial title function: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running tutorial_plot_transformation
┌ Warning: Example Tutorial plot transformation failed
│   exception =
│    LoadError: MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save(f::File{DataFormat{:PNG}}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254
│      [7] save(file::String, args::Scene; options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136
│      [8] save
│        @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136 [inlined]
│      [9] step!(s::Stepper)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:206
│     [10] top-level scope
│        @ tutorial_plot_transformation:9
│     [11] eval
│        @ ./boot.jl:360 [inlined]
│     [12] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [13] include_string
│        @ ./loading.jl:1061 [inlined]
│     [14] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [15] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [16] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [17] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [18] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [19] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [20] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [21] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [22] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [23] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [24] top-level scope
│        @ none:6
│     [25] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [26] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [27] _start()
│        @ Base ./client.jl:485
│    in expression starting at tutorial_plot_transformation:9
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        data = RNG.rand(10)
        
        scene = Scene()
        st = Stepper(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/tutorial_plot_transformation")
        lineplot = lines!(scene, data)[end]    # gets the last defined plot for the Scene
        scatplot = scatter!(scene, data)[end]  # same thing but the last defined plot is scatter
        step!(st)
        
        rotate!(lineplot, 0.025π) # only the lines are rotated, not the scatter
        step!(st)
        st
        
    
┌ Warning: Error thrown when evaluating Tutorial plot transformation
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Tutorial plot transformation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running algorithm
┌ Warning: Error thrown when evaluating algorithm
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
algorithm: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running align
┌ Warning: Error thrown when evaluating align
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
align: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running color_1
┌ Warning: Error thrown when evaluating color
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
color: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colormap_1
┌ Warning: Error thrown when evaluating colormap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colormap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colorrange
┌ Warning: Error thrown when evaluating colorrange
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colorrange: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fillrange
┌ Warning: Error thrown when evaluating fillrange
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
fillrange: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running font
┌ Warning: Error thrown when evaluating font
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
font: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running glowcolor,_glowwidth
┌ Warning: Error thrown when evaluating glowcolor, glowwidth
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
glowcolor, glowwidth: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running image_1
┌ Warning: Error thrown when evaluating image
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
image: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running interpolate
┌ Warning: Error thrown when evaluating interpolate
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
interpolate: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running isorange,_isovalue
┌ Warning: Error thrown when evaluating isorange, isovalue
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
isorange, isovalue: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running levels
┌ Warning: Error thrown when evaluating levels
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
levels: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running linestyle
┌ Warning: Error thrown when evaluating linestyle
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
linestyle: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running linewidth
┌ Warning: Error thrown when evaluating linewidth
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
linewidth: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running markersize
┌ Warning: Error thrown when evaluating markersize
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
markersize: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running position_1
┌ Warning: Error thrown when evaluating position
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
position: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running rotation_1
┌ Warning: Error thrown when evaluating rotation
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
rotation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running shading
┌ Warning: Error thrown when evaluating shading
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
shading: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running strokecolor,_strokewidth
┌ Warning: Error thrown when evaluating strokecolor, strokewidth
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
strokecolor, strokewidth: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running strokecolor,_strokewidth_1
┌ Warning: Error thrown when evaluating strokecolor, strokewidth
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
strokecolor, strokewidth: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running textsize
┌ Warning: Error thrown when evaluating textsize
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
textsize: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running visible
┌ Warning: Error thrown when evaluating visible
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
visible: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running simple_line_plot
┌ Warning: Error thrown when evaluating simple line plot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
simple line plot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running multiple_functions
┌ Warning: Error thrown when evaluating multiple functions
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
multiple functions: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running animations
┌ Warning: Example animations failed
│   exception =
│    LoadError: MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.##TempModule#287.var"#5#6", scene::Scene, path::String, iter::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [3] record(func::Function, scene::Scene, path::String, iter::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [4] top-level scope
│        @ animations:9
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [7] include_string
│        @ ./loading.jl:1061 [inlined]
│      [8] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [9] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [10] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [11] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [12] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [13] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [14] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [15] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [16] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [17] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [18] top-level scope
│        @ none:6
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
│    in expression starting at animations:9
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        scene = Scene()
        mytime = Node(0.0)
        f(v, t) = sin(v + t)
        g(v, t) = cos(v + t)
        lines!(scene,lift(t -> f.(range(0, stop = 2pi, length = 50), t), mytime),color = :blue)
        lines!(scene,lift(t -> g.(range(0, stop = 2pi, length = 50), t), mytime),color = :orange)
        record(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/animations.mp4", range(0, stop = 4pi, length = 100)) do i
            mytime[] = i
        end
        
    
┌ Warning: Error thrown when evaluating animations
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
animations: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running parametric_plots
┌ Warning: Error thrown when evaluating parametric plots
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
parametric plots: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colors
┌ Warning: Founds 0 width in scene limits: Float32[1.0, 1.0, 0.0] .. Float32[50.0, 1.0, 0.0]
└ @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:538
┌ Warning: Error thrown when evaluating colors
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colors: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running attributes_1
┌ Warning: Error thrown when evaluating attributes
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
attributes: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running build_plot_in_pieces
┌ Warning: Example build plot in pieces failed
│   exception =
│    LoadError: MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save(f::File{DataFormat{:PNG}}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254
│      [7] save(file::String, args::Scene; options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136
│      [8] save
│        @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136 [inlined]
│      [9] step!(s::Stepper)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:206
│     [10] top-level scope
│        @ build_plot_in_pieces:7
│     [11] eval
│        @ ./boot.jl:360 [inlined]
│     [12] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [13] include_string
│        @ ./loading.jl:1061 [inlined]
│     [14] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [15] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [16] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [17] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [18] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [19] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [20] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [21] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [22] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [23] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [24] top-level scope
│        @ none:6
│     [25] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [26] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [27] _start()
│        @ Base ./client.jl:485
│    in expression starting at build_plot_in_pieces:7
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        scene = Scene()
        # initialize the stepper and give it an output destination
        st = Stepper(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/build_plot_in_pieces")
        lines!(scene, RNG.rand(50)/3, color = :purple, linewidth = 5)
        step!(st)
        scatter!(scene, RNG.rand(50), color = :orange, markersize = 1)
        step!(st)
        
    
┌ Warning: Error thrown when evaluating build plot in pieces
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
build plot in pieces: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running barplot_1
┌ Warning: Error thrown when evaluating barplot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
barplot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running subplots
┌ Warning: Error thrown when evaluating subplots
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
subplots: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running text_1
┌ Warning: Error thrown when evaluating text
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
text: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running contours
┌ Warning: Error thrown when evaluating contours
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
contours: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running 3d
┌ Warning: Error thrown when evaluating 3D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
3D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running heatmap_1
┌ Warning: Error thrown when evaluating heatmap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
heatmap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running label_rotation,_title_location
┌ Warning: Error thrown when evaluating label rotation, title location
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
label rotation, title location: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running lines_with_varying_colors
┌ Warning: Error thrown when evaluating lines with varying colors
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
lines with varying colors: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_heatmap___image_overlap
┌ Warning: Error thrown when evaluating Test heatmap + image overlap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test heatmap + image overlap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running barplot_2
┌ Warning: Error thrown when evaluating barplot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
barplot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running poly_and_colormap
┌ Warning: Error thrown when evaluating poly and colormap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
poly and colormap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running quiver_1
┌ Warning: Error thrown when evaluating quiver
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
quiver: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running arrows_on_hemisphere
┌ Warning: Error thrown when evaluating Arrows on hemisphere
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Arrows on hemisphere: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running image_2
┌ Warning: Error thrown when evaluating image
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
image: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running scatter_colormap
┌ Warning: Error thrown when evaluating scatter colormap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
scatter colormap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fem_polygon_2d
┌ Warning: Error thrown when evaluating FEM polygon 2D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
FEM polygon 2D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fem_mesh_2d
┌ Warning: Error thrown when evaluating FEM mesh 2D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
FEM mesh 2D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colored_triangle
┌ Warning: Error thrown when evaluating colored triangle
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colored triangle: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running heatmap_interpolation
┌ Warning: Error thrown when evaluating heatmap interpolation
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
heatmap interpolation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colored_triangle_1
┌ Warning: Error thrown when evaluating colored triangle
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colored triangle: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running subscenes
┌ Warning: Error thrown when evaluating Subscenes
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Subscenes: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running scale_plot
┌ Warning: Error thrown when evaluating scale_plot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
scale_plot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running polygons
┌ Warning: Error thrown when evaluating Polygons
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Polygons: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running contour_function
┌ Warning: Error thrown when evaluating Contour Function
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Contour Function: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running hbox_1
┌ Warning: Error thrown when evaluating Hbox
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Hbox: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running customize_axes
┌ Warning: Error thrown when evaluating Customize Axes
│   exception =
│    MethodError: no method matching update_limits!(::Scene, ::AbstractPlotting.Automatic, ::Tuple{Float64, Float64})
│    Closest candidates are:
│      update_limits!(::Scene, ::AbstractPlotting.Automatic) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:514
│      update_limits!(::Scene, ::AbstractPlotting.Automatic, !Matched::Vec{3, Float32}) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:514
│      update_limits!(::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:512
│      ...
│    Stacktrace:
│      [1] update_limits!(scene::Scene, limits::AbstractPlotting.Automatic)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:516
│      [2] update_limits!(scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:512
│      [3] (::AbstractPlotting.var"#86#87"{Scene})(update::Bool, px_area::GeometryBasics.HyperRectangle{2, Int64})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:92
│      [4] (::Observables.OnUpdate{AbstractPlotting.var"#86#87"{Scene}, Tuple{Observable{Bool}, Observable{GeometryBasics.HyperRectangle{2, Int64}}}})(#unused#::Bool)
│        @ Observables ~/.julia/packages/Observables/0wrF6/src/Observables.jl:218
│      [5] setindex!(observable::Observable{Bool}, val::Bool; notify::Observables.var"#6#8")
│        @ Observables ~/.julia/packages/Observables/0wrF6/src/Observables.jl:130
│      [6] setindex!
│        @ ~/.julia/packages/Observables/0wrF6/src/Observables.jl:126 [inlined]
│      [7] update!(p::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:261
│      [8] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:76
│      [9] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│     [10] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│     [11] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│     [12] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│     [13] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│     [14] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│     [16] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [17] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [18] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [19] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [20] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [21] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [22] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [23] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [24] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [25] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [26] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [27] top-level scope
│        @ none:6
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Customize Axes: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running contour_1
┌ Warning: Error thrown when evaluating contour
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
contour: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running heatmap_2
┌ Warning: Error thrown when evaluating Heatmap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Heatmap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running animated_scatter
┌ Warning: Example Animated Scatter failed
│   exception =
│    LoadError: MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.##TempModule#321.var"#3#4", scene::Scene, path::String, iter::Vector{Matrix{Float64}}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [3] record(func::Function, scene::Scene, path::String, iter::Vector{Matrix{Float64}})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [4] top-level scope
│        @ animated_scatter:7
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [7] include_string
│        @ ./loading.jl:1061 [inlined]
│      [8] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [9] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [10] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [11] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [12] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [13] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [14] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [15] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [16] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [17] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [18] top-level scope
│        @ none:6
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
│    in expression starting at animated_scatter:7
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        N = 10
        r = [(RNG.rand(7, 2) .- 0.5) .* 25 for i = 1:N]
        scene = scatter(r[1][:, 1], r[1][:, 2], markersize = 1, limits = FRect(-25/2, -25/2, 25, 25))
        s = scene[end] # last plot in scene
        record(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/animated_scatter.mp4", r) do m
            s[1] = m[:, 1]
            s[2] = m[:, 2]
        end
        
    
┌ Warning: Error thrown when evaluating Animated Scatter
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Animated Scatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running text_annotation
┌ Warning: Error thrown when evaluating Text Annotation
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Text Annotation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running text_rotation
┌ Warning: Error thrown when evaluating Text rotation
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Text rotation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running the_famous_iris_example
┌ Warning: Package MakieGallery does not have DataFrames in its dependencies:
│ - If you have MakieGallery checked out for development and have
│   added DataFrames as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with MakieGallery
└ Loading DataFrames into MakieGallery from project dependency, future warnings for MakieGallery are suppressed.
┌ Warning: Error thrown when evaluating The famous iris example
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
The famous iris example: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running linesegments___colors
┌ Warning: Error thrown when evaluating linesegments + colors
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
linesegments + colors: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running standard_deviation_band
┌ Warning: Error thrown when evaluating Standard deviation band
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Standard deviation band: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running parallel_prefix_sum
┌ Warning: Error thrown when evaluating Parallel Prefix Sum
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Parallel Prefix Sum: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running interactive_light_cone
┌ Warning: Error thrown when evaluating Interactive light cone
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Interactive light cone: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running streamplot_animation
┌ Warning: Example Streamplot animation failed
│   exception =
│    LoadError: MethodError: no method matching update_limits!(::Scene, ::AbstractPlotting.Automatic, ::Tuple{Int64, Int64})
│    Closest candidates are:
│      update_limits!(::Scene, ::AbstractPlotting.Automatic) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:514
│      update_limits!(::Scene, ::AbstractPlotting.Automatic, !Matched::Vec{3, Float32}) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:514
│      update_limits!(::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:512
│      ...
│    Stacktrace:
│      [1] update_limits!(scene::Scene, limits::AbstractPlotting.Automatic)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:516
│      [2] update_limits!(scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:512
│      [3] (::AbstractPlotting.var"#86#87"{Scene})(update::Bool, px_area::GeometryBasics.HyperRectangle{2, Int64})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:92
│      [4] (::Observables.OnUpdate{AbstractPlotting.var"#86#87"{Scene}, Tuple{Observable{Bool}, Observable{GeometryBasics.HyperRectangle{2, Int64}}}})(#unused#::Bool)
│        @ Observables ~/.julia/packages/Observables/0wrF6/src/Observables.jl:218
│      [5] setindex!(observable::Observable{Bool}, val::Bool; notify::Observables.var"#6#8")
│        @ Observables ~/.julia/packages/Observables/0wrF6/src/Observables.jl:130
│      [6] setindex!
│        @ ~/.julia/packages/Observables/0wrF6/src/Observables.jl:126 [inlined]
│      [7] update!(p::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:261
│      [8] foreach
│        @ ./abstractarray.jl:2080 [inlined]
│      [9] update!(p::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:262
│     [10] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:369
│     [11] record(func::MakieGallery.##TempModule#331.var"#1#2", scene::Scene, path::String, iter::LinRange{Float64}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│     [12] record(func::Function, scene::Scene, path::String, iter::LinRange{Float64})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│     [13] top-level scope
│        @ streamplot_animation:20
│     [14] eval
│        @ ./boot.jl:360 [inlined]
│     [15] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [16] include_string
│        @ ./loading.jl:1061 [inlined]
│     [17] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [18] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [19] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [20] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [21] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [22] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [23] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [24] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [25] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [26] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [27] top-level scope
│        @ none:6
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
│    in expression starting at streamplot_animation:20
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        v(x::Point2{T}, t) where T = Point2{T}(one(T) * x[2] * t, 4 * x[1])
        
        sf = Node(Base.Fix2(v, 0e0))
        
        title_str = Node("t = 0.00")
        
        sp = streamplot(
                sf,
                -2..2, -2..2;
                linewidth = 2,
                padding = (0, 0),
                arrow_size = 0.09,
                colormap =:magma
            )
        
        sc = title(sp, title_str)
        
        record(sc, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/streamplot_animation.mp4", LinRange(0, 20, 5*30)) do i
          sf[] = Base.Fix2(v, i)
          title_str[] = "t = $(round(i; sigdigits = 2))"
        end
        
        
    
┌ Warning: Error thrown when evaluating Streamplot animation
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Streamplot animation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running line_with_varying_colors
┌ Warning: Error thrown when evaluating Line with varying colors
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Line with varying colors: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running viridis_color_scheme
┌ Warning: Error thrown when evaluating Viridis color scheme
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Viridis color scheme: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running timeseries_1
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
┌ Warning: limits of scene contain non finite values: Float32[NaN, NaN, 0.0] .. Float32[NaN, NaN, 0.0]
└ @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:521
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
┌ Warning: No strict ticks found
└ @ PlotUtils ~/.julia/packages/PlotUtils/3Ttrk/src/ticks.jl:283
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
ArgumentError: At least one finite value must be provided to formatter.with ticks: [-Inf, Inf]
┌ Warning: Example timeseries failed
│   exception =
│    LoadError: MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.##TempModule#335.var"#1#2", scene::Scene, path::String, iter::LinRange{Float64}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [3] top-level scope
│        @ timeseries_1:5
│      [4] eval
│        @ ./boot.jl:360 [inlined]
│      [5] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [6] include_string
│        @ ./loading.jl:1061 [inlined]
│      [7] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
│    in expression starting at timeseries_1:5
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        signal = Node(0.0)
        scene = timeseries(signal, history = 30)
        record(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/timeseries_1.mp4", LinRange(0, 10π, 240); framerate = 24) do i
            signal[] = sin(i)
        end
        
    
┌ Warning: Error thrown when evaluating timeseries
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
timeseries: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running line_changing_colour_with_observables
┌ Warning: Example Line changing colour with Observables failed
│   exception =
│    LoadError: MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.##TempModule#337.var"#3#4", scene::Scene, path::String, iter::UnitRange{Int64}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [3] top-level scope
│        @ line_changing_colour_with_observables:13
│      [4] eval
│        @ ./boot.jl:360 [inlined]
│      [5] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [6] include_string
│        @ ./loading.jl:1061 [inlined]
│      [7] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
│    in expression starting at line_changing_colour_with_observables:13
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        "'Time' - an Observable that controls the animation"
        t = Node(0)
        
        "The colour of the line"
        c = lift(t) do t
                RGBf0(t/255, (255 - t)/255, 0)
            end
        
        scene = lines(RNG.rand(10); linewidth=10, color = c)
        
        record(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/line_changing_colour_with_observables.mp4", 1:255; framerate = 60) do i
            t[] = i # update `t`'s value
        end
        
        
    
┌ Warning: Error thrown when evaluating Line changing colour with Observables
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Line changing colour with Observables: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running streamplot_1
┌ Warning: Error thrown when evaluating streamplot
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
streamplot: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running categorical_heatmap
┌ Warning: Error thrown when evaluating Categorical heatmap
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Categorical heatmap: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running arc_1
┌ Warning: Error thrown when evaluating Arc
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Arc: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running transforming_lines
┌ Warning: Example Transforming lines failed
│   exception =
│    LoadError: MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save(f::File{DataFormat{:PNG}}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254
│      [7] save(file::String, args::Scene; options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136
│      [8] save
│        @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136 [inlined]
│      [9] step!(s::Stepper)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:206
│     [10] top-level scope
│        @ transforming_lines:21
│     [11] eval
│        @ ./boot.jl:360 [inlined]
│     [12] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [13] include_string
│        @ ./loading.jl:1061 [inlined]
│     [14] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [15] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [16] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [17] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [18] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [19] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [20] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [21] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [22] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [23] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [24] top-level scope
│        @ none:6
│     [25] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [26] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [27] _start()
│        @ Base ./client.jl:485
│    in expression starting at transforming_lines:21
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        N = 7 # number of colours in default palette
        sc = Scene()
        st = Stepper(sc, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/transforming_lines")
        
        xs = 0:9        # data
        ys = zeros(10)
        
        for i in 1:N    # plot lines
            lines!(sc,
                xs, ys;
                color = AbstractPlotting.default_palettes.color[][i],
                limits = FRect((0, 0), (10, 10)),
                linewidth = 5
            ) # plot lines with colors
        end
        
        center!(sc)
        
        step!(st)
        
        for (i, rot) in enumerate(LinRange(0, π/2, N))
            rotate!(sc.plots[i+1], rot)
            arc!(sc,
                Point2f0(0),
                (8 - i),
                pi/2,
                (pi/2-rot);
                color = sc.plots[i+1].color,
                linewidth = 5,
                linestyle = :dash
            )
        end
        
        step!(st)
        
    
┌ Warning: Error thrown when evaluating Transforming lines
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Transforming lines: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running orthographic_camera
┌ Warning: Error thrown when evaluating Orthographic Camera
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Orthographic Camera: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running volume_function
┌ Warning: Error thrown when evaluating Volume Function
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Volume Function: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running textured_mesh
┌ Warning: Error thrown when evaluating Textured Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Textured Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running load_mesh
┌ Warning: Error thrown when evaluating Load Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Load Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colored_mesh
┌ Warning: Error thrown when evaluating Colored Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Colored Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running wireframe_of_a_mesh
┌ Warning: Error thrown when evaluating Wireframe of a Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Wireframe of a Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running wireframe_of_sphere
┌ Warning: Error thrown when evaluating Wireframe of Sphere
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Wireframe of Sphere: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running wireframe_of_a_surface
┌ Warning: Error thrown when evaluating Wireframe of a Surface
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Wireframe of a Surface: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running surface_1
┌ Warning: Error thrown when evaluating Surface
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Surface: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running surface_with_image
┌ Warning: Error thrown when evaluating Surface with image
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Surface with image: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running line_function
┌ Warning: Error thrown when evaluating Line Function
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Line Function: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running meshscatter_function
┌ Warning: Error thrown when evaluating Meshscatter Function
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Meshscatter Function: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running scatter_1
┌ Warning: Error thrown when evaluating scatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
scatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running marker_sizes
┌ Warning: Error thrown when evaluating Marker sizes
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Marker sizes: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running 3d_contour_with_2d_contour_slices
┌ Warning: Error thrown when evaluating 3D Contour with 2D contour slices
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
3D Contour with 2D contour slices: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running contour3d_1
┌ Warning: Error thrown when evaluating Contour3d
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Contour3d: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running arrows_3d
┌ Warning: Error thrown when evaluating Arrows 3D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Arrows 3D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running image_on_surface_sphere
┌ Warning: Error thrown when evaluating Image on Surface Sphere
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Image on Surface Sphere: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running arrows_on_sphere
┌ Warning: Error thrown when evaluating Arrows on Sphere
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Arrows on Sphere: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running surface___contour3d
┌ Warning: Error thrown when evaluating surface + contour3d
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
surface + contour3d: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fem_mesh_3d
┌ Warning: Error thrown when evaluating FEM mesh 3D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
FEM mesh 3D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running axis___surface
┌ Warning: Error thrown when evaluating Axis + Surface
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Axis + Surface: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fluctuation_3d
┌ Warning: nvertices argument deprecated. Wrap primitive in `Tesselation(primitive, nvertices)`
└ @ GeometryBasics ~/.julia/packages/GeometryBasics/L1NZA/src/meshes.jl:190
┌ Warning: nvertices argument deprecated. Wrap primitive in `Tesselation(primitive, nvertices)`
└ @ GeometryBasics ~/.julia/packages/GeometryBasics/L1NZA/src/meshes.jl:190
┌ Warning: Error thrown when evaluating Fluctuation 3D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Fluctuation 3D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running connected_sphere
┌ Warning: Error thrown when evaluating Connected Sphere
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Connected Sphere: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running image_scatter
┌ Warning: Error thrown when evaluating image scatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
image scatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running simple_meshscatter
┌ Warning: Error thrown when evaluating Simple meshscatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Simple meshscatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running sphere_mesh
┌ Warning: Error thrown when evaluating Sphere Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Sphere Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running stars
┌ Warning: Error thrown when evaluating Stars
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Stars: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running unicode_marker
┌ Warning: Error thrown when evaluating Unicode Marker
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Unicode Marker: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running merged_color_mesh
┌ Warning: Error thrown when evaluating Merged color Mesh
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Merged color Mesh: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running surface___wireframe___contour
┌ Warning: Error thrown when evaluating Surface + wireframe + contour
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Surface + wireframe + contour: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running streamplot_3d
┌ Warning: Error thrown when evaluating Streamplot 3D
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Streamplot 3D: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running fractional_brownian_surface
┌ Warning: Error thrown when evaluating Fractional Brownian surface
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Fractional Brownian surface: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running coloured_fractional_brownian_noise_field
┌ Warning: Error thrown when evaluating Coloured fractional Brownian noise field
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Coloured fractional Brownian noise field: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running volume_on_black_background
┌ Warning: Error thrown when evaluating Volume on black background
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Volume on black background: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running mouse_picking
┌ Warning: Error thrown when evaluating Mouse Picking
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Mouse Picking: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running sliders
┌ Warning: Error thrown when evaluating sliders
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
sliders: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running mouse_hover
┌ Warning: Error thrown when evaluating Mouse Hover
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Mouse Hover: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running edit_polygon
┌ Warning: Error thrown when evaluating Edit Polygon
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Edit Polygon: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running add_and_change_points
┌ Warning: Error thrown when evaluating Add and change points
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Add and change points: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running orbit_diagram
┌ Warning: Error thrown when evaluating Orbit Diagram
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Orbit Diagram: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running robot_arm
┌ Warning: Error thrown when evaluating Robot Arm
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Robot Arm: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running animation_with_slider_control
┌ Warning: Error thrown when evaluating Animation with slider control
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Animation with slider control: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running volume_slider
┌ Warning: Example Volume slider failed
│   exception =
│    LoadError: UndefVarError: transform! not defined
│    Stacktrace:
│      [1] (::MakieGallery.##TempModule#398.var"#transform_planes#10"{Int64, Heatmap{...}, Symbol})(idx::Int64, vol::Array{Float32, 3})
│        @ MakieGallery.##TempModule#398 ./volume_slider:41
│      [2] (::MakieGallery.##TempModule#398.var"#3#7")(i::Int64)
│        @ MakieGallery.##TempModule#398 ./volume_slider:50
│      [3] ntuple(f::MakieGallery.##TempModule#398.var"#3#7", n::Int64)
│        @ Base ./ntuple.jl:19
│      [4] top-level scope
│        @ volume_slider:26
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [7] include_string
│        @ ./loading.jl:1061 [inlined]
│      [8] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [9] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [10] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [11] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [12] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [13] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [14] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [15] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [16] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [17] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [18] top-level scope
│        @ none:6
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
│    in expression starting at volume_slider:26
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    using Observables
    
        scene3d = Scene()
        rs = LinRange.(0, (6, 4, 10), 150)
        slider_t = slider(LinRange(0.1, 3, 100))
        # This actually needs to be pretty fast... Lucky for us, we use Julia :)
        function make_volume!(rs, val, result = zeros(Float32, length.(rs)), r = RNG.rand(Float32, size(result)) .* 0.1)
            @simd for idx in CartesianIndices(result)
                @inbounds begin
                    x, y, z = getindex.(rs, Tuple(idx))
                    result[idx] = cos(x/val) * sin(y + r[idx]) + sqrt(z*val)
                end
            end
            return result, r
        end
        
        vol_tmp, r_tmp = make_volume!(rs, 0.4);
        volume = lift(Observables.async_latest(slider_t[end][:value])) do val
            v, r = make_volume!(rs, val, vol_tmp, r_tmp);
            return v
        end
        
        linesegments!(scene3d, FRect3D(minimum.(rs), maximum.(rs)))
        planes = (:yz, :xz, :xy)
        sliders = ntuple(3) do i
            idx_s = slider(1:size(volume[], i), start = size(volume[], i) ÷ 2)
            idx = idx_s[end][:value]
            plane = planes[i]
            indices = ntuple(3) do j
                planes[j] == plane ? 1 : (:)
            end
            ridx = Iterators.filter((1, 2, 3)) do j
                planes[j] != plane
            end
            heatm = heatmap!(
                scene3d, getindex.((rs,), ridx)..., volume[][indices...],
                interpolate = true, raw = true
            )[end]
            function transform_planes(idx, vol)
                transform!(heatm, (plane, rs[i][idx]))
                indices = ntuple(3) do j
                    planes[j] == plane ? idx : (:)
                end
                if checkbounds(Bool, vol, indices...)
                    heatm[3][] = view(vol, indices...)
                end
            end
            onany(transform_planes, idx, volume)
            transform_planes(idx[], volume[])
            idx_s
        end
        center!(scene3d)
        scene = vbox(
            hbox(slider_t, sliders...),
            hbox(
                scene3d,
                contour(volume, alpha = 0.1, levels = 10)
            )
        )
        # Do not execute beyond this point!
        RecordEvents(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/volume_slider")
        
    
┌ Warning: Error thrown when evaluating Volume slider
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Volume slider: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running lighting
┌ Warning: Error thrown when evaluating Lighting
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Lighting: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running ambient_occlusion
┌ Warning: Error thrown when evaluating Ambient Occlusion
│   exception =
│    MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.var"#113#115"{RecordEvents, String}, scene::Scene, path::String; framerate::Int64, compression::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [3] record(func::Function, scene::Scene, path::String)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:553
│      [4] save_media(example::MakieGallery.CellEntry, events::RecordEvents, path::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:61
│      [5] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [6] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [7] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [8] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [9] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [10] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [11] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [12] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [13] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [14] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [15] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Ambient Occlusion: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::RecordEvents)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running viridis_scatter
┌ Warning: Error thrown when evaluating Viridis scatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Viridis scatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running viridis_meshscatter
┌ Warning: Error thrown when evaluating Viridis meshscatter
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Viridis meshscatter: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running marker_sizes___marker_colors
┌ Warning: Error thrown when evaluating Marker sizes + Marker colors
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Marker sizes + Marker colors: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running marker_offset
┌ Warning: Error thrown when evaluating Marker offset
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Marker offset: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running colormaps
┌ Warning: Error thrown when evaluating colormaps
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
colormaps: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running available_markers
┌ Warning: Error thrown when evaluating Available markers
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Available markers: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running stepper_demo
┌ Warning: Example Stepper demo failed
│   exception =
│    LoadError: MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save(f::File{DataFormat{:PNG}}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254
│      [7] save(file::String, args::Scene; options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136
│      [8] save
│        @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:136 [inlined]
│      [9] step!(s::Stepper)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:206
│     [10] stepper_demo()
│        @ MakieGallery.##TempModule#413 ./stepper_demo:24
│     [11] top-level scope
│        @ stepper_demo:28
│     [12] eval
│        @ ./boot.jl:360 [inlined]
│     [13] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│     [14] include_string
│        @ ./loading.jl:1061 [inlined]
│     [15] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│     [16] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [17] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [18] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [19] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [20] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [21] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [22] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [23] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [24] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [25] top-level scope
│        @ none:6
│     [26] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [27] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [28] _start()
│        @ Base ./client.jl:485
│    in expression starting at stepper_demo:28
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    
        function stepper_demo()
            scene = Scene()
            pos = (50, 50)
            steps = ["Step 1", "Step 2", "Step 3"]
            colors = AbstractPlotting.ColorBrewer.palette("Set1", length(steps))
            lines!(scene, Rect(0,0,500,500), linewidth = 0.0001)
            # initialize the stepper and give it an output destination
            st = Stepper(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/stepper_demo")
        
            for i = 1:length(steps)
                text!(
                    scene,
                    steps[i],
                    position = pos,
                    align = (:left, :bottom),
                    textsize = 100,
                    font = "Blackchancery",
                    color = colors[i],
                    scale_plot = false
                )
                pos = pos .+ 100
                step!(st) # saves the step and increments the step by one
            end
            st
        end
        stepper_demo()
        
    
┌ Warning: Error thrown when evaluating Stepper demo
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Stepper demo: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running implicit_equation
┌ Warning: Error thrown when evaluating Implicit equation
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Implicit equation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running cube_lattice
┌ Warning: Error thrown when evaluating Cube lattice
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Cube lattice: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running 3d_cube_with_sphere_cutout,_inside
┌ Warning: Error thrown when evaluating 3D cube with sphere cutout, inside
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
3D cube with sphere cutout, inside: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running 3d_cube_with_sphere_cutout,_outside
┌ Warning: Error thrown when evaluating 3D cube with sphere cutout, outside
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
3D cube with sphere cutout, outside: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running biohazard
┌ Warning: Error thrown when evaluating Biohazard
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Biohazard: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running twisty_cube_thing
┌ Warning: Error thrown when evaluating Twisty cube thing
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Twisty cube thing: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_1
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_2
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_3
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_4
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_5
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_6
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_7
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_8
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_9
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_10
┌ Warning: limits of scene contain non finite values: Float32[Inf, Inf, Inf] .. Float32[NaN, NaN, NaN]
└ @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/scenes.jl:521
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_11
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_12
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_13
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_14
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_15
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_16
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_17
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_18
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_19
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_20
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_21
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_22
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_23
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_24
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_25
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_26
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_27
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_28
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_29
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_30
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_31
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_32
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_33
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_34
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_35
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running test_36
┌ Warning: Error thrown when evaluating Test
│   exception =
│    MethodError: no method matching backend_show(::Missing, ::IOContext{IOStream}, ::MIME{Symbol("image/png")}, ::Scene)
│    Closest candidates are:
│      backend_show(::Any, ::IO, !Matched::MIME{Symbol("text/plain")}, ::Scene) at /home/pkgeval/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:108
│    Stacktrace:
│      [1] show(io::IOContext{IOStream}, m::MIME{Symbol("image/png")}, scene::Scene)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:94
│      [2] (::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType})(s::IOStream)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:270
│      [3] open(::AbstractPlotting.var"#853#854"{Scene, Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:full_fidelity, :pt_per_unit, :px_per_unit), Tuple{Bool, Float64, Float64}}}, DataType}, ::String, ::Vararg{String, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Base ./io.jl:330
│      [4] open(::Function, ::String, ::String)
│        @ Base ./io.jl:328
│      [5] save(f::File{DataFormat{:PNG}}, scene::Scene; resolution::Tuple{Int64, Int64}, pt_per_unit::Float64, px_per_unit::Float64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:269
│      [6] save
│        @ ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:254 [inlined]
│      [7] save_media
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:19 [inlined]
│      [8] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│     [11] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│     [12] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [13] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [14] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [15] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [16] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [17] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [18] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Test: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Scene)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Running type_recipe_for_molecule_simulation
┌ Warning: Example Type recipe for molecule simulation failed
│   exception =
│    LoadError: MethodError: no method matching backend_display(::Missing, ::Scene)
│    Stacktrace:
│      [1] VideoStream(scene::Scene; framerate::Int64)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:370
│      [2] record(func::MakieGallery.##TempModule#457.var"#13#14", scene::Scene, path::String, iter::UnitRange{Int64}; framerate::Int64, compression::Int64, sleep::Bool)
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [3] record(func::Function, scene::Scene, path::String, iter::UnitRange{Int64})
│        @ AbstractPlotting ~/.julia/packages/AbstractPlotting/u3Mc1/src/display.jl:559
│      [4] top-level scope
│        @ type_recipe_for_molecule_simulation:61
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│        @ Base ./loading.jl:1051
│      [7] include_string
│        @ ./loading.jl:1061 [inlined]
│      [8] eval_example(entry::MakieGallery.CellEntry; kw_args::Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}})
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:583
│      [9] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:613
│     [10] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│     [11] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│     [12] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│     [13] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [14] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [15] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [16] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [17] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [18] top-level scope
│        @ none:6
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
│    in expression starting at type_recipe_for_molecule_simulation:61
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:585
with source:
    
    import AbstractPlotting: Plot, default_theme, plot!, to_value
    
        
        struct Simulation
            grid::Vector{Point3f0}
        end
        # Probably worth having a macro for this!
        function default_theme(scene::SceneLike, ::Type{<: Plot(Simulation)})
            Theme(
                advance = 0,
                molecule_sizes = [0.08, 0.04, 0.04],
                molecule_colors = [:maroon, :deepskyblue2, :deepskyblue2]
            )
        end
        
        # The recipe! - will get called for plot(!)(x::SimulationResult)
        function AbstractPlotting.plot!(p::Plot(Simulation))
            sim = to_value(p[1]) # first argument is the SimulationResult
            # when advance changes, get new positions from the simulation
            mpos = lift(p[:advance]) do i
                sim.grid .+ RNG.rand(Point3f0, length(sim.grid)) .* 0.01f0
            end
            # size shouldn't change, so we might as well get the value instead of signal
            pos = to_value(mpos)
            N = length(pos)
            sizes = lift(p[:molecule_sizes]) do s
                repeat(s, outer = N ÷ 3)
            end
            sizes = lift(p[:molecule_sizes]) do s
                repeat(s, outer = N ÷ 3)
            end
            colors = lift(p[:molecule_colors]) do c
                repeat(c, outer = N ÷ 3)
            end
            scene = meshscatter!(p, mpos, markersize = sizes, color = colors)
            indices = Int[]
            for i in 1:3:N
                push!(indices, i, i + 1, i, i + 2)
            end
            meshplot = p.plots[end] # meshplot is the last plot we added to p
            # meshplot[1] -> the positions (first argument) converted to points, so
            # we don't do the conversion 2 times for linesegments!
            linesegments!(p, lift(x-> view(x, indices), meshplot[1]))
        end
        
        # To write out a video of the whole simulation
        n = 5
        r = range(-1, stop = 1, length = n)
        grid = Point3f0.(r, reshape(r, (1, n, 1)), reshape(r, (1, 1, n)))
        molecules = map(1:(n^3) * 3) do i
            i3 = ((i - 1) ÷ 3) + 1
            xy = 0.1; z = 0.08
            i % 3 == 1 && return grid[i3]
            i % 3 == 2 && return grid[i3] + Point3f0(xy, xy, z)
            i % 3 == 0 && return grid[i3] + Point3f0(-xy, xy, z)
        end
        result = Simulation(molecules)
        scene = plot(result)
        N = 100
        record(scene, "/home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/test_recordings/tmp/type_recipe_for_molecule_simulation.mp4", 1:N) do i
            scene[end][:advance] = i
        end
        
    
┌ Warning: Error thrown when evaluating Type recipe for molecule simulation
│   exception =
│    MethodError: no method matching save_media(::MakieGallery.CellEntry, ::Nothing, ::String)
│    Closest candidates are:
│      save_media(::Any, !Matched::Scene, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:17
│      save_media(::Any, !Matched::String, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:23
│      save_media(::Any, !Matched::Stepper, ::String) at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:31
│      ...
│    Stacktrace:
│      [1] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:297 [inlined]
│      [2] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
│      [4] (::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}})(entry::MakieGallery.CellEntry)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:614
│      [5] enumerate_examples(::MakieGallery.var"#95#96"{Bool, Base.Iterators.Pairs{Symbol, MakieGallery.var"#output_path#137"{String}, Tuple{Symbol}, NamedTuple{(:outputfile,), Tuple{MakieGallery.var"#output_path#137"{String}}}}, MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}}}; start::Int64, exclude_tags::Nothing)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:539
│      [6] #eval_examples#94
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/database.jl:611 [inlined]
│      [7] macro expansion
│        @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290 [inlined]
│      [8] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│      [9] record_examples(folder::String; resolution::Tuple{Int64, Int64}, resume::Bool, generate_thumbnail::Bool, display::Bool, display_output_toplevel::Bool)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:290
│     [10] record_examples(folder::String)
│        @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:273
│     [11] top-level scope
│        @ ~/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
│     [12] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [13] top-level scope
│        @ none:6
│     [14] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [15] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [16] _start()
│        @ Base ./client.jl:485
└ @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:308
Type recipe for molecule simulation: Test Failed at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/src/io.jl:309
  Expression: false
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:309 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] (::MakieGallery.var"#135#138"{Tuple{Int64, Int64}, Bool, String, Vector{Any}})(example::MakieGallery.CellEntry, value::Nothing)
   @ MakieGallery ~/.julia/packages/MakieGallery/V0mvg/src/io.jl:293
Test Summary:                              | Fail  Total
Full Gallery recording                     |  184    184
  Tutorial simple scatter                  |    1      1
  Tutorial markersize                      |    1      1
  Tutorial simple line                     |    1      1
  Tutorial adding to a scene               |    1      1
  Tutorial removing from a scene           |    1      1
  Tutorial adjusting scene limits          |    1      1
  Tutorial basic theming                   |    1      1
  Tutorial heatmap                         |    1      1
  Tutorial linesegments                    |    1      1
  Tutorial barplot                         |    1      1
  Tutorial title                           |    1      1
  Tutorial title function                  |    1      1
  Tutorial plot transformation             |    1      1
  algorithm                                |    1      1
  align                                    |    1      1
  color                                    |    1      1
  colormap                                 |    1      1
  colorrange                               |    1      1
  fillrange                                |    1      1
  font                                     |    1      1
  glowcolor, glowwidth                     |    1      1
  image                                    |    1      1
  interpolate                              |    1      1
  isorange, isovalue                       |    1      1
  levels                                   |    1      1
  linestyle                                |    1      1
  linewidth                                |    1      1
  markersize                               |    1      1
  position                                 |    1      1
  rotation                                 |    1      1
  shading                                  |    1      1
  strokecolor, strokewidth                 |    1      1
  strokecolor, strokewidth                 |    1      1
  textsize                                 |    1      1
  visible                                  |    1      1
  simple line plot                         |    1      1
  multiple functions                       |    1      1
  animations                               |    1      1
  parametric plots                         |    1      1
  colors                                   |    1      1
  attributes                               |    1      1
  build plot in pieces                     |    1      1
  barplot                                  |    1      1
  subplots                                 |    1      1
  text                                     |    1      1
  contours                                 |    1      1
  3D                                       |    1      1
  heatmap                                  |    1      1
  label rotation, title location           |    1      1
  lines with varying colors                |    1      1
  Test heatmap + image overlap             |    1      1
  barplot                                  |    1      1
  poly and colormap                        |    1      1
  quiver                                   |    1      1
  Arrows on hemisphere                     |    1      1
  image                                    |    1      1
  scatter colormap                         |    1      1
  FEM polygon 2D                           |    1      1
  FEM mesh 2D                              |    1      1
  colored triangle                         |    1      1
  heatmap interpolation                    |    1      1
  colored triangle                         |    1      1
  Subscenes                                |    1      1
  scale_plot                               |    1      1
  Polygons                                 |    1      1
  Contour Function                         |    1      1
  Hbox                                     |    1      1
  Customize Axes                           |    1      1
  contour                                  |    1      1
  Heatmap                                  |    1      1
  Animated Scatter                         |    1      1
  Text Annotation                          |    1      1
  Text rotation                            |    1      1
  The famous iris example                  |    1      1
  linesegments + colors                    |    1      1
  Standard deviation band                  |    1      1
  Parallel Prefix Sum                      |    1      1
  Interactive light cone                   |    1      1
  Streamplot animation                     |    1      1
  Line with varying colors                 |    1      1
  Viridis color scheme                     |    1      1
  timeseries                               |    1      1
  Line changing colour with Observables    |    1      1
  streamplot                               |    1      1
  Categorical heatmap                      |    1      1
  Arc                                      |    1      1
  Transforming lines                       |    1      1
  Orthographic Camera                      |    1      1
  Volume Function                          |    1      1
  Textured Mesh                            |    1      1
  Load Mesh                                |    1      1
  Colored Mesh                             |    1      1
  Wireframe of a Mesh                      |    1      1
  Wireframe of Sphere                      |    1      1
  Wireframe of a Surface                   |    1      1
  Surface                                  |    1      1
  Surface with image                       |    1      1
  Line Function                            |    1      1
  Meshscatter Function                     |    1      1
  scatter                                  |    1      1
  Marker sizes                             |    1      1
  3D Contour with 2D contour slices        |    1      1
  Contour3d                                |    1      1
  Arrows 3D                                |    1      1
  Image on Surface Sphere                  |    1      1
  Arrows on Sphere                         |    1      1
  surface + contour3d                      |    1      1
  FEM mesh 3D                              |    1      1
  Axis + Surface                           |    1      1
  Fluctuation 3D                           |    1      1
  Connected Sphere                         |    1      1
  image scatter                            |    1      1
  Simple meshscatter                       |    1      1
  Sphere Mesh                              |    1      1
  Stars                                    |    1      1
  Unicode Marker                           |    1      1
  Merged color Mesh                        |    1      1
  Surface + wireframe + contour            |    1      1
  Streamplot 3D                            |    1      1
  Fractional Brownian surface              |    1      1
  Coloured fractional Brownian noise field |    1      1
  Volume on black background               |    1      1
  Mouse Picking                            |    1      1
  sliders                                  |    1      1
  Mouse Hover                              |    1      1
  Edit Polygon                             |    1      1
  Add and change points                    |    1      1
  Orbit Diagram                            |    1      1
  Robot Arm                                |    1      1
  Animation with slider control            |    1      1
  Volume slider                            |    1      1
  Lighting                                 |    1      1
  Ambient Occlusion                        |    1      1
  Viridis scatter                          |    1      1
  Viridis meshscatter                      |    1      1
  Marker sizes + Marker colors             |    1      1
  Marker offset                            |    1      1
  colormaps                                |    1      1
  Available markers                        |    1      1
  Stepper demo                             |    1      1
  Implicit equation                        |    1      1
  Cube lattice                             |    1      1
  3D cube with sphere cutout, inside       |    1      1
  3D cube with sphere cutout, outside      |    1      1
  Biohazard                                |    1      1
  Twisty cube thing                        |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Test                                     |    1      1
  Type recipe for molecule simulation      |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 184 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/MakieGallery/V0mvg/test/runtests.jl:25
ERROR: Package MakieGallery errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
