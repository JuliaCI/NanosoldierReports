Julia Version 1.6.0-DEV.918
Commit 8bdf5695e2 (2020-09-15 16:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Crayons ───────────────────── v4.0.4
  Installed MetadataArrays ────────────── v0.1.0
  Installed Missings ──────────────────── v0.4.4
  Installed IntervalSets ──────────────── v0.5.1
  Installed NamedDims ─────────────────── v0.2.25
  Installed Tables ────────────────────── v1.0.5
  Installed ChainedFixes ──────────────── v0.2.1
  Installed AxisIndices ───────────────── v0.6.4
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed ArrayInterface ────────────── v2.12.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Formatting ────────────────── v0.4.1
  Installed Parameters ────────────────── v0.12.1
  Installed StaticArrays ──────────────── v0.12.4
  Installed OrderedCollections ────────── v1.3.1
  Installed UnPack ────────────────────── v1.0.2
  Installed EllipsisNotation ──────────── v0.4.0
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PrettyTables ──────────────── v0.9.1
  Installed StaticRanges ──────────────── v0.7.1
  Installed Requires ──────────────────── v1.0.2
  Installed TableTraitsUtils ──────────── v1.0.1
  Installed DataValues ────────────────── v0.4.13
  Installed TableTraits ───────────────── v1.0.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [f52c9ee2] + AxisIndices v0.6.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.12.0
  [f52c9ee2] + AxisIndices v0.6.4
  [9706b775] + ChainedFixes v0.2.1
  [a8cc5b0e] + Crayons v4.0.4
  [9a962f9c] + DataAPI v1.3.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [e7dc6d0d] + DataValues v0.4.13
  [da5c29d0] + EllipsisNotation v0.4.0
  [59287772] + Formatting v0.4.1
  [8197267c] + IntervalSets v0.5.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [dbb5928d] + MappedArrays v0.2.2
  [49441bc9] + MetadataArrays v0.1.0
  [e1d29d7a] + Missings v0.4.4
  [356022a1] + NamedDims v0.2.25
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [08abe8d2] + PrettyTables v0.9.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.2
  [90137ffa] + StaticArrays v0.12.4
  [d8176aec] + StaticRanges v0.7.1
  [3783bdb8] + TableTraits v1.0.0
  [382cd787] + TableTraitsUtils v1.0.1
  [bd369af6] + Tables v1.0.5
  [3a884ed6] + UnPack v1.0.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AxisIndices
Status `/tmp/jl_ji4zyI/Project.toml`
  [f52c9ee2] AxisIndices v0.6.4
  [9706b775] ChainedFixes v0.2.1
  [3da002f7] ColorTypes v0.10.9
  [e30172f5] Documenter v0.25.2
  [53c48c17] FixedPointNumbers v0.8.4
  [8197267c] IntervalSets v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [49441bc9] MetadataArrays v0.1.0
  [356022a1] NamedDims v0.2.25
  [6fe1bfb0] OffsetArrays v1.2.0
  [d8176aec] StaticRanges v0.7.1
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v1.0.5
  [1986cc42] Unitful v1.4.0
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_ji4zyI/Manifest.toml`
  [4fba245c] ArrayInterface v2.12.0
  [f52c9ee2] AxisIndices v0.6.4
  [9706b775] ChainedFixes v0.2.1
  [3da002f7] ColorTypes v0.10.9
  [187b0558] ConstructionBase v1.0.0
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [da5c29d0] EllipsisNotation v0.4.0
  [53c48c17] FixedPointNumbers v0.8.4
  [59287772] Formatting v0.4.1
  [8197267c] IntervalSets v0.5.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [dbb5928d] MappedArrays v0.2.2
  [49441bc9] MetadataArrays v0.1.0
  [e1d29d7a] Missings v0.4.4
  [356022a1] NamedDims v0.2.25
  [6fe1bfb0] OffsetArrays v1.2.0
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [08abe8d2] PrettyTables v0.9.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [90137ffa] StaticArrays v0.12.4
  [d8176aec] StaticRanges v0.7.1
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v1.0.5
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.4.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:     | Pass  Total
AxisIndicesStyles |   37     37
Test Summary: | Pass  Total
to_index      |   48     48
Test Summary: | Pass  Total
to_indices    |   13     13
Test Summary:  | Pass  Total
values/indices |    8      8
Test Summary: | Pass  Total
keys          |   11     11
Test Summary: | Pass  Total
to_indices    |    2      2
Test Summary: | Pass  Total
to_axes       |    3      3
Test Summary: | Pass  Total
checkindex    |   27     27
Test Summary: | Pass  Total
AxisIterator  |   22     22
Test Summary: | Pass  Total
AxesIterator  |    7      7
Test Summary: | Pass  Total
Axis          |   16     16
Test Summary: | Pass  Total
MetaAxis      |   23     23
Test Summary: | Pass  Total
StructAxis    |    5      5
Test Summary:   | Pass  Total
Axes - indexing |    8      8
Test Summary: | Pass  Total
to_axis       |    6      6
Test Summary: | Pass  Total
insert!       |    4      4
Test Summary: | Pass  Total
AxisArray     |   18     18
Test Summary: | Pass  Total
matrices      |   49     49
Test Summary:    | Pass  Total
permuteddimsview |   11     11
Test Summary: | Pass  Total
OffsetAxis    |   15     15
Test Summary: | Pass  Total
CenteredAxis  |   23     23
Test Summary: | Pass  Total
IdentityAxis  |   56     56
Test Summary: | Pass  Total
getindex      |   16     16
Test Summary: | Pass  Total
size          |    3      3
Test Summary: | Pass  Total
pop           |    8      8
Test Summary: | Pass  Total
popfirst      |    8      8
Test Summary: | Pass  Total
first         |   10     10
Test Summary: | Pass  Total
step(r)       |    5      5
Test Summary: | Pass  Total
last          |   10     10
Test Summary:  | Pass  Total
length - tests |   12     12
Test Summary: | Pass  Total
CartesianAxes |   37     37
Test Summary: | Pass  Total
LinearAxes    |   34     34
Test Summary: | Pass  Total
filter        |    2      2
Test Summary:           | Pass  Total
AbstractAxis promotions |   20     20
Test Summary: | Pass  Total
similar_type  |    4      4
Test Summary: | Pass  Total
similar axes  |    3      3
Test Summary:   | Pass  Total
similar by axes |    1      1
Test Summary: | Pass  Total
grow          |   32     32
Test Summary: | Pass  Total
shrink        |   32     32
Test Summary:         | Pass  Total
staticn/fixed/dynamic |   18     18
Test Summary: | Pass  Total
checkbounds   |   17     17
Test Summary: | Pass  Total
selectdim     |    4      4
Test Summary: | Pass  Total
adjoint       |    8      8
Test Summary: | Pass  Total
transpose     |    8      8
Test Summary: | Pass  Total
permutedims   |    8      8
Test Summary: | Pass  Total
permutedims   |    3      3
Test Summary: | Pass  Total
pinv          |    6      6
Test Summary: | Pass  Total
+             |   10     10
Test Summary: | Pass  Total
-             |    2      2
Test Summary:  | Pass  Total
scalar product |    2      2
Test Summary:             | Pass  Total
Mutmul with special types |   10     10
Test Summary: | Pass  Total
inv           |    5      5
Test Summary: | Pass  Total
cov/cor       |   18     18
Test Summary: | Pass  Total
dropdims      |    6      6
Test Summary:     | Pass  Total
Axis Constructors |   23     23
Test Summary:  | Pass  Total
column methods |    3      3
Test Summary: | Pass  Total
row methods   |    3      3
Test Summary: | Pass  Total
Base          |   98     98
Test Summary: | Pass  Total
Statistics    |   12     12
Test Summary: | Pass  Total
cat_axis      |    5      5
Test Summary: | Pass  Total
hcat          |    5      5
Test Summary: | Pass  Total
vcat          |    3      3
Test Summary: | Pass  Total
cat           |    7      7
Test Summary:   | Pass  Total
Array Interface |   12     12
Test Summary:    | Pass  Total
PermuteDimsArray |    2      2
Test Summary: | Pass  Total
I/O           |    1      1
Test Summary: | Pass  Total
Interface     |    4      4
Test Summary: | Pass  Total
resize!       |    1      1
Test Summary: | Pass  Total
view          |    3      3
Test Summary: | Pass  Total
push!         |    4      4
Test Summary:  | Pass  Total
BroadcastStyle |    4      4
Test Summary: | Pass  Total
combine       |   11     11
Test Summary: | Pass  Total
Broadcasting  |   12     12
Test Summary:                       | Pass  Total
Binary broadcasting operations (.+) |    6      6
Test Summary:  | Pass  Total
Linear Algebra |   38     38
Test Summary:       | Pass  Total
ReadonlyMappedArray |   13     13
Test Summary: | Pass  Total
MappedArray   |   18     18
Test Summary: | Pass  Total
of_eltype     |    5      5
Test Summary: | Pass  Total
No zero(::T)  |    7      7
Test Summary:            | Pass  Total
ReadOnlyMultiMappedArray |   28     28
Test Summary:    | Pass  Total
MultiMappedArray |   24     24
Test Summary: | Pass  Total
traits        |    6      6
Test Summary: | Pass  Total
copyto!       |   23     23
Test Summary: | Pass  Total
reshape       |    2      2
Test Summary: | Pass  Total
NamedDims     |   11     11
Test Summary: | Pass  Total
MetaAxisArray |    4      4
Test Summary:      | Pass  Total
NamedMetaAxisArray |    7      7
Test Summary:                   | Pass  Total
Single-entry arrays in dims 0:5 |   93     93
Test Summary:             | Pass  Total
OffsetVector constructors |    3      3
Test Summary:                            | Pass  Total
undef, missing, and nothing constructors |   10     10
Test Summary:             | Pass  Total
Offset range construction |    2      2
Test Summary:                           | Pass  Total
OffsetArray of OffsetArray construction |    4      4
Test Summary: | Pass  Total
Traits        |    7      7
Test Summary:   | Pass  Total
Scalar indexing |   16     16
Test Summary:   | Pass  Total
Vector indexing |   13     13
Test Summary:     | Pass  Total
CartesianIndexing |   12     12
Test Summary:    | Pass  Total
logical indexing |    1      1
Test Summary: | Pass  Total
view          |   48     48
Test Summary: | Pass  Total
iteration     |    4      4
Test Summary:    | Pass  Total
readdlm/writedlm |    1      1
Test Summary: | Pass  Total
map           |    3      3
Test Summary: | Pass  Total
@inbounds     |    8      8
Test Summary: | Pass  Total
broadcasting  |    4      4
Test Summary: | Pass  Total
rot/reverse   |    4      4
Test Summary: | Pass  Total
no nesting    |    3      3
Test Summary:                       | Pass  Total
mutating functions for OffsetVector |   12     12
Test Summary:      | Pass  Total
searchsorted (#85) |   15     15
Test Summary:          | Pass  Total
Resizing OffsetVectors |    5      5
Test Summary: | Pass  Total
reductions    |   20     20
Test Summary: | Pass  Total
copyto!       |   34     34
Test Summary: | Pass  Total
Collections   |    9      9
Test Summary: | Pass  Total
fill          |    2      2
Test Summary: | Pass  Total
reshape       |    2      2
Test Summary: | Pass  Total
pretty_array  |    1      1
Test Summary:   | Pass  Total
ObservationDims |   13     13
Test Summary: | Pass  Total
Tables        |   39     39
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/observations.md:33-47
│ 
│ ```jldoctest observation_docs
│ julia> using AxisIndices.ObservationDims
│ 
│ julia> obsdim(data)  # the dimension along which observations are enumerated
│ 2
│ 
│ julia> nobs(data)  # the number of distinct observations
│ 3
│ 
│ julia> obs_keys(data)  # the key for each observation
│ 3-element Array{Symbol,1}:
│  :subject_1
│  :subject_2
│  :subject_3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ obs_keys(data)  # the key for each observation
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Symbol}:
│  :subject_1
│  :subject_2
│  :subject_3
│ 
│ Expected output:
│ 
│ 3-element Array{Symbol,1}:
│  :subject_1
│  :subject_2
│  :subject_3
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Symbol,1}:
│     Vector{Symbol}:
│     :subject_1
│     :subject_2
│     :subject_3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:28-52
│ 
│ ```jldoctest intro_axis_examples
│ julia> using AxisIndices
│ 
│ julia> using Dates
│ 
│ julia> using ChainedFixes  # provides `and`, `or`, `⩓`, `⩔` methods
│ 
│ julia> sa = SimpleAxis(1:10)
│ SimpleAxis(1:10)
│ 
│ julia> sa[2]
│ 2
│ 
│ julia> sa[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> a = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ 
│ julia> a[2]
│ 2
│ 
│ julia> a[2:3]
│ Axis(2:3 => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ sa = SimpleAxis(1:10)
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(1:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(1:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(1:10)typename(SimpleAxis)(1:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:28-52
│ 
│ ```jldoctest intro_axis_examples
│ julia> using AxisIndices
│ 
│ julia> using Dates
│ 
│ julia> using ChainedFixes  # provides `and`, `or`, `⩓`, `⩔` methods
│ 
│ julia> sa = SimpleAxis(1:10)
│ SimpleAxis(1:10)
│ 
│ julia> sa[2]
│ 2
│ 
│ julia> sa[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> a = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ 
│ julia> a[2]
│ 2
│ 
│ julia> a[2:3]
│ Axis(2:3 => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ sa[>(2)]
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(3:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(3:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(3:10)typename(SimpleAxis)(3:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:28-52
│ 
│ ```jldoctest intro_axis_examples
│ julia> using AxisIndices
│ 
│ julia> using Dates
│ 
│ julia> using ChainedFixes  # provides `and`, `or`, `⩓`, `⩔` methods
│ 
│ julia> sa = SimpleAxis(1:10)
│ SimpleAxis(1:10)
│ 
│ julia> sa[2]
│ 2
│ 
│ julia> sa[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> a = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ 
│ julia> a[2]
│ 2
│ 
│ julia> a[2:3]
│ Axis(2:3 => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ a = Axis(1:10)
│ 
│ Evaluated output:
│ 
│ typename(Axis)(1:10 => Base.OneTo(10))
│ 
│ Expected output:
│ 
│ Axis(1:10 => Base.OneTo(10))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(1:10 typename(Axis)(1:10 => Base.OneTo(10))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:28-52
│ 
│ ```jldoctest intro_axis_examples
│ julia> using AxisIndices
│ 
│ julia> using Dates
│ 
│ julia> using ChainedFixes  # provides `and`, `or`, `⩓`, `⩔` methods
│ 
│ julia> sa = SimpleAxis(1:10)
│ SimpleAxis(1:10)
│ 
│ julia> sa[2]
│ 2
│ 
│ julia> sa[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> a = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ 
│ julia> a[2]
│ 2
│ 
│ julia> a[2:3]
│ Axis(2:3 => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ a[2:3]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2:3 => 2:3)
│ 
│ Expected output:
│ 
│ Axis(2:3 => 2:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2:3 typename(Axis)(2:3 => 2:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:55-76
│ 
│ ```jldoctest intro_axis_examples
│ julia> a = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> a[1]
│ 1
│ 
│ julia> a[isequal(2.0)]
│ 1
│ 
│ julia> a[>(2)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[>(2.0)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[and(>(2.0), <(8.0))]
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│ julia> sa[in(3:5)]
│ SimpleAxis(3:5)
│ ```
│ 
│ Subexpression:
│ 
│ a = Axis(2.0:11.0, 1:10)
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:11.0 => 1:10)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:11.0 typename(Axis)(2.0:1.0:11.0 => 1:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:55-76
│ 
│ ```jldoctest intro_axis_examples
│ julia> a = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> a[1]
│ 1
│ 
│ julia> a[isequal(2.0)]
│ 1
│ 
│ julia> a[>(2)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[>(2.0)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[and(>(2.0), <(8.0))]
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│ julia> sa[in(3:5)]
│ SimpleAxis(3:5)
│ ```
│ 
│ Subexpression:
│ 
│ a[>(2)]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(3.0:1.0:11.0 => 2:10)
│ 
│ Expected output:
│ 
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(3.0:1.0:11.0 typename(Axis)(3.0:1.0:11.0 => 2:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:55-76
│ 
│ ```jldoctest intro_axis_examples
│ julia> a = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> a[1]
│ 1
│ 
│ julia> a[isequal(2.0)]
│ 1
│ 
│ julia> a[>(2)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[>(2.0)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[and(>(2.0), <(8.0))]
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│ julia> sa[in(3:5)]
│ SimpleAxis(3:5)
│ ```
│ 
│ Subexpression:
│ 
│ a[>(2.0)]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(3.0:1.0:11.0 => 2:10)
│ 
│ Expected output:
│ 
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(3.0:1.0:11.0 typename(Axis)(3.0:1.0:11.0 => 2:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:55-76
│ 
│ ```jldoctest intro_axis_examples
│ julia> a = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> a[1]
│ 1
│ 
│ julia> a[isequal(2.0)]
│ 1
│ 
│ julia> a[>(2)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[>(2.0)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[and(>(2.0), <(8.0))]
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│ julia> sa[in(3:5)]
│ SimpleAxis(3:5)
│ ```
│ 
│ Subexpression:
│ 
│ a[and(>(2.0), <(8.0))]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(3.0:1.0:7.0 => 2:6)
│ 
│ Expected output:
│ 
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(3.0:1.0:7.0 typename(Axis)(3.0:1.0:7.0 => 2:6)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:55-76
│ 
│ ```jldoctest intro_axis_examples
│ julia> a = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> a[1]
│ 1
│ 
│ julia> a[isequal(2.0)]
│ 1
│ 
│ julia> a[>(2)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[>(2.0)]
│ Axis(3.0:1.0:11.0 => 2:10)
│ 
│ julia> a[and(>(2.0), <(8.0))]
│ Axis(3.0:1.0:7.0 => 2:6)
│ 
│ julia> sa[in(3:5)]
│ SimpleAxis(3:5)
│ ```
│ 
│ Subexpression:
│ 
│ sa[in(3:5)]
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(3:5)
│ 
│ Expected output:
│ 
│ SimpleAxis(3:5)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(3:5)typename(SimpleAxis)(3:5)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:79-92
│ 
│ ```jldoctest intro_axis_examples
│ julia> x, y, z = Axis([:one, :two, :three]), Axis(["one", "two", "three"]), Axis(Second(1):Second(1):Second(3));
│ 
│ julia> x[:one]
│ 1
│ 
│ julia> x[:one] == y["one"] == z[Second(1)]
│ true
│ 
│ julia> x[[:one, :two]]
│ 2-element Array{Int64,1}:
│  1
│  2
│ ```
│ 
│ Subexpression:
│ 
│ x[[:one, :two]]
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Int64}:
│  1
│  2
│ 
│ Expected output:
│ 
│ 2-element Array{Int64,1}:
│  1
│  2
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Int64,1}:
│     Vector{Int64}:
│     1
│     2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:100-110
│ 
│ ```jldoctest indexing_examples
│ julia> using AxisIndices, Unitful, IntervalSets, ChainedFixes
│ 
│ julia> using Unitful: s
│ 
│ julia> time1 = Axis((1.5:.5:10)s)
│ Axis((1.5:0.5:10.0) s => Base.OneTo(18))
│ 
│ julia> time2 = Axis((1.5:.5:10)s, 2:19)
│ Axis((1.5:0.5:10.0) s => 2:19)
│ ```
│ 
│ Subexpression:
│ 
│ time1 = Axis((1.5:.5:10)s)
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:10.0) s => Base.OneTo(18))
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:10.0) s => Base.OneTo(18))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:10.0) typename(Axis)((1.5:0.5:10.0) s => Base.OneTo(18))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:100-110
│ 
│ ```jldoctest indexing_examples
│ julia> using AxisIndices, Unitful, IntervalSets, ChainedFixes
│ 
│ julia> using Unitful: s
│ 
│ julia> time1 = Axis((1.5:.5:10)s)
│ Axis((1.5:0.5:10.0) s => Base.OneTo(18))
│ 
│ julia> time2 = Axis((1.5:.5:10)s, 2:19)
│ Axis((1.5:0.5:10.0) s => 2:19)
│ ```
│ 
│ Subexpression:
│ 
│ time2 = Axis((1.5:.5:10)s, 2:19)
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:10.0) s => 2:19)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:10.0) s => 2:19)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:10.0) typename(Axis)((1.5:0.5:10.0) s => 2:19)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:115-128
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1]
│ 1
│ 
│ julia> time1[2]
│ 2
│ 
│ julia> time2[2]
│ 2
│ 
│ julia> time2[1]
│ ERROR: BoundsError: attempt to access 18-element Axis((1.5:0.5:10.0) s => 2:19) at index [1]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ time2[1]
│ 
│ Evaluated output:
│ 
│ ERROR: BoundsError: attempt to access 18-element typename(Axis)((1.5:0.5:10.0) s => 2:19) at index [1]
│ Stacktrace:
│  [1] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:39 [inlined]
│  [2] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│  [3] getindex(axis::Axis{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, Int64, StepRangeLen{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, Base.TwicePrecision{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}}, Base.TwicePrecision{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}}}, UnitRange{Int64}}, i::Int64)
│    @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:118
│  [4] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ERROR: BoundsError: attempt to access 18-element Axis((1.5:0.5:10.0) s => 2:19) at index [1]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: BoundsError: attempt to access 18-element Axis((1.5:0.5:10.0) typename(Axis)((1.5:0.5:10.0) s => 2:19) at index [1]
│    [...]Stacktrace:
│     [1] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:39 [inlined]
│     [2] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│     [3] getindex(axis::Axis{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, Int64, StepRangeLen{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, Base.TwicePrecision{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}}, Base.TwicePrecision{Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}}}, UnitRange{Int64}}, i::Int64)
│       @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:118
│     [4] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:135-141
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1:2]
│ Axis((1.5:0.5:2.0) s => 1:2)
│ 
│ julia> time2[2:3]
│ Axis((1.5:0.5:2.0) s => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ time1[1:2]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:2.0) s => 1:2)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:2.0) s => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:2.0) typename(Axis)((1.5:0.5:2.0) s => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:135-141
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1:2]
│ Axis((1.5:0.5:2.0) s => 1:2)
│ 
│ julia> time2[2:3]
│ Axis((1.5:0.5:2.0) s => 2:3)
│ ```
│ 
│ Subexpression:
│ 
│ time2[2:3]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:2.0) s => 2:3)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:2.0) s => 2:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:2.0) typename(Axis)((1.5:0.5:2.0) s => 2:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:144-156
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1:2:4]
│ 1:2:3
│ 
│ julia> time1[[1, 2, 3]]
│ 3-element Array{Int64,1}:
│  1
│  2
│  3
│ 
│ julia> time1[firstindex(time1):end]
│ Axis((1.5:0.5:10.0) s => 1:18)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ time1[[1, 2, 3]]
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int64}:
│  1
│  2
│  3
│ 
│ Expected output:
│ 
│ 3-element Array{Int64,1}:
│  1
│  2
│  3
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int64,1}:
│     Vector{Int64}:
│     1
│     2
│     3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:144-156
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1:2:4]
│ 1:2:3
│ 
│ julia> time1[[1, 2, 3]]
│ 3-element Array{Int64,1}:
│  1
│  2
│  3
│ 
│ julia> time1[firstindex(time1):end]
│ Axis((1.5:0.5:10.0) s => 1:18)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ time1[firstindex(time1):end]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:10.0) s => 1:18)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:10.0) s => 1:18)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:10.0) typename(Axis)((1.5:0.5:10.0) s => 1:18)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:169-175
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1.5s..3s]
│ Axis((1.5:0.5:3.0) s => 1:4)
│ 
│ julia> time1[3s..4.5s]
│ Axis((3.0:0.5:4.5) s => 4:7)
│ ```
│ 
│ Subexpression:
│ 
│ time1[1.5s..3s]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:3.0) s => 1:4)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:3.0) s => 1:4)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:3.0) typename(Axis)((1.5:0.5:3.0) s => 1:4)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:169-175
│ 
│ ```jldoctest indexing_examples
│ julia> time1[1.5s..3s]
│ Axis((1.5:0.5:3.0) s => 1:4)
│ 
│ julia> time1[3s..4.5s]
│ Axis((3.0:0.5:4.5) s => 4:7)
│ ```
│ 
│ Subexpression:
│ 
│ time1[3s..4.5s]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((3.0:0.5:4.5) s => 4:7)
│ 
│ Expected output:
│ 
│ Axis((3.0:0.5:4.5) s => 4:7)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((3.0:0.5:4.5) typename(Axis)((3.0:0.5:4.5) s => 4:7)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:180-192
│ 
│ ```jldoctest indexing_examples
│ julia> Axis((2:11), 1:10)[Keys(<(5))]
│ Axis(2:4 => 1:3)
│ 
│ julia> Axis((2:11), 1:10)[Indices(<(5))]
│ Axis(2:5 => 1:4)
│ 
│ julia> Axis((2:11), 1:10)[Keys(3)]
│ 2
│ 
│ julia> Axis((2:11), 1:10)[Indices(3)]
│ 3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Axis((2:11), 1:10)[Keys(<(5))]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2:4 => 1:3)
│ 
│ Expected output:
│ 
│ Axis(2:4 => 1:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2:4 typename(Axis)(2:4 => 1:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:180-192
│ 
│ ```jldoctest indexing_examples
│ julia> Axis((2:11), 1:10)[Keys(<(5))]
│ Axis(2:4 => 1:3)
│ 
│ julia> Axis((2:11), 1:10)[Indices(<(5))]
│ Axis(2:5 => 1:4)
│ 
│ julia> Axis((2:11), 1:10)[Keys(3)]
│ 2
│ 
│ julia> Axis((2:11), 1:10)[Indices(3)]
│ 3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ Axis((2:11), 1:10)[Indices(<(5))]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2:5 => 1:4)
│ 
│ Expected output:
│ 
│ Axis(2:5 => 1:4)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2:5 typename(Axis)(2:5 => 1:4)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:197-212
│ 
│ ```jldoctest indexing_examples
│ julia> axis = Axis([pi + 0, pi + 1]);
│ 
│ julia> axis[3.141592653589793]
│ 1
│ 
│ julia> axis[3.14159265358979]
│ ERROR: BoundsError: attempt to access 2-element Axis([3.141592653589793, 4.141592653589793] => OneToMRange(2)) at index [3.14159265358979]
│ [...]
│ 
│ julia> axis[isapprox(3.14159265358979)]
│ 1
│ 
│ julia> axis[isapprox(3.14, atol=1e-2)]
│ 1
│ ```
│ 
│ Subexpression:
│ 
│ axis[3.14159265358979]
│ 
│ Evaluated output:
│ 
│ ERROR: BoundsError: attempt to access 2-element typename(Axis)([3.141592653589793, 4.141592653589793] => OneToMRange(2)) at index [3.14159265358979]
│ Stacktrace:
│  [1] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:32 [inlined]
│  [2] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│  [3] getindex(axis::Axis{Float64, Int64, Vector{Float64}, OneToMRange{Int64}}, arg::Float64)
│    @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:125
│  [4] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ERROR: BoundsError: attempt to access 2-element Axis([3.141592653589793, 4.141592653589793] => OneToMRange(2)) at index [3.14159265358979]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: BoundsError: attempt to access 2-element Axis([3.141592653589793, typename(Axis)([3.141592653589793, 4.141592653589793] => OneToMRange(2)) at index [3.14159265358979]
│    [...]Stacktrace:
│     [1] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:32 [inlined]
│     [2] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│     [3] getindex(axis::Axis{Float64, Int64, Vector{Float64}, OneToMRange{Int64}}, arg::Float64)
│       @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:125
│     [4] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:217-229
│ 
│ ```jldoctest indexing_examples
│ julia> time1[<(3.0s)]
│ Axis((1.5:0.5:2.5) s => 1:3)
│ 
│ julia> time1[>(3.0s)]
│ Axis((3.5:0.5:10.0) s => 5:18)
│ 
│ julia> time1[==(6.0s)]
│ 10
│ 
│ julia> time1[!=(6.0s)] == vcat(1:9, 11:18)
│ true
│ ```
│ 
│ Subexpression:
│ 
│ time1[<(3.0s)]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((1.5:0.5:2.5) s => 1:3)
│ 
│ Expected output:
│ 
│ Axis((1.5:0.5:2.5) s => 1:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((1.5:0.5:2.5) typename(Axis)((1.5:0.5:2.5) s => 1:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:217-229
│ 
│ ```jldoctest indexing_examples
│ julia> time1[<(3.0s)]
│ Axis((1.5:0.5:2.5) s => 1:3)
│ 
│ julia> time1[>(3.0s)]
│ Axis((3.5:0.5:10.0) s => 5:18)
│ 
│ julia> time1[==(6.0s)]
│ 10
│ 
│ julia> time1[!=(6.0s)] == vcat(1:9, 11:18)
│ true
│ ```
│ 
│ Subexpression:
│ 
│ time1[>(3.0s)]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((3.5:0.5:10.0) s => 5:18)
│ 
│ Expected output:
│ 
│ Axis((3.5:0.5:10.0) s => 5:18)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((3.5:0.5:10.0) typename(Axis)((3.5:0.5:10.0) s => 5:18)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:232-244
│ 
│ ```jldoctest indexing_examples
│ julia> time1[and(>(2.5s), <(10.0s))]
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│ julia> time1[>(2.5s) ⩓ <(10.0s)]  # equivalent to `and` you can use \And<TAB>
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│ julia> time1[or(<(2.5s),  >(9.0s))] == vcat(1:2, 17:18)
│ true
│ 
│ julia> time1[<(2.5s) ⩔ >(9.0s)] == vcat(1:2, 17:18) # equivalent to `or` you can use \Or<TAB>
│ true
│ 
│ ```
│ 
│ Subexpression:
│ 
│ time1[and(>(2.5s), <(10.0s))]
│ 
│ Evaluated output:
│ 
│ typename(Axis)((3.0:0.5:9.5) s => 4:17)
│ 
│ Expected output:
│ 
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((3.0:0.5:9.5) typename(Axis)((3.0:0.5:9.5) s => 4:17)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/axis.md:232-244
│ 
│ ```jldoctest indexing_examples
│ julia> time1[and(>(2.5s), <(10.0s))]
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│ julia> time1[>(2.5s) ⩓ <(10.0s)]  # equivalent to `and` you can use \And<TAB>
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│ julia> time1[or(<(2.5s),  >(9.0s))] == vcat(1:2, 17:18)
│ true
│ 
│ julia> time1[<(2.5s) ⩔ >(9.0s)] == vcat(1:2, 17:18) # equivalent to `or` you can use \Or<TAB>
│ true
│ 
│ ```
│ 
│ Subexpression:
│ 
│ time1[>(2.5s) ⩓ <(10.0s)]  # equivalent to `and` you can use \And<TAB>
│ 
│ Evaluated output:
│ 
│ typename(Axis)((3.0:0.5:9.5) s => 4:17)
│ 
│ Expected output:
│ 
│ Axis((3.0:0.5:9.5) s => 4:17)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis((3.0:0.5:9.5) typename(Axis)((3.0:0.5:9.5) s => 4:17)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/arrays.md:22-25
│ 
│ ```jldoctest arrays_interface
│ julia> axes(A_axis, 1)
│ Axis(["a", "b"] => Base.OneTo(2))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axes(A_axis, 1)
│ 
│ Evaluated output:
│ 
│ typename(Axis)(["a", "b"] => Base.OneTo(2))
│ 
│ Expected output:
│ 
│ Axis(["a", "b"] => Base.OneTo(2))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(["a", typename(Axis)(["a", "b"] => Base.OneTo(2))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/arrays.md:60-84
│ 
│ ```jldoctest arrays_interface
│ julia> A_meta_axis = MetaAxisArray(A_base, (["a", "b"], [:one, :two]), metadata = "a life well Steved")
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ 
│ julia> A_meta_axis == MetaAxisArray(A_axis, metadata = "a life well Steved")
│ true
│ 
│ julia> NamedMetaAxisArray{(:xdim, :ydim)}(A_base, ["a", "b"], [:one, :two], metadata = "a life well Steved")
│ 2×2 NamedMetaAxisArray{Int64,2}
│  • xdim - ["a", "b"]
│  • ydim - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ ```
│ 
│ Subexpression:
│ 
│ A_meta_axis = MetaAxisArray(A_base, (["a", "b"], [:one, :two]), metadata = "a life well Steved")
│ 
│ Evaluated output:
│ 
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: 18-codeunit String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ Expected output:
│ 
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 MetaAxisArray{Int64,2}
│     • dim_1 - ["a", "b"]
│     • dim_2 - [:one, :two]
│    metadata: 18-codeunit String
│     • a life well Steved
│          one   two
│      a     1     2
│      b     3     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/arrays.md:60-84
│ 
│ ```jldoctest arrays_interface
│ julia> A_meta_axis = MetaAxisArray(A_base, (["a", "b"], [:one, :two]), metadata = "a life well Steved")
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ 
│ julia> A_meta_axis == MetaAxisArray(A_axis, metadata = "a life well Steved")
│ true
│ 
│ julia> NamedMetaAxisArray{(:xdim, :ydim)}(A_base, ["a", "b"], [:one, :two], metadata = "a life well Steved")
│ 2×2 NamedMetaAxisArray{Int64,2}
│  • xdim - ["a", "b"]
│  • ydim - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ ```
│ 
│ Subexpression:
│ 
│ NamedMetaAxisArray{(:xdim, :ydim)}(A_base, ["a", "b"], [:one, :two], metadata = "a life well Steved")
│ 
│ Evaluated output:
│ 
│ 2×2 NamedMetaAxisArray{Int64,2}
│  • xdim - ["a", "b"]
│  • ydim - [:one, :two]
│ metadata: 18-codeunit String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│ Expected output:
│ 
│ 2×2 NamedMetaAxisArray{Int64,2}
│  • xdim - ["a", "b"]
│  • ydim - [:one, :two]
│ metadata: String
│  • a life well Steved
│       one   two
│   a     1     2
│   b     3     4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 NamedMetaAxisArray{Int64,2}
│     • xdim - ["a", "b"]
│     • ydim - [:one, :two]
│    metadata: 18-codeunit String
│     • a life well Steved
│          one   two
│      a     1     2
│      b     3     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/docs/src/arrays.md:160-168
│ 
│ ```jldoctest indexing_examples
│ julia> A_axis[!=(.2s), in(["a", "c"])]
│ 2×2 AxisArray{Int64,2}
│  • dim_1 - Unitful.Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}[0.1 s, 0.3 s]
│  • dim_2 - ["a", "c"]
│           a   c
│   0.1 s   1   7
│   0.3 s   3   9
│ 
│ ```
│ 
│ Subexpression:
│ 
│ A_axis[!=(.2s), in(["a", "c"])]
│ 
│ Evaluated output:
│ 
│ 2×2 AxisArray{Int64,2}
│  • dim_1 - Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[0.1 s, 0.3 s]
│  • dim_2 - ["a", "c"]
│           a   c
│   0.1 s   1   7
│   0.3 s   3   9
│ 
│ Expected output:
│ 
│ 2×2 AxisArray{Int64,2}
│  • dim_1 - Unitful.Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}[0.1 s, 0.3 s]
│  • dim_2 - ["a", "c"]
│           a   c
│   0.1 s   1   7
│   0.3 s   3   9
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 AxisArray{Int64,2}
│     • dim_1 - Unitful.Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}[0.1 Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[0.1 s, 0.3 s]
│     • dim_2 - ["a", "c"]
│              a   c
│      0.1 s   1   7
│      0.3 s   3   9
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:190-224
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a1 = reshape([1, 2, 3], 3, 1)
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ julia> a2 = [4 5 6]
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│ julia> a1p, a2p = paddedviews(-1, a1, a2);
│ 
│ julia> a1p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ julia> a2p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ julia> a1p[CartesianIndices(a1)]
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a1 = reshape([1, 2, 3], 3, 1)
│ 
│ Evaluated output:
│ 
│ 3×1 Matrix{Int64}:
│  1
│  2
│  3
│ 
│ Expected output:
│ 
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×1 Array{Int64,2}:
│     Matrix{Int64}:
│     1
│     2
│     3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:190-224
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a1 = reshape([1, 2, 3], 3, 1)
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ julia> a2 = [4 5 6]
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│ julia> a1p, a2p = paddedviews(-1, a1, a2);
│ 
│ julia> a1p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ julia> a2p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ julia> a1p[CartesianIndices(a1)]
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a2 = [4 5 6]
│ 
│ Evaluated output:
│ 
│ 1×3 Matrix{Int64}:
│  4  5  6
│ 
│ Expected output:
│ 
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×3 Array{Int64,2}:
│     Matrix{Int64}:
│     4  5  6
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:190-224
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a1 = reshape([1, 2, 3], 3, 1)
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ julia> a2 = [4 5 6]
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│ julia> a1p, a2p = paddedviews(-1, a1, a2);
│ 
│ julia> a1p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ julia> a2p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ julia> a1p[CartesianIndices(a1)]
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a1p
│ 
│ Evaluated output:
│ 
│ 3×3 PaddedView(-1, ::Matrix{Int64}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ Expected output:
│ 
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 PaddedView(-1, ::Array{Int64,2}, ::Matrix{Int64}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│     1  -1  -1
│     2  -1  -1
│     3  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:190-224
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a1 = reshape([1, 2, 3], 3, 1)
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ julia> a2 = [4 5 6]
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│ julia> a1p, a2p = paddedviews(-1, a1, a2);
│ 
│ julia> a1p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ julia> a2p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ julia> a1p[CartesianIndices(a1)]
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a2p
│ 
│ Evaluated output:
│ 
│ 3×3 PaddedView(-1, ::Matrix{Int64}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ Expected output:
│ 
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 PaddedView(-1, ::Array{Int64,2}, ::Matrix{Int64}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│      4   5   6
│     -1  -1  -1
│     -1  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:190-224
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a1 = reshape([1, 2, 3], 3, 1)
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ julia> a2 = [4 5 6]
│ 1×3 Array{Int64,2}:
│  4  5  6
│ 
│ julia> a1p, a2p = paddedviews(-1, a1, a2);
│ 
│ julia> a1p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│  1  -1  -1
│  2  -1  -1
│  3  -1  -1
│ 
│ julia> a2p
│ 3×3 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(3), Base.OneTo(3))) with eltype Int64:
│   4   5   6
│  -1  -1  -1
│  -1  -1  -1
│ 
│ julia> a1p[CartesianIndices(a1)]
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a1p[CartesianIndices(a1)]
│ 
│ Evaluated output:
│ 
│ 3×1 Matrix{Int64}:
│  1
│  2
│  3
│ 
│ Expected output:
│ 
│ 3×1 Array{Int64,2}:
│  1
│  2
│  3
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×1 Array{Int64,2}:
│     Matrix{Int64}:
│     1
│     2
│     3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:43-84
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a = collect(reshape(1:9, 3, 3))
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ julia> PaddedView(-1, a, (4, 5))
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (0:4, 0:4))
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (5,5), (2,2))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ a = collect(reshape(1:9, 3, 3))
│ 
│ Evaluated output:
│ 
│ 3×3 Matrix{Int64}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ Expected output:
│ 
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 Array{Int64,2}:
│     Matrix{Int64}:
│     1  4  7
│     2  5  8
│     3  6  9
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:43-84
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a = collect(reshape(1:9, 3, 3))
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ julia> PaddedView(-1, a, (4, 5))
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (0:4, 0:4))
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (5,5), (2,2))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PaddedView(-1, a, (4, 5))
│ 
│ Evaluated output:
│ 
│ 4×5 PaddedView(-1, ::Matrix{Int64}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ Expected output:
│ 
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    4×5 PaddedView(-1, ::Array{Int64,2}, ::Matrix{Int64}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│      1   4   7  -1  -1
│      2   5   8  -1  -1
│      3   6   9  -1  -1
│     -1  -1  -1  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:43-84
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a = collect(reshape(1:9, 3, 3))
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ julia> PaddedView(-1, a, (4, 5))
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (0:4, 0:4))
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (5,5), (2,2))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 
│ Evaluated output:
│ 
│ 5×5 PaddedView(-1, ::AxisArray{Int64, 2, Matrix{Int64}, Tuple{OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}, OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ Expected output:
│ 
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, ::AxisArray{Int64, 2, Matrix{Int64}, Tuple{OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}, OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│     -1  -1  -1  -1  -1
│     -1   1   4   7  -1
│     -1   2   5   8  -1
│     -1   3   6   9  -1
│     -1  -1  -1  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:43-84
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a = collect(reshape(1:9, 3, 3))
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ julia> PaddedView(-1, a, (4, 5))
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (0:4, 0:4))
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (5,5), (2,2))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PaddedView(-1, a, (0:4, 0:4))
│ 
│ Evaluated output:
│ 
│ 5×5 PaddedView(-1, ::Matrix{Int64}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ Expected output:
│ 
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    5×5 PaddedView(-1, ::Array{Int64,2}, ::Matrix{Int64}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│     -1  -1  -1  -1  -1
│     -1   1   4   7  -1
│     -1   2   5   8  -1
│     -1   3   6   9  -1
│     -1  -1  -1  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/PaddedViews/PaddedViews.jl:43-84
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> using AxisIndices.PaddedViews
│ 
│ julia> a = collect(reshape(1:9, 3, 3))
│ 3×3 Array{Int64,2}:
│  1  4  7
│  2  5  8
│  3  6  9
│ 
│ julia> PaddedView(-1, a, (4, 5))
│ 4×5 PaddedView(-1, ::Array{Int64,2}, (Base.OneTo(4), Base.OneTo(5))) with eltype Int64:
│   1   4   7  -1  -1
│   2   5   8  -1  -1
│   3   6   9  -1  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (1:5,1:5), (2:4,2:4))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (1:5, 1:5)) with eltype Int64 with indices 1:5×1:5:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (0:4, 0:4))
│ 5×5 PaddedView(-1, ::Array{Int64,2}, (0:4, 0:4)) with eltype Int64 with indices 0:4×0:4:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ julia> PaddedView(-1, a, (5,5), (2,2))
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PaddedView(-1, a, (5,5), (2,2))
│ 
│ Evaluated output:
│ 
│ 5×5 PaddedView(-1, ::AxisArray{Int64, 2, Matrix{Int64}, Tuple{OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}, OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│ Expected output:
│ 
│ 5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│  -1  -1  -1  -1  -1
│  -1   1   4   7  -1
│  -1   2   5   8  -1
│  -1   3   6   9  -1
│  -1  -1  -1  -1  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    5×5 PaddedView(-1, ::AxisArray{Int64,2,Array{Int64,2},Tuple{OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}},OffsetAxis{Int64,UnitRange{Int64},Base.OneTo{Int64}}}}, ::AxisArray{Int64, 2, Matrix{Int64}, Tuple{OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}, OffsetAxis{Int64, UnitRange{Int64}, Base.OneTo{Int64}}}}, (Base.OneTo(5), Base.OneTo(5))) with eltype Int64:
│     -1  -1  -1  -1  -1
│     -1   1   4   7  -1
│     -1   2   5   8  -1
│     -1   3   6   9  -1
│     -1  -1  -1  -1  -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/AxisIndices.jl
│ 
│ ```jldoctest README
│ julia> using AxisIndices
│ 
│ julia> x = AxisArray{Int}(undef, OneToSRange(2), OneToSRange(2));
│ 
│ julia> x[1:4] .= 1;
│ 
│ julia> parent(x)
│ 2×2 StaticArrays.MArray{Tuple{2,2},Int64,2,4} with indices SOneTo(2)×SOneTo(2):
│  1  1
│  1  1
│ 
│ julia> A = AxisArray(reshape(1:4, 2, 2), [:a, :b], ["one", "two"])
│ 2×2 AxisArray{Int64,2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│       one   two
│   a     1     3
│   b     2     4
│ 
│ julia> A[:a, "one"]
│ 1
│ ```
│ 
│ Subexpression:
│ 
│ parent(x)
│ 
│ Evaluated output:
│ 
│ 2×2 StaticArrays.MMatrix{2, 2, Int64, 4} with indices SOneTo(2)×SOneTo(2):
│  1  1
│  1  1
│ 
│ Expected output:
│ 
│ 2×2 StaticArrays.MArray{Tuple{2,2},Int64,2,4} with indices SOneTo(2)×SOneTo(2):
│  1  1
│  1  1
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 StaticArrays.MArray{Tuple{2,2},Int64,2,4} StaticArrays.MMatrix{2, 2, Int64, 4} with indices SOneTo(2)×SOneTo(2):
│     1  1
│     1  1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/NamedAxes/dimnames.jl:68-78
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> A = reshape(1:24, 2,3,4);
│ 
│ julia> named_axes(A)
│ (dim_1 = Base.OneTo(2), dim_2 = Base.OneTo(3), dim_3 = Base.OneTo(4))
│ 
│ julia> named_axes(NamedAxisArray{(:a, :b, :c)}(A))
│ (a = SimpleAxis(Base.OneTo(2)), b = SimpleAxis(Base.OneTo(3)), c = SimpleAxis(Base.OneTo(4)))
│ ```
│ 
│ Subexpression:
│ 
│ named_axes(NamedAxisArray{(:a, :b, :c)}(A))
│ 
│ Evaluated output:
│ 
│ (a = typename(SimpleAxis)(Base.OneTo(2)), b = typename(SimpleAxis)(Base.OneTo(3)), c = typename(SimpleAxis)(Base.OneTo(4)))
│ 
│ Expected output:
│ 
│ (a = SimpleAxis(Base.OneTo(2)), b = SimpleAxis(Base.OneTo(3)), c = SimpleAxis(Base.OneTo(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (a = SimpleAxis(Base.OneTo(2)), typename(SimpleAxis)(Base.OneTo(2)), b = SimpleAxis(Base.OneTo(3)), typename(SimpleAxis)(Base.OneTo(3)), c = SimpleAxis(Base.OneTo(4)))typename(SimpleAxis)(Base.OneTo(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/permute_axes.jl:10-18
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> AxisIndices.permute_axes(rand(2, 4, 6), (1, 3, 2))
│ (Base.OneTo(2), Base.OneTo(6), Base.OneTo(4))
│ 
│ julia> AxisIndices.permute_axes((Axis(1:2), Axis(1:4), Axis(1:6)), (1, 3, 2))
│ (Axis(1:2 => Base.OneTo(2)), Axis(1:6 => Base.OneTo(6)), Axis(1:4 => Base.OneTo(4)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.permute_axes((Axis(1:2), Axis(1:4), Axis(1:6)), (1, 3, 2))
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(1:2 => Base.OneTo(2)), typename(Axis)(1:6 => Base.OneTo(6)), typename(Axis)(1:4 => Base.OneTo(4)))
│ 
│ Expected output:
│ 
│ (Axis(1:2 => Base.OneTo(2)), Axis(1:6 => Base.OneTo(6)), Axis(1:4 => Base.OneTo(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(1:2 (typename(Axis)(1:2 => Base.OneTo(2)), Axis(1:6 typename(Axis)(1:6 => Base.OneTo(6)), Axis(1:4 typename(Axis)(1:4 => Base.OneTo(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/permute_axes.jl:33-47
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> length.(AxisIndices.permute_axes(rand(4))) == (1, 4)
│ true
│ 
│ julia> AxisIndices.permute_axes((Axis(1:4),))
│ (SimpleAxis(Base.OneTo(1)), Axis(1:4 => Base.OneTo(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(mrange(1, 4)),))
│ (SimpleAxis(OneToMRange(1)), Axis(UnitMRange(1:4) => OneToMRange(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(srange(1, 4)),))
│ (SimpleAxis(OneToSRange(1)), Axis(UnitSRange(1:4) => OneToSRange(4)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.permute_axes((Axis(1:4),))
│ 
│ Evaluated output:
│ 
│ (typename(SimpleAxis)(Base.OneTo(1)), typename(Axis)(1:4 => Base.OneTo(4)))
│ 
│ Expected output:
│ 
│ (SimpleAxis(Base.OneTo(1)), Axis(1:4 => Base.OneTo(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (SimpleAxis(Base.OneTo(1)), Axis(1:4 (typename(SimpleAxis)(Base.OneTo(1)), typename(Axis)(1:4 => Base.OneTo(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/permute_axes.jl:33-47
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> length.(AxisIndices.permute_axes(rand(4))) == (1, 4)
│ true
│ 
│ julia> AxisIndices.permute_axes((Axis(1:4),))
│ (SimpleAxis(Base.OneTo(1)), Axis(1:4 => Base.OneTo(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(mrange(1, 4)),))
│ (SimpleAxis(OneToMRange(1)), Axis(UnitMRange(1:4) => OneToMRange(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(srange(1, 4)),))
│ (SimpleAxis(OneToSRange(1)), Axis(UnitSRange(1:4) => OneToSRange(4)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.permute_axes((Axis(mrange(1, 4)),))
│ 
│ Evaluated output:
│ 
│ (typename(SimpleAxis)(OneToMRange(1)), typename(Axis)(UnitMRange(1:4) => OneToMRange(4)))
│ 
│ Expected output:
│ 
│ (SimpleAxis(OneToMRange(1)), Axis(UnitMRange(1:4) => OneToMRange(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (SimpleAxis(OneToMRange(1)), Axis(UnitMRange(1:4) (typename(SimpleAxis)(OneToMRange(1)), typename(Axis)(UnitMRange(1:4) => OneToMRange(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/permute_axes.jl:33-47
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> length.(AxisIndices.permute_axes(rand(4))) == (1, 4)
│ true
│ 
│ julia> AxisIndices.permute_axes((Axis(1:4),))
│ (SimpleAxis(Base.OneTo(1)), Axis(1:4 => Base.OneTo(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(mrange(1, 4)),))
│ (SimpleAxis(OneToMRange(1)), Axis(UnitMRange(1:4) => OneToMRange(4)))
│ 
│ julia> AxisIndices.permute_axes((Axis(srange(1, 4)),))
│ (SimpleAxis(OneToSRange(1)), Axis(UnitSRange(1:4) => OneToSRange(4)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.permute_axes((Axis(srange(1, 4)),))
│ 
│ Evaluated output:
│ 
│ (typename(SimpleAxis)(OneToSRange(1)), typename(Axis)(UnitSRange(1:4) => OneToSRange(4)))
│ 
│ Expected output:
│ 
│ (SimpleAxis(OneToSRange(1)), Axis(UnitSRange(1:4) => OneToSRange(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (SimpleAxis(OneToSRange(1)), Axis(UnitSRange(1:4) (typename(SimpleAxis)(OneToSRange(1)), typename(Axis)(UnitSRange(1:4) => OneToSRange(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/permute_axes.jl:70-78
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> AxisIndices.permute_axes(rand(4, 2))
│ (Base.OneTo(2), Base.OneTo(4))
│ 
│ julia> AxisIndices.permute_axes((Axis(1:4), Axis(1:2)))
│ (Axis(1:2 => Base.OneTo(2)), Axis(1:4 => Base.OneTo(4)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.permute_axes((Axis(1:4), Axis(1:2)))
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(1:2 => Base.OneTo(2)), typename(Axis)(1:4 => Base.OneTo(4)))
│ 
│ Expected output:
│ 
│ (Axis(1:2 => Base.OneTo(2)), Axis(1:4 => Base.OneTo(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(1:2 (typename(Axis)(1:2 => Base.OneTo(2)), Axis(1:4 typename(Axis)(1:4 => Base.OneTo(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:12-36
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> x = SimpleAxis(2:10)
│ SimpleAxis(2:10)
│ 
│ julia> x[2]
│ 2
│ 
│ julia> x[==(2)]
│ 2
│ 
│ julia> x[2] == x[==(2)]  # keys and values are same
│ true
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[1]
│ ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 => 2:10) at index [1]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ x = SimpleAxis(2:10)
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(2:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(2:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(2:10)typename(SimpleAxis)(2:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:12-36
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> x = SimpleAxis(2:10)
│ SimpleAxis(2:10)
│ 
│ julia> x[2]
│ 2
│ 
│ julia> x[==(2)]
│ 2
│ 
│ julia> x[2] == x[==(2)]  # keys and values are same
│ true
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[1]
│ ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 => 2:10) at index [1]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ x[>(2)]
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(3:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(3:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(3:10)typename(SimpleAxis)(3:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:12-36
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> x = SimpleAxis(2:10)
│ SimpleAxis(2:10)
│ 
│ julia> x[2]
│ 2
│ 
│ julia> x[==(2)]
│ 2
│ 
│ julia> x[2] == x[==(2)]  # keys and values are same
│ true
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[1]
│ ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 => 2:10) at index [1]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ x[>(2)]
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(3:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(3:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(3:10)typename(SimpleAxis)(3:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:12-36
│ 
│ ```jldoctest
│ julia> using AxisIndices, StaticRanges
│ 
│ julia> x = SimpleAxis(2:10)
│ SimpleAxis(2:10)
│ 
│ julia> x[2]
│ 2
│ 
│ julia> x[==(2)]
│ 2
│ 
│ julia> x[2] == x[==(2)]  # keys and values are same
│ true
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[>(2)]
│ SimpleAxis(3:10)
│ 
│ julia> x[1]
│ ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 => 2:10) at index [1]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ x[1]
│ 
│ Evaluated output:
│ 
│ ERROR: BoundsError: attempt to access 9-element typename(SimpleAxis)(2:10 => 2:10) at index [1]
│ Stacktrace:
│  [1] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:39 [inlined]
│  [2] to_index
│    @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│  [3] getindex(axis::SimpleAxis{Int64, UnitRange{Int64}}, i::Int64)
│    @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:118
│  [4] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 => 2:10) at index [1]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: BoundsError: attempt to access 9-element SimpleAxis(2:10 typename(SimpleAxis)(2:10 => 2:10) at index [1]
│    [...]Stacktrace:
│     [1] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:39 [inlined]
│     [2] to_index
│       @ ~/.julia/packages/AxisIndices/LEI3c/src/Interface/to_index.jl:18 [inlined]
│     [3] getindex(axis::SimpleAxis{Int64, UnitRange{Int64}}, i::Int64)
│       @ AxisIndices.Axes ~/.julia/packages/AxisIndices/LEI3c/src/Axes/indexing.jl:118
│     [4] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:77-82
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> SimpleAxis(1, 10)
│ SimpleAxis(1:10)
│ ```
│ 
│ Subexpression:
│ 
│ SimpleAxis(1, 10)
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(1:10)
│ 
│ Expected output:
│ 
│ SimpleAxis(1:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(1:10)typename(SimpleAxis)(1:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/SimpleAxis.jl:92-97
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> SimpleAxis(10)
│ SimpleAxis(Base.OneTo(10))
│ ```
│ 
│ Subexpression:
│ 
│ SimpleAxis(10)
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(Base.OneTo(10))
│ 
│ Expected output:
│ 
│ SimpleAxis(Base.OneTo(10))
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(Base.OneTo(10))typename(SimpleAxis)(Base.OneTo(10))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/AbstractAxis.jl:151-156
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> similar(Axis(1.0:10.0, 1:10), [:one, :two])
│ Axis([:one, :two] => 1:2)
│ ```
│ 
│ Subexpression:
│ 
│ similar(Axis(1.0:10.0, 1:10), [:one, :two])
│ 
│ Evaluated output:
│ 
│ typename(Axis)([:one, :two] => 1:2)
│ 
│ Expected output:
│ 
│ Axis([:one, :two] => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis([:one, typename(Axis)([:one, :two] => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/AbstractAxis.jl:216-225
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> similar(Axis(1.0:10.0, 1:10), [:one, :two], UInt(1):UInt(2))
│ Axis([:one, :two] => 0x0000000000000001:0x0000000000000002)
│ 
│ julia> similar(Axis(1.0:10.0, 1:10), [:one, :two], UInt(1):UInt(3))
│ ERROR: DimensionMismatch("keys and indices must have same length, got length(keys) = 2 and length(indices) = 3.")
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ similar(Axis(1.0:10.0, 1:10), [:one, :two], UInt(1):UInt(2))
│ 
│ Evaluated output:
│ 
│ typename(Axis)([:one, :two] => 0x0000000000000001:0x0000000000000002)
│ 
│ Expected output:
│ 
│ Axis([:one, :two] => 0x0000000000000001:0x0000000000000002)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis([:one, typename(Axis)([:one, :two] => 0x0000000000000001:0x0000000000000002)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/AbstractAxis.jl:250-255
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> similar(SimpleAxis(1:10), 1:3)
│ SimpleAxis(1:3)
│ ```
│ 
│ Subexpression:
│ 
│ similar(SimpleAxis(1:10), 1:3)
│ 
│ Evaluated output:
│ 
│ typename(SimpleAxis)(1:3)
│ 
│ Expected output:
│ 
│ SimpleAxis(1:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    SimpleAxis(1:3)typename(SimpleAxis)(1:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:12-23
│ 
│ ```jldoctest axis_examples
│ julia> using AxisIndices
│ 
│ julia> x = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> y = Axis(2.0:11.0)  # when only one argument is specified assume it's the keys
│ Axis(2.0:1.0:11.0 => Base.OneTo(10))
│ 
│ julia> z = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ ```
│ 
│ Subexpression:
│ 
│ x = Axis(2.0:11.0, 1:10)
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:11.0 => 1:10)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:11.0 typename(Axis)(2.0:1.0:11.0 => 1:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:12-23
│ 
│ ```jldoctest axis_examples
│ julia> using AxisIndices
│ 
│ julia> x = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> y = Axis(2.0:11.0)  # when only one argument is specified assume it's the keys
│ Axis(2.0:1.0:11.0 => Base.OneTo(10))
│ 
│ julia> z = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ ```
│ 
│ Subexpression:
│ 
│ y = Axis(2.0:11.0)  # when only one argument is specified assume it's the keys
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:11.0 => Base.OneTo(10))
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:11.0 => Base.OneTo(10))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:11.0 typename(Axis)(2.0:1.0:11.0 => Base.OneTo(10))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:12-23
│ 
│ ```jldoctest axis_examples
│ julia> using AxisIndices
│ 
│ julia> x = Axis(2.0:11.0, 1:10)
│ Axis(2.0:1.0:11.0 => 1:10)
│ 
│ julia> y = Axis(2.0:11.0)  # when only one argument is specified assume it's the keys
│ Axis(2.0:1.0:11.0 => Base.OneTo(10))
│ 
│ julia> z = Axis(1:10)
│ Axis(1:10 => Base.OneTo(10))
│ ```
│ 
│ Subexpression:
│ 
│ z = Axis(1:10)
│ 
│ Evaluated output:
│ 
│ typename(Axis)(1:10 => Base.OneTo(10))
│ 
│ Expected output:
│ 
│ Axis(1:10 => Base.OneTo(10))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(1:10 typename(Axis)(1:10 => Base.OneTo(10))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:26-44
│ 
│ ```jldoctest axis_examples
│ julia> x[2]
│ 2
│ 
│ julia> x[2] == y[2] == z[2]
│ true
│ 
│ julia> x[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[1:2]
│ Axis(1:2 => 1:2)
│ 
│ julia> x[1:2] == y[1:2] == z[1:2]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ x[1:2]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:3.0 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:3.0 typename(Axis)(2.0:1.0:3.0 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:26-44
│ 
│ ```jldoctest axis_examples
│ julia> x[2]
│ 2
│ 
│ julia> x[2] == y[2] == z[2]
│ true
│ 
│ julia> x[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[1:2]
│ Axis(1:2 => 1:2)
│ 
│ julia> x[1:2] == y[1:2] == z[1:2]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ y[1:2]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:3.0 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:3.0 typename(Axis)(2.0:1.0:3.0 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:26-44
│ 
│ ```jldoctest axis_examples
│ julia> x[2]
│ 2
│ 
│ julia> x[2] == y[2] == z[2]
│ true
│ 
│ julia> x[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[1:2]
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[1:2]
│ Axis(1:2 => 1:2)
│ 
│ julia> x[1:2] == y[1:2] == z[1:2]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ z[1:2]
│ 
│ Evaluated output:
│ 
│ typename(Axis)(1:2 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(1:2 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(1:2 typename(Axis)(1:2 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:48-68
│ 
│ ```jldoctest axis_examples
│ julia> x[==(3.0)]
│ 2
│ 
│ julia> x[==(3.0)] ==       # 3.0 is the 2nd key of x
│        y[isequal(3.0)] ==  # 3.0 is the 2nd key of y
│        z[==(2)]            # 2 is the 2nd key of z
│ true
│ 
│ julia> x[<(4.0)]  # all keys less than 4.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[<=(3.0)]  # all keys less than or equal to 3.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[<(3)]  # all keys less than or equal to 3 are 1:2 which correspond to values 1:2
│ Axis(1:2 => 1:2)
│ 
│ julia> x[<(4.0)] == y[<=(3.0)] == z[<(3)]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ x[<(4.0)]  # all keys less than 4.0 are 2.0:3.0 which correspond to values 1:2
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:3.0 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:3.0 typename(Axis)(2.0:1.0:3.0 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:48-68
│ 
│ ```jldoctest axis_examples
│ julia> x[==(3.0)]
│ 2
│ 
│ julia> x[==(3.0)] ==       # 3.0 is the 2nd key of x
│        y[isequal(3.0)] ==  # 3.0 is the 2nd key of y
│        z[==(2)]            # 2 is the 2nd key of z
│ true
│ 
│ julia> x[<(4.0)]  # all keys less than 4.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[<=(3.0)]  # all keys less than or equal to 3.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[<(3)]  # all keys less than or equal to 3 are 1:2 which correspond to values 1:2
│ Axis(1:2 => 1:2)
│ 
│ julia> x[<(4.0)] == y[<=(3.0)] == z[<(3)]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ y[<=(3.0)]  # all keys less than or equal to 3.0 are 2.0:3.0 which correspond to values 1:2
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:1.0:3.0 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:1.0:3.0 typename(Axis)(2.0:1.0:3.0 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Axes/Axis.jl:48-68
│ 
│ ```jldoctest axis_examples
│ julia> x[==(3.0)]
│ 2
│ 
│ julia> x[==(3.0)] ==       # 3.0 is the 2nd key of x
│        y[isequal(3.0)] ==  # 3.0 is the 2nd key of y
│        z[==(2)]            # 2 is the 2nd key of z
│ true
│ 
│ julia> x[<(4.0)]  # all keys less than 4.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> y[<=(3.0)]  # all keys less than or equal to 3.0 are 2.0:3.0 which correspond to values 1:2
│ Axis(2.0:1.0:3.0 => 1:2)
│ 
│ julia> z[<(3)]  # all keys less than or equal to 3 are 1:2 which correspond to values 1:2
│ Axis(1:2 => 1:2)
│ 
│ julia> x[<(4.0)] == y[<=(3.0)] == z[<(3)]
│ true
│ ```
│ 
│ Subexpression:
│ 
│ z[<(3)]  # all keys less than or equal to 3 are 1:2 which correspond to values 1:2
│ 
│ Evaluated output:
│ 
│ typename(Axis)(1:2 => 1:2)
│ 
│ Expected output:
│ 
│ Axis(1:2 => 1:2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(1:2 typename(Axis)(1:2 => 1:2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/CenteredAxis.jl:14-29
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> axis = CenteredAxis(1:10)
│ CenteredAxis(-5:4 => 1:10)
│ 
│ julia> axis[10]  # the indexing goes straight to keys and is centered around zero
│ ERROR: BoundsError: attempt to access 10-element CenteredAxis(-5:4 => 1:10) at index [10]
│ [...]
│ 
│ julia> axis[-5]
│ -5
│ 
│ julia> AxisIndices.to_index(axis, -5)
│ 1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axis = CenteredAxis(1:10)
│ 
│ Evaluated output:
│ 
│ typename(CenteredAxis)(-5:4 => 1:10)
│ 
│ Expected output:
│ 
│ CenteredAxis(-5:4 => 1:10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    CenteredAxis(-5:4 typename(CenteredAxis)(-5:4 => 1:10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/CenteredAxis.jl:14-29
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> axis = CenteredAxis(1:10)
│ CenteredAxis(-5:4 => 1:10)
│ 
│ julia> axis[10]  # the indexing goes straight to keys and is centered around zero
│ ERROR: BoundsError: attempt to access 10-element CenteredAxis(-5:4 => 1:10) at index [10]
│ [...]
│ 
│ julia> axis[-5]
│ -5
│ 
│ julia> AxisIndices.to_index(axis, -5)
│ 1
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axis[10]  # the indexing goes straight to keys and is centered around zero
│ 
│ Evaluated output:
│ 
│ ERROR: BoundsError: attempt to access 10-element typename(CenteredAxis)(-5:4 => 1:10) at index [10]
│ Stacktrace:
│  [1] getindex(axis::CenteredAxis{Int64, UnitRange{Int64}, UnitRange{Int64}}, i::Int64)
│    @ AxisIndices.OffsetAxes ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/AbstractOffsetAxis.jl:29
│  [2] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ERROR: BoundsError: attempt to access 10-element CenteredAxis(-5:4 => 1:10) at index [10]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: BoundsError: attempt to access 10-element CenteredAxis(-5:4 typename(CenteredAxis)(-5:4 => 1:10) at index [10]
│    [...]Stacktrace:
│     [1] getindex(axis::CenteredAxis{Int64, UnitRange{Int64}, UnitRange{Int64}}, i::Int64)
│       @ AxisIndices.OffsetAxes ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/AbstractOffsetAxis.jl:29
│     [2] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/OffsetAxis.jl:26-31
│ 
│ ```jldoctest offset_axis_examples
│ julia> using AxisIndices
│ 
│ julia> axis = OffsetAxis(-2, 1:3)
│ OffsetAxis(-1:1 => 1:3)
│ ```
│ 
│ Subexpression:
│ 
│ axis = OffsetAxis(-2, 1:3)
│ 
│ Evaluated output:
│ 
│ typename(OffsetAxis)(-1:1 => 1:3)
│ 
│ Expected output:
│ 
│ OffsetAxis(-1:1 => 1:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    OffsetAxis(-1:1 typename(OffsetAxis)(-1:1 => 1:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/OffsetAxis.jl:55-59
│ 
│ ```jldoctest offset_axis_examples
│ julia> axis[3]
│ ERROR: BoundsError: attempt to access 3-element OffsetAxis(-1:1 => 1:3) at index [3]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ axis[3]
│ 
│ Evaluated output:
│ 
│ ERROR: BoundsError: attempt to access 3-element typename(OffsetAxis)(-1:1 => 1:3) at index [3]
│ Stacktrace:
│  [1] getindex(axis::OffsetAxis{Int64, UnitRange{Int64}, UnitRange{Int64}}, i::Int64)
│    @ AxisIndices.OffsetAxes ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/AbstractOffsetAxis.jl:29
│  [2] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ ERROR: BoundsError: attempt to access 3-element OffsetAxis(-1:1 => 1:3) at index [3]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: BoundsError: attempt to access 3-element OffsetAxis(-1:1 typename(OffsetAxis)(-1:1 => 1:3) at index [3]
│    [...]Stacktrace:
│     [1] getindex(axis::OffsetAxis{Int64, UnitRange{Int64}, UnitRange{Int64}}, i::Int64)
│       @ AxisIndices.OffsetAxes ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/AbstractOffsetAxis.jl:29
│     [2] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/OffsetAxes/OffsetAxis.jl:62-65
│ 
│ ```jldoctest offset_axis_examples
│ julia> axis[0:1]  # offset of -2 still applies
│ OffsetAxis(0:1 => 2:3)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axis[0:1]  # offset of -2 still applies
│ 
│ Evaluated output:
│ 
│ typename(OffsetAxis)(0:1 => 2:3)
│ 
│ Expected output:
│ 
│ OffsetAxis(0:1 => 2:3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    OffsetAxis(0:1 typename(OffsetAxis)(0:1 => 2:3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/factorizations.jl:232-250
│ 
│ ```jldoctest
│ julia> using AxisIndices, LinearAlgebra
│ 
│ julia> m = AxisArray([1.0 2; 3 4], (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2))));
│ 
│ julia> F = svd(m);
│ 
│ julia> axes(F.U)
│ (Axis(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.V)
│ (Axis(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.Vt)
│ (SimpleAxis(Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ julia> axes(F.U * Diagonal(F.S) * F.Vt)
│ (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axes(F.U)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(2:3 => Base.OneTo(2)), typename(SimpleAxis)(Base.OneTo(2)))
│ 
│ Expected output:
│ 
│ (Axis(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(2:3 (typename(Axis)(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))typename(SimpleAxis)(Base.OneTo(2)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/factorizations.jl:232-250
│ 
│ ```jldoctest
│ julia> using AxisIndices, LinearAlgebra
│ 
│ julia> m = AxisArray([1.0 2; 3 4], (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2))));
│ 
│ julia> F = svd(m);
│ 
│ julia> axes(F.U)
│ (Axis(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.V)
│ (Axis(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.Vt)
│ (SimpleAxis(Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ julia> axes(F.U * Diagonal(F.S) * F.Vt)
│ (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axes(F.V)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(3:4 => Base.OneTo(2)), typename(SimpleAxis)(Base.OneTo(2)))
│ 
│ Expected output:
│ 
│ (Axis(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(3:4 (typename(Axis)(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))typename(SimpleAxis)(Base.OneTo(2)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/factorizations.jl:232-250
│ 
│ ```jldoctest
│ julia> using AxisIndices, LinearAlgebra
│ 
│ julia> m = AxisArray([1.0 2; 3 4], (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2))));
│ 
│ julia> F = svd(m);
│ 
│ julia> axes(F.U)
│ (Axis(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.V)
│ (Axis(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.Vt)
│ (SimpleAxis(Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ julia> axes(F.U * Diagonal(F.S) * F.Vt)
│ (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axes(F.Vt)
│ 
│ Evaluated output:
│ 
│ (typename(SimpleAxis)(Base.OneTo(2)), typename(Axis)(3:4 => Base.OneTo(2)))
│ 
│ Expected output:
│ 
│ (SimpleAxis(Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (SimpleAxis(Base.OneTo(2)), Axis(3:4 (typename(SimpleAxis)(Base.OneTo(2)), typename(Axis)(3:4 => Base.OneTo(2)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/factorizations.jl:232-250
│ 
│ ```jldoctest
│ julia> using AxisIndices, LinearAlgebra
│ 
│ julia> m = AxisArray([1.0 2; 3 4], (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2))));
│ 
│ julia> F = svd(m);
│ 
│ julia> axes(F.U)
│ (Axis(2:3 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.V)
│ (Axis(3:4 => Base.OneTo(2)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(F.Vt)
│ (SimpleAxis(Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ julia> axes(F.U * Diagonal(F.S) * F.Vt)
│ (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ axes(F.U * Diagonal(F.S) * F.Vt)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(2:3 => Base.OneTo(2)), typename(Axis)(3:4 => Base.OneTo(2)))
│ 
│ Expected output:
│ 
│ (Axis(2:3 => Base.OneTo(2)), Axis(3:4 => Base.OneTo(2)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(2:3 (typename(Axis)(2:3 => Base.OneTo(2)), Axis(3:4 typename(Axis)(3:4 => Base.OneTo(2)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/AbstractAxisArray.jl:233-243
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> A = reshape(AxisArray(Vector(1:8), [:a, :b, :c, :d, :e, :f, :g, :h]), 4, 2);
│ 
│ julia> axes(A)
│ (Axis([:a, :b, :c, :d] => Base.OneTo(4)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(reshape(A, 2, :))
│ (Axis([:a, :b] => Base.OneTo(2)), SimpleAxis(Base.OneTo(4)))
│ ```
│ 
│ Subexpression:
│ 
│ axes(A)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)([:a, :b, :c, :d] => Base.OneTo(4)), typename(SimpleAxis)(Base.OneTo(2)))
│ 
│ Expected output:
│ 
│ (Axis([:a, :b, :c, :d] => Base.OneTo(4)), SimpleAxis(Base.OneTo(2)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis([:a, (typename(Axis)([:a, :b, :c, :d] => Base.OneTo(4)), SimpleAxis(Base.OneTo(2)))typename(SimpleAxis)(Base.OneTo(2)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Arrays/AbstractAxisArray.jl:233-243
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> A = reshape(AxisArray(Vector(1:8), [:a, :b, :c, :d, :e, :f, :g, :h]), 4, 2);
│ 
│ julia> axes(A)
│ (Axis([:a, :b, :c, :d] => Base.OneTo(4)), SimpleAxis(Base.OneTo(2)))
│ 
│ julia> axes(reshape(A, 2, :))
│ (Axis([:a, :b] => Base.OneTo(2)), SimpleAxis(Base.OneTo(4)))
│ ```
│ 
│ Subexpression:
│ 
│ axes(reshape(A, 2, :))
│ 
│ Evaluated output:
│ 
│ (typename(Axis)([:a, :b] => Base.OneTo(2)), typename(SimpleAxis)(Base.OneTo(4)))
│ 
│ Expected output:
│ 
│ (Axis([:a, :b] => Base.OneTo(2)), SimpleAxis(Base.OneTo(4)))
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis([:a, (typename(Axis)([:a, :b] => Base.OneTo(2)), SimpleAxis(Base.OneTo(4)))typename(SimpleAxis)(Base.OneTo(4)))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/cols.jl:8-13
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> col_axis(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ Axis([:one, :two] => Base.OneTo(2))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ col_axis(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ typename(Axis)([:one, :two] => Base.OneTo(2))
│ 
│ Expected output:
│ 
│ Axis([:one, :two] => Base.OneTo(2))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis([:one, typename(Axis)([:one, :two] => Base.OneTo(2))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/cols.jl:24-29
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> col_type(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ Axis{Symbol,Int64,Array{Symbol,1},Base.OneTo{Int64}}
│ ```
│ 
│ Subexpression:
│ 
│ col_type(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ Axis{Symbol, Int64, Vector{Symbol}, Base.OneTo{Int64}}
│ 
│ Expected output:
│ 
│ Axis{Symbol,Int64,Array{Symbol,1},Base.OneTo{Int64}}
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis{Symbol,Int64,Array{Symbol,1},Base.OneTo{Int64}}Axis{Symbol, Int64, Vector{Symbol}, Base.OneTo{Int64}}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/keys.jl:67-72
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> keys_type(AxisArray([1], ["a"]), 1)
│ Array{String,1}
│ ```
│ 
│ Subexpression:
│ 
│ keys_type(AxisArray([1], ["a"]), 1)
│ 
│ Evaluated output:
│ 
│ Vector{String} = Array{String, 1}
│ 
│ Expected output:
│ 
│ Array{String,1}
│ 
│   diff =
│    Warning: Diff output requires color.
│    Array{String,1}Vector{String} = Array{String, 1}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:9-17
│ 
│ ```jldoctest axis_iterator_examples
│ julia> using AxisIndices
│ 
│ julia> axis = Axis(range(2.0, step=3.0, length=20))
│ Axis(2.0:3.0:59.0 => Base.OneTo(20))
│ 
│ julia> AxisIterator(axis, 3)
│ AxisIterator((1:3):3:(16:18))
│ ```
│ 
│ Subexpression:
│ 
│ axis = Axis(range(2.0, step=3.0, length=20))
│ 
│ Evaluated output:
│ 
│ typename(Axis)(2.0:3.0:59.0 => Base.OneTo(20))
│ 
│ Expected output:
│ 
│ Axis(2.0:3.0:59.0 => Base.OneTo(20))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(2.0:3.0:59.0 typename(Axis)(2.0:3.0:59.0 => Base.OneTo(20))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:22-40
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3))
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ julia> collect(AxisIterator(axis, 9.0))
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 3))
│ 
│ Evaluated output:
│ 
│ 6-element Vector{Any}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ Expected output:
│ 
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│   diff =
│    Warning: Diff output requires color.
│    6-element Array{Any,1}:
│     Vector{Any}:
│     1:3
│     4:6
│     7:9
│     10:12
│     13:15
│     16:18
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:22-40
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3))
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ julia> collect(AxisIterator(axis, 9.0))
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 9.0))
│ 
│ Evaluated output:
│ 
│ 6-element Vector{Any}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│ Expected output:
│ 
│ 6-element Array{Any,1}:
│  1:3
│  4:6
│  7:9
│  10:12
│  13:15
│  16:18
│ 
│   diff =
│    Warning: Diff output requires color.
│    6-element Array{Any,1}:
│     Vector{Any}:
│     1:3
│     4:6
│     7:9
│     10:12
│     13:15
│     16:18
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:44-62
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1))
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0))
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 3, first_pad=1))
│ 
│ Evaluated output:
│ 
│ 6-element Vector{Any}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ Expected output:
│ 
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│   diff =
│    Warning: Diff output requires color.
│    6-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     5:7
│     8:10
│     11:13
│     14:16
│     17:19
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:44-62
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1))
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0))
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 9.0, first_pad=3.0))
│ 
│ Evaluated output:
│ 
│ 6-element Vector{Any}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│ Expected output:
│ 
│ 6-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│  17:19
│ 
│   diff =
│    Warning: Diff output requires color.
│    6-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     5:7
│     8:10
│     11:13
│     14:16
│     17:19
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:65-81
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2))
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0))
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 3, first_pad=1, last_pad=2))
│ 
│ Evaluated output:
│ 
│ 5-element Vector{Any}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ Expected output:
│ 
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│   diff =
│    Warning: Diff output requires color.
│    5-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     5:7
│     8:10
│     11:13
│     14:16
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:65-81
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2))
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0))
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0))
│ 
│ Evaluated output:
│ 
│ 5-element Vector{Any}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│ Expected output:
│ 
│ 5-element Array{Any,1}:
│  2:4
│  5:7
│  8:10
│  11:13
│  14:16
│ 
│   diff =
│    Warning: Diff output requires color.
│    5-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     5:7
│     8:10
│     11:13
│     14:16
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:86-102
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, dilation=2))
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, dilation=6.0))
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, dilation=2))
│ 
│ Evaluated output:
│ 
│ 5-element Vector{Any}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ Expected output:
│ 
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│   diff =
│    Warning: Diff output requires color.
│    5-element Array{Any,1}:
│     Vector{Any}:
│     2:2:4
│     5:2:7
│     8:2:10
│     11:2:13
│     14:2:16
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:86-102
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, dilation=2))
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, dilation=6.0))
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, dilation=6.0))
│ 
│ Evaluated output:
│ 
│ 5-element Vector{Any}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│ Expected output:
│ 
│ 5-element Array{Any,1}:
│  2:2:4
│  5:2:7
│  8:2:10
│  11:2:13
│  14:2:16
│ 
│   diff =
│    Warning: Diff output requires color.
│    5-element Array{Any,1}:
│     Vector{Any}:
│     2:2:4
│     5:2:7
│     8:2:10
│     11:2:13
│     14:2:16
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:106-118
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, stride=2))
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, stride=6.0))
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, stride=2))
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Any}:
│  2:4
│  7:9
│  12:14
│ 
│ Expected output:
│ 
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     7:9
│     12:14
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/iterators.jl:106-118
│ 
│ ```jldoctest axis_iterator_examples
│ julia> collect(AxisIterator(axis, 3, first_pad=1, last_pad=2, stride=2))
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│ julia> collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, stride=6.0))
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│ ```
│ 
│ Subexpression:
│ 
│ collect(AxisIterator(axis, 9.0, first_pad=3.0, last_pad=6.0, stride=6.0))
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Any}:
│  2:4
│  7:9
│  12:14
│ 
│ Expected output:
│ 
│ 3-element Array{Any,1}:
│  2:4
│  7:9
│  12:14
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Any,1}:
│     Vector{Any}:
│     2:4
│     7:9
│     12:14
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/cols.jl:40-47
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> col_keys(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 2-element Array{Symbol,1}:
│  :one
│  :two
│ 
│ ```
│ 
│ Subexpression:
│ 
│ col_keys(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{Symbol}:
│  :one
│  :two
│ 
│ Expected output:
│ 
│ 2-element Array{Symbol,1}:
│  :one
│  :two
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{Symbol,1}:
│     Vector{Symbol}:
│     :one
│     :two
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/axes.jl:22-35
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> axs = (Axis(1:5), Axis(1:10));
│ 
│ julia> AxisIndices.drop_axes(axs, 1)
│ (Axis(1:10 => Base.OneTo(10)),)
│ 
│ julia> AxisIndices.drop_axes(axs, 2)
│ (Axis(1:5 => Base.OneTo(5)),)
│ 
│ julia> AxisIndices.drop_axes(rand(2, 4), 2)
│ (Base.OneTo(2),)
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.drop_axes(axs, 1)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(1:10 => Base.OneTo(10)),)
│ 
│ Expected output:
│ 
│ (Axis(1:10 => Base.OneTo(10)),)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(1:10 (typename(Axis)(1:10 => Base.OneTo(10)),)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/axes.jl:22-35
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> axs = (Axis(1:5), Axis(1:10));
│ 
│ julia> AxisIndices.drop_axes(axs, 1)
│ (Axis(1:10 => Base.OneTo(10)),)
│ 
│ julia> AxisIndices.drop_axes(axs, 2)
│ (Axis(1:5 => Base.OneTo(5)),)
│ 
│ julia> AxisIndices.drop_axes(rand(2, 4), 2)
│ (Base.OneTo(2),)
│ ```
│ 
│ Subexpression:
│ 
│ AxisIndices.drop_axes(axs, 2)
│ 
│ Evaluated output:
│ 
│ (typename(Axis)(1:5 => Base.OneTo(5)),)
│ 
│ Expected output:
│ 
│ (Axis(1:5 => Base.OneTo(5)),)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (Axis(1:5 (typename(Axis)(1:5 => Base.OneTo(5)),)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/rows.jl:42-47
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> row_type(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ Axis{String,Int64,Array{String,1},Base.OneTo{Int64}}
│ ```
│ 
│ Subexpression:
│ 
│ row_type(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ Axis{String, Int64, Vector{String}, Base.OneTo{Int64}}
│ 
│ Expected output:
│ 
│ Axis{String,Int64,Array{String,1},Base.OneTo{Int64}}
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis{String,Int64,Array{String,1},Base.OneTo{Int64}}Axis{String, Int64, Vector{String}, Base.OneTo{Int64}}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/rows.jl:24-31
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> row_keys(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 2-element Array{String,1}:
│  "a"
│  "b"
│ 
│ ```
│ 
│ Subexpression:
│ 
│ row_keys(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ 2-element Vector{String}:
│  "a"
│  "b"
│ 
│ Expected output:
│ 
│ 2-element Array{String,1}:
│  "a"
│  "b"
│ 
│   diff =
│    Warning: Diff output requires color.
│    2-element Array{String,1}:
│     Vector{String}:
│     "a"
│     "b"
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Interface/rows.jl:8-13
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> row_axis(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ Axis(["a", "b"] => Base.OneTo(2))
│ 
│ ```
│ 
│ Subexpression:
│ 
│ row_axis(AxisArray(ones(2,2), ["a", "b"], [:one, :two]))
│ 
│ Evaluated output:
│ 
│ typename(Axis)(["a", "b"] => Base.OneTo(2))
│ 
│ Expected output:
│ 
│ Axis(["a", "b"] => Base.OneTo(2))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Axis(["a", typename(Axis)(["a", "b"] => Base.OneTo(2))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/NamedMetaLinearAxes.jl:8-23
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> x = NamedMetaLinearAxes{(:dimx,:dimy)}(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 2×2 NamedMetaLinearAxes{Int64,2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│ julia> x == NamedMetaLinearAxes((dimx = [:a, :b], dimy = ["one", "two"]); metadata="some metadata")
│ true
│ 
│ ```
│ 
│ Subexpression:
│ 
│ x = NamedMetaLinearAxes{(:dimx,:dimy)}(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 
│ Evaluated output:
│ 
│ 2×2 NamedMetaLinearAxes{Int64,2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: 13-codeunit String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│ Expected output:
│ 
│ 2×2 NamedMetaLinearAxes{Int64,2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 NamedMetaLinearAxes{Int64,2}
│     • dimx - [:a, :b]
│     • dimy - ["one", "two"]
│    metadata: 13-codeunit String
│     • some metadata
│          one   two
│      a     1     3
│      b     2     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/MetadataArray.jl:9-26
│ 
│ ```jldoctest metadataarray
│ julia> using AxisIndices
│ 
│ julia> v = ["John", "John", "Jane", "Louise"];
│ 
│ julia> s = MetadataArray(v, Dict("John" => "Treatment", "Louise" => "Placebo", "Jane" => "Placebo"))
│ 4-element MetadataArray{String,1,Dict{String,String},Array{String,1}}:
│  "John"
│  "John"
│  "Jane"
│  "Louise"
│ 
│ julia> metadata(s)
│ Dict{String,String} with 3 entries:
│   "John"   => "Treatment"
│   "Jane"   => "Placebo"
│   "Louise" => "Placebo"
│ ```
│ 
│ Subexpression:
│ 
│ s = MetadataArray(v, Dict("John" => "Treatment", "Louise" => "Placebo", "Jane" => "Placebo"))
│ 
│ Evaluated output:
│ 
│ 4-element MetadataArray{String, 1, Dict{String, String}, Vector{String}}:
│  "John"
│  "John"
│  "Jane"
│  "Louise"
│ 
│ Expected output:
│ 
│ 4-element MetadataArray{String,1,Dict{String,String},Array{String,1}}:
│  "John"
│  "John"
│  "Jane"
│  "Louise"
│ 
│   diff =
│    Warning: Diff output requires color.
│    4-element MetadataArray{String,1,Dict{String,String},Array{String,1}}:
│     MetadataArray{String, 1, Dict{String, String}, Vector{String}}:
│     "John"
│     "John"
│     "Jane"
│     "Louise"
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/MetadataArray.jl:9-26
│ 
│ ```jldoctest metadataarray
│ julia> using AxisIndices
│ 
│ julia> v = ["John", "John", "Jane", "Louise"];
│ 
│ julia> s = MetadataArray(v, Dict("John" => "Treatment", "Louise" => "Placebo", "Jane" => "Placebo"))
│ 4-element MetadataArray{String,1,Dict{String,String},Array{String,1}}:
│  "John"
│  "John"
│  "Jane"
│  "Louise"
│ 
│ julia> metadata(s)
│ Dict{String,String} with 3 entries:
│   "John"   => "Treatment"
│   "Jane"   => "Placebo"
│   "Louise" => "Placebo"
│ ```
│ 
│ Subexpression:
│ 
│ metadata(s)
│ 
│ Evaluated output:
│ 
│ Dict{String, String} with 3 entries:
│   "John"   => "Treatment"
│   "Jane"   => "Placebo"
│   "Louise" => "Placebo"
│ 
│ Expected output:
│ 
│ Dict{String,String} with 3 entries:
│   "John"   => "Treatment"
│   "Jane"   => "Placebo"
│   "Louise" => "Placebo"
│ 
│   diff =
│    Warning: Diff output requires color.
│    Dict{String,String} Dict{String, String} with 3 entries:
│      "John"   => "Treatment"
│      "Jane"   => "Placebo"
│      "Louise" => "Placebo"
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/NamedMetaCartesianAxes.jl:9-24
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> x = NamedMetaCartesianAxes{(:dimx,:dimy)}(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 2×2 NamedMetaCartesianAxes{CartesianIndex{2},2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│ julia> x == NamedMetaCartesianAxes((dimx = [:a, :b], dimy = ["one", "two"]); metadata="some metadata")
│ true
│ 
│ ```
│ 
│ Subexpression:
│ 
│ x = NamedMetaCartesianAxes{(:dimx,:dimy)}(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 
│ Evaluated output:
│ 
│ 2×2 NamedMetaCartesianAxes{CartesianIndex{2},2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: 13-codeunit String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│ Expected output:
│ 
│ 2×2 NamedMetaCartesianAxes{CartesianIndex{2},2}
│  • dimx - [:a, :b]
│  • dimy - ["one", "two"]
│ metadata: String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 NamedMetaCartesianAxes{CartesianIndex{2},2}
│     • dimx - [:a, :b]
│     • dimy - ["one", "two"]
│    metadata: 13-codeunit String
│     • some metadata
│                           one                    two
│      a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│      b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/MetaAxisArray.jl:8-21
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> MetaAxisArray([1 2; 3 4], (["a", "b"], [:one, :two]), metadata = "some metadata")
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     2
│   b     3     4
│ 
│ 
│ ```
│ 
│ Subexpression:
│ 
│ MetaAxisArray([1 2; 3 4], (["a", "b"], [:one, :two]), metadata = "some metadata")
│ 
│ Evaluated output:
│ 
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: 13-codeunit String
│  • some metadata
│       one   two
│   a     1     2
│   b     3     4
│ 
│ Expected output:
│ 
│ 2×2 MetaAxisArray{Int64,2}
│  • dim_1 - ["a", "b"]
│  • dim_2 - [:one, :two]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     2
│   b     3     4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 MetaAxisArray{Int64,2}
│     • dim_1 - ["a", "b"]
│     • dim_2 - [:one, :two]
│    metadata: 13-codeunit String
│     • some metadata
│          one   two
│      a     1     2
│      b     3     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/MetaLinearAxes.jl:9-21
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> MetaLinearAxes(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 2×2 MetaLinearAxes{Int64,2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│ ```
│ 
│ Subexpression:
│ 
│ MetaLinearAxes(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 
│ Evaluated output:
│ 
│ 2×2 MetaLinearAxes{Int64,2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: 13-codeunit String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│ Expected output:
│ 
│ 2×2 MetaLinearAxes{Int64,2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: String
│  • some metadata
│       one   two
│   a     1     3
│   b     2     4
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 MetaLinearAxes{Int64,2}
│     • dim_1 - [:a, :b]
│     • dim_2 - ["one", "two"]
│    metadata: 13-codeunit String
│     • some metadata
│          one   two
│      a     1     3
│      b     2     4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/AxisIndices/LEI3c/src/Metadata/MetaCartesianAxes.jl:9-21
│ 
│ ```jldoctest
│ julia> using AxisIndices
│ 
│ julia> MetaCartesianAxes(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 2×2 MetaCartesianAxes{CartesianIndex{2},2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ MetaCartesianAxes(([:a, :b], ["one", "two"]); metadata="some metadata")
│ 
│ Evaluated output:
│ 
│ 2×2 MetaCartesianAxes{CartesianIndex{2},2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: 13-codeunit String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│ Expected output:
│ 
│ 2×2 MetaCartesianAxes{CartesianIndex{2},2}
│  • dim_1 - [:a, :b]
│  • dim_2 - ["one", "two"]
│ metadata: String
│  • some metadata
│                        one                    two
│   a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│   b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 MetaCartesianAxes{CartesianIndex{2},2}
│     • dim_1 - [:a, :b]
│     • dim_2 - ["one", "two"]
│    metadata: 13-codeunit String
│     • some metadata
│                           one                    two
│      a   CartesianIndex(1, 1)   CartesianIndex(1, 2)
│      b   CartesianIndex(2, 1)   CartesianIndex(2, 2)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/AxisIndices/LEI3c/test/runtests.jl:165
│     [14] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [15] top-level scope
│        @ ~/.julia/packages/AxisIndices/LEI3c/test/runtests.jl:165
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: AxisIndices: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:           | Fail  Total
docs                    |    1      1
  Doctests: AxisIndices |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AxisIndices/LEI3c/test/runtests.jl:163
ERROR: Package AxisIndices errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
