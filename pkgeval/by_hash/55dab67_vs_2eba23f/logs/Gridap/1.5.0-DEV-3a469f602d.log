Julia Version 1.5.0-DEV.278
Commit 3a469f602d (2020-02-17 02:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed RecipesBase ────────── v0.7.0
  Installed Requires ───────────── v1.0.1
  Installed CodecZlib ──────────── v0.6.0
  Installed DiffResults ────────── v1.0.2
  Installed CommonSubexpressions ─ v0.2.0
  Installed OrderedCollections ─── v1.1.0
  Installed SpecialFunctions ───── v0.10.0
  Installed Gridap ─────────────── v0.7.0
  Installed ForwardDiff ────────── v0.10.9
  Installed Parameters ─────────── v0.12.0
  Installed DocStringExtensions ── v0.8.1
  Installed Reexport ───────────── v0.2.0
  Installed Distances ──────────── v0.8.2
  Installed OpenSpecFun_jll ────── v0.5.3+1
  Installed WriteVTK ───────────── v1.4.0
  Installed NLsolve ────────────── v4.3.0
  Installed LightXML ───────────── v0.8.1
  Installed NaNMath ────────────── v0.3.3
  Installed FillArrays ─────────── v0.8.4
  Installed DiffRules ──────────── v1.0.1
  Installed QuadGK ─────────────── v2.3.1
  Installed FiniteDiff ─────────── v2.2.0
  Installed Parsers ────────────── v0.3.11
  Installed TranscodingStreams ─── v0.9.5
  Installed JSON ───────────────── v0.21.0
  Installed ArrayInterface ─────── v2.4.1
  Installed NLSolversBase ──────── v7.6.1
  Installed Polynomials ────────── v0.6.0
  Installed Combinatorics ──────── v1.0.0
  Installed LineSearches ───────── v7.0.1
  Installed BSON ───────────────── v0.2.5
  Installed JLD2 ───────────────── v0.1.11
  Installed FastGaussQuadrature ── v0.4.2
  Installed FileIO ─────────────── v1.2.2
  Installed BinaryProvider ─────── v0.5.8
  Installed DataStructures ─────── v0.17.9
  Installed StaticArrays ───────── v0.12.1
#=#=#                                                                         ##################################################################        92.1%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [56d4f2e9] + Gridap v0.7.0
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.4.1
  [fbb218c0] + BSON v0.2.5
  [b99e7846] + BinaryProvider v0.5.8
  [944b1d66] + CodecZlib v0.6.0
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [864edb3b] + DataStructures v0.17.9
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.2.2
  [1a297f60] + FillArrays v0.8.4
  [6a86dc24] + FiniteDiff v2.2.0
  [f6369f11] + ForwardDiff v0.10.9
  [56d4f2e9] + Gridap v0.7.0
  [033835bb] + JLD2 v0.1.11
  [682c06a0] + JSON v0.21.0
  [9c8b4983] + LightXML v0.8.1
  [d3d80556] + LineSearches v7.0.1
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.3.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [f27b6e38] + Polynomials v0.6.0
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [3bb67fe8] + TranscodingStreams v0.9.5
  [64499a7a] + WriteVTK v1.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
Status `/tmp/jl_WfXTYs/Manifest.toml`
  [4fba245c] ArrayInterface v2.4.1
  [fbb218c0] BSON v0.2.5
  [b99e7846] BinaryProvider v0.5.8
  [944b1d66] CodecZlib v0.6.0
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [864edb3b] DataStructures v0.17.9
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.2.2
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [56d4f2e9] Gridap v0.7.0
  [033835bb] JLD2 v0.1.11
  [682c06a0] JSON v0.21.0
  [9c8b4983] LightXML v0.8.1
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [64499a7a] WriteVTK v1.4.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Helpers       |   13     13
192.201498 seconds (11.11 M allocations: 598.155 MiB, 0.40% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.127943 seconds (2.21 M allocations: 125.607 MiB, 1.04% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 28.995285 seconds (29.04 M allocations: 1.391 GiB, 2.34% gc time)
Test Summary: | Pass  Total
Algebra       |  679    679
 69.601492 seconds (86.38 M allocations: 4.085 GiB, 3.76% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 13.886546 seconds (13.52 M allocations: 693.613 MiB, 2.47% gc time)
Test Summary: | Pass  Total
Arrays        |  278    278
 21.155214 seconds (24.35 M allocations: 1.184 GiB, 2.46% gc time)
Test Summary: | Pass  Total
Fields        |  580    580
 42.532779 seconds (51.28 M allocations: 2.499 GiB, 3.64% gc time)
Test Summary: | Pass  Total
Polynomials   |  256    256
 15.965879 seconds (21.60 M allocations: 1.078 GiB, 3.43% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 11.416467 seconds (30.38 M allocations: 1.363 GiB, 10.87% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  893    893
 49.427649 seconds (73.57 M allocations: 3.634 GiB, 3.61% gc time)
Test Summary: | Pass  Total
Geometry      | 1600   1600
 78.958703 seconds (119.69 M allocations: 6.059 GiB, 3.60% gc time)
Test Summary: | Pass  Total
FESpaces      |  470    470
128.194004 seconds (186.47 M allocations: 9.397 GiB, 3.51% gc time)
Test Summary: | Pass  Total
MultiField    |  110    110
 42.297908 seconds (54.55 M allocations: 2.744 GiB, 2.97% gc time)
Test Summary: |
Visualization | No tests
 14.892517 seconds (21.75 M allocations: 1.104 GiB, 3.78% gc time)
Test Summary: | Pass  Total
Gridap        |   17     17
260.112346 seconds (320.66 M allocations: 16.187 GiB, 3.38% gc time)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000004 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000000 seconds
  0.000033 seconds (1000 allocations: 31.250 KiB)
  0.000014 seconds
  0.000000 seconds
  0.000015 seconds
  0.000017 seconds
  0.000019 seconds
+++ runing suite for n = 100000 +++
  0.000000 seconds
  0.004259 seconds (100.00 k allocations: 3.052 MiB)
  0.002633 seconds
  0.000000 seconds
  0.001592 seconds
  0.001707 seconds
  0.001901 seconds
WARNING: replacing module ArraysBenchs.
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000003 seconds (10 allocations: 320 bytes)
  0.000002 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1000 +++
  0.000002 seconds
  0.000003 seconds
  0.000051 seconds (1000 allocations: 31.250 KiB)
  0.000160 seconds (1000 allocations: 31.250 KiB)
  0.000002 seconds
  0.000053 seconds
  0.000085 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 100000 +++
  0.000224 seconds
  0.000270 seconds
  0.004894 seconds (100.00 k allocations: 3.052 MiB)
  0.014789 seconds (100.00 k allocations: 3.052 MiB)
  0.000210 seconds
  0.010028 seconds
  0.010539 seconds (2 allocations: 288 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000019 seconds
  0.000019 seconds
  0.000049 seconds
  0.000047 seconds
+++ runing suite for n = 100000 +++
  0.001754 seconds
  0.001806 seconds
  0.003566 seconds
  0.004049 seconds
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000010 seconds
  0.000000 seconds
  0.000068 seconds
  0.000000 seconds
+++ runing suite for n = 100000 +++
  0.000961 seconds
  0.000000 seconds
  0.006230 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1000 +++
  0.000063 seconds
  0.000062 seconds
  0.000069 seconds
+++ runing suite for n = 100000 +++
  0.006065 seconds
  0.006227 seconds
  0.006748 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000004 seconds
  0.000006 seconds
+++ runing suite for n = 1000 +++
  0.000023 seconds
  0.000003 seconds
  0.000081 seconds
  0.000085 seconds
  0.000023 seconds
  0.000001 seconds
  0.000096 seconds
  0.000095 seconds
  0.000023 seconds
  0.000009 seconds
  0.000107 seconds
  0.000081 seconds
  0.000053 seconds
  0.000001 seconds
  0.000670 seconds
  0.000606 seconds
+++ runing suite for n = 100000 +++
  0.002405 seconds
  0.000281 seconds
  0.007011 seconds
  0.007949 seconds
  0.002131 seconds
  0.000074 seconds
  0.008652 seconds
  0.007847 seconds
  0.002131 seconds
  0.000782 seconds
  0.008706 seconds
  0.007957 seconds
  0.004008 seconds
  0.000074 seconds
  0.036304 seconds
  0.035266 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1000 +++
  0.000050 seconds
  0.000005 seconds
  0.000110 seconds
  0.000116 seconds (1 allocation: 112 bytes)
  0.000006 seconds
  0.000141 seconds
  0.000149 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 100000 +++
  0.004230 seconds
  0.000503 seconds
  0.009957 seconds
  0.009826 seconds (1 allocation: 112 bytes)
  0.000511 seconds
  0.013196 seconds
  0.013193 seconds (1 allocation: 144 bytes)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ runing suite for n = 1000 +++
  0.000061 seconds
  0.000073 seconds
  0.000179 seconds
  0.000059 seconds
  0.000066 seconds
  0.000162 seconds
  0.000069 seconds
  0.000077 seconds
  0.000062 seconds
  0.000072 seconds
  0.000084 seconds
  0.000064 seconds
  0.000140 seconds
+++ runing suite for n = 100000 +++
  0.006011 seconds
  0.006769 seconds
  0.018429 seconds
  0.006079 seconds
  0.006777 seconds
  0.015726 seconds
  0.006652 seconds
  0.007551 seconds
  0.006202 seconds
  0.007091 seconds
  0.008064 seconds
  0.006037 seconds
  0.014193 seconds
+++ runing suite for n = 1 +++
  0.000002 seconds
  0.000001 seconds
  0.000003 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000007 seconds
+++ runing suite for n = 1000 +++
  0.000072 seconds
  0.000167 seconds
  0.000703 seconds
+++ runing suite for n = 100000 +++
  0.005766 seconds
  0.012692 seconds
  0.054386 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
+++ runing suite for n = 10 +++
  0.000001 seconds
  0.000004 seconds
+++ runing suite for n = 1000 +++
  0.000044 seconds
  0.000390 seconds
+++ runing suite for n = 100000 +++
  0.004267 seconds
  0.034597 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.058893 seconds (74.44 k allocations: 3.608 MiB)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000004 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ runing suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000011 seconds
  0.000028 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ runing suite for n = 1000 +++
  0.000012 seconds
  0.000062 seconds
  0.001049 seconds
  0.002662 seconds
  0.000021 seconds
  0.000072 seconds
  0.000001 seconds
+++ runing suite for n = 100000 +++
  0.001178 seconds
  0.005689 seconds
  0.107341 seconds
  0.251585 seconds
  0.001643 seconds
  0.006428 seconds
  0.000036 seconds
+++ runing suite for n = 1 +++
  0.000003 seconds
  0.000004 seconds
  0.000005 seconds
  0.000007 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
  0.000002 seconds (30 allocations: 1.406 KiB)
+++ runing suite for n = 10 +++
  0.000006 seconds
  0.000010 seconds
  0.000009 seconds
  0.000023 seconds (300 allocations: 14.062 KiB)
+++ runing suite for n = 1000 +++
  0.000644 seconds
  0.000992 seconds
  0.000938 seconds
  0.002004 seconds (30.00 k allocations: 1.373 MiB)
+++ runing suite for n = 100000 +++
  0.057859 seconds
  0.091546 seconds
  0.087487 seconds
  0.255789 seconds (3.00 M allocations: 137.329 MiB)
    Testing Gridap tests passed 
