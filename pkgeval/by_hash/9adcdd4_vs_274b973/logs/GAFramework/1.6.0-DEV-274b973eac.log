Julia Version 1.6.0-DEV.1016
Commit 274b973eac (2020-09-23 07:37 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_JUtWuZ/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JUtWuZ/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21714243133743535
curgen: 20 fitness: 0.21722860844871048
curgen: 30 fitness: 0.21723281515430767
curgen: 40 fitness: 0.21723281515430767
curgen: 50 fitness: 0.21723281515430767
CoordinateCreature{Vector{Float64}}([0.22241270694927215], -0.21723281515430767) 0.22241270694927215 -0.21723281515430767
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579825142388104
curgen: 100 fitness: 3.258254320416493
curgen: 150 fitness: 3.25831015618869
curgen: 200 fitness: 3.2583401186125864
curgen: 250 fitness: 3.258350383646566
curgen: 300 fitness: 3.258355996947659
curgen: 350 fitness: 3.2584307483834722
curgen: 400 fitness: 3.2584320662507085
curgen: 450 fitness: 3.2584322003766912
curgen: 500 fitness: 3.258441219800714
CoordinateCreature{Vector{Float64}}([-0.22225685421598262, 0.2225306729863492, -0.2225484241677379, 0.22245276237927847, -0.22291439817905145, -0.2225834288316325, -0.22255265403119698, -0.22287408065137246, -0.22241361719586594, 0.22320159272169962, 0.22242503528903898, 0.22273186744707685, 0.22253643908117157, -0.22261393017378545, 0.22332136394496357], -3.258441219800714) [-0.22225685421598262, 0.2225306729863492, -0.2225484241677379, 0.22245276237927847, -0.22291439817905145, -0.2225834288316325, -0.22255265403119698, -0.22287408065137246, -0.22241361719586594, 0.22320159272169962, 0.22242503528903898, 0.22273186744707685, 0.22253643908117157, -0.22261393017378545, 0.22332136394496357] -3.258441219800714
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004463485725580085
curgen: 100 fitness: -0.00422955617284515
curgen: 150 fitness: -0.0028704560909602606
curgen: 200 fitness: -0.0028704560909602606
curgen: 250 fitness: -0.0028704560909602606
curgen: 300 fitness: -0.002780193842824019
curgen: 350 fitness: -0.0026849558663002426
curgen: 400 fitness: -0.0026458760963805616
curgen: 450 fitness: -0.0026458760963805616
curgen: 500 fitness: -0.001773721540786255
CoordinateCreature{Vector{Float64}}([0.0003867940327184438, 0.001524116224560228, -0.0006448792445146567, 0.00010676808366097307, -0.0003211395060962476, -0.00034529080081471223, 0.0009613893332414379, 0.0009026440182842788, -0.0005923336735973337, -0.00013074135034923072, 0.0009355195726471303, 6.468415425582618e-5, 0.0001591871106358993, -0.00016078380141674423, -0.0016675763686075625], 0.001773721540786255) [0.0003867940327184438, 0.001524116224560228, -0.0006448792445146567, 0.00010676808366097307, -0.0003211395060962476, -0.00034529080081471223, 0.0009613893332414379, 0.0009026440182842788, -0.0005923336735973337, -0.00013074135034923072, 0.0009355195726471303, 6.468415425582618e-5, 0.0001591871106358993, -0.00016078380141674423, -0.0016675763686075625] 0.001773721540786255
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
