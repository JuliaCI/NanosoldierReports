Julia Version 1.6.0-DEV.1016
Commit 2bc0d8b624 (2020-09-23 03:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_t6tlNp/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_t6tlNp/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723337138894297
curgen: 20 fitness: 0.21723337138894297
curgen: 30 fitness: 0.21723337138894297
curgen: 40 fitness: 0.21723337138894297
curgen: 50 fitness: 0.21723337138894297
CoordinateCreature{Vector{Float64}}([-0.22247201775829978], -0.21723337138894297) -0.22247201775829978 -0.21723337138894297
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257664703636181
curgen: 100 fitness: 3.2580806284823307
curgen: 150 fitness: 3.258203118099552
curgen: 200 fitness: 3.2582449415713555
curgen: 250 fitness: 3.2582557509945467
curgen: 300 fitness: 3.2584377291930324
curgen: 350 fitness: 3.2584510557105006
curgen: 400 fitness: 3.2584530305594788
curgen: 450 fitness: 3.258457901646564
curgen: 500 fitness: 3.258459476786855
CoordinateCreature{Vector{Float64}}([-0.2227737691794634, 0.2224731751991855, 0.22255645116279463, 0.22206258582882019, -0.22235200201444305, -0.22243712177285782, -0.22219356280215322, 0.2223623020139045, -0.22250540348061718, 0.2222659453183049, 0.2221612261058326, 0.22238311996549154, -0.22302342238447473, 0.2226544924844012, -0.22242508377269604], -3.258459476786855) [-0.2227737691794634, 0.2224731751991855, 0.22255645116279463, 0.22206258582882019, -0.22235200201444305, -0.22243712177285782, -0.22219356280215322, 0.2223623020139045, -0.22250540348061718, 0.2222659453183049, 0.2221612261058326, 0.22238311996549154, -0.22302342238447473, 0.2226544924844012, -0.22242508377269604] -3.258459476786855
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0035294802792407154
curgen: 100 fitness: -0.0022158838667110103
curgen: 150 fitness: -0.0021814858185109642
curgen: 200 fitness: -0.0020371269537236003
curgen: 250 fitness: -0.001621539359490498
curgen: 300 fitness: -0.001557014369097942
curgen: 350 fitness: -0.0009292087186452136
curgen: 400 fitness: -0.0008478206103177399
curgen: 450 fitness: -0.0008478206103177399
curgen: 500 fitness: -0.0008478206103177399
CoordinateCreature{Vector{Float64}}([0.0007535278805193505, 0.0007558129894030693, 0.0002672747727789328, 0.00038293485219380893, 0.00016553678396229686, 2.3921996077853707e-5, -7.061173040655431e-5, -0.0002211159241582241, -0.000298690342414522, 0.0003953289655199638, -0.001560415423406721, 0.0001949772519276475, 0.0001834783756336734, 0.00019516218302728346, -0.00021054740657973792], 0.0008478206103177399) [0.0007535278805193505, 0.0007558129894030693, 0.0002672747727789328, 0.00038293485219380893, 0.00016553678396229686, 2.3921996077853707e-5, -7.061173040655431e-5, -0.0002211159241582241, -0.000298690342414522, 0.0003953289655199638, -0.001560415423406721, 0.0001949772519276475, 0.0001834783756336734, 0.00019516218302728346, -0.00021054740657973792] 0.0008478206103177399
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
