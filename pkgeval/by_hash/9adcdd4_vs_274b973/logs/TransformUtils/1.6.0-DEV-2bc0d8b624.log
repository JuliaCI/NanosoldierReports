Julia Version 1.6.0-DEV.1016
Commit 2bc0d8b624 (2020-09-23 03:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_k44xMq/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_k44xMq/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0764186766294107 0.0690146208604193; -0.0764186766294107 0.0 0.15299263000648852; -0.0690146208604193 -0.15299263000648852 0.0])
dAA = so3([0.0 -0.12559351136385866 -0.04503052181888145; 0.12559351136385866 0.0 -0.1780142602906255; 0.04503052181888145 0.1780142602906255 0.0])
dAA = so3([0.0 0.026095097904016224 -0.04317237989112988; -0.026095097904016224 0.0 -0.07214883658815821; 0.04317237989112988 0.07214883658815821 0.0])
dAA = Quaternion(0.9965187349506874, [-0.06542078210417548, 0.049371585096748265, -0.015263641315035548])
dAA = SO3([0.9952378074049749 -0.07782206094007213 -0.05869781548557005; 0.08008942119748258 0.9960889810252694 0.037315231371287935; 0.05556429900566149 -0.041838603120565865 0.9975781372729303])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.945789605548828 -0.3224567357240726 -0.03877725650388329; 0.27363443123503994 0.8554627043658443 -0.43966778308371923; 0.17494633485291577 0.40522242660698315 0.8973229992016697]), [-1.529926300064885, 0.690146208604193, -0.7641867662941069])
xj = SE3(SO3([0.9670660229534755 0.050430960592611866 0.24947950910376265; -0.12945287986712004 0.9413849011648228 0.31150669295057815; -0.2191466612637687 -0.33354337959642255 0.9169097855210946]), [0.721488365881582, -0.4317237989112988, -0.26095097904016223])
Dx = SE3(SO3([0.8408793220513143 0.2469402085549765 0.4816040896268911; -0.5113822055504349 0.6538986128087527 0.5575884181124653; -0.17722924587351488 -0.7151483325615835 0.6761306507188471]), [1.9104215839531027, -1.4817793476520147, 0.8575114610387635])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
