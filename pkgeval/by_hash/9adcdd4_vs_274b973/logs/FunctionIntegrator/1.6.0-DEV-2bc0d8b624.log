Julia Version 1.6.0-DEV.1016
Commit 2bc0d8b624 (2020-09-23 03:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_8cSBsa/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_8cSBsa/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.919848 seconds (1.39 M allocations: 74.119 MiB, 1.54% gc time)
Running: chebyshev_quadrature with k=1
  1.615246 seconds (2.20 M allocations: 126.711 MiB, 6.77% gc time)
Running: chebyshev_quadrature with k=2
  0.244882 seconds (409.38 k allocations: 23.548 MiB, 8.24% gc time)
Running: chebyshev_quadrature with k=3
  0.249490 seconds (522.57 k allocations: 28.713 MiB)
Running: chebyshev_quadrature with k=4
  0.299199 seconds (467.40 k allocations: 25.346 MiB, 11.61% gc time)
Running: jacobi_quadrature with α=β=1
 44.297023 seconds (37.14 M allocations: 3.033 GiB, 8.27% gc time)
Running: laguerre_quadrature with k=1
  2.978618 seconds (3.18 M allocations: 177.224 MiB, 6.21% gc time)
Running: legendre_quadrature
  0.242225 seconds (206.15 k allocations: 11.833 MiB, 10.12% gc time)
Running: lobatto_quadrature
  0.361980 seconds (329.20 k allocations: 19.867 MiB)
Running: radau_quadrature
  0.396994 seconds (446.33 k allocations: 27.188 MiB, 6.71% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.745845 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rectangle_rule_midpoint.
  0.175955 seconds (172.46 k allocations: 3.827 MiB, 15.21% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.866749 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rombergs_method
  0.603677 seconds (722.91 k allocations: 41.738 MiB, 4.89% gc time)
Running: simpsons_rule
  0.043103 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.132173 seconds (108.41 k allocations: 5.744 MiB, 16.21% gc time)
Running: trapezoidal_rule
  0.304410 seconds (1.51 M allocations: 25.665 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.080421 seconds (30.98 k allocations: 1.865 MiB)
Running: chebyshev_quadrature with k=1
  0.498203 seconds (298.61 k allocations: 15.703 MiB)
Running: chebyshev_quadrature with k=2
  0.177567 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.180578 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.222568 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.665914 seconds (503.58 k allocations: 161.779 MiB, 4.12% gc time)
Running: legendre_quadrature
  0.202447 seconds (41.21 k allocations: 2.372 MiB)
Running: lobatto_quadrature
  0.021690 seconds (15.64 k allocations: 997.044 KiB)
Running: radau_quadrature
  0.021632 seconds (15.75 k allocations: 1003.462 KiB)
Running: rectangle_rule_left
 26.255526 seconds (471.41 M allocations: 7.025 GiB, 2.62% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 26.613429 seconds (476.96 M allocations: 7.107 GiB, 2.75% gc time)
Running: rombergs_method
  0.376983 seconds (326.47 k allocations: 18.529 MiB)
Running: simpsons_rule
  0.000042 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.066372 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.058390 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028062 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.109046 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.113407 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.124219 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.124434 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.323214 seconds (363.64 k allocations: 18.980 MiB)
Running: legendre_quadrature
  0.085384 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000135 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000117 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000554 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000395 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000542 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.087843 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000071 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028130 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.025515 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060301 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.252830 seconds (230.61 k allocations: 12.966 MiB, 17.26% gc time)
Running: chebyshev_quadrature with k=2
  0.208613 seconds (283.17 k allocations: 15.906 MiB)
Running: chebyshev_quadrature with k=3
  0.196513 seconds (262.91 k allocations: 14.342 MiB)
Running: chebyshev_quadrature with k=4
  0.276706 seconds (262.93 k allocations: 14.233 MiB, 26.87% gc time)
Running: jacobi_quadrature with α=β=1
  3.110482 seconds (446.71 k allocations: 163.168 MiB, 15.39% gc time)
Running: legendre_quadrature
  0.154647 seconds (185.44 k allocations: 10.710 MiB)
Running: lobatto_quadrature
  0.187876 seconds (196.61 k allocations: 11.447 MiB, 8.59% gc time)
Running: radau_quadrature
  0.170061 seconds (196.61 k allocations: 11.409 MiB)
Running: rectangle_rule_left
  1.094516 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.025587 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.264999 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.140614 seconds (134.26 k allocations: 7.759 MiB)
Running: simpsons_rule
  0.028106 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.034851 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.035615 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.070124 seconds (99.53 k allocations: 2.980 MiB, 28.47% gc time)
Running: chebyshev_quadrature with k=1
  0.253731 seconds (237.19 k allocations: 13.035 MiB)
Running: chebyshev_quadrature with k=2
  0.287537 seconds (290.20 k allocations: 15.887 MiB)
Running: chebyshev_quadrature with k=3
  0.227604 seconds (269.60 k allocations: 14.326 MiB)
Running: chebyshev_quadrature with k=4
  0.256061 seconds (269.63 k allocations: 14.338 MiB, 6.44% gc time)
Running: hermite_quadrature with k=2
 14.806851 seconds (20.89 M allocations: 1.088 GiB, 8.22% gc time)
Running: jacobi_quadrature with α=β=1
  0.472938 seconds (455.89 k allocations: 49.403 MiB, 9.74% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.261583 seconds (276.26 k allocations: 15.239 MiB, 11.52% gc time)
Running: legendre_quadrature
  0.163349 seconds (191.98 k allocations: 11.046 MiB)
Running: lobatto_quadrature
  0.362868 seconds (217.26 k allocations: 37.186 MiB)
Running: radau_quadrature
  0.287697 seconds (213.84 k allocations: 29.850 MiB, 13.21% gc time)
Running: rectangle_rule_left
  0.030617 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.026717 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.024870 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.129593 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.035969 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.066956 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.027747 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036989 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.201481 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.227904 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.233043 seconds (265.03 k allocations: 14.117 MiB)
Running: chebyshev_quadrature with k=4
  0.238463 seconds (265.06 k allocations: 14.122 MiB, 10.74% gc time)
Running: hermite_quadrature with k=2
  0.151496 seconds (170.79 k allocations: 9.854 MiB)
Running: jacobi_quadrature with α=β=1
 10.437539 seconds (449.15 k allocations: 1.175 GiB, 21.00% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.226762 seconds (271.55 k allocations: 15.066 MiB, 6.00% gc time)
Running: legendre_quadrature
  0.168280 seconds (187.55 k allocations: 10.814 MiB)
Running: lobatto_quadrature
  0.225944 seconds (208.02 k allocations: 22.913 MiB, 6.90% gc time)
Running: radau_quadrature
  0.219769 seconds (207.17 k allocations: 20.844 MiB)
Running: rectangle_rule_left
  0.025489 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.027603 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.066345 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.131330 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.034373 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.042746 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.028017 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033496 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.210300 seconds (231.10 k allocations: 13.043 MiB, 7.48% gc time)
Running: chebyshev_quadrature with k=2
  0.227325 seconds (283.67 k allocations: 16.048 MiB)
Running: chebyshev_quadrature with k=3
  0.213380 seconds (263.41 k allocations: 14.334 MiB)
Running: chebyshev_quadrature with k=4
  0.362291 seconds (263.43 k allocations: 14.159 MiB, 4.64% gc time)
Running: jacobi_quadrature with α=β=1
  2.589862 seconds (447.25 k allocations: 194.232 MiB, 3.46% gc time)
Running: legendre_quadrature
  0.207766 seconds (185.93 k allocations: 10.808 MiB)
Running: lobatto_quadrature
  0.246801 seconds (197.11 k allocations: 11.443 MiB, 6.21% gc time)
Running: radau_quadrature
  0.168224 seconds (197.10 k allocations: 11.438 MiB)
Running: rectangle_rule_left
  0.318138 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.019669 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.153033 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.210386 seconds (145.02 k allocations: 8.499 MiB)
Running: simpsons_rule
  0.035000 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.029742 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.021277 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031730 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.223919 seconds (231.69 k allocations: 12.988 MiB, 7.75% gc time)
Running: chebyshev_quadrature with k=2
  0.242017 seconds (284.30 k allocations: 15.891 MiB)
Running: chebyshev_quadrature with k=3
  0.234881 seconds (263.99 k allocations: 14.254 MiB)
Running: chebyshev_quadrature with k=4
  0.312962 seconds (264.01 k allocations: 14.333 MiB, 6.22% gc time)
Running: jacobi_quadrature with α=β=1
  2.978162 seconds (447.96 k allocations: 148.916 MiB, 5.72% gc time)
Running: legendre_quadrature
  0.150352 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.196563 seconds (197.71 k allocations: 11.452 MiB, 7.89% gc time)
Running: radau_quadrature
  0.178752 seconds (197.70 k allocations: 11.454 MiB)
Running: rectangle_rule_left
  0.976695 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.022901 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.026146 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.132439 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.031757 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.032719 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.025046 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.141477 seconds (145.06 k allocations: 8.693 MiB)
Running: chebyshev_quadrature with k=1
  0.148208 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.160636 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.194997 seconds (92.57 k allocations: 2.654 MiB, 14.85% gc time)
Running: chebyshev_quadrature with k=4
  0.162526 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.169040 seconds (479.93 k allocations: 167.731 MiB, 4.81% gc time)
Running: legendre_quadrature
  0.129423 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000110 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000064 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.030181 seconds (590.00 M allocations: 8.792 GiB, 2.65% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.357505 seconds (592.75 M allocations: 8.833 GiB, 2.59% gc time)
Running: rombergs_method
  0.114230 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024067 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.019386 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.606981 seconds (629.32 M allocations: 9.387 GiB, 3.04% gc time)
Running: chebyshev_quadrature with k=1
  0.508190 seconds (419.26 k allocations: 23.154 MiB)
Running: chebyshev_quadrature with k=2
 21.014989 seconds (473.91 k allocations: 4.040 GiB, 3.01% gc time)
Running: chebyshev_quadrature with k=3
 10.533489 seconds (277.36 k allocations: 1.643 GiB, 2.98% gc time)
Running: chebyshev_quadrature with k=4
 13.425342 seconds (277.38 k allocations: 2.261 GiB, 1.53% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.024639 seconds (484.12 k allocations: 13.254 GiB, 2.93% gc time)
Running: legendre_quadrature.
 10.150318 seconds (223.30 k allocations: 1.976 GiB, 1.00% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.047521 seconds (8.23 M allocations: 13.383 GiB, 3.88% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.102005 seconds (7.23 M allocations: 13.369 GiB, 2.94% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.068203 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.029988 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.151881 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.823550 seconds (438.20 k allocations: 152.674 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.541761 seconds (600.04 M allocations: 8.943 GiB, 6.66% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.454431 seconds (600.05 M allocations: 8.943 GiB, 6.34% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 49.179102 seconds (600.03 M allocations: 8.943 GiB, 6.52% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058253 seconds (180.46 k allocations: 4.406 MiB)
Running: chebyshev_quadrature with k=1
  0.216881 seconds (247.70 k allocations: 13.452 MiB)
Running: chebyshev_quadrature with k=2
  0.205906 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.201921 seconds (248.58 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=4
  0.197052 seconds (248.60 k allocations: 12.827 MiB)
Running: jacobi_quadrature with α=β=1
  0.370454 seconds (388.83 k allocations: 34.965 MiB)
Running: laguerre_quadrature with k=2
  0.235156 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.174724 seconds (145.98 k allocations: 8.098 MiB)
Running: lobatto_quadrature
  0.036151 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.032405 seconds (9.32 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.053069 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.042650 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.047992 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.260103 seconds (171.75 k allocations: 9.799 MiB)
Running: simpsons_rule
  0.001895 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.065341 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.157118 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002030 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.122007 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.149527 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.144580 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.131065 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  8.905573 seconds (365.92 k allocations: 904.797 MiB, 4.75% gc time)
Running: legendre_quadrature
  0.078779 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000199 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000143 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.670832 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000506 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.001188 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.072694 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000845 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000734 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.125391 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.121626 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.131175 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.128652 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  3.698541 seconds (372.48 k allocations: 252.918 MiB)
Running: legendre_quadrature
  0.086204 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000141 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000081 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.826699 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001102 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.738799 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094716 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001817 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
