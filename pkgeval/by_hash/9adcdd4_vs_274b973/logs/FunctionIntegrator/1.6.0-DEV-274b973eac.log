Julia Version 1.6.0-DEV.1016
Commit 274b973eac (2020-09-23 07:37 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_flDuBn/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_flDuBn/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.989716 seconds (1.39 M allocations: 73.947 MiB, 1.64% gc time)
Running: chebyshev_quadrature with k=1
  1.790438 seconds (2.20 M allocations: 126.623 MiB, 7.80% gc time)
Running: chebyshev_quadrature with k=2
  0.377131 seconds (409.38 k allocations: 23.567 MiB, 6.03% gc time)
Running: chebyshev_quadrature with k=3
  0.389656 seconds (522.56 k allocations: 28.719 MiB)
Running: chebyshev_quadrature with k=4
  0.389438 seconds (467.40 k allocations: 25.340 MiB, 20.60% gc time)
Running: jacobi_quadrature with α=β=1
 44.199466 seconds (37.14 M allocations: 3.033 GiB, 10.57% gc time)
Running: laguerre_quadrature with k=1
  2.869172 seconds (3.18 M allocations: 177.211 MiB, 3.09% gc time)
Running: legendre_quadrature
  0.199244 seconds (206.21 k allocations: 11.838 MiB)
Running: lobatto_quadrature
  0.399592 seconds (329.64 k allocations: 19.904 MiB)
Running: radau_quadrature
  0.459519 seconds (446.98 k allocations: 27.222 MiB, 7.67% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.117900 seconds (100.02 M allocations: 1.491 GiB, 0.64% gc time)
Running: rectangle_rule_midpoint.
  0.143810 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.457768 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time)
Running: rombergs_method
  0.526490 seconds (723.28 k allocations: 41.737 MiB, 5.63% gc time)
Running: simpsons_rule
  0.045845 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.084054 seconds (108.54 k allocations: 5.753 MiB)
Running: trapezoidal_rule
  0.272673 seconds (1.51 M allocations: 25.673 MiB, 6.38% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.097177 seconds (30.98 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.474469 seconds (296.87 k allocations: 15.611 MiB)
Running: chebyshev_quadrature with k=2
  0.188880 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.164906 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.198650 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.171628 seconds (504.26 k allocations: 161.834 MiB, 9.00% gc time)
Running: legendre_quadrature
  0.252820 seconds (41.27 k allocations: 2.376 MiB)
Running: lobatto_quadrature
  0.040523 seconds (15.70 k allocations: 1000.981 KiB)
Running: radau_quadrature
  0.038497 seconds (15.81 k allocations: 1007.399 KiB)
Running: rectangle_rule_left
 29.096673 seconds (471.41 M allocations: 7.025 GiB, 3.65% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.763093 seconds (476.96 M allocations: 7.107 GiB, 3.80% gc time)
Running: rombergs_method
  0.393249 seconds (326.69 k allocations: 18.540 MiB, 1.89% gc time)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.063175 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.056030 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030838 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.127221 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.136735 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.122905 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.121504 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.338388 seconds (364.11 k allocations: 19.000 MiB, 6.10% gc time)
Running: legendre_quadrature
  0.112210 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000096 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.001016 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000478 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000711 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.110530 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000042 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.031201 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.030614 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.094623 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.250927 seconds (230.61 k allocations: 12.967 MiB)
Running: chebyshev_quadrature with k=2
  0.232241 seconds (283.17 k allocations: 15.902 MiB)
Running: chebyshev_quadrature with k=3
  0.303716 seconds (262.91 k allocations: 14.340 MiB, 8.86% gc time)
Running: chebyshev_quadrature with k=4
  0.275498 seconds (262.93 k allocations: 14.233 MiB)
Running: jacobi_quadrature with α=β=1
  3.045525 seconds (447.18 k allocations: 163.193 MiB, 5.86% gc time)
Running: legendre_quadrature
  0.203281 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.197200 seconds (196.76 k allocations: 11.439 MiB)
Running: radau_quadrature
  0.204658 seconds (196.76 k allocations: 11.448 MiB)
Running: rectangle_rule_left
  1.185688 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.026853 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.020209 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.166879 seconds (134.27 k allocations: 7.763 MiB, 11.49% gc time)
Running: simpsons_rule
  0.032833 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.042803 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.025961 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039590 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.192087 seconds (237.19 k allocations: 13.035 MiB)
Running: chebyshev_quadrature with k=2
  0.207676 seconds (290.20 k allocations: 15.871 MiB)
Running: chebyshev_quadrature with k=3
  0.226179 seconds (269.61 k allocations: 14.326 MiB, 8.90% gc time)
Running: chebyshev_quadrature with k=4
  0.195442 seconds (269.63 k allocations: 14.322 MiB)
Running: hermite_quadrature with k=2
 16.775667 seconds (20.89 M allocations: 1.088 GiB, 10.12% gc time)
Running: jacobi_quadrature with α=β=1
  0.542403 seconds (456.35 k allocations: 49.425 MiB, 14.72% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.244478 seconds (276.26 k allocations: 15.243 MiB)
Running: legendre_quadrature
  0.174952 seconds (191.98 k allocations: 11.044 MiB)
Running: lobatto_quadrature
  0.247650 seconds (217.42 k allocations: 37.194 MiB, 10.57% gc time)
Running: radau_quadrature
  0.211378 seconds (214.00 k allocations: 29.854 MiB)
Running: rectangle_rule_left
  0.028349 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.027280 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.024552 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.140476 seconds (136.74 k allocations: 7.808 MiB, 16.41% gc time)
Running: simpsons_rule
  0.042946 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.039239 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.028986 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039869 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.205035 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.240709 seconds (285.38 k allocations: 15.644 MiB)
Running: chebyshev_quadrature with k=3
  0.291605 seconds (265.03 k allocations: 14.117 MiB, 19.29% gc time)
Running: chebyshev_quadrature with k=4
  0.231915 seconds (265.06 k allocations: 14.122 MiB)
Running: hermite_quadrature with k=2
  0.160430 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
 13.767798 seconds (449.62 k allocations: 1.175 GiB, 9.56% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.248322 seconds (271.55 k allocations: 15.066 MiB)
Running: legendre_quadrature
  0.187975 seconds (187.55 k allocations: 10.814 MiB)
Running: lobatto_quadrature
  0.294459 seconds (208.18 k allocations: 22.925 MiB)
Running: radau_quadrature
  0.270704 seconds (207.33 k allocations: 20.868 MiB, 9.82% gc time)
Running: rectangle_rule_left
  0.038235 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.074445 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.024804 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.139338 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.031794 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.035977 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.030166 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037885 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.234967 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.231895 seconds (283.67 k allocations: 15.985 MiB, 8.11% gc time)
Running: chebyshev_quadrature with k=3
  0.308123 seconds (263.41 k allocations: 14.338 MiB)
Running: chebyshev_quadrature with k=4
  0.268811 seconds (263.43 k allocations: 14.159 MiB)
Running: jacobi_quadrature with α=β=1
  2.572002 seconds (447.72 k allocations: 194.257 MiB, 2.30% gc time)
Running: legendre_quadrature
  0.250233 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.214486 seconds (197.26 k allocations: 11.451 MiB)
Running: radau_quadrature
  0.237798 seconds (197.26 k allocations: 11.507 MiB, 9.26% gc time)
Running: rectangle_rule_left
  0.397057 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.023067 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.107372 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.180158 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.032965 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.035796 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.031738 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029039 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.195693 seconds (231.69 k allocations: 12.988 MiB)
Running: chebyshev_quadrature with k=2
  0.249476 seconds (284.30 k allocations: 15.892 MiB, 8.81% gc time)
Running: chebyshev_quadrature with k=3
  0.202328 seconds (263.99 k allocations: 14.262 MiB)
Running: chebyshev_quadrature with k=4
  0.208081 seconds (264.01 k allocations: 14.337 MiB)
Running: jacobi_quadrature with α=β=1
  1.568014 seconds (448.43 k allocations: 148.940 MiB, 7.76% gc time)
Running: legendre_quadrature
  0.130087 seconds (186.53 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.134021 seconds (197.86 k allocations: 11.460 MiB)
Running: radau_quadrature
  0.180319 seconds (197.85 k allocations: 11.462 MiB, 9.10% gc time)
Running: rectangle_rule_left
  0.981968 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.031343 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.085412 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.150202 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.042838 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.037013 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.027945 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.146142 seconds (145.07 k allocations: 8.693 MiB)
Running: chebyshev_quadrature with k=1
  0.148717 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.158801 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.185336 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.185478 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.652008 seconds (480.52 k allocations: 167.762 MiB, 14.57% gc time)
Running: legendre_quadrature
  0.128195 seconds (18.73 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000106 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000051 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 47.649943 seconds (590.00 M allocations: 8.792 GiB, 3.12% gc time)
Running: rectangle_rule_midpoint
  0.000159 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 41.328135 seconds (592.75 M allocations: 8.833 GiB, 3.11% gc time)
Running: rombergs_method
  0.136759 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028446 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021664 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.568243 seconds (629.32 M allocations: 9.387 GiB, 4.70% gc time)
Running: chebyshev_quadrature with k=1
  0.488326 seconds (419.32 k allocations: 23.153 MiB, 5.85% gc time)
Running: chebyshev_quadrature with k=2
 11.463490 seconds (473.97 k allocations: 4.041 GiB, 4.27% gc time)
Running: chebyshev_quadrature with k=3
  5.477068 seconds (277.36 k allocations: 1.643 GiB, 5.12% gc time)
Running: chebyshev_quadrature with k=4
  7.256986 seconds (277.38 k allocations: 2.261 GiB, 2.69% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 49.549929 seconds (484.67 k allocations: 13.254 GiB, 4.19% gc time)
Running: legendre_quadrature.
  5.862141 seconds (223.37 k allocations: 1.976 GiB, 2.45% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.455359 seconds (8.23 M allocations: 13.383 GiB, 5.93% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.319343 seconds (7.23 M allocations: 13.369 GiB, 5.06% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.554833 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.331356 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.440851 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.957310 seconds (438.27 k allocations: 152.678 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.939230 seconds (600.04 M allocations: 8.943 GiB, 9.18% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.276056 seconds (600.05 M allocations: 8.943 GiB, 8.46% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.367163 seconds (600.03 M allocations: 8.943 GiB, 8.94% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.057324 seconds (180.46 k allocations: 4.406 MiB)
Running: chebyshev_quadrature with k=1
  0.228754 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.221579 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.216574 seconds (248.58 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=4
  0.262314 seconds (248.60 k allocations: 12.827 MiB)
Running: jacobi_quadrature with α=β=1
  0.398619 seconds (389.29 k allocations: 34.992 MiB)
Running: laguerre_quadrature with k=2
  0.184819 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.119094 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.034087 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.030077 seconds (9.32 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.059465 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.050265 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.056309 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.279457 seconds (171.75 k allocations: 9.798 MiB)
Running: simpsons_rule
  0.001920 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054450 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.205467 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001874 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.140626 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.144564 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.156527 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.140112 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  6.324383 seconds (366.38 k allocations: 904.821 MiB, 5.36% gc time)
Running: legendre_quadrature
  0.072332 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000229 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000171 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.717530 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000324 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.998927 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.059460 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000829 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000864 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.093160 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.090638 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.102460 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.118689 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  1.709772 seconds (372.94 k allocations: 252.941 MiB)
Running: legendre_quadrature
  0.062871 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000156 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000069 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.145248 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001264 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.441316 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.118782 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000073 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001909 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
