Julia Version 1.6.0-DEV.1016
Commit 2bc0d8b624 (2020-09-23 03:05 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Conda ────────── v1.4.1
  Installed Parsers ──────── v1.0.10
  Installed JSON ─────────── v0.21.1
  Installed VersionParsing ─ v1.2.0
  Installed PyCall ───────── v1.91.4
  Installed MacroTools ───── v0.5.5
  Installed GAlgebra ─────── v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [ace2154a] + GAlgebra v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [ace2154a] + GAlgebra v0.1.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode
   Building Conda ───→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall ──→ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
   Building GAlgebra → `~/.julia/packages/GAlgebra/ebUtS/deps/build.log`
    Testing GAlgebra
Status `/tmp/jl_Ob56iz/Project.toml`
  [ace2154a] GAlgebra v0.1.0
  [438e738f] PyCall v1.91.4
  [24249f21] SymPy v1.0.30
  [8dfed614] Test
Status `/tmp/jl_Ob56iz/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] Conda v1.4.1
  [ace2154a] GAlgebra v0.1.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [3cdcf5f2] RecipesBase v1.1.0
  [276daf66] SpecialFunctions v0.10.3
  [24249f21] SymPy v1.0.30
  [81def892] VersionParsing v1.2.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
 25.222538 seconds (6.14 M allocations: 359.329 MiB, 1.98% gc time)
 76.698249 seconds (255.83 k allocations: 14.626 MiB, 0.09% gc time)
  0.491083 seconds (9.16 k allocations: 366.703 KiB)
  4.408603 seconds (15.22 k allocations: 589.641 KiB)
  0.451211 seconds (9.26 k allocations: 370.375 KiB)
  0.235715 seconds (8.80 k allocations: 352.828 KiB)
 96.935183 seconds (24.01 k allocations: 927.938 KiB)
  7.851819 seconds (15.78 k allocations: 617.875 KiB)
 48.416814 seconds (23.71 k allocations: 913.500 KiB)
 99.379964 seconds (23.90 k allocations: 919.328 KiB)
Test Summary: | Pass  Broken  Total
GAlgebra.jl   | 2876       1   2877
!!!!If I**2 = 0, I cannot be normalized!!!!
!!!!If I**2 = 0, I cannot be normalized!!!!
!!!!If I**2 = 0, I cannot be normalized!!!!
    Testing GAlgebra tests passed 
