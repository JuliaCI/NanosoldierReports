Julia Version 1.6.0-DEV.970
Commit e476b33821 (2020-09-18 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_D9sYQg/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_D9sYQg/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.781135 seconds (1.37 M allocations: 72.516 MiB, 2.17% gc time)
Running: chebyshev_quadrature with k=1
  1.659964 seconds (2.16 M allocations: 124.122 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=2
  0.276779 seconds (411.05 k allocations: 23.645 MiB, 8.15% gc time)
Running: chebyshev_quadrature with k=3
  0.285920 seconds (524.55 k allocations: 28.811 MiB)
Running: chebyshev_quadrature with k=4
  0.309761 seconds (469.11 k allocations: 25.432 MiB, 16.92% gc time)
Running: jacobi_quadrature with α=β=1
 36.894149 seconds (37.42 M allocations: 3.052 GiB, 8.66% gc time)
Running: laguerre_quadrature with k=1
  3.000425 seconds (3.19 M allocations: 178.006 MiB, 2.79% gc time)
Running: legendre_quadrature
  0.185644 seconds (207.72 k allocations: 11.931 MiB)
Running: lobatto_quadrature
  0.316091 seconds (331.53 k allocations: 19.995 MiB, 7.70% gc time)
Running: radau_quadrature
  0.320943 seconds (417.52 k allocations: 25.388 MiB, 7.23% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 75.431724 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rectangle_rule_midpoint.
  0.144413 seconds (172.67 k allocations: 3.837 MiB, 16.26% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.775308 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.523409 seconds (726.78 k allocations: 41.916 MiB, 5.87% gc time)
Running: simpsons_rule
  0.026185 seconds (46.01 k allocations: 2.055 MiB)
Running: simpsons38_rule
  0.092746 seconds (109.37 k allocations: 5.792 MiB, 19.19% gc time)
Running: trapezoidal_rule
  0.285359 seconds (1.51 M allocations: 25.699 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.079812 seconds (31.32 k allocations: 1.880 MiB)
Running: chebyshev_quadrature with k=1
  0.401204 seconds (274.32 k allocations: 14.228 MiB)
Running: chebyshev_quadrature with k=2
  0.154570 seconds (93.90 k allocations: 2.680 MiB)
Running: chebyshev_quadrature with k=3
  0.162847 seconds (82.15 k allocations: 2.481 MiB)
Running: chebyshev_quadrature with k=4
  0.176539 seconds (64.76 k allocations: 2.127 MiB)
Running: jacobi_quadrature with α=β=1
  2.038963 seconds (499.82 k allocations: 161.623 MiB, 2.75% gc time)
Running: legendre_quadrature
  0.151935 seconds (41.90 k allocations: 2.416 MiB)
Running: lobatto_quadrature
  0.022341 seconds (16.19 k allocations: 1.008 MiB)
Running: radau_quadrature
  0.022419 seconds (16.30 k allocations: 1.015 MiB)
Running: rectangle_rule_left
 26.073247 seconds (471.41 M allocations: 7.025 GiB, 2.70% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 26.810232 seconds (476.96 M allocations: 7.107 GiB, 2.72% gc time)
Running: rombergs_method
  0.354239 seconds (328.38 k allocations: 18.632 MiB)
Running: simpsons_rule
  0.000025 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055410 seconds (19.15 k allocations: 1.157 MiB)
Running: trapezoidal_rule
  0.049851 seconds (17.63 k allocations: 1.065 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029164 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.117784 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.122736 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.136767 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.135728 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.316948 seconds (363.73 k allocations: 18.988 MiB)
Running: legendre_quadrature
  0.085632 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000097 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000046 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000461 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000321 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000736 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.086342 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000043 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026658 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023419 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.062938 seconds (72.84 k allocations: 4.239 MiB)
Running: chebyshev_quadrature with k=1
  0.197351 seconds (231.63 k allocations: 13.016 MiB)
Running: chebyshev_quadrature with k=2
  0.248131 seconds (284.38 k allocations: 15.970 MiB, 12.30% gc time)
Running: chebyshev_quadrature with k=3
  0.203917 seconds (263.93 k allocations: 14.398 MiB)
Running: chebyshev_quadrature with k=4
  0.224065 seconds (263.95 k allocations: 14.286 MiB, 12.00% gc time)
Running: jacobi_quadrature with α=β=1
  2.449741 seconds (447.42 k allocations: 163.246 MiB, 1.21% gc time)
Running: legendre_quadrature
  0.162655 seconds (186.44 k allocations: 10.775 MiB)
Running: lobatto_quadrature
  0.184256 seconds (197.32 k allocations: 11.451 MiB, 11.52% gc time)
Running: radau_quadrature
  0.197652 seconds (197.32 k allocations: 11.452 MiB)
Running: rectangle_rule_left
  0.984224 seconds (18.96 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.023238 seconds (24.88 k allocations: 1.565 MiB)
Running: rectangle_rule_right
  0.963956 seconds (17.52 k allocations: 1.071 MiB)
Running: rombergs_method
  0.133731 seconds (134.98 k allocations: 7.800 MiB)
Running: simpsons_rule
  0.051796 seconds (27.77 k allocations: 1.742 MiB)
Running: simpsons38_rule
  0.033153 seconds (42.75 k allocations: 2.696 MiB)
Running: trapezoidal_rule
  0.025034 seconds (44.30 k allocations: 1.782 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039425 seconds (99.79 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.211945 seconds (238.23 k allocations: 13.088 MiB, 10.92% gc time)
Running: chebyshev_quadrature with k=2
  0.170887 seconds (291.43 k allocations: 15.965 MiB)
Running: chebyshev_quadrature with k=3
  0.180867 seconds (270.64 k allocations: 14.380 MiB)
Running: chebyshev_quadrature with k=4
  0.201840 seconds (270.67 k allocations: 14.374 MiB, 9.99% gc time)
Running: hermite_quadrature with k=2
 14.597818 seconds (20.98 M allocations: 1.092 GiB, 7.47% gc time)
Running: jacobi_quadrature with α=β=1
  0.611354 seconds (456.62 k allocations: 49.419 MiB, 19.34% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.303011 seconds (277.51 k allocations: 15.311 MiB, 19.40% gc time)
Running: legendre_quadrature
  0.186583 seconds (192.99 k allocations: 11.087 MiB)
Running: lobatto_quadrature
  0.259315 seconds (218.12 k allocations: 37.229 MiB, 10.67% gc time)
Running: radau_quadrature
  0.237965 seconds (214.72 k allocations: 29.894 MiB)
Running: rectangle_rule_left
  0.031542 seconds (21.89 k allocations: 1.300 MiB)
Running: rectangle_rule_midpoint
  0.028457 seconds (26.69 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.026137 seconds (18.65 k allocations: 1.124 MiB)
Running: rombergs_method
  0.191836 seconds (137.45 k allocations: 7.839 MiB, 34.81% gc time)
Running: simpsons_rule
  0.032657 seconds (39.64 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.041854 seconds (57.74 k allocations: 3.082 MiB)
Running: trapezoidal_rule
  0.030434 seconds (30.35 k allocations: 1.708 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036796 seconds (60.16 k allocations: 2.292 MiB)
Running: chebyshev_quadrature with k=1
  0.183633 seconds (233.75 k allocations: 12.887 MiB)
Running: chebyshev_quadrature with k=2
  0.256143 seconds (286.60 k allocations: 15.707 MiB)
Running: chebyshev_quadrature with k=3
  0.281464 seconds (266.06 k allocations: 14.234 MiB, 18.77% gc time)
Running: chebyshev_quadrature with k=4
  0.205346 seconds (266.08 k allocations: 14.171 MiB)
Running: hermite_quadrature with k=2
  0.158720 seconds (171.66 k allocations: 9.839 MiB)
Running: jacobi_quadrature with α=β=1
  8.804379 seconds (449.86 k allocations: 1.175 GiB, 16.69% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.209932 seconds (272.79 k allocations: 15.124 MiB)
Running: legendre_quadrature
  0.191127 seconds (188.55 k allocations: 10.866 MiB)
Running: lobatto_quadrature
  0.433369 seconds (208.88 k allocations: 22.955 MiB, 52.36% gc time)
Running: radau_quadrature
  0.256076 seconds (208.03 k allocations: 20.886 MiB)
Running: rectangle_rule_left
  0.027958 seconds (19.67 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.052823 seconds (25.58 k allocations: 1.601 MiB, 47.92% gc time)
Running: rectangle_rule_right
  0.024690 seconds (17.50 k allocations: 1.069 MiB)
Running: rombergs_method
  0.132035 seconds (133.28 k allocations: 7.660 MiB)
Running: simpsons_rule
  0.032459 seconds (32.15 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.037539 seconds (48.54 k allocations: 2.840 MiB)
Running: trapezoidal_rule
  0.027320 seconds (25.25 k allocations: 1.545 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029969 seconds (31.12 k allocations: 1.887 MiB)
Running: chebyshev_quadrature with k=1
  0.214857 seconds (232.12 k allocations: 13.099 MiB)
Running: chebyshev_quadrature with k=2
  0.259193 seconds (284.88 k allocations: 16.051 MiB, 11.49% gc time)
Running: chebyshev_quadrature with k=3
  0.234710 seconds (264.44 k allocations: 14.382 MiB)
Running: chebyshev_quadrature with k=4
  0.204915 seconds (264.46 k allocations: 14.212 MiB)
Running: jacobi_quadrature with α=β=1
  1.522668 seconds (447.96 k allocations: 194.294 MiB, 3.43% gc time)
Running: legendre_quadrature
  0.160009 seconds (186.94 k allocations: 10.801 MiB)
Running: lobatto_quadrature
  0.250018 seconds (197.82 k allocations: 11.477 MiB)
Running: radau_quadrature
  0.180069 seconds (197.82 k allocations: 11.477 MiB)
Running: rectangle_rule_left
  0.329344 seconds (19.48 k allocations: 1.179 MiB)
Running: rectangle_rule_midpoint
  0.073025 seconds (25.22 k allocations: 1.583 MiB, 63.76% gc time)
Running: rectangle_rule_right
  0.101391 seconds (17.86 k allocations: 1.087 MiB)
Running: rombergs_method
  0.124881 seconds (145.84 k allocations: 8.526 MiB)
Running: simpsons_rule
  0.027647 seconds (28.46 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.037633 seconds (43.46 k allocations: 2.726 MiB)
Running: trapezoidal_rule
  0.017475 seconds (45.23 k allocations: 1.815 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030370 seconds (31.88 k allocations: 1.838 MiB)
Running: chebyshev_quadrature with k=1
  0.196249 seconds (232.72 k allocations: 13.050 MiB)
Running: chebyshev_quadrature with k=2
  0.275103 seconds (285.51 k allocations: 15.955 MiB, 9.92% gc time)
Running: chebyshev_quadrature with k=3
  0.203922 seconds (265.02 k allocations: 14.307 MiB)
Running: chebyshev_quadrature with k=4
  0.192074 seconds (265.04 k allocations: 14.386 MiB)
Running: jacobi_quadrature with α=β=1
  1.502929 seconds (448.67 k allocations: 148.978 MiB, 5.30% gc time)
Running: legendre_quadrature
  0.168681 seconds (187.53 k allocations: 10.803 MiB)
Running: lobatto_quadrature
  0.172223 seconds (198.42 k allocations: 11.495 MiB)
Running: radau_quadrature
  0.179767 seconds (198.41 k allocations: 11.512 MiB)
Running: rectangle_rule_left
  1.046303 seconds (19.73 k allocations: 1.192 MiB)
Running: rectangle_rule_midpoint
  0.114025 seconds (25.22 k allocations: 1.584 MiB, 66.11% gc time)
Running: rectangle_rule_right
  1.002300 seconds (17.82 k allocations: 1.084 MiB)
Running: rombergs_method
  0.159849 seconds (136.21 k allocations: 7.852 MiB)
Running: simpsons_rule
  0.035954 seconds (29.17 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.038016 seconds (44.16 k allocations: 2.753 MiB)
Running: trapezoidal_rule
  0.028561 seconds (57.47 k allocations: 2.016 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179048 seconds (146.20 k allocations: 8.746 MiB)
Running: chebyshev_quadrature with k=1
  0.141044 seconds (70.03 k allocations: 2.209 MiB)
Running: chebyshev_quadrature with k=2
  0.153968 seconds (105.19 k allocations: 2.872 MiB)
Running: chebyshev_quadrature with k=3
  0.166469 seconds (92.67 k allocations: 2.659 MiB)
Running: chebyshev_quadrature with k=4
  0.162488 seconds (72.20 k allocations: 2.253 MiB)
Running: jacobi_quadrature with α=β=1
  2.401860 seconds (475.35 k allocations: 167.529 MiB, 6.98% gc time)
Running: legendre_quadrature
  0.110266 seconds (18.82 k allocations: 1.098 MiB)
Running: lobatto_quadrature
  0.000082 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000041 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.065119 seconds (590.00 M allocations: 8.792 GiB, 3.18% gc time)
Running: rectangle_rule_midpoint
  0.000096 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 41.943292 seconds (592.75 M allocations: 8.833 GiB, 3.04% gc time)
Running: rombergs_method
  0.127465 seconds (20.60 k allocations: 1.170 MiB)
Running: simpsons_rule
  0.000075 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029997 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022495 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.812187 seconds (629.33 M allocations: 9.387 GiB, 4.43% gc time)
Running: chebyshev_quadrature with k=1
  0.528595 seconds (421.77 k allocations: 23.351 MiB, 4.06% gc time)
Running: chebyshev_quadrature with k=2
 12.338442 seconds (476.61 k allocations: 4.041 GiB, 4.54% gc time)
Running: chebyshev_quadrature with k=3
  5.836089 seconds (278.42 k allocations: 1.643 GiB, 5.17% gc time)
Running: chebyshev_quadrature with k=4
  8.109773 seconds (278.45 k allocations: 2.262 GiB, 2.77% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 60.189735 seconds (485.51 k allocations: 13.254 GiB, 3.44% gc time)
Running: legendre_quadrature.
  6.681127 seconds (224.94 k allocations: 1.976 GiB, 3.58% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.955909 seconds (8.23 M allocations: 13.384 GiB, 5.38% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.966798 seconds (7.23 M allocations: 13.369 GiB, 3.38% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.639658 seconds (22.41 k allocations: 1.355 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.629604 seconds (30.69 k allocations: 1.896 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.673089 seconds (22.62 k allocations: 1.365 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.043662 seconds (441.03 k allocations: 152.820 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.760016 seconds (600.04 M allocations: 8.943 GiB, 7.75% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.295239 seconds (600.05 M allocations: 8.943 GiB, 7.96% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.123368 seconds (600.03 M allocations: 8.943 GiB, 8.98% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065537 seconds (180.73 k allocations: 4.418 MiB)
Running: chebyshev_quadrature with k=1
  0.288270 seconds (248.72 k allocations: 13.517 MiB)
Running: chebyshev_quadrature with k=2
  0.258749 seconds (273.35 k allocations: 14.575 MiB)
Running: chebyshev_quadrature with k=3
  0.303588 seconds (249.41 k allocations: 12.936 MiB)
Running: chebyshev_quadrature with k=4
  0.254270 seconds (249.43 k allocations: 12.872 MiB)
Running: jacobi_quadrature with α=β=1
  0.394403 seconds (389.10 k allocations: 34.983 MiB)
Running: laguerre_quadrature with k=2
  0.200589 seconds (181.50 k allocations: 10.528 MiB)
Running: legendre_quadrature
  0.136715 seconds (146.65 k allocations: 8.108 MiB)
Running: lobatto_quadrature
  0.037743 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033278 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.051850 seconds (19.00 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.042259 seconds (25.68 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.046490 seconds (17.60 k allocations: 1.055 MiB)
Running: rombergs_method
  0.225143 seconds (172.18 k allocations: 9.841 MiB)
Running: simpsons_rule
  0.002113 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053584 seconds (79.23 k allocations: 3.402 MiB)
Running: trapezoidal_rule
  0.223090 seconds (2.39 M allocations: 37.701 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002450 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.147194 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.171981 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.136678 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.121761 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  6.787757 seconds (366.13 k allocations: 904.892 MiB, 6.31% gc time)
Running: legendre_quadrature
  0.072989 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000191 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000142 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.233679 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000546 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.413859 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082004 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001028 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000635 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.111416 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.119946 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.125199 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.123976 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.199911 seconds (372.68 k allocations: 252.924 MiB)
Running: legendre_quadrature
  0.093402 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000110 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000059 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.394514 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001097 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.696506 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082139 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000082 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000072 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001714 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
