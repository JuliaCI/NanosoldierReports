Julia Version 1.6.0-DEV.970
Commit e476b33821 (2020-09-18 18:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_xUSg7h/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_xUSg7h/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(26, 0.05182123f0), Item(14, 0.08493972f0), Item(21, 0.08597922f0), Item(1, 0.09892094f0)])
Vsorted = Item[Item(26, 0.05182123f0), Item(14, 0.08493972f0), Item(21, 0.08597922f0), Item(1, 0.09892094f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004530779520670573, 0.0047948360443115234, 301.0, 49.955318031832576))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004095117251078288, 0.0039045333862304686, 301.0, 72.8942860364914))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004909213383992513, 0.00456689993540446, 301.0, 40.613974928855896))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004736709594726563, 0.004349970817565918, 301.0, 9.216392617090605))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0038117408752441407, 0.005629404385884603, 301.0, 45.14226398617029))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017453829447428387, 0.00014503002166748046, 301.0, 178.10215463489294))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.983179728190104e-5, 0.010385934511820476, 300.0, 26.134872882743366)
p = PerformanceResult(1.0, 1.0, 1.0, 5.691846211751302e-5, 2.8101603190104165e-5, 300.0, 26.134872882743366)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004291669527689616, 0.0035217682520548503, 300.0, 1.4150680755036547)
p = PerformanceResult(1.0, 1.0, 1.0, 6.110403272840712e-5, 2.4867057800292968e-5, 300.0, 1.4150680755036547)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.983179728190104e-5, 0.010385934511820476, 300.0, 26.134872882743366), PerformanceResult(1.0, 1.0, 1.0, 5.691846211751302e-5, 2.8101603190104165e-5, 300.0, 26.134872882743366), PerformanceResult(1.0, 1.0, 1.0, 0.004291669527689616, 0.0035217682520548503, 300.0, 1.4150680755036547), PerformanceResult(1.0, 1.0, 1.0, 6.110403272840712e-5, 2.4867057800292968e-5, 300.0, 1.4150680755036547))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 133.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009036970138549805, 0.003926626841227214, 347.03333333333336, 28640.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007230536142985026, 0.0035261710484822593, 304.5, 6911.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 3.085136413574219e-5, 1.2969970703125e-5, 95.46666666666667, 49.87437708489597))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3444493611653645e-5, 1.4503796895345053e-5, 84.7, 72.73651945590973))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9587745666503905e-5, 1.857280731201172e-5, 91.16666666666667, 40.5606689453125))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.594195048014322e-5, 0.00017786026000976562, 96.83333333333333, 45.06399633735418))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8066666666666666, 0.8066666666666666, 0.8066666666666666, 5.3930282592773435e-5, 0.00014007091522216797, 69.8, 187.54724314063787))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-19T02:49:52.569
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9120000000000004, 0.9120000000000004, 0.9120000000000004, 6.738424301147461e-5, 2.824068069458008e-5, 152.15, 52.60102160763927))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 3.417730331420898e-5, 2.4690628051757813e-5, 155.82, 0.0))
*** advance 1 from 1000; 2020-09-19T02:49:53.297
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9085, 0.9069999999999999, 0.9076666666666666, 2.2685527801513673e-5, 2.451896667480469e-5, 152.58, 78.19292482919991))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.162933349609375e-5, 1.9538402557373048e-5, 156.21, 0.0))
*** advance 1 from 1000; 2020-09-19T02:49:53.899
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8960000000000002, 0.8960000000000002, 0.8960000000000002, 2.427816390991211e-5, 3.459930419921875e-5, 152.81, 43.42948925960809))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.323150634765625e-5, 3.5309791564941405e-5, 156.65, 0.0))
*** advance 1 from 1000; 2020-09-19T02:49:54.481
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9110000000000004, 0.9110000000000004, 0.9110000000000004, 9.861230850219727e-5, 0.0004967498779296875, 152.88, 47.297581463470124))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.950637817382813e-5, 0.0005417513847351074, 156.72, 0.0))
*** advance 1 from 1000; 2020-09-19T02:49:55.030
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9000000000000002, 0.9000000000000002, 0.9000000000000002, 8.187294006347656e-5, 0.00038810014724731444, 151.87, 205.46167873498052))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.727312088012696e-5, 0.0004255414009094238, 155.55, 0.0))
*** advance 1 from 1000; 2020-09-19T02:49:56.107
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9120000000000004, 0.9120000000000004, 0.9120000000000004, 3.6609172821044925e-5, 7.890939712524415e-5, 152.15, 52.61203624587506))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.356456756591797e-5, 7.056951522827149e-5, 155.82, 0.013387271930696443))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:49:58.055
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.741, 0.741, 0.741, 0.0016114091873168945, 8.678197860717774e-5, 205.45, 193.70000234246254))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:49:59.218
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7259999999999998, 0.7259999999999998, 0.7259999999999998, 0.0016054749488830567, 8.565902709960937e-5, 208.84, 112.24524010717869))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:50:00.057
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6810000000000003, 0.6810000000000003, 0.6810000000000003, 0.0017092490196228027, 9.181976318359375e-5, 286.32, 2.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:50:00.887
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9550000000000002, 0.9550000000000002, 0.9550000000000002, 0.0014783596992492675, 2.0749568939208985e-5, 220.41, 600.2000204026699))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:50:01.818
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6040000000000001, 0.6040000000000001, 0.6040000000000001, 0.001715717315673828, 0.00039184093475341797, 257.41, 2318.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:50:02.688
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.412, 0.412, NaN, 0.0014874792098999022, 0.0002610397338867188, 246.23, 3652.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-19T02:50:03.497
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.618, 0.618, 0.618, 0.001755690574645996, 3.3059120178222655e-5, 253.95, 2338.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0766355140186916, conf: {"restarts":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9556204212454218,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":2.1867454051971436e-6,"evaluations":8.359375,"distances_sum":569.9965104460716}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0766355140186916,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9556204212454218,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":2.1867454051971436e-6,"evaluations":8.359375,"distances_sum":569.9965104460716}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0766355140186916,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9556204212454218,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":2.1867454051971436e-6,"evaluations":8.359375,"distances_sum":569.9965104460716}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0766355140186916,"state":{"restarts":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9556204212454218,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":2.1867454051971436e-6,"evaluations":8.359375,"distances_sum":569.9965104460716}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7080469065911847, conf: {"restarts":12}, perf: {"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6814639568328857e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":57.9609375,"distances_sum":296.30394395440817}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7080469065911847,"state":{"restarts":12},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6814639568328857e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":57.9609375,"distances_sum":296.30394395440817}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8035866780529464, conf: {"restarts":10}, perf: {"precision":0.9010416666666652,"recall":0.9010416666666652,"f1":0.9010416666666652,"seconds":2.5639310479164124e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":54.890625,"distances_sum":296.0474840179086}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7810260014054813, conf: {"restarts":11}, perf: {"precision":0.9131944444444435,"recall":0.9131944444444435,"f1":0.9131944444444435,"seconds":2.775155007839203e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":55.5859375,"distances_sum":294.59922168403864}, best_list's length: 9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8035866780529464,"state":{"restarts":10},"perf":{"precision":0.9010416666666652,"recall":0.9010416666666652,"f1":0.9010416666666652,"seconds":2.5639310479164124e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":54.890625,"distances_sum":296.0474840179086}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8035866780529464,"state":{"restarts":10},"perf":{"precision":0.9010416666666652,"recall":0.9010416666666652,"f1":0.9010416666666652,"seconds":2.5639310479164124e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":54.890625,"distances_sum":296.0474840179086}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8035866780529464,"state":{"restarts":10},"perf":{"precision":0.9010416666666652,"recall":0.9010416666666652,"f1":0.9010416666666652,"seconds":2.5639310479164124e-5,"exhaustive_search_seconds":6.42240047454834e-6,"evaluations":54.890625,"distances_sum":296.0474840179086}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999987, conf: {"restarts":19}, perf: {"precision":0.8671874999999987,"recall":0.8671874999999987,"f1":0.8671874999999987,"seconds":7.003732025623322e-5,"exhaustive_search_seconds":2.7524307370185852e-5,"evaluations":180.765625,"distances_sum":124.47859600372612}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8671874999999987,"state":{"restarts":19},"perf":{"precision":0.8671874999999987,"recall":0.8671874999999987,"f1":0.8671874999999987,"seconds":7.003732025623322e-5,"exhaustive_search_seconds":2.7524307370185852e-5,"evaluations":180.765625,"distances_sum":124.47859600372612}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8671874999999987,"state":{"restarts":19},"perf":{"precision":0.8671874999999987,"recall":0.8671874999999987,"f1":0.8671874999999987,"seconds":7.003732025623322e-5,"exhaustive_search_seconds":2.7524307370185852e-5,"evaluations":180.765625,"distances_sum":124.47859600372612}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999989, conf: {"restarts":30}, perf: {"precision":0.8749999999999989,"recall":0.8749999999999989,"f1":0.8749999999999989,"seconds":0.00015664845705032349,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":376.890625,"distances_sum":55.92583418660797}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444433, conf: {"restarts":31}, perf: {"precision":0.8741319444444433,"recall":0.8741319444444433,"f1":0.8741319444444433,"seconds":0.00014057569205760956,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":386.078125,"distances_sum":55.65761850797571}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.865451388888888, conf: {"restarts":13}, perf: {"precision":0.865451388888888,"recall":0.865451388888888,"f1":0.865451388888888,"seconds":9.318254888057709e-5,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":226.5625,"distances_sum":56.0660034196917}, best_list's length: 11, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999989,"state":{"restarts":30},"perf":{"precision":0.8749999999999989,"recall":0.8749999999999989,"f1":0.8749999999999989,"seconds":0.00015664845705032349,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":376.890625,"distances_sum":55.92583418660797}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777767, conf: {"restarts":29}, perf: {"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":0.0001522321254014969,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":363.890625,"distances_sum":55.66237693675794}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111106, conf: {"restarts":44}, perf: {"precision":0.8767361111111106,"recall":0.8767361111111106,"f1":0.8767361111111106,"seconds":0.0002206992357969284,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":489.40625,"distances_sum":55.97822490357794}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8793402777777767,"state":{"restarts":29},"perf":{"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":0.0001522321254014969,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":363.890625,"distances_sum":55.66237693675794}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8793402777777767,"state":{"restarts":29},"perf":{"precision":0.8793402777777767,"recall":0.8793402777777767,"f1":0.8793402777777767,"seconds":0.0001522321254014969,"exhaustive_search_seconds":0.00036354735493659973,"evaluations":363.890625,"distances_sum":55.66237693675794}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(29), SatNeighborhood(32), 2020-09-19T02:50:11.048
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(69, 0.02506785f0), Item(52, 0.027939145f0), Item(24, 0.036038157f0), Item(7313, 0.0370063f0), Item(3253, 0.046248432f0), Item(202, 0.053433698f0), Item(4380, 0.053588584f0), Item(183, 0.05957524f0), Item(7227, 0.059664074f0), Item(7830, 0.06267127f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.090909090909091, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9416791541791546,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.25,"distances_sum":558.8516591638327}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9416791541791546,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.25,"distances_sum":558.8516591638327}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9446905525030531,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.234375,"distances_sum":551.7443820685148}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9446905525030531,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.234375,"distances_sum":551.7443820685148}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9446905525030531,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.234375,"distances_sum":551.7443820685148}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.52,"state":{"bsize":2},"perf":{"precision":0.9322916666666656,"recall":0.9322916666666656,"f1":0.9322916666666656,"seconds":0.00014190375804901123,"exhaustive_search_seconds":7.750466465950012e-6,"evaluations":28.125,"distances_sum":278.17475267499685}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.52,"state":{"bsize":2},"perf":{"precision":0.9322916666666656,"recall":0.9322916666666656,"f1":0.9322916666666656,"seconds":0.00014190375804901123,"exhaustive_search_seconds":7.750466465950012e-6,"evaluations":28.125,"distances_sum":278.17475267499685}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.347737151623626,"state":{"bsize":2},"perf":{"precision":0.9314236111111104,"recall":0.9314236111111104,"f1":0.9314236111111104,"seconds":2.9517337679862976e-5,"exhaustive_search_seconds":3.059394657611847e-5,"evaluations":61.109375,"distances_sum":124.26020058616996}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.347737151623626,"state":{"bsize":2},"perf":{"precision":0.9314236111111104,"recall":0.9314236111111104,"f1":0.9314236111111104,"seconds":2.9517337679862976e-5,"exhaustive_search_seconds":3.059394657611847e-5,"evaluations":61.109375,"distances_sum":124.26020058616996}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 92.48477483917084, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.157027721405029e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":109.296875,"distances_sum":53.63548812177032}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.35105049760413, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.918981671333313e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":105.9765625,"distances_sum":53.63548812177032}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.35105049760413,"state":{"bsize":8},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.918981671333313e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":105.9765625,"distances_sum":53.63548812177032}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.60211397738192, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.950219929218292e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":105.6953125,"distances_sum":53.63548812177032}, best_list's length: 8, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.29167616875712, conf: {"bsize":5}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.4934993386268616e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":102.7734375,"distances_sum":53.73004912119359}, best_list's length: 9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.29167616875712,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.4934993386268616e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":102.7734375,"distances_sum":53.73004912119359}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.29167616875712,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.4934993386268616e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":102.7734375,"distances_sum":53.73004912119359}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.29167616875712,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":5.4934993386268616e-5,"exhaustive_search_seconds":0.00039281323552131653,"evaluations":102.7734375,"distances_sum":53.73004912119359}}, n: 9999
added n=10000, neighborhood=6, BeamSearch(5), SatNeighborhood(32), 2020-09-19T02:50:14.947
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5269, 0.021797728f0), Item(790, 0.022785997f0), Item(5832, 0.026291512f0), Item(4243, 0.028049862f0), Item(7149, 0.028771738f0), Item(1238, 0.046333734f0), Item(7717, 0.04769395f0), Item(1646, 0.048823774f0), Item(5377, 0.050926f0), Item(8065, 0.05093819f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
