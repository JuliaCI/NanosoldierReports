Current time is 2020-10-26T22:44:37.972
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T22:44:39.448
   Resolving package versions...
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed OrderedCollections â”€ v1.3.1
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed SimilaritySearch â”€â”€â”€ v0.3.20
     Cloning [864edb3b-99cc-5e75-8d2d-829cb0a9cfe8] DataStructures from https://github.com/JuliaCollections/DataStructures.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
     Cloning [2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91] StatsBase from https://github.com/JuliaStats/StatsBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
     Cloning [a2af1166-a08f-5f64-846c-94a0d3cef48c] SortingAlgorithms from https://github.com/JuliaCollections/SortingAlgorithms.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed SortingAlgorithms â”€â”€ v0.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled
Starting tests at 2020-10-26T22:47:03.541
     Testing SimilaritySearch
Status `/tmp/jl_0cDUJW/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_0cDUJW/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(33, 0.0044173f0), Item(43, 0.012352824f0), Item(39, 0.014181972f0), Item(15, 0.030700326f0)])
Vsorted = Item[Item(33, 0.0044173f0), Item(43, 0.012352824f0), Item(39, 0.014181972f0), Item(15, 0.030700326f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0027028560638427735, 0.0023931662241617837, 301.0, 46.56978021003306))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032610177993774416, 0.0032048622767130532, 301.0, 68.41479682922363))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0028109312057495116, 0.003447230656941732, 301.0, 37.86103856563568))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0032120227813720705, 0.005941931406656901, 301.0, 8.064903054386377))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0021967411041259764, 0.0034950971603393555, 301.0, 42.139773193746805))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.4898846944173178e-5, 1.4964739481608073e-5, 301.0, 171.18966359645128))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.216266632080078e-5, 0.007350897789001465, 300.0, 23.564433271531016)
p = PerformanceResult(1.0, 1.0, 1.0, 1.8095970153808595e-5, 1.2000401814778646e-5, 300.0, 23.564433271531016)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0025623401006062826, 0.004438265164693197, 300.0, 1.090613643409597)
p = PerformanceResult(1.0, 1.0, 1.0, 1.8186039394802516e-5, 9.465217590332032e-6, 300.0, 1.090613643409597)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.216266632080078e-5, 0.007350897789001465, 300.0, 23.564433271531016), PerformanceResult(1.0, 1.0, 1.0, 1.8095970153808595e-5, 1.2000401814778646e-5, 300.0, 23.564433271531016), PerformanceResult(1.0, 1.0, 1.0, 0.0025623401006062826, 0.004438265164693197, 300.0, 1.090613643409597), PerformanceResult(1.0, 1.0, 1.0, 1.8186039394802516e-5, 9.465217590332032e-6, 300.0, 1.090613643409597))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.005144961675008138, 0.0027805010477701822, 346.1, 28838.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0059960683186848955, 0.0016041994094848633, 304.8333333333333, 6970.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0840098063151042e-5, 6.198883056640625e-6, 92.0, 46.56978021003306))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 9.783109029134114e-6, 4.967053731282552e-6, 84.36666666666666, 68.41479682922363))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 9.854634602864584e-6, 5.563100179036458e-6, 87.36666666666666, 37.86103856563568))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 2.4048487345377603e-5, 5.3493181864420575e-5, 92.2, 42.139773193746805))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7866666666666668, 0.7866666666666668, 0.7866666666666668, 1.0538101196289063e-5, 1.3232231140136719e-5, 70.0, 183.37672854214907))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-26T22:47:38.954
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8925714285714286, 0.8899999999999999, 0.8910588235294117, 1.3763904571533202e-5, 1.3229846954345704e-5, 151.71, 51.82844597159419))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3668537139892578e-5, 9.820461273193359e-6, 155.37, 0.0))
*** advance 1 from 1000; 2020-10-26T22:47:40.218
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8843333333333334, 0.8810000000000001, 0.8823157894736842, 1.3418197631835938e-5, 1.4560222625732422e-5, 150.63, 77.15345874615014))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.0581016540527344e-5, 6.7305564880371095e-6, 154.2, 0.0))
*** advance 1 from 1000; 2020-10-26T22:47:40.721
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.883388888888889, 0.8780000000000001, 0.8803230134158929, 1.5990734100341795e-5, 1.8749237060546875e-5, 152.75, 41.816252091899514))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.756429672241211e-5, 1.600027084350586e-5, 156.36, 0.0))
*** advance 1 from 1000; 2020-10-26T22:47:41.235
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.897666666666667, 0.8970000000000001, 0.8973157894736845, 3.148317337036133e-5, 0.00016559839248657228, 151.33, 47.01836398278829))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 3.039121627807617e-5, 0.00016389846801757814, 155.05, 0.0))
*** advance 1 from 1000; 2020-10-26T22:47:41.512
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9670000000000002, 0.9670000000000002, 0.9670000000000002, 2.593040466308594e-5, 6.416082382202149e-5, 164.49, 194.705026964657))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.7778148651123048e-5, 7.111072540283203e-5, 169.45, 0.0))
*** advance 1 from 1000; 2020-10-26T22:47:42.183
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8925714285714286, 0.8899999999999999, 0.8910588235294117, 1.8010139465332033e-5, 2.8200149536132813e-5, 151.71, 51.838934104074724))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8036365509033204e-5, 3.8869380950927735e-5, 155.37, 0.014255521178711206))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:44.224
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7400000000000003, 0.7400000000000003, 0.7400000000000003, 0.0009008002281188965, 6.121158599853516e-5, 197.49, 188.58333539962769))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:45.114
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7700000000000006, 0.7700000000000006, 0.7700000000000006, 0.0011194849014282227, 4.40216064453125e-5, 200.02, 105.2309547290206))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:45.768
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6039999999999998, 0.6039999999999998, 0.6039999999999998, 0.0008884716033935547, 4.6970844268798826e-5, 242.5, 0.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:46.370
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9659999999999997, 0.9659999999999997, 0.9659999999999997, 0.0011942028999328614, 8.249282836914063e-6, 218.92, 598.8000206649303))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:47.173
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5880000000000001, 0.5880000000000001, NaN, 0.0010809755325317382, 0.00021293878555297851, 257.24, 2353.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:47.818
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37899999999999984, 0.37899999999999984, NaN, 0.0011096429824829102, 0.00024507999420166017, 244.88, 3662.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-26T22:47:48.416
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5869999999999999, 0.5869999999999999, 0.5869999999999999, 0.0009929466247558594, 1.0619163513183594e-5, 245.59, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0397111913357397, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761904761904764,"seconds":2.028420567512512e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":836.4924301803112}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0397111913357397,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761904761904764,"seconds":2.028420567512512e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":836.4924301803112}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0406504065040654, conf: {"restarts":3}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9747970779220783,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6484375,"distances_sum":834.9467878639698}, best_list's length: 5, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0539798719121682, conf: {"restarts":2}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9656655844155845,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5390625,"distances_sum":820.1834416687489}, best_list's length: 6, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0539798719121682,"state":{"restarts":2},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9656655844155845,"seconds":2.859160304069519e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5390625,"distances_sum":820.1834416687489}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0766355140186916, conf: {"restarts":1}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9514204545454548,"seconds":2.603977918624878e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.359375,"distances_sum":797.7582497298717}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0766355140186916,"state":{"restarts":1},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9514204545454548,"seconds":2.603977918624878e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.359375,"distances_sum":797.7582497298717}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0766355140186916,"state":{"restarts":1},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9514204545454548,"seconds":2.603977918624878e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.359375,"distances_sum":797.7582497298717}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777765, conf: {"restarts":6}, perf: {"precision":0.8793402777777765,"recall":0.8793402777777765,"f1":0.8793402777777765,"seconds":1.2524425983428955e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":46.8359375,"distances_sum":302.07960467785597}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666655, conf: {"restarts":4}, perf: {"precision":0.8463541666666655,"recall":0.8463541666666655,"f1":0.8463541666666655,"seconds":8.208677172660828e-6,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":40.171875,"distances_sum":307.4996661543846}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8897569444444432, conf: {"restarts":8}, perf: {"precision":0.8897569444444432,"recall":0.8897569444444432,"f1":0.8897569444444432,"seconds":1.3444572687149048e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":50.3828125,"distances_sum":299.831516943872}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8897569444444432,"state":{"restarts":8},"perf":{"precision":0.8897569444444432,"recall":0.8897569444444432,"f1":0.8897569444444432,"seconds":1.3444572687149048e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":50.3828125,"distances_sum":299.831516943872}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8386535113174696, conf: {"restarts":10}, perf: {"precision":0.91579861111111,"recall":0.91579861111111,"f1":0.91579861111111,"seconds":1.5048310160636902e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":53.84375,"distances_sum":296.95356334000826}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7725556021821234, conf: {"restarts":11}, perf: {"precision":0.9010416666666657,"recall":0.9010416666666657,"f1":0.9010416666666657,"seconds":1.5476718544960022e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":55.8515625,"distances_sum":299.7961901053786}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6993428992892587, conf: {"restarts":13}, perf: {"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":1.654215157032013e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":58.2578125,"distances_sum":299.1995098218322}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.740898475065256, conf: {"restarts":12}, perf: {"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":1.6435980796813965e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":56.8671875,"distances_sum":300.0900485292077}, best_list's length: 9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8386535113174696,"state":{"restarts":10},"perf":{"precision":0.91579861111111,"recall":0.91579861111111,"f1":0.91579861111111,"seconds":1.5048310160636902e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":53.84375,"distances_sum":296.95356334000826}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.032723772858518, conf: {"restarts":7}, perf: {"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":1.4094635844230652e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":48.703125,"distances_sum":298.86267321556807}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.032723772858518,"state":{"restarts":7},"perf":{"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":1.4094635844230652e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":48.703125,"distances_sum":298.86267321556807}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.032723772858518,"state":{"restarts":7},"perf":{"precision":0.90798611111111,"recall":0.90798611111111,"f1":0.90798611111111,"seconds":1.4094635844230652e-5,"exhaustive_search_seconds":4.36045229434967e-6,"evaluations":48.703125,"distances_sum":298.86267321556807}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111102, conf: {"restarts":9}, perf: {"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":1.93081796169281e-5,"exhaustive_search_seconds":1.2429431080818176e-5,"evaluations":122.4609375,"distances_sum":124.01723343227059}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8689236111111102,"state":{"restarts":9},"perf":{"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":1.93081796169281e-5,"exhaustive_search_seconds":1.2429431080818176e-5,"evaluations":122.4609375,"distances_sum":124.01723343227059}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8689236111111102,"state":{"restarts":9},"perf":{"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":1.93081796169281e-5,"exhaustive_search_seconds":1.2429431080818176e-5,"evaluations":122.4609375,"distances_sum":124.01723343227059}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8680555555555545, conf: {"restarts":15}, perf: {"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":8.087418973445892e-5,"exhaustive_search_seconds":0.00015550106763839722,"evaluations":254.2734375,"distances_sum":55.31850467994809}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8680555555555545,"state":{"restarts":15},"perf":{"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":8.087418973445892e-5,"exhaustive_search_seconds":0.00015550106763839722,"evaluations":254.2734375,"distances_sum":55.31850467994809}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8680555555555545,"state":{"restarts":15},"perf":{"precision":0.8680555555555545,"recall":0.8680555555555545,"f1":0.8680555555555545,"seconds":8.087418973445892e-5,"exhaustive_search_seconds":0.00015550106763839722,"evaluations":254.2734375,"distances_sum":55.31850467994809}}, n: 9999
added n=10000, neighborhood=2, IHCSearch(15), SatNeighborhood(32), 2020-10-26T22:47:53.825
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2545, 0.025541686f0), Item(8757, 0.03816652f0), Item(4374, 0.038766854f0), Item(8978, 0.045764636f0), Item(781, 0.04928481f0), Item(4032, 0.05185371f0), Item(9365, 0.05240136f0), Item(3807, 0.053327765f0), Item(2550, 0.05606793f0), Item(7239, 0.06095141f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.014977973568282, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9833984375,"f1":0.990922619047619,"seconds":2.609565854072571e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8671875,"distances_sum":853.9470070302486}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.051094890510949, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9686214826839827,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5625,"distances_sum":812.4232435524464}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.051094890510949,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9686214826839827,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5625,"distances_sum":812.4232435524464}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.051094890510949,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9686214826839827,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5625,"distances_sum":812.4232435524464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.051094890510949,"state":{"bsize":1},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9686214826839827,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5625,"distances_sum":812.4232435524464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.3149433686518086, conf: {"bsize":8}, perf: {"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":1.0609626770019531e-5,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":42.765625,"distances_sum":281.2310613319278}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.626321243523316, conf: {"bsize":6}, perf: {"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":9.188428521156311e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":37.6953125,"distances_sum":282.107507891953}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.7746879789796366, conf: {"bsize":5}, perf: {"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":0.00025703199207782745,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":35.6796875,"distances_sum":281.64742228388786}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.7746879789796366,"state":{"bsize":5},"perf":{"precision":0.9852430555555554,"recall":0.9852430555555554,"f1":0.9852430555555554,"seconds":0.00025703199207782745,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":35.6796875,"distances_sum":281.64742228388786}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.9816470588235293, conf: {"bsize":4}, perf: {"precision":0.9696180555555554,"recall":0.9696180555555554,"f1":0.9696180555555554,"seconds":9.760260581970215e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":33.203125,"distances_sum":284.4307533726096}, best_list's length: 6, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.064570737605804, conf: {"bsize":3}, perf: {"precision":0.9401041666666665,"recall":0.9401041666666665,"f1":0.9401041666666665,"seconds":9.927898645401001e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":32.3046875,"distances_sum":288.1327271088958}, best_list's length: 8, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.064570737605804,"state":{"bsize":3},"perf":{"precision":0.9401041666666665,"recall":0.9401041666666665,"f1":0.9401041666666665,"seconds":9.927898645401001e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":32.3046875,"distances_sum":288.1327271088958}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.064570737605804,"state":{"bsize":3},"perf":{"precision":0.9401041666666665,"recall":0.9401041666666665,"f1":0.9401041666666665,"seconds":9.927898645401001e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":32.3046875,"distances_sum":288.1327271088958}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.064570737605804,"state":{"bsize":3},"perf":{"precision":0.9401041666666665,"recall":0.9401041666666665,"f1":0.9401041666666665,"seconds":9.927898645401001e-6,"exhaustive_search_seconds":3.563240170478821e-6,"evaluations":32.3046875,"distances_sum":288.1327271088958}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.36447402098797,"state":{"bsize":3},"perf":{"precision":0.9774305555555552,"recall":0.9774305555555552,"f1":0.9774305555555552,"seconds":1.7723068594932556e-5,"exhaustive_search_seconds":1.679547131061554e-5,"evaluations":61.046875,"distances_sum":120.67492020688951}}, beam: 3, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.36447402098797,"state":{"bsize":3},"perf":{"precision":0.9774305555555552,"recall":0.9774305555555552,"f1":0.9774305555555552,"seconds":1.7723068594932556e-5,"exhaustive_search_seconds":1.679547131061554e-5,"evaluations":61.046875,"distances_sum":120.67492020688951}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":90.80297502104968,"state":{"bsize":3},"perf":{"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":2.1303072571754456e-5,"exhaustive_search_seconds":0.00010615773499011993,"evaluations":111.34375,"distances_sum":55.06470279255882}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":90.80297502104968,"state":{"bsize":3},"perf":{"precision":0.9739583333333328,"recall":0.9739583333333328,"f1":0.9739583333333328,"seconds":2.1303072571754456e-5,"exhaustive_search_seconds":0.00010615773499011993,"evaluations":111.34375,"distances_sum":55.06470279255882}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(3), SatNeighborhood(32), 2020-10-26T22:47:56.529
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1608, 0.03761583f0), Item(4975, 0.03895635f0), Item(1660, 0.040398724f0), Item(8949, 0.042226434f0), Item(8952, 0.04924944f0), Item(5824, 0.05073384f0), Item(3952, 0.052049495f0), Item(7495, 0.053384315f0), Item(4558, 0.05372218f0), Item(4412, 0.055684216f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
     Testing SimilaritySearch tests passed 
Finished at 2020-10-26T22:47:56.681
