Current time is 2020-10-26T21:01:35.864
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T21:01:37.852
   Resolving package versions...
   Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10+0
   Installed Nullables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed ArrayLayouts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.10
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed LazyArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.1
   Installed ApproxFunOrthogonalPolynomials â”€ v0.3.5
   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed EllipsisNotation â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Installed Intervals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.5.0
   Installed DualNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
   Installed BlockBandedMatrices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.10
   Installed MPFR_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.1.0+1
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed BlockArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.14
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.7
   Installed DomainSets â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed MKL_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2020.2.254+0
   Installed MatrixFactorizations â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed ApproxFunBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.9
   Installed LowRankApprox â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.33.2
   Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.4
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed GMP_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v6.2.0+3
   Installed IntervalSets â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed CompilerSupportLibraries_jll â”€â”€â”€ v0.3.4+0
   Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.10
   Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed FastTransforms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed InfiniteArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
   Installed DSP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.8
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed FFTW_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.3.9+6
   Installed IntelOpenMP_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2018.0.3+0
   Installed FastTransforms_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3+0
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed ToeplitzMatrices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed BandedMatrices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.15.25
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [b70543e2] + ApproxFunOrthogonalPolynomials v0.3.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [fbd15aa5] + ApproxFunBase v0.3.9
  [b70543e2] + ApproxFunOrthogonalPolynomials v0.3.5
  [4c555306] + ArrayLayouts v0.4.10
  [aae01518] + BandedMatrices v0.15.25
  [b99e7846] + BinaryProvider v0.5.10
  [8e7c35d0] + BlockArrays v0.12.14
  [ffab5731] + BlockBandedMatrices v0.9.5
  [49dc2e85] + Calculus v0.5.1
  [34da2185] + Compat v3.22.0
  [717857b8] + DSP v0.6.8
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [5b8099bc] + DomainSets v0.4.1
  [fa6b7ba4] + DualNumbers v0.6.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.4
  [442a2c76] + FastGaussQuadrature v0.4.3
  [057dd010] + FastTransforms v0.10.3
  [1a297f60] + FillArrays v0.9.7
  [4858937d] + InfiniteArrays v0.8.2
  [8197267c] + IntervalSets v0.5.1
  [d8418881] + Intervals v1.5.0
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.1.3
  [5078a376] + LazyArrays v0.18.1
  [898213cb] + LowRankApprox v0.4.1
  [1914dd2f] + MacroTools v0.5.6
  [a3b82374] + MatrixFactorizations v0.6.0
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [4d1e1d77] + Nullables v1.0.0
  [6fe1bfb0] + OffsetArrays v1.3.1
  [bac558e1] + OrderedCollections v1.3.1
  [f27b6e38] + Polynomials v1.1.10
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.2
  [f269a46b] + TimeZones v1.4.0
  [c751599d] + ToeplitzMatrices v0.6.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [f5851436] + FFTW_jll v3.3.9+6
  [34b6f7d7] + FastTransforms_jll v0.3.3+0
  [781609d7] + GMP_jll v6.2.0+3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [856f044c] + MKL_jll v2020.2.254+0
  [3a97d323] + MPFR_jll v4.1.0+1
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones â”€â”€â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
    Building FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/8b7c16b56936047ca41bf25effa137ae0b381ae8/build.log`
    Building FastTransforms â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/862852b4bd7019ff2d267bced443c67fa5ce56c3/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mEllipsisNotation[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mOffsetArrays[39m
[32m  âœ“ [39m[90mAbstractFFTs[39m
[32m  âœ“ [39m[90mIterTools[39m
[32m  âœ“ [39m[90mNullables[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mIntervalSets[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mCalculus[39m
[32m  âœ“ [39m[90mFillArrays[39m
[32m  âœ“ [39m[90mIntelOpenMP_jll[39m
[32m  âœ“ [39m[90mFFTW_jll[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mGMP_jll[39m
[32m  âœ“ [39m[90mMKL_jll[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mMPFR_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mOpenBLAS_jll[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mFFTW[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mFastTransforms_jll[39m
[32m  âœ“ [39m[90mArrayLayouts[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mToeplitzMatrices[39m
[32m  âœ“ [39m[90mMatrixFactorizations[39m
[32m  âœ“ [39m[90mDomainSets[39m
[32m  âœ“ [39m[90mDualNumbers[39m
[32m  âœ“ [39m[90mLowRankApprox[39m
[32m  âœ“ [39m[90mBlockArrays[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39m[90mBandedMatrices[39m
[32m  âœ“ [39m[90mIntervals[39m
[32m  âœ“ [39m[90mPolynomials[39m
[32m  âœ“ [39m[90mLazyArrays[39m
[32m  âœ“ [39m[90mBlockBandedMatrices[39m
[32m  âœ“ [39m[90mDSP[39m
[32m  âœ“ [39m[90mInfiniteArrays[39m
[32m  âœ“ [39m[90mFastTransforms[39m
[32m  âœ“ [39m[90mApproxFunBase[39m
[32m  âœ“ [39mApproxFunOrthogonalPolynomials
54 dependencies successfully precompiled (4 already precompiled)
Starting tests at 2020-10-26T21:03:40.860
     Testing ApproxFunOrthogonalPolynomials
Status `/tmp/jl_g4bW0W/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [fbd15aa5] ApproxFunBase v0.3.9
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.5
  [aae01518] BandedMatrices v0.15.25
  [8e7c35d0] BlockArrays v0.12.14
  [ffab5731] BlockBandedMatrices v0.9.5
  [5b8099bc] DomainSets v0.4.1
  [7a1cc6ca] FFTW v1.2.4
  [442a2c76] FastGaussQuadrature v0.4.3
  [057dd010] FastTransforms v0.10.3
  [1a297f60] FillArrays v0.9.7
  [8197267c] IntervalSets v0.5.1
  [5078a376] LazyArrays v0.18.1
  [189a3867] Reexport v0.2.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [37e2e46d] LinearAlgebra
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_g4bW0W/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [fbd15aa5] ApproxFunBase v0.3.9
  [b70543e2] ApproxFunOrthogonalPolynomials v0.3.5
  [4c555306] ArrayLayouts v0.4.10
  [aae01518] BandedMatrices v0.15.25
  [b99e7846] BinaryProvider v0.5.10
  [8e7c35d0] BlockArrays v0.12.14
  [ffab5731] BlockBandedMatrices v0.9.5
  [49dc2e85] Calculus v0.5.1
  [34da2185] Compat v3.22.0
  [717857b8] DSP v0.6.8
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [5b8099bc] DomainSets v0.4.1
  [fa6b7ba4] DualNumbers v0.6.2
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.4
  [442a2c76] FastGaussQuadrature v0.4.3
  [057dd010] FastTransforms v0.10.3
  [1a297f60] FillArrays v0.9.7
  [4858937d] InfiniteArrays v0.8.2
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.5.0
  [c8e1da08] IterTools v1.3.0
  [692b3bcd] JLLWrappers v1.1.3
  [5078a376] LazyArrays v0.18.1
  [898213cb] LowRankApprox v0.4.1
  [1914dd2f] MacroTools v0.5.6
  [a3b82374] MatrixFactorizations v0.6.0
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [4d1e1d77] Nullables v1.0.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [bac558e1] OrderedCollections v1.3.1
  [f27b6e38] Polynomials v1.1.10
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [f269a46b] TimeZones v1.4.0
  [c751599d] ToeplitzMatrices v0.6.2
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [f5851436] FFTW_jll v3.3.9+6
  [34b6f7d7] FastTransforms_jll v0.3.3+0
  [781609d7] GMP_jll v6.2.0+3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [856f044c] MKL_jll v2020.2.254+0
  [3a97d323] MPFR_jll v4.1.0+1
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Test Summary: | Pass  Total
Domain        |    1      1
Test Summary: | Pass  Total
Clenshaw      |    1      1
  4.036806 seconds (6.44 M allocations: 388.823 MiB, 13.64% gc time, 99.73% compilation time)
Test Summary: | Pass  Total
Chebyshev     |  488    488
 79.279978 seconds (101.22 M allocations: 5.711 GiB, 5.83% gc time, 98.85% compilation time)
Test Summary: | Pass  Total
Complex       |   13     13
  3.466067 seconds (3.92 M allocations: 227.998 MiB, 3.24% gc time, 97.77% compilation time)
Test Summary: | Pass  Total
broadcast     |   18     18
 24.885808 seconds (27.12 M allocations: 1.547 GiB, 4.03% gc time, 98.91% compilation time)
  4.585917 seconds (4.31 M allocations: 230.993 MiB, 3.88% gc time, 99.96% compilation time)
  7.509236 seconds (7.07 M allocations: 459.942 MiB, 5.40% gc time, 99.59% compilation time)
  6.758082 seconds (6.59 M allocations: 361.233 MiB, 3.62% gc time, 99.95% compilation time)
  0.136767 seconds (31.57 k allocations: 2.053 MiB, 89.98% compilation time)
  1.906482 seconds (1.24 M allocations: 64.274 MiB, 99.88% compilation time)
 26.118904 seconds (27.70 M allocations: 1.689 GiB, 4.45% gc time, 93.88% compilation time)
Test Summary: |  Pass  Total
Operator      | 12366  12366
321.739265 seconds (303.71 M allocations: 16.613 GiB, 6.76% gc time, 98.88% compilation time)
  0.431785 seconds (629.82 k allocations: 37.817 MiB, 99.25% compilation time)
  1.247660 seconds (1.74 M allocations: 111.745 MiB, 2.93% gc time, 99.53% compilation time)
  2.147050 seconds (2.61 M allocations: 162.874 MiB, 4.25% gc time, 99.32% compilation time)
  1.665442 seconds (3.80 M allocations: 164.182 MiB, 5.26% gc time, 91.65% compilation time)
  1.869858 seconds (3.41 M allocations: 201.664 MiB, 6.24% gc time, 99.80% compilation time)
  3.829529 seconds (6.65 M allocations: 367.835 MiB, 5.47% gc time, 93.23% compilation time)
  4.544723 seconds (5.75 M allocations: 338.565 MiB, 3.96% gc time, 99.05% compilation time)
  2.689390 seconds (2.72 M allocations: 170.103 MiB, 2.35% gc time, 99.59% compilation time)
Test Summary: | Pass  Total
ODE           | 2729   2729
118.141460 seconds (178.80 M allocations: 9.954 GiB, 4.72% gc time, 96.42% compilation time)
Test Summary:       | Pass  Total
Eigenvalue problems |   13     13
 88.283385 seconds (116.84 M allocations: 6.500 GiB, 4.89% gc time, 94.91% compilation time)
  2.124294 seconds (1.74 M allocations: 109.969 MiB, 2.73% gc time, 97.68% compilation time)
  0.035463 seconds (23.96 k allocations: 1.205 MiB, 92.16% compilation time)
  5.105663 seconds (4.55 M allocations: 280.516 MiB, 3.90% gc time, 99.54% compilation time)
  0.438705 seconds (874.63 k allocations: 49.238 MiB, 98.36% compilation time)
Test Summary: | Pass  Broken  Total
Vector        |  446       1    447
 70.204880 seconds (65.05 M allocations: 3.729 GiB, 4.26% gc time, 97.33% compilation time)
  0.000304 seconds (150 allocations: 7.125 KiB)
  4.937935 seconds (5.91 M allocations: 319.423 MiB, 7.62% gc time, 99.97% compilation time)
  0.225674 seconds (12 allocations: 32.406 KiB)
  6.680493 seconds (7.74 M allocations: 683.008 MiB, 7.99% gc time, 91.65% compilation time)
  9.253003 seconds (8.51 M allocations: 483.898 MiB, 7.35% gc time, 99.43% compilation time)
 12.768660 seconds (10.13 M allocations: 531.031 MiB, 4.37% gc time, 99.84% compilation time)
  4.764515 seconds (2.27 M allocations: 126.043 MiB, 2.61% gc time, 99.86% compilation time)
  7.420892 seconds (7.66 M allocations: 397.864 MiB, 4.56% gc time, 98.77% compilation time)
  4.389808 seconds (3.09 M allocations: 173.735 MiB, 3.76% gc time, 99.75% compilation time)
 18.406380 seconds (13.06 M allocations: 750.267 MiB, 2.64% gc time, 98.68% compilation time)
  8.548986 seconds (7.60 M allocations: 395.181 MiB, 4.44% gc time, 99.79% compilation time)
Test Summary: | Pass  Total
Jacobi        | 4811   4811
160.779074 seconds (132.88 M allocations: 7.620 GiB, 4.69% gc time, 98.05% compilation time)
Test Summary:                 | Pass  Total
Laguerre and WeightedLaguerre |   21     21
 65.307079 seconds (62.47 M allocations: 3.008 GiB, 6.04% gc time, 99.56% compilation time)
Test Summary:           | Pass  Total
Hermite and GaussWeight |  415    415
 31.092895 seconds (40.74 M allocations: 2.160 GiB, 4.97% gc time, 99.52% compilation time)
  0.096675 seconds (101.17 k allocations: 6.428 MiB, 97.88% compilation time)
  1.324635 seconds (3.27 M allocations: 167.408 MiB, 10.18% gc time, 69.42% compilation time)
  2.035539 seconds (2.28 M allocations: 138.208 MiB, 98.62% compilation time)
  0.000949 seconds (3.47 k allocations: 247.547 KiB)
  1.351682 seconds (1.71 M allocations: 108.939 MiB, 99.70% compilation time)
Test Summary: | Pass  Broken  Total
Spaces        | 1745       1   1746
195.862619 seconds (228.43 M allocations: 13.820 GiB, 4.74% gc time, 92.77% compilation time)
  2.385485 seconds (1.91 M allocations: 116.130 MiB, 91.86% compilation time)
  5.063432 seconds (1.34 M allocations: 81.177 MiB, 96.32% compilation time)
  0.140209 seconds (214.51 k allocations: 12.420 MiB, 6.29% compilation time)
  1.722502 seconds (1.87 M allocations: 113.972 MiB, 13.43% gc time, 99.30% compilation time)
  0.351827 seconds (206.11 k allocations: 12.617 MiB, 98.33% compilation time)
  0.497251 seconds (2.18 M allocations: 200.630 MiB, 22.26% gc time, 28.05% compilation time)
  0.553254 seconds (2.31 M allocations: 207.116 MiB, 19.31% gc time, 34.85% compilation time)
Partial derivative operators: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:145
  Test threw exception
  Expression: abs(Number(B * f) - f(0.0, 0.0)) â‰¤ 10 * eps()
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Int64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{DomainSets.Point{Int64}, DomainSets.Point{Int64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Int64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{DomainSets.Point{Int64}, DomainSets.Point{Int64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Int64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{DomainSets.Point{Int64}, DomainSets.Point{Int64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:145 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:130 [inlined]
   [25] macro expansion
      @ timing.jl:192 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:129 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
Partial derivative operators: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:148
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, 0.0)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Int64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:148 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:130 [inlined]
   [25] macro expansion
      @ timing.jl:192 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:129 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
Partial derivative operators: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:151
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, 0.3)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:151 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:130 [inlined]
   [25] macro expansion
      @ timing.jl:192 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:129 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
Partial derivative operators: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:154
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, 0.3)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590 [inlined]
   [21] mul_coefficients(A::ApproxFunBase.EvaluationWrapper{TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, SVector{2, Float64}, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Vector{Int64}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/Operator.jl:490
   [22] *(A::ApproxFunBase.EvaluationWrapper{TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, SVector{2, Float64}, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}, Chebyshev{IntervalSets.ClosedInterval{Int64}, Float64}}, DomainSets.VcatDomain{2, Int64, (1, 1), Tuple{IntervalSets.ClosedInterval{Int64}, IntervalSets.ClosedInterval{Int64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Vector{Int64}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [23] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:154 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:130 [inlined]
   [26] macro expansion
      @ timing.jl:192 [inlined]
   [27] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:129 [inlined]
   [28] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [29] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
199.342672 seconds (80.19 M allocations: 4.093 GiB, 2.05% gc time, 99.36% compilation time)
 51.301325 seconds (12.25 M allocations: 741.809 MiB, 1.20% gc time, 98.64% compilation time)
DefiniteIntegral: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:235
  Test threw exception
  Expression: Number(DefiniteIntegral() * f) â‰ˆ sum(f)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{ApproxFunBase.AnyDomain, Float64}, ConstantSpace{ApproxFunBase.AnyDomain, Float64}}, DomainSets.VcatDomain{2, ApproxFunBase.UnsetNumber, (1, 1), Tuple{DomainSets.FullSpace{ApproxFunBase.UnsetNumber}, DomainSets.FullSpace{ApproxFunBase.UnsetNumber}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590 [inlined]
   [21] mul_coefficients(A::ApproxFunBase.DefiniteIntegralWrapper{KroneckerOperator{ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{ApproxFunBase.AnyDomain, Float64}, ConstantSpace{ApproxFunBase.AnyDomain, Float64}}, DomainSets.VcatDomain{2, ApproxFunBase.UnsetNumber, (1, 1), Tuple{DomainSets.FullSpace{ApproxFunBase.UnsetNumber}, DomainSets.FullSpace{ApproxFunBase.UnsetNumber}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/Operator.jl:490
   [22] *(A::ApproxFunBase.DefiniteIntegralWrapper{KroneckerOperator{ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, ApproxFunBase.ConcreteDefiniteIntegral{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{ApproxFunBase.AnyDomain, Float64}, ConstantSpace{ApproxFunBase.AnyDomain, Float64}}, DomainSets.VcatDomain{2, ApproxFunBase.UnsetNumber, (1, 1), Tuple{DomainSets.FullSpace{ApproxFunBase.UnsetNumber}, DomainSets.FullSpace{ApproxFunBase.UnsetNumber}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [23] *(A::ApproxFunBase.ConcreteDefiniteIntegral{ApproxFunBase.UnsetSpace, ApproxFunBase.UnsetNumber}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:607
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:235 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:234 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
off domain evaluate: Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:265
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] (SVector{S, T} where T where S)(x::Tuple{Irrational{:Ï€}, Int64})
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:18
    [6] (SVector{S, T} where T where S)(::Irrational{:Ï€}, ::Vararg{Any})
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4
    [7] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:266 [inlined]
    [8] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
    [9] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:266 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [11] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ./timing.jl:192
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ none:6
   [16] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [17] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [18] _start()
      @ Base ./client.jl:485
2d derivative (issue #346): Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:297
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(-1.0, -1.0)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:297 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:280 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
2d derivative (issue #346): Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:300
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, -1.0)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, typeof(leftendpoint), Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:300 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:280 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
2d derivative (issue #346): Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:303
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, 0.3)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590
   [21] *(A::KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [22] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:303 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:280 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
2d derivative (issue #346): Error During Test at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:306
  Test threw exception
  Expression: Number(B * f) â‰ˆ f(0.1, 0.3)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:49 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SArray.jl:46 [inlined]
    [6] getindex
      @ ~/.julia/packages/StaticArrays/l7lu2/src/initializers.jl:31 [inlined]
    [7] (::StaticArrays.var"#317#320"{StaticArrays.var"#rf#319"{typeof(Base.add_sum)}})(::Tuple{SVector{0, Union{}}, StaticArrays._InitialValue}, x::Int64)
      @ StaticArrays ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:337
    [8] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:140 [inlined]
    [9] _mapfoldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:115 [inlined]
   [10] _foldl
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:224 [inlined]
   [11] _accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:329 [inlined]
   [12] #accumulate#315
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [13] accumulate
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:314 [inlined]
   [14] #cumsum#322
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [15] cumsum
      @ ~/.julia/packages/StaticArrays/l7lu2/src/mapreduce.jl:354 [inlined]
   [16] _cumsum
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:109 [inlined]
   [17] block(sp::ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}, k::Int64)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:111
   [18] block
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Multivariate/TensorSpace.jl:112 [inlined]
   [19] mul_coefficients(A::ApproxFunBase.SubOperator{Float64, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/PDE/KroneckerOperator.jl:421
   [20] mul_coefficients
      @ ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:590 [inlined]
   [21] mul_coefficients(A::ApproxFunBase.EvaluationWrapper{TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, SVector{2, Float64}, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Vector{Int64}, Float64}, b::Vector{Float64})
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/Operator.jl:490
   [22] *(A::ApproxFunBase.EvaluationWrapper{TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, SVector{2, Float64}, KroneckerOperator{ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, ApproxFunBase.ConcreteEvaluation{Chebyshev{ChebyshevInterval{Float64}, Float64}, Float64, Int64, Float64}, TensorSpace{Tuple{Chebyshev{ChebyshevInterval{Float64}, Float64}, Chebyshev{ChebyshevInterval{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{ChebyshevInterval{Float64}, ChebyshevInterval{Float64}}}, Float64}, TensorSpace{Tuple{ConstantSpace{DomainSets.Point{Float64}, Float64}, ConstantSpace{DomainSets.Point{Float64}, Float64}}, DomainSets.VcatDomain{2, Float64, (1, 1), Tuple{DomainSets.Point{Float64}, DomainSets.Point{Float64}}}, Float64}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}, Ones{Int64, 1, Tuple{InfiniteArrays.OneToInf{Int64}}}}}}, ApproxFunBase.CachedIterator{Tuple{Int64, Int64}, ApproxFunBase.Tensorizer{Tuple{SVector{1, Int64}, SVector{1, Int64}}}}, Float64}, Vector{Int64}, Float64}, b::Function)
      @ ApproxFunBase ~/.julia/packages/ApproxFunBase/rkmP0/src/Operators/general/algebra.jl:611
   [23] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:306 [inlined]
   [24] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [25] macro expansion
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:280 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [27] top-level scope
      @ ~/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:8
Test Summary:                  | Pass  Error  Total
Multivariate                   | 3277     10   3287
  Square                       |  119           119
  LowRankFun                   |    3             3
  Vec segment                  |    9             9
  Multivariate calculus        |    3             3
  KroneckerOperator            |    2             2
  Partial derivative operators | 1185      4   1189
  x,y constructors             |   12            12
  conversion between           |   10            10
  Cheby * Interval             |    5             5
  DefiniteIntegral             |           1      1
  Piecewise Tensor             |    7             7
  Bug in chop of ProductFun    |    2             2
  off domain evaluate          |           1      1
  Dirichlet                    | 1514          1514
  2d derivative (issue #346)   |  398      4    402
  ProductFun                   |    4             4
  Functional*Fun               |    2             2
  matrix                       |    2             2
ERROR: LoadError: LoadError: Some tests did not pass: 3277 passed, 0 failed, 10 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/MultivariateTest.jl:7
in expression starting at /home/pkgeval/.julia/packages/ApproxFunOrthogonalPolynomials/moUcR/test/runtests.jl:19
 ** On entry to DTBSV  parameter number  5 had an illegal value
 ** On entry to DTBSV  parameter number  5 had an illegal value
ERROR: Package ApproxFunOrthogonalPolynomials errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
