Current time is 2020-10-26T20:36:36.386
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T20:36:38.500
   Resolving package versions...
   Installed Crayons â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.0.4
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed CanonicalTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.3
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed GeneralizedGenerated â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.8
   Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed MLStyle â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.6
   Installed IteratorInterfaceExtensions â”€ v1.0.0
   Installed Catlab â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed FunctionWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.9
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed Measures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed SimpleTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.3
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed Formatting â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed ArnoldiMethod â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed Inflate â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.2
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed LightXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.0
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.0
   Installed JuliaVariables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.3
   Installed StructArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed AutoHashEquals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed NameResolution â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.5
   Installed FixedPointNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed LightGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
   Installed Compose â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1
   Installed PrettyTables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1
   Installed PrettyPrint â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [134e5e36] + Catlab v0.9.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [79e6a3ab] + Adapt v2.3.0
  [ec485272] + ArnoldiMethod v0.0.4
  [15f4f7f2] + AutoHashEquals v0.2.0
  [a603d957] + CanonicalTraits v0.2.3
  [134e5e36] + Catlab v0.9.2
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [34da2185] + Compat v3.22.0
  [a81c6b42] + Compose v0.9.1
  [a8cc5b0e] + Crayons v4.0.4
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [53c48c17] + FixedPointNumbers v0.8.4
  [59287772] + Formatting v0.4.1
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.8
  [d25df0c9] + Inflate v0.1.2
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [b14d175d] + JuliaVariables v0.2.3
  [093fc24a] + LightGraphs v1.3.0
  [9c8b4983] + LightXML v0.9.0
  [d8e11817] + MLStyle v0.4.6
  [1914dd2f] + MacroTools v0.5.6
  [442fdcdd] + Measures v0.3.1
  [71a1bf82] + NameResolution v0.1.5
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [8162dcfd] + PrettyPrint v0.2.0
  [08abe8d2] + PrettyTables v0.9.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [699a6c99] + SimpleTraits v0.9.3
  [90137ffa] + StaticArrays v0.12.4
  [09ab397b] + StructArrays v0.4.4
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [3a884ed6] + UnPack v1.0.2
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mAutoHashEquals[39m
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mPrettyPrint[39m
[32m  âœ“ [39m[90mMeasures[39m
[32m  âœ“ [39m[90mFormatting[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mInflate[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mIterTools[39m
[32m  âœ“ [39m[90mNameResolution[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mFunctionWrappers[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mCrayons[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mStructArrays[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mFixedPointNumbers[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mLightXML[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mPrettyTables[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mArnoldiMethod[39m
[32m  âœ“ [39m[90mSimpleTraits[39m
[32m  âœ“ [39m[90mLightGraphs[39m
[32m  âœ“ [39m[90mColorTypes[39m
[32m  âœ“ [39m[90mColors[39m
[32m  âœ“ [39m[90mCompose[39m
[32m  âœ“ [39m[90mMLStyle[39m
[32m  âœ“ [39m[90mJuliaVariables[39m
[32m  âœ“ [39m[90mCanonicalTraits[39m
[32m  âœ“ [39m[90mGeneralizedGenerated[39m
[32m  âœ“ [39mCatlab
45 dependencies successfully precompiled
Starting tests at 2020-10-26T20:39:51.654
     Testing Catlab
Status `/tmp/jl_xrqLVY/Project.toml`
  [134e5e36] Catlab v0.9.2
  [34da2185] Compat v3.22.0
  [a81c6b42] Compose v0.9.1
  [864edb3b] DataStructures v0.18.8
  [42fd0dbc] IterativeSolvers v0.8.4
  [682c06a0] JSON v0.21.1
  [093fc24a] LightGraphs v1.3.0
  [9c8b4983] LightXML v0.9.0
  [7a12625a] LinearMaps v2.7.0
  [5c8ed15e] LinearOperators v1.1.0
  [90137ffa] StaticArrays v0.12.4
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_xrqLVY/Manifest.toml`
  [79e6a3ab] Adapt v2.3.0
  [ec485272] ArnoldiMethod v0.0.4
  [15f4f7f2] AutoHashEquals v0.2.0
  [a603d957] CanonicalTraits v0.2.3
  [134e5e36] Catlab v0.9.2
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [34da2185] Compat v3.22.0
  [a81c6b42] Compose v0.9.1
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [9aa1b823] FastClosures v0.3.2
  [53c48c17] FixedPointNumbers v0.8.4
  [59287772] Formatting v0.4.1
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.8
  [d25df0c9] Inflate v0.1.2
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [b14d175d] JuliaVariables v0.2.3
  [093fc24a] LightGraphs v1.3.0
  [9c8b4983] LightXML v0.9.0
  [7a12625a] LinearMaps v2.7.0
  [5c8ed15e] LinearOperators v1.1.0
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.6
  [442fdcdd] Measures v0.3.1
  [71a1bf82] NameResolution v0.1.5
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [8162dcfd] PrettyPrint v0.2.0
  [08abe8d2] PrettyTables v0.9.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [699a6c99] SimpleTraits v0.9.3
  [90137ffa] StaticArrays v0.12.4
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [3a884ed6] UnPack v1.0.2
  [94ce4f54] Libiconv_jll v1.16.0+7
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Test Summary: | Pass  Total
Core          |  148    148
Test Summary: | Pass  Total
Theories      |  219    219
FreeDiagrams: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FreeDiagrams.jl:50
  Test threw exception
  Expression: legs(Span(id(A), f)) == [id(A), f]
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multispan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.Theories.FreeCategory.Hom{:id}, ::Catlab.Theories.FreeCategory.Hom{:generator})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:76
    [7] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FreeDiagrams.jl:50
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [10] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:6 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:6
FreeDiagrams: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FreeDiagrams.jl:78
  Test threw exception
  Expression: legs(Cospan(f, id(A))) == [f, id(A)]
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.Theories.FreeCategory.Hom{:generator}, ::Catlab.Theories.FreeCategory.Hom{:id})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:116
    [7] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FreeDiagrams.jl:78
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [10] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:6 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:6
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:17
  Test threw exception
  Expression: map(FinFunction(rot3, 3, 3), 1:3) == [2, 3, 1]
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] _collect(c::UnitRange{Int64}, itr::Base.Generator{UnitRange{Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
    [8] collect_similar
      @ ./array.jl:628 [inlined]
    [9] map(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}, A::UnitRange{Int64})
      @ Base ./abstractarray.jl:2238
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:17
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:50
  Test threw exception
  Expression: force(proj1(lim)) == FinFunction([1, 2, 1, 2, 1, 2])
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:50
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:51
  Test threw exception
  Expression: force(proj2(lim)) == FinFunction([1, 1, 2, 2, 3, 3])
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:51
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:55
  Test threw exception
  Expression: force(pair(lim, f, g) â‹… proj1(lim)) == f
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:55
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:56
  Test threw exception
  Expression: force(pair(lim, f, g) â‹… proj2(lim)) == g
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:56
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:61
  Test threw exception
  Expression: force.(legs(lim)) == [FinFunction([1, 2, 1, 2, 1, 2]), FinFunction([1, 1, 2, 2, 3, 3])]
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116 [inlined]
   [10] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [11] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [12] getindex
      @ ./broadcast.jl:575 [inlined]
   [13] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [14] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [15] copyto!
      @ ./broadcast.jl:931 [inlined]
   [16] copyto!
      @ ./broadcast.jl:886 [inlined]
   [17] copy
      @ ./broadcast.jl:862 [inlined]
   [18] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Catlab.CategoricalAlgebra.FinSets.force), Tuple{Vector{Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [19] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:61
   [20] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [21] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [22] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [24] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:66
  Test threw exception
  Expression: force(pair(lim, [f, g]) â‹… first(legs(lim))) == f
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:66
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:67
  Test threw exception
  Expression: force(pair(lim, [f, g]) â‹… last(legs(lim))) == g
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:67
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
FinSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:17
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:18 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [7] (Catlab.CategoricalAlgebra.FreeDiagrams.ParallelPair{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(first::Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, last::Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:165
    [8] equalizer(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, g::Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}})
      @ Catlab.CategoricalAlgebra.Limits ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/Limits.jl:188
    [9] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:85
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [11] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [12] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:18
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [22] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinSets.jl:1
FinRelations: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:16
  Test threw exception
  Expression: map(id(FinRel(3)), [1, 1], [1, 2]) == [true, false]
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinRelationCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinRelations.jl:81 [inlined]
    [6] #6
      @ ./generator.jl:36 [inlined]
    [7] iterate
      @ ./generator.jl:47 [inlined]
    [8] collect(itr::Base.Generator{Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Int64}}}, Base.var"#6#7"{Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64}}})
      @ Base ./array.jl:686
    [9] map(::Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64}, ::Vector{Int64}, ::Vector{Int64})
      @ Base ./abstractarray.jl:2327
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:16
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22
FinRelations: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:17
  Test threw exception
  Expression: map(FinRelation(((x, y)->begin
                    2x == y
                end), 3, 6), [1, 1], [2, 1]) == [true, false]
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinRelationCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinRelations.jl:81 [inlined]
    [6] #6
      @ ./generator.jl:36 [inlined]
    [7] iterate
      @ ./generator.jl:47 [inlined]
    [8] collect(itr::Base.Generator{Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Int64}}}, Base.var"#6#7"{Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64}}})
      @ Base ./array.jl:686
    [9] map(::Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64}, ::Vector{Int64}, ::Vector{Int64})
      @ Base ./abstractarray.jl:2327
   [10] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:17
   [11] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [12] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [13] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22
FinRelations: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:21
  Got exception outside of a @test
  LoadError: Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinRelationCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinRelations.jl:81 [inlined]
    [6] force(#unused#::Type{Matrix{Catlab.CategoricalAlgebra.FinRelations.BoolRig}}, R::Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinRelations ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinRelations.jl:106
    [7] force(R::Catlab.CategoricalAlgebra.FinRelations.FinRelationCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinRelations ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinRelations.jl:113
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:24
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:22
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/FinRelations.jl:1
PredicatedSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:12
  Test threw exception
  Expression: plus_one_to_odd(1) == 2
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] PredicatedSet
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:16 [inlined]
    [6] (::Catlab.CategoricalAlgebra.PredicatedSets.PredicatedHom{Int64, Int64})(x::Int64)
      @ Catlab.CategoricalAlgebra.PredicatedSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:30
    [7] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:12
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [10] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
PredicatedSets: Test Failed at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:13
  Expression: plus_one_to_odd(2) == 3
    Expected: AssertionError
      Thrown: ErrorException
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:13
 [2] include(mod::Module, _path::String)
   @ Base ./Base.jl:389
 [3] include(x::String)
   @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
 [4] macro expansion
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
 [5] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [6] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
PredicatedSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:14
  Test threw exception
  Expression: plus_one_to_even(2) == 3
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] PredicatedSet
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:16 [inlined]
    [6] (::Catlab.CategoricalAlgebra.PredicatedSets.PredicatedHom{Int64, Int64})(x::Int64)
      @ Catlab.CategoricalAlgebra.PredicatedSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:30
    [7] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:14
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [10] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
PredicatedSets: Test Failed at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:15
  Expression: plus_one_to_even(3) == 4
    Expected: AssertionError
      Thrown: ErrorException
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:15
 [2] include(mod::Module, _path::String)
   @ Base ./Base.jl:389
 [3] include(x::String)
   @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
 [4] macro expansion
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
 [5] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [6] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
PredicatedSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:17
  Test threw exception
  Expression: (compose(plus_one_to_odd, plus_one_to_even))(3) == 5
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] PredicatedSet
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:16 [inlined]
    [6] (::Catlab.CategoricalAlgebra.PredicatedSets.PredicatedHom{Int64, Int64})(x::Int64)
      @ Catlab.CategoricalAlgebra.PredicatedSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/PredicatedSets.jl:30
    [7] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:17
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [10] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
PredicatedSets: Test Failed at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:21
  Expression: plus_two(3)
    Expected: AssertionError
      Thrown: ErrorException
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/PredicatedSets.jl:21
 [2] include(mod::Module, _path::String)
   @ Base ./Base.jl:389
 [3] include(x::String)
   @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
 [4] macro expansion
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30 [inlined]
 [5] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [6] top-level scope
   @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:30
CSets: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:33
  Got exception outside of a @test
  LoadError: Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] FinFunctionCallable
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:83 [inlined]
    [6] iterate
      @ ./generator.jl:47 [inlined]
    [7] collect(itr::Base.Generator{Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64}})
      @ Base ./array.jl:686
    [8] map
      @ ./abstractarray.jl:2267 [inlined]
    [9] force
      @ ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:116 [inlined]
   [10] collect(f::Catlab.CategoricalAlgebra.FinSets.FinFunctionCallable{Int64, Int64})
      @ Catlab.CategoricalAlgebra.FinSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FinSets.jl:119
   [11] limit(diagram::Catlab.CategoricalAlgebra.FreeDiagrams.ObjectPair{Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, StaticArrays.SVector{2, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}})
      @ Catlab.CategoricalAlgebra.CSets ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/CSets.jl:151
   [12] product(A::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, B::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}})
      @ Catlab.CategoricalAlgebra.Limits ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/Limits.jl:172
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CSets.jl:51
   [14] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [15] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [16] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:35 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:34
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/runtests.jl:12
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CSets.jl:1
â”Œ Warning: `find_root` is deprecated, use `find_root!` instead.
â”‚   caller = #30 at none:0 [inlined]
â”” @ Core ./none:0
â”Œ Warning: `find_root` is deprecated, use `find_root!` instead.
â”‚   caller = #30 at none:0 [inlined]
â”” @ Core ./none:0
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:45
  Test threw exception
  Expression: compose(g, id(codom(g))) == g
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multispan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:76
    [7] pushout(f::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, g::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.Limits ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/Limits.jl:214
    [8] compose(M::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospan{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}}, N::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospan{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:116
    [9] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:45
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [11] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [12] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:46
  Test threw exception
  Expression: compose(id(dom(g)), g) == g
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multispan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:76
    [7] pushout(f::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, g::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.Limits ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/Limits.jl:214
    [8] compose(M::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospan{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}}, N::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospan{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}}, StaticArrays.SVector{2, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:116
    [9] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:46
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [11] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [12] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:54
  Test threw exception
  Expression: dom(braid(a, b)) == a âŠ— b
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] braid(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}, b::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:138
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:54
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:55
  Test threw exception
  Expression: codom(braid(b, a)) == b âŠ— a
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] braid(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}, b::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:138
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:55
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:56
  Test threw exception
  Expression: force(braid(a, b) â‹… braid(b, a)) == force(id(a âŠ— b))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] braid(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}}, b::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:138
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:56
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:66
  Test threw exception
  Expression: compose(create(a), mcopy(a)) == dunit(a)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] create(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:152
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:66
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:67
  Test threw exception
  Expression: compose(mmerge(a), delete(a)) == dcounit(a)
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.CSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{Vector{NamedTuple{(), Tuple{}}}, StructArrays.StructVector{NamedTuple{(:src, :tgt), Tuple{Int64, Int64}}, NamedTuple{(:src, :tgt), Tuple{Vector{Int64}, Vector{Int64}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] mmerge(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.FinSetDiscreteACSet{:V, Catlab.CSetDataStructures.CSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CategoricalAlgebra.FinSets.FinSet{Int64, Int64}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:146
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:67
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:156
  Test threw exception
  Expression: dom(braid(a, b)) == a âŠ— b
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.ACSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.ACSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] braid(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.DiscreteACSet{Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), NamedTuple{(:V,), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}}}, NamedTuple{(), Tuple{}}}}, b::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.DiscreteACSet{Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), NamedTuple{(:V,), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}}}, NamedTuple{(), Tuple{}}}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:138
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:156
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
StructuredCospans: Error During Test at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:157
  Test threw exception
  Expression: codom(braid(a, b)) == b âŠ— a
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] (Catlab.CategoricalAlgebra.FreeDiagrams.Multicospan{Ob, var"#s127"} where var"#s127"<:(StaticArrays.StaticVector{2, T} where T) where Ob)(::Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}, ::Catlab.CategoricalAlgebra.CSets.ACSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}, Catlab.CategoricalAlgebra.FinSets.FinFunctionIdentity{Int64, Int64}}}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}, ::Catlab.CategoricalAlgebra.CSets.ACSetTransformation{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, NamedTuple{(:V, :E), Tuple{Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}, Catlab.CategoricalAlgebra.FinSets.FinFunctionVector{Vector{Int64}}}}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), NamedTuple{(:V, :E), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}, StructArrays.StructVector{NamedTuple{(:src, :tgt, :elabel), Tuple{Int64, Int64, Symbol}}, NamedTuple{(:src, :tgt, :elabel), Tuple{Vector{Int64}, Vector{Int64}, Vector{Symbol}}}, Int64}}}, NamedTuple{(:src, :tgt), Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}})
      @ Catlab.CategoricalAlgebra.FreeDiagrams ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/FreeDiagrams.jl:113
    [7] braid(a::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.DiscreteACSet{Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), NamedTuple{(:V,), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}}}, NamedTuple{(), Tuple{}}}}, b::Catlab.CategoricalAlgebra.StructuredCospans.StructuredCospanOb{Catlab.CategoricalAlgebra.StructuredCospans.DiscreteACSet{Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V, :E), (:src, :tgt), (2, 2), (1, 1)}, (:Label,), (:vlabel, :elabel), (1, 2), (1, 1)}, Tuple{Symbol}, (:src, :tgt), (), Tables, Indices} where Indices<:NamedTuple where Tables<:NamedTuple}, Catlab.CSetDataStructures.AttributedCSet{Catlab.Theories.CatDesc{(:V,), (), (), ()}, Catlab.Theories.AttrDesc{Catlab.Theories.CatDesc{(:V,), (), (), ()}, (:Label,), (:vlabel,), (1,), (1,)}, Tuple{Symbol}, (), (), NamedTuple{(:V,), Tuple{StructArrays.StructVector{NamedTuple{(:vlabel,), Tuple{Symbol}}, NamedTuple{(:vlabel,), Tuple{Vector{Symbol}}}, Int64}}}, NamedTuple{(), Tuple{}}}})
      @ Catlab.CategoricalAlgebra.StructuredCospans ~/.julia/packages/Catlab/Qx8VY/src/categorical_algebra/StructuredCospans.jl:138
    [8] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/StructuredCospans.jl:157
    [9] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [10] include(x::String)
      @ Main.TestCategoricalAlgebra ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:1
   [11] macro expansion
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/Catlab/Qx8VY/test/categorical_algebra/CategoricalAlgebra.jl:39
Test Summary:       | Pass  Fail  Error  Total
CategoricalAlgebra  |  342     3     27    372
  FreeDiagrams      |   65            2     67
  Limits            |   10                  10
  Matrices          |   19                  19
  FinSets           |   26            9     35
  FinRelations      |    3            3      6
  Permutations      |   35                  35
  PredicatedSets    |          3      3      6
  CSets             |  131            1    132
  StructuredCospans |   39            9     48
  Squares           |   14                  14
ERROR: LoadError: Some tests did not pass: 342 passed, 3 failed, 27 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Catlab/Qx8VY/test/runtests.jl:11
ERROR: Package Catlab errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
