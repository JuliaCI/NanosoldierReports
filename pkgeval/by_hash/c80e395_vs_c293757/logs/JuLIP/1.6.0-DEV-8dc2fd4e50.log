Current time is 2020-10-26T22:47:05.915
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T22:47:08.085
   Resolving package versions...
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed GitHub â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.1.7
   Installed JuLIP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
   Installed PositiveFactorizations â”€â”€â”€â”€â”€â”€â”€ v0.2.3
   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
   Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed AlgebraicMultigrid â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed FunctionWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
   Installed Optim â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.0
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed Dierckx â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.2
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.7
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.33.2
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed MbedTLS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.16.8+0
   Installed NLSolversBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.7.1
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed LineSearches â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.1.0
   Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed CompatHelper â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.2
   Installed IterativeSolvers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.4
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.10
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed NeighbourLists â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed FiniteDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.0
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [945c410c] + JuLIP v0.8.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [2169fc97] + AlgebraicMultigrid v0.3.0
  [4fba245c] + ArrayInterface v2.13.6
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.22.0
  [aa819f21] + CompatHelper v1.16.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [39dd38d3] + Dierckx v0.4.2
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.9.7
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [bc5e4493] + GitHub v5.1.7
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [945c410c] + JuLIP v0.8.2
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.2
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.1
  [77ba4419] + NaNMath v0.3.4
  [2fcf5ba9] + NeighbourLists v0.5.0
  [429524aa] + Optim v1.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [85a6dd25] + PositiveFactorizations v0.2.3
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.2
  [f269a46b] + TimeZones v1.4.0
  [3a884ed6] + UnPack v1.0.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building Dierckx â”€â”€â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/956bfe5c4f9b794545f6527424fc0294cc5decbe/build.log`
    Building TimeZones â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mPositiveFactorizations[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mDierckx[39m
[32m  âœ“ [39m[90mFunctionWrappers[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mCalculus[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mFillArrays[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mIterativeSolvers[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mHTTP[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39m[90mNeighbourLists[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFiniteDiff[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mGitHub[39m
[32m  âœ“ [39m[90mCompatHelper[39m
[32m  âœ“ [39m[90mAlgebraicMultigrid[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mNLSolversBase[39m
[32m  âœ“ [39m[90mLineSearches[39m
[32m  âœ“ [39m[90mOptim[39m
[32m  âœ“ [39mJuLIP
49 dependencies successfully precompiled (4 already precompiled)
Starting tests at 2020-10-26T22:48:41.917
     Testing JuLIP
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25hStatus `/tmp/jl_4lidcZ/Project.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [39dd38d3] Dierckx v0.4.2
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [682c06a0] JSON v0.21.1
  [945c410c] JuLIP v0.8.2
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.6
  [2fcf5ba9] NeighbourLists v0.5.0
  [429524aa] Optim v1.2.0
  [189a3867] Reexport v0.2.0
  [90137ffa] StaticArrays v0.12.4
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_4lidcZ/Manifest.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [4fba245c] ArrayInterface v2.13.6
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.22.0
  [aa819f21] CompatHelper v1.16.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [39dd38d3] Dierckx v0.4.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [945c410c] JuLIP v0.8.2
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.2
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.1
  [77ba4419] NaNMath v0.3.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [429524aa] Optim v1.2.0
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [85a6dd25] PositiveFactorizations v0.2.3
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [f269a46b] TimeZones v1.4.0
  [3a884ed6] UnPack v1.0.2
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡
     JuLIP Tests     
â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡
[ Info: preparing the tests...
[ Info: Loading some interatomic potentials . .
 . . done.
[ Info: on CI : don't run solver tests
=======================
 Testset Miscellaneous 
=======================
==========
 Test Aux 
==========
--------------------------
matrix <-> vec conversions
--------------------------
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Atoms 
===============
check that `bulk` evaluates ok...
Atoms: Error During Test at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:43 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:40 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:5 [inlined]
    [7] _auto_cell(cell::StaticArrays.SMatrix{3, 3, Float64, 9})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:30
    [8] Atoms(X::Vector{StaticArrays.SVector{3, Float64}}, P::Vector{StaticArrays.SVector{3, Float64}}, M::Vector{Float64}, Z::Vector{UInt16}, cell::StaticArrays.SMatrix{3, 3, Float64, 9}, pbc::Tuple{Bool, Bool, Bool}, calc::Nothing)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:80
    [9] bulk(sym::Symbol; T::Type{Float64}, cubic::Bool, pbc::Tuple{Bool, Bool, Bool})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:158
   [10] bulk(sym::Symbol)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:149
   [11] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/test_atoms.jl:8
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:59
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/test_atoms.jl:8
===============
 Testset Build 
===============
=================
 Testset File IO 
=================
Testing single `Atoms` <-> `Dict`
File IO: Error During Test at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:43 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:40 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:5 [inlined]
    [7] _auto_cell(cell::StaticArrays.SMatrix{3, 3, Float64, 9})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:30
    [8] Atoms(X::Vector{StaticArrays.SVector{3, Float64}}, P::Vector{StaticArrays.SVector{3, Float64}}, M::Vector{Float64}, Z::Vector{UInt16}, cell::StaticArrays.SMatrix{3, 3, Float64, 9}, pbc::Tuple{Bool, Bool, Bool}, calc::Nothing)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:80
    [9] bulk(sym::Symbol; T::Type{Float64}, cubic::Bool, pbc::Tuple{Bool, Bool, Bool})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:158
   [10] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/test_fio.jl:7
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:59
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] top-level scope
      @ none:6
   [19] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [20] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [21] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/test_fio.jl:7
============================
 Testset Analytic Potential 
============================
generate hand-coded morse potential
generate AD morse potential
typeof(morse1) = AnalyticFunction{var"#1#4"{Float64, Float64, Float64}, var"#2#5"{Float64, Float64, Float64}, var"#3#6"{Float64, Float64, Float64}}
Check consistency of hand-coded and analytic Morse potentials...
Test Passed
Test Passed
------------------------------------------
Performance tests: @analytic vs hand-coded
------------------------------------------
Evaluations of @analytic Potential
  48.609 Î¼s (1000 allocations: 109.38 KiB)
Evaluations hand-coded Potential
  50.059 Î¼s (1000 allocations: 109.38 KiB)
Grad of @analytic Potential
  79.819 Î¼s (2000 allocations: 218.75 KiB)
Grad of hand-coded Potential
  82.089 Î¼s (2000 allocations: 218.75 KiB)
====================
 Testset Potentials 
====================
--------------------------------------
Testing pair potential implementations
--------------------------------------
AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}(JuLIP.Potentials.var"#16#19"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64, Float64}(1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
AnalyticFunction{JuLIP.Potentials.var"#25#28"{Float64, Float64, Float64}, JuLIP.Potentials.var"#26#29"{Float64, Float64, Float64}, JuLIP.Potentials.var"#27#30"{Float64, Float64, Float64}}(JuLIP.Potentials.var"#25#28"{Float64, Float64, Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#26#29"{Float64, Float64, Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#27#30"{Float64, Float64, Float64}(4.0, 1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.19e+00  
 1.0e-03 | 1.23e-01  
 1.0e-04 | 1.23e-02  
 1.0e-05 | 1.23e-03  
 1.0e-06 | 1.23e-04  
 1.0e-07 | 1.23e-05  
 1.0e-08 | 1.13e-06  
 1.0e-09 | 3.33e-07  
 1.0e-10 | 4.64e-06  
 1.0e-11 | 3.61e-05  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SWCutoff{Float64}, AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}}(SWCutoff{Float64}(1.0, 3.0, 1.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}(JuLIP.Potentials.var"#16#19"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64, Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 7.17e-04  
 1.0e-03 | 8.77e-05  
 1.0e-04 | 8.96e-06  
 1.0e-05 | 8.98e-07  
 1.0e-06 | 8.98e-08  
 1.0e-07 | 8.98e-09  
 1.0e-08 | 8.85e-10  
 1.0e-09 | 1.34e-10  
 1.0e-10 | 4.96e-10  
 1.0e-11 | 9.95e-10  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SplineCutoff, AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}}(SplineCutoff(2.0, 3.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}(JuLIP.Potentials.var"#16#19"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64, Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
C2Shift{AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}, Float64}(Val{2}(), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64, Float64}, JuLIP.Potentials.var"#17#20"{Float64, Float64}, JuLIP.Potentials.var"#18#21"{Float64, Float64}}(JuLIP.Potentials.var"#16#19"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64, Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64, Float64}(1.0, 1.0)), 2.0, -0.0615234375, 0.181640625, -0.6181640625)
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.84e-05  
 1.0e-09 | 2.90e-05  
 1.0e-10 | 4.62e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
ZBLPotential{AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}, JuLIP.Potentials.var"#34#37"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}, JuLIP.Potentials.var"#35#38"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}}}(5, 8, AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}, JuLIP.Potentials.var"#34#37"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}, JuLIP.Potentials.var"#35#38"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}}(JuLIP.Potentials.var"#33#36"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274), JuLIP.Potentials.var"#34#37"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274), JuLIP.Potentials.var"#35#38"{Float64, Float64, Float64, Float64, Float64, Float64, Float64, Float64}(1.3176385984042092, 6.158783984505388, 20.9148983873684, 0.02817, 0.2802, 0.5099, 0.1818, 575.985814118274)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 3.84e+00  
 1.0e-03 | 3.90e-01  
 1.0e-04 | 3.91e-02  
 1.0e-05 | 3.91e-03  
 1.0e-06 | 3.91e-04  
 1.0e-07 | 3.92e-05  
 1.0e-08 | 3.01e-06  
 1.0e-09 | 2.23e-05  
 1.0e-10 | 2.15e-04  
 1.0e-11 | 1.27e-03  
---------|----------- 
passed
Test Passed
-----------------------
testing shift-cutoffs: 
-----------------------
HS
Test Passed
Test Passed
V0
Test Passed
Test Passed
V1
Test Passed
Test Passed
V2
Test Passed
Test Passed
Potentials: Error During Test at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:43 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:40 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:5 [inlined]
    [7] _auto_cell(cell::StaticArrays.SMatrix{3, 3, Float64, 9})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:30
    [8] Atoms(X::Vector{StaticArrays.SVector{3, Float64}}, P::Vector{StaticArrays.SVector{3, Float64}}, M::Vector{Float64}, Z::Vector{UInt16}, cell::StaticArrays.SMatrix{3, 3, Float64, 9}, pbc::Tuple{Bool, Bool, Bool}, calc::Nothing)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:80
    [9] bulk(sym::Symbol; T::Type{Float64}, cubic::Bool, pbc::Tuple{Bool, Bool, Bool})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:158
   [10] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/testpotentials.jl:57
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:59
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] top-level scope
      @ none:6
   [19] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [20] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [21] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/testpotentials.jl:57
=======================
 Testset AD Potentials 
=======================
Test Passed
Test Passed
Test Passed
Timing for      f:   345.953 ns (0 allocations: 0 bytes)
Timing for      V:   482.567 ns (2 allocations: 832 bytes)
Timing for    f_d:   1.166 Î¼s (2 allocations: 1.59 KiB)
Timing for   f_fd:   10.450 Î¼s (8 allocations: 14.81 KiB)
Timing for   @D V:   10.880 Î¼s (12 allocations: 16.44 KiB)
=======================
 Testset Variable Cell 
=======================
Variable Cell: Error During Test at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:43 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:40 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:5 [inlined]
    [7] _auto_cell(cell::SMatrix{3, 3, Float64, 9})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:30
    [8] Atoms(X::Vector{SVector{3, Float64}}, P::Vector{SVector{3, Float64}}, M::Vector{Float64}, Z::Vector{UInt16}, cell::SMatrix{3, 3, Float64, 9}, pbc::Tuple{Bool, Bool, Bool}, calc::Nothing)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:80
    [9] bulk(sym::Symbol; T::Type{Float64}, cubic::Bool, pbc::Tuple{Bool, Bool, Bool})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:158
   [10] bulk(sym::Symbol)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:149
   [11] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/testvarcell.jl:7
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:59
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/testvarcell.jl:7
=================
 Testset Hessian 
=================
------------------------------
Testing pair potential hessian
------------------------------
Hessian: Error During Test at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61
  Got exception outside of a @test
  LoadError: TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:43 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SMatrix.jl:40 [inlined]
    [6] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:5 [inlined]
    [7] _auto_cell(cell::SMatrix{3, 3, Float64, 9})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:30
    [8] Atoms(X::Vector{SVector{3, Float64}}, P::Vector{SVector{3, Float64}}, M::Vector{Float64}, Z::Vector{UInt16}, cell::SMatrix{3, 3, Float64, 9}, pbc::Tuple{Bool, Bool, Bool}, calc::Nothing)
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:80
    [9] bulk(sym::Symbol; T::Type{Float64}, cubic::Bool, pbc::Tuple{Bool, Bool, Bool})
      @ JuLIP.Build ~/.julia/packages/JuLIP/WO5HB/src/build.jl:158
   [10] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/testhessian.jl:8
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:61 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/JuLIP/WO5HB/test/runtests.jl:59
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] top-level scope
      @ none:6
   [19] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [20] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [21] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/testhessian.jl:8
Test Summary:        | Pass  Error  Total
JuLIP                |   24      5     29
  Miscellaneous      |    5             5
  Atoms              |           1      1
  Build              |              No tests
  File IO            |           1      1
  Analytic Potential |    2             2
  Potentials         |   14      1     15
  AD Potentials      |    3             3
  Variable Cell      |           1      1
  Hessian            |           1      1
ERROR: LoadError: Some tests did not pass: 24 passed, 0 failed, 5 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/JuLIP/WO5HB/test/runtests.jl:58
ERROR: Package JuLIP errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
