Current time is 2020-10-26T20:42:43.175
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T20:42:44.742
   Resolving package versions...
   Installed SetRounding ──────────────── v0.2.0
   Installed Requires ─────────────────── v1.1.0
   Installed OrderedCollections ───────── v1.3.1
   Installed DataStructures ───────────── v0.15.0
   Installed StaticArrays ─────────────── v0.10.3
   Installed ErrorfreeArithmetic ──────── v0.5.2
   Installed FastRounding ─────────────── v0.2.0
   Installed IntervalArithmetic ───────── v0.15.2
   Installed CRlibm ───────────────────── v0.8.0
   Installed CurveProximityQueries ────── v0.1.5
   Installed RecipesBase ──────────────── v0.6.0
   Installed ConvexBodyProximityQueries ─ v0.1.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [e79eea86] + CurveProximityQueries v0.1.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [96374032] + CRlibm v0.8.0
  [e9983d58] + ConvexBodyProximityQueries v0.1.8
  [e79eea86] + CurveProximityQueries v0.1.5
  [864edb3b] + DataStructures v0.15.0
  [90fa49ef] + ErrorfreeArithmetic v0.5.2
  [fa42c844] + FastRounding v0.2.0
  [d1acc4aa] + IntervalArithmetic v0.15.2
  [bac558e1] + OrderedCollections v1.3.1
  [3cdcf5f2] + RecipesBase v0.6.0
  [ae029012] + Requires v1.1.0
  [3cc68bcd] + SetRounding v0.2.0
  [90137ffa] + StaticArrays v0.10.3
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
    Building CRlibm → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/9d1c22cff9c04207f336b8e64840d0bd40d86e0e/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  ✓ [39m[90mSetRounding[39m
[32m  ✓ [39m[90mRequires[39m
[32m  ✓ [39m[90mRecipesBase[39m
[32m  ✓ [39m[90mOrderedCollections[39m
[32m  ✓ [39m[90mErrorfreeArithmetic[39m
[32m  ✓ [39m[90mCRlibm[39m
[32m  ✓ [39m[90mFastRounding[39m
[32m  ✓ [39m[90mDataStructures[39m
[32m  ✓ [39m[90mStaticArrays[39m
[32m  ✓ [39m[90mConvexBodyProximityQueries[39m
[32m  ✓ [39m[90mIntervalArithmetic[39m
[32m  ✓ [39mCurveProximityQueries
12 dependencies successfully precompiled
Starting tests at 2020-10-26T20:43:23.624
     Testing CurveProximityQueries
Status `/tmp/jl_DfbcMW/Project.toml`
  [e9983d58] ConvexBodyProximityQueries v0.1.8
  [e79eea86] CurveProximityQueries v0.1.5
  [864edb3b] DataStructures v0.15.0
  [d1acc4aa] IntervalArithmetic v0.15.2
  [3cdcf5f2] RecipesBase v0.6.0
  [90137ffa] StaticArrays v0.10.3
  [1986cc42] Unitful v1.5.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_DfbcMW/Manifest.toml`
  [96374032] CRlibm v0.8.0
  [187b0558] ConstructionBase v1.0.0
  [e9983d58] ConvexBodyProximityQueries v0.1.8
  [e79eea86] CurveProximityQueries v0.1.5
  [864edb3b] DataStructures v0.15.0
  [90fa49ef] ErrorfreeArithmetic v0.5.2
  [fa42c844] FastRounding v0.2.0
  [d1acc4aa] IntervalArithmetic v0.15.2
  [bac558e1] OrderedCollections v1.3.1
  [3cdcf5f2] RecipesBase v0.6.0
  [ae029012] Requires v1.1.0
  [3cc68bcd] SetRounding v0.2.0
  [90137ffa] StaticArrays v0.10.3
  [1986cc42] Unitful v1.5.0
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
     Testing Running tests...
WARNING: both DataStructures and Base export "peek"; uses of it in module CurveProximityQueries must be qualified
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:63
  Test threw exception
  Expression: abs(minimum_distance(obs, c) - 0.3683522584741768) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] minimum_distance(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [14] minimum_distance(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:63 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:64
  Test threw exception
  Expression: tolerance_verification(obs, c, 0.3) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] tolerance_verification(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:64 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:65
  Test threw exception
  Expression: tolerance_verification(obs, c, 0.4) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] tolerance_verification(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:65 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:66
  Test threw exception
  Expression: collision_detection(obs, c) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] collision_detection(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [14] collision_detection(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:66 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:67
  Test threw exception
  Expression: abs(minimum_distance(c, obs) - 0.3683522584741768) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] minimum_distance(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] minimum_distance(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:67 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:68
  Test threw exception
  Expression: tolerance_verification(c, obs, 0.3) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:68 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:69
  Test threw exception
  Expression: tolerance_verification(c, obs, 0.4) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:69 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:70
  Test threw exception
  Expression: collision_detection(c, obs) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{2, 1, Float64}, b::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] collision_detection(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] collision_detection(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{2, 1, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:70 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:75
  Test threw exception
  Expression: abs(minimum_distance(obs, c) - 0.511627527056288) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] minimum_distance(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [14] minimum_distance(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:75 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:76
  Test threw exception
  Expression: tolerance_verification(obs, c, 0.5) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] tolerance_verification(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:76 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:77
  Test threw exception
  Expression: tolerance_verification(obs, c, 0.6) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] tolerance_verification(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:77 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:78
  Test threw exception
  Expression: collision_detection(obs, c) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] collision_detection(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [14] collision_detection(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:78 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:79
  Test threw exception
  Expression: abs(minimum_distance(c, obs) - 0.511627527056288) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] minimum_distance(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] minimum_distance(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:79 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:80
  Test threw exception
  Expression: tolerance_verification(c, obs, 0.5) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:80 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:81
  Test threw exception
  Expression: tolerance_verification(c, obs, 0.6) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:81 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Polygon: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:82
  Test threw exception
  Expression: collision_detection(c, obs) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:13
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::ConvexPolygon{3, 1, Float64}, b::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:3
   [13] _init
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:18 [inlined]
   [14] collision_detection(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] collision_detection(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::ConvexPolygon{3, 1, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:82 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:60 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:88
  Test threw exception
  Expression: abs(minimum_distance(c, d)) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] minimum_distance(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [14] minimum_distance(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:88 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:89
  Test threw exception
  Expression: tolerance_verification(c, d, 0.3) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:89 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:90
  Test threw exception
  Expression: collision_detection(c, d) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] lowerbound(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] collision_detection(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [14] collision_detection(a::Bernstein{2, 7, 12, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{2, 3, 4, Float64, Float64, SVector{2, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:90 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:96
  Test threw exception
  Expression: abs(minimum_distance(c, d) - 0.137873546917387) ≤ 1.0e-5
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] minimum_distance(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [14] minimum_distance(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:96 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:97
  Test threw exception
  Expression: tolerance_verification(c, d, 0.1) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:97 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:98
  Test threw exception
  Expression: tolerance_verification(c, d, 0.3) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] tolerance_verification(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, Δ::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:98 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Curve - Curve: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:99
  Test threw exception
  Expression: collision_detection(c, d) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] collision_detection(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}; atol::Float64)
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [14] collision_detection(a::Bernstein{3, 11, 20, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64}, b::Bernstein{3, 5, 8, Float64, Float64, SVector{3, Float64}, SVector{1, Float64}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [15] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:99 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:85 [inlined]
   [18] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Dimensionful curves: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:106
  Test threw exception
  Expression: length(CurveProximityQueries.cvxhull(b2, Interval(0.0, 1.0))) == 8
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{2, 2, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{2, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(μm^2,), 𝐋^2, nothing}}, SVector{2, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(μm^2,), 𝐋^2, nothing}}}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:40
   [10] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:106 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:102 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Dimensionful curves: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:110
  Test threw exception
  Expression: length(CurveProximityQueries.cvxhull(b3, Interval(0.0, 1.0))) == 16
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:110 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:102 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Dimensionful curves: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:111
  Test threw exception
  Expression: abs(minimum_distance(b3, c3, atol = 1.0e-8mm) - 2.328cm) ≤ 0.0001cm
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] minimum_distance(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}; atol::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:88
   [14] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:111 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:102 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Dimensionful curves: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:112
  Test threw exception
  Expression: tolerance_verification(b3, c3, 2cm, atol = 1.0e-8mm) == true
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] tolerance_verification(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, Δ::Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}; atol::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:96
   [14] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:112 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:102 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Dimensionful curves: Error During Test at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:113
  Test threw exception
  Expression: collision_detection(b3, c3, atol = 1.0e-8mm) == false
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s10#5
      @ ~/.julia/packages/StaticArrays/VyRz3/src/util.jl:20 [inlined]
    [2] var"#s10#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:35 [inlined]
    [5] SArray
      @ ~/.julia/packages/StaticArrays/VyRz3/src/SMatrix.jl:32 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:172 [inlined]
    [7] _eye
      @ ~/.julia/packages/StaticArrays/VyRz3/src/linalg.jl:168 [inlined]
    [8] (SMatrix{3, 3, T, L} where L where T)(I::UniformScaling{Float64})
      @ StaticArrays ~/.julia/packages/StaticArrays/VyRz3/src/SArray.jl:63
    [9] cvxhull(b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:69
   [10] lowerbound(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}, α::Interval{Float64}, β::Interval{Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:18
   [11] getbounds
      @ ~/.julia/packages/CurveProximityQueries/6vKub/src/bounds.jl:24 [inlined]
   [12] _init(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:11
   [13] collision_detection(a::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(mm^2,), 𝐋^2, nothing}}}, Float64}, b::Bernstein{3, 3, 4, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}, SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(cm,), 𝐋, nothing}}}, SVector{1, Unitful.Quantity{Float64, 𝐋^2, Unitful.FreeUnits{(cm^2,), 𝐋^2, nothing}}}, Float64}; atol::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(mm,), 𝐋, nothing}})
      @ CurveProximityQueries ~/.julia/packages/CurveProximityQueries/6vKub/src/bnb.jl:107
   [14] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:113 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:102 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:13
Test Summary:           | Pass  Error  Total
CurveProximityQueries   |   15     28     43
  Constructors          |    8             8
  Bernstein Polynomials |    4             4
  Curve - Polygon       |          16     16
  Curve - Curve         |           7      7
  Dimensionful curves   |    3      5      8
ERROR: LoadError: Some tests did not pass: 15 passed, 0 failed, 28 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CurveProximityQueries/6vKub/test/runtests.jl:12
ERROR: Package CurveProximityQueries errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
