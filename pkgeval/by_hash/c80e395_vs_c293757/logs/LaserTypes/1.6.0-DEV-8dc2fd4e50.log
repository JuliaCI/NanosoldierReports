Current time is 2020-10-26T21:06:36.835
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T21:06:38.505
   Resolving package versions...
   Installed NaNMath ────────────────────── v0.3.4
   Installed DualNumbers ────────────────── v0.6.2
   Installed ConstructionBase ───────────── v1.0.0
   Installed SpecialFunctions ───────────── v0.10.3
   Installed Unitful ────────────────────── v1.5.0
   Installed Measurements ───────────────── v2.3.0
   Installed LaserTypes ─────────────────── v0.1.1
   Installed OrderedCollections ─────────── v1.3.1
   Installed UnPack ─────────────────────── v1.0.2
   Installed JLLWrappers ────────────────── v1.1.3
   Installed Requires ───────────────────── v1.1.0
   Installed PhysicalConstants ──────────── v0.2.1
   Installed StaticArrays ───────────────── v0.12.4
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed ColorTypes ─────────────────── v0.10.9
   Installed Roots ──────────────────────── v1.0.5
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed Calculus ───────────────────── v0.5.1
   Installed HypergeometricFunctions ────── v0.2.3
   Installed Parameters ─────────────────── v0.12.1
   Installed UnitfulAtomic ──────────────── v1.0.0
   Installed CoordinateTransformations ──── v0.6.0
   Installed FixedPointNumbers ──────────── v0.8.4
   Installed RecipesBase ────────────────── v1.1.0
     Cloning [4d00f742-c7ba-57c2-abde-4428a4b178cb] GeometryTypes from https://github.com/JuliaGeometry/GeometryTypes.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed GeometryTypes ──────────────── v0.8.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [e07c0bfa] + LaserTypes v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [49dc2e85] + Calculus v0.5.1
  [3da002f7] + ColorTypes v0.10.9
  [187b0558] + ConstructionBase v1.0.0
  [150eb455] + CoordinateTransformations v0.6.0
  [fa6b7ba4] + DualNumbers v0.6.2
  [53c48c17] + FixedPointNumbers v0.8.4
  [4d00f742] + GeometryTypes v0.8.3
  [34004b35] + HypergeometricFunctions v0.2.3
  [692b3bcd] + JLLWrappers v1.1.3
  [e07c0bfa] + LaserTypes v0.1.1
  [eff96d63] + Measurements v2.3.0
  [77ba4419] + NaNMath v0.3.4
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [5ad8b20f] + PhysicalConstants v0.2.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [ae029012] + Requires v1.1.0
  [f2b01f46] + Roots v1.0.5
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [3a884ed6] + UnPack v1.0.2
  [1986cc42] + Unitful v1.5.0
  [a7773ee8] + UnitfulAtomic v1.0.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  ✓ [39m[90mUnPack[39m
[32m  ✓ [39m[90mRecipesBase[39m
[32m  ✓ [39m[90mRequires[39m
[32m  ✓ [39m[90mJLLWrappers[39m
[32m  ✓ [39m[90mConstructionBase[39m
[32m  ✓ [39m[90mNaNMath[39m
[32m  ✓ [39m[90mOrderedCollections[39m
[32m  ✓ [39m[90mCalculus[39m
[32m  ✓ [39m[90mParameters[39m
[32m  ✓ [39m[90mCompilerSupportLibraries_jll[39m
[32m  ✓ [39m[90mRoots[39m
[32m  ✓ [39m[90mFixedPointNumbers[39m
[32m  ✓ [39m[90mMeasurements[39m
[32m  ✓ [39m[90mOpenSpecFun_jll[39m
[32m  ✓ [39m[90mStaticArrays[39m
[32m  ✓ [39m[90mSpecialFunctions[39m
[32m  ✓ [39m[90mCoordinateTransformations[39m
[32m  ✓ [39m[90mDualNumbers[39m
[32m  ✓ [39m[90mHypergeometricFunctions[39m
[32m  ✓ [39m[90mColorTypes[39m
[32m  ✓ [39m[90mGeometryTypes[39m
[32m  ✓ [39m[90mUnitful[39m
[32m  ✓ [39m[90mUnitfulAtomic[39m
[32m  ✓ [39m[90mPhysicalConstants[39m
[32m  ✓ [39mLaserTypes
25 dependencies successfully precompiled
Starting tests at 2020-10-26T21:09:50.618
     Testing LaserTypes
Status `/tmp/jl_PRVxsZ/Project.toml`
  [150eb455] CoordinateTransformations v0.6.0
  [4d00f742] GeometryTypes v0.8.3
  [34004b35] HypergeometricFunctions v0.2.3
  [e07c0bfa] LaserTypes v0.1.1
  [d96e819e] Parameters v0.12.1
  [5ad8b20f] PhysicalConstants v0.2.1
  [1bc83da4] SafeTestsets v0.0.1
  [90137ffa] StaticArrays v0.12.4
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_PRVxsZ/Manifest.toml`
  [49dc2e85] Calculus v0.5.1
  [3da002f7] ColorTypes v0.10.9
  [187b0558] ConstructionBase v1.0.0
  [150eb455] CoordinateTransformations v0.6.0
  [fa6b7ba4] DualNumbers v0.6.2
  [53c48c17] FixedPointNumbers v0.8.4
  [4d00f742] GeometryTypes v0.8.3
  [34004b35] HypergeometricFunctions v0.2.3
  [692b3bcd] JLLWrappers v1.1.3
  [e07c0bfa] LaserTypes v0.1.1
  [eff96d63] Measurements v2.3.0
  [77ba4419] NaNMath v0.3.4
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [5ad8b20f] PhysicalConstants v0.2.1
  [3cdcf5f2] RecipesBase v1.1.0
  [ae029012] Requires v1.1.0
  [f2b01f46] Roots v1.0.5
  [1bc83da4] SafeTestsets v0.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15
  Test threw exception
  Expression: all(dimension.(E(xᵢ, tᵢ, s)) .== Ref(dimension(u"V/m")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E
      @ ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6 [inlined]
    [8] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16
  Test threw exception
  Expression: all(dimension.(B(xᵢ, tᵢ, s)) .== Ref(dimension(u"T")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] B(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:19
    [7] B
      @ ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:6 [inlined]
    [8] B(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15
  Test threw exception
  Expression: all(dimension.(E(xᵢ, tᵢ, s)) .== Ref(dimension(u"V/m")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E
      @ ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6 [inlined]
    [8] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16
  Test threw exception
  Expression: all(dimension.(B(xᵢ, tᵢ, s)) .== Ref(dimension(u"T")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] B(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:19
    [7] B
      @ ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:6 [inlined]
    [8] B(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15
  Test threw exception
  Expression: all(dimension.(E(xᵢ, tᵢ, s)) .== Ref(dimension(u"V/m")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] (GeometryTypes.Vec3{T} where T)(x::Tuple{Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(A^-1, kg, μm, s^-3), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ GeometryTypes ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::LaguerreGaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E
      @ ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6 [inlined]
    [8] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::LaguerreGaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16
  Test threw exception
  Expression: all(dimension.(B(xᵢ, tᵢ, s)) .== Ref(dimension(u"T")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] (GeometryTypes.Vec3{T} where T)(x::Tuple{Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(C^-1, kg, μm^-1, m, s^-1), 𝐌 𝐈^-1 𝐓^-2, nothing}}, Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(C^-1, kg, μm^-1, m, s^-1), 𝐌 𝐈^-1 𝐓^-2, nothing}}, Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(A^-1, kg, μm, m^-1, s^-2), 𝐌 𝐈^-1 𝐓^-2, nothing}}})
      @ GeometryTypes ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] B(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::LaguerreGaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:19
    [7] B
      @ ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:6 [inlined]
    [8] B(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::LaguerreGaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, GaussProfile{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(fs,), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m, fs, s^-1), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15
  Test threw exception
  Expression: all(dimension.(E(xᵢ, tᵢ, s)) .== Ref(dimension(u"V/m")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] (GeometryTypes.Vec3{T} where T)(x::Tuple{Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Unitful.Quantity{ComplexF64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(A^-1, a₀, kg, s^-3), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ GeometryTypes ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::LaguerreGaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E
      @ ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6 [inlined]
    [8] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::LaguerreGaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:15 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16
  Test threw exception
  Expression: all(dimension.(B(xᵢ, tᵢ, s)) .== Ref(dimension(u"T")))
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] (GeometryTypes.Vec3{T} where T)(x::Tuple{Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(mₑ, e^-1, Eₕ, ħ^-1), 𝐌 𝐈^-1 𝐓^-2, nothing}}, Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(mₑ, e^-1, Eₕ, ħ^-1), 𝐌 𝐈^-1 𝐓^-2, nothing}}, Unitful.Quantity{ComplexF64, 𝐌 𝐈^-1 𝐓^-2, Unitful.FreeUnits{(A^-1, kg, Eₕ^-1, ħ, s^-3), 𝐌 𝐈^-1 𝐓^-2, nothing}}})
      @ GeometryTypes ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] B(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::LaguerreGaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:19
    [7] B
      @ ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:6 [inlined]
    [8] B(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(m,), 𝐋, nothing}}}, t::Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}, laser::LaguerreGaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, GaussProfile{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, Int64, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/magneticfield.jl:9
    [9] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:16 [inlined]
   [10] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [11] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/dimensions.jl:13 [inlined]
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, y::Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##251 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##251 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
SI: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Int64, y::Int64, coords::CoordinateTransformations.Cylindrical{Float64, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Int64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##251 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
atomic: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Float64, y::Float64, coords::CoordinateTransformations.Cylindrical{Float64, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##251 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:7 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
SI_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, y::Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Unitful.Quantity{Int64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}}, laser::GaussLaser{PhysicalConstants.PhysicalConstant{Symbol("##SpeedOfLightInVacuum#276"), Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(m, s^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(C,), 𝐈 𝐓, nothing}}, PhysicalConstants.PhysicalConstant{Symbol("##ElectronMass#286"), Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(μm,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(μm, m^-1, s), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(μm^-1, m, s^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(μm^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(C^-1, kg, μm^-1, m^2, s^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##252 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
atomic_unitful: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, y::Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, coords::CoordinateTransformations.Cylindrical{Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, NoDims, Unitful.FreeUnits{(), NoDims, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}}, laser::GaussLaser{Unitful.Quantity{Float64, 𝐋 𝐓^-1, Unitful.FreeUnits{(a₀, Eₕ, ħ^-1), 𝐋 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐈 𝐓, Unitful.FreeUnits{(e,), 𝐈 𝐓, nothing}}, Unitful.Quantity{Float64, 𝐌, Unitful.FreeUnits{(mₑ,), 𝐌, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Unitful.Quantity{Float64, 𝐋, Unitful.FreeUnits{(a₀,), 𝐋, nothing}}, Float64, ComplexF64, Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(Eₕ^-1, ħ), 𝐓, nothing}}, ConstantProfile, Unitful.Quantity{Float64, 𝐓^-1, Unitful.FreeUnits{(Eₕ, ħ^-1), 𝐓^-1, nothing}}, Unitful.Quantity{Float64, 𝐋^-1, Unitful.FreeUnits{(a₀^-1,), 𝐋^-1, nothing}}, Unitful.Quantity{Float64, 𝐋 𝐌 𝐈^-1 𝐓^-3, Unitful.FreeUnits{(a₀, mₑ, e^-1, Eₕ^2, ħ^-2), 𝐋 𝐌 𝐈^-1 𝐓^-3, nothing}}})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##252 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
SI: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Int64, y::Int64, coords::CoordinateTransformations.Cylindrical{Float64, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Int64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##252 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
atomic: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] Vec
      @ ~/.julia/packages/GeometryTypes/gpBFp/src/FixedSizeArrays.jl:103 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] E(x::Float64, y::Float64, coords::CoordinateTransformations.Cylindrical{Float64, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:16
    [7] E(r::StaticArrays.SVector{3, Float64}, laser::GaussLaser{Float64, Float64, Float64, Float64, Float64, Float64, Float64, ComplexF64, Float64, ConstantProfile, Float64, Float64, Float64})
      @ LaserTypes ~/.julia/packages/LaserTypes/ILeU6/src/electricfield.jl:6
    [8] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:14 [inlined]
    [9] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219 [inlined]
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:12 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/laguerre-gauss.jl:7
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [14] include(x::String)
      @ Main.##252 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [19] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:8 [inlined]
   [21] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
GaussLaser: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/faraday.jl:8
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/faraday.jl:10 [inlined]
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.##253 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9
   [13] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [14] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
LaguerreGaussLaser: Error During Test at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/faraday.jl:8
  Got exception outside of a @test
  TypeError: in <:, expected Type, got Vararg
  Stacktrace:
    [1] #s26#5
      @ ~/.julia/packages/StaticArrays/l7lu2/src/util.jl:20 [inlined]
    [2] var"#s26#5"(T::Any, ::Any, #unused#::Any)
      @ StaticArrays ./none:0
    [3] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any})
      @ Core ./boot.jl:574
    [4] SArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/SVector.jl:20 [inlined]
    [5] StaticArray
      @ ~/.julia/packages/StaticArrays/l7lu2/src/convert.jl:4 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/faraday.jl:10 [inlined]
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
    [9] include(x::String)
      @ Main.##253 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [10] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9
   [13] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [14] macro expansion
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:9 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:5
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
Test Summary:          | Pass  Error  Total
LaserTypes.jl          |   13     18     31
  Setup                |   13            13
  Dimensions           |           8      8
    GaussLaser         |           4      4
      SI_unitful       |           2      2
      atomic_unitful   |           2      2
    LaguerreGaussLaser |           4      4
      SI_unitful       |           2      2
      atomic_unitful   |           2      2
  Gauss                |           4      4
    Values at origin   |           4      4
      SI_unitful       |           1      1
      atomic_unitful   |           1      1
      SI               |           1      1
      atomic           |           1      1
  Laguerre-Gauss       |           4      4
    Values at origin   |           4      4
      SI_unitful       |           1      1
      atomic_unitful   |           1      1
      SI               |           1      1
      atomic           |           1      1
  Fμν                  |           2      2
    GaussLaser         |           1      1
    LaguerreGaussLaser |           1      1
ERROR: LoadError: Some tests did not pass: 13 passed, 0 failed, 18 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/LaserTypes/ILeU6/test/runtests.jl:4
ERROR: Package LaserTypes errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
