Current time is 2020-10-27T00:09:26.317
Julia Version 1.6.0-DEV.1340
Commit c2937573df (2020-10-26 20:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-27T00:09:27.830
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-27T00:09:37.961
     Testing GAFramework
Status `/tmp/jl_xaI22Y/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_xaI22Y/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723017241720133
curgen: 20 fitness: 0.21723017241720133
curgen: 30 fitness: 0.21723017241720133
curgen: 40 fitness: 0.21723017241720133
curgen: 50 fitness: 0.21723017241720133
CoordinateCreature{Vector{Float64}}([0.22282775863818965], -0.21723017241720133) 0.22282775863818965 -0.21723017241720133
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258131831100942
curgen: 100 fitness: 3.258148742706237
curgen: 150 fitness: 3.2581902276138632
curgen: 200 fitness: 3.2581957463987523
curgen: 250 fitness: 3.2583005449392815
curgen: 300 fitness: 3.258405641733989
curgen: 350 fitness: 3.258426609136027
curgen: 400 fitness: 3.2584443227691158
curgen: 450 fitness: 3.2584443227691158
curgen: 500 fitness: 3.2584517423115567
CoordinateCreature{Vector{Float64}}([-0.22258126789993216, -0.2230349008609644, -0.2223104167890824, -0.22248354416990745, 0.22290816292878293, 0.22250336892911893, -0.2223283068777041, -0.222832232717029, 0.2226410563972452, 0.2231125396955503, 0.22253742742321822, -0.2220745291983373, 0.22267734070926157, 0.22257021727067694, -0.22229727759945958], -3.2584517423115567) [-0.22258126789993216, -0.2230349008609644, -0.2223104167890824, -0.22248354416990745, 0.22290816292878293, 0.22250336892911893, -0.2223283068777041, -0.222832232717029, 0.2226410563972452, 0.2231125396955503, 0.22253742742321822, -0.2220745291983373, 0.22267734070926157, 0.22257021727067694, -0.22229727759945958] -3.2584517423115567
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0030311778107545706
curgen: 100 fitness: -0.0029554634525936763
curgen: 150 fitness: -0.0029424228217180826
curgen: 200 fitness: -0.0028900241508438285
curgen: 250 fitness: -0.0028900241508438285
curgen: 300 fitness: -0.0024981604411209446
curgen: 350 fitness: -0.001567045424110347
curgen: 400 fitness: -0.001567045424110347
curgen: 450 fitness: -0.0014879826937601592
curgen: 500 fitness: -0.0014879826937601592
CoordinateCreature{Vector{Float64}}([0.0006944579267751981, 8.73351820679524e-5, 0.0005424512076944077, -0.00010884203600401178, -0.00030058798311804677, -6.405768292678881e-5, -0.00030776633209728647, 0.00023700068942067638, 0.00018836360205000792, -0.0002859660116399682, -0.0019790953932812038, -4.937999406400863e-5, 0.0010776025769185307, -0.0011229228821546112, 1.5174109241460239e-5], 0.0014879826937601592) [0.0006944579267751981, 8.73351820679524e-5, 0.0005424512076944077, -0.00010884203600401178, -0.00030058798311804677, -6.405768292678881e-5, -0.00030776633209728647, 0.00023700068942067638, 0.00018836360205000792, -0.0002859660116399682, -0.0019790953932812038, -4.937999406400863e-5, 0.0010776025769185307, -0.0011229228821546112, 1.5174109241460239e-5] 0.0014879826937601592
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-27T00:10:02.910
