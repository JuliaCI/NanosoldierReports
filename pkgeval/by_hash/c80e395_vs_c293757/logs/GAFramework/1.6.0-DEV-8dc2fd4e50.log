Current time is 2020-10-26T21:19:24.386
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T21:19:26.113
   Resolving package versions...
   Installed GAFramework â”€ v0.4.1
   Installed FileIO â”€â”€â”€â”€â”€â”€ v1.4.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.4
  [91ca9103] + GAFramework v0.4.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mFileIO[39m
[32m  âœ“ [39mGAFramework
2 dependencies successfully precompiled
Starting tests at 2020-10-26T21:19:35.298
     Testing GAFramework
Status `/tmp/jl_wol3AX/Project.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_wol3AX/Manifest.toml`
  [5789e2e9] FileIO v1.4.4
  [91ca9103] GAFramework v0.4.1
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172324744909425
curgen: 20 fitness: 0.2172324744909425
curgen: 30 fitness: 0.2172324744909425
curgen: 40 fitness: 0.2172324744909425
curgen: 50 fitness: 0.2172324744909425
CoordinateCreature{Vector{Float64}}([0.22270965376799134], -0.2172324744909425) 0.22270965376799134 -0.2172324744909425
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578505299613183
curgen: 100 fitness: 3.2580634929384242
curgen: 150 fitness: 3.2583050462542356
curgen: 200 fitness: 3.258338571785555
curgen: 250 fitness: 3.2583464038359655
curgen: 300 fitness: 3.2583968254292017
curgen: 350 fitness: 3.258404986216771
curgen: 400 fitness: 3.258419494582758
curgen: 450 fitness: 3.2584255626486316
curgen: 500 fitness: 3.258430076600159
CoordinateCreature{Vector{Float64}}([0.222255621553509, 0.22271297205857996, 0.22229353949121297, -0.22262787730968603, 0.2224413711755875, -0.22237305142180214, 0.2225554233233669, 0.22239847017060316, 0.22271034575157886, -0.22193527560382745, -0.2226210268362246, -0.22275733919864518, -0.22269608933984325, 0.22313208997384332, -0.2233351043749986], -3.258430076600159) [0.222255621553509, 0.22271297205857996, 0.22229353949121297, -0.22262787730968603, 0.2224413711755875, -0.22237305142180214, 0.2225554233233669, 0.22239847017060316, 0.22271034575157886, -0.22193527560382745, -0.2226210268362246, -0.22275733919864518, -0.22269608933984325, 0.22313208997384332, -0.2233351043749986] -3.258430076600159
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0014362603457698242
curgen: 100 fitness: -0.0008666440174067702
curgen: 150 fitness: -0.0007530322274647006
curgen: 200 fitness: -0.0006553664059651965
curgen: 250 fitness: -0.0005392804188204536
curgen: 300 fitness: -0.0005392804188204536
curgen: 350 fitness: -0.0005392804188204536
curgen: 400 fitness: -0.0005222585470789909
curgen: 450 fitness: -0.0005222585470789909
curgen: 500 fitness: -0.000515887143336613
CoordinateCreature{Vector{Float64}}([-0.0004298492161959969, 0.000368777098519831, -0.0002309057437960985, -7.314679263066841e-5, 4.4978532902199136e-5, -0.0001474311442874951, 0.00014692036124288297, 0.00014053496704216135, -4.826917625964736e-5, 0.0002358754006588044, 0.000444889985937173, -0.0012710665524763897, 0.00020058709932929068, 3.757518959879387e-5, -0.0004926148719027208], 0.000515887143336613) [-0.0004298492161959969, 0.000368777098519831, -0.0002309057437960985, -7.314679263066841e-5, 4.4978532902199136e-5, -0.0001474311442874951, 0.00014692036124288297, 0.00014053496704216135, -4.826917625964736e-5, 0.0002358754006588044, 0.000444889985937173, -0.0012710665524763897, 0.00020058709932929068, 3.757518959879387e-5, -0.0004926148719027208] 0.000515887143336613
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
     Testing GAFramework tests passed 
Finished at 2020-10-26T21:20:03.683
