Current time is 2020-10-26T21:21:14.378
Julia Version 1.6.0-DEV.1355
Commit 8dc2fd4e50 (2020-10-26 20:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T21:21:16.070
   Resolving package versions...
   Installed IteratorInterfaceExtensions â”€ v1.0.0
   Installed CompositionsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed ConstructionBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed Setfield â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed InitialValues â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.10
   Installed BangBang â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.29
   Installed Transducers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.53
   Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.22.0
   Installed MicroCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed SplittablesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.10
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed ArgCheck â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.1.0
   Installed DefineSingletons â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Installed ZygoteRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [28d57a85] + Transducers v0.4.53
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [dce04be8] + ArgCheck v2.1.0
  [198e06fe] + BangBang v0.3.29
  [34da2185] + Compat v3.22.0
  [a33af91c] + CompositionsBase v0.1.0
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.3.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [22cec73e] + InitialValues v0.2.10
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [1914dd2f] + MacroTools v0.5.6
  [128add7d] + MicroCollections v0.1.0
  [ae029012] + Requires v1.1.0
  [efcf1570] + Setfield v0.7.0
  [171d559e] + SplittablesBase v0.1.10
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [28d57a85] + Transducers v0.4.53
  [700de1a5] + ZygoteRules v0.2.0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mDataValueInterfaces[39m
[32m  âœ“ [39m[90mIteratorInterfaceExtensions[39m
[32m  âœ“ [39m[90mCompositionsBase[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mArgCheck[39m
[32m  âœ“ [39m[90mConstructionBase[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mDefineSingletons[39m
[32m  âœ“ [39m[90mTableTraits[39m
[32m  âœ“ [39m[90mInitialValues[39m
[32m  âœ“ [39m[90mCompat[39m
[32m  âœ“ [39m[90mTables[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mZygoteRules[39m
[32m  âœ“ [39m[90mSetfield[39m
[32m  âœ“ [39m[90mSplittablesBase[39m
[32m  âœ“ [39m[90mBangBang[39m
[32m  âœ“ [39m[90mMicroCollections[39m
[32m  âœ“ [39mTransducers
19 dependencies successfully precompiled
Starting tests at 2020-10-26T21:21:34.741
     Testing Transducers
Status `/tmp/jl_8BZ2BZ/Project.toml`
  [4c88cf16] Aqua v0.5.0
  [dce04be8] ArgCheck v2.1.0
  [198e06fe] BangBang v0.3.29
  [8e7c35d0] BlockArrays v0.12.14
  [34da2185] Compat v3.22.0
  [a93c6f00] DataFrames v0.21.8
  [96c8136d] DataTools v0.1.3
  [e30172f5] Documenter v0.25.2
  [22cec73e] InitialValues v0.2.10
  [5078a376] LazyArrays v0.19.0
  [d77d25b0] LiterateTest v0.1.4
  [b37bcd2d] LoadAllPackages v0.1.0
  [334f122f] Maybe v0.1.4
  [128add7d] MicroCollections v0.1.0
  [a15396b6] OnlineStats v1.5.7
  [dc46b164] PerformanceTestTools v0.1.3
  [efcf1570] Setfield v0.7.0
  [171d559e] SplittablesBase v0.1.10
  [90137ffa] StaticArrays v0.12.4
  [09ab397b] StructArrays v0.4.4
  [bd369af6] Tables v1.1.0
  [28d57a85] Transducers v0.4.53
  [9d95f2ec] TypedTables v1.2.0
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_8BZ2BZ/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [4c88cf16] Aqua v0.5.0
  [dce04be8] ArgCheck v2.1.0
  [4c555306] ArrayLayouts v0.4.10
  [198e06fe] BangBang v0.3.29
  [8e7c35d0] BlockArrays v0.12.14
  [324d7699] CategoricalArrays v0.8.3
  [34da2185] Compat v3.22.0
  [a33af91c] CompositionsBase v0.1.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.8
  [864edb3b] DataStructures v0.18.8
  [96c8136d] DataTools v0.1.3
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [85a47980] Dictionaries v0.3.2
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [e2ba6199] ExprTools v0.1.3
  [1a297f60] FillArrays v0.10.0
  [313cdc1a] Indexing v1.1.0
  [22cec73e] InitialValues v0.2.10
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [5078a376] LazyArrays v0.19.0
  [d77d25b0] LiterateTest v0.1.4
  [b37bcd2d] LoadAllPackages v0.1.0
  [1914dd2f] MacroTools v0.5.6
  [a3b82374] MatrixFactorizations v0.6.0
  [334f122f] Maybe v0.1.4
  [128add7d] MicroCollections v0.1.0
  [e1d29d7a] Missings v0.4.4
  [a15396b6] OnlineStats v1.5.7
  [925886fa] OnlineStatsBase v1.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [dc46b164] PerformanceTestTools v0.1.3
  [2dfb63ee] PooledArrays v0.5.3
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [efcf1570] Setfield v0.7.0
  [a2af1166] SortingAlgorithms v0.3.1
  [03a91e81] SplitApplyCombine v1.1.3
  [171d559e] SplittablesBase v0.1.10
  [90137ffa] StaticArrays v0.12.4
  [c5e4b96a] StaticNumbers v0.3.3
  [2913bbd2] StatsBase v0.33.2
  [09ab397b] StructArrays v0.4.4
  [856f2bd8] StructTypes v1.1.0
  [7522ee7d] SweepOperator v0.3.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [28d57a85] Transducers v0.4.53
  [9d95f2ec] TypedTables v1.2.0
  [700de1a5] ZygoteRules v0.2.0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: Loading packages from `/tmp/jl_8BZ2BZ/Project.toml`...
[ Info: Loading 33 packages...
WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).WARNING: Wrapping `Vararg` directly in UnionAll is deprecated (wrap the tuple instead).[ Info: 33 packages loaded in 99.24708858 seconds
â”Œ Info: Testing with:
â””   nworkers() = 3
Test Summary:   | Pass  Total
test_adhocrf.jl |   15     15
Test Summary:     | Pass  Total
test_append_bb.jl |    2      2
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.Filesystem.JL_O_RANDOM
Skipping Base.Filesystem.JL_O_SEQUENTIAL
Skipping Base.Filesystem.JL_O_SHORT_LIVED
Skipping Base.Filesystem.JL_O_TEMPORARY
Skipping Base.BinaryPlatforms.compiler_abi
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.Filesystem.JL_O_RANDOM
Skipping Base.Filesystem.JL_O_SEQUENTIAL
Skipping Base.Filesystem.JL_O_SHORT_LIVED
Skipping Base.Filesystem.JL_O_TEMPORARY
Skipping Base.BinaryPlatforms.compiler_abi
Test Summary: | Pass  Total
test_aqua.jl  |    8      8
Test Summary:  | Pass  Total
test_basics.jl |   10     10
Test Summary:       | Pass  Total
test_blockarrays.jl |    3      3
â”Œ Info: The test `repeat10x < 2 * baseline` works in Julia 1.6.0-DEV.1355!
â”‚ **Consider enabling this test again.**
â”‚   baseline = 8128
â”‚   repeat10x = 8128
â””   repeat10x / baseline = 1.0
Test Summary:        | Pass  Broken  Total
test_broadcasting.jl |   32       1     33
Test Summary:          | Pass  Total
test_comprehensions.jl |    4      4
Test Summary: | Pass  Total
test_copy.jl  |    6      6
Test Summary: | Pass  Total
test_core.jl  |   29     29
Test Summary:      | Pass  Total
test_deprecated.jl |    5      5
[ Info: Skipping doctests on PkgEval.
Test Summary:   |
test_doctest.jl | No tests
Test Summary:    | Pass  Total
test_eduction.jl |    5      5
Test Summary:                          | Pass  Total
test_examples_empty_result_handling.jl |   11     11
  0.000001 seconds
Test Summary:            |
test_examples_meanvar.jl | No tests
Test Summary:           | Pass  Total
test_examples_primes.jl |    1      1
Test Summary:                | Pass  Total
test_examples_transducers.jl |    3      3
 input: (1, 10)
output: 10
 input: (2, 12)
output: 24
 input: (3, 14)
output: 42
test_examples_tutorial_missings.jl: Error During Test at /home/pkgeval/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:56
  Test threw exception
  Expression: begin
        ((zip(xs, ys) |> OfType(Tuple{Vararg{Number}})) |> MapSplat(*)) |> sum
    end == 34
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:33 [inlined]
    [2] tuple_type_tail(T::Type)
      @ Base ./tuple.jl:289
    [3] nthtype(#unused#::Val{2}, #unused#::Type{Tuple{Vararg{Number}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/basics.jl:74
    [4] _next_oftype
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:363 [inlined]
    [5] next
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:336 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/src/core.jl:181 [inlined]
    [7] __foldl__
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:238 [inlined]
    [8] #transduce#110
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:518 [inlined]
    [9] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:515 [inlined]
   [10] transduce(xform::Transducers.Composition{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Composition{Transducers.MapSplat{typeof(*)}, Transducers.Map{typeof(identity)}}}, f::Transducers.Completing{typeof(Base.add_sum)}, init::Transducers.InitOf{Transducers.DefaultInitOf}, coll::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:501
   [11] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:500 [inlined]
   [12] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:573 [inlined]
   [13] #foldxl#115
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [14] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [15] #mapfoldl#111
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [16] mapfoldl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [17] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [18] mapreduce
      @ ./reduce.jl:287 [inlined]
   [19] #sum#218
      @ ./reduce.jl:501 [inlined]
   [20] sum
      @ ./reduce.jl:501 [inlined]
   [21] #sum#219
      @ ./reduce.jl:528 [inlined]
   [22] sum
      @ ./reduce.jl:528 [inlined]
   [23] |>(x::Transducers.Eduction{Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.MapSplat{typeof(*)}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.push!!)}}}}, Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}}, f::typeof(sum))
      @ Base ./operators.jl:839
   [24] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:56
   [25] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [26] include(x::String)
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:1
   [27] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:3
   [28] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [29] include(x::String)
      @ Main.TestTransducers ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:1
   [30] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:45 [inlined]
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [32] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [33] top-level scope
      @ none:6
   [34] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [35] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [36] _start()
      @ Base ./client.jl:485
test_examples_tutorial_missings.jl: Error During Test at /home/pkgeval/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:82
  Test threw exception
  Expression: begin
        (zip(xs, ys) |> xf_mdot) |> sum
    end == 34
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:33 [inlined]
    [2] tuple_type_tail(T::Type)
      @ Base ./tuple.jl:289
    [3] nthtype(#unused#::Val{2}, #unused#::Type{Tuple{Vararg{Number}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/basics.jl:74
    [4] _next_oftype
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:363 [inlined]
    [5] next
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:336 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/src/core.jl:181 [inlined]
    [7] __foldl__
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:238 [inlined]
    [8] #transduce#110
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:518 [inlined]
    [9] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:515 [inlined]
   [10] transduce(xform::Transducers.Composition{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Composition{Transducers.MapSplat{typeof(*)}, Transducers.Map{typeof(identity)}}}, f::Transducers.Completing{typeof(Base.add_sum)}, init::Transducers.InitOf{Transducers.DefaultInitOf}, coll::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:501
   [11] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:500 [inlined]
   [12] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:573 [inlined]
   [13] #foldxl#115
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [14] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [15] #mapfoldl#111
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [16] mapfoldl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [17] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [18] mapreduce
      @ ./reduce.jl:287 [inlined]
   [19] #sum#218
      @ ./reduce.jl:501 [inlined]
   [20] sum
      @ ./reduce.jl:501 [inlined]
   [21] #sum#219
      @ ./reduce.jl:528 [inlined]
   [22] sum
      @ ./reduce.jl:528 [inlined]
   [23] |>(x::Transducers.Eduction{Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.MapSplat{typeof(*)}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.push!!)}}}}, Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}}, f::typeof(sum))
      @ Base ./operators.jl:839
   [24] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:82
   [25] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [26] include(x::String)
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:1
   [27] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:3
   [28] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [29] include(x::String)
      @ Main.TestTransducers ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:1
   [30] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:45 [inlined]
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [32] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [33] top-level scope
      @ none:6
   [34] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [35] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [36] _start()
      @ Base ./client.jl:485
test_examples_tutorial_missings.jl: Error During Test at /home/pkgeval/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:110
  Test threw exception
  Expression: begin
        s = ((zip(xs, ys) |> xf_demean(xs, ys)) |> xf_mdot) |> sum
        s / nonmissings
    end == 1.0
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:33 [inlined]
    [2] tuple_type_tail(T::Type)
      @ Base ./tuple.jl:289
    [3] nthtype(#unused#::Val{2}, #unused#::Type{Tuple{Vararg{Number}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/basics.jl:74
    [4] _next_oftype
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:363 [inlined]
    [5] next
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:336 [inlined]
    [6] next(rf::Transducers.Reduction{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#5#6"{Float64, Float64}}, Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.MapSplat{typeof(*)}, Transducers.Reduction{Transducers.Map{typeof(identity)}, Transducers.BottomRF{Transducers.Completing{typeof(Base.add_sum)}}}}}}, result::Transducers.DefaultInitOf{typeof(Base.add_sum)}, input::Tuple{Int64, Int64})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/library.jl:53
    [7] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/src/core.jl:181 [inlined]
    [8] __foldl__
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:238 [inlined]
    [9] #transduce#110
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:518 [inlined]
   [10] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:515 [inlined]
   [11] transduce(xform::Transducers.Composition{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#5#6"{Float64, Float64}}, Transducers.Composition{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Composition{Transducers.MapSplat{typeof(*)}, Transducers.Map{typeof(identity)}}}}, f::Transducers.Completing{typeof(Base.add_sum)}, init::Transducers.InitOf{Transducers.DefaultInitOf}, coll::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:501
   [12] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:500 [inlined]
   [13] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:573 [inlined]
   [14] foldxl(step::typeof(Base.add_sum), xform::Transducers.Map{typeof(identity)}, itr::Transducers.Eduction{Transducers.Reduction{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#5#6"{Float64, Float64}}, Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.MapSplat{typeof(*)}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.push!!)}}}}}, Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}}; init::Transducers.InitOf{Transducers.DefaultInitOf}, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956
   [15] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [16] #mapfoldl#111
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [17] mapfoldl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [18] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [19] mapreduce
      @ ./reduce.jl:287 [inlined]
   [20] #sum#218
      @ ./reduce.jl:501 [inlined]
   [21] sum
      @ ./reduce.jl:501 [inlined]
   [22] #sum#219
      @ ./reduce.jl:528 [inlined]
   [23] sum
      @ ./reduce.jl:528 [inlined]
   [24] |>(x::Transducers.Eduction{Transducers.Reduction{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#5#6"{Float64, Float64}}, Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.MapSplat{typeof(*)}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.push!!)}}}}}, Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}}, f::typeof(sum))
      @ Base ./operators.jl:839
   [25] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:110
   [26] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [27] include(x::String)
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:1
   [28] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:3
   [29] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [30] include(x::String)
      @ Main.TestTransducers ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:1
   [31] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:45 [inlined]
   [32] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
test_examples_tutorial_missings.jl: Error During Test at /home/pkgeval/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:132
  Test threw exception
  Expression: begin
        s = ((zip(xs, ys) |> xf_demean2(xs, ys)) |> xf_mdot) |> sum
        s / nonmissings
    end == 0.5
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:33 [inlined]
    [2] tuple_type_tail(T::Type)
      @ Base ./tuple.jl:289
    [3] nthtype(#unused#::Val{2}, #unused#::Type{Tuple{Vararg{Number}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/basics.jl:74
    [4] _next_oftype
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:363 [inlined]
    [5] next
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:336 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/src/core.jl:181 [inlined]
    [7] __foldl__
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:238 [inlined]
    [8] #transduce#110
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:518 [inlined]
    [9] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:515 [inlined]
   [10] transduce(xform::Transducers.Composition{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Composition{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#7#9"}, Transducers.Composition{Transducers.Broadcasting, Transducers.Map{typeof(identity)}}}}, f::Transducers.Completing{typeof(Base.add_sum)}, init::Transducers.InitOf{Transducers.DefaultInitOf}, coll::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:501
   [11] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:500 [inlined]
   [12] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:573 [inlined]
   [13] foldxl(step::typeof(Base.add_sum), xform::Transducers.Map{typeof(identity)}, itr::Transducers.Eduction{Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.Reduction{Transducers.Map{Main.TestTransducers.TestExamplesTutorialMissings.var"#7#9"}, Transducers.Reduction{Transducers.Broadcasting, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.push!!)}}}}}, Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}}; init::Transducers.InitOf{Transducers.DefaultInitOf}, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956
   [14] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [15] #mapfoldl#111
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [16] mapfoldl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:557 [inlined]
   [17] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [18] mapreduce
      @ ./reduce.jl:287 [inlined]
   [19] #sum#218
      @ ./reduce.jl:501 [inlined]
   [20] sum
      @ ./reduce.jl:501 [inlined]
   [21] #sum#219
      @ ./reduce.jl:528 [inlined]
   [22] sum
      @ ./reduce.jl:528 [inlined]
   [23] |>
      @ ./operators.jl:839 [inlined]
   [24] xf_demean2(xs::Vector{Union{Missing, Int64}}, ys::Vector{Union{Missing, Int64}})
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:120
   [25] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:132
   [26] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [27] include(x::String)
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:1
   [28] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:3
   [29] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [30] include(x::String)
      @ Main.TestTransducers ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:1
   [31] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:45 [inlined]
   [32] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
test_examples_tutorial_missings.jl: Error During Test at /home/pkgeval/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:162
  Test threw exception
  Expression: begin
        s = ((zip(xs, ys) |> xf_demean3(xs, ys)) |> xf_mdot) |> sum
        s / nonmissings
    end == 0.5
  UndefRefError: access to undefined reference
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:33 [inlined]
    [2] tuple_type_tail(T::Type)
      @ Base ./tuple.jl:289
    [3] nthtype(#unused#::Val{2}, #unused#::Type{Tuple{Vararg{Number}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/basics.jl:74
    [4] _next_oftype
      @ ~/.julia/packages/Transducers/AgX5g/src/library.jl:363 [inlined]
    [5] next(rf::Transducers.Reduction{Transducers.OfType{Tuple{Vararg{Number}}}, Transducers.BottomRF{Transducers.TeeRF{2, Tuple{Transducers.Completing{typeof(DataTools.inc1)}, Transducers.ProductRF{2, Tuple{Transducers.Completing{typeof(+)}, Transducers.Completing{typeof(+)}}}}}}}, result::Tuple{Int64, Tuple{Transducers.DefaultInitOf{typeof(+)}, Transducers.DefaultInitOf{typeof(+)}}}, input::Tuple{Int64, Int64})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/library.jl:336
    [6] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/src/core.jl:181 [inlined]
    [7] __foldl__(rf::Function, init::Tuple{Int64, Tuple{Transducers.DefaultInitOf{typeof(+)}, Transducers.DefaultInitOf{typeof(+)}}}, zs::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:238
    [8] #transduce#110
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:518 [inlined]
    [9] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:515 [inlined]
   [10] transduce(xform::Transducers.OfType{Tuple{Vararg{Number}}}, f::Transducers.TeeRF{2, Tuple{Transducers.Completing{typeof(DataTools.inc1)}, Transducers.ProductRF{2, Tuple{Transducers.Completing{typeof(+)}, Transducers.Completing{typeof(+)}}}}}, init::Transducers.InitOf{Transducers.DefaultInitOf}, coll::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:501
   [11] transduce
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:500 [inlined]
   [12] foldxl(step::Transducers.TeeRF{2, Tuple{typeof(DataTools.inc1), Transducers.ProductRF{2, Tuple{typeof(+), typeof(+)}}}}, xform::Transducers.OfType{Tuple{Vararg{Number}}}, itr::Base.Iterators.Zip{Tuple{Vector{Union{Missing, Int64}}, Vector{Union{Missing, Int64}}}}; init::Transducers.InitOf{Transducers.DefaultInitOf}, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Transducers ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956
   [13] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:956 [inlined]
   [14] #foldl#116
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:959 [inlined]
   [15] foldl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:959 [inlined]
   [16] #foldxl#108
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:441 [inlined]
   [17] foldxl
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:441 [inlined]
   [18] #106
      @ ~/.julia/packages/Transducers/AgX5g/src/processes.jl:440 [inlined]
   [19] |>
      @ ./operators.jl:839 [inlined]
   [20] xf_demean3(xs::Vector{Union{Missing, Int64}}, ys::Vector{Union{Missing, Int64}})
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:153
   [21] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/examples/tutorial_missings.jl:162
   [22] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [23] include(x::String)
      @ Main.TestTransducers.TestExamplesTutorialMissings ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:1
   [24] top-level scope
      @ ~/.julia/packages/Transducers/AgX5g/test/test_examples_tutorial_missings.jl:3
   [25] include(mod::Module, _path::String)
      @ Base ./Base.jl:389
   [26] include(x::String)
      @ Main.TestTransducers ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:1
   [27] macro expansion
      @ ~/.julia/packages/Transducers/AgX5g/test/runtests.jl:45 [inlined]
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] top-level scope
      @ none:6
   [31] eval(m::Module, e::Any)
      @ Core ./boot.jl:369
   [32] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [33] _start()
      @ Base ./client.jl:485
Test Summary:                      | Pass  Error  Total
test_examples_tutorial_missings.jl |   50      5     55
  foldl(findmax_stepâ€², pairs(...)) |    3             3
  foldl(findmin_stepâ€², pairs(...)) |    3             3
Test Summary:                      | Pass  Error  Total
test_examples_tutorial_missings.jl |   50      5     55
  foldl(findmax_stepâ€², pairs(...)) |    3             3
  foldl(findmin_stepâ€², pairs(...)) |    3             3
ERROR: LoadError: Some tests did not pass: 50 passed, 0 failed, 5 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Transducers/AgX5g/test/runtests.jl:1

caused by: Some tests did not pass: 50 passed, 0 failed, 5 errored, 0 broken.
ERROR: Package Transducers errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
