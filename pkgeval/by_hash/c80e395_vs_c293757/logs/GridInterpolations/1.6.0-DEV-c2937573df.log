Current time is 2020-10-26T23:18:10.704
Julia Version 1.6.0-DEV.1340
Commit c2937573df (2020-10-26 20:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T23:18:12.915
   Resolving package versions...
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed GridInterpolations â”€ v1.1.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [bb4c363b] + GridInterpolations v1.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [bb4c363b] + GridInterpolations v1.1.1
  [90137ffa] + StaticArrays v0.12.4
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39mGridInterpolations
2 dependencies successfully precompiled
Starting tests at 2020-10-26T23:18:20.681
     Testing GridInterpolations
Status `/tmp/jl_Fo9zFW/Project.toml`
  [bb4c363b] GridInterpolations v1.1.1
  [a98d9a8b] Interpolations v0.13.0
  [90137ffa] StaticArrays v0.12.4
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Fo9zFW/Manifest.toml`
  [13072b0f] AxisAlgorithms v1.0.0
  [bb4c363b] GridInterpolations v1.1.1
  [a98d9a8b] Interpolations v0.13.0
  [6fe1bfb0] OffsetArrays v1.3.1
  [c84ed2f1] Ratios v0.4.0
  [90137ffa] StaticArrays v0.12.4
  [efce3f68] WoodburyMatrices v0.5.3
  [2a0f44e3] Base64
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
Test Summary: | Pass  Total
Comparisons   |    2      2
Test Summary: | Pass  Total
Magic         |    1      1
Test Summary: | Pass  Total
Repr          |    1      1
Test Summary: | Pass  Total
Counter       |    1      1
Test Summary: | Pass  Total
Mask          |    3      3
Test Summary: | Pass  Total
Duplicates    |    2      2
Test Summary: | Pass  Total
Rect Impl     |   17     17
Test Summary: | Pass  Total
Simplex Impl  |   19     19
Test Summary: | Pass  Total
Ordering      |   24     24
Test Summary: | Pass  Total
NaN           |    1      1
Test Summary:          | Pass  Total
Iteration and Indexing |   27     27
1000 interpolations of 6 dimensions with 15 cut points per dimension:
  Rectangle required 0.002408354163000002 +/- 0.005646721937192593 sec
  Simplex   required 0.001299781104999999 +/- 0.009570463083964129 sec
How large is the simplex grid speed up over the multilinear grid?
  limiting to 2 dimensions and therefore 316 points per dim:
    mean speed: 0.0006646047, std dev: 3.842812545483339e-5
  limiting to 3 dimensions and therefore 46 points per dim:
    mean speed: 0.0006926929333333334, std dev: 0.0001838526394329556
  limiting to 4 dimensions and therefore 18 points per dim:
    mean speed: 0.0008923908000000001, std dev: 0.000152087431767479
  limiting to 5 dimensions and therefore 10 points per dim:
    mean speed: 0.0007947094, std dev: 4.672613157863005e-5
100 interpolations of 4 dimensions with 10 cut points per dimension:
  Rectangle required 0.0006876083099999998 +/- 0.0009712996617337913 sec
  Simplex   required 0.0006452472300000001 +/- 0.0006478185409560088 sec
All tests complete
     Testing GridInterpolations tests passed 
Finished at 2020-10-26T23:18:50.038
