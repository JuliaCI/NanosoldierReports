Current time is 2020-10-26T20:54:26.467
Julia Version 1.6.0-DEV.1340
Commit c2937573df (2020-10-26 20:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T20:54:31.050
   Resolving package versions...
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [692b3bcd] + JLLWrappers v1.1.3
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
6 dependencies successfully precompiled
Starting tests at 2020-10-26T20:54:58.291
     Testing FunctionIntegrator
Status `/tmp/jl_aXD3gX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_aXD3gX/Manifest.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [692b3bcd] JLLWrappers v1.1.3
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.376281 seconds (293.38 k allocations: 13.827 MiB, 93.93% compilation time)
Running: chebyshev_quadrature with k=1
  1.937464 seconds (2.25 M allocations: 130.657 MiB, 3.81% gc time, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.895447 seconds (417.67 k allocations: 24.211 MiB, 96.76% compilation time)
Running: chebyshev_quadrature with k=3
  0.226083 seconds (483.51 k allocations: 27.390 MiB, 7.52% gc time, 90.84% compilation time)
Running: chebyshev_quadrature with k=4
  0.219491 seconds (427.02 k allocations: 23.953 MiB, 90.58% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 48.912551 seconds (35.47 M allocations: 2.979 GiB, 15.67% gc time, 87.36% compilation time)
Running: laguerre_quadrature with k=1
  2.178459 seconds (3.24 M allocations: 182.172 MiB, 3.96% gc time, 99.89% compilation time)
Running: legendre_quadrature
  0.147600 seconds (211.67 k allocations: 12.256 MiB, 98.91% compilation time)
Running: lobatto_quadrature
  0.235686 seconds (340.27 k allocations: 20.698 MiB, 99.21% compilation time)
Running: radau_quadrature
  0.254756 seconds (463.14 k allocations: 28.450 MiB, 8.88% gc time, 99.17% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.028252 seconds (100.02 M allocations: 1.491 GiB, 0.47% gc time, 0.05% compilation time)
Running: rectangle_rule_midpoint.
  0.110834 seconds (173.35 k allocations: 3.888 MiB, 31.41% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 42.152053 seconds (100.02 M allocations: 1.491 GiB, 0.47% gc time, 0.26% compilation time)
Running: rombergs_method
  0.469729 seconds (741.61 k allocations: 43.218 MiB, 3.91% gc time, 99.43% compilation time)
Running: simpsons_rule
  0.030118 seconds (48.05 k allocations: 2.634 MiB, 92.43% compilation time)
Running: simpsons38_rule
  0.073863 seconds (111.45 k allocations: 5.956 MiB, 97.16% compilation time)
Running: trapezoidal_rule
  0.259414 seconds (1.72 M allocations: 28.731 MiB, 5.05% gc time, 16.10% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.054041 seconds (30.72 k allocations: 1.831 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=1
  0.288058 seconds (295.83 k allocations: 15.782 MiB, 99.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.171579 seconds (94.22 k allocations: 2.707 MiB, 12.55% gc time, 99.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.130723 seconds (82.47 k allocations: 2.508 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.131820 seconds (65.08 k allocations: 2.154 MiB, 99.16% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.724825 seconds (510.77 k allocations: 162.285 MiB, 10.41% gc time, 27.17% compilation time)
Running: legendre_quadrature
  0.120922 seconds (42.35 k allocations: 2.460 MiB, 99.81% compilation time)
Running: lobatto_quadrature
  0.013507 seconds (16.32 k allocations: 1.020 MiB, 98.77% compilation time)
Running: radau_quadrature
  0.016848 seconds (16.43 k allocations: 1.027 MiB, 99.10% compilation time)
Running: rectangle_rule_left
 11.454615 seconds (471.41 M allocations: 7.025 GiB, 8.31% gc time)
Running: rectangle_rule_midpoint
  0.000039 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 11.323909 seconds (476.96 M allocations: 7.107 GiB, 7.42% gc time)
Running: rombergs_method
  0.618373 seconds (334.48 k allocations: 19.167 MiB, 1.31% gc time, 99.92% compilation time)
Running: simpsons_rule
  0.000023 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.062041 seconds (19.43 k allocations: 1.184 MiB, 99.85% compilation time)
Running: trapezoidal_rule
  0.034630 seconds (16.97 k allocations: 1.034 MiB, 99.71% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018980 seconds (1.03 k allocations: 34.125 KiB, 99.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.077057 seconds (2.46 k allocations: 116.359 KiB, 99.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.095181 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.080497 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.083234 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.221501 seconds (369.35 k allocations: 19.505 MiB, 99.26% compilation time)
Running: legendre_quadrature
  0.049862 seconds (1.28 k allocations: 65.891 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000079 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000033 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000188 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000129 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000173 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.058682 seconds (1.04 k allocations: 56.469 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000020 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.022915 seconds (923 allocations: 39.281 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.012820 seconds (44.29 k allocations: 702.859 KiB, 91.83% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.048584 seconds (83.49 k allocations: 5.002 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.146103 seconds (235.66 k allocations: 13.387 MiB, 98.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.237201 seconds (289.14 k allocations: 16.397 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.182302 seconds (239.80 k allocations: 13.552 MiB, 18.03% gc time, 98.75% compilation time)
Running: chebyshev_quadrature with k=4
  0.271789 seconds (239.80 k allocations: 13.486 MiB, 99.24% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.495018 seconds (454.96 k allocations: 163.901 MiB, 5.23% gc time, 22.16% compilation time)
Running: legendre_quadrature
  0.211250 seconds (190.36 k allocations: 11.084 MiB, 86.48% compilation time)
Running: lobatto_quadrature
  0.207397 seconds (201.88 k allocations: 11.810 MiB, 98.64% compilation time)
Running: radau_quadrature
  0.349832 seconds (201.88 k allocations: 11.808 MiB, 99.46% compilation time)
Running: rectangle_rule_left
  0.483718 seconds (19.37 k allocations: 1.189 MiB, 3.56% gc time, 7.56% compilation time)
Running: rectangle_rule_midpoint
  0.019964 seconds (25.55 k allocations: 1.616 MiB, 99.34% compilation time)
Running: rectangle_rule_right
  0.452763 seconds (17.90 k allocations: 1.099 MiB, 3.52% compilation time)
Running: rombergs_method
  0.216068 seconds (137.77 k allocations: 8.025 MiB, 98.19% compilation time)
Running: simpsons_rule
  0.022757 seconds (37.98 k allocations: 2.442 MiB, 98.97% compilation time)
Running: simpsons38_rule
  0.027438 seconds (43.94 k allocations: 2.785 MiB, 99.18% compilation time)
Running: trapezoidal_rule
  0.020297 seconds (43.20 k allocations: 1.730 MiB, 96.20% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.035201 seconds (68.44 k allocations: 3.060 MiB, 97.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.269873 seconds (242.24 k allocations: 13.474 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=2
  0.187709 seconds (296.17 k allocations: 16.372 MiB, 19.54% gc time, 98.86% compilation time)
Running: chebyshev_quadrature with k=3
  0.146533 seconds (246.37 k allocations: 13.522 MiB, 98.66% compilation time)
Running: chebyshev_quadrature with k=4
  0.210507 seconds (246.37 k allocations: 13.524 MiB, 98.92% compilation time)
Running: hermite_quadrature with k=2
 15.711291 seconds (20.49 M allocations: 1.088 GiB, 15.94% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.091461 seconds (464.13 k allocations: 50.102 MiB, 63.28% gc time, 93.26% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.175452 seconds (282.35 k allocations: 15.726 MiB, 98.11% compilation time)
Running: legendre_quadrature
  0.147964 seconds (196.91 k allocations: 11.476 MiB, 98.49% compilation time)
Running: lobatto_quadrature
  0.180674 seconds (222.54 k allocations: 37.584 MiB, 9.29% gc time, 77.11% compilation time)
Running: radau_quadrature
  0.183747 seconds (219.13 k allocations: 30.284 MiB, 7.69% gc time, 82.53% compilation time)
Running: rectangle_rule_left
  0.016804 seconds (22.28 k allocations: 1.333 MiB, 99.27% compilation time)
Running: rectangle_rule_midpoint
  0.019320 seconds (27.36 k allocations: 1.703 MiB, 99.35% compilation time)
Running: rectangle_rule_right
  0.017831 seconds (19.02 k allocations: 1.153 MiB, 99.27% compilation time)
Running: rombergs_method
  0.129281 seconds (140.11 k allocations: 8.130 MiB, 98.43% compilation time)
Running: simpsons_rule
  0.019810 seconds (45.46 k allocations: 2.710 MiB, 99.07% compilation time)
Running: simpsons38_rule
  0.030107 seconds (58.91 k allocations: 3.170 MiB, 98.89% compilation time)
Running: trapezoidal_rule
  0.026530 seconds (29.23 k allocations: 1.655 MiB, 97.74% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048721 seconds (52.41 k allocations: 2.720 MiB, 52.58% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=1
  0.156326 seconds (237.76 k allocations: 13.243 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.191216 seconds (291.35 k allocations: 16.171 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.183760 seconds (241.90 k allocations: 13.330 MiB, 7.59% gc time, 98.71% compilation time)
Running: chebyshev_quadrature with k=4
  0.183656 seconds (241.91 k allocations: 13.331 MiB, 98.75% compilation time)
Running: hermite_quadrature with k=2
  0.154074 seconds (175.13 k allocations: 10.126 MiB, 98.67% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  6.864969 seconds (457.40 k allocations: 1.175 GiB, 21.80% gc time, 5.39% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.181950 seconds (277.64 k allocations: 15.553 MiB, 13.51% gc time, 98.17% compilation time)
Running: legendre_quadrature
  0.128316 seconds (192.47 k allocations: 11.190 MiB, 98.33% compilation time)
Running: lobatto_quadrature
  0.228050 seconds (213.30 k allocations: 23.311 MiB, 91.30% compilation time)
Running: radau_quadrature
  0.236630 seconds (212.45 k allocations: 21.243 MiB, 4.43% gc time, 88.03% compilation time)
Running: rectangle_rule_left
  0.031750 seconds (20.07 k allocations: 1.228 MiB, 99.37% compilation time)
Running: rectangle_rule_midpoint
  0.026174 seconds (26.25 k allocations: 1.652 MiB, 99.28% compilation time)
Running: rectangle_rule_right
  0.017887 seconds (17.88 k allocations: 1.099 MiB, 98.89% compilation time)
Running: rombergs_method
  0.096217 seconds (135.95 k allocations: 7.879 MiB, 97.15% compilation time)
Running: simpsons_rule
  0.020932 seconds (40.80 k allocations: 2.541 MiB, 98.81% compilation time)
Running: simpsons38_rule
  0.035685 seconds (49.73 k allocations: 2.931 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.031579 seconds (24.14 k allocations: 1.492 MiB, 96.40% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.032833 seconds (40.61 k allocations: 2.580 MiB, 70.67% compilation time)
Running: chebyshev_quadrature with k=1
  0.237140 seconds (236.14 k allocations: 13.462 MiB, 10.41% gc time, 98.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.292669 seconds (289.64 k allocations: 16.491 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.257284 seconds (240.28 k allocations: 13.548 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.182404 seconds (240.28 k allocations: 13.373 MiB, 11.73% gc time, 97.40% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.668034 seconds (455.50 k allocations: 194.946 MiB, 7.16% gc time, 28.25% compilation time)
Running: legendre_quadrature
  0.130833 seconds (190.86 k allocations: 11.118 MiB, 98.24% compilation time)
Running: lobatto_quadrature
  0.167322 seconds (202.38 k allocations: 11.832 MiB, 10.61% gc time, 98.47% compilation time)
Running: radau_quadrature
  0.141076 seconds (202.38 k allocations: 11.838 MiB, 98.18% compilation time)
Running: rectangle_rule_left
  0.310367 seconds (19.89 k allocations: 1.214 MiB, 6.20% compilation time)
Running: rectangle_rule_midpoint
  0.024208 seconds (25.89 k allocations: 1.634 MiB, 99.29% compilation time)
Running: rectangle_rule_right
  0.166711 seconds (18.25 k allocations: 1.118 MiB, 20.19% compilation time)
Running: rombergs_method
  0.283156 seconds (149.07 k allocations: 8.790 MiB, 98.83% compilation time)
Running: simpsons_rule
  0.019634 seconds (38.61 k allocations: 2.470 MiB, 99.08% compilation time)
Running: simpsons38_rule
  0.027994 seconds (44.65 k allocations: 2.815 MiB, 99.26% compilation time)
Running: trapezoidal_rule
  0.101948 seconds (44.13 k allocations: 1.763 MiB, 99.41% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.584596 seconds (40.35 k allocations: 2.510 MiB, 99.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.262948 seconds (236.73 k allocations: 13.418 MiB, 12.83% gc time, 98.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.544362 seconds (290.27 k allocations: 16.392 MiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=3
  0.230674 seconds (240.88 k allocations: 13.472 MiB, 98.97% compilation time)
Running: chebyshev_quadrature with k=4
  0.230380 seconds (240.87 k allocations: 13.545 MiB, 13.08% gc time, 98.80% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.824382 seconds (456.21 k allocations: 149.635 MiB, 6.90% gc time, 44.55% compilation time)
Running: legendre_quadrature
  0.223764 seconds (191.45 k allocations: 11.126 MiB, 98.73% compilation time)
Running: lobatto_quadrature
  0.260064 seconds (202.98 k allocations: 11.860 MiB, 5.99% gc time, 97.75% compilation time)
Running: radau_quadrature
  0.191289 seconds (202.97 k allocations: 11.853 MiB, 98.61% compilation time)
Running: rectangle_rule_left
  0.576388 seconds (20.14 k allocations: 1.227 MiB, 4.13% compilation time)
Running: rectangle_rule_midpoint
  0.063565 seconds (25.89 k allocations: 1.635 MiB, 99.69% compilation time)
Running: rectangle_rule_right
  0.617221 seconds (18.20 k allocations: 1.115 MiB, 3.78% compilation time)
Running: rombergs_method
  0.212668 seconds (138.99 k allocations: 8.082 MiB, 98.10% compilation time)
Running: simpsons_rule
  0.024512 seconds (39.09 k allocations: 2.489 MiB, 99.22% compilation time)
Running: simpsons38_rule
  0.028186 seconds (45.35 k allocations: 2.842 MiB, 99.36% compilation time)
Running: trapezoidal_rule
  0.013917 seconds (56.28 k allocations: 1.959 MiB, 95.33% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.128556 seconds (152.10 k allocations: 9.115 MiB, 99.66% compilation time)
Running: chebyshev_quadrature with k=1
  0.112304 seconds (70.34 k allocations: 2.237 MiB, 98.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.395984 seconds (105.50 k allocations: 2.900 MiB, 14.79% gc time, 98.62% compilation time)
Running: chebyshev_quadrature with k=3
  0.183374 seconds (92.98 k allocations: 2.686 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.126809 seconds (72.52 k allocations: 2.282 MiB, 98.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.377421 seconds (485.55 k allocations: 168.155 MiB, 7.09% gc time, 18.93% compilation time)
Running: legendre_quadrature
  0.093412 seconds (19.14 k allocations: 1.125 MiB, 99.70% compilation time)
Running: lobatto_quadrature
  0.000099 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 17.529664 seconds (590.00 M allocations: 8.792 GiB, 6.55% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 17.492998 seconds (592.75 M allocations: 8.833 GiB, 5.68% gc time)
Running: rombergs_method
  0.228963 seconds (20.91 k allocations: 1.197 MiB, 99.74% compilation time)
Running: simpsons_rule
  0.000043 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026309 seconds (463 allocations: 22.578 KiB, 99.55% compilation time)
Running: trapezoidal_rule
  0.016742 seconds (171 allocations: 7.859 KiB, 99.10% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.107328 seconds (209.94 M allocations: 3.138 GiB, 1.54% gc time, 0.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.409135 seconds (423.15 k allocations: 23.754 MiB, 99.33% compilation time)
Running: chebyshev_quadrature with k=2
 16.381911 seconds (478.71 k allocations: 4.041 GiB, 2.74% gc time, 4.57% compilation time)
Running: chebyshev_quadrature with k=3
  7.137144 seconds (254.26 k allocations: 1.642 GiB, 3.33% gc time, 1.99% compilation time)
Running: chebyshev_quadrature with k=4
 10.055213 seconds (254.25 k allocations: 2.261 GiB, 1.78% gc time, 2.69% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 29.263204 seconds (493.20 k allocations: 13.255 GiB, 8.66% gc time, 1.01% compilation time)
Running: legendre_quadrature.
  7.983761 seconds (229.06 k allocations: 1.976 GiB, 0.73% gc time, 2.02% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.954790 seconds (8.24 M allocations: 13.384 GiB, 6.64% gc time, 0.46% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.738276 seconds (7.24 M allocations: 13.369 GiB, 7.61% gc time, 0.49% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.180474 seconds (22.88 k allocations: 1.394 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.402457 seconds (31.46 k allocations: 1.956 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 12.863906 seconds (23.09 k allocations: 1.403 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.378899 seconds (448.84 k allocations: 153.527 MiB, 1.14% gc time, 29.50% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.218199 seconds (200.04 M allocations: 2.983 GiB, 1.98% gc time, 0.53% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.232636 seconds (600.05 M allocations: 8.944 GiB, 5.69% gc time, 0.11% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.082331 seconds (600.03 M allocations: 8.943 GiB, 3.92% gc time, 0.08% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.063165 seconds (111.10 k allocations: 4.245 MiB, 94.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.186836 seconds (252.71 k allocations: 13.877 MiB, 98.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.171657 seconds (277.25 k allocations: 14.964 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.374346 seconds (224.24 k allocations: 11.980 MiB, 35.08% gc time, 99.63% compilation time)
Running: chebyshev_quadrature with k=4
  0.233510 seconds (224.24 k allocations: 11.976 MiB, 99.35% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.330305 seconds (394.79 k allocations: 35.537 MiB, 93.59% compilation time)
Running: laguerre_quadrature with k=2
  0.222185 seconds (185.19 k allocations: 10.903 MiB, 81.73% compilation time)
Running: legendre_quadrature
  0.206399 seconds (149.17 k allocations: 8.338 MiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.025126 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017801 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.026556 seconds (19.35 k allocations: 1.157 MiB, 66.05% compilation time)
Running: rectangle_rule_midpoint
  0.050648 seconds (26.33 k allocations: 1.636 MiB, 72.12% compilation time)
Running: rectangle_rule_right
  0.033203 seconds (17.96 k allocations: 1.084 MiB, 68.81% compilation time)
Running: rombergs_method
  0.264100 seconds (176.50 k allocations: 10.190 MiB, 98.95% compilation time)
Running: simpsons_rule
  0.000484 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.042101 seconds (80.36 k allocations: 3.491 MiB, 97.83% compilation time)
Running: trapezoidal_rule
  0.108584 seconds (2.39 M allocations: 37.744 MiB, 27.17% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000679 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.090855 seconds (2.46 k allocations: 1.691 MiB, 97.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.094138 seconds (2.71 k allocations: 2.355 MiB, 96.44% compilation time)
Running: chebyshev_quadrature with k=3
  0.087955 seconds (2.31 k allocations: 2.028 MiB, 92.39% compilation time)
Running: chebyshev_quadrature with k=4
  0.091374 seconds (2.31 k allocations: 1.469 MiB, 97.85% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.804571 seconds (371.63 k allocations: 905.326 MiB, 4.13% gc time, 7.67% compilation time)
Running: legendre_quadrature
  0.069713 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000145 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000104 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.378987 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000370 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.313894 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.041032 seconds (993 allocations: 56.609 KiB, 99.49% compilation time)
Running: simpsons_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000905 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000091 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.100058 seconds (2.53 k allocations: 579.203 KiB, 99.53% compilation time)
Running: chebyshev_quadrature with k=2
  0.094964 seconds (2.79 k allocations: 780.188 KiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=3
  0.085305 seconds (2.39 k allocations: 661.047 KiB, 99.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.079611 seconds (2.39 k allocations: 491.547 KiB, 99.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.913689 seconds (378.19 k allocations: 253.437 MiB, 22.55% compilation time)
Running: legendre_quadrature
  0.069026 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000095 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000038 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.061104 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000069 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.905128 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.063050 seconds (1.21 k allocations: 64.875 KiB, 99.67% compilation time)
Running: simpsons_rule
  0.000007 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000006 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000246 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
     Testing FunctionIntegrator tests passed 
Finished at 2020-10-26T21:04:36.689
