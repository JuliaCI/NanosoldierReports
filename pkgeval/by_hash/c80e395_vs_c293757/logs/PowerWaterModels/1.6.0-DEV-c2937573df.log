Current time is 2020-10-26T21:48:23.555
Julia Version 1.6.0-DEV.1340
Commit c2937573df (2020-10-26 20:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807
  JULIA_PKG_SERVER = 

Starting installation at 2020-10-26T21:48:24.791
   Resolving package versions...
   Installed Rmath_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2+1
   Installed Bzip2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.6+5
   Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
   Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
   Installed StatsFuns â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
   Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed PowerWaterModels â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.1
   Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
   Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
   Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
   Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
   Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
   Installed NLSolversBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.7.1
   Installed InfrastructureModels â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
   Installed UnPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed CodecBzip2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.2
   Installed Arpack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+4
   Installed NLsolve â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.4.1
   Installed JLLWrappers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
   Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.17.20
   Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.6
   Installed MathOptInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.17
   Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
   Installed ExprTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.3
   Installed Arpack_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.5.0+3
   Installed XML2_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.9.10+3
   Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed Zlib_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.11+18
   Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.12
   Installed FiniteDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.7.0
   Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.4
   Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.14
   Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.13.6
   Installed PDMats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.12
   Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
   Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
   Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.4.1
   Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.19
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
   Installed PowerModels â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.17.3
   Installed OptimBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.1
   Installed Libiconv_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.16.0+7
   Installed LsqFit â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.0
   Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
   Installed LineSearches â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.1.0
   Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
   Installed Distributions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.22.6
   Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10+0
   Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.1
   Installed MbedTLS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.16.8+0
   Installed CompilerSupportLibraries_jll â”€ v0.3.4+0
   Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Installed WaterModels â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed JSONSchema â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.2
   Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
   Installed PowerModelsDistribution â”€â”€â”€â”€â”€â”€ v0.9.2
   Installed MutableArithmetics â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.10
   Installed JuMP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.4
   Installed TranscodingStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
     Cloning [6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf] BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
     Cloning [b4f34e82-e78d-54a5-968a-f98e89d6e8f7] Distances from https://github.com/JuliaStats/Distances.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Distances â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
     Cloning [cea106d9-e007-5e6c-ad93-58fe2094e9c4] Syslogs from https://github.com/invenia/Syslogs.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Syslogs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
     Cloning [f28f55f0-a522-5efc-85c2-fe41dfb9b2d9] Memento from https://github.com/invenia/Memento.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed Memento â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
     Cloning [276daf66-3868-5448-9aa4-cd146d93841b] SpecialFunctions from https://github.com/JuliaMath/SpecialFunctions.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
     Cloning [a5390f91-8eb1-5f08-bee0-b1d1ffed6cea] ZipFile from https://github.com/fhs/ZipFile.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed ZipFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.3
     Cloning [163ba53b-c6d8-5494-b064-1a9d43ac40c5] DiffResults from https://github.com/JuliaDiff/DiffResults.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.2
     Cloning [77ba4419-2d1f-58cd-9bb1-8ffee604a2e3] NaNMath from https://github.com/mlubin/NaNMath.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h   Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [7f4f7f52] + PowerWaterModels v0.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [4fba245c] + ArrayInterface v2.13.6
  [6e4b80f9] + BenchmarkTools v0.5.0
  [49dc2e85] + Calculus v0.5.1
  [523fee87] + CodecBzip2 v0.7.2
  [944b1d66] + CodecZlib v0.7.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.2
  [31c24e10] + Distributions v0.22.6
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [cd3eb016] + HTTP v0.8.19
  [2030c09a] + InfrastructureModels v0.5.3
  [83e8ac13] + IniFile v0.5.0
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [7d188eb4] + JSONSchema v0.3.2
  [4076af6c] + JuMP v0.21.4
  [d3d80556] + LineSearches v7.1.0
  [2fda8390] + LsqFit v0.10.0
  [1914dd2f] + MacroTools v0.5.6
  [b8f27783] + MathOptInterface v0.9.17
  [739be429] + MbedTLS v1.0.2
  [f28f55f0] + Memento v1.0.0
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d8a4904e] + MutableArithmetics v0.2.10
  [d41bc354] + NLSolversBase v7.7.1
  [2774e3e8] + NLsolve v4.4.1
  [77ba4419] + NaNMath v0.3.4
  [87e2bd06] + OptimBase v2.0.1
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [c36e90e8] + PowerModels v0.17.3
  [d7431456] + PowerModelsDistribution v0.9.2
  [7f4f7f52] + PowerWaterModels v0.0.1
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.5
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v1.4.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [7c60b362] + WaterModels v0.3.0
  [a5390f91] + ZipFile v0.9.3
  [68821587] + Arpack_jll v3.5.0+3
  [6e34b625] + Bzip2_jll v1.0.6+5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones â†’ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[32m  âœ“ [39m[90mNaNMath[39m
[32m  âœ“ [39m[90mUnPack[39m
[32m  âœ“ [39m[90mDataAPI[39m
[32m  âœ“ [39m[90mReexport[39m
[32m  âœ“ [39m[90mIniFile[39m
[32m  âœ“ [39m[90mRequires[39m
[32m  âœ“ [39m[90mJLLWrappers[39m
[32m  âœ“ [39m[90mSyslogs[39m
[32m  âœ“ [39m[90mOrderedCollections[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mDistances[39m
[32m  âœ“ [39m[90mCalculus[39m
[32m  âœ“ [39m[90mTranscodingStreams[39m
[32m  âœ“ [39m[90mParameters[39m
[32m  âœ“ [39m[90mFillArrays[39m
[32m  âœ“ [39m[90mMbedTLS_jll[39m
[32m  âœ“ [39m[90mRmath_jll[39m
[32m  âœ“ [39m[90mBzip2_jll[39m
[32m  âœ“ [39m[90mZlib_jll[39m
[32m  âœ“ [39m[90mLibiconv_jll[39m
[32m  âœ“ [39m[90mCompilerSupportLibraries_jll[39m
[32m  âœ“ [39m[90mCodecBzip2[39m
[32m  âœ“ [39m[90mCodecZlib[39m
[32m  âœ“ [39m[90mRmath[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mZipFile[39m
[32m  âœ“ [39m[90mMbedTLS[39m
[32m  âœ“ [39m[90mMacroTools[39m
[32m  âœ“ [39m[90mDataStructures[39m
[32m  âœ“ [39m[90mXML2_jll[39m
[32m  âœ“ [39m[90mOpenSpecFun_jll[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mOpenBLAS_jll[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mCommonSubexpressions[39m
[32m  âœ“ [39m[90mEzXML[39m
[32m  âœ“ [39m[90mQuadGK[39m
[32m  âœ“ [39m[90mJSON[39m
[32m  âœ“ [39m[90mArpack_jll[39m
[32m  âœ“ [39m[90mStaticArrays[39m
[32m  âœ“ [39m[90mBenchmarkTools[39m
[32m  âœ“ [39m[90mArpack[39m
[32m  âœ“ [39m[90mHTTP[39m
[32m  âœ“ [39m[90mStatsBase[39m
[32m  âœ“ [39m[90mSpecialFunctions[39m
[32m  âœ“ [39m[90mDiffResults[39m
[32m  âœ“ [39m[90mPDMats[39m
[32m  âœ“ [39m[90mTimeZones[39m
[32m  âœ“ [39m[90mDiffRules[39m
[32m  âœ“ [39m[90mJSONSchema[39m
[32m  âœ“ [39m[90mFiniteDiff[39m
[32m  âœ“ [39m[90mStatsFuns[39m
[32m  âœ“ [39m[90mMutableArithmetics[39m
[32m  âœ“ [39m[90mMemento[39m
[32m  âœ“ [39m[90mForwardDiff[39m
[32m  âœ“ [39m[90mNLSolversBase[39m
[32m  âœ“ [39m[90mDistributions[39m
[32m  âœ“ [39m[90mOptimBase[39m
[32m  âœ“ [39m[90mLineSearches[39m
[32m  âœ“ [39m[90mLsqFit[39m
[32m  âœ“ [39m[90mNLsolve[39m
[32m  âœ“ [39m[90mMathOptInterface[39m
[32m  âœ“ [39m[90mJuMP[39m
[32m  âœ“ [39m[90mInfrastructureModels[39m
[32m  âœ“ [39m[90mWaterModels[39m
[32m  âœ“ [39m[90mPowerModels[39m
[32m  âœ“ [39m[90mPowerModelsDistribution[39m
[32m  âœ“ [39mPowerWaterModels
68 dependencies successfully precompiled (3 already precompiled)
Starting tests at 2020-10-26T21:53:31.465
     Testing PowerWaterModels
Status `/tmp/jl_3uEG6Y/Project.toml`
  [9961bab8] Cbc v0.7.1
  [2030c09a] InfrastructureModels v0.5.3
  [b6b21f68] Ipopt v0.6.3
  [682c06a0] JSON v0.21.1
  [4076af6c] JuMP v0.21.4
  [2ddba703] Juniper v0.6.5
  [f28f55f0] Memento v1.0.0
  [d7431456] PowerModelsDistribution v0.9.2
  [7f4f7f52] PowerWaterModels v0.0.1
  [7c60b362] WaterModels v0.3.0
  [8dfed614] Test
Status `/tmp/jl_3uEG6Y/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [4fba245c] ArrayInterface v2.13.6
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [49dc2e85] Calculus v0.5.1
  [9961bab8] Cbc v0.7.1
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [31c24e10] Distributions v0.22.6
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [cd3eb016] HTTP v0.8.19
  [2030c09a] InfrastructureModels v0.5.3
  [83e8ac13] IniFile v0.5.0
  [b6b21f68] Ipopt v0.6.3
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [4076af6c] JuMP v0.21.4
  [2ddba703] Juniper v0.6.5
  [d3d80556] LineSearches v7.1.0
  [2fda8390] LsqFit v0.10.0
  [1914dd2f] MacroTools v0.5.6
  [b8f27783] MathOptInterface v0.9.17
  [fdba3010] MathProgBase v0.7.8
  [739be429] MbedTLS v1.0.2
  [f28f55f0] Memento v1.0.0
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d8a4904e] MutableArithmetics v0.2.10
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [87e2bd06] OptimBase v2.0.1
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [c36e90e8] PowerModels v0.17.3
  [d7431456] PowerModelsDistribution v0.9.2
  [7f4f7f52] PowerWaterModels v0.0.1
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.5
  [cea106d9] Syslogs v0.3.0
  [f269a46b] TimeZones v1.4.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [7c60b362] WaterModels v0.3.0
  [a5390f91] ZipFile v0.9.3
  [ae81ac8f] ASL_jll v0.1.1+3
  [68821587] Arpack_jll v3.5.0+3
  [6e34b625] Bzip2_jll v1.0.6+5
  [38041ee0] Cbc_jll v2.10.3+4
  [3830e938] Cgl_jll v0.60.2+5
  [06985876] Clp_jll v1.17.6+6
  [be027038] CoinUtils_jll v2.11.3+3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [9cc047cb] Ipopt_jll v3.13.2+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [d00139f3] METIS_jll v5.1.0+4
  [d7ed1dd3] MUMPS_seq_jll v5.2.1+3
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [656ef2d0] OpenBLAS32_jll v0.3.10+0
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [7da25872] Osi_jll v0.108.5+3
  [f50d1b31] Rmath_jll v0.2.2+1
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
instantiate_model (with file inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:7
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] instantiate_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:7
   [24] instantiate_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:4
   [25] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:8 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [27] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:8 [inlined]
   [28] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [29] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
instantiate_model (with network inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:12
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:16
   [24] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:14 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:13 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [32] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
[error | PowerWaterModels]: Multinetworks are not of the same length.
[error | PowerWaterModels]: Multinetworks are not of the same length.
run_model (with file inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:26
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:68
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:27 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:27 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
run_model (with network inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:31
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:42
   [25] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:33 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [27] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:32 [inlined]
   [28] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [29] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
[error | PowerWaterModels]: Multinetworks do not have the same indices.
[error | PowerWaterModels]: Multinetworks do not have the same indices.
3-bus LinDist3FlowPowerModel and MILPWaterModel: Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_pwf#27
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:9 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:3 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:44 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:14
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_pwf#27
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:21 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:15 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:44 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel: Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_opwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_opwf#32
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:9 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:3 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:14
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_opwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_opwf#32
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:21 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:15 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
Test Summary:                                                   | Pass  Error  Total
PowerWaterModels                                                |   17      8     25
  src/PowerWaterModels.jl                                       |    3             3
  src/core/base.jl                                              |    1      4      5
    instantiate_model (with file inputs)                        |           1      1
    instantiate_model (with network inputs)                     |           1      1
    instantiate_model (with network inputs; error)              |    1             1
    run_model (with file inputs)                                |           1      1
    run_model (with network inputs)                             |           1      1
  src/io/common.jl                                              |    6             6
  src/core/data.jl                                              |    7             7
  Power-Water Flow Feasibility Problems                         |           2      2
    3-bus LinDist3FlowPowerModel and MILPWaterModel             |           1      1
    3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep) |           1      1
  Optimal Power-Water Flow Problems                             |           2      2
    3-bus LinDist3FlowPowerModel and MILPWaterModel             |           1      1
    3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep) |           1      1
ERROR: LoadError: Some tests did not pass: 17 passed, 0 failed, 8 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:34
ERROR: Package PowerWaterModels errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:35
