Julia Version 1.6.0-DEV.1211
Commit 15e1d592ef (2020-10-14 07:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_shrrF0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_shrrF0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.182483 seconds (288.94 k allocations: 13.516 MiB, 89.22% compilation time)
Running: chebyshev_quadrature with k=1
  1.297383 seconds (2.20 M allocations: 126.651 MiB, 3.36% gc time, 98.87% compilation time)
Running: chebyshev_quadrature with k=2
  0.134740 seconds (409.38 k allocations: 23.565 MiB, 84.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.536938 seconds (473.75 k allocations: 26.613 MiB, 3.51% gc time, 94.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.252287 seconds (418.56 k allocations: 23.256 MiB, 94.22% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 39.776843 seconds (34.88 M allocations: 2.927 GiB, 22.84% gc time, 81.86% compilation time)
Running: laguerre_quadrature with k=1
  4.927380 seconds (3.17 M allocations: 177.052 MiB, 2.68% gc time, 99.96% compilation time)
Running: legendre_quadrature
  0.579034 seconds (206.06 k allocations: 11.830 MiB, 14.22% gc time, 99.72% compilation time)
Running: lobatto_quadrature
  0.292524 seconds (329.49 k allocations: 19.886 MiB, 99.48% compilation time)
Running: radau_quadrature
  0.485766 seconds (447.50 k allocations: 27.295 MiB, 99.60% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 38.752338 seconds (100.02 M allocations: 1.491 GiB, 1.61% gc time, 0.83% compilation time)
Running: rectangle_rule_midpoint.
  0.154405 seconds (172.46 k allocations: 3.827 MiB, 51.95% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 41.446973 seconds (100.02 M allocations: 1.491 GiB, 0.73% gc time, 0.05% compilation time)
Running: rombergs_method
  1.413997 seconds (723.04 k allocations: 41.748 MiB, 1.93% gc time, 99.86% compilation time)
Running: simpsons_rule
  0.042389 seconds (46.55 k allocations: 2.532 MiB, 96.40% compilation time)
Running: simpsons38_rule
  0.067114 seconds (108.44 k allocations: 5.748 MiB, 97.13% compilation time)
Running: trapezoidal_rule
  0.441731 seconds (1.72 M allocations: 28.598 MiB, 4.09% gc time, 49.49% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.048583 seconds (29.80 k allocations: 1.767 MiB, 99.71% compilation time)
Running: chebyshev_quadrature with k=1
  0.301379 seconds (290.13 k allocations: 15.334 MiB, 99.68% compilation time)
Running: chebyshev_quadrature with k=2
  0.131132 seconds (93.80 k allocations: 2.675 MiB, 98.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.114437 seconds (82.06 k allocations: 2.476 MiB, 98.18% compilation time)
Running: chebyshev_quadrature with k=4
  0.113397 seconds (64.67 k allocations: 2.122 MiB, 99.06% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.617805 seconds (504.26 k allocations: 161.843 MiB, 11.63% gc time, 23.42% compilation time)
Running: legendre_quadrature
  0.192621 seconds (41.11 k allocations: 2.366 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.015612 seconds (15.50 k allocations: 985.794 KiB, 99.10% compilation time)
Running: radau_quadrature
  0.011874 seconds (15.61 k allocations: 993.009 KiB, 99.07% compilation time)
Running: rectangle_rule_left
 13.659773 seconds (471.41 M allocations: 7.025 GiB, 9.37% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 14.710514 seconds (476.96 M allocations: 7.107 GiB, 9.26% gc time)
Running: rombergs_method
  0.293227 seconds (326.43 k allocations: 18.521 MiB, 3.72% gc time, 99.83% compilation time)
Running: simpsons_rule
  0.000025 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.044865 seconds (18.91 k allocations: 1.146 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.048699 seconds (16.49 k allocations: 1.001 MiB, 99.78% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.018787 seconds (1.03 k allocations: 34.125 KiB, 99.51% compilation time)
Running: chebyshev_quadrature with k=1
  0.076412 seconds (2.46 k allocations: 116.359 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=2
  0.088445 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.096023 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.079041 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.328550 seconds (364.10 k allocations: 18.985 MiB, 99.00% compilation time)
Running: legendre_quadrature
  0.057762 seconds (1.28 k allocations: 65.891 KiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.000152 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000060 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000320 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000217 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000306 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072935 seconds (1.04 k allocations: 56.531 KiB, 99.66% compilation time)
Running: simpsons_rule
  0.000023 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.019552 seconds (923 allocations: 39.281 KiB, 99.50% compilation time)
Running: trapezoidal_rule
  0.015980 seconds (44.29 k allocations: 702.859 KiB, 90.72% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.040391 seconds (80.91 k allocations: 4.821 MiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=1
  0.212642 seconds (230.61 k allocations: 12.967 MiB, 16.14% gc time, 97.78% compilation time)
Running: chebyshev_quadrature with k=2
  0.185321 seconds (283.17 k allocations: 15.881 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.184407 seconds (234.76 k allocations: 13.159 MiB, 98.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.185798 seconds (234.76 k allocations: 13.045 MiB, 97.36% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.187505 seconds (447.19 k allocations: 163.212 MiB, 3.98% gc time, 19.21% compilation time)
Running: legendre_quadrature
  0.135072 seconds (185.44 k allocations: 10.727 MiB, 98.85% compilation time)
Running: lobatto_quadrature
  0.168098 seconds (196.77 k allocations: 11.418 MiB, 98.94% compilation time)
Running: radau_quadrature
  0.170457 seconds (196.76 k allocations: 11.419 MiB, 98.91% compilation time)
Running: rectangle_rule_left
  0.670847 seconds (18.82 k allocations: 1.147 MiB, 3.61% compilation time)
Running: rectangle_rule_midpoint
  0.025325 seconds (24.67 k allocations: 1.555 MiB, 99.36% compilation time)
Running: rectangle_rule_right
  0.637952 seconds (17.39 k allocations: 1.062 MiB, 4.02% compilation time)
Running: rombergs_method
  0.136799 seconds (134.27 k allocations: 7.778 MiB, 97.62% compilation time)
Running: simpsons_rule
  0.024386 seconds (36.49 k allocations: 2.341 MiB, 99.10% compilation time)
Running: simpsons38_rule
  0.061066 seconds (42.37 k allocations: 2.678 MiB, 52.01% gc time, 99.67% compilation time)
Running: trapezoidal_rule
  0.020657 seconds (42.32 k allocations: 1.671 MiB, 96.83% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.026934 seconds (66.94 k allocations: 2.959 MiB, 96.63% compilation time)
Running: chebyshev_quadrature with k=1
  0.147564 seconds (237.20 k allocations: 13.032 MiB, 98.76% compilation time)
Running: chebyshev_quadrature with k=2
  0.218202 seconds (290.20 k allocations: 15.887 MiB, 92.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.255585 seconds (241.34 k allocations: 13.181 MiB, 93.64% compilation time)
Running: chebyshev_quadrature with k=4
  0.193884 seconds (241.34 k allocations: 13.123 MiB, 99.12% compilation time)
Running: hermite_quadrature with k=2
 12.953518 seconds (20.10 M allocations: 1.056 GiB, 14.63% gc time, 99.97% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.434156 seconds (456.36 k allocations: 49.479 MiB, 7.73% gc time, 92.82% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.164036 seconds (276.26 k allocations: 15.248 MiB, 98.08% compilation time)
Running: legendre_quadrature
  0.139860 seconds (191.98 k allocations: 11.035 MiB, 98.39% compilation time)
Running: lobatto_quadrature
  0.218772 seconds (217.43 k allocations: 37.194 MiB, 12.51% gc time, 76.48% compilation time)
Running: radau_quadrature
  0.187149 seconds (214.01 k allocations: 29.879 MiB, 8.05% gc time, 88.09% compilation time)
Running: rectangle_rule_left
  0.017425 seconds (21.73 k allocations: 1.293 MiB, 99.15% compilation time)
Running: rectangle_rule_midpoint
  0.018471 seconds (26.47 k allocations: 1.642 MiB, 99.09% compilation time)
Running: rectangle_rule_right
  0.020789 seconds (18.50 k allocations: 1.117 MiB, 99.25% compilation time)
Running: rombergs_method
  0.084311 seconds (136.74 k allocations: 7.803 MiB, 97.41% compilation time)
Running: simpsons_rule
  0.025383 seconds (43.97 k allocations: 2.609 MiB, 98.93% compilation time)
Running: simpsons38_rule
  0.032432 seconds (57.34 k allocations: 3.063 MiB, 98.63% compilation time)
Running: trapezoidal_rule
  0.021171 seconds (28.35 k allocations: 1.595 MiB, 98.23% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.027518 seconds (50.91 k allocations: 2.619 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=1
  0.260913 seconds (232.72 k allocations: 12.830 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.186092 seconds (285.38 k allocations: 15.706 MiB, 11.87% gc time, 98.20% compilation time)
Running: chebyshev_quadrature with k=3
  0.154544 seconds (236.87 k allocations: 12.928 MiB, 98.65% compilation time)
Running: chebyshev_quadrature with k=4
  0.252110 seconds (236.87 k allocations: 12.929 MiB, 69.93% compilation time)
Running: hermite_quadrature with k=2
  0.352202 seconds (170.79 k allocations: 9.790 MiB, 9.74% gc time, 97.03% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 18.752250 seconds (449.62 k allocations: 1.175 GiB, 70.02% gc time, 1.56% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.118011 seconds (271.55 k allocations: 15.060 MiB, 97.78% compilation time)
Running: legendre_quadrature
  0.185698 seconds (187.55 k allocations: 10.819 MiB, 98.92% compilation time)
Running: lobatto_quadrature
  0.168138 seconds (208.18 k allocations: 22.923 MiB, 10.63% gc time, 91.65% compilation time)
Running: radau_quadrature
  0.143478 seconds (207.34 k allocations: 20.856 MiB, 91.06% compilation time)
Running: rectangle_rule_left
  0.017142 seconds (19.52 k allocations: 1.188 MiB, 99.29% compilation time)
Running: rectangle_rule_midpoint
  0.018801 seconds (25.36 k allocations: 1.591 MiB, 99.32% compilation time)
Running: rectangle_rule_right
  0.019466 seconds (17.36 k allocations: 1.062 MiB, 99.36% compilation time)
Running: rombergs_method
  0.093497 seconds (132.58 k allocations: 7.622 MiB, 97.57% compilation time)
Running: simpsons_rule
  0.024793 seconds (39.30 k allocations: 2.442 MiB, 99.21% compilation time)
Running: simpsons38_rule
  0.106089 seconds (48.16 k allocations: 2.821 MiB, 99.75% compilation time)
Running: trapezoidal_rule
  0.021376 seconds (23.26 k allocations: 1.433 MiB, 98.96% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.029434 seconds (39.05 k allocations: 2.475 MiB, 99.30% compilation time)
Running: chebyshev_quadrature with k=1
  0.144685 seconds (231.10 k allocations: 13.042 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.193015 seconds (283.67 k allocations: 15.997 MiB, 9.13% gc time, 98.11% compilation time)
Running: chebyshev_quadrature with k=3
  0.145013 seconds (235.25 k allocations: 13.141 MiB, 98.34% compilation time)
Running: chebyshev_quadrature with k=4
  0.145893 seconds (235.25 k allocations: 12.975 MiB, 98.55% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.408011 seconds (447.72 k allocations: 194.259 MiB, 9.03% gc time, 16.54% compilation time)
Running: legendre_quadrature
  0.126229 seconds (185.93 k allocations: 10.732 MiB, 98.23% compilation time)
Running: lobatto_quadrature
  0.157291 seconds (197.26 k allocations: 11.447 MiB, 98.52% compilation time)
Running: radau_quadrature
  0.196533 seconds (197.26 k allocations: 11.445 MiB, 9.84% gc time, 98.90% compilation time)
Running: rectangle_rule_left
  0.352580 seconds (19.34 k allocations: 1.173 MiB, 11.59% compilation time)
Running: rectangle_rule_midpoint
  0.020376 seconds (25.01 k allocations: 1.573 MiB, 99.37% compilation time)
Running: rectangle_rule_right
  0.152828 seconds (17.73 k allocations: 1.081 MiB, 14.31% compilation time)
Running: rombergs_method
  0.090972 seconds (145.02 k allocations: 8.485 MiB, 96.34% compilation time)
Running: simpsons_rule
  0.025455 seconds (37.11 k allocations: 2.369 MiB, 99.26% compilation time)
Running: simpsons38_rule
  0.025822 seconds (43.08 k allocations: 2.709 MiB, 99.35% compilation time)
Running: trapezoidal_rule
  0.016727 seconds (43.25 k allocations: 1.703 MiB, 96.09% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.020179 seconds (38.85 k allocations: 2.409 MiB, 98.96% compilation time)
Running: chebyshev_quadrature with k=1
  0.127948 seconds (231.69 k allocations: 12.992 MiB, 98.22% compilation time)
Running: chebyshev_quadrature with k=2
  0.133368 seconds (284.30 k allocations: 15.892 MiB, 98.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.145036 seconds (235.84 k allocations: 13.071 MiB, 94.87% compilation time)
Running: chebyshev_quadrature with k=4
  0.204375 seconds (235.84 k allocations: 13.143 MiB, 7.61% gc time, 98.76% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.326496 seconds (448.44 k allocations: 148.960 MiB, 10.29% gc time, 27.09% compilation time)
Running: legendre_quadrature
  0.112546 seconds (186.53 k allocations: 10.750 MiB, 97.66% compilation time)
Running: lobatto_quadrature
  0.163195 seconds (197.86 k allocations: 11.468 MiB, 98.57% compilation time)
Running: radau_quadrature
  0.134755 seconds (197.85 k allocations: 11.462 MiB, 98.38% compilation time)
Running: rectangle_rule_left
  0.714181 seconds (19.59 k allocations: 1.186 MiB, 3.26% compilation time)
Running: rectangle_rule_midpoint
  0.021741 seconds (25.01 k allocations: 1.574 MiB, 98.93% compilation time)
Running: rectangle_rule_right
  0.668008 seconds (17.69 k allocations: 1.078 MiB, 3.62% compilation time)
Running: rombergs_method
  0.130854 seconds (135.49 k allocations: 7.815 MiB, 15.02% gc time, 97.36% compilation time)
Running: simpsons_rule
  0.099925 seconds (37.60 k allocations: 2.390 MiB, 98.76% compilation time)
Running: simpsons38_rule
  0.039375 seconds (43.78 k allocations: 2.734 MiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.017055 seconds (55.40 k allocations: 1.899 MiB, 96.05% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.140854 seconds (147.46 k allocations: 8.795 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.178167 seconds (69.93 k allocations: 2.205 MiB, 98.83% compilation time)
Running: chebyshev_quadrature with k=2
  0.137735 seconds (105.09 k allocations: 2.868 MiB, 97.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.175506 seconds (92.57 k allocations: 2.654 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=4
  0.142487 seconds (72.10 k allocations: 2.248 MiB, 98.30% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.775480 seconds (480.75 k allocations: 167.800 MiB, 6.84% gc time, 22.88% compilation time)
Running: legendre_quadrature
  0.135165 seconds (18.73 k allocations: 1.094 MiB, 99.82% compilation time)
Running: lobatto_quadrature
  0.000080 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000032 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 19.482546 seconds (590.00 M allocations: 8.792 GiB, 7.30% gc time)
Running: rectangle_rule_midpoint
  0.000090 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.709454 seconds (592.75 M allocations: 8.833 GiB, 8.83% gc time)
Running: rombergs_method
  0.115222 seconds (20.51 k allocations: 1.165 MiB, 99.45% compilation time)
Running: simpsons_rule
  0.000042 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.018294 seconds (463 allocations: 22.578 KiB, 99.44% compilation time)
Running: trapezoidal_rule
  0.011257 seconds (171 allocations: 7.859 KiB, 99.23% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.903882 seconds (209.93 M allocations: 3.138 GiB, 2.19% gc time, 0.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.350777 seconds (413.95 k allocations: 22.950 MiB, 99.14% compilation time)
Running: chebyshev_quadrature with k=2
 16.496677 seconds (468.59 k allocations: 4.040 GiB, 2.13% gc time, 2.43% compilation time)
Running: chebyshev_quadrature with k=3
  7.782233 seconds (249.12 k allocations: 1.642 GiB, 4.12% gc time, 4.47% compilation time)
Running: chebyshev_quadrature with k=4
 10.466783 seconds (249.12 k allocations: 2.260 GiB, 2.10% gc time, 1.48% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 30.095501 seconds (484.45 k allocations: 13.254 GiB, 5.93% gc time, 1.14% compilation time)
Running: legendre_quadrature.
  7.452872 seconds (223.21 k allocations: 1.976 GiB, 0.95% gc time, 1.81% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.141537 seconds (8.23 M allocations: 13.383 GiB, 7.16% gc time, 0.47% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.564398 seconds (7.23 M allocations: 13.369 GiB, 5.86% gc time, 0.50% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.404633 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.964921 seconds (30.45 k allocations: 1.884 MiB, 0.18% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.620442 seconds (22.45 k allocations: 1.357 MiB, 0.21% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.418424 seconds (438.06 k allocations: 152.673 MiB, 10.72% gc time, 8.68% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 23.144240 seconds (200.04 M allocations: 2.983 GiB, 2.10% gc time, 0.10% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 23.918343 seconds (600.05 M allocations: 8.943 GiB, 5.29% gc time, 0.87% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.689442 seconds (600.03 M allocations: 8.943 GiB, 3.95% gc time, 0.07% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.051930 seconds (109.56 k allocations: 4.131 MiB, 94.17% compilation time)
Running: chebyshev_quadrature with k=1
  0.143010 seconds (247.70 k allocations: 13.449 MiB, 97.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.115603 seconds (272.34 k allocations: 14.521 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=3
  0.113442 seconds (220.25 k allocations: 11.633 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.186022 seconds (220.25 k allocations: 11.661 MiB, 41.26% gc time, 99.44% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.189941 seconds (389.30 k allocations: 35.018 MiB, 92.18% compilation time)
Running: laguerre_quadrature with k=2
  0.122872 seconds (180.54 k allocations: 10.483 MiB, 79.71% compilation time)
Running: legendre_quadrature
  0.074896 seconds (145.98 k allocations: 8.073 MiB, 99.80% compilation time)
Running: lobatto_quadrature
  0.013990 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.011908 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.037922 seconds (18.88 k allocations: 1.121 MiB, 59.06% compilation time)
Running: rectangle_rule_midpoint
  0.020091 seconds (25.48 k allocations: 1.575 MiB, 72.28% compilation time)
Running: rectangle_rule_right
  0.021460 seconds (17.48 k allocations: 1.049 MiB, 63.00% compilation time)
Running: rombergs_method
  0.132955 seconds (172.17 k allocations: 9.831 MiB, 98.47% compilation time)
Running: simpsons_rule
  0.000437 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.036425 seconds (78.86 k allocations: 3.385 MiB, 97.95% compilation time)
Running: trapezoidal_rule
  0.099913 seconds (2.39 M allocations: 37.684 MiB, 28.83% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000594 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.105125 seconds (2.46 k allocations: 1.691 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=2
  0.103066 seconds (2.71 k allocations: 2.355 MiB, 96.88% compilation time)
Running: chebyshev_quadrature with k=3
  0.090477 seconds (2.31 k allocations: 2.028 MiB, 97.08% compilation time)
Running: chebyshev_quadrature with k=4
  0.083484 seconds (2.31 k allocations: 1.469 MiB, 97.53% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  5.019419 seconds (366.38 k allocations: 904.821 MiB, 4.86% gc time, 5.21% compilation time)
Running: legendre_quadrature
  0.060055 seconds (1.27 k allocations: 68.203 KiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.000148 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000114 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.936528 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000260 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.070725 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.037061 seconds (997 allocations: 56.672 KiB, 99.62% compilation time)
Running: simpsons_rule
  0.000020 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000018 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000577 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000137 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.104282 seconds (2.53 k allocations: 579.203 KiB, 99.47% compilation time)
Running: chebyshev_quadrature with k=2
  0.100093 seconds (2.79 k allocations: 780.188 KiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=3
  0.085115 seconds (2.39 k allocations: 661.047 KiB, 99.21% compilation time)
Running: chebyshev_quadrature with k=4
  0.091682 seconds (2.39 k allocations: 491.547 KiB, 99.47% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.783578 seconds (372.94 k allocations: 252.936 MiB, 17.95% compilation time)
Running: legendre_quadrature
  0.074166 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000077 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000037 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.952997 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000060 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.828003 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.062392 seconds (1.21 k allocations: 64.938 KiB, 99.73% compilation time)
Running: simpsons_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000005 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000204 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
