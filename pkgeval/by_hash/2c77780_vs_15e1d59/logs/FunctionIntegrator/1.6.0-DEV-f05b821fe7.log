Julia Version 1.6.0-DEV.1218
Commit f05b821fe7 (2020-10-14 11:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+3
  Installed FunctionIntegrator â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Installed FastGaussQuadrature â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
  Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.3
  Installed CompilerSupportLibraries_jll â”€ v0.3.3+0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.6.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mCompilerSupportLibraries_jll[39m
[90m[32m  âœ“ [39mOpenSpecFun_jll[39m
[90m[32m  âœ“ [39mSpecialFunctions[39m
[90m[32m  âœ“ [39mFastGaussQuadrature[39m
[32m  âœ“ [39mFunctionIntegrator
5 dependencies successfully precompiled

    Testing FunctionIntegrator
Status `/tmp/jl_uLSTnX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_uLSTnX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.267533 seconds (288.92 k allocations: 13.522 MiB, 93.85% compilation time)
Running: chebyshev_quadrature with k=1
  1.481236 seconds (2.20 M allocations: 126.645 MiB, 3.71% gc time, 98.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.273241 seconds (409.38 k allocations: 23.570 MiB, 83.95% compilation time)
Running: chebyshev_quadrature with k=3
  0.394195 seconds (473.75 k allocations: 26.633 MiB, 2.31% gc time, 66.32% compilation time)
Running: chebyshev_quadrature with k=4
  0.446938 seconds (418.56 k allocations: 23.252 MiB, 85.20% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 45.148471 seconds (34.86 M allocations: 2.927 GiB, 24.46% gc time, 77.81% compilation time)
Running: laguerre_quadrature with k=1
  2.898384 seconds (3.17 M allocations: 177.045 MiB, 4.22% gc time, 99.91% compilation time)
Running: legendre_quadrature
  0.239059 seconds (206.19 k allocations: 11.841 MiB, 99.34% compilation time)
Running: lobatto_quadrature
  0.374671 seconds (329.49 k allocations: 19.894 MiB, 6.05% gc time, 97.91% compilation time)
Running: radau_quadrature
  0.713403 seconds (447.46 k allocations: 27.307 MiB, 99.72% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 43.684683 seconds (100.02 M allocations: 1.491 GiB, 0.83% gc time, 0.07% compilation time)
Running: rectangle_rule_midpoint.
  0.087189 seconds (172.46 k allocations: 3.827 MiB, 23.40% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 42.339956 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time, 0.06% compilation time)
Running: rombergs_method
  1.078053 seconds (722.84 k allocations: 41.727 MiB, 1.56% gc time, 99.81% compilation time)
Running: simpsons_rule
  0.052856 seconds (46.55 k allocations: 2.532 MiB, 94.76% compilation time)
Running: simpsons38_rule
  0.404786 seconds (108.47 k allocations: 5.753 MiB, 99.41% compilation time)
Running: trapezoidal_rule
  0.436777 seconds (1.72 M allocations: 28.603 MiB, 12.17% gc time, 21.08% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.215168 seconds (29.81 k allocations: 1.768 MiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.528480 seconds (290.30 k allocations: 15.352 MiB, 98.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.153122 seconds (93.80 k allocations: 2.675 MiB, 96.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.167463 seconds (82.06 k allocations: 2.476 MiB, 98.30% compilation time)
Running: chebyshev_quadrature with k=4
  0.150656 seconds (64.67 k allocations: 2.122 MiB, 98.74% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.121630 seconds (503.80 k allocations: 161.824 MiB, 37.00% gc time, 24.00% compilation time)
Running: legendre_quadrature
  0.216771 seconds (41.24 k allocations: 2.378 MiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.046298 seconds (15.63 k allocations: 997.372 KiB, 99.64% compilation time)
Running: radau_quadrature
  0.083980 seconds (15.74 k allocations: 1004.587 KiB, 99.79% compilation time)
Running: rectangle_rule_left
 12.526346 seconds (471.41 M allocations: 7.025 GiB, 7.15% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 12.064135 seconds (476.96 M allocations: 7.107 GiB, 10.07% gc time)
Running: rombergs_method
  0.755584 seconds (326.41 k allocations: 18.525 MiB, 86.79% compilation time)
Running: simpsons_rule
  0.000036 seconds (83 allocations: 1.641 KiB)
Running: simpsons38_rule
  0.073250 seconds (18.92 k allocations: 1.147 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.061663 seconds (16.49 k allocations: 1.001 MiB, 99.85% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with Îµ=1e-7
  1.094698 seconds (1.03 k allocations: 34.125 KiB, 99.99% compilation time)
Running: chebyshev_quadrature with k=1
  0.134132 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.102473 seconds (2.71 k allocations: 124.266 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=3
  0.101890 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: chebyshev_quadrature with k=4
  0.121510 seconds (2.31 k allocations: 109.297 KiB, 99.85% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.532881 seconds (363.66 k allocations: 19.040 MiB, 99.54% compilation time)
Running: legendre_quadrature
  0.071212 seconds (1.28 k allocations: 65.891 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000131 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000067 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000341 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000232 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000330 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.110256 seconds (1.04 k allocations: 56.469 KiB, 87.64% compilation time)
Running: simpsons_rule
  0.000041 seconds (163 allocations: 2.891 KiB)
Running: simpsons38_rule
  0.027900 seconds (923 allocations: 39.281 KiB, 99.69% compilation time)
Running: trapezoidal_rule
  0.019322 seconds (44.29 k allocations: 702.859 KiB, 91.32% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.122083 seconds (80.86 k allocations: 4.822 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.371042 seconds (230.61 k allocations: 12.967 MiB, 13.57% gc time, 99.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.351224 seconds (283.17 k allocations: 15.880 MiB, 99.13% compilation time)
Running: chebyshev_quadrature with k=3
  0.231258 seconds (234.76 k allocations: 13.158 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=4
  0.573848 seconds (234.76 k allocations: 13.045 MiB, 5.19% gc time, 99.64% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.124403 seconds (446.74 k allocations: 163.204 MiB, 4.51% gc time, 42.89% compilation time)
Running: legendre_quadrature
  0.480275 seconds (185.44 k allocations: 10.711 MiB, 99.65% compilation time)
Running: lobatto_quadrature
  0.361449 seconds (196.62 k allocations: 11.411 MiB, 7.26% gc time, 98.09% compilation time)
Running: radau_quadrature
  0.232815 seconds (196.62 k allocations: 11.414 MiB, 98.90% compilation time)
Running: rectangle_rule_left
  0.457586 seconds (18.82 k allocations: 1.147 MiB, 5.75% compilation time)
Running: rectangle_rule_midpoint
  1.624819 seconds (24.67 k allocations: 1.555 MiB, 99.99% compilation time)
Running: rectangle_rule_right
  0.474054 seconds (17.39 k allocations: 1.062 MiB, 6.23% compilation time)
Running: rombergs_method
  0.410652 seconds (134.24 k allocations: 7.778 MiB, 99.16% compilation time)
Running: simpsons_rule
  0.030643 seconds (36.49 k allocations: 2.341 MiB, 99.40% compilation time)
Running: simpsons38_rule
  0.095251 seconds (42.37 k allocations: 2.678 MiB, 99.78% compilation time)
Running: trapezoidal_rule
  0.037805 seconds (42.32 k allocations: 1.671 MiB, 93.23% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.102815 seconds (66.94 k allocations: 2.959 MiB, 42.88% gc time, 99.20% compilation time)
Running: chebyshev_quadrature with k=1
  0.521419 seconds (237.20 k allocations: 13.036 MiB, 99.38% compilation time)
Running: chebyshev_quadrature with k=2
  0.647027 seconds (290.20 k allocations: 15.872 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=3
  0.273691 seconds (241.33 k allocations: 13.122 MiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=4
  1.019723 seconds (241.34 k allocations: 13.138 MiB, 1.97% gc time, 99.83% compilation time)
Running: hermite_quadrature with k=2
 26.995908 seconds (20.10 M allocations: 1.056 GiB, 12.72% gc time, 99.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.065622 seconds (455.91 k allocations: 49.394 MiB, 69.19% gc time, 29.93% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.362593 seconds (276.26 k allocations: 15.248 MiB, 84.30% compilation time)
Running: legendre_quadrature
  0.275151 seconds (191.98 k allocations: 11.035 MiB, 98.99% compilation time)
Running: lobatto_quadrature
  0.274904 seconds (217.28 k allocations: 37.185 MiB, 8.26% gc time, 82.32% compilation time)
Running: radau_quadrature
  1.258732 seconds (213.86 k allocations: 29.877 MiB, 87.98% compilation time)
Running: rectangle_rule_left
  0.028933 seconds (21.73 k allocations: 1.293 MiB, 99.50% compilation time)
Running: rectangle_rule_midpoint
  0.031928 seconds (26.47 k allocations: 1.642 MiB, 99.57% compilation time)
Running: rectangle_rule_right
  0.026419 seconds (18.50 k allocations: 1.117 MiB, 99.48% compilation time)
Running: rombergs_method
  0.463982 seconds (136.71 k allocations: 7.802 MiB, 99.51% compilation time)
Running: simpsons_rule
  0.143763 seconds (43.97 k allocations: 2.609 MiB, 99.40% compilation time)
Running: simpsons38_rule
  0.106487 seconds (57.34 k allocations: 3.063 MiB, 99.63% compilation time)
Running: trapezoidal_rule
  0.042228 seconds (28.35 k allocations: 1.595 MiB, 99.38% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.026817 seconds (50.91 k allocations: 2.619 MiB, 98.53% compilation time)
Running: chebyshev_quadrature with k=1
  0.278425 seconds (232.72 k allocations: 12.830 MiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.247187 seconds (285.39 k allocations: 15.707 MiB, 13.57% gc time, 78.69% compilation time)
Running: chebyshev_quadrature with k=3
  0.334279 seconds (236.87 k allocations: 12.928 MiB, 99.35% compilation time)
Running: chebyshev_quadrature with k=4
  0.182903 seconds (236.87 k allocations: 12.929 MiB, 98.24% compilation time)
Running: hermite_quadrature with k=2
  0.642129 seconds (170.78 k allocations: 9.790 MiB, 4.67% gc time, 98.92% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
 10.406065 seconds (449.18 k allocations: 1.175 GiB, 46.23% gc time, 7.85% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.932161 seconds (271.55 k allocations: 15.060 MiB, 99.63% compilation time)
Running: legendre_quadrature
  0.270472 seconds (187.55 k allocations: 10.818 MiB, 33.31% gc time, 99.16% compilation time)
Running: lobatto_quadrature
  0.278746 seconds (208.03 k allocations: 22.915 MiB, 92.06% compilation time)
Running: radau_quadrature
  0.818685 seconds (207.19 k allocations: 20.846 MiB, 1.92% gc time, 91.19% compilation time)
Running: rectangle_rule_left
  0.211377 seconds (19.52 k allocations: 1.188 MiB, 99.94% compilation time)
Running: rectangle_rule_midpoint
  0.126686 seconds (25.36 k allocations: 1.591 MiB, 94.61% compilation time)
Running: rectangle_rule_right
  0.023104 seconds (17.36 k allocations: 1.062 MiB, 99.43% compilation time)
Running: rombergs_method
  0.512122 seconds (132.56 k allocations: 7.621 MiB, 99.53% compilation time)
Running: simpsons_rule
  0.071594 seconds (39.30 k allocations: 2.442 MiB, 99.69% compilation time)
Running: simpsons38_rule
  0.030681 seconds (48.16 k allocations: 2.821 MiB, 99.06% compilation time)
Running: trapezoidal_rule
  0.021931 seconds (23.26 k allocations: 1.433 MiB, 98.79% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.113447 seconds (39.05 k allocations: 2.475 MiB, 99.81% compilation time)
Running: chebyshev_quadrature with k=1
  0.303296 seconds (231.10 k allocations: 13.105 MiB, 99.17% compilation time)
Running: chebyshev_quadrature with k=2
  0.302502 seconds (283.67 k allocations: 15.997 MiB, 9.16% gc time, 98.70% compilation time)
Running: chebyshev_quadrature with k=3
  0.254863 seconds (235.25 k allocations: 13.141 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=4
  0.226222 seconds (235.25 k allocations: 12.975 MiB, 98.93% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.119355 seconds (447.28 k allocations: 194.248 MiB, 3.05% gc time, 56.51% compilation time)
Running: legendre_quadrature
  0.681286 seconds (185.93 k allocations: 10.732 MiB, 99.66% compilation time)
Running: lobatto_quadrature
  0.137361 seconds (197.11 k allocations: 11.440 MiB, 98.27% compilation time)
Running: radau_quadrature
  0.226866 seconds (197.11 k allocations: 11.437 MiB, 99.03% compilation time)
Running: rectangle_rule_left
  0.533604 seconds (19.34 k allocations: 1.173 MiB, 5.13% gc time, 39.84% compilation time)
Running: rectangle_rule_midpoint
  0.133170 seconds (25.01 k allocations: 1.573 MiB, 98.23% compilation time)
Running: rectangle_rule_right
  0.168447 seconds (17.73 k allocations: 1.081 MiB, 22.06% compilation time)
Running: rombergs_method
  0.250649 seconds (145.00 k allocations: 8.489 MiB, 68.62% compilation time)
Running: simpsons_rule
  0.069601 seconds (37.11 k allocations: 2.369 MiB, 99.67% compilation time)
Running: simpsons38_rule
  0.034469 seconds (43.08 k allocations: 2.709 MiB, 99.44% compilation time)
Running: trapezoidal_rule
  0.017779 seconds (43.25 k allocations: 1.703 MiB, 97.42% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.054833 seconds (38.85 k allocations: 2.409 MiB, 99.58% compilation time)
Running: chebyshev_quadrature with k=1
  0.349855 seconds (231.69 k allocations: 13.051 MiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=2
  0.394467 seconds (284.30 k allocations: 15.891 MiB, 5.73% gc time, 99.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.368626 seconds (235.84 k allocations: 13.072 MiB, 96.29% compilation time)
Running: chebyshev_quadrature with k=4
  0.648163 seconds (235.84 k allocations: 13.142 MiB, 99.60% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  1.980548 seconds (447.99 k allocations: 148.917 MiB, 7.51% gc time, 47.83% compilation time)
Running: legendre_quadrature
  1.108034 seconds (186.53 k allocations: 10.750 MiB, 99.76% compilation time)
Running: lobatto_quadrature
  0.365250 seconds (197.71 k allocations: 11.461 MiB, 89.04% compilation time)
Running: radau_quadrature
  0.207353 seconds (197.71 k allocations: 11.454 MiB, 98.85% compilation time)
Running: rectangle_rule_left
  0.565642 seconds (19.59 k allocations: 1.186 MiB, 4.96% compilation time)
Running: rectangle_rule_midpoint
  0.370051 seconds (25.01 k allocations: 1.574 MiB, 99.94% compilation time)
Running: rectangle_rule_right
  0.572876 seconds (17.69 k allocations: 1.078 MiB, 5.07% compilation time)
Running: rombergs_method
  0.942399 seconds (135.46 k allocations: 7.815 MiB, 3.93% gc time, 99.50% compilation time)
Running: simpsons_rule
  0.185889 seconds (37.60 k allocations: 2.389 MiB, 99.90% compilation time)
Running: simpsons38_rule
  0.102644 seconds (43.78 k allocations: 2.734 MiB, 46.87% compilation time)
Running: trapezoidal_rule
  0.022527 seconds (55.40 k allocations: 1.899 MiB, 96.89% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with Îµ=1e-7
  0.316568 seconds (147.45 k allocations: 8.795 MiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=1
  0.218625 seconds (69.93 k allocations: 2.205 MiB, 99.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.279202 seconds (105.09 k allocations: 2.868 MiB, 98.56% compilation time)
Running: chebyshev_quadrature with k=3
  0.175495 seconds (92.57 k allocations: 2.654 MiB, 97.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.157795 seconds (72.11 k allocations: 2.250 MiB, 98.81% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.279024 seconds (480.16 k allocations: 167.832 MiB, 13.54% gc time, 30.64% compilation time)
Running: legendre_quadrature
  0.168407 seconds (18.73 k allocations: 1.094 MiB, 99.86% compilation time)
Running: lobatto_quadrature
  0.000078 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000031 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 18.191474 seconds (590.00 M allocations: 8.792 GiB, 9.20% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 19.927146 seconds (592.75 M allocations: 8.833 GiB, 6.58% gc time)
Running: rombergs_method
  0.150712 seconds (20.50 k allocations: 1.165 MiB, 99.63% compilation time)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027348 seconds (463 allocations: 22.578 KiB, 99.53% compilation time)
Running: trapezoidal_rule
  0.020445 seconds (171 allocations: 7.859 KiB, 99.38% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 25.290618 seconds (209.93 M allocations: 3.138 GiB, 2.36% gc time, 1.39% compilation time)
Running: chebyshev_quadrature with k=1
  0.586858 seconds (414.04 k allocations: 22.961 MiB, 99.46% compilation time)
Running: chebyshev_quadrature with k=2
 18.430786 seconds (468.67 k allocations: 4.040 GiB, 9.93% gc time, 3.19% compilation time)
Running: chebyshev_quadrature with k=3
  7.841448 seconds (249.08 k allocations: 1.642 GiB, 3.55% gc time, 4.61% compilation time)
Running: chebyshev_quadrature with k=4
 10.231904 seconds (249.08 k allocations: 2.260 GiB, 2.03% gc time, 2.09% compilation time)
Running: jacobi_quadrature with Î±=Î²=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 36.363120 seconds (484.07 k allocations: 13.254 GiB, 16.16% gc time, 2.95% compilation time)
Running: legendre_quadrature.
  8.322903 seconds (223.29 k allocations: 1.976 GiB, 2.44% gc time, 2.76% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.901515 seconds (8.23 M allocations: 13.383 GiB, 23.25% gc time, 1.41% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.917349 seconds (7.23 M allocations: 13.369 GiB, 18.40% gc time, 0.67% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.382118 seconds (22.24 k allocations: 1.347 MiB, 0.17% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.196429 seconds (30.43 k allocations: 1.884 MiB, 0.32% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 11.781964 seconds (22.44 k allocations: 1.357 MiB, 0.22% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.648130 seconds (438.12 k allocations: 152.684 MiB, 1.29% gc time, 16.23% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 24.500269 seconds (200.04 M allocations: 2.983 GiB, 2.20% gc time, 0.43% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.219552 seconds (600.05 M allocations: 8.943 GiB, 6.33% gc time, 0.12% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.405437 seconds (600.03 M allocations: 8.943 GiB, 4.46% gc time, 0.17% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.122238 seconds (109.56 k allocations: 4.131 MiB, 54.27% compilation time)
Running: chebyshev_quadrature with k=1
  0.179464 seconds (247.70 k allocations: 13.448 MiB, 98.20% compilation time)
Running: chebyshev_quadrature with k=2
  0.222804 seconds (272.34 k allocations: 14.525 MiB, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.512253 seconds (220.25 k allocations: 11.633 MiB, 99.76% compilation time)
Running: chebyshev_quadrature with k=4
  0.212339 seconds (220.25 k allocations: 11.661 MiB, 38.17% gc time, 99.39% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  0.720614 seconds (388.86 k allocations: 35.002 MiB, 97.11% compilation time)
Running: laguerre_quadrature with k=2
  0.113324 seconds (180.54 k allocations: 10.477 MiB, 72.65% compilation time)
Running: legendre_quadrature
  0.272898 seconds (145.98 k allocations: 8.073 MiB, 99.94% compilation time)
Running: lobatto_quadrature
  0.025441 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.012868 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.091840 seconds (18.88 k allocations: 1.121 MiB, 84.37% compilation time)
Running: rectangle_rule_midpoint
  0.035115 seconds (25.48 k allocations: 1.575 MiB, 72.64% compilation time)
Running: rectangle_rule_right
  0.073937 seconds (17.48 k allocations: 1.049 MiB, 80.01% compilation time)
Running: rombergs_method
  0.197573 seconds (172.12 k allocations: 9.827 MiB, 98.62% compilation time)
Running: simpsons_rule
  0.000283 seconds (8.42 k allocations: 131.953 KiB)
Running: simpsons38_rule
  0.027987 seconds (78.86 k allocations: 3.385 MiB, 97.78% compilation time)
Running: trapezoidal_rule
  0.099899 seconds (2.39 M allocations: 37.684 MiB, 52.10% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000653 seconds (12.66 k allocations: 198.172 KiB)
Running: chebyshev_quadrature with k=1
  0.141333 seconds (2.46 k allocations: 1.691 MiB, 98.95% compilation time)
Running: chebyshev_quadrature with k=2
  0.208609 seconds (2.71 k allocations: 2.355 MiB, 98.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.087538 seconds (2.31 k allocations: 2.028 MiB, 96.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.090608 seconds (2.31 k allocations: 1.469 MiB, 97.42% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  4.774944 seconds (365.94 k allocations: 904.802 MiB, 5.16% gc time, 6.69% compilation time)
Running: legendre_quadrature
  0.056983 seconds (1.27 k allocations: 68.203 KiB, 96.47% compilation time)
Running: lobatto_quadrature
  0.000114 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000902 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.185043 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000207 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.014407 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084259 seconds (993 allocations: 56.609 KiB, 99.65% compilation time)
Running: simpsons_rule
  0.000036 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000954 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with Îµ=1e-8
  0.000118 seconds (3.06 k allocations: 48.109 KiB)
Running: chebyshev_quadrature with k=1
  0.103167 seconds (2.53 k allocations: 579.203 KiB, 99.44% compilation time)
Running: chebyshev_quadrature with k=2
  0.077481 seconds (2.79 k allocations: 780.188 KiB, 99.00% compilation time)
Running: chebyshev_quadrature with k=3
  0.077340 seconds (2.39 k allocations: 661.047 KiB, 99.19% compilation time)
Running: chebyshev_quadrature with k=4
  0.081804 seconds (2.39 k allocations: 491.547 KiB, 99.41% compilation time)
Running: jacobi_quadrature with Î±=Î²=1
  2.407471 seconds (372.50 k allocations: 253.034 MiB, 18.81% compilation time)
Running: legendre_quadrature
  0.070512 seconds (1.32 k allocations: 67.859 KiB, 96.94% compilation time)
Running: lobatto_quadrature
  0.000138 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000054 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  0.888912 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000114 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  0.889841 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.175292 seconds (1.21 k allocations: 64.875 KiB, 99.83% compilation time)
Running: simpsons_rule
  0.000007 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000232 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
