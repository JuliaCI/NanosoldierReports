Julia Version 1.6.0-DEV.1211
Commit 15e1d592ef (2020-10-14 07:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed SortingAlgorithms â”€â”€ v0.3.1
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.11
  Installed OrderedCollections â”€ v1.3.1
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
  Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.2
  Installed SimilaritySearch â”€â”€â”€ v0.3.20
  Installed DataStructures â”€â”€â”€â”€â”€ v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.11
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mDataAPI[39m
[90m[32m  âœ“ [39mOrderedCollections[39m
[90m[32m  âœ“ [39mMissings[39m
[90m[32m  âœ“ [39mDataStructures[39m
[90m[32m  âœ“ [39mParsers[39m
[90m[32m  âœ“ [39mSortingAlgorithms[39m
[90m[32m  âœ“ [39mJSON[39m
[90m[32m  âœ“ [39mStatsBase[39m
[32m  âœ“ [39mSimilaritySearch
9 dependencies successfully precompiled

    Testing SimilaritySearch
Status `/tmp/jl_mReN44/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_mReN44/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(40, 0.009707093f0), Item(35, 0.021835208f0), Item(23, 0.03855288f0), Item(2, 0.042879462f0)])
Vsorted = Item[Item(40, 0.009707093f0), Item(35, 0.021835208f0), Item(23, 0.03855288f0), Item(2, 0.042879462f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005260547002156575, 0.005874268213907878, 301.0, 48.2732565831393))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003577717145284017, 0.008337831497192383, 301.0, 71.38974058628082))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004171490669250488, 0.006134597460428873, 301.0, 38.89067506790161))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0035124858220418292, 0.0032615025838216146, 301.0, 8.52753037866205))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0032465219497680663, 0.0052358706792195635, 301.0, 43.455278389155865))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.3161710103352864e-5, 2.2872289021809897e-5, 301.0, 179.1597526744008))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.255208333333333e-5, 0.008223668734232584, 300.0, 27.2921122466214)
p = PerformanceResult(1.0, 1.0, 1.0, 3.3926963806152346e-5, 2.3396809895833335e-5, 300.0, 27.2921122466214)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003682875633239746, 0.0026456673940022787, 300.0, 1.510294068168605)
p = PerformanceResult(1.0, 1.0, 1.0, 2.685652838812934e-5, 1.3868014017740885e-5, 300.0, 1.510294068168605)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.255208333333333e-5, 0.008223668734232584, 300.0, 27.2921122466214), PerformanceResult(1.0, 1.0, 1.0, 3.3926963806152346e-5, 2.3396809895833335e-5, 300.0, 27.2921122466214), PerformanceResult(1.0, 1.0, 1.0, 0.003682875633239746, 0.0026456673940022787, 300.0, 1.510294068168605), PerformanceResult(1.0, 1.0, 1.0, 2.685652838812934e-5, 1.3868014017740885e-5, 300.0, 1.510294068168605))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 130.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006305487950642904, 0.0035404284795125325, 346.6666666666667, 28714.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0064043442408243815, 0.0064136346181233725, 303.6333333333333, 6934.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5751520792643228e-5, 7.867813110351562e-6, 99.26666666666667, 48.2732565831393))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.567204793294271e-5, 7.136662801106771e-6, 87.16666666666667, 71.38974058628082))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.6689300537109375e-5, 8.106231689453125e-6, 92.66666666666667, 38.87301516532898))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 5.3111712137858076e-5, 6.096363067626953e-5, 98.56666666666666, 43.44740966707468))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7866666666666667, 0.7866666666666667, 0.7866666666666667, 4.5744578043619793e-5, 2.597173055013021e-5, 70.93333333333334, 187.96514377743006))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-10-14T12:45:59.636
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9075, 0.903, 0.9042857142857145, 1.4760494232177734e-5, 1.4841556549072266e-5, 152.93, 50.916535111144185))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.3561248779296876e-5, 1.0809898376464845e-5, 156.71, 0.0))
*** advance 1 from 1000; 2020-10-14T12:46:00.185
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9009999999999999, 0.9, 0.9004444444444444, 1.6057491302490233e-5, 1.4369487762451173e-5, 152.54, 76.7703811135143))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.7185211181640625e-5, 1.1219978332519532e-5, 156.44, 0.0))
*** advance 1 from 1000; 2020-10-14T12:46:00.886
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.889, 0.889, 0.889, 1.6534328460693358e-5, 1.694917678833008e-5, 152.74, 41.95907354541123))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8177032470703124e-5, 1.4588832855224609e-5, 156.57, 0.0))
*** advance 1 from 1000; 2020-10-14T12:46:01.516
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9005, 0.8959999999999999, 0.8972857142857142, 4.053592681884766e-5, 0.00019870996475219728, 152.68, 45.9774008076638))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 4.430055618286133e-5, 0.0002028679847717285, 156.44, 0.0))
*** advance 1 from 1000; 2020-10-14T12:46:01.904
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9830000000000001, 0.9830000000000001, 0.9830000000000001, 2.5136470794677736e-5, 7.464170455932617e-5, 166.43, 189.6342413565144))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.610921859741211e-5, 7.704019546508789e-5, 171.24, 0.0))
*** advance 1 from 1000; 2020-10-14T12:46:03.040
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9075, 0.903, 0.9042857142857145, 1.9686222076416014e-5, 4.7109127044677735e-5, 152.93, 50.92671436537057))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 1.983642578125e-5, 4.739999771118164e-5, 156.71, 0.01252918629324995))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:05.450
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7320000000000003, 0.7320000000000003, 0.7320000000000003, 0.0013457608222961425, 0.00014844894409179687, 200.61, 194.71666917204857))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:06.491
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7610000000000001, 0.7610000000000001, 0.7610000000000001, 0.0012212347984313964, 0.00010567903518676758, 205.29, 109.58650996536016))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:07.538
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6, 0.6, 0.6, 0.0036041069030761717, 6.265878677368164e-5, 284.27, 1.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:09.745
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9800000000000003, 0.9720000000000003, 0.9753594771241834, 0.0012316942214965821, 1.2578964233398437e-5, 217.81, 596.8000206053257))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:10.943
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5810000000000004, 0.5810000000000004, 0.5810000000000004, 0.0011630940437316894, 0.00016935825347900391, 253.77, 2369.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:12.138
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37599999999999995, 0.37599999999999995, NaN, 0.0018734979629516603, 0.00015933036804199218, 247.89, 3672.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-10-14T12:46:13.271
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5849999999999999, 0.5849999999999999, 0.5849999999999999, 0.002491159439086914, 1.7910003662109376e-5, 242.19, 2395.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0530164533820843,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690876831501837,"seconds":0.002220733091235161,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.546875,"distances_sum":660.5998907089233}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0530164533820843,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690876831501837,"seconds":0.002220733091235161,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.546875,"distances_sum":660.5998907089233}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.888888888888888, conf: {"restarts":12}, perf: {"precision":0.888888888888888,"recall":0.888888888888888,"f1":0.888888888888888,"seconds":1.712888479232788e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":55.71875,"distances_sum":298.37450060993433}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6963855421686747, conf: {"restarts":13}, perf: {"precision":0.9105902777777768,"recall":0.9105902777777768,"f1":0.9105902777777768,"seconds":2.0228326320648193e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":58.359375,"distances_sum":296.50579404085875}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7782767330900926, conf: {"restarts":11}, perf: {"precision":0.9140624999999992,"recall":0.9140624999999992,"f1":0.9140624999999992,"seconds":1.8514692783355713e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":55.671875,"distances_sum":295.1701384410262}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7782767330900926,"state":{"restarts":11},"perf":{"precision":0.9140624999999992,"recall":0.9140624999999992,"f1":0.9140624999999992,"seconds":1.8514692783355713e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":55.671875,"distances_sum":295.1701384410262}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7782767330900926,"state":{"restarts":11},"perf":{"precision":0.9140624999999992,"recall":0.9140624999999992,"f1":0.9140624999999992,"seconds":1.8514692783355713e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":55.671875,"distances_sum":295.1701384410262}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7782767330900926,"state":{"restarts":11},"perf":{"precision":0.9140624999999992,"recall":0.9140624999999992,"f1":0.9140624999999992,"seconds":1.8514692783355713e-5,"exhaustive_search_seconds":5.04031777381897e-6,"evaluations":55.671875,"distances_sum":295.1701384410262}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444431, conf: {"restarts":18}, perf: {"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":null,"seconds":3.606081008911133e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":182.125,"distances_sum":130.2858693189919}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444431, conf: {"restarts":7}, perf: {"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":0.8741319444444431,"seconds":3.347732126712799e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":111.8515625,"distances_sum":129.24342786893249}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.870659722222221, conf: {"restarts":12}, perf: {"precision":0.870659722222221,"recall":0.870659722222221,"f1":0.870659722222221,"seconds":3.662705421447754e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":145.25,"distances_sum":129.47060978785157}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8723958333333323, conf: {"restarts":20}, perf: {"precision":0.8723958333333323,"recall":0.8723958333333323,"f1":0.8723958333333323,"seconds":5.908869206905365e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":191.578125,"distances_sum":129.00542026758194}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8776041666666653, conf: {"restarts":8}, perf: {"precision":0.8776041666666653,"recall":0.8776041666666653,"f1":0.8776041666666653,"seconds":3.334321081638336e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":115.5625,"distances_sum":128.8856503777206}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666655, conf: {"restarts":2}, perf: {"precision":0.8697916666666655,"recall":0.8697916666666655,"f1":0.8697916666666655,"seconds":3.141537308692932e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":74.953125,"distances_sum":129.63698298484087}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.874999999999999, conf: {"restarts":13}, perf: {"precision":0.874999999999999,"recall":0.874999999999999,"f1":0.874999999999999,"seconds":4.908442497253418e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":151.1796875,"distances_sum":129.11956269666553}, best_list's length: 9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8776041666666653,"state":{"restarts":8},"perf":{"precision":0.8776041666666653,"recall":0.8776041666666653,"f1":0.8776041666666653,"seconds":3.334321081638336e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":115.5625,"distances_sum":128.8856503777206}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8776041666666653,"state":{"restarts":8},"perf":{"precision":0.8776041666666653,"recall":0.8776041666666653,"f1":0.8776041666666653,"seconds":3.334321081638336e-5,"exhaustive_search_seconds":1.498498022556305e-5,"evaluations":115.5625,"distances_sum":128.8856503777206}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444434, conf: {"restarts":3}, perf: {"precision":0.8350694444444434,"recall":0.8350694444444434,"f1":0.8350694444444434,"seconds":5.383230745792389e-5,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":145.984375,"distances_sum":57.107594856992364}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222211, conf: {"restarts":20}, perf: {"precision":0.8472222222222211,"recall":0.8472222222222211,"f1":0.8472222222222211,"seconds":0.0002198927104473114,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":292.1953125,"distances_sum":56.793320156633854}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8333333333333321, conf: {"restarts":10}, perf: {"precision":0.8333333333333321,"recall":0.8333333333333321,"f1":null,"seconds":6.189942359924316e-5,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":202.734375,"distances_sum":57.471017414703965}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777768, conf: {"restarts":19}, perf: {"precision":0.8480902777777768,"recall":0.8480902777777768,"f1":0.8480902777777768,"seconds":0.00010426715016365051,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":285.3125,"distances_sum":56.75442189350724}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8342013888888876, conf: {"restarts":5}, perf: {"precision":0.8342013888888876,"recall":0.8342013888888876,"f1":null,"seconds":5.261227488517761e-5,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":159.875,"distances_sum":57.88402308896184}, best_list's length: 10, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.84548611111111, conf: {"restarts":18}, perf: {"precision":0.84548611111111,"recall":0.84548611111111,"f1":0.84548611111111,"seconds":9.388662874698639e-5,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":276.984375,"distances_sum":56.82265804335475}, best_list's length: 11, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8480902777777768,"state":{"restarts":19},"perf":{"precision":0.8480902777777768,"recall":0.8480902777777768,"f1":0.8480902777777768,"seconds":0.00010426715016365051,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":285.3125,"distances_sum":56.75442189350724}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333326, conf: {"restarts":29}, perf: {"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":null,"seconds":0.00011881254613399506,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":368.3359375,"distances_sum":56.81615053117275}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8489583333333326,"state":{"restarts":29},"perf":{"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":null,"seconds":0.00011881254613399506,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":368.3359375,"distances_sum":56.81615053117275}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8489583333333326,"state":{"restarts":29},"perf":{"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":null,"seconds":0.00011881254613399506,"exhaustive_search_seconds":0.00023248419165611267,"evaluations":368.3359375,"distances_sum":56.81615053117275}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(29), SatNeighborhood(32), 2020-10-14T12:46:25.677
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1275, 0.02660777f0), Item(4482, 0.027740626f0), Item(6042, 0.036861345f0), Item(6421, 0.03722118f0), Item(3138, 0.039626285f0), Item(2837, 0.048136245f0), Item(2877, 0.052132726f0), Item(4486, 0.054705996f0), Item(789, 0.055048045f0), Item(7204, 0.05772635f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.045372050816697,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9705357142857147,"seconds":0.0030321888625621796,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.609375,"distances_sum":659.2929828763008}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.045372050816697,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9705357142857147,"seconds":0.0030321888625621796,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.609375,"distances_sum":659.2929828763008}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.221148957803762,"state":{"bsize":3},"perf":{"precision":0.9557291666666663,"recall":0.9557291666666663,"f1":0.9557291666666663,"seconds":1.0989606380462646e-5,"exhaustive_search_seconds":5.101785063743591e-6,"evaluations":30.734375,"distances_sum":281.9862692411989}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.221148957803762,"state":{"bsize":3},"perf":{"precision":0.9557291666666663,"recall":0.9557291666666663,"f1":0.9557291666666663,"seconds":1.0989606380462646e-5,"exhaustive_search_seconds":5.101785063743591e-6,"evaluations":30.734375,"distances_sum":281.9862692411989}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.402286336418072,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":2.029724419116974e-5,"exhaustive_search_seconds":1.9116327166557312e-5,"evaluations":57.40625,"distances_sum":120.37110190652311}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.402286336418072,"state":{"bsize":3},"perf":{"precision":0.975694444444444,"recall":0.975694444444444,"f1":0.975694444444444,"seconds":2.029724419116974e-5,"exhaustive_search_seconds":1.9116327166557312e-5,"evaluations":57.40625,"distances_sum":120.37110190652311}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.59512195121951, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.189143121242523e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":105.703125,"distances_sum":54.400044756010175}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.52126696832579, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.6275556087493896e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":103.59375,"distances_sum":54.40385580249131}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.52126696832579,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":4.6275556087493896e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":103.59375,"distances_sum":54.40385580249131}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.86450527603608, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.290975630283356e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":102.171875,"distances_sum":54.400044756010175}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.86450527603608,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.290975630283356e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":102.171875,"distances_sum":54.400044756010175}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.86450527603608,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.290975630283356e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":102.171875,"distances_sum":54.400044756010175}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.86450527603608,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":4.290975630283356e-5,"exhaustive_search_seconds":0.00020360946655273438,"evaluations":102.171875,"distances_sum":54.400044756010175}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(7), SatNeighborhood(32), 2020-10-14T12:46:31.152
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1888, 0.024965337f0), Item(827, 0.028281378f0), Item(114, 0.03323884f0), Item(1652, 0.043073446f0), Item(5295, 0.048955753f0), Item(6908, 0.04917949f0), Item(9343, 0.05277368f0), Item(5654, 0.056520212f0), Item(6776, 0.06124014f0), Item(1907, 0.061248794f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
