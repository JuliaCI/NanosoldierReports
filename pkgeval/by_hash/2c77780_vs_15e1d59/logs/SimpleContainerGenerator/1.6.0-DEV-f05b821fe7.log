Julia Version 1.6.0-DEV.1218
Commit f05b821fe7 (2020-10-14 11:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed SimpleContainerGenerator â”€ v2.0.1
  Installed PackageCompiler â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [b8d349fb] + SimpleContainerGenerator v2.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b87118b] + PackageCompiler v1.2.2
  [b8d349fb] + SimpleContainerGenerator v2.0.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  âœ“ [39mPackageCompiler[39m
[32m  âœ“ [39mSimpleContainerGenerator
2 dependencies successfully precompiled

    Testing SimpleContainerGenerator
Status `/tmp/jl_Yrv0SY/Project.toml`
  [9b87118b] PackageCompiler v1.2.2
  [b8d349fb] SimpleContainerGenerator v2.0.1
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_Yrv0SY/Manifest.toml`
  [9b87118b] PackageCompiler v1.2.2
  [b8d349fb] SimpleContainerGenerator v2.0.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_T2hdmm` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_FOhnyl` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_qEL2bo` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_BLZH5n` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_J1mHZm` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_DhQroo` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_m0FROn` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_w757xn` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_VucX8p` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_8fdSbn` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_50yp5l` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_s88Y8l` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_xMLian` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_1wzL2n` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_oC8Hqo` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_9584Zp` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_GBj8Np` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
[ Info: I have generated the Dockerfile and the other necessary files.
[ Info: Now `cd` to `/tmp/jl_aVx8gm` and run:
[ Info: `docker build -t my_docker_username/my_image_name .`
Test Summary:               | Pass  Total
SimpleContainerGenerator.jl |   50     50
    Testing SimpleContainerGenerator tests passed 
