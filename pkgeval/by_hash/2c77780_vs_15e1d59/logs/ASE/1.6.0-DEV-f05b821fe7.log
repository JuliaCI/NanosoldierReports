Julia Version 1.6.0-DEV.1218
Commit f05b821fe7 (2020-10-14 11:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807

  Resolving package versions...
  Installed MbedTLS_jll ────────────────── v2.16.8+0
  Installed Mocking ────────────────────── v0.7.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ASE ────────────────────────── v0.5.1
  Installed EzXML ──────────────────────── v1.1.0
  Installed DiffResults ────────────────── v1.0.2
  Installed ExprTools ──────────────────── v0.1.2
  Installed OrderedCollections ─────────── v1.3.1
  Installed Compat ─────────────────────── v3.20.0
  Installed Libiconv_jll ───────────────── v1.16.0+6
  Installed DataAPI ────────────────────── v1.3.0
  Installed Dierckx ────────────────────── v0.4.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayInterface ─────────────── v2.13.5
  Installed LineSearches ───────────────── v7.1.0
  Installed Requires ───────────────────── v1.1.0
  Installed JuLIP ──────────────────────── v0.8.2
  Installed XML2_jll ───────────────────── v2.9.10+2
  Installed Conda ──────────────────────── v1.4.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed BinaryProvider ─────────────── v0.5.10
  Installed GitHub ─────────────────────── v5.1.7
  Installed AlgebraicMultigrid ─────────── v0.3.0
  Installed Optim ──────────────────────── v1.2.0
  Installed TimeZones ──────────────────── v1.4.0
  Installed Missings ───────────────────── v0.4.4
  Installed Parsers ────────────────────── v1.0.11
  Installed UnPack ─────────────────────── v1.0.2
  Installed DataStructures ─────────────── v0.18.7
  Installed IterativeSolvers ───────────── v0.8.4
  Installed FillArrays ─────────────────── v0.9.7
  Installed MacroTools ─────────────────── v0.5.5
  Installed PyCall ─────────────────────── v1.92.1
  Installed ForwardDiff ────────────────── v0.10.12
  Installed StaticArrays ───────────────── v0.12.4
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Reexport ───────────────────── v0.2.0
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Calculus ───────────────────── v0.5.1
  Installed NeighbourLists ─────────────── v0.5.0
  Installed Parameters ─────────────────── v0.12.1
  Installed NLSolversBase ──────────────── v7.7.1
  Installed NaNMath ────────────────────── v0.3.4
  Installed DiffRules ──────────────────── v1.0.1
  Installed RecipesBase ────────────────── v1.1.0
  Installed HTTP ───────────────────────── v0.8.19
  Installed Zlib_jll ───────────────────── v1.2.11+17
  Installed VersionParsing ─────────────── v1.2.0
  Installed IniFile ────────────────────── v0.5.0
  Installed FunctionWrappers ───────────── v1.1.1
  Installed JLLWrappers ────────────────── v1.1.2
  Installed FiniteDiff ─────────────────── v2.7.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed StatsBase ──────────────────── v0.33.2
  Installed JSON ───────────────────────── v0.21.1
  Installed CompatHelper ───────────────── v1.16.2
  Installed MbedTLS ────────────────────── v1.0.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [51974c44] + ASE v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [51974c44] + ASE v0.5.1
  [2169fc97] + AlgebraicMultigrid v0.3.0
  [4fba245c] + ArrayInterface v2.13.5
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.20.0
  [aa819f21] + CompatHelper v1.16.2
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] + Conda v1.4.1
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.7
  [39dd38d3] + Dierckx v0.4.2
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [e2ba6199] + ExprTools v0.1.2
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.9.7
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [bc5e4493] + GitHub v5.1.7
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [692b3bcd] + JLLWrappers v1.1.2
  [682c06a0] + JSON v0.21.1
  [945c410c] + JuLIP v0.8.2
  [94ce4f54] + Libiconv_jll v1.16.0+6
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.5
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.1
  [77ba4419] + NaNMath v0.3.4
  [2fcf5ba9] + NeighbourLists v0.5.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v1.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [85a6dd25] + PositiveFactorizations v0.2.3
  [438e738f] + PyCall v1.92.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.2
  [f269a46b] + TimeZones v1.4.0
  [3a884ed6] + UnPack v1.0.2
  [81def892] + VersionParsing v1.2.0
  [02c8fc9c] + XML2_jll v2.9.10+2
  [83775a58] + Zlib_jll v1.2.11+17
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Dierckx ──→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/956bfe5c4f9b794545f6527424fc0294cc5decbe/build.log`
   Building TimeZones → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`
   Building Conda ────→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7a58bb32ce5d85f8bf7559aa7c2842f9aecf52fc/build.log`
   Building PyCall ───→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/b6dff5fa725eff4f775f472acd86756d6e31fb02/build.log`
   Building ASE ──────→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/6ec49ba1888d4748bca4472ff8f1ea424db6777f/build.log`
Precompiling project... (tip: to disable auto-precompilation set ENV["JULIA_PKG_PRECOMPILE_AUTO"]=0)
[90m[32m  ✓ [39mReexport[39m
[90m[32m  ✓ [39mDataAPI[39m
[90m[32m  ✓ [39mUnPack[39m
[90m[32m  ✓ [39mIniFile[39m
[90m[32m  ✓ [39mNaNMath[39m
[90m[32m  ✓ [39mPositiveFactorizations[39m
[90m[32m  ✓ [39mJLLWrappers[39m
[90m[32m  ✓ [39mRequires[39m
[90m[32m  ✓ [39mOrderedCollections[39m
[90m[32m  ✓ [39mFunctionWrappers[39m
[90m[32m  ✓ [39mDierckx[39m
[90m[32m  ✓ [39mMissings[39m
[90m[32m  ✓ [39mCompat[39m
[90m[32m  ✓ [39mParameters[39m
[90m[32m  ✓ [39mCalculus[39m
[90m[32m  ✓ [39mFillArrays[39m
[90m[32m  ✓ [39mCompilerSupportLibraries_jll[39m
[90m[32m  ✓ [39mMbedTLS_jll[39m
[90m[32m  ✓ [39mLibiconv_jll[39m
[90m[32m  ✓ [39mCommonSubexpressions[39m
[90m[32m  ✓ [39mArrayInterface[39m
[90m[32m  ✓ [39mIterativeSolvers[39m
[90m[32m  ✓ [39mZlib_jll[39m
[90m[32m  ✓ [39mMbedTLS[39m
[90m[32m  ✓ [39mOpenSpecFun_jll[39m
[90m[32m  ✓ [39mDataStructures[39m
[90m[32m  ✓ [39mSortingAlgorithms[39m
[90m[32m  ✓ [39mXML2_jll[39m
[90m[32m  ✓ [39mStaticArrays[39m
[90m[32m  ✓ [39mEzXML[39m
[90m[32m  ✓ [39mStatsBase[39m
[90m[32m  ✓ [39mDiffResults[39m
[90m[32m  ✓ [39mNeighbourLists[39m
[90m[32m  ✓ [39mHTTP[39m
[90m[32m  ✓ [39mSpecialFunctions[39m
[90m[32m  ✓ [39mFiniteDiff[39m
[90m[32m  ✓ [39mDiffRules[39m
[90m[32m  ✓ [39mTimeZones[39m
[90m[32m  ✓ [39mGitHub[39m
[90m[32m  ✓ [39mCompatHelper[39m
[90m[32m  ✓ [39mAlgebraicMultigrid[39m
[90m[32m  ✓ [39mForwardDiff[39m
[90m[32m  ✓ [39mNLSolversBase[39m
[90m[32m  ✓ [39mLineSearches[39m
[90m[32m  ✓ [39mOptim[39m
[90m[32m  ✓ [39mJuLIP[39m
46 dependencies successfully precompiled (11 already precompiled)

    Testing ASE
Status `/tmp/jl_bzDtOY/Project.toml`
  [51974c44] ASE v0.5.1
  [945c410c] JuLIP v0.8.2
  [2fcf5ba9] NeighbourLists v0.5.0
  [d96e819e] Parameters v0.12.1
  [438e738f] PyCall v1.92.1
  [189a3867] Reexport v0.2.0
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_bzDtOY/Manifest.toml`
  [51974c44] ASE v0.5.1
  [2169fc97] AlgebraicMultigrid v0.3.0
  [4fba245c] ArrayInterface v2.13.5
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.20.0
  [aa819f21] CompatHelper v1.16.2
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] Conda v1.4.1
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.7
  [39dd38d3] Dierckx v0.4.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.9.7
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [692b3bcd] JLLWrappers v1.1.2
  [682c06a0] JSON v0.21.1
  [945c410c] JuLIP v0.8.2
  [94ce4f54] Libiconv_jll v1.16.0+6
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.1
  [77ba4419] NaNMath v0.3.4
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v1.2.0
  [bac558e1] OrderedCollections v1.3.1
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [85a6dd25] PositiveFactorizations v0.2.3
  [438e738f] PyCall v1.92.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.2
  [f269a46b] TimeZones v1.4.0
  [3a884ed6] UnPack v1.0.2
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+17
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
  Testing ASE.jl  
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
================
 Misc ASE Tests 
================
Check that the cubic unit cell for Al is reproduced correctly
Test Passed
---------------------------------------
Check neighbourlist without periodicity
---------------------------------------
[ Info:    ... assemble neighbour list ...
[ Info:    ... check the bond-iterator ... 
check that no false bonds have been found
Test Passed
check that all bonds have been found
Test Passed
   ... check the site iterator ... 
Test Passed
Test Passed
testing read and write
Test Passed
Conversion between JuLIP.Atoms and ASEAtoms
cell(at2) = [0.0 2.715 2.715; 2.715 0.0 2.715; 2.715 2.715 0.0]
Test Passed
Conversion between JuLIP.Atoms and ASEAtoms, Multi-species
cell(at2) = [0.0 6.074999999999999 6.074999999999999; 6.074999999999999 0.0 6.074999999999999; 6.074999999999999 6.074999999999999 0.0]
Test Passed
Test Direct use of ASECalculator
energy(calc, at) = 1.0744671861531554
maximum(norm.(forces(calc, at))) = 0.07838541611090859
Test Passed
Test Passed
===============================
 JuLIP vs ASE Calculator Tests 
===============================
[ Info: These tests to compare JuLIP vs ASE implementations of some potentials
Compare JuLIP vs ASE: EMT
[ Info: Test JuLIP vs ASE EMT implementation
   energy: ┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64, Int32}, ns_vec::StaticArrays.SVector{3, Int32}, bins::StaticArrays.SMatrix{3, 3, Float64, 9}, xyz_range::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{StaticArrays.SVector{3, Int32}}) at cell_list.jl:235
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:235
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64, Int32}, ns_vec::StaticArrays.SVector{3, Int32}, bins::StaticArrays.SMatrix{3, 3, Float64, 9}, xyz_range::CartesianIndices{3, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{StaticArrays.SVector{3, Int32}}) at cell_list.jl:266
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:266
JuLIP vs ASE: Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:15
  Test threw exception
  Expression: abs(energy(emt, at) - energy(pyemt, at)) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:96
    [9] energy!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:83
   [10] energy!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:79 [inlined]
   [11] #energy#87
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67 [inlined]
   [12] energy(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:15
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:15
  Test threw exception
  Expression: abs(energy(emt, at) - energy(pyemt, at)) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:96
    [9] energy!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:83
   [10] energy!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:79 [inlined]
   [11] #energy#87
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67 [inlined]
   [12] energy(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:15
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
   forces: JuLIP vs ASE: Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:17
  Test threw exception
  Expression: norm(forces(pyemt, at) - forces(emt, at), Inf) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate_d!(dEs::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:109
    [9] forces!(frc::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64}, reset::Bool)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:94
   [10] forces!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:90 [inlined]
   [11] forces(V::EMT, at::Atoms{Float64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [12] forces(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:17
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:17
  Test threw exception
  Expression: norm(forces(pyemt, at) - forces(emt, at), Inf) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate_d!(dEs::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:109
    [9] forces!(frc::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64}, reset::Bool)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:94
   [10] forces!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:90 [inlined]
   [11] forces(V::EMT, at::Atoms{Float64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [12] forces(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:17
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Compare JuLIP vs ASE: EMT - Multi-species
unique(chemical_symbols(at)) = [:Cu, :Al]
[ Info: Test JuLIP vs ASE EMT implementation
   energy: JuLIP vs ASE: Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:32
  Test threw exception
  Expression: abs(energy(emt, at) - energy(pyemt, at)) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:96
    [9] energy!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:83
   [10] energy!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:79 [inlined]
   [11] #energy#87
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67 [inlined]
   [12] energy(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:32
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:32
  Test threw exception
  Expression: abs(energy(emt, at) - energy(pyemt, at)) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:96
    [9] energy!(tmp::NamedTuple{(:R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:83
   [10] energy!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:79 [inlined]
   [11] #energy#87
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67 [inlined]
   [12] energy(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:67
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:32
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
   forces: JuLIP vs ASE: Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:34
  Test threw exception
  Expression: norm(forces(pyemt, at) - forces(emt, at), Inf) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate_d!(dEs::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:109
    [9] forces!(frc::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64}, reset::Bool)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:94
   [10] forces!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:90 [inlined]
   [11] forces(V::EMT, at::Atoms{Float64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [12] forces(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:34
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Error During Test at /home/pkgeval/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:34
  Test threw exception
  Expression: norm(forces(pyemt, at) - forces(emt, at), Inf) < 1.0e-10
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] evaluate!
      @ ~/.julia/packages/JuLIP/WO5HB/src/analyticpotential.jl:114 [inlined]
    [6] evaluate(V::JuLIP.Potentials.WrappedPairPotential, r::Float64)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/Potentials.jl:87
    [7] WrappedPairPotential
      @ ~/.julia/packages/JuLIP/WO5HB/src/potentials_base.jl:52 [inlined]
    [8] evaluate_d!(dEs::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, emt::EMT, 𝐑::SubArray{StaticArrays.SVector{3, Float64}, 1, Vector{StaticArrays.SVector{3, Float64}}, Tuple{UnitRange{Int64}}, true}, 𝐙::SubArray{Int16, 1, Vector{Int16}, Tuple{UnitRange{Int64}}, true}, z0::Int16)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/emt.jl:109
    [9] forces!(frc::Vector{StaticArrays.SVector{3, Float64}}, tmp::NamedTuple{(:dV, :R, :Z), Tuple{Vector{StaticArrays.SVector{3, Float64}}, Vector{StaticArrays.SVector{3, Float64}}, Vector{Int16}}}, calc::EMT, at::Atoms{Float64}; domain::UnitRange{Int64}, reset::Bool)
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:94
   [10] forces!
      @ ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:90 [inlined]
   [11] forces(V::EMT, at::Atoms{Float64}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [12] forces(V::EMT, at::Atoms{Float64})
      @ JuLIP.Potentials ~/.julia/packages/JuLIP/WO5HB/src/multi.jl:73
   [13] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:34
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [17] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:10
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144
   [19] top-level scope
      @ ~/.julia/packages/ASE/GfCjR/test/runtests.jl:8
Compare JuLIP vs ASE: EAM
[ Info: Download an Example EAM potential
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  3 9082k    3  288k    0     0   212k      0  0:00:42  0:00:01  0:00:41  212k  5 9082k    5  544k    0     0   229k      0  0:00:39  0:00:02  0:00:37  229k  8 9082k    8  768k    0     0   227k      0  0:00:39  0:00:03  0:00:36  227k 13 9082k   13 1200k    0     0   276k      0  0:00:32  0:00:04  0:00:28  276k 18 9082k   18 1712k    0     0   320k      0  0:00:28  0:00:05  0:00:23  345k 22 9082k   22 2000k    0     0   313k      0  0:00:28  0:00:06  0:00:22  341k 25 9082k   25 2272k    0     0   309k      0  0:00:29  0:00:07  0:00:22  347k 28 9082k   28 2608k    0     0   312k      0  0:00:29  0:00:08  0:00:21  369k 31 9082k   31 2816k    0     0   300k      0  0:00:30  0:00:09  0:00:21  321k 34 9082k   34 3152k    0     0   304k      0  0:00:29  0:00:10  0:00:19  288k 38 9082k   38 3504k    0     0   308k      0  0:00:29  0:00:11  0:00:18  302k 41 9082k   41 3808k    0     0   308k      0  0:00:29  0:00:12  0:00:17  307k 44 9082k   44 4016k    0     0   300k      0  0:00:30  0:00:13  0:00:17  281k 45 9082k   45 4176k    0     0   291k      0  0:00:31  0:00:14  0:00:17  272k 48 9082k   48 4368k    0     0   284k      0  0:00:31  0:00:15  0:00:16  241k 50 9082k   50 4608k    0     0   281k      0  0:00:32  0:00:16  0:00:16  219k 53 9082k   53 4816k    0     0   277k      0  0:00:32  0:00:17  0:00:15  200k 55 9082k   55 5008k    0     0   272k      0  0:00:33  0:00:18  0:00:15  197k 56 9082k   56 5152k    0     0   266k      0  0:00:34  0:00:19  0:00:15  194k 57 9082k   57 5264k    0     0   258k      0  0:00:35  0:00:20  0:00:15  179k 59 9082k   59 5376k    0     0   251k      0  0:00:36  0:00:21  0:00:15  154k 61 9082k   61 5600k    0     0   250k      0  0:00:36  0:00:22  0:00:14  157k 65 9082k   65 5904k    0     0   252k      0  0:00:35  0:00:23  0:00:12  179k 68 9082k   68 6192k    0     0   254k      0  0:00:35  0:00:24  0:00:11  207k 70 9082k   70 6384k    0     0   251k      0  0:00:36  0:00:25  0:00:11  223k 71 9082k   71 6496k    0     0   246k      0  0:00:36  0:00:26  0:00:10  224k 73 9082k   73 6656k    0     0   243k      0  0:00:37  0:00:27  0:00:10  209k 75 9082k   75 6832k    0     0   240k      0  0:00:37  0:00:28  0:00:09  185k 77 9082k   77 7072k    0     0   240k      0  0:00:37  0:00:29  0:00:08  176k 80 9082k   80 7296k    0     0   240k      0  0:00:37  0:00:30  0:00:07  182k 82 9082k   82 7472k    0     0   238k      0  0:00:38  0:00:31  0:00:07  193k 83 9082k   83 7568k    0     0   233k      0  0:00:38  0:00:32  0:00:06  183k 84 9082k   84 7648k    0     0   229k      0  0:00:39  0:00:33  0:00:06  162k 87 9082k   87 7920k    0     0   230k      0  0:00:39  0:00:34  0:00:05  169k 90 9082k   90 8192k    0     0   231k      0  0:00:39  0:00:35  0:00:04  178k 92 9082k   92 8416k    0     0   231k      0  0:00:39  0:00:36  0:00:03  188k 94 9082k   94 8608k    0     0   230k      0  0:00:39  0:00:37  0:00:02  208k 96 9082k   96 8784k    0     0   229k      0  0:00:39  0:00:38  0:00:01  227k 98 9082k   98 8976k    0     0   227k      0  0:00:39  0:00:39 --:--:--  210k100 9082k  100 9082k    0     0   227k      0  0:00:39  0:00:39 --:--:--  196k
[ Info: Generate the ASE potential
[ Info: Generate low-, med-, high-accuracy JuLIP potential
[ Info: Test 1
      Low Accuracy energy error:0.019085605633225415; Test Passed
   Medium Accuracy energy error:-0.005090052032014851; Test Passed
     High Accuracy energy error:-0.00035847854432012756; Test Passed
[ Info: Test 2
      Low Accuracy energy error:0.02002142538074575; Test Passed
   Medium Accuracy energy error:-0.005438567739948873; Test Passed
     High Accuracy energy error:-0.0004839384496593101; Test Passed
Compare JuLIP vs Quippy: SW
┌ Warning: Assignment to `at` in soft scope is ambiguous because a global variable by the same name exists: `at` will be treated as a new local. Disambiguate by using `local at` to suppress this warning or `global at` to assign to the existing global variable.
└ @ ~/.julia/packages/ASE/GfCjR/test/test_asevsjulip.jl:85
[ Info: quippy was not found
Test Summary:  | Pass  Error  Total
ASE            |   16      4     20
  Atoms        |    8             8
  Calculators  |    2             2
  JuLIP vs ASE |    6      4     10
ERROR: LoadError: Some tests did not pass: 16 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ASE/GfCjR/test/runtests.jl:7
ERROR: Package ASE errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1632
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:333
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:320
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66
 [11] top-level scope
    @ none:31
