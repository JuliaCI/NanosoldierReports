Julia Version 1.5.0-DEV.146
Commit 4db419b7f6 (2020-01-24 08:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed DataAPI ──────────── v1.1.0
 Installed OrderedCollections ─ v1.1.0
 Installed Rmath ────────────── v0.6.0
 Installed Parameters ───────── v0.12.0
 Installed StatsFuns ────────── v0.9.3
 Installed AdvancedHMC ──────── v0.2.20
 Installed DataStructures ───── v0.17.9
 Installed LazyArrays ───────── v0.14.11
 Installed ArgCheck ─────────── v1.0.1
 Installed SpecialFunctions ─── v0.9.0
 Installed SortingAlgorithms ── v0.3.1
 Installed OpenSpecFun_jll ──── v0.5.3+1
 Installed FillArrays ───────── v0.8.4
 Installed ProgressMeter ────── v1.2.0
 Installed StaticArrays ─────── v0.12.1
 Installed StatsBase ────────── v0.32.0
 Installed Missings ─────────── v0.4.3
 Installed Requires ─────────── v1.0.0
 Installed BinaryProvider ───── v0.5.8
 Installed InplaceOps ───────── v0.3.0
 Installed ArrayLayouts ─────── v0.1.5
 Installed MacroTools ───────── v0.5.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.0.1
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Updating `/tmp/jl_cUwYT2/Project.toml`
 [no changes]
  Updating `/tmp/jl_cUwYT2/Manifest.toml`
 [no changes]
   Testing AdvancedHMC
 Installed ForwardDiff ───────────────── v0.10.9
 Installed FFTW_jll ──────────────────── v3.3.9+3
 Installed Bijectors ─────────────────── v0.5.2
 Installed Distributions ─────────────── v0.22.3
 Installed Zygote ────────────────────── v0.4.6
 Installed UnicodePlots ──────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed OrdinaryDiffEq ────────────── v5.28.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed FFTW ──────────────────────── v1.2.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed ExponentialUtilities ──────── v1.6.0
 Installed DynamicPPL ────────────────── v0.1.1
 Installed Tracker ───────────────────── v0.2.6
 Installed Turing ────────────────────── v0.8.3
 Installed ArrayInterface ────────────── v2.3.1
 Installed KernelDensity ─────────────── v0.5.1
 Installed Combinatorics ─────────────── v0.7.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed CategoricalArrays ─────────── v0.7.7
 Installed LogDensityProblems ────────── v0.10.1
 Installed RangeArrays ───────────────── v0.3.2
 Installed AxisArrays ────────────────── v0.4.1
 Installed DataFrames ────────────────── v0.20.0
 Installed IntelOpenMP_jll ───────────── v2018.0.3+0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed LineSearches ──────────────── v7.0.1
 Installed DistributionsAD ───────────── v0.2.0
 Installed Roots ─────────────────────── v0.8.4
 Installed CommonSubexpressions ──────── v0.2.0
 Installed SparseDiffTools ───────────── v1.2.0
 Installed TransformVariables ────────── v0.3.9
 Installed OffsetArrays ──────────────── v1.0.2
 Installed FunctionWrappers ──────────── v1.0.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed Ratios ────────────────────── v0.3.1
 Installed PDMats ────────────────────── v0.9.11
 Installed Compat ────────────────────── v2.2.0
 Installed JSON ──────────────────────── v0.21.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed DocStringExtensions ───────── v0.8.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed Optim ─────────────────────── v0.20.0
 Installed IterTools ─────────────────── v1.3.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed GenericSVD ────────────────── v0.2.2
 Installed TreeViews ─────────────────── v0.3.0
 Installed WoodburyMatrices ──────────── v0.5.0
 Installed Reexport ──────────────────── v0.2.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed MKL_jll ───────────────────── v2019.0.117+2
 Installed DiffRules ─────────────────── v1.0.0
 Installed DiffEqBase ────────────────── v6.13.0
 Installed ChainRulesCore ────────────── v0.5.5
 Installed Polynomials ───────────────── v0.6.0
 Installed FiniteDiff ────────────────── v2.0.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+4
 Installed IRTools ───────────────────── v0.3.0
 Installed DiffResults ───────────────── v1.0.2
 Installed Arpack ────────────────────── v0.4.0
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed AbstractMCMC ──────────────── v0.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed PooledArrays ──────────────── v0.5.3
 Installed NNlib ─────────────────────── v0.6.4
 Installed RecipesBase ───────────────── v0.7.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed RecursiveArrayTools ───────── v2.0.2
 Installed LightGraphs ───────────────── v1.3.0
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed ZygoteRules ───────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Inflate ───────────────────── v0.1.1
 Installed PositiveFactorizations ────── v0.2.3
 Installed Parsers ───────────────────── v0.3.10
 Installed Libtask ───────────────────── v0.3.1
 Installed MuladdMacro ───────────────── v0.2.2
 Installed MCMCChains ────────────────── v1.0.1
 Installed Adapt ─────────────────────── v1.0.0
 Installed Showoff ───────────────────── v0.3.1
 Installed Interpolations ────────────── v0.12.7
  Updating `/tmp/jl_7ODAp7/Project.toml`
  [76274a88] + Bijectors v0.5.2
  [31c24e10] + Distributions v0.22.3
  [f6369f11] + ForwardDiff v0.10.9
  [1dea7af3] + OrdinaryDiffEq v5.28.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [e88e6eb3] + Zygote v0.4.6
  Updating `/tmp/jl_7ODAp7/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [80f14c24] + AbstractMCMC v0.1.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.3.1
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.4.1
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.5.2
  [324d7699] + CategoricalArrays v0.7.7
  [d360d2e6] + ChainRulesCore v0.5.5
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a93c6f00] + DataFrames v0.20.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.13.0
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [31c24e10] + Distributions v0.22.3
  [ced4e74d] + DistributionsAD v0.2.0
  [ffbed154] + DocStringExtensions v0.8.1
  [366bfd00] + DynamicPPL v0.1.1
  [d4d017d3] + ExponentialUtilities v1.6.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [6a86dc24] + FiniteDiff v2.0.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.7
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [6f1fad26] + Libtask v0.3.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.1
  [c7f686f2] + MCMCChains v1.0.1
  [856f044c] + MKL_jll v2019.0.117+2
  [dbb5928d] + MappedArrays v0.2.2
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [872c559c] + NNlib v0.6.4
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v1.0.2
  [4536629a] + OpenBLAS_jll v0.3.7+4
  [429524aa] + Optim v0.20.0
  [1dea7af3] + OrdinaryDiffEq v5.28.0
  [90014a1f] + PDMats v0.9.11
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.9
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.8.3
  [b8865327] + UnicodePlots v1.1.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [efce3f68] + WoodburyMatrices v0.5.0
  [e88e6eb3] + Zygote v0.4.6
  [700de1a5] + ZygoteRules v0.2.0
  [8bb1440f] + DelimitedFiles 
  [9fa8497b] + Future 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
  [4607b0f0] + SuiteSparse 
  Building FFTW ───→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_CwJhGb/Project.toml`
 [no changes]
  Updating `/tmp/jl_CwJhGb/Manifest.toml`
 [no changes]
  Building NNlib ──→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_9mf1WJ/Project.toml`
 [no changes]
  Updating `/tmp/jl_9mf1WJ/Manifest.toml`
 [no changes]
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Updating `/tmp/jl_Af7Y7t/Project.toml`
 [no changes]
  Updating `/tmp/jl_Af7Y7t/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_7ODAp7/Project.toml`
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.0.1
  [76274a88] Bijectors v0.5.2
  [31c24e10] Distributions v0.22.3
  [f6369f11] ForwardDiff v0.10.9
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.14.11
  [1dea7af3] OrdinaryDiffEq v5.28.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.6
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.15463183
│   t_steps = 0.007164198
└   t_step / t_steps = 21.58396934311419
WARNING: Method definition vec(Number) in module FiniteDiff at /home/pkgeval/.julia/packages/FiniteDiff/zeWoZ/src/jacobians.jl:114 overwritten in module DiffEqDiffTools at /home/pkgeval/.julia/packages/DiffEqDiffTools/3mm8U/src/jacobians.jl:114.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 5:31:46[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.02451906361119243
  log_density:                   -10.901268881329239
  hamiltonian_energy:            14.019919364222865
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  3.708304357420154
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:24[K
  iterations:                    1208
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.792761573740842
  hamiltonian_energy:            23.128232995010762
  hamiltonian_energy_error:      -0.44922795517256375
  max_hamiltonian_energy_error:  -0.6113108274440293
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7053624954043202
  nom_step_size:                 0.7053624954043202
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1299962851089551, 1.0557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:20[K
  iterations:                    1465
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7799116724892733
  log_density:                   -12.244581327591657
  hamiltonian_energy:            17.340306177380494
  hamiltonian_energy_error:      0.0308956108090932
  max_hamiltonian_energy_error:  0.43612638547306304
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7075609369282476
  nom_step_size:                 0.7075609369282476
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1299962851089551, 1.0557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▎                          |  ETA: 0:00:18[K
  iterations:                    1662
  n_steps:                       91
  is_accept:                     true
  acceptance_rate:               0.8315024425259314
  log_density:                   -16.808268564746694
  hamiltonian_energy:            23.768608708008465
  hamiltonian_energy_error:      0.054977710144104464
  max_hamiltonian_energy_error:  0.6903197179927858
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7881511747033145
  nom_step_size:                 0.7881511747033145
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.1299962851089551, 1.0557 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:15[K
  iterations:                    1992
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9965429382757409
  log_density:                   -18.22812351057769
  hamiltonian_energy:            23.339797310095218
  hamiltonian_energy_error:      0.014261973406103579
  max_hamiltonian_energy_error:  -0.058119590585420156
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.262759738996566
  nom_step_size:                 0.262759738996566
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▎                        |  ETA: 0:00:12[K
  iterations:                    2411
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9338936997441828
  log_density:                   -13.295694534837258
  hamiltonian_energy:            17.66749141731281
  hamiltonian_energy_error:      0.007145625913040021
  max_hamiltonian_energy_error:  0.12483897800723298
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:10[K
  iterations:                    2885
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8476045303718632
  log_density:                   -12.965675613770959
  hamiltonian_energy:            20.11345151704615
  hamiltonian_energy_error:      -0.19686494608552252
  max_hamiltonian_energy_error:  0.41239063758416705
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:08[K
  iterations:                    3342
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8955886812896815
  log_density:                   -12.857059408821392
  hamiltonian_energy:            16.50484595009787
  hamiltonian_energy_error:      0.07432558418426538
  max_hamiltonian_energy_error:  0.21392262704630838
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:08[K
  iterations:                    3687
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8245204258537358
  log_density:                   -13.625488712048215
  hamiltonian_energy:            15.892527813943683
  hamiltonian_energy_error:      0.31364065608202374
  max_hamiltonian_energy_error:  0.34833145554446965
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4152
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.705716100557854
  hamiltonian_energy:            18.442412667656455
  hamiltonian_energy_error:      -0.38178011908935616
  max_hamiltonian_energy_error:  -0.6237837680521281
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8256877283316018
  log_density:                   -12.904755521991289
  hamiltonian_energy:            18.632349224230744
  hamiltonian_energy_error:      -0.026235976011605544
  max_hamiltonian_energy_error:  0.35971722806353057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▉                  |  ETA: 0:00:05[K
  iterations:                    4967
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6989919654394282
  log_density:                   -12.710781487492723
  hamiltonian_energy:            20.916184035555535
  hamiltonian_energy_error:      -0.08974616263563107
  max_hamiltonian_energy_error:  0.8264408414035458
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|█████████████▉                 |  ETA: 0:00:05[K
  iterations:                    5372
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8521592022492684
  log_density:                   -12.352342949011978
  hamiltonian_energy:            17.59752350794559
  hamiltonian_energy_error:      -0.07290693219388444
  max_hamiltonian_energy_error:  0.3523927490211136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 48%|██████████████▉                |  ETA: 0:00:04[K
  iterations:                    5751
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5310848762945842
  log_density:                   -18.419292103123773
  hamiltonian_energy:            20.192395263204688
  hamiltonian_energy_error:      0.9885388789489191
  max_hamiltonian_energy_error:  0.9885388789489191
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 52%|████████████████▏              |  ETA: 0:00:04[K
  iterations:                    6246
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9755618087747807
  log_density:                   -14.11524964551139
  hamiltonian_energy:            16.397926055404994
  hamiltonian_energy_error:      0.09804019562794863
  max_hamiltonian_energy_error:  -0.21319476351612465
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████              |  ETA: 0:00:03[K
  iterations:                    6592
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7834112681451906
  log_density:                   -12.271858002447239
  hamiltonian_energy:            17.492799875230837
  hamiltonian_energy_error:      0.02356936993557568
  max_hamiltonian_energy_error:  0.46254098797438203
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▎            |  ETA: 0:00:03[K
  iterations:                    7045
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9329724947565886
  log_density:                   -14.192457825963086
  hamiltonian_energy:            20.153341063912098
  hamiltonian_energy_error:      -0.08631370728505772
  max_hamiltonian_energy_error:  0.1903400171923586
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 62%|███████████████████▏           |  ETA: 0:00:03[K
  iterations:                    7414
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7948891776494997
  log_density:                   -12.827994377903119
  hamiltonian_energy:            18.865385821756956
  hamiltonian_energy_error:      -0.0011303838695475577
  max_hamiltonian_energy_error:  0.457000418750134
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████▎          |  ETA: 0:00:02[K
  iterations:                    7853
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -17.171094998417338
  hamiltonian_energy:            19.764421481564927
  hamiltonian_energy_error:      -0.15025389138958545
  max_hamiltonian_energy_error:  -0.9170974905990903
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8265
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9376593680511638
  log_density:                   -12.39538362712049
  hamiltonian_energy:            14.7243697871658
  hamiltonian_energy_error:      0.06583247620745247
  max_hamiltonian_energy_error:  0.14541451790089255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▍        |  ETA: 0:00:02[K
  iterations:                    8638
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8578613913057043
  log_density:                   -17.279535757185513
  hamiltonian_energy:            22.394435580886203
  hamiltonian_energy_error:      0.2977832666881426
  max_hamiltonian_energy_error:  0.2977832666881426
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▊       |  ETA: 0:00:01[K
  iterations:                    9176
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8511013499216971
  log_density:                   -16.137816789981237
  hamiltonian_energy:            20.883521460947783
  hamiltonian_energy_error:      0.24136515726435093
  max_hamiltonian_energy_error:  0.35608394758489226
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9553
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9259043320352581
  log_density:                   -13.045512136603026
  hamiltonian_energy:            17.733863711848738
  hamiltonian_energy_error:      -0.06417504995541634
  max_hamiltonian_energy_error:  -0.36604224836696275
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▊     |  ETA: 0:00:01[K
  iterations:                    9985
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.898180390356173
  log_density:                   -11.919573672933023
  hamiltonian_energy:            16.743230050909162
  hamiltonian_energy_error:      -0.1482629321818365
  max_hamiltonian_energy_error:  0.3001438734613231
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10385
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.565413878774546
  hamiltonian_energy:            22.24818165436541
  hamiltonian_energy_error:      -1.299644303879262
  max_hamiltonian_energy_error:  -1.299644303879262
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10811
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9912799309067301
  log_density:                   -12.687316300548172
  hamiltonian_energy:            14.577285584353508
  hamiltonian_energy_error:      -0.02774583864468738
  max_hamiltonian_energy_error:  -0.35940278708686435
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11301
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9512412377971043
  log_density:                   -13.988912130207831
  hamiltonian_energy:            17.806789014814296
  hamiltonian_energy_error:      0.06827386734257246
  max_hamiltonian_energy_error:  0.12354906725430581
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████▏|  ETA: 0:00:00[K
  iterations:                    11647
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9530295186189993
  log_density:                   -12.300393578229773
  hamiltonian_energy:            20.829255305324747
  hamiltonian_energy_error:      -0.5342724369535681
  max_hamiltonian_energy_error:  -0.5342724369535681
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.798001822941385
  hamiltonian_energy:            14.283243537581399
  hamiltonian_energy_error:      -0.3824532747581202
  max_hamiltonian_energy_error:  -0.4041511811066627
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7380461323192964
  nom_step_size:                 0.7380461323192964
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9300246543424253, 1.1182 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.37282756 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9300246543424253, 1.1182 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.738), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0923031799215732
└   average_acceptance_rate = 0.8563562879648408
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 0.961572318 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            3 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠤⡀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⡸⠣⡀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⢀⠇⢱⠀⠀⠀⡰⠁⠀⠑│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠱⡀⠀⠀⡎⠀⠀⢇⢀⠔⠃⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠱⠤⠊⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⢀⠜⢣⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⢠⠎⠀⠀⢣⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡆⠀⠀⠀⢠⠃⠀⠀⠀⢀⣀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠸⡀⠀⢠⠇⠀⠀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⢱⣠⠧⠒⠒⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠱⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
   Testing AdvancedHMC tests passed 
