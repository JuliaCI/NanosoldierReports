Julia Version 1.5.0-DEV.146
Commit 4db419b7f6 (2020-01-24 08:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.9
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.9
 Installed CategoricalArrays ─────────── v0.7.7
 Installed DataFrames ────────────────── v0.20.0
 Installed Compat ────────────────────── v3.2.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataPattern ─────────────── v0.5.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed TableTraits ───────────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.9
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_HJNAx8/Project.toml`
 [no changes]
  Updating `/tmp/jl_HJNAx8/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_HJNAx8/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 152.99
[ Info: 71.16
[ Info: 46.18999999999998
[ Info: 24.060000000000002
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 75.76000114354103
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.818734885249377
inertia(cdnet.distances) = 21.54418173315712
inertia(crand.distances) = 19.823448253931257
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.1484375,"distances_sum":1023.7221071441726}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7964160839160846,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.9296875,"distances_sum":2105.1027507101294}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8414777930402939,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.25,"distances_sum":2341.1130411269974}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8414777930402939,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.25,"distances_sum":2341.1130411269974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8474426615051622,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.2578125,"distances_sum":2392.7715074118855}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9369734432234434,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.734375,"distances_sum":2965.8101894376346}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9100732600732608,"seconds":3.762543201446533e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2742.948722237446}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9369734432234434,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.734375,"distances_sum":2965.8101894376346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972395833333334,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":3234.495803763477}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9921875,"distances_sum":3252.920414277875}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9921875,"distances_sum":3252.920414277875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9921875,"distances_sum":3252.920414277875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.345703125,"f1":null,"seconds":2.5369226932525635e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":5.9921875,"distances_sum":899.2222573768146}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.836098797036298,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.9296875,"distances_sum":2098.1279242343903}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.836098797036298,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.9296875,"distances_sum":2098.1279242343903}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9230628746253751,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.5859375,"distances_sum":2591.0198789600395}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9207734973359979,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.625,"distances_sum":2577.1658041481005}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8997856310356318,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.5390625,"distances_sum":2407.316837500114}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9230628746253751,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.5859375,"distances_sum":2591.0198789600395}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413633241758247,"seconds":6.847083568572998e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.765625,"distances_sum":2676.1152209128636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9450263278388285,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.8203125,"distances_sum":2673.1540653130683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.944631410256411,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.734375,"distances_sum":2723.007418356209}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9617819680319686,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.84375,"distances_sum":2850.2765551632087}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589514652014657,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.8203125,"distances_sum":2813.2695054375035}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9619136072261073,"seconds":6.644055247306824e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.8359375,"distances_sum":2848.4339350888845}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9617819680319686,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.84375,"distances_sum":2850.2765551632087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9617819680319686,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.84375,"distances_sum":2850.2765551632087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8411139208014216,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.46875,"distances_sum":2027.0366390559477}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.09375,"distances_sum":604.9350443986252}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8411139208014216,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.46875,"distances_sum":2027.0366390559477}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9277446511821515,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.84375,"distances_sum":2628.3614598407967}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9644204753579757,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9609375,"distances_sum":2891.214577583112}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9644204753579757,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9609375,"distances_sum":2891.214577583112}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707989926739928,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9375,"distances_sum":2941.656898569309}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739928,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9375,"distances_sum":2941.656898569309}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739928,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9375,"distances_sum":2941.656898569309}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":2.3189932107925415e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":5.9453125,"distances_sum":484.9617275800392}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1962890625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1962890625,"f1":null,"seconds":2.3189932107925415e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":5.9453125,"distances_sum":484.9617275800392}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1962890625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1962890625,"f1":null,"seconds":2.3189932107925415e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":5.9453125,"distances_sum":484.9617275800392}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7876902611277619,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.5,"distances_sum":1604.8469466848878}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":2.51084566116333e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.078125,"distances_sum":443.7321048000242}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.5390625,"distances_sum":963.4617386745828}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7876902611277619,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.5,"distances_sum":1604.8469466848878}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8042414183039192,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.71875,"distances_sum":1670.4566461941124}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.857217782217783,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.2265625,"distances_sum":1921.7647332219733}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8445549242424253,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.171875,"distances_sum":1855.0399489155554}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.857217782217783,"seconds":3.930181264877319e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.2265625,"distances_sum":1921.7647332219733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9008907758907765,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.4453125,"distances_sum":2131.4350243613508}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9511020229770233,"seconds":7.225200533866882e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.796875,"distances_sum":2528.26764162149}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516082875457883,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.8046875,"distances_sum":2484.7435062211143}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9026187354312362,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.4921875,"distances_sum":2137.6876286245338}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.944505494505495,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7421875,"distances_sum":2462.612543924328}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.916557921245422,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.640625,"distances_sum":2242.721369791839}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9334592490842495,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.71875,"distances_sum":2327.578163017085}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9494848901098906,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7578125,"distances_sum":2503.6919392299574}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9511020229770233,"seconds":7.225200533866882e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.796875,"distances_sum":2528.26764162149}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9511020229770233,"seconds":7.225200533866882e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.796875,"distances_sum":2528.26764162149}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":6.34375,"distances_sum":517.9015252706041}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8485935939060948,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.1484375,"distances_sum":1802.9376079498961}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":6.109375,"distances_sum":901.743425565842}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8485935939060948,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.1484375,"distances_sum":1802.9376079498961}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9542639652014655,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8359375,"distances_sum":2412.6772110168804}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9410974442224447,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.7734375,"distances_sum":2314.2914166402716}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8538643648018658,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.1953125,"distances_sum":1819.2586895761913}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9542639652014655,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8359375,"distances_sum":2412.6772110168804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.9453125,"distances_sum":2567.008383266087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638450091575096,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.796875,"distances_sum":2531.494014665253}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584280303030306,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":2469.6441562773994}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.9453125,"distances_sum":2567.008383266087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.9453125,"distances_sum":2567.008383266087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8622741841491851,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.6953125,"distances_sum":1924.8191143620425}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7054646742146747,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.9609375,"distances_sum":1332.5865262765828}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8622741841491851,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.6953125,"distances_sum":1924.8191143620425}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9442307692307699,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.890625,"distances_sum":2463.6932915361613}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8649335039960049,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.7421875,"distances_sum":1951.3321204017489}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9442307692307699,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.890625,"distances_sum":2463.6932915361613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.9765625,"distances_sum":2664.695574804173}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694597069597072,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.9609375,"distances_sum":2618.7347752500455}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.9765625,"distances_sum":2664.695574804173}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417587,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.9765625,"distances_sum":2664.695574804173}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":1.8700957298278809e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.90625,"distances_sum":504.94461554606227}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":2.0936131477355957e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.0546875,"distances_sum":531.1282393939598}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8532144938394945,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4453125,"distances_sum":1862.4432201856714}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8532144938394945,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.4453125,"distances_sum":1862.4432201856714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8909142940392948,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5078125,"distances_sum":2097.4128730254156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9489125457875462,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.78125,"distances_sum":2487.745394823679}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8601558164058174,"seconds":3.2298266887664795e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5234375,"distances_sum":1933.647243556994}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9489125457875462,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.78125,"distances_sum":2487.745394823679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667811355311361,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8828125,"distances_sum":2607.342152037713}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975446428571429,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2657.7816979602835}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558264652014655,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.828125,"distances_sum":2540.76280746049}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975446428571429,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2657.7816979602835}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975446428571429,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2657.7816979602835}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6886349761349767,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":7.859375,"distances_sum":1219.7916557437434}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7751940767565776,"seconds":3.3490359783172607e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.2734375,"distances_sum":1494.475087275266}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7751940767565776,"seconds":3.3490359783172607e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.2734375,"distances_sum":1494.475087275266}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547504578754583,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.921875,"distances_sum":2417.867478839163}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9432348901098906,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.9453125,"distances_sum":2334.090456449365}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9547504578754583,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.921875,"distances_sum":2417.867478839163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636446886446889,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.90625,"distances_sum":2486.476681447033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.962917811355312,"seconds":3.919005393981934e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.8984375,"distances_sum":2507.7036966124847}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597126831501834,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.890625,"distances_sum":2455.690409303188}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9636446886446889,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.90625,"distances_sum":2486.476681447033}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9636446886446889,"seconds":4.0959566831588745e-6,"exhaustive_search_seconds":8.996576070785522e-7,"evaluations":8.90625,"distances_sum":2486.476681447033}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7828650516150524,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":7.7578125,"distances_sum":1437.7552325871163}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7828650516150524,"seconds":3.4850090742111206e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":7.7578125,"distances_sum":1437.7552325871163}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9137534340659347,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":8.6796875,"distances_sum":2004.0080256494598}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9137534340659347,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":8.6796875,"distances_sum":2004.0080256494598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9137534340659347,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":8.6796875,"distances_sum":2004.0080256494598}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8486328125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9137534340659347,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.0561197996139526e-6,"evaluations":8.6796875,"distances_sum":2004.0080256494598}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":2.3227185010910034e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":5.703125,"distances_sum":749.8406429544643}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.388671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.388671875,"f1":null,"seconds":2.1345913410186768e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":5.7578125,"distances_sum":753.4114647192004}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.3544921875,"f1":0.5011918636918634,"seconds":2.0936131477355957e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":5.3203125,"distances_sum":690.3919448628907}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.388671875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.388671875,"f1":null,"seconds":2.1345913410186768e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":5.7578125,"distances_sum":753.4114647192004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7802511724386733,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.0703125,"distances_sum":1349.7271868662529}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":2.5350600481033325e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.609375,"distances_sum":1064.512873810386}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9192453379953388,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.5625,"distances_sum":1922.9506449970281}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9083307317682324,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.5234375,"distances_sum":1864.6489240823882}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.790984536297037,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.0234375,"distances_sum":1352.9165267073663}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8525016650016659,"seconds":3.254041075706482e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.2734375,"distances_sum":1606.95686966465}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8614416833166844,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.265625,"distances_sum":1626.967146148579}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.51953125,"f1":0.6681499056499061,"seconds":2.4922192096710205e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":6.59375,"distances_sum":1047.019262142121}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9192453379953388,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.5625,"distances_sum":1922.9506449970281}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412863178488182,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.75,"distances_sum":2030.033525906868}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9327927281052288,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.625,"distances_sum":2019.1601461105663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333848443223453,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.703125,"distances_sum":1997.7846628975092}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9378033424908431,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.6875,"distances_sum":2073.154424078849}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947475961538462,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.7578125,"distances_sum":2103.8837713889893}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947475961538462,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.7578125,"distances_sum":2103.8837713889893}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947475961538462,"seconds":3.6228448152542114e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":8.7578125,"distances_sum":2103.8837713889893}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":2.728775143623352e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.296875,"distances_sum":444.5120731150796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6834922022422026,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.875,"distances_sum":1067.1465098269027}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8656739094239102,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.34375,"distances_sum":1679.5677531183937}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8656739094239102,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.34375,"distances_sum":1679.5677531183937}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9227709790209795,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6328125,"distances_sum":1978.0324901711087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9309065934065939,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6328125,"distances_sum":2032.1762052098775}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945504495504496,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7109375,"distances_sum":2137.958888099772}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.945504495504496,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7109375,"distances_sum":2137.958888099772}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9515510531135538,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2159.2004731588113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710794413919417,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2252.5390023199566}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9484489468864474,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.765625,"distances_sum":2107.0353161184257}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710794413919417,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2252.5390023199566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710794413919417,"seconds":3.7532299757003784e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.953125,"distances_sum":2252.5390023199566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8120450729825738,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.1875,"distances_sum":1363.314237236287}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8120450729825738,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.1875,"distances_sum":1363.314237236287}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9604624542124549,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2080.57997092616}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9095727189477197,"seconds":3.458932042121887e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.6171875,"distances_sum":1775.3290267324987}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9604624542124549,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2080.57997092616}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9604624542124549,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2080.57997092616}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9604624542124549,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.8515625,"distances_sum":2080.57997092616}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8714925699300706,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0625,"distances_sum":1551.8864506807674}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8714925699300706,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0625,"distances_sum":1551.8864506807674}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557406135531142,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7421875,"distances_sum":2004.9526326189978}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9557406135531142,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7421875,"distances_sum":2004.9526326189978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9670246420246426,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8515625,"distances_sum":2055.443267919967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972825091575092,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2085.4174840147703}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972825091575092,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2085.4174840147703}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.972825091575092,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8984375,"distances_sum":2085.4174840147703}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7809818653568662,"seconds":2.9746443033218384e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.8828125,"distances_sum":1297.1968806334771}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7809818653568662,"seconds":2.9746443033218384e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":7.8828125,"distances_sum":1297.1968806334771}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9371425449550458,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.796875,"distances_sum":1911.0164975635344}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9371425449550458,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.796875,"distances_sum":1911.0164975635344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514766483516489,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.8046875,"distances_sum":2027.224263696514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311359,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2150.578175478023}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96559065934066,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.890625,"distances_sum":2094.0477045155517}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311359,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2150.578175478023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9777186355311359,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":8.953125,"distances_sum":2150.578175478023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8607777639027647,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.40625,"distances_sum":1654.5224742327234}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.314453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.314453125,"f1":null,"seconds":2.0563602447509766e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.40625,"distances_sum":678.5274853516958}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8607777639027647,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.40625,"distances_sum":1654.5224742327234}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9054919039294049,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.640625,"distances_sum":1848.572607021442}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9565705128205136,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8125,"distances_sum":2143.6048137755747}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8943514818514826,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.53125,"distances_sum":1799.878943222091}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9565705128205136,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8125,"distances_sum":2143.6048137755747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.875,"distances_sum":2210.5376738753794}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607543498168503,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2192.846803586237}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648809523809528,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7578125,"distances_sum":2211.9086147706544}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565361721611727,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.796875,"distances_sum":2153.4512571502814}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.875,"distances_sum":2210.5376738753794}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941396,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.875,"distances_sum":2210.5376738753794}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8687421953046962,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.2734375,"distances_sum":1651.4501225403435}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8687421953046962,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.2734375,"distances_sum":1651.4501225403435}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9246336996337001,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6171875,"distances_sum":1957.5255565498037}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9246336996337001,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.6171875,"distances_sum":1957.5255565498037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503777472527477,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.828125,"distances_sum":2081.6023346656566}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9503777472527477,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.828125,"distances_sum":2081.6023346656566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9503777472527477,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":8.922070264816284e-7,"evaluations":8.828125,"distances_sum":2081.6023346656566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":2.2873282432556152e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.25,"distances_sum":762.5039109426009}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3837890625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3837890625,"f1":null,"seconds":2.2873282432556152e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.25,"distances_sum":762.5039109426009}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":6,"bsize":2}, perf: {"precision":1.0,"recall":0.4169921875,"f1":0.566028416028416,"seconds":2.255663275718689e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":6.3359375,"distances_sum":864.1366698478201}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8208655927405936,"seconds":2.9802322387695312e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.0625,"distances_sum":1588.2064549809147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9115244130869137,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.546875,"distances_sum":2011.6336611575666}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9115244130869137,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.546875,"distances_sum":2011.6336611575666}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459878663003667,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2219.0502640905283}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.96700434981685,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8828125,"distances_sum":2337.1615340655144}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360233516483524,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.75,"distances_sum":2120.8513537145495}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9189274267399272,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.53125,"distances_sum":1999.3040486972682}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.96700434981685,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8828125,"distances_sum":2337.1615340655144}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.96700434981685,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8828125,"distances_sum":2337.1615340655144}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.856459686147187,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":1702.2403179567866}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.856459686147187,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":1702.2403179567866}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9407623626373632,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.703125,"distances_sum":2311.0659197227424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.918704212454213,"seconds":8.178874850273132e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2056.2030899598153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966225961538462,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2420.0798452258273}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.966225961538462,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2420.0798452258273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672275641025645,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2412.0299321470534}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672275641025645,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2412.0299321470534}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672275641025645,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2412.0299321470534}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7904871170496178,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.75,"distances_sum":1373.519627657845}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":6.5234375,"distances_sum":508.8015081591761}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7904871170496178,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.75,"distances_sum":1373.519627657845}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.905655282217783,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.5703125,"distances_sum":1928.9905258956908}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9435928654678661,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2120.0040852688753}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9435928654678661,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2120.0040852688753}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695913461538465,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":2285.7226219142717}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594551282051287,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2226.3199496054713}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695913461538465,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":2285.7226219142717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695913461538465,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.953125,"distances_sum":2285.7226219142717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8811615467865478,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":1835.6744296472828}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7812338702963709,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.734375,"distances_sum":1387.7771363585168}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8811615467865478,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":1835.6744296472828}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9552712912087917,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8125,"distances_sum":2344.2397447976587}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.885683587246088,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":1868.86272499806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485608141858147,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.734375,"distances_sum":2315.715199247978}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9226195679320683,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.671875,"distances_sum":2098.6384886947585}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9552712912087917,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8125,"distances_sum":2344.2397447976587}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707989926739932,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2437.382323568485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9653273809523817,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.859375,"distances_sum":2384.4962182000477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962986492673993,"seconds":3.5781413316726685e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2368.8217110002743}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720638736263739,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2410.378678081151}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712625915750916,"seconds":3.693625330924988e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2428.2670018410768}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649954212454215,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2404.0736472953754}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720638736263739,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2410.378678081151}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720638736263739,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9296875,"distances_sum":2410.378678081151}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8330279095904103,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.7109375,"distances_sum":1667.118588580679}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":2.089887857437134e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":5.3984375,"distances_sum":733.7775695873196}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8330279095904103,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.7109375,"distances_sum":1667.118588580679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286401098901104,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.546875,"distances_sum":2154.883178652189}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958207417582418,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8046875,"distances_sum":2377.489900106868}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.958207417582418,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8046875,"distances_sum":2377.489900106868}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.967920100732601,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2436.644186963839}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.958505036630037,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8203125,"distances_sum":2360.405555537339}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575752372627375,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7265625,"distances_sum":2393.9372835749245}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717953,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8984375,"distances_sum":2400.534882084653}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.967920100732601,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2436.644186963839}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.967920100732601,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2436.644186963839}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":2.4084001779556274e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.8515625,"distances_sum":809.4783300818743}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6784047549672554,"seconds":2.684071660041809e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.9140625,"distances_sum":1078.2798838520664}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7902800324675332,"seconds":2.9653310775756836e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.21875,"distances_sum":1461.682238104728}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7902800324675332,"seconds":2.9653310775756836e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.21875,"distances_sum":1461.682238104728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8916297244422252,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.25,"distances_sum":1915.0521013698024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560153388278392,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2364.3463422078376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7903268606393614,"seconds":2.8330832719802856e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.4140625,"distances_sum":1474.739020505808}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9064935064935074,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.234375,"distances_sum":2069.8374419170777}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9560153388278392,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2364.3463422078376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9601762820512824,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8515625,"distances_sum":2375.5696093699603}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702781593406598,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9296875,"distances_sum":2433.98601744399}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785542582417585,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9296875,"distances_sum":2499.804471704891}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9703697344322347,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8671875,"distances_sum":2458.636734811896}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9639365842490846,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.828125,"distances_sum":2407.4292501302125}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966019917582418,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9296875,"distances_sum":2393.9179027071673}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633985805860812,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2419.048218436104}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417585,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9296875,"distances_sum":2499.804471704891}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417585,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9296875,"distances_sum":2499.804471704891}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7042294511044517,"seconds":2.522021532058716e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.1796875,"distances_sum":1218.722578668398}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8627206127206135,"seconds":3.2745301723480225e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1484375,"distances_sum":1839.9390791366827}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8627206127206135,"seconds":3.2745301723480225e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1484375,"distances_sum":1839.9390791366827}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585050366300372,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.84375,"distances_sum":2409.6538937785185}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.893913378288379,"seconds":3.2223761081695557e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1484375,"distances_sum":2017.931912444976}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9585050366300372,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.84375,"distances_sum":2409.6538937785185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9742216117216118,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2520.883894208905}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9742216117216118,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2520.883894208905}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9742216117216118,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.859375,"distances_sum":2520.883894208905}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8144510003885013,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.8515625,"distances_sum":1497.703923181618}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8661203379953387,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.625,"distances_sum":1753.1981783796339}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8661203379953387,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.625,"distances_sum":1753.1981783796339}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531478937728942,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8515625,"distances_sum":2280.913871094864}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9531478937728942,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8515625,"distances_sum":2280.913871094864}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131871,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9765625,"distances_sum":2434.7241097435804}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131871,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9765625,"distances_sum":2434.7241097435804}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131871,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9765625,"distances_sum":2434.7241097435804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":2.088025212287903e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":5.609375,"distances_sum":868.2447109278519}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8459837037962048,"seconds":3.1515955924987793e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":7.5546875,"distances_sum":1720.7281742640155}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8459837037962048,"seconds":3.1515955924987793e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":7.5546875,"distances_sum":1720.7281742640155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8929034507159516,"seconds":3.388151526451111e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.1484375,"distances_sum":1954.8229578681105}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9470581501831509,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.6640625,"distances_sum":2312.2315650455007}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310387529137537,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.3671875,"distances_sum":2211.0983119071666}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9470581501831509,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.6640625,"distances_sum":2312.2315650455007}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.859375,"distances_sum":2445.6128427033627}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.859375,"distances_sum":2445.6128427033627}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713770604395606,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":8.66129994392395e-7,"evaluations":8.859375,"distances_sum":2445.6128427033627}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8115551115551123,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.6640625,"distances_sum":1537.5808838130877}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8115551115551123,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.6640625,"distances_sum":1537.5808838130877}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8676177988677996,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1171875,"distances_sum":1794.49668381437}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9043159965034974,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.296875,"distances_sum":2010.8516697892792}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.850118111055612,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.96875,"distances_sum":1715.9852009099682}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9043159965034974,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.296875,"distances_sum":2010.8516697892792}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711538461538467,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8984375,"distances_sum":2424.00670735109}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421073717948723,"seconds":3.5800039768218994e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.7109375,"distances_sum":2261.2188246070696}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569253663003667,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8203125,"distances_sum":2332.2520135330014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9320028929403936,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.578125,"distances_sum":2177.5717917230845}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711538461538467,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8984375,"distances_sum":2424.00670735109}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711538461538467,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8984375,"distances_sum":2424.00670735109}}, n: 9
inertia(cfft.distances) = 21.07919369680238
inertia(cdnet.distances) = 22.55813697705804
inertia(crand.distances) = 24.270490393733265
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9133333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9155555555555556
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 1, 3, 3, 3, 2, 3, 3, 3, 1, 2, 3, 3, 2, 3, 1, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4408000028998217] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4408000028998217, 0.17610722222684286] ***
*** starting iteration: 2; err: [Inf, 0.4408000028998217, 0.17610722222684286] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977] ***
*** starting iteration: 3; err: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977, 0.1570507747955095] ***
*** starting iteration: 4; err: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977, 0.1570507747955095] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977, 0.1570507747955095, 0.1564780673812445] ***
*** finished computation of 12 references, err: [Inf, 0.4408000028998217, 0.17610722222684286, 0.15940760511527977, 0.1570507747955095, 0.1564780673812445] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.785600001839224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924] ***
*** starting iteration: 2; err: [Inf, 0.785600001839224, 0.5064386371894924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926] ***
*** starting iteration: 3; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645] ***
*** starting iteration: 4; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572] ***
*** starting iteration: 5; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583] ***
*** starting iteration: 6; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554] ***
*** starting iteration: 7; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274] ***
*** starting iteration: 8; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377] ***
*** starting iteration: 9; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377, 0.33798565268284536] ***
*** starting iteration: 10; err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377, 0.33798565268284536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377, 0.33798565268284536, 0.33492178478855483] ***
*** finished computation of 7 references, err: [Inf, 0.785600001839224, 0.5064386371894924, 0.4847719788411926, 0.47004211365990645, 0.4227787959249572, 0.3825797836383583, 0.35948412977188554, 0.3470094652775274, 0.34035315749980377, 0.33798565268284536, 0.33492178478855483] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39943906025234227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39943906025234227, 0.17911906940534195] ***
*** starting iteration: 2; err: [Inf, 0.39943906025234227, 0.17911906940534195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39943906025234227, 0.17911906940534195, 0.17043867938341087] ***
*** starting iteration: 3; err: [Inf, 0.39943906025234227, 0.17911906940534195, 0.17043867938341087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39943906025234227, 0.17911906940534195, 0.17043867938341087, 0.16695728118152753] ***
*** finished computation of 7 references, err: [Inf, 0.39943906025234227, 0.17911906940534195, 0.17043867938341087, 0.16695728118152753] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3875067060856833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3875067060856833, 0.187855795821719] ***
*** starting iteration: 2; err: [Inf, 0.3875067060856833, 0.187855795821719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3875067060856833, 0.187855795821719, 0.1613869048390953] ***
*** starting iteration: 3; err: [Inf, 0.3875067060856833, 0.187855795821719, 0.1613869048390953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3875067060856833, 0.187855795821719, 0.1613869048390953, 0.1501245774920054] ***
*** finished computation of 7 references, err: [Inf, 0.3875067060856833, 0.187855795821719, 0.1613869048390953, 0.1501245774920054] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 13]]
** centroid: 4, normalized-entropy: 1.0, [(2, 13), (3, 13)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49326171886347026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49326171886347026, 0.22341588754944047] ***
*** starting iteration: 2; err: [Inf, 0.49326171886347026, 0.22341588754944047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49326171886347026, 0.22341588754944047, 0.2046924763066739] ***
*** starting iteration: 3; err: [Inf, 0.49326171886347026, 0.22341588754944047, 0.2046924763066739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49326171886347026, 0.22341588754944047, 0.2046924763066739, 0.19578539477270965] ***
*** finished computation of 7 references, err: [Inf, 0.49326171886347026, 0.22341588754944047, 0.2046924763066739, 0.19578539477270965] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7502999953759848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089] ***
*** starting iteration: 2; err: [Inf, 0.7502999953759848, 0.4239768926656089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871] ***
*** starting iteration: 3; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518] ***
*** starting iteration: 4; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792] ***
*** starting iteration: 5; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644] ***
*** starting iteration: 6; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658] ***
*** starting iteration: 7; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658, 0.3550755816257131] ***
*** starting iteration: 8; err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658, 0.3550755816257131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658, 0.3550755816257131, 0.3550755816257131] ***
*** finished computation of 7 references, err: [Inf, 0.7502999953759848, 0.4239768926656089, 0.4082103174965871, 0.4015889448174518, 0.3914031233336792, 0.37512360832808644, 0.3589160744794658, 0.3550755816257131, 0.3550755816257131] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0749999951070575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354] ***
*** starting iteration: 2; err: [Inf, 1.0749999951070575, 0.6286651194406354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779] ***
*** starting iteration: 3; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973] ***
*** starting iteration: 4; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496] ***
*** starting iteration: 5; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165] ***
*** starting iteration: 6; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475] ***
*** starting iteration: 7; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475, 0.34406006815270784] ***
*** starting iteration: 8; err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475, 0.34406006815270784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475, 0.34406006815270784, 0.34319089168993044] ***
*** finished computation of 7 references, err: [Inf, 1.0749999951070575, 0.6286651194406354, 0.462314880207779, 0.38065105285533973, 0.35048258324641496, 0.34771040238030165, 0.3456971705942475, 0.34406006815270784, 0.34319089168993044] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 17]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 15), (3, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8019000012785853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486] ***
*** starting iteration: 2; err: [Inf, 0.8019000012785853, 0.35607420310842486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216] ***
*** starting iteration: 3; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394] ***
*** starting iteration: 4; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885] ***
*** starting iteration: 5; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952] ***
*** starting iteration: 6; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194] ***
*** starting iteration: 7; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169] ***
*** starting iteration: 8; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169, 0.30458505400425284] ***
*** starting iteration: 9; err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169, 0.30458505400425284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169, 0.30458505400425284, 0.30458505400425284] ***
*** finished computation of 7 references, err: [Inf, 0.8019000012785853, 0.35607420310842486, 0.3371624754214216, 0.32696347316183394, 0.3213043220315885, 0.3157264287321952, 0.31224445632720194, 0.3070560459193169, 0.30458505400425284, 0.30458505400425284] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 4]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 7]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(2, 8), (3, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6005999947318492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005999947318492, 0.25779923460280574] ***
*** starting iteration: 2; err: [Inf, 0.6005999947318492, 0.25779923460280574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916] ***
*** starting iteration: 3; err: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916, 0.24210911116362133] ***
*** starting iteration: 4; err: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916, 0.24210911116362133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916, 0.24210911116362133, 0.24210911116362133] ***
*** finished computation of 7 references, err: [Inf, 0.6005999947318492, 0.25779923460280574, 0.24553176865414916, 0.24210911116362133, 0.24210911116362133] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7876999953801744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717] ***
*** starting iteration: 2; err: [Inf, 0.7876999953801744, 0.33309971607499717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532] ***
*** starting iteration: 3; err: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478] ***
*** starting iteration: 4; err: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554] ***
*** starting iteration: 5; err: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554, 0.2380145059682734] ***
*** starting iteration: 6; err: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554, 0.2380145059682734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554, 0.2380145059682734, 0.2374820325032894] ***
*** finished computation of 7 references, err: [Inf, 0.7876999953801744, 0.33309971607499717, 0.2858471534302532, 0.2501974275556478, 0.23953544014022554, 0.2380145059682734, 0.2374820325032894] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9046000043156042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9046000043156042, 0.3667433308434221] ***
*** starting iteration: 2; err: [Inf, 0.9046000043156042, 0.3667433308434221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9046000043156042, 0.3667433308434221, 0.3319522846068185] ***
*** starting iteration: 3; err: [Inf, 0.9046000043156042, 0.3667433308434221, 0.3319522846068185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9046000043156042, 0.3667433308434221, 0.3319522846068185, 0.30631491562178315] ***
*** finished computation of 7 references, err: [Inf, 0.9046000043156042, 0.3667433308434221, 0.3319522846068185, 0.30631491562178315] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8905000014542953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8905000014542953, 0.402763362160065] ***
*** starting iteration: 2; err: [Inf, 0.8905000014542953, 0.402763362160065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8905000014542953, 0.402763362160065, 0.39117590671683294] ***
*** starting iteration: 3; err: [Inf, 0.8905000014542953, 0.402763362160065, 0.39117590671683294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8905000014542953, 0.402763362160065, 0.39117590671683294, 0.37442623288337024] ***
*** finished computation of 7 references, err: [Inf, 0.8905000014542953, 0.402763362160065, 0.39117590671683294, 0.37442623288337024] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 5, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.08910000359324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.08910000359324, 0.573764259498184] ***
*** starting iteration: 2; err: [Inf, 1.08910000359324, 0.573764259498184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.08910000359324, 0.573764259498184, 0.4661714007103278] ***
*** starting iteration: 3; err: [Inf, 1.08910000359324, 0.573764259498184, 0.4661714007103278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.08910000359324, 0.573764259498184, 0.4661714007103278, 0.40782185354314293] ***
*** finished computation of 7 references, err: [Inf, 1.08910000359324, 0.573764259498184, 0.4661714007103278, 0.40782185354314293] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 1, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 2), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.8660999454826968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8660999454826968, 1.1073740445443967] ***
*** finished computation of 3 references, err: [Inf, 3.8660999454826968, 1.1073740445443967] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 5, 0]]
** centroid: 2, normalized-entropy: 0.5617526078313283, [(1, 33), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 14]]
** centroid: 3, normalized-entropy: 0.9568886656798214, [(2, 23), (3, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7479000028250824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7479000028250824, 0.4236243192974065] ***
*** finished computation of 3 references, err: [Inf, 0.7479000028250824, 0.4236243192974065] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8094999993377755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8094999993377755, 0.5811812160381281] ***
*** finished computation of 3 references, err: [Inf, 0.8094999993377755, 0.5811812160381281] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8162000051212919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8162000051212919, 0.6373435027518047] ***
*** starting iteration: 2; err: [Inf, 1.8162000051212919, 0.6373435027518047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8162000051212919, 0.6373435027518047, 0.5551840270279892] ***
*** starting iteration: 3; err: [Inf, 1.8162000051212919, 0.6373435027518047, 0.5551840270279892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8162000051212919, 0.6373435027518047, 0.5551840270279892, 0.5364561346143114] ***
*** finished computation of 7 references, err: [Inf, 1.8162000051212919, 0.6373435027518047, 0.5551840270279892, 0.5364561346143114] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 34]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(2, 7), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.640600010481483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.640600010481483, 0.41433269187516414] ***
*** starting iteration: 2; err: [Inf, 0.640600010481483, 0.41433269187516414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.640600010481483, 0.41433269187516414, 0.39100565940916143] ***
*** starting iteration: 3; err: [Inf, 0.640600010481483, 0.41433269187516414, 0.39100565940916143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.640600010481483, 0.41433269187516414, 0.39100565940916143, 0.37508012982557276] ***
*** finished computation of 7 references, err: [Inf, 0.640600010481483, 0.41433269187516414, 0.39100565940916143, 0.37508012982557276] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 30]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 22, 2]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5959000011713447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5959000011713447, 0.45515980300256986] ***
*** starting iteration: 2; err: [Inf, 0.5959000011713447, 0.45515980300256986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5959000011713447, 0.45515980300256986, 0.42849981655799724] ***
*** starting iteration: 3; err: [Inf, 0.5959000011713447, 0.45515980300256986, 0.42849981655799724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5959000011713447, 0.45515980300256986, 0.42849981655799724, 0.38933793425965374] ***
*** finished computation of 7 references, err: [Inf, 0.5959000011713447, 0.45515980300256986, 0.42849981655799724, 0.38933793425965374] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 3, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7815999968711261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7815999968711261, 0.3449434264040365] ***
*** starting iteration: 2; err: [Inf, 0.7815999968711261, 0.3449434264040365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705] ***
*** starting iteration: 3; err: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864] ***
*** starting iteration: 4; err: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864, 0.33300689508221637] ***
*** starting iteration: 5; err: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864, 0.33300689508221637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864, 0.33300689508221637, 0.3324953984323527] ***
*** finished computation of 7 references, err: [Inf, 0.7815999968711261, 0.3449434264040365, 0.33789526835597705, 0.3348314004616864, 0.33300689508221637, 0.3324953984323527] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6476000068779888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6476000068779888, 0.3751727875312122] ***
*** starting iteration: 2; err: [Inf, 0.6476000068779888, 0.3751727875312122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024] ***
*** starting iteration: 3; err: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024, 0.3574766359024942] ***
*** starting iteration: 4; err: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024, 0.3574766359024942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024, 0.3574766359024942, 0.35716136650195124] ***
*** finished computation of 7 references, err: [Inf, 0.6476000068779888, 0.3751727875312122, 0.3637943482599024, 0.3574766359024942, 0.35716136650195124] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.65010001056917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406] ***
*** starting iteration: 2; err: [Inf, 1.65010001056917, 0.7668175870620406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534] ***
*** starting iteration: 3; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568] ***
*** starting iteration: 4; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407] ***
*** starting iteration: 5; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113] ***
*** starting iteration: 6; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265] ***
*** starting iteration: 7; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103] ***
*** starting iteration: 8; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103, 0.3361009209189736] ***
*** starting iteration: 9; err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103, 0.3361009209189736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103, 0.3361009209189736, 0.3361009209189736] ***
*** finished computation of 7 references, err: [Inf, 1.65010001056917, 0.7668175870620406, 0.5805574785345534, 0.5074487831978568, 0.4674419301805407, 0.39597752120916113, 0.3448774540937265, 0.33731620309092103, 0.3361009209189736, 0.3361009209189736] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 17]]
** centroid: 1, normalized-entropy: 0.9871377743721862, [(2, 13), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2478999776470474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2478999776470474, 1.0459025871858159] ***
*** starting iteration: 2; err: [Inf, 1.2478999776470474, 1.0459025871858159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471] ***
*** starting iteration: 3; err: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471, 1.0315721800163489] ***
*** starting iteration: 4; err: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471, 1.0315721800163489] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471, 1.0315721800163489, 1.0315721800163489] ***
*** finished computation of 3 references, err: [Inf, 1.2478999776470474, 1.0459025871858159, 1.0354937659039471, 1.0315721800163489, 1.0315721800163489] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 36]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 28), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [13, 3, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 13), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.206199932234126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.206199932234126, 0.9461525889469022] ***
*** starting iteration: 2; err: [Inf, 10.206199932234126, 0.9461525889469022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632] ***
*** starting iteration: 3; err: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632, 0.7379170205032441] ***
*** starting iteration: 4; err: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632, 0.7379170205032441] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632, 0.7379170205032441, 0.7372230496378869] ***
*** finished computation of 3 references, err: [Inf, 10.206199932234126, 0.9461525889469022, 0.7449249040448632, 0.7379170205032441, 0.7372230496378869] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 32]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 30), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3855999931586502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525] ***
*** starting iteration: 2; err: [Inf, 1.3855999931586502, 1.0885237086140525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488] ***
*** starting iteration: 3; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325] ***
*** starting iteration: 4; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568] ***
*** starting iteration: 5; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148] ***
*** starting iteration: 6; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189] ***
*** starting iteration: 7; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483] ***
*** starting iteration: 8; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792] ***
*** starting iteration: 9; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792, 0.9196071823973461] ***
*** starting iteration: 10; err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792, 0.9196071823973461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792, 0.9196071823973461, 0.7137824342180419] ***
*** finished computation of 3 references, err: [Inf, 1.3855999931586502, 1.0885237086140525, 1.0702902469083488, 1.0657194908325, 1.0637351784892568, 1.0559098055146148, 1.0511957695106189, 1.047845452137483, 1.024182364950792, 0.9196071823973461, 0.7137824342180419] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 31]]
** centroid: 1, normalized-entropy: 0.9486131982385807, [(2, 18), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5231092671865092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5231092671865092, 0.28476727134433394] ***
*** finished computation of 7 references, err: [Inf, 0.5231092671865092, 0.28476727134433394] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 3]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 21, 6]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 21), (3, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24315685637270246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24315685637270246, 0.1608717226557044] ***
*** finished computation of 7 references, err: [Inf, 0.24315685637270246, 0.1608717226557044] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7257116412913245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7257116412913245, 0.400294100289062] ***
*** finished computation of 7 references, err: [Inf, 1.7257116412913245, 0.400294100289062] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 3, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 30), (2, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 4]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(2, 5), (3, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 24, 5]]
** centroid: 7, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7689999987836563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7689999987836563, 0.3451087261274598] ***
*** starting iteration: 2; err: [Inf, 0.7689999987836563, 0.3451087261274598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7689999987836563, 0.3451087261274598, 0.3342062007296373] ***
*** starting iteration: 3; err: [Inf, 0.7689999987836563, 0.3451087261274598, 0.3342062007296373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7689999987836563, 0.3451087261274598, 0.3342062007296373, 0.3334330953281974] ***
*** finished computation of 7 references, err: [Inf, 0.7689999987836563, 0.3451087261274598, 0.3342062007296373, 0.3334330953281974] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0926999965390691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0926999965390691, 0.7040260742954658] ***
*** starting iteration: 2; err: [Inf, 1.0926999965390691, 0.7040260742954658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0926999965390691, 0.7040260742954658, 0.7016537555247702] ***
*** starting iteration: 3; err: [Inf, 1.0926999965390691, 0.7040260742954658, 0.7016537555247702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0926999965390691, 0.7040260742954658, 0.7016537555247702, 0.7016537555247702] ***
*** finished computation of 7 references, err: [Inf, 1.0926999965390691, 0.7040260742954658, 0.7016537555247702, 0.7016537555247702] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 32]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 30), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7739000071654618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739000071654618, 0.523013505373723] ***
*** starting iteration: 2; err: [Inf, 0.7739000071654618, 0.523013505373723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739000071654618, 0.523013505373723, 0.50585957561113] ***
*** starting iteration: 3; err: [Inf, 0.7739000071654618, 0.523013505373723, 0.50585957561113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739000071654618, 0.523013505373723, 0.50585957561113, 0.5036418846103401] ***
*** finished computation of 7 references, err: [Inf, 0.7739000071654618, 0.523013505373723, 0.50585957561113, 0.5036418846103401] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 30]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 8), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 2]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7855113883659988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7855113883659988, 0.4646804038203225] ***
*** starting iteration: 2; err: [Inf, 0.7855113883659988, 0.4646804038203225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411] ***
*** starting iteration: 3; err: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592] ***
*** starting iteration: 4; err: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592, 0.3957883507487398] ***
*** starting iteration: 5; err: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592, 0.3957883507487398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592, 0.3957883507487398, 0.3953017907759582] ***
*** finished computation of 3 references, err: [Inf, 0.7855113883659988, 0.4646804038203225, 0.423826621388411, 0.3993756239003592, 0.3957883507487398, 0.3953017907759582] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6463506420719637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356] ***
*** starting iteration: 2; err: [Inf, 0.6463506420719637, 0.34064548447782356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231] ***
*** starting iteration: 3; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255] ***
*** starting iteration: 4; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945] ***
*** starting iteration: 5; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395] ***
*** starting iteration: 6; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666] ***
*** starting iteration: 7; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386] ***
*** starting iteration: 8; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386, 0.29448858497102054] ***
*** starting iteration: 9; err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386, 0.29448858497102054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386, 0.29448858497102054, 0.29412841080707997] ***
*** finished computation of 3 references, err: [Inf, 0.6463506420719637, 0.34064548447782356, 0.3287382770220231, 0.3193774665578255, 0.3144273564609945, 0.30746112446862395, 0.2998466954699666, 0.29619972879629386, 0.29448858497102054, 0.29412841080707997] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1624235092434243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451] ***
*** starting iteration: 2; err: [Inf, 1.1624235092434243, 0.4418410541590451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314] ***
*** starting iteration: 3; err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136] ***
*** starting iteration: 4; err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565] ***
*** starting iteration: 5; err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037] ***
*** starting iteration: 6; err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037, 0.397342508113053] ***
*** starting iteration: 7; err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037, 0.397342508113053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037, 0.397342508113053, 0.397342508113053] ***
*** finished computation of 3 references, err: [Inf, 1.1624235092434243, 0.4418410541590451, 0.41342884914878314, 0.40576758036829136, 0.4018518971024565, 0.39848524008728037, 0.397342508113053, 0.397342508113053] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 7]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6051999960337946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6051999960337946, 0.5633124632032801] ***
*** starting iteration: 2; err: [Inf, 1.6051999960337946, 0.5633124632032801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929] ***
*** starting iteration: 3; err: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929, 0.556734617147119] ***
*** starting iteration: 4; err: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929, 0.556734617147119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929, 0.556734617147119, 0.556734617147119] ***
*** finished computation of 3 references, err: [Inf, 1.6051999960337946, 0.5633124632032801, 0.5594655609088929, 0.556734617147119, 0.556734617147119] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1220999995349665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1220999995349665, 0.4608164346485607] ***
*** starting iteration: 2; err: [Inf, 1.1220999995349665, 0.4608164346485607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455] ***
*** starting iteration: 3; err: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979] ***
*** starting iteration: 4; err: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979, 0.4228210339571109] ***
*** starting iteration: 5; err: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979, 0.4228210339571109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979, 0.4228210339571109, 0.4228210339571109] ***
*** finished computation of 3 references, err: [Inf, 1.1220999995349665, 0.4608164346485607, 0.44737794773521455, 0.4327450537003979, 0.4228210339571109, 0.4228210339571109] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6627000018792688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6627000018792688, 0.584365132424902] ***
*** starting iteration: 2; err: [Inf, 1.6627000018792688, 0.584365132424902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281] ***
*** starting iteration: 3; err: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281, 0.5801393360375262] ***
*** starting iteration: 4; err: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281, 0.5801393360375262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281, 0.5801393360375262, 0.5801393360375262] ***
*** finished computation of 3 references, err: [Inf, 1.6627000018792688, 0.584365132424902, 0.5811812160381281, 0.5801393360375262, 0.5801393360375262] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4171590635261245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4171590635261245, 0.17072522385644728] ***
*** starting iteration: 2; err: [Inf, 0.4171590635261245, 0.17072522385644728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152] ***
*** starting iteration: 3; err: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152, 0.16422304913690247] ***
*** starting iteration: 4; err: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152, 0.16422304913690247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152, 0.16422304913690247, 0.16373363524321735] ***
*** finished computation of 7 references, err: [Inf, 0.4171590635261245, 0.17072522385644728, 0.165955565872152, 0.16422304913690247, 0.16373363524321735] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4016435990107871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698] ***
*** starting iteration: 2; err: [Inf, 0.4016435990107871, 0.15118978438957698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628] ***
*** starting iteration: 3; err: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765] ***
*** starting iteration: 4; err: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468] ***
*** starting iteration: 5; err: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468, 0.13463199605186454] ***
*** starting iteration: 6; err: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468, 0.13463199605186454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468, 0.13463199605186454, 0.1339367896638779] ***
*** finished computation of 7 references, err: [Inf, 0.4016435990107871, 0.15118978438957698, 0.1425289715951628, 0.13892315272886765, 0.1359573249727468, 0.13463199605186454, 0.1339367896638779] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 7, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5033893654374226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5033893654374226, 0.20695142255302612] ***
*** starting iteration: 2; err: [Inf, 0.5033893654374226, 0.20695142255302612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5033893654374226, 0.20695142255302612, 0.19892650121327043] ***
*** starting iteration: 3; err: [Inf, 0.5033893654374226, 0.20695142255302612, 0.19892650121327043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5033893654374226, 0.20695142255302612, 0.19892650121327043, 0.19828034682818213] ***
*** finished computation of 7 references, err: [Inf, 0.5033893654374226, 0.20695142255302612, 0.19892650121327043, 0.19828034682818213] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 4, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6245000055381592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245000055381592, 0.24453709057934606] ***
*** starting iteration: 2; err: [Inf, 0.6245000055381592, 0.24453709057934606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245000055381592, 0.24453709057934606, 0.23676091311040892] ***
*** starting iteration: 3; err: [Inf, 0.6245000055381592, 0.24453709057934606, 0.23676091311040892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245000055381592, 0.24453709057934606, 0.23676091311040892, 0.23388438409463558] ***
*** finished computation of 7 references, err: [Inf, 0.6245000055381592, 0.24453709057934606, 0.23676091311040892, 0.23388438409463558] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5176000084598368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5176000084598368, 0.23330937274906804] ***
*** starting iteration: 2; err: [Inf, 0.5176000084598368, 0.23330937274906804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5176000084598368, 0.23330937274906804, 0.2294610688566987] ***
*** starting iteration: 3; err: [Inf, 0.5176000084598368, 0.23330937274906804, 0.2294610688566987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5176000084598368, 0.23330937274906804, 0.2294610688566987, 0.2245299534535649] ***
*** finished computation of 7 references, err: [Inf, 0.5176000084598368, 0.23330937274906804, 0.2294610688566987, 0.2245299534535649] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 13]]
** centroid: 1, normalized-entropy: 1.0, [(2, 13), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7467000024771754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7467000024771754, 0.25593937866432165] ***
*** starting iteration: 2; err: [Inf, 0.7467000024771754, 0.25593937866432165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7467000024771754, 0.25593937866432165, 0.24355876335859328] ***
*** starting iteration: 3; err: [Inf, 0.7467000024771754, 0.25593937866432165, 0.24355876335859328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7467000024771754, 0.25593937866432165, 0.24355876335859328, 0.24106806060630637] ***
*** finished computation of 7 references, err: [Inf, 0.7467000024771754, 0.25593937866432165, 0.24355876335859328, 0.24106806060630637] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 4, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5467999996897173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5467999996897173, 0.2827949769512044] ***
*** starting iteration: 2; err: [Inf, 0.5467999996897173, 0.2827949769512044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5467999996897173, 0.2827949769512044, 0.2757216203559251] ***
*** starting iteration: 3; err: [Inf, 0.5467999996897173, 0.2827949769512044, 0.2757216203559251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5467999996897173, 0.2827949769512044, 0.2757216203559251, 0.272031536676566] ***
*** finished computation of 7 references, err: [Inf, 0.5467999996897173, 0.2827949769512044, 0.2757216203559251, 0.272031536676566] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5241000029173718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000029173718, 0.25359047478488256] ***
*** starting iteration: 2; err: [Inf, 0.5241000029173718, 0.25359047478488256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000029173718, 0.25359047478488256, 0.22780729658020038] ***
*** starting iteration: 3; err: [Inf, 0.5241000029173718, 0.25359047478488256, 0.22780729658020038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5241000029173718, 0.25359047478488256, 0.22780729658020038, 0.21918991643694524] ***
*** finished computation of 7 references, err: [Inf, 0.5241000029173718, 0.25359047478488256, 0.22780729658020038, 0.21918991643694524] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 1, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5139000038065038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5139000038065038, 0.29178408365656877] ***
*** starting iteration: 2; err: [Inf, 0.5139000038065038, 0.29178408365656877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5139000038065038, 0.29178408365656877, 0.2750528026596559] ***
*** starting iteration: 3; err: [Inf, 0.5139000038065038, 0.29178408365656877, 0.2750528026596559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5139000038065038, 0.29178408365656877, 0.2750528026596559, 0.2651100770997885] ***
*** finished computation of 7 references, err: [Inf, 0.5139000038065038, 0.29178408365656877, 0.2750528026596559, 0.2651100770997885] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 7]]
** centroid: 1, normalized-entropy: 0.8554508105601307, [(2, 18), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 15
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 16
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.3444999943662586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3444999943662586, 0.7589282282821241] ***
*** finished computation of 3 references, err: [Inf, 1.3444999943662586, 0.7589282282821241] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 35]]
** centroid: 3, normalized-entropy: 0.9117517586347538, [(2, 17), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.405999994248205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.405999994248205, 0.5290684664405858] ***
*** finished computation of 3 references, err: [Inf, 1.405999994248205, 0.5290684664405858] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 32]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 13), (3, 32)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1721000012503646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1721000012503646, 0.5774350022808047] ***
*** finished computation of 3 references, err: [Inf, 1.1721000012503646, 0.5774350022808047] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 6]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 26]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5981189216337723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5981189216337723, 0.2662056127608543] ***
*** starting iteration: 2; err: [Inf, 0.5981189216337723, 0.2662056127608543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553] ***
*** starting iteration: 3; err: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553, 0.20858090277134164] ***
*** starting iteration: 4; err: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553, 0.20858090277134164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553, 0.20858090277134164, 0.20809343587044263] ***
*** finished computation of 7 references, err: [Inf, 0.5981189216337723, 0.2662056127608543, 0.21579052697101553, 0.20858090277134164, 0.20809343587044263] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 13]]
** centroid: 1, normalized-entropy: 0.9990102708804813, [(2, 14), (3, 13)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5234833504825502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231] ***
*** starting iteration: 2; err: [Inf, 1.5234833504825502, 0.4118340528655231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057] ***
*** starting iteration: 3; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399] ***
*** starting iteration: 4; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157] ***
*** starting iteration: 5; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897] ***
*** starting iteration: 6; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491] ***
*** starting iteration: 7; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855] ***
*** starting iteration: 8; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122] ***
*** starting iteration: 9; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122, 0.2397489597729484] ***
*** starting iteration: 10; err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122, 0.2397489597729484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122, 0.2397489597729484, 0.23803781594767515] ***
*** finished computation of 7 references, err: [Inf, 1.5234833504825502, 0.4118340528655231, 0.32801363361390057, 0.2856443561805399, 0.27290302656455157, 0.2631209804034897, 0.2579765874376491, 0.25101035544527855, 0.24339592644662122, 0.2397489597729484, 0.23803781594767515] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9816214966570742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9816214966570742, 0.40389930748662534] ***
*** starting iteration: 2; err: [Inf, 0.9816214966570742, 0.40389930748662534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9816214966570742, 0.40389930748662534, 0.33604470915921153] ***
*** starting iteration: 3; err: [Inf, 0.9816214966570742, 0.40389930748662534, 0.33604470915921153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9816214966570742, 0.40389930748662534, 0.33604470915921153, 0.33619659214948766] ***
*** finished computation of 7 references, err: [Inf, 0.9816214966570742, 0.40389930748662534, 0.33604470915921153, 0.33619659214948766] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 31]]
** centroid: 2, normalized-entropy: 0.6394571324851642, [(2, 6), (3, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 32, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.7840361014329048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7840361014329048, 0.41831919223412845] ***
*** finished computation of 3 references, err: [Inf, 0.7840361014329048, 0.41831919223412845] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.335787426984425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.335787426984425, 1.8779798860456907] ***
*** finished computation of 3 references, err: [Inf, 7.335787426984425, 1.8779798860456907] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [37, 24, 0]]
** centroid: 2, normalized-entropy: 0.9669852958320848, [(1, 37), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 26]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7645241769270471] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7645241769270471, 0.39146087417187103] ***
*** finished computation of 3 references, err: [Inf, 0.7645241769270471, 0.39146087417187103] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 30, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 31]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 8), (3, 31)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.374999999999999, 2.94375, 4.59375, 1.4249999999999998], [6.02, 2.8, 5.01, 1.9100000000000001], [5.42857142857143, 2.557142857142857, 3.8571428571428577, 1.1928571428571428], [6.968, 3.0999999999999996, 5.872000000000001, 2.124], [5.279999999999999, 3.84, 1.64, 0.24], [5.175, 3.4416666666666664, 1.4916666666666665, 0.30833333333333335], [4.6923076923076925, 3.069230769230769, 1.4307692307692308, 0.20000000000000004], [5.666666666666667, 4.2, 1.3666666666666665, 0.26666666666666666]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 3, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.770833333333333, 3.0541666666666667, 5.6875, 2.029166666666667], [5.996666666666666, 2.796666666666667, 4.323333333333334, 1.3466666666666667], [5.955555555555556, 2.7555555555555555, 4.966666666666666, 1.788888888888889], [4.8, 3.55, 1.15, 0.25], [4.727777777777778, 3.1388888888888893, 1.4444444444444444, 0.1888888888888889], [5.6, 3.95, 1.25, 0.30000000000000004], [5.171428571428572, 3.5785714285714283, 1.5214285714285711, 0.2857142857142857], [5.7, 4.4, 1.5, 0.4]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.319999999999999, 2.9, 4.666666666666668, 1.4866666666666666], [6.247058823529412, 2.8470588235294123, 5.182352941176471, 1.947058823529412], [5.512499999999999, 2.6166666666666663, 3.9333333333333336, 1.2291666666666667], [5.550000000000001, 3.8499999999999996, 1.7, 0.35], [5.383333333333333, 3.8499999999999996, 1.4166666666666667, 0.21666666666666667], [7.085714285714287, 3.107142857142857, 6.064285714285714, 2.1857142857142855], [5.040000000000001, 3.5100000000000002, 1.5799999999999998, 0.3], [4.691666666666667, 3.0749999999999997, 1.3583333333333336, 0.18333333333333335]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 1, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[77, 14, 1, 19, 10, 11, 27, 31, 14, 26, 31, 24, 24, 30, 1, 33, 33, 7, 1, 20, 3, 28, 1, 1, 10, 25, 32, 30, 33, 28, 23, 24, 18, 13, 34, 1, 16, 46, 26, 8, 23, 51, 31, 1, 35, 18, 40, 22, 44, 38, 3, 67, 30, 39, 24, 16, 29, 27, 24, 25, 35, 5, 44, 15, 41, 31, 20, 27, 35, 33, 22, 34, 30, 45, 34, 30, 29, 12, 25, 39, 17, 44, 41, 2, 28, 36, 30, 2, 25, 27, 36, 33, 38, 35, 56, 55, 46, 52, 35, 41, 53, 19, 26, 27, 11, 32, 43, 43, 26, 34, 40, 23, 31, 35, 35, 32, 35, 45, 27, 40, 36, 38, 36, 44, 19, 28, 34, 36, 48, 50, 26, 26, 70, 44, 29, 35, 41, 42, 41, 35, 40, 28, 19, 30, 83, 38, 36, 41, 29, 34, 28, 35, 51, 23, 40, 46, 42, 48, 39, 56, 35, 21, 38, 31, 57, 37, 41, 42, 30, 21, 27, 23, 41, 23, 27, 40, 35, 42, 43, 41, 34, 23, 36, 33, 52, 28, 23, 45, 48, 48, 19, 34, 59, 36, 47, 26, 41, 31, 35, 35, 44, 50, 54, 35, 51, 36, 67, 36, 28, 47, 25, 48, 34, 38, 40, 71, 57, 35, 42, 27, 23, 33, 55, 57, 21, 11, 37, 43, 57, 67, 39, 35, 33, 41, 37, 20, 38, 33, 26, 46, 26, 46, 22, 38, 6, 29, 36, 36, 28, 30, 38, 44, 33, 22, 65, 43, 38, 32, 30, 36, 22, 35, 40, 10, 22, 32, 65, 38, 25, 35, 36, 28, 38, 35, 22, 59, 42, 17, 36, 26, 44, 18, 43, 36, 6, 55, 25, 34, 58, 32, 53, 1, 26, 31, 42, 19, 47, 31, 71, 55]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.643, speedup = 0.26193117341799593, eval_ratio = 0.041879)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4071180555555556,"recall":0.4071180555555556,"f1":null,"seconds":7.003918290138245e-5,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":339.953125,"distances_sum":1721.5759405270067}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5555555555555552,"recall":0.5555555555555552,"f1":0.5555555555555552,"seconds":0.0010824520140886307,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":377.21875,"distances_sum":1613.4913152468964}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6605902777777775,"recall":0.6605902777777775,"f1":0.6605902777777775,"seconds":0.00012643076479434967,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":415.265625,"distances_sum":1567.014923751387}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.722222222222222,"recall":0.722222222222222,"f1":0.722222222222222,"seconds":0.00015534460544586182,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":453.140625,"distances_sum":1546.3226997718477}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7777777777777772,"recall":0.7777777777777772,"f1":0.7777777777777772,"seconds":0.00018750689923763275,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":492.9765625,"distances_sum":1533.0708413623086}
KCenters.DeloneInvIndex> reached performance {"precision":0.8385416666666656,"recall":0.8385416666666656,"f1":0.8385416666666656,"seconds":0.00022241659462451935,"exhaustive_search_seconds":0.00038523413240909576,"evaluations":533.546875,"distances_sum":1520.8076868882133}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8200000000000003, speedup = 1.0948208785000906, eval_ratio = 0.053818)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
