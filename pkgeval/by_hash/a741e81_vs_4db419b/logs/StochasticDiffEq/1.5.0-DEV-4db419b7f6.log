Julia Version 1.5.0-DEV.146
Commit 4db419b7f6 (2020-01-24 08:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed OrderedCollections ────────── v1.1.0
 Installed ArrayInterface ────────────── v2.3.1
 Installed Parameters ────────────────── v0.12.0
 Installed NLSolversBase ─────────────── v7.6.0
 Installed Roots ─────────────────────── v0.8.4
 Installed NLsolve ───────────────────── v4.2.0
 Installed DataStructures ────────────── v0.17.9
 Installed StochasticDiffEq ──────────── v6.17.1
 Installed SparseDiffTools ───────────── v1.2.0
 Installed ResettableStacks ──────────── v1.0.0
 Installed SpecialFunctions ──────────── v0.9.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed LineSearches ──────────────── v7.0.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed Compat ────────────────────── v2.2.0
 Installed StaticArrays ──────────────── v0.12.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed DocStringExtensions ───────── v0.8.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DiffEqBase ────────────────── v6.13.0
 Installed FillArrays ────────────────── v0.8.4
 Installed RecursiveFactorization ────── v0.1.0
 Installed RandomNumbers ─────────────── v1.4.0
 Installed Reexport ──────────────────── v0.2.0
 Installed OpenSpecFun_jll ───────────── v0.5.3+1
 Installed DiffRules ─────────────────── v1.0.0
 Installed ChainRulesCore ────────────── v0.5.5
 Installed DiffResults ───────────────── v1.0.2
 Installed TableTraits ───────────────── v1.0.0
 Installed FiniteDiff ────────────────── v2.0.0
 Installed Distances ─────────────────── v0.8.2
 Installed DiffEqNoiseProcess ────────── v3.8.0
 Installed VertexSafeGraphs ──────────── v0.1.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed MacroTools ────────────────── v0.5.3
 Installed Requires ──────────────────── v1.0.0
 Installed LightGraphs ───────────────── v1.3.0
 Installed ZygoteRules ───────────────── v0.2.0
 Installed RecursiveArrayTools ───────── v2.0.2
 Installed MuladdMacro ───────────────── v0.2.2
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed Inflate ───────────────────── v0.1.1
 Installed DiffEqDiffTools ───────────── v1.7.0
 Installed ForwardDiff ───────────────── v0.10.9
 Installed Adapt ─────────────────────── v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [789caeaf] + StochasticDiffEq v6.17.1
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.3.1
  [d360d2e6] + ChainRulesCore v0.5.5
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.9
  [2b5f629d] + DiffEqBase v6.13.0
  [01453d9d] + DiffEqDiffTools v1.7.0
  [77a26b50] + DiffEqNoiseProcess v3.8.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [1a297f60] + FillArrays v0.8.4
  [6a86dc24] + FiniteDiff v2.0.0
  [f6369f11] + ForwardDiff v0.10.9
  [069b7b12] + FunctionWrappers v1.0.0
  [d25df0c9] + Inflate v0.1.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.3
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.0
  [2774e3e8] + NLsolve v4.2.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [e6cf234a] + RandomNumbers v1.4.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v2.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.0
  [ae5879a3] + ResettableStacks v1.0.0
  [f2b01f46] + Roots v0.8.4
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [789caeaf] + StochasticDiffEq v6.17.1
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [19fa3120] + VertexSafeGraphs v0.1.1
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing StochasticDiffEq
 Installed SafeTestsets ──────────── v0.0.1
 Installed ElasticArrays ─────────── v1.0.0
 Installed DiffEqCallbacks ───────── v2.11.0
 Installed DiffEqProblemLibrary ──── v4.6.4
 Installed MixedSubdivisions ─────── v1.0.0
 Installed DiffEqOperators ───────── v4.7.0
 Installed GenericSchur ──────────── v0.3.0
 Installed DataAPI ───────────────── v1.1.0
 Installed LazyArrays ────────────── v0.14.11
 Installed DiffEqDevTools ────────── v2.17.0
 Installed GeneralizedGenerated ──── v0.2.1
 Installed ExponentialUtilities ──── v1.6.0
 Installed NameResolution ────────── v0.1.3
 Installed DoubleFloats ──────────── v0.9.11
 Installed FixedPolynomials ──────── v0.4.0
 Installed CanonicalTraits ───────── v0.1.0
 Installed MatrixFactorizations ──── v0.2.1
 Installed PrettyPrint ───────────── v0.1.0
 Installed JuliaVariables ────────── v0.2.0
 Installed BlockBandedMatrices ───── v0.7.1
 Installed ProgressMeter ─────────── v1.2.0
 Installed GenericSVD ────────────── v0.2.2
 Installed MutableArithmetics ────── v0.2.1
 Installed StaticPolynomials ─────── v1.3.3
 Installed BandedMatrices ────────── v0.14.2
 Installed HomotopyContinuation ──── v1.3.1
 Installed Tables ────────────────── v0.2.11
 Installed MultivariatePolynomials ─ v0.3.6
 Installed Crayons ───────────────── v4.0.1
 Installed DiffEqBiological ──────── v4.1.0
 Installed ArrayLayouts ──────────── v0.1.5
 Installed DynamicPolynomials ────── v0.3.7
 Installed ProjectiveVectors ─────── v1.1.2
 Installed ModelingToolkit ───────── v1.1.3
 Installed Quadmath ──────────────── v0.5.2
 Installed BinaryProvider ────────── v0.5.8
 Installed Polynomials ───────────── v0.6.0
 Installed DataValueInterfaces ───── v1.0.0
 Installed SymEngine ─────────────── v0.7.1
 Installed BlockArrays ───────────── v0.11.1
 Installed NNlib ─────────────────── v0.6.4
 Installed PrettyTables ──────────── v0.6.0
 Installed Formatting ────────────── v0.4.1
 Installed Latexify ──────────────── v0.12.0
 Installed DiffEqJump ────────────── v6.5.0
 Installed LaTeXStrings ──────────── v1.0.3
 Installed PoissonRandom ─────────── v0.4.0
 Installed MLStyle ───────────────── v0.3.1
 Installed OrdinaryDiffEq ────────── v5.28.0
  Updating `/tmp/jl_OsLRB9/Project.toml`
  [459566f4] + DiffEqCallbacks v2.11.0
  [f3b72e0c] + DiffEqDevTools v2.17.0
  [9fdde737] + DiffEqOperators v4.7.0
  [a077e3f3] + DiffEqProblemLibrary v4.6.4
  [1bc83da4] + SafeTestsets v0.0.1
  Updating `/tmp/jl_OsLRB9/Manifest.toml`
  [4c555306] + ArrayLayouts v0.1.5
  [aae01518] + BandedMatrices v0.14.2
  [b99e7846] + BinaryProvider v0.5.8
  [8e7c35d0] + BlockArrays v0.11.1
  [ffab5731] + BlockBandedMatrices v0.7.1
  [a603d957] + CanonicalTraits v0.1.0
  [a8cc5b0e] + Crayons v4.0.1
  [9a962f9c] + DataAPI v1.1.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [eb300fae] + DiffEqBiological v4.1.0
  [459566f4] + DiffEqCallbacks v2.11.0
  [f3b72e0c] + DiffEqDevTools v2.17.0
  [c894b116] + DiffEqJump v6.5.0
  [9fdde737] + DiffEqOperators v4.7.0
  [a077e3f3] + DiffEqProblemLibrary v4.6.4
  [497a8b3b] + DoubleFloats v0.9.11
  [7c1d4256] + DynamicPolynomials v0.3.7
  [fdbdab4c] + ElasticArrays v1.0.0
  [d4d017d3] + ExponentialUtilities v1.6.0
  [3dd14ad9] + FixedPolynomials v0.4.0
  [59287772] + Formatting v0.4.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.1
  [01680d73] + GenericSVD v0.2.2
  [c145ed77] + GenericSchur v0.3.0
  [f213a82b] + HomotopyContinuation v1.3.1
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.0.3
  [23fbe1c1] + Latexify v0.12.0
  [5078a376] + LazyArrays v0.14.11
  [d8e11817] + MLStyle v0.3.1
  [a3b82374] + MatrixFactorizations v0.2.1
  [291d046c] + MixedSubdivisions v1.0.0
  [961ee093] + ModelingToolkit v1.1.3
  [102ac46a] + MultivariatePolynomials v0.3.6
  [d8a4904e] + MutableArithmetics v0.2.1
  [872c559c] + NNlib v0.6.4
  [71a1bf82] + NameResolution v0.1.3
  [1dea7af3] + OrdinaryDiffEq v5.28.0
  [e409e4f3] + PoissonRandom v0.4.0
  [f27b6e38] + Polynomials v0.6.0
  [8162dcfd] + PrettyPrint v0.1.0
  [08abe8d2] + PrettyTables v0.6.0
  [92933f4c] + ProgressMeter v1.2.0
  [01f381cc] + ProjectiveVectors v1.1.2
  [be4d8f0f] + Quadmath v0.5.2
  [1bc83da4] + SafeTestsets v0.0.1
  [62e018b1] + StaticPolynomials v1.3.3
  [123dc426] + SymEngine v0.7.1
  [bd369af6] + Tables v0.2.11
  [9fa8497b] + Future 
  Building NNlib ────→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
  Updating `/tmp/jl_240CcB/Project.toml`
 [no changes]
  Updating `/tmp/jl_240CcB/Manifest.toml`
 [no changes]
  Building SymEngine → `~/.julia/packages/SymEngine/RK5Ks/deps/build.log`
  Updating `/tmp/jl_mmNroJ/Project.toml`
 [no changes]
  Updating `/tmp/jl_mmNroJ/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_OsLRB9/Project.toml`
  [4fba245c] ArrayInterface v2.3.1
  [864edb3b] DataStructures v0.17.9
  [2b5f629d] DiffEqBase v6.13.0
  [459566f4] DiffEqCallbacks v2.11.0
  [f3b72e0c] DiffEqDevTools v2.17.0
  [01453d9d] DiffEqDiffTools v1.7.0
  [77a26b50] DiffEqNoiseProcess v3.8.0
  [9fdde737] DiffEqOperators v4.7.0
  [a077e3f3] DiffEqProblemLibrary v4.6.4
  [1a297f60] FillArrays v0.8.4
  [f6369f11] ForwardDiff v0.10.9
  [46d2c3a1] MuladdMacro v0.2.2
  [2774e3e8] NLsolve v4.2.0
  [d96e819e] Parameters v0.12.0
  [e6cf234a] RandomNumbers v1.4.0
  [731186ca] RecursiveArrayTools v2.0.2
  [189a3867] Reexport v0.2.0
  [1bc83da4] SafeTestsets v0.0.1
  [47a9eef4] SparseDiffTools v1.2.0
  [90137ffa] StaticArrays v0.12.1
  [789caeaf] StochasticDiffEq v6.17.1
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Method definition vec(Number) in module FiniteDiff at /home/pkgeval/.julia/packages/FiniteDiff/zeWoZ/src/jacobians.jl:114 overwritten in module DiffEqDiffTools at /home/pkgeval/.julia/packages/DiffEqDiffTools/3mm8U/src/jacobians.jl:114.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition vec(Number) in module FiniteDiff at /home/pkgeval/.julia/packages/FiniteDiff/zeWoZ/src/jacobians.jl:114 overwritten in module DiffEqDiffTools at /home/pkgeval/.julia/packages/DiffEqDiffTools/3mm8U/src/jacobians.jl:114.
  ** incremental compilation may be fatally broken for this module **

Test Summary:    | Pass  Total
First Rand Tests |    4      4
295.866089 seconds (41.05 M allocations: 2.072 GiB, 0.58% gc time)
Test Summary:     |
Linear RODE Tests | No tests
 12.269292 seconds (11.67 M allocations: 586.443 MiB, 2.32% gc time)
In-place methods: Error During Test at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/complex_tests.jl:27
  Got exception outside of a @test
  MethodError: no method matching has_Wfact(::DiffEqDiffTools.UJacobianWrapper{DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Float64,DiffEqBase.NullParameters})
  Closest candidates are:
    has_Wfact(!Matched::Union{DiffEqBase.SplitFunction, DiffEqBase.SplitSDEFunction}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/diffeqfunction.jl:906
    has_Wfact(!Matched::DiffEqBase.DynamicalODEFunction) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/diffeqfunction.jl:915
    has_Wfact(!Matched::DiffEqBase.AbstractDiffEqFunction) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/diffeqfunction.jl:895
    ...
  Stacktrace:
   [1] (::DiffEqBase.DefaultLinSolve)(::Type{Val{:init}}, ::Function, ::Array{Complex{Float64},2}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/linear_nonlinear.jl:110
   [2] iipnlsolve(::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::DiffEqBase.NullParameters, ::Float64, ::Float64, ::Function, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::Type{T} where T, ::Type{T} where T, ::Float64, ::Float64) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/nlsolve/utils.jl:287
   [3] alg_cache(::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::DiffEqBase.NullParameters, ::Array{Complex{Float64},2}, ::Array{Complex{Float64},2}, ::Type{T} where T, ::Type{T} where T, ::Type{T} where T, ::Array{Complex{Float64},2}, ::DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing}, ::Float64, ::Float64, ::Type{Val{true}}) at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/src/caches/kencarp_caches.jl:41
   [4] __init(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::Array{Any,1}, ::Array{Any,1}, ::Type{T} where T, ::Type{Val{true}}; saveat::Array{Float64,1}, tstops::Array{Float64,1}, d_discontinuities::Array{Float64,1}, save_idxs::Nothing, save_everystep::Bool, save_noise::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Float64, adaptive::Bool, gamma::Rational{Int64}, abstol::Nothing, reltol::Nothing, qmax::Rational{Int64}, qmin::Rational{Int64}, qoldinit::Rational{Int64}, fullnormalize::Bool, failfactor::Int64, beta2::Rational{Int64}, beta1::Rational{Int64}, delta::Rational{Int64}, maxiters::Int64, dtmax::Float64, dtmin::Float64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, force_dtmin::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, initialize_integrator::Bool, seed::UInt64, alias_u0::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/src/solve.jl:290
   [5] __init(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::Array{Any,1}, ::Array{Any,1}, ::Type{T} where T, ::Type{Val{true}}) at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/src/solve.jl:59 (repeats 2 times)
   [6] __solve(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::Array{Any,1}, ::Array{Any,1}, ::Nothing, ::Type{Val{true}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/src/solve.jl:6
   [7] __solve(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}, ::Array{Any,1}, ::Array{Any,1}, ::Nothing, ::Type{Val{true}}) at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/src/solve.jl:6 (repeats 5 times)
   [8] solve_call(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/solve.jl:38
   [9] solve_call(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/solve.jl:37
   [10] solve(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/solve.jl:57
   [11] solve(::DiffEqBase.SDEProblem{Array{Complex{Float64},2},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,Nothing,DiffEqBase.SDEFunction{true,Main.##255.var"#f#2",Main.##255.var"#f#2",LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Main.##255.var"#f#2",Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},Nothing}, ::StochasticDiffEq.SKenCarp{0,false,DiffEqBase.DefaultLinSolve,DataType,DiffEqBase.NLNewton{Rational{Int64},Rational{Int64},Rational{Int64}},Float64,:Predictive}) at /home/pkgeval/.julia/packages/DiffEqBase/VynZe/src/solve.jl:45
   [12] top-level scope at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/complex_tests.jl:36
   [13] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/complex_tests.jl:28
   [15] include(::Module, ::String) at ./Base.jl:377
   [16] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [17] top-level scope at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/runtests.jl:13
   [18] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1113
   [19] top-level scope at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/runtests.jl:13
   [20] eval(::Module, ::Any) at ./boot.jl:331
   [21] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [22] top-level scope at util.jl:175
   [23] top-level scope at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/runtests.jl:13
   [24] top-level scope at util.jl:175
   [25] include(::String) at ./client.jl:439
   [26] top-level scope at none:6
   [27] eval(::Module, ::Any) at ./boot.jl:331
   [28] exec_options(::Base.JLOptions) at ./client.jl:264
   [29] _start() at ./client.jl:484
  
Test Summary:          | Pass  Error  Total
Complex Number Tests   |   20      1     21
  Out-of-place methods |   12            12
  In-place methods     |    8      1      9
ERROR: LoadError: Some tests did not pass: 20 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/runtests.jl:9
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/StochasticDiffEq/311fC/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package StochasticDiffEq errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:13
