Julia Version 1.5.0-DEV.146
Commit 4db419b7f6 (2020-01-24 08:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

 Resolving package versions...
 Installed TransformUtils ─ v0.2.3
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
   Testing TransformUtils
  Updating `/tmp/jl_TTSRjh/Project.toml`
  [8dfed614] + Test 
  Updating `/tmp/jl_TTSRjh/Manifest.toml`
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_TTSRjh/Project.toml`
  [9b8138ad] TransformUtils v0.2.3
  [37e2e46d] LinearAlgebra 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.028724167134188995 0.04713787934571624; 0.028724167134188995 0.0 -0.07447347024710126; -0.04713787934571624 0.07447347024710126 0.0])
dAA = so3([0.0 -0.12817842660862397 -0.09758106863836613; 0.12817842660862397 0.0 -0.15107080365090508; 0.09758106863836613 0.15107080365090508 0.0])
dAA = so3([0.0 -0.06266602810719368 0.07463359967292126; 0.06266602810719368 0.0 0.009265333268688667; -0.07463359967292126 -0.009265333268688667 0.0])
dAA = Quaternion(0.993704133384444, [0.06491996769723836, 0.03218168519735802, -0.085450759076318])
dAA = SO3([0.9699571382212847 0.240190320847076 -0.03862330624059949; -0.24203472996183792 0.9687857488185575 -0.0536037533981323; 0.024542605930842697 0.06134152474014871 0.9978150519192813])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9209400680373871 -0.34932092380583185 -0.17275498046288795; 0.25950248733145115 0.8804217353701805 -0.3968828882133239; 0.29073673684638246 0.32067500694503753 0.9014653014779423]), [0.7447347024710125, 0.4713787934571624, 0.28724167134188994])
xj = SE3(SO3([0.8979662110896083 0.4247051231137144 0.11524861015360564; -0.3678652057631848 0.8681750545112393 -0.33308747366602703; -0.24151992491341723 0.2567053430012148 0.935826101764877]), [-0.09265333268688666, 0.7463359967292125, 0.6266602810719368])
Dx = SE3(SO3([0.661292412785186 0.6910552248161604 0.2917790620435837; -0.7150043128435513 0.6983207897964769 -0.03342016087850913; -0.22685056184164104 -0.1865227889355901 0.9559017061391936]), [-0.6011506568953636, 0.6434385251150755, 0.34151124403141053])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
