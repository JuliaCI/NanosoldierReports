Julia Version 1.5.0-DEV.33
Commit 8a19ef8ede (2020-01-08 16:19 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed PooledArrays ──────────────── v0.5.3
 Installed Parsers ───────────────────── v0.3.10
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.7
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed OrderedCollections ────────── v1.1.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed Missings ──────────────────── v0.4.3
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_5qHNiZ/Project.toml`
 [no changes]
  Updating `/tmp/jl_5qHNiZ/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_5qHNiZ/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 137.36999999999995
[ Info: 71.16
[ Info: 46.58999999999999
[ Info: 28.259999999999998
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.04000118347305
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 23.565201679727497
inertia(crand.distances) = 19.397019598670447
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2255859375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2255859375,"f1":null,"seconds":0.0010551419109106064,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":6.5859375,"distances_sum":522.4124232514781}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2255859375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2255859375,"f1":null,"seconds":0.0010551419109106064,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":6.5859375,"distances_sum":522.4124232514781}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8221538877788886,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.953125,"distances_sum":1432.2727942185206}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7676209207459215,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.2578125,"distances_sum":1315.3116159044303}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8221538877788886,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.953125,"distances_sum":1432.2727942185206}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9204212454212461,"seconds":1.0123476386070251e-5,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5625,"distances_sum":1811.6622252708103}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9369734432234438,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6484375,"distances_sum":1927.292378009196}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8509282384282392,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.09375,"distances_sum":1490.3449365465387}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9369734432234438,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6484375,"distances_sum":1927.292378009196}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9427744130869136,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6484375,"distances_sum":1962.2579573605983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697744963369967,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2067.871047696287}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723042582417587,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8984375,"distances_sum":2085.4768676027593}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723042582417587,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8984375,"distances_sum":2085.4768676027593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723042582417587,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8984375,"distances_sum":2085.4768676027593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5107421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5107421875,"f1":null,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.3046875,"distances_sum":1066.907505680074}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8784798534798544,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6015625,"distances_sum":1683.2039913461329}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1689453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1689453125,"f1":null,"seconds":2.78279185295105e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.28125,"distances_sum":361.9636040094709}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8653398684648692,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5703125,"distances_sum":1641.502656813039}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8784798534798544,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6015625,"distances_sum":1683.2039913461329}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9383642399267405,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1994.395671155068}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9383642399267405,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1994.395671155068}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9383642399267405,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1994.395671155068}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9383642399267405,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8046875,"distances_sum":1994.395671155068}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7620083041958049,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.2734375,"distances_sum":1289.3470323799022}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.626953125,"f1":0.7572994713619722,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.1328125,"distances_sum":1334.299009034193}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.7620083041958049,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.2734375,"distances_sum":1289.3470323799022}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8237876706626714,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.8828125,"distances_sum":1502.3890492656144}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9172478563103571,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5703125,"distances_sum":1898.3622526754339}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9248168498168503,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.640625,"distances_sum":1893.6274363303123}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9248168498168503,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.640625,"distances_sum":1893.6274363303123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370821886446893,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6484375,"distances_sum":2005.9656082802096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9361034798534804,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.703125,"distances_sum":1991.9494725123466}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9349816849816857,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6640625,"distances_sum":1966.366817088957}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589171245421247,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2116.7287743598363}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9589171245421247,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2116.7287743598363}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9589171245421247,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.78125,"distances_sum":2116.7287743598363}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8632242757242765,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1640625,"distances_sum":1642.1032190733076}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.15625,"distances_sum":765.1239995973311}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8452760780885791,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1875,"distances_sum":1561.1961341257356}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8632242757242765,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1640625,"distances_sum":1642.1032190733076}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504750457875462,"seconds":6.5658241510391235e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.78125,"distances_sum":2067.047448714389}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587339743589748,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2149.3040327061512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.936630036630037,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.765625,"distances_sum":2018.3676978965643}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8945289085914091,"seconds":7.664784789085388e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.4375,"distances_sum":1802.6010184670374}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9201038544788549,"seconds":7.402151823043823e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.71875,"distances_sum":1901.3810604667876}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958001373626374,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8203125,"distances_sum":2134.946894361956}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587339743589748,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.796875,"distances_sum":2149.3040327061512}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9296875,"distances_sum":2206.8356820543154}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":2179.45715258646}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738667582417586,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.90625,"distances_sum":2205.5091003103694}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9296875,"distances_sum":2206.8356820543154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9296875,"distances_sum":2206.8356820543154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.345703125,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.3359375,"distances_sum":766.3441743821292}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.345703125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.345703125,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.3359375,"distances_sum":766.3441743821292}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.490234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.490234375,"f1":0.6436299811299816,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.3828125,"distances_sum":1035.4261183173924}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7717053779553789,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.4375,"distances_sum":1408.9041858238904}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.640625,"f1":0.7717053779553789,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.4375,"distances_sum":1408.9041858238904}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9311355311355317,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8203125,"distances_sum":2007.3866795811814}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8908976440226447,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.578125,"distances_sum":1838.962650370532}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9311355311355317,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8203125,"distances_sum":2007.3866795811814}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9311355311355317,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8203125,"distances_sum":2007.3866795811814}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.3173710107803345e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.8515625,"distances_sum":395.2255188554018}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.408203125,"f1":0.5610091297591295,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":6.9140625,"distances_sum":739.5788271660588}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.408203125,"state":{"ssize":2,"bsize":2},"perf":{"precision":1.0,"recall":0.408203125,"f1":0.5610091297591295,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":6.9140625,"distances_sum":739.5788271660588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.65625,"distances_sum":1083.5061681852187}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.03125,"distances_sum":769.7924207949411}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7160022269397275,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.8046875,"distances_sum":1069.6308658197297}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5771484375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5771484375,"f1":0.7160022269397275,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.8046875,"distances_sum":1069.6308658197297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8825351731601742,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.40625,"distances_sum":1590.2653350595892}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9045157967032975,"seconds":8.124858140945435e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.6953125,"distances_sum":1718.1697929909044}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7874219530469538,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.0234375,"distances_sum":1285.5262312203795}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8901015651015658,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.3671875,"distances_sum":1622.18687349606}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9147435897435904,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.640625,"distances_sum":1773.420368741093}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9147435897435904,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.640625,"distances_sum":1773.420368741093}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.853515625,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9147435897435904,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.640625,"distances_sum":1773.420368741093}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":3.1795352697372437e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":4.3984375,"distances_sum":337.6303262752051}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.166015625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.166015625,"f1":null,"seconds":3.1795352697372437e-6,"exhaustive_search_seconds":1.600012183189392e-6,"evaluations":4.3984375,"distances_sum":337.6303262752051}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5986328125,"f1":null,"seconds":6.591901183128357e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.515625,"distances_sum":1260.0253868575794}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8069602272727281,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.125,"distances_sum":1485.4952710176783}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6885772213897221,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.3671875,"distances_sum":1081.3948064510091}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8069602272727281,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.125,"distances_sum":1485.4952710176783}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333307317682323,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2078.0731875746037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9046448343323351,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.609375,"distances_sum":1930.2081063835421}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9480139652014659,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2187.3478755867473}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9408711080586087,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2117.1682743333354}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9480139652014659,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2187.3478755867473}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9784226190476195,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2373.202804945951}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9672332875457879,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.953125,"distances_sum":2300.109215613211}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9520692848817853,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2207.992316035932}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9744047619047623,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2345.924225684364}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564274267399273,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2227.2082242030256}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9481887903762911,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8203125,"distances_sum":2174.4876423904448}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784226190476195,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2373.202804945951}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784226190476195,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9921875,"distances_sum":2373.202804945951}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.609375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.609375,"f1":0.743611076423577,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.421875,"distances_sum":1334.2838332022166}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.609375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.609375,"f1":0.743611076423577,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.421875,"distances_sum":1334.2838332022166}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8804377913752922,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7109375,"distances_sum":1925.0629158065587}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9494848901098906,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2316.622713978563}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9494848901098906,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2316.622713978563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530048076923081,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2372.0298667549073}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644693,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2532.994900368721}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644693,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2532.994900368721}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644693,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2532.994900368721}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3056640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3056640625,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.09375,"distances_sum":763.4801696163172}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8697826479076487,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.484375,"distances_sum":1907.6091726208222}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8697826479076487,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.484375,"distances_sum":1907.6091726208222}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9503491300366306,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2292.505679312746}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9503491300366306,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2292.505679312746}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9752289377289378,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2492.923781952656}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.96875,"distances_sum":2471.2675209994823}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.96875,"distances_sum":2471.2675209994823}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775125915750917,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.96875,"distances_sum":2471.2675209994823}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.732454871517372,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0,"distances_sum":1256.5712209197134}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":3.248453140258789e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.15625,"distances_sum":417.92991169383885}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.732454871517372,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0,"distances_sum":1256.5712209197134}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802203,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2190.27413070185}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9149241383616392,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.96875,"distances_sum":2000.9406907661132}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8607434232434242,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5,"distances_sum":1739.3428339880854}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802203,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2190.27413070185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655682,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2336.5752821152755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566620879120884,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9765625,"distances_sum":2249.3307578570166}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.976173305860806,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9921875,"distances_sum":2376.8769259303313}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533539377289383,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.96875,"distances_sum":2224.3519931509113}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.976173305860806,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9921875,"distances_sum":2376.8769259303313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.976173305860806,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9921875,"distances_sum":2376.8769259303313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.603515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.603515625,"f1":0.7371416777666786,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.3203125,"distances_sum":1344.6379762595861}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.306640625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.306640625,"f1":null,"seconds":2.9634684324264526e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.9375,"distances_sum":686.2963097032633}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.603515625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.603515625,"f1":0.7371416777666786,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.3203125,"distances_sum":1344.6379762595861}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931413378288379,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8046875,"distances_sum":2164.1183376193694}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8520874958374965,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2109375,"distances_sum":1792.8592460900506}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.931413378288379,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8046875,"distances_sum":2164.1183376193694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465206,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":2437.6603873213753}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9324155011655016,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8046875,"distances_sum":2171.5192498300685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472902097902103,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2325.446058092306}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465206,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":2437.6603873213753}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465206,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":2437.6603873213753}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8613558316683325,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5703125,"distances_sum":1730.5260863373699}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8613558316683325,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5703125,"distances_sum":1730.5260863373699}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8650771103896112,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.546875,"distances_sum":1755.3201140057804}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9327641108891114,"seconds":6.183609366416931e-5,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2056.4271510244025}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9327641108891114,"seconds":6.183609366416931e-5,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2056.4271510244025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802202,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2245.0902116003995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500629578754585,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2210.7470325948702}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802202,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2245.0902116003995}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802202,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2245.0902116003995}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":3,"bsize":3}, perf: {"precision":0.9765625,"recall":0.5166015625,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.765625,"distances_sum":1100.0254350687885}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5166015625,"state":{"ssize":3,"bsize":3},"perf":{"precision":0.9765625,"recall":0.5166015625,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.765625,"distances_sum":1100.0254350687885}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9873511904761905,"recall":0.80078125,"f1":0.8760779584998338,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.359375,"distances_sum":1822.0348914442}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9873511904761905,"recall":0.80078125,"f1":0.8760779584998338,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.359375,"distances_sum":1822.0348914442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9873697916666667,"recall":0.853515625,"f1":0.9101405105311359,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6015625,"distances_sum":2071.122678531457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":0.9872116815476191,"recall":0.865234375,"f1":0.9172056459165838,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2097.2955318640156}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":0.9872116815476191,"recall":0.865234375,"f1":0.9172056459165838,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2097.2955318640156}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.865234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":0.9872116815476191,"recall":0.865234375,"f1":0.9172056459165838,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5859375,"distances_sum":2097.2955318640156}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7823143870018879,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.1953125,"distances_sum":1374.608947190641}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6936195748695755,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.46875,"distances_sum":1076.631080547497}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7823143870018879,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.1953125,"distances_sum":1374.608947190641}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501602564102568,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2283.273917637431}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8426001082251092,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9140625,"distances_sum":1601.941254854368}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8211744852369862,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7421875,"distances_sum":1544.3489744893673}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9501602564102568,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2283.273917637431}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679716117216118,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2368.9707557717047}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693681318681321,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2385.2778752005975}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693681318681321,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2385.2778752005975}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693681318681321,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2385.2778752005975}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":2.9783695936203003e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.7109375,"distances_sum":642.1535604194823}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3115234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.3115234375,"f1":null,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.9609375,"distances_sum":699.0520067687029}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3115234375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.3115234375,"f1":null,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.9609375,"distances_sum":699.0520067687029}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6878472222222228,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.390625,"distances_sum":1076.9565708693012}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7279900654900664,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.5546875,"distances_sum":1191.922443021443}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.587890625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.587890625,"f1":0.7279900654900664,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.5546875,"distances_sum":1191.922443021443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9034944222444229,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.375,"distances_sum":1959.4653687594177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8928946053946063,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1953125,"distances_sum":1901.5605295604694}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7889291264291273,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.0546875,"distances_sum":1437.0661168455551}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9034944222444229,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.375,"distances_sum":1959.4653687594177}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9034944222444229,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.375,"distances_sum":1959.4653687594177}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":2.6635825634002686e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":4.9765625,"distances_sum":424.94465034146646}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":2.8796494007110596e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.1328125,"distances_sum":468.92165300578347}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8493282758907765,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.0390625,"distances_sum":1765.5287258445005}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8493282758907765,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.0390625,"distances_sum":1765.5287258445005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9535802738927744,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.71875,"distances_sum":2332.5185987166524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8822578463203472,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.4453125,"distances_sum":1879.476019013591}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8586632117882125,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.03125,"distances_sum":1798.368706833509}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9535802738927744,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.71875,"distances_sum":2332.5185987166524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9816964285714288,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2494.1585989256355}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9816964285714288,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2494.1585989256355}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9816964285714288,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2494.1585989256355}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7766015234765242,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.453125,"distances_sum":1171.2237185777542}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8568634490509499,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.265625,"distances_sum":1344.4599205086722}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3212890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3212890625,"f1":null,"seconds":2.954155206680298e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.4921875,"distances_sum":523.3924571558243}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8568634490509499,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.265625,"distances_sum":1344.4599205086722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8816537629037637,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5390625,"distances_sum":1478.769289704698}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.8998605561105565,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":1561.878899768987}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384958791208797,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.59375,"distances_sum":1795.4829187374046}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9272123709623717,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":1694.5878530453588}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9259219946719952,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6953125,"distances_sum":1695.1560684097394}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.909977002164503,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":1602.0152595918482}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9384958791208797,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.59375,"distances_sum":1795.4829187374046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358977,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":1909.2141613694312}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608859890109895,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1872.9626844173179}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493017399267406,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.703125,"distances_sum":1834.19129137668}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978026,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":1877.1506379128737}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444482600732607,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6328125,"distances_sum":1816.010250830256}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358977,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":1909.2141613694312}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358977,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":1909.2141613694312}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.2354146242141724e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.6953125,"distances_sum":608.8717389456036}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8515286796536806,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.828125,"distances_sum":1389.0621528200525}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5546875,"f1":null,"seconds":3.915280103683472e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.0859375,"distances_sum":939.6763516006314}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8515286796536806,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.828125,"distances_sum":1389.0621528200525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8571236055611064,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.90625,"distances_sum":1403.7903070869577}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9283024267399272,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5,"distances_sum":1719.9549624506515}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9385130494505503,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5,"distances_sum":1770.7835491948672}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8554237429237437,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.8671875,"distances_sum":1421.368699975112}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9385130494505503,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5,"distances_sum":1770.7835491948672}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602735805860811,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7890625,"distances_sum":1882.5685800242256}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585050366300373,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7734375,"distances_sum":1874.268776989204}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637305402930406,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7578125,"distances_sum":1915.9251144886598}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.948105540293041,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7109375,"distances_sum":1831.6885993552037}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9400183150183156,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6015625,"distances_sum":1802.201372488006}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9492788461538466,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7109375,"distances_sum":1852.3102774056922}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637305402930406,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7578125,"distances_sum":1915.9251144886598}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637305402930406,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.7578125,"distances_sum":1915.9251144886598}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5283203125,"f1":0.6755251692751697,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.1015625,"distances_sum":899.2732551527257}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":2.8349459171295166e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.890625,"distances_sum":353.20031537055434}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5283203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5283203125,"f1":0.6755251692751697,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.1015625,"distances_sum":899.2732551527257}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7731483793983802,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.5546875,"distances_sum":1163.1482859326127}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9348131035631039,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":1798.6169537754356}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8720643939393947,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.390625,"distances_sum":1478.3191622624963}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9348131035631039,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":1798.6169537754356}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9426053113553121,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":1853.6284598770742}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512824,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1977.5774413181061}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512824,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1977.5774413181061}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512824,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1977.5774413181061}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.984375,"distances_sum":613.1171410006075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.173828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.173828125,"f1":null,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":3.9453125,"distances_sum":373.2496840072304}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.154296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.154296875,"f1":null,"seconds":2.4009495973587036e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":3.9296875,"distances_sum":309.32775765778484}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3330078125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.0156224966049194e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.984375,"distances_sum":613.1171410006075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.877355457042958,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.625,"distances_sum":1431.841057821513}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5087890625,"f1":0.6608995171495178,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.328125,"distances_sum":902.2497735581142}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8673461954711961,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.46875,"distances_sum":1425.231955244232}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.48046875,"f1":0.6340458152958155,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2421875,"distances_sum":830.9835531077156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4619140625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.4619140625,"f1":0.6182511932511936,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.171875,"distances_sum":760.6379039511212}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8533206376956384,"seconds":4.913657903671265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3984375,"distances_sum":1375.774360220406}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.877355457042958,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.625,"distances_sum":1431.841057821513}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9493761446886451,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1824.2883189775569}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412805944055951,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":1782.0980869201994}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8903195762570769,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.53125,"distances_sum":1559.521089546761}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9493761446886451,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1824.2883189775569}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9493761446886451,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":1824.2883189775569}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.9140625,"distances_sum":343.47925235471916}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.70024818931069,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.328125,"distances_sum":933.1880384261987}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.70024818931069,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.328125,"distances_sum":933.1880384261987}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8758304195804205,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3515625,"distances_sum":1461.1097743865403}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8758304195804205,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3515625,"distances_sum":1461.1097743865403}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9455445596070602,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1807.9520052232615}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454358141858148,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":1805.0991457514672}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9455445596070602,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1807.9520052232615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9455445596070602,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":1807.9520052232615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7970571095571103,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1182.7261544792857}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.34375,"distances_sum":634.935901888508}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7787497224997231,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6171875,"distances_sum":1136.7410797556045}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7970571095571103,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1182.7261544792857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468838453213457,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1853.0475559250744}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9080762987012994,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3984375,"distances_sum":1646.4189312135115}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8569357725607732,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.03125,"distances_sum":1447.0994210402127}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9468838453213457,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1853.0475559250744}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582303113553119,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":1918.030224654141}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578010531135537,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":1900.524950594914}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582303113553119,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":1918.030224654141}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582303113553119,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":1918.030224654141}}, n: 9
inertia(cfft.distances) = 21.017329001767482
inertia(cdnet.distances) = 24.965987662929802
inertia(crand.distances) = 21.950172548358204
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9511111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9488888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.94
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9044444444444443
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 3, 1, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4962666690473119] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4962666690473119, 0.17576290084712073] ***
*** starting iteration: 2; err: [Inf, 0.4962666690473119, 0.17576290084712073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975] ***
*** starting iteration: 3; err: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975, 0.15918927523482368] ***
*** starting iteration: 4; err: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975, 0.15918927523482368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975, 0.15918927523482368, 0.15910482381011753] ***
*** finished computation of 12 references, err: [Inf, 0.4962666690473119, 0.17576290084712073, 0.16069897903318975, 0.15918927523482368, 0.15910482381011753] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.1222011633904052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1222011633904052, 0.6632283967983537] ***
*** starting iteration: 2; err: [Inf, 1.1222011633904052, 0.6632283967983537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1222011633904052, 0.6632283967983537, 0.4697454654835477] ***
*** starting iteration: 3; err: [Inf, 1.1222011633904052, 0.6632283967983537, 0.4697454654835477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1222011633904052, 0.6632283967983537, 0.4697454654835477, 0.36072794169037936] ***
*** finished computation of 3 references, err: [Inf, 1.1222011633904052, 0.6632283967983537, 0.4697454654835477, 0.36072794169037936] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 4]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9676091970956988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9676091970956988, 0.4883334680775425] ***
*** starting iteration: 2; err: [Inf, 0.9676091970956988, 0.4883334680775425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9676091970956988, 0.4883334680775425, 0.423498823418783] ***
*** starting iteration: 3; err: [Inf, 0.9676091970956988, 0.4883334680775425, 0.423498823418783] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9676091970956988, 0.4883334680775425, 0.423498823418783, 0.3857689619551483] ***
*** finished computation of 3 references, err: [Inf, 0.9676091970956988, 0.4883334680775425, 0.423498823418783, 0.3857689619551483] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 9]]
** centroid: 3, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.680318098140926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.680318098140926, 1.8332309859437368] ***
*** starting iteration: 2; err: [Inf, 4.680318098140926, 1.8332309859437368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.680318098140926, 1.8332309859437368, 1.0164289576405345] ***
*** starting iteration: 3; err: [Inf, 4.680318098140926, 1.8332309859437368, 1.0164289576405345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.680318098140926, 1.8332309859437368, 1.0164289576405345, 0.5105204784897387] ***
*** finished computation of 3 references, err: [Inf, 4.680318098140926, 1.8332309859437368, 1.0164289576405345, 0.5105204784897387] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 24]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 32), (3, 24)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4014396327546416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4014396327546416, 0.18750266835877025] ***
*** finished computation of 7 references, err: [Inf, 0.4014396327546416, 0.18750266835877025] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 4, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37606800250996786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37606800250996786, 0.22535434849039745] ***
*** finished computation of 7 references, err: [Inf, 0.37606800250996786, 0.22535434849039745] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 4]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38086744900282793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38086744900282793, 0.22139795667376036] ***
*** finished computation of 7 references, err: [Inf, 0.38086744900282793, 0.22139795667376036] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 5, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 2]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3405581953705392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405581953705392, 0.2227075946641881] ***
*** finished computation of 7 references, err: [Inf, 0.3405581953705392, 0.2227075946641881] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
*** center 6: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39998286935306104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39998286935306104, 0.23013066879393906] ***
*** finished computation of 7 references, err: [Inf, 0.39998286935306104, 0.23013066879393906] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 4]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5329011660747072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5329011660747072, 0.268631361055925] ***
*** finished computation of 7 references, err: [Inf, 0.5329011660747072, 0.268631361055925] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 13]]
** centroid: 1, normalized-entropy: 0.9922666387194963, [(2, 16), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7301931724960847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7301931724960847, 0.28571382524983696] ***
*** starting iteration: 2; err: [Inf, 0.7301931724960847, 0.28571382524983696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7301931724960847, 0.28571382524983696, 0.25013759185974765] ***
*** starting iteration: 3; err: [Inf, 0.7301931724960847, 0.28571382524983696, 0.25013759185974765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7301931724960847, 0.28571382524983696, 0.25013759185974765, 0.23008255345014278] ***
*** finished computation of 7 references, err: [Inf, 0.7301931724960847, 0.28571382524983696, 0.25013759185974765, 0.23008255345014278] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47283113383858094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47283113383858094, 0.25013835513937044] ***
*** starting iteration: 2; err: [Inf, 0.47283113383858094, 0.25013835513937044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47283113383858094, 0.25013835513937044, 0.204290096807703] ***
*** starting iteration: 3; err: [Inf, 0.47283113383858094, 0.25013835513937044, 0.204290096807703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47283113383858094, 0.25013835513937044, 0.204290096807703, 0.19394373842122012] ***
*** finished computation of 7 references, err: [Inf, 0.47283113383858094, 0.25013835513937044, 0.204290096807703, 0.19394373842122012] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 16]]
** centroid: 3, normalized-entropy: 1.0, [(2, 16), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2383937401048852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2383937401048852, 0.2784155346418626] ***
*** starting iteration: 2; err: [Inf, 2.2383937401048852, 0.2784155346418626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2383937401048852, 0.2784155346418626, 0.20276558017406945] ***
*** starting iteration: 3; err: [Inf, 2.2383937401048852, 0.2784155346418626, 0.20276558017406945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2383937401048852, 0.2784155346418626, 0.20276558017406945, 0.18214680396449448] ***
*** finished computation of 7 references, err: [Inf, 2.2383937401048852, 0.2784155346418626, 0.20276558017406945, 0.18214680396449448] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.386028081992788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.386028081992788, 0.42582015358062997] ***
*** starting iteration: 2; err: [Inf, 2.386028081992788, 0.42582015358062997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214] ***
*** starting iteration: 3; err: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671] ***
*** starting iteration: 4; err: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671, 0.3573884475723934] ***
*** starting iteration: 5; err: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671, 0.3573884475723934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671, 0.3573884475723934, 0.3573884475723934] ***
*** finished computation of 3 references, err: [Inf, 2.386028081992788, 0.42582015358062997, 0.3754318737345214, 0.3610186945875671, 0.3573884475723934, 0.3573884475723934] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7269719580861322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7269719580861322, 0.3791455337972101] ***
*** starting iteration: 2; err: [Inf, 1.7269719580861322, 0.3791455337972101] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7269719580861322, 0.3791455337972101, 0.3770922937202985] ***
*** starting iteration: 3; err: [Inf, 1.7269719580861322, 0.3791455337972101, 0.3770922937202985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7269719580861322, 0.3791455337972101, 0.3770922937202985, 0.3767167264212759] ***
*** finished computation of 3 references, err: [Inf, 1.7269719580861322, 0.3791455337972101, 0.3770922937202985, 0.3767167264212759] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 6]]
** centroid: 2, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.5946649579252865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785] ***
*** starting iteration: 2; err: [Inf, 4.5946649579252865, 1.6345633107364785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955] ***
*** starting iteration: 3; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637] ***
*** starting iteration: 4; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824] ***
*** starting iteration: 5; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815] ***
*** starting iteration: 6; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854] ***
*** starting iteration: 7; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595] ***
*** starting iteration: 8; err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595, 0.34752785982708595] ***
*** finished computation of 3 references, err: [Inf, 4.5946649579252865, 1.6345633107364785, 0.8778734578263955, 0.427653107679637, 0.36959148972191824, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595, 0.34752785982708595] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45200000466812185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913] ***
*** starting iteration: 2; err: [Inf, 0.45200000466812185, 0.30820850454557913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725] ***
*** starting iteration: 3; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204] ***
*** starting iteration: 4; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524] ***
*** starting iteration: 5; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675] ***
*** starting iteration: 6; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855] ***
*** starting iteration: 7; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114] ***
*** starting iteration: 8; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114, 0.256143132906773] ***
*** starting iteration: 9; err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114, 0.256143132906773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114, 0.256143132906773, 0.256143132906773] ***
*** finished computation of 7 references, err: [Inf, 0.45200000466812185, 0.30820850454557913, 0.3004794477737725, 0.2989845917829204, 0.28055025027368524, 0.26648750546259675, 0.26371739255325855, 0.25909213600181114, 0.256143132906773, 0.256143132906773] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 22]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 4), (3, 22)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9324000205529592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936] ***
*** starting iteration: 2; err: [Inf, 1.9324000205529592, 0.4486747731705936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353] ***
*** starting iteration: 3; err: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013] ***
*** starting iteration: 4; err: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074] ***
*** starting iteration: 5; err: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074, 0.30132811112773544] ***
*** starting iteration: 6; err: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074, 0.30132811112773544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074, 0.30132811112773544, 0.30084290735675373] ***
*** finished computation of 7 references, err: [Inf, 1.9324000205529592, 0.4486747731705936, 0.3754545056396353, 0.32546861902215013, 0.30707477537241074, 0.30132811112773544, 0.30084290735675373] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 8]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 21), (3, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5314000017300512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864] ***
*** starting iteration: 2; err: [Inf, 0.5314000017300512, 0.33390908159459864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293] ***
*** starting iteration: 3; err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624] ***
*** starting iteration: 4; err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713] ***
*** starting iteration: 5; err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533] ***
*** starting iteration: 6; err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533, 0.24852450358320463] ***
*** starting iteration: 7; err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533, 0.24852450358320463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533, 0.24852450358320463, 0.2479438559321332] ***
*** finished computation of 7 references, err: [Inf, 0.5314000017300512, 0.33390908159459864, 0.30489161526310293, 0.27629302508446624, 0.25290060653763713, 0.24986696658745533, 0.24852450358320463, 0.2479438559321332] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4064999911506089] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4064999911506089, 0.5405245493976699] ***
*** starting iteration: 2; err: [Inf, 1.4064999911506089, 0.5405245493976699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259] ***
*** starting iteration: 3; err: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** starting iteration: 4; err: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554, 0.5125315024000108] ***
*** starting iteration: 5; err: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554, 0.5125315024000108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554, 0.5125315024000108, 0.5125315024000108] ***
*** finished computation of 3 references, err: [Inf, 1.4064999911506089, 0.5405245493976699, 0.5178416313445259, 0.513651292222554, 0.5125315024000108, 0.5125315024000108] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.688200000356689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009] ***
*** starting iteration: 2; err: [Inf, 2.688200000356689, 0.555129580266009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976] ***
*** starting iteration: 3; err: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976, 0.5524724033538976] ***
*** finished computation of 3 references, err: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976, 0.5524724033538976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 28]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4677000039074044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4677000039074044, 0.49097049225425055] ***
*** starting iteration: 2; err: [Inf, 1.4677000039074044, 0.49097049225425055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4677000039074044, 0.49097049225425055, 0.4898564877855428] ***
*** starting iteration: 3; err: [Inf, 1.4677000039074044, 0.49097049225425055, 0.4898564877855428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4677000039074044, 0.49097049225425055, 0.4898564877855428, 0.48923920460118864] ***
*** finished computation of 3 references, err: [Inf, 1.4677000039074044, 0.49097049225425055, 0.4898564877855428, 0.48923920460118864] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4173999926763508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4173999926763508, 0.5405245493976699] ***
*** starting iteration: 2; err: [Inf, 1.4173999926763508, 0.5405245493976699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4173999926763508, 0.5405245493976699, 0.5178416313445259] ***
*** starting iteration: 3; err: [Inf, 1.4173999926763508, 0.5405245493976699, 0.5178416313445259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4173999926763508, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** finished computation of 3 references, err: [Inf, 1.4173999926763508, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1702000068647005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1702000068647005, 0.6202959866674458] ***
*** starting iteration: 2; err: [Inf, 1.1702000068647005, 0.6202959866674458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1702000068647005, 0.6202959866674458, 0.5569727664064381] ***
*** starting iteration: 3; err: [Inf, 1.1702000068647005, 0.6202959866674458, 0.5569727664064381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1702000068647005, 0.6202959866674458, 0.5569727664064381, 0.5497504514500972] ***
*** finished computation of 3 references, err: [Inf, 1.1702000068647005, 0.6202959866674458, 0.5569727664064381, 0.5497504514500972] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.439300001459391] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.439300001459391, 0.49097049225425055] ***
*** starting iteration: 2; err: [Inf, 1.439300001459391, 0.49097049225425055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.439300001459391, 0.49097049225425055, 0.4898564877855428] ***
*** starting iteration: 3; err: [Inf, 1.439300001459391, 0.49097049225425055, 0.4898564877855428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.439300001459391, 0.49097049225425055, 0.4898564877855428, 0.48923920460118864] ***
*** finished computation of 3 references, err: [Inf, 1.439300001459391, 0.49097049225425055, 0.4898564877855428, 0.48923920460118864] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 3, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4112999914912825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4112999914912825, 0.5405245493976699] ***
*** starting iteration: 2; err: [Inf, 1.4112999914912825, 0.5405245493976699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4112999914912825, 0.5405245493976699, 0.5178416313445259] ***
*** starting iteration: 3; err: [Inf, 1.4112999914912825, 0.5405245493976699, 0.5178416313445259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4112999914912825, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** finished computation of 3 references, err: [Inf, 1.4112999914912825, 0.5405245493976699, 0.5178416313445259, 0.513651292222554] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.688200000356689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009] ***
*** starting iteration: 2; err: [Inf, 2.688200000356689, 0.555129580266009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976] ***
*** starting iteration: 3; err: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976, 0.5524724033538976] ***
*** finished computation of 3 references, err: [Inf, 2.688200000356689, 0.555129580266009, 0.5524724033538976, 0.5524724033538976] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 28]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0529000007664537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0529000007664537, 0.5213175372847112] ***
*** starting iteration: 2; err: [Inf, 1.0529000007664537, 0.5213175372847112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0529000007664537, 0.5213175372847112, 0.49266876039808905] ***
*** starting iteration: 3; err: [Inf, 1.0529000007664537, 0.5213175372847112, 0.49266876039808905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0529000007664537, 0.5213175372847112, 0.49266876039808905, 0.4898564877855428] ***
*** finished computation of 3 references, err: [Inf, 1.0529000007664537, 0.5213175372847112, 0.49266876039808905, 0.4898564877855428] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7933097355667925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7933097355667925, 0.4338788247852034] ***
*** starting iteration: 2; err: [Inf, 0.7933097355667925, 0.4338788247852034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7933097355667925, 0.4338788247852034, 0.3953832866005213] ***
*** starting iteration: 3; err: [Inf, 0.7933097355667925, 0.4338788247852034, 0.3953832866005213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7933097355667925, 0.4338788247852034, 0.3953832866005213, 0.36520438862795507] ***
*** finished computation of 3 references, err: [Inf, 0.7933097355667925, 0.4338788247852034, 0.3953832866005213, 0.36520438862795507] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7204967316544639] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7204967316544639, 0.39971772980298204] ***
*** starting iteration: 2; err: [Inf, 0.7204967316544639, 0.39971772980298204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7204967316544639, 0.39971772980298204, 0.38152796018097646] ***
*** starting iteration: 3; err: [Inf, 0.7204967316544639, 0.39971772980298204, 0.38152796018097646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7204967316544639, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566] ***
*** finished computation of 3 references, err: [Inf, 0.7204967316544639, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0982751904342372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0982751904342372, 0.35369374908144685] ***
*** starting iteration: 2; err: [Inf, 1.0982751904342372, 0.35369374908144685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0982751904342372, 0.35369374908144685, 0.35036177701735854] ***
*** starting iteration: 3; err: [Inf, 1.0982751904342372, 0.35369374908144685, 0.35036177701735854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0982751904342372, 0.35369374908144685, 0.35036177701735854, 0.34752785982708595] ***
*** finished computation of 3 references, err: [Inf, 1.0982751904342372, 0.35369374908144685, 0.35036177701735854, 0.34752785982708595] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8198509592279524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8198509592279524, 0.377716629431638] ***
*** finished computation of 3 references, err: [Inf, 0.8198509592279524, 0.377716629431638] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 30]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 8), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6662536065532447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662536065532447, 0.4318209176895177] ***
*** finished computation of 3 references, err: [Inf, 0.6662536065532447, 0.4318209176895177] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 34]]
** centroid: 1, normalized-entropy: 0.9593160320543779, [(2, 21), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2904978959460451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2904978959460451, 0.35369374908144685] ***
*** finished computation of 3 references, err: [Inf, 1.2904978959460451, 0.35369374908144685] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 14]]
** centroid: 3, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1337434467944458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337434467944458, 0.3812446594306527] ***
*** starting iteration: 2; err: [Inf, 1.1337434467944458, 0.3812446594306527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087] ***
*** starting iteration: 3; err: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957] ***
*** starting iteration: 4; err: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957, 0.3573884475723934] ***
*** starting iteration: 5; err: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957, 0.3573884475723934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957, 0.3573884475723934, 0.3573884475723934] ***
*** finished computation of 3 references, err: [Inf, 1.1337434467944458, 0.3812446594306527, 0.3628199119585087, 0.3585722518689957, 0.3573884475723934, 0.3573884475723934] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7935598098937615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935598098937615, 0.39971772980298204] ***
*** starting iteration: 2; err: [Inf, 0.7935598098937615, 0.39971772980298204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646] ***
*** starting iteration: 3; err: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566] ***
*** starting iteration: 4; err: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566, 0.37774436608899153] ***
*** starting iteration: 5; err: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566, 0.37774436608899153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566, 0.37774436608899153, 0.37728321650162827] ***
*** finished computation of 3 references, err: [Inf, 0.7935598098937615, 0.39971772980298204, 0.38152796018097646, 0.37953534905372566, 0.37774436608899153, 0.37728321650162827] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.774306127944379] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.774306127944379, 0.35744993771633815] ***
*** starting iteration: 2; err: [Inf, 0.774306127944379, 0.35744993771633815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854] ***
*** starting iteration: 3; err: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595] ***
*** starting iteration: 4; err: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595, 0.34752785982708595] ***
*** finished computation of 3 references, err: [Inf, 0.774306127944379, 0.35744993771633815, 0.35036177701735854, 0.34752785982708595, 0.34752785982708595] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5999288181771513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5999288181771513, 0.36559157571928247] ***
*** starting iteration: 2; err: [Inf, 0.5999288181771513, 0.36559157571928247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5999288181771513, 0.36559157571928247, 0.3586966231018782] ***
*** starting iteration: 3; err: [Inf, 0.5999288181771513, 0.36559157571928247, 0.3586966231018782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5999288181771513, 0.36559157571928247, 0.3586966231018782, 0.3573143621706446] ***
*** finished computation of 3 references, err: [Inf, 0.5999288181771513, 0.36559157571928247, 0.3586966231018782, 0.3573143621706446] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 30]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 4), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5566368613293953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5566368613293953, 0.37773981913878674] ***
*** starting iteration: 2; err: [Inf, 1.5566368613293953, 0.37773981913878674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5566368613293953, 0.37773981913878674, 0.3767167264212759] ***
*** starting iteration: 3; err: [Inf, 1.5566368613293953, 0.37773981913878674, 0.3767167264212759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5566368613293953, 0.37773981913878674, 0.3767167264212759, 0.3767167264212759] ***
*** finished computation of 3 references, err: [Inf, 1.5566368613293953, 0.37773981913878674, 0.3767167264212759, 0.3767167264212759] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 6]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6084008159694841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6084008159694841, 0.3846947088744311] ***
*** starting iteration: 2; err: [Inf, 0.6084008159694841, 0.3846947088744311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6084008159694841, 0.3846947088744311, 0.3642062015592133] ***
*** starting iteration: 3; err: [Inf, 0.6084008159694841, 0.3846947088744311, 0.3642062015592133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6084008159694841, 0.3846947088744311, 0.3642062015592133, 0.354367432851096] ***
*** finished computation of 3 references, err: [Inf, 0.6084008159694841, 0.3846947088744311, 0.3642062015592133, 0.354367432851096] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 14]]
** centroid: 1, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.611000000018456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611000000018456, 0.2365678508422876] ***
*** starting iteration: 2; err: [Inf, 0.611000000018456, 0.2365678508422876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413] ***
*** starting iteration: 3; err: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413, 0.21907927974799837] ***
*** starting iteration: 4; err: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413, 0.21907927974799837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413, 0.21907927974799837, 0.2189166026849549] ***
*** finished computation of 7 references, err: [Inf, 0.611000000018456, 0.2365678508422876, 0.2226433268575413, 0.21907927974799837, 0.2189166026849549] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 6]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4718000089620131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552] ***
*** starting iteration: 2; err: [Inf, 0.4718000089620131, 0.2998283980450552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925] ***
*** starting iteration: 3; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546] ***
*** starting iteration: 4; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368] ***
*** starting iteration: 5; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163] ***
*** starting iteration: 6; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514] ***
*** starting iteration: 7; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177] ***
*** starting iteration: 8; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053] ***
*** starting iteration: 9; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053, 0.2632941760266833] ***
*** starting iteration: 10; err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053, 0.2632941760266833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053, 0.2632941760266833, 0.2600947955141486] ***
*** finished computation of 7 references, err: [Inf, 0.4718000089620131, 0.2998283980450552, 0.28548407514407925, 0.28096654689755546, 0.2749104184852368, 0.2714649792781163, 0.26944597566170514, 0.26740943173422177, 0.2656241685487053, 0.2632941760266833, 0.2600947955141486] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 20, 6]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 20), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4830000052735896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4830000052735896, 0.27453740646606806] ***
*** starting iteration: 2; err: [Inf, 0.4830000052735896, 0.27453740646606806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871] ***
*** starting iteration: 3; err: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871, 0.2508198912051624] ***
*** starting iteration: 4; err: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871, 0.2508198912051624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871, 0.2508198912051624, 0.24984140615529926] ***
*** finished computation of 7 references, err: [Inf, 0.4830000052735896, 0.27453740646606806, 0.2547783494512871, 0.2508198912051624, 0.24984140615529926] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39036170147128063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732] ***
*** starting iteration: 2; err: [Inf, 0.39036170147128063, 0.18139125060668732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625] ***
*** starting iteration: 3; err: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387] ***
*** starting iteration: 4; err: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924] ***
*** starting iteration: 5; err: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924, 0.16172813009937298] ***
*** starting iteration: 6; err: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924, 0.16172813009937298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924, 0.16172813009937298, 0.16172813009937298] ***
*** finished computation of 7 references, err: [Inf, 0.39036170147128063, 0.18139125060668732, 0.16953775466831625, 0.16430103086027387, 0.16292212380978924, 0.16172813009937298, 0.16172813009937298] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 7]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4465328009175367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256] ***
*** starting iteration: 2; err: [Inf, 0.4465328009175367, 0.19046570553642256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441] ***
*** starting iteration: 3; err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029] ***
*** starting iteration: 4; err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078] ***
*** starting iteration: 5; err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376] ***
*** starting iteration: 6; err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376, 0.17387987598118626] ***
*** starting iteration: 7; err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376, 0.17387987598118626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376, 0.17387987598118626, 0.17387987598118626] ***
*** finished computation of 7 references, err: [Inf, 0.4465328009175367, 0.19046570553642256, 0.185183992433441, 0.1839462332103029, 0.17988815612073078, 0.17625504859925376, 0.17387987598118626, 0.17387987598118626] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 8]]
** centroid: 1, normalized-entropy: 0.8497511372532974, [(2, 21), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5236313302123409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854] ***
*** starting iteration: 2; err: [Inf, 0.5236313302123409, 0.21983049982435854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711] ***
*** starting iteration: 3; err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774] ***
*** starting iteration: 4; err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877] ***
*** starting iteration: 5; err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687] ***
*** starting iteration: 6; err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687, 0.15772687613230485] ***
*** starting iteration: 7; err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687, 0.15772687613230485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687, 0.15772687613230485, 0.1570219125286302] ***
*** finished computation of 7 references, err: [Inf, 0.5236313302123409, 0.21983049982435854, 0.201541823375711, 0.18864690714513774, 0.17028955119851877, 0.1634421787122687, 0.15772687613230485, 0.1570219125286302] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3971253842116535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3971253842116535, 0.16577831505100502] ***
*** starting iteration: 2; err: [Inf, 0.3971253842116535, 0.16577831505100502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3971253842116535, 0.16577831505100502, 0.15557214909983316] ***
*** starting iteration: 3; err: [Inf, 0.3971253842116535, 0.16577831505100502, 0.15557214909983316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3971253842116535, 0.16577831505100502, 0.15557214909983316, 0.15337972330701075] ***
*** finished computation of 7 references, err: [Inf, 0.3971253842116535, 0.16577831505100502, 0.15557214909983316, 0.15337972330701075] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 7]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4440416783807501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4440416783807501, 0.1942224378784448] ***
*** starting iteration: 2; err: [Inf, 0.4440416783807501, 0.1942224378784448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4440416783807501, 0.1942224378784448, 0.1845135958057983] ***
*** starting iteration: 3; err: [Inf, 0.4440416783807501, 0.1942224378784448, 0.1845135958057983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4440416783807501, 0.1942224378784448, 0.1845135958057983, 0.18039789610039692] ***
*** finished computation of 7 references, err: [Inf, 0.4440416783807501, 0.1942224378784448, 0.1845135958057983, 0.18039789610039692] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 5]]
** centroid: 5, normalized-entropy: 0.7382848661434506, [(2, 19), (3, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44768227465418264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44768227465418264, 0.22459992314543029] ***
*** starting iteration: 2; err: [Inf, 0.44768227465418264, 0.22459992314543029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44768227465418264, 0.22459992314543029, 0.19988342893512148] ***
*** starting iteration: 3; err: [Inf, 0.44768227465418264, 0.22459992314543029, 0.19988342893512148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44768227465418264, 0.22459992314543029, 0.19988342893512148, 0.190633505283776] ***
*** finished computation of 7 references, err: [Inf, 0.44768227465418264, 0.22459992314543029, 0.19988342893512148, 0.190633505283776] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.4936583297241015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4936583297241015, 0.3585722518689957] ***
*** starting iteration: 2; err: [Inf, 1.4936583297241015, 0.3585722518689957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4936583297241015, 0.3585722518689957, 0.3573884475723934] ***
*** starting iteration: 3; err: [Inf, 1.4936583297241015, 0.3585722518689957, 0.3573884475723934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4936583297241015, 0.3585722518689957, 0.3573884475723934, 0.3573884475723934] ***
*** finished computation of 3 references, err: [Inf, 1.4936583297241015, 0.3585722518689957, 0.3573884475723934, 0.3573884475723934] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6184134920408014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184134920408014, 0.4252519688855383] ***
*** starting iteration: 2; err: [Inf, 0.6184134920408014, 0.4252519688855383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184134920408014, 0.4252519688855383, 0.39869843074289024] ***
*** starting iteration: 3; err: [Inf, 0.6184134920408014, 0.4252519688855383, 0.39869843074289024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6184134920408014, 0.4252519688855383, 0.39869843074289024, 0.3901261214744314] ***
*** finished computation of 3 references, err: [Inf, 0.6184134920408014, 0.4252519688855383, 0.39869843074289024, 0.3901261214744314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 34]]
** centroid: 1, normalized-entropy: 0.8886466698980794, [(2, 15), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6501374327856608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6501374327856608, 0.3846947088744311] ***
*** starting iteration: 2; err: [Inf, 0.6501374327856608, 0.3846947088744311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6501374327856608, 0.3846947088744311, 0.3642062015592133] ***
*** starting iteration: 3; err: [Inf, 0.6501374327856608, 0.3846947088744311, 0.3642062015592133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6501374327856608, 0.3846947088744311, 0.3642062015592133, 0.354367432851096] ***
*** finished computation of 3 references, err: [Inf, 0.6501374327856608, 0.3846947088744311, 0.3642062015592133, 0.354367432851096] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 14]]
** centroid: 1, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.96
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.40122447938975353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40122447938975353, 0.19114483957077183] ***
*** starting iteration: 2; err: [Inf, 0.40122447938975353, 0.19114483957077183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40122447938975353, 0.19114483957077183, 0.18547793211679156] ***
*** starting iteration: 3; err: [Inf, 0.40122447938975353, 0.19114483957077183, 0.18547793211679156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40122447938975353, 0.19114483957077183, 0.18547793211679156, 0.18547793211679156] ***
*** finished computation of 7 references, err: [Inf, 0.40122447938975353, 0.19114483957077183, 0.18547793211679156, 0.18547793211679156] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 7]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3147123992410412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147123992410412, 0.17449340268705985] ***
*** starting iteration: 2; err: [Inf, 0.3147123992410412, 0.17449340268705985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873] ***
*** starting iteration: 3; err: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873, 0.1630117501637583] ***
*** starting iteration: 4; err: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873, 0.1630117501637583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873, 0.1630117501637583, 0.16217284248023692] ***
*** finished computation of 7 references, err: [Inf, 0.3147123992410412, 0.17449340268705985, 0.1658555757357873, 0.1630117501637583, 0.16217284248023692] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44231512349379853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345] ***
*** starting iteration: 2; err: [Inf, 0.44231512349379853, 0.20574778619830345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212] ***
*** starting iteration: 3; err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178] ***
*** starting iteration: 4; err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674] ***
*** starting iteration: 5; err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344] ***
*** starting iteration: 6; err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344, 0.1692125260607539] ***
*** starting iteration: 7; err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344, 0.1692125260607539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344, 0.1692125260607539, 0.16864169223717188] ***
*** finished computation of 7 references, err: [Inf, 0.44231512349379853, 0.20574778619830345, 0.18371650585626212, 0.17916466755443178, 0.17767253483328674, 0.17417418576061344, 0.1692125260607539, 0.16864169223717188] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 15]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6724000000266728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6724000000266728, 0.22980183261766973] ***
*** starting iteration: 2; err: [Inf, 0.6724000000266728, 0.22980183261766973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679] ***
*** starting iteration: 3; err: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679, 0.2189166026849549] ***
*** starting iteration: 4; err: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679, 0.2189166026849549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679, 0.2189166026849549, 0.2189166026849549] ***
*** finished computation of 7 references, err: [Inf, 0.6724000000266728, 0.22980183261766973, 0.2202766942219679, 0.2189166026849549, 0.2189166026849549] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 6]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4324000047422477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4324000047422477, 0.2667730869887548] ***
*** starting iteration: 2; err: [Inf, 0.4324000047422477, 0.2667730869887548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382] ***
*** starting iteration: 3; err: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968] ***
*** starting iteration: 4; err: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968, 0.22617256637771907] ***
*** starting iteration: 5; err: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968, 0.22617256637771907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968, 0.22617256637771907, 0.22567532369172508] ***
*** finished computation of 7 references, err: [Inf, 0.4324000047422477, 0.2667730869887548, 0.24712734188722382, 0.2335358954948968, 0.22617256637771907, 0.22567532369172508] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5560000054829249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5560000054829249, 0.29817170635874235] ***
*** starting iteration: 2; err: [Inf, 0.5560000054829249, 0.29817170635874235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681] ***
*** starting iteration: 3; err: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465] ***
*** starting iteration: 4; err: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465, 0.25152078388934346] ***
*** starting iteration: 5; err: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465, 0.25152078388934346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465, 0.25152078388934346, 0.2505625266801783] ***
*** finished computation of 7 references, err: [Inf, 0.5560000054829249, 0.29817170635874235, 0.2661633316176681, 0.2545988224463465, 0.25152078388934346, 0.2505625266801783] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 12]]
** centroid: 1, normalized-entropy: 0.9784493292686188, [(2, 17), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 19
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 3.9779999849145007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.9779999849145007, 0.5837196902492704] ***
*** starting iteration: 2; err: [Inf, 3.9779999849145007, 0.5837196902492704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.9779999849145007, 0.5837196902492704, 0.3273295462699572] ***
*** starting iteration: 3; err: [Inf, 3.9779999849145007, 0.5837196902492704, 0.3273295462699572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.9779999849145007, 0.5837196902492704, 0.3273295462699572, 0.3002779410396016] ***
*** finished computation of 7 references, err: [Inf, 3.9779999849145007, 0.5837196902492704, 0.3273295462699572, 0.3002779410396016] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 6]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 5), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7066000068750373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7066000068750373, 0.5088841631728989] ***
*** starting iteration: 2; err: [Inf, 2.7066000068750373, 0.5088841631728989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7066000068750373, 0.5088841631728989, 0.3524063451613872] ***
*** starting iteration: 3; err: [Inf, 2.7066000068750373, 0.5088841631728989, 0.3524063451613872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7066000068750373, 0.5088841631728989, 0.3524063451613872, 0.32147735652920517] ***
*** finished computation of 7 references, err: [Inf, 2.7066000068750373, 0.5088841631728989, 0.3524063451613872, 0.32147735652920517] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4615999979759047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4615999979759047, 0.2939875358248799] ***
*** starting iteration: 2; err: [Inf, 0.4615999979759047, 0.2939875358248799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4615999979759047, 0.2939875358248799, 0.2696702975061702] ***
*** starting iteration: 3; err: [Inf, 0.4615999979759047, 0.2939875358248799, 0.2696702975061702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4615999979759047, 0.2939875358248799, 0.2696702975061702, 0.26709712655311946] ***
*** finished computation of 7 references, err: [Inf, 0.4615999979759047, 0.2939875358248799, 0.2696702975061702, 0.26709712655311946] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.98
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.069230769230769, 3.461538461538463, 1.469230769230769, 0.2487179487179487], [7.65, 2.8, 6.75, 2.2], [5.646153846153846, 2.6923076923076925, 4.153846153846154, 1.3000000000000003], [6.4363636363636365, 2.927272727272727, 4.590909090909092, 1.4454545454545455], [6.071428571428571, 2.8428571428571425, 4.985714285714286, 1.8714285714285714], [5.285714285714286, 2.5, 3.5142857142857147, 1.1285714285714286], [6.576470588235295, 3.023529411764706, 5.594117647058823, 2.070588235294118], [7.625, 3.55, 6.324999999999999, 2.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.239999999999998, 3.6799999999999993, 1.5266666666666666, 0.2800000000000001], [7.414285714285714, 3.1571428571428575, 6.2, 1.9428571428571428], [5.88125, 2.8, 4.36875, 1.3312500000000003], [5.866666666666667, 2.6666666666666665, 4.9, 1.7666666666666666], [6.4142857142857155, 3.0428571428571427, 5.466666666666666, 2.1714285714285717], [4.671428571428571, 3.1000000000000005, 1.3642857142857143, 0.1928571428571429], [5.311111111111112, 2.377777777777778, 3.5555555555555554, 1.0666666666666669], [6.550000000000001, 2.966666666666667, 4.7, 1.4833333333333334], [6.266666666666667, 2.6999999999999997, 4.966666666666666, 1.7333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.668750000000001, 3.0124999999999997, 5.5125, 2.03125], [5.131578947368422, 3.6105263157894742, 1.5052631578947366, 0.27894736842105267], [5.61, 2.5599999999999996, 3.8299999999999996, 1.1800000000000002], [6.293333333333334, 2.9466666666666663, 4.626666666666666, 1.4733333333333336], [6.0200000000000005, 2.7199999999999998, 5.0, 1.8400000000000003], [7.5375000000000005, 3.0125, 6.425, 2.0500000000000003], [4.723076923076922, 3.046153846153847, 1.4230769230769231, 0.19230769230769235], [5.628571428571428, 2.8714285714285714, 4.357142857142857, 1.3571428571428572], [5.25, 2.65, 4.7, 1.85]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 2, 3, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[51, 1, 2, 21, 1, 2, 1, 8, 4, 20, 32, 22, 20, 2, 19, 5, 29, 14, 1, 21, 7, 40, 12, 29, 26, 17, 27, 50, 36, 25, 20, 1, 36, 36, 27, 30, 23, 20, 32, 37, 49, 14, 26, 14, 30, 34, 41, 17, 29, 26, 37, 38, 31, 34, 32, 37, 17, 35, 38, 1, 15, 20, 29, 48, 75, 49, 35, 38, 37, 21, 42, 19, 10, 35, 2, 40, 9, 40, 34, 28, 24, 32, 32, 28, 63, 24, 45, 34, 17, 46, 25, 32, 28, 53, 42, 37, 34, 30, 25, 10, 10, 30, 43, 31, 33, 28, 43, 30, 58, 47, 33, 55, 27, 47, 31, 41, 26, 6, 39, 37, 54, 81, 23, 39, 38, 40, 9, 6, 33, 1, 37, 38, 34, 20, 48, 52, 84, 40, 47, 36, 53, 24, 52, 46, 1, 20, 31, 37, 36, 45, 37, 27, 9, 35, 40, 16, 24, 32, 38, 34, 46, 56, 48, 30, 4, 32, 32, 44, 27, 32, 1, 32, 13, 24, 30, 46, 46, 21, 44, 42, 39, 36, 18, 64, 31, 13, 15, 57, 41, 30, 36, 27, 36, 30, 30, 52, 28, 40, 42, 55, 34, 47, 28, 49, 44, 59, 28, 36, 35, 52, 15, 43, 35, 32, 32, 52, 19, 47, 33, 52, 32, 41, 39, 47, 84, 32, 45, 63, 39, 50, 27, 39, 44, 39, 39, 27, 62, 45, 28, 29, 26, 50, 18, 51, 27, 39, 34, 27, 47, 23, 19, 24, 70, 38, 65, 55, 27, 37, 44, 42, 18, 42, 52, 43, 22, 44, 42, 39, 38, 35, 29, 46, 35, 25, 54, 27, 32, 27, 52, 15, 50, 29, 40, 54, 28, 55, 31, 24, 33, 53, 41, 15, 35, 21, 38, 40, 57, 43, 31, 43]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6200000000000003, speedup = 0.33743355706903494, eval_ratio = 0.042316)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3990885416666665,"recall":0.39583333333333315,"f1":null,"seconds":7.184408605098724e-5,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":341.0625,"distances_sum":1654.9250683902214}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5607638888888886,"recall":0.5607638888888886,"f1":null,"seconds":0.00010531581938266754,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":382.6015625,"distances_sum":1542.7254599397}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6666666666666662,"recall":0.6666666666666662,"f1":0.6666666666666662,"seconds":0.00013636425137519836,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":422.859375,"distances_sum":1497.6498520379387}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7352430555555548,"recall":0.7352430555555548,"f1":0.7352430555555548,"seconds":0.00016704760491847992,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":461.4609375,"distances_sum":1474.2523453213525}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7873263888888883,"recall":0.7873263888888883,"f1":0.7873263888888883,"seconds":0.0001996345818042755,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":504.28125,"distances_sum":1461.0468859460566}
KCenters.DeloneInvIndex> reached performance {"precision":0.8246527777777768,"recall":0.8246527777777768,"f1":0.8246527777777768,"seconds":0.00023808330297470093,"exhaustive_search_seconds":0.0004028342664241791,"evaluations":545.0859375,"distances_sum":1452.9554229164328}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8050000000000002, speedup = 1.4356959967841445, eval_ratio = 0.054365)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
