Julia Version 1.5.0-DEV.13
Commit dfcba8768f (2020-01-06 06:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed DataStructures ────────────── v0.17.7
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed Compat ────────────────────── v3.2.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed SimilaritySearch ──────────── v0.3.17
 Installed CategoricalArrays ─────────── v0.7.6
 Installed IteratorInterfaceExtensions ─ v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_aou2T7/Project.toml`
 [no changes]
  Updating `/tmp/jl_aou2T7/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_aou2T7/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 114.91000000000001
[ Info: 82.66000000000008
[ Info: 41.82999999999999
[ Info: 27.539999999999992
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 76.6400011840614
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.736318544103682
inertia(cdnet.distances) = 28.429022820947385
inertia(crand.distances) = 20.76513838904436
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":0.0015522018074989319,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.5546875,"distances_sum":704.1472358070081}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":0.0015522018074989319,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.5546875,"distances_sum":704.1472358070081}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.0,"distances_sum":1526.0700603689272}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":5.15625,"distances_sum":568.0001012625781}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5615234375,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.0,"distances_sum":1526.0700603689272}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8470108016983025,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.9296875,"distances_sum":2232.0199561830914}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8710653929403935,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1484375,"distances_sum":2351.7033389587964}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8710653929403935,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1484375,"distances_sum":2351.7033389587964}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8858521686646693,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.203125,"distances_sum":2460.1353854011636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9386675824175829,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6015625,"distances_sum":2977.7361405489078}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9301510989010995,"seconds":0.00025258399546146393,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6953125,"distances_sum":2804.1098346218573}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501837,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":3151.116767656733}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9273440101565106,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.625,"distances_sum":2814.638288800445}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501837,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":3151.116767656733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501837,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8359375,"distances_sum":3151.116767656733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.17578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.17578125,"f1":null,"seconds":3.0137598514556885e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":4.2890625,"distances_sum":469.6350373343041}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.17578125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.17578125,"f1":null,"seconds":3.0137598514556885e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":4.2890625,"distances_sum":469.6350373343041}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7797036297036305,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7734375,"distances_sum":1381.3017100560141}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6979239510489518,"seconds":3.7867575883865356e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.578125,"distances_sum":1080.588321042369}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7797036297036305,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7734375,"distances_sum":1381.3017100560141}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522378663003669,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.890625,"distances_sum":2208.659497159413}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9203473609723616,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2026.8618913900898}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.857650162337663,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5,"distances_sum":1665.1997725700633}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9522378663003669,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.890625,"distances_sum":2208.659497159413}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956501831501832,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8828125,"distances_sum":2239.890592364068}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617044413919417,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2281.7951811961902}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9563301282051289,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2214.787564484283}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617044413919417,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2281.7951811961902}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9617044413919417,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2281.7951811961902}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.443359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.443359375,"f1":null,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.6328125,"distances_sum":951.2596174998633}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8735014985014995,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.34375,"distances_sum":1905.9638060217108}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.5703125,"distances_sum":565.1825294972735}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8735014985014995,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.34375,"distances_sum":1905.9638060217108}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9100389194139201,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6015625,"distances_sum":2159.1016692157446}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569253663003668,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2491.375472808288}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8802921037296048,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3984375,"distances_sum":1990.3583527097628}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9569253663003668,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2491.375472808288}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622653388278393,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.875,"distances_sum":2508.7849460097495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582448801198806,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8828125,"distances_sum":2501.0495008335743}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622653388278393,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.875,"distances_sum":2508.7849460097495}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622653388278393,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.875,"distances_sum":2508.7849460097495}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.1328125,"distances_sum":491.3474056528497}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2119140625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.1328125,"distances_sum":491.3474056528497}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8702245670995679,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.296875,"distances_sum":1852.44695832747}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8702245670995679,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.296875,"distances_sum":1852.44695832747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504521520146526,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2412.704812644566}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9504521520146526,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2412.704812644566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9504521520146526,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2412.704812644566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8248496295371303,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0,"distances_sum":1650.8240743459064}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":3.831461071968079e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.1328125,"distances_sum":915.1595803314209}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8248496295371303,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0,"distances_sum":1650.8240743459064}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8981773434898442,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.484375,"distances_sum":1984.0371005523753}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9430173992673999,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7109375,"distances_sum":2286.935328309222}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9002461080586089,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.609375,"distances_sum":1969.6392893443274}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8633283383283392,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2890625,"distances_sum":1833.6611484687246}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8661832958707968,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3125,"distances_sum":1783.7387897146104}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9430173992673999,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7109375,"distances_sum":2286.935328309222}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636961996337003,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8125,"distances_sum":2449.651678438494}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9628579753579757,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8359375,"distances_sum":2448.1087070071367}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709478021978025,"seconds":6.789341568946838e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2487.4275392150175}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709478021978025,"seconds":6.789341568946838e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2487.4275392150175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709478021978025,"seconds":6.789341568946838e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2487.4275392150175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7263354700854706,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.78125,"distances_sum":1299.3872630198173}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8481745684870693,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.25,"distances_sum":1777.207734186127}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8481745684870693,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.25,"distances_sum":1777.207734186127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9234864094239101,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6484375,"distances_sum":2180.1606691069715}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9402415293040297,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6953125,"distances_sum":2231.1766044887113}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9402415293040297,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6953125,"distances_sum":2231.1766044887113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615956959706964,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2409.6990450857597}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9473703379953384,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2332.408086000591}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629693223443228,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2443.770344195994}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591746794871799,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.859375,"distances_sum":2411.809857111329}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629693223443228,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2443.770344195994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629693223443228,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8125,"distances_sum":2443.770344195994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.8370490074157715e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.6171875,"distances_sum":819.9776845636025}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.4999102354049683e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.2265625,"distances_sum":498.54120518494386}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.34375,"distances_sum":558.3556480584983}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.9208680391311646e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.796875,"distances_sum":923.9447694209077}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4541015625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.9208680391311646e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.796875,"distances_sum":923.9447694209077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8768611596736604,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.390625,"distances_sum":1896.9913765473023}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8005458083583091,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.6953125,"distances_sum":1541.7302107035168}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.595703125,"f1":0.7334961913086921,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.5234375,"distances_sum":1329.7702148638866}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7096372377622384,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.4296875,"distances_sum":1245.6081798824816}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.821049263236764,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.921875,"distances_sum":1660.0634257832332}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8083858849483857,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.9375,"distances_sum":1578.6416190113846}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8768611596736604,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.390625,"distances_sum":1896.9913765473023}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9247372419247424,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.5859375,"distances_sum":2197.556611080582}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530563186813191,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.828125,"distances_sum":2378.1038346880946}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596611721611726,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2398.04284376231}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.950807005494506,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.828125,"distances_sum":2352.1864384689743}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.944336913086914,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.640625,"distances_sum":2323.5916331337226}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596611721611726,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2398.04284376231}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596611721611726,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2398.04284376231}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.717911255411256,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.234375,"distances_sum":1258.72160409244}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.580078125,"f1":0.717911255411256,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.234375,"distances_sum":1258.72160409244}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.864092678155179,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.171875,"distances_sum":1871.3626053028981}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8641755813630823,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.109375,"distances_sum":1909.991404896118}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8641755813630823,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.109375,"distances_sum":1909.991404896118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936118048618049,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2322.666418837581}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8769235972360981,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2734375,"distances_sum":1947.7037882983889}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445226648351654,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.703125,"distances_sum":2395.367821449417}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8819950882450892,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.234375,"distances_sum":1959.4986669945704}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9445226648351654,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.703125,"distances_sum":2395.367821449417}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9445226648351654,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.703125,"distances_sum":2395.367821449417}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8566915723165731,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":1808.5515344944292}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.3828125,"distances_sum":901.5436142291073}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.2242387533187866e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.4140625,"distances_sum":518.6985471967466}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8566915723165731,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":1808.5515344944292}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.938369963369964,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.5546875,"distances_sum":2294.5415866325757}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.89900151931402,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.53125,"distances_sum":2042.1781010520317}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.938369963369964,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.5546875,"distances_sum":2294.5415866325757}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2502.475829565547}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2502.475829565547}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2502.475829565547}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7726440226440235,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.4453125,"distances_sum":1490.2962221703876}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.48828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.48828125,"f1":0.6416396103896107,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.4296875,"distances_sum":1084.5000609346355}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3193359375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3193359375,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":4.7265625,"distances_sum":772.9505529560574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7726440226440235,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.4453125,"distances_sum":1490.2962221703876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.938398580586081,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.640625,"distances_sum":2240.6257402372016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8568613677988685,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3046875,"distances_sum":1777.1245529327743}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9433665293040298,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.65625,"distances_sum":2322.3678121955327}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8795735514485523,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.390625,"distances_sum":1873.3496735411136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7730039058164067,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.5390625,"distances_sum":1468.1866161797923}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9433665293040298,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.65625,"distances_sum":2322.3678121955327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973626373626374,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2491.354312597471}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967805631868132,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.84375,"distances_sum":2442.820609768175}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9559409340659345,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7734375,"distances_sum":2382.4889892271563}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973626373626374,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2491.354312597471}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973626373626374,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.875,"distances_sum":2491.354312597471}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.4140625,"distances_sum":871.0213107257606}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4482421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":0.97265625,"recall":0.4482421875,"f1":null,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.65625,"distances_sum":1013.5991868735031}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4482421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":0.97265625,"recall":0.4482421875,"f1":null,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.65625,"distances_sum":1013.5991868735031}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9876674107142855,"recall":0.80078125,"f1":0.879626233141859,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6015625,"distances_sum":2130.7855507980557}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":0.9876674107142855,"recall":0.80078125,"f1":0.879626233141859,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6015625,"distances_sum":2130.7855507980557}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.985630580357143,"recall":0.9482421875,"f1":0.9647972470238096,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2854.22376120297}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.985630580357143,"recall":0.9482421875,"f1":0.9647972470238096,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2854.22376120297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.985630580357143,"recall":0.9482421875,"f1":0.9647972470238096,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9765625,"distances_sum":2854.22376120297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.78125,"distances_sum":998.6548560115938}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.40625,"distances_sum":601.3293969231452}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.44921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.44921875,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.78125,"distances_sum":998.6548560115938}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8368740634365641,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8828125,"distances_sum":1819.2150479938703}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8846159049284057,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":2099.2608105403624}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8397274600399608,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1824.515293346327}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8424258033633043,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9609375,"distances_sum":1821.079015817363}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8846159049284057,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":2099.2608105403624}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9672847985347988,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2721.4129197887933}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9312385531135539,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.65625,"distances_sum":2427.49403073746}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2703.738623126822}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.929438790376291,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6328125,"distances_sum":2399.846665635101}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622715,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2674.8184606772684}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9583968115218121,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2638.6785458815957}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2703.738623126822}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2703.738623126822}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4345703125,"f1":0.5833236208236211,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.40625,"distances_sum":924.3541047517826}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.3125,"distances_sum":925.5549113040624}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4345703125,"state":{"ssize":3,"bsize":2},"perf":{"precision":1.0,"recall":0.4345703125,"f1":0.5833236208236211,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.40625,"distances_sum":924.3541047517826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.57421875,"f1":null,"seconds":4.025176167488098e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.796875,"distances_sum":1333.73250066191}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8867450258075266,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2004.7171393517153}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8867450258075266,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2004.7171393517153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8867450258075266,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2004.7171393517153}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8056640625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8867450258075266,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8046875,"distances_sum":2004.7171393517153}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2822265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.1015625,"distances_sum":630.250915777071}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2822265625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2822265625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.1015625,"distances_sum":630.250915777071}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.34375,"distances_sum":943.3757295749948}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.59375,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.8515625,"distances_sum":1348.9917847288523}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.59375,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.8515625,"distances_sum":1348.9917847288523}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9253236346986357,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":2278.8665129812503}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7740833818958827,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.2734375,"distances_sum":1446.1070268569715}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8214920496170506,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.59375,"distances_sum":1656.5864936737535}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9253236346986357,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":2278.8665129812503}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8671875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.9253236346986357,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":2278.8665129812503}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":5.7421875,"distances_sum":852.747620801199}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.40234375,"f1":null,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":5.7421875,"distances_sum":852.747620801199}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":6.6328125,"distances_sum":1153.485596683303}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.556640625,"f1":null,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":6.6328125,"distances_sum":1153.485596683303}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6984718406593411,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":6.6484375,"distances_sum":1203.3785106901378}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.6984718406593411,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":6.6484375,"distances_sum":1203.3785106901378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.5576171875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.6984718406593411,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.6260892152786255e-6,"evaluations":6.6484375,"distances_sum":1203.3785106901378}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7059251512376518,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":7.1015625,"distances_sum":1211.0518342792277}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7853006368631376,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.0,"distances_sum":1520.3624776412519}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8362793456543465,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.203125,"distances_sum":1768.3627627998628}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8362793456543465,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.203125,"distances_sum":1768.3627627998628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8969124625374634,"seconds":6.623566150665283e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.5234375,"distances_sum":2077.4719552877123}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436641483516488,"seconds":6.988644599914551e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.765625,"distances_sum":2460.9725422801357}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8962610306360315,"seconds":6.644055247306824e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.4765625,"distances_sum":2113.6304732674134}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8976164460539466,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.4453125,"distances_sum":2110.079602022336}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9436641483516488,"seconds":6.988644599914551e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.765625,"distances_sum":2460.9725422801357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":7.791444659233093e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2685.1646520670056}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531307234432239,"seconds":7.193535566329956e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8125,"distances_sum":2531.6017262147757}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619619963369967,"seconds":7.124617695808411e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.890625,"distances_sum":2559.003515416717}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":7.791444659233093e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2685.1646520670056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417587,"seconds":7.791444659233093e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9296875,"distances_sum":2685.1646520670056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":5.6015625,"distances_sum":851.6238680836226}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3525390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3525390625,"f1":null,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":5.328125,"distances_sum":816.7136355035606}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.37890625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.37890625,"f1":null,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":5.6015625,"distances_sum":851.6238680836226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7661135739260748,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.4609375,"distances_sum":1473.883078321346}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8817135989010997,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.359375,"distances_sum":2020.7073553324472}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8834566475191484,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.390625,"distances_sum":2065.994156678623}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":6.6484375,"distances_sum":1176.8973601635862}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8353427822177829,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.953125,"distances_sum":1830.2857348819105}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8834566475191484,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.390625,"distances_sum":2065.994156678623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9454899267399273,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.6953125,"distances_sum":2471.284558860438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8950757575757585,"seconds":6.9607049226760864e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.359375,"distances_sum":2148.052778560935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667639652014655,"seconds":7.135793566703796e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.84375,"distances_sum":2611.68628162326}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563644688644696,"seconds":6.938353180885315e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.78125,"distances_sum":2542.4457353617104}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":7.113441824913025e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.875,"distances_sum":2619.571455365639}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9218063186813193,"seconds":6.852671504020691e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.578125,"distances_sum":2288.240039669629}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9300168581418585,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.6484375,"distances_sum":2337.6189380236274}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606258325008331,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.7890625,"distances_sum":2611.8501189740687}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8879896145521151,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.3828125,"distances_sum":2071.245577655308}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":7.113441824913025e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.875,"distances_sum":2619.571455365639}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675652472527476,"seconds":7.113441824913025e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.875,"distances_sum":2619.571455365639}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.776154401154402,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":7.3671875,"distances_sum":1547.616541004694}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":5.3671875,"distances_sum":879.0420301592087}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.776154401154402,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":7.3671875,"distances_sum":1547.616541004694}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9066485597735605,"seconds":6.670132279396057e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.328125,"distances_sum":2295.7180087874285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8897612803862812,"seconds":7.0426613092422485e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.328125,"distances_sum":2147.1732435663725}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9066485597735605,"seconds":6.670132279396057e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.328125,"distances_sum":2295.7180087874285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9506384240759246,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.7578125,"distances_sum":2592.6536134253774}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9446142399267405,"seconds":6.722286343574524e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.703125,"distances_sum":2572.114951594828}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9506384240759246,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.7578125,"distances_sum":2592.6536134253774}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9506384240759246,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.735985279083252e-6,"evaluations":8.7578125,"distances_sum":2592.6536134253774}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7899720071595079,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":7.625,"distances_sum":1490.9677676495787}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.529296875,"f1":0.6771338036963043,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":6.4296875,"distances_sum":1138.9811813987494}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":5.5703125,"distances_sum":829.3344228618022}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7899720071595079,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":7.625,"distances_sum":1490.9677676495787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9278044871794878,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.671875,"distances_sum":2302.6627051844607}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8927999084249092,"seconds":6.590038537979126e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.65625,"distances_sum":2051.567096328104}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8890801906426916,"seconds":7.4319541454315186e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.59375,"distances_sum":2036.782930323022}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8997944763569772,"seconds":4.449859261512756e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.703125,"distances_sum":2058.856085779816}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9278044871794878,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.671875,"distances_sum":2302.6627051844607}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9651842948717952,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.8515625,"distances_sum":2593.139355608249}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9430173992674,"seconds":7.411465048789978e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.8125,"distances_sum":2421.7469944244003}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646062271062275,"seconds":7.22147524356842e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.859375,"distances_sum":2590.9298828089036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9682151182151185,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9140625,"distances_sum":2608.0163280636702}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9566079753579756,"seconds":7.359310984611511e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.8125,"distances_sum":2538.660173087303}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577984515484521,"seconds":7.141381502151489e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.8203125,"distances_sum":2555.6211038286224}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9682151182151185,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9140625,"distances_sum":2608.0163280636702}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9682151182151185,"seconds":7.368624210357666e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9140625,"distances_sum":2608.0163280636702}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8496945762570771,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.21875,"distances_sum":1771.110538623825}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8496945762570771,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.21875,"distances_sum":1771.110538623825}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590862262737267,"seconds":7.243826985359192e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9609375,"distances_sum":2494.8223031771677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9217006951381959,"seconds":7.797032594680786e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.8671875,"distances_sum":2220.322585903419}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9590862262737267,"seconds":7.243826985359192e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9609375,"distances_sum":2494.8223031771677}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9675454753579759,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9609375,"distances_sum":2561.300564353692}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601991758241762,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9765625,"distances_sum":2493.119007642012}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96490956959707,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.984375,"distances_sum":2551.104731641456}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9675454753579759,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9609375,"distances_sum":2561.300564353692}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9675454753579759,"seconds":7.377937436103821e-6,"exhaustive_search_seconds":1.86823308467865e-6,"evaluations":8.9609375,"distances_sum":2561.300564353692}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.40625,"distances_sum":826.836620510611}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8609583125208133,"seconds":6.819143891334534e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":1802.1283118002407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8609583125208133,"seconds":6.819143891334534e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":1802.1283118002407}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8875145687645696,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":1948.9068038000873}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577094780219785,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":9.0,"distances_sum":2457.590902970532}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9507154304029308,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":2402.5245890916062}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638850732600737,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":9.0,"distances_sum":2493.995853765385}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638850732600737,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":9.0,"distances_sum":2493.995853765385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9634729853479856,"seconds":6.336718797683716e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.90625,"distances_sum":2531.2850062628745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9843406593406596,"seconds":7.111579179763794e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2672.2254539765636}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743875915750919,"seconds":7.420778274536133e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9921875,"distances_sum":2578.3861904536475}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764709249084254,"seconds":7.4803829193115234e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.96875,"distances_sum":2595.8879952192983}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729739010989014,"seconds":7.452443242073059e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9921875,"distances_sum":2571.0908660082914}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":7.5660645961761475e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":9.0,"distances_sum":2629.604082804007}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9843406593406596,"seconds":7.111579179763794e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2672.2254539765636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9843406593406596,"seconds":7.111579179763794e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2672.2254539765636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.953125,"distances_sum":600.9216299431735}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.953125,"distances_sum":650.2645084424637}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2666015625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2666015625,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.953125,"distances_sum":650.2645084424637}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":4.025176167488098e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.1171875,"distances_sum":677.2938327428689}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":5.953125,"distances_sum":918.0471587545477}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7258049242424249,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":6.875,"distances_sum":1296.579653872677}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8480691183816191,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.1875,"distances_sum":1807.3733140450183}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8480691183816191,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.1875,"distances_sum":1807.3733140450183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8519980019980027,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.203125,"distances_sum":1785.0306642015628}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8851596320346329,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.65625,"distances_sum":2070.023291016799}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8851596320346329,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.65625,"distances_sum":2070.023291016799}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8046875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8851596320346329,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.7508864402770996e-6,"evaluations":8.65625,"distances_sum":2070.023291016799}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8469676157176165,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":7.9140625,"distances_sum":1797.2301077181312}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8469676157176165,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":7.9140625,"distances_sum":1797.2301077181312}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9372653388278394,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.734375,"distances_sum":2387.92884830729}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9372653388278394,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.734375,"distances_sum":2387.92884830729}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960645604395605,"seconds":7.482245564460754e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.90625,"distances_sum":2552.461537667382}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9381784881784887,"seconds":8.713454008102417e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.65625,"distances_sum":2401.1736511270265}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.960645604395605,"seconds":7.482245564460754e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.90625,"distances_sum":2552.461537667382}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.960645604395605,"seconds":7.482245564460754e-6,"exhaustive_search_seconds":1.7564743757247925e-6,"evaluations":8.90625,"distances_sum":2552.461537667382}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7125931360306366,"seconds":7.269717752933502e-5,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":6.7890625,"distances_sum":1235.0837869516579}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5712890625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5712890625,"f1":0.7125931360306366,"seconds":7.269717752933502e-5,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":6.7890625,"distances_sum":1235.0837869516579}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8307765151515158,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.3671875,"distances_sum":1641.525932573408}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.65625,"f1":null,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":7.015625,"distances_sum":1512.6270381592878}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.724609375,"f1":0.8307765151515158,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.3671875,"distances_sum":1641.525932573408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8904709873459881,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.78125,"distances_sum":1948.5110825655179}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.895186584249085,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.8984375,"distances_sum":1968.5568765035678}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.927733204295705,"seconds":6.819143891334534e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.8515625,"distances_sum":2214.635331773963}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9527446511821516,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.875,"distances_sum":2397.4952793115717}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9527446511821516,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.875,"distances_sum":2397.4952793115717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9527446511821516,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":3.4999102354049683e-6,"evaluations":8.875,"distances_sum":2397.4952793115717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.982421875,"recall":0.5361328125,"f1":0.6804505390442896,"seconds":9.20519232749939e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.7421875,"distances_sum":1140.9013347114367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9934151785714286,"recall":0.6904296875,"f1":0.8038050491175497,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.3203125,"distances_sum":1607.3559696849288}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":9.125098586082458e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.8203125,"distances_sum":831.3991923371104}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9934151785714286,"recall":0.6904296875,"f1":0.8038050491175497,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.3203125,"distances_sum":1607.3559696849288}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.993350074404762,"recall":0.869140625,"f1":0.9222878033424915,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.609375,"distances_sum":2349.4838834847174}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9882347470238095,"recall":0.81640625,"f1":0.887579672931236,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.15625,"distances_sum":2082.081452312112}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.993350074404762,"recall":0.869140625,"f1":0.9222878033424915,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.609375,"distances_sum":2349.4838834847174}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.988467261904762,"recall":0.9296875,"f1":0.955030906593407,"seconds":7.912516593933105e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2613.8950076492306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":4,"bsize":12}, perf: {"precision":0.9899553571428572,"recall":0.9716796875,"f1":0.9798191391941393,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2744.740233066246}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":0.9899553571428572,"recall":0.9716796875,"f1":0.9798191391941393,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2744.740233066246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":0.9899553571428572,"recall":0.9716796875,"f1":0.9798191391941393,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":2744.740233066246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8606013777888787,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":7.984375,"distances_sum":1833.8825366463743}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":5.421875,"distances_sum":792.5490482858744}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8606013777888787,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":7.984375,"distances_sum":1833.8825366463743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8973672161172169,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.125,"distances_sum":2050.4677769999744}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8973672161172169,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.125,"distances_sum":2050.4677769999744}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9073832417582425,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.3515625,"distances_sum":2095.79649435653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521634615384619,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.7578125,"distances_sum":2420.2473109384287}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9227054195804204,"seconds":6.493180990219116e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.6015625,"distances_sum":2219.9473176675956}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9191194222444229,"seconds":7.3444098234176636e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.5234375,"distances_sum":2191.9900599730627}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521634615384619,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.7578125,"distances_sum":2420.2473109384287}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521634615384619,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":3.1962990760803223e-6,"evaluations":8.7578125,"distances_sum":2420.2473109384287}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8676630661005669,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.0390625,"distances_sum":1832.9836826838696}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8676630661005669,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.0390625,"distances_sum":1832.9836826838696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.904945575258076,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4453125,"distances_sum":2049.562155922492}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9567536630036634,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":2397.3832372506613}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9567536630036634,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":2397.3832372506613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9756696428571432,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2517.9618459489443}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":6.6980719566345215e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2500.6529552816633}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685668498168503,"seconds":6.5229833126068115e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.90625,"distances_sum":2478.014446253294}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9756696428571432,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2517.9618459489443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9756696428571432,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2517.9618459489443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.837672050172051,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.859375,"distances_sum":1748.5168912403333}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.837672050172051,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.859375,"distances_sum":1748.5168912403333}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9268601190476194,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6015625,"distances_sum":2227.2918667644185}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9268601190476194,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6015625,"distances_sum":2227.2918667644185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":2455.025421144008}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523122710622715,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.765625,"distances_sum":2409.713732061176}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":2455.025421144008}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":2455.025421144008}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.09375,"distances_sum":412.9129979895537}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.16796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.09375,"distances_sum":412.9129979895537}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":7.340684533119202e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.5078125,"distances_sum":759.9021097452903}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6939598595848601,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.40625,"distances_sum":1165.1415007687126}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.6939598595848601,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.40625,"distances_sum":1165.1415007687126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7034559190809196,"seconds":8.139759302139282e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.4921875,"distances_sum":1208.3431152190922}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.734375,"distances_sum":2293.444905134919}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8513526404151414,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2734375,"distances_sum":1730.8133883053004}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8796219405594414,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4375,"distances_sum":1882.4044828559313}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.704236735486736,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3671875,"distances_sum":1172.6748817528091}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.734375,"distances_sum":2293.444905134919}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9690476190476194,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2429.4538605383186}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618933150183154,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.859375,"distances_sum":2417.8128439918}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690476190476194,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2429.4538605383186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9690476190476194,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2429.4538605383186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.640625,"distances_sum":766.4341040085844}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8672650266400275,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.171875,"distances_sum":1822.1107842614754}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8672650266400275,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.171875,"distances_sum":1822.1107842614754}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9129302988677997,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3359375,"distances_sum":2166.093635637829}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609432234432239,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8203125,"distances_sum":2481.6506259505554}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609432234432239,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8203125,"distances_sum":2481.6506259505554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660370879120881,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2490.3348049189763}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2537.850194759289}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2491.887568650798}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2537.850194759289}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2537.850194759289}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.501953125,"f1":0.6567488067488073,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.0390625,"distances_sum":1103.4559302577077}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.21875,"distances_sum":435.08515688194876}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.501953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.501953125,"f1":0.6567488067488073,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.0390625,"distances_sum":1103.4559302577077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8269927988677997,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.34375,"distances_sum":1657.2884167622635}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406166749916757,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2260.0699160465283}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8010014291264298,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.015625,"distances_sum":1592.7804168887112}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.7979924589299598,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1484375,"distances_sum":1555.4078252143754}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9406166749916757,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2260.0699160465283}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622596153846158,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2398.342797175726}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9435554029304035,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2313.6904385993694}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2471.925257133617}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9481320762570766,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2364.805467003376}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2471.925257133617}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2471.925257133617}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6796875,"distances_sum":516.0590325408666}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.2726675271987915e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.7578125,"distances_sum":593.0518521125641}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8687791375291383,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1941.9775797027305}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8687791375291383,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1941.9775797027305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.917256181318682,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":2220.1936692159934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9145838536463544,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":2201.180081427661}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8714603105228116,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1937.1735103278818}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.917256181318682,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":2220.1936692159934}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9378891941391946,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":2377.164632424767}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528731684981688,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8359375,"distances_sum":2462.689941166285}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9528731684981688,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8359375,"distances_sum":2462.689941166285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9528731684981688,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8359375,"distances_sum":2462.689941166285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.4609375,"distances_sum":792.8097313814708}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5234375,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.8125,"distances_sum":1158.932867612399}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5263671875,"f1":0.6739822677322682,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.8203125,"distances_sum":1154.1843883564397}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5263671875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5263671875,"f1":0.6739822677322682,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.8203125,"distances_sum":1154.1843883564397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.9609375,"distances_sum":1207.893563020815}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7729425088800096,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.6953125,"distances_sum":1510.6752418870183}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7767538017538024,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.59375,"distances_sum":1536.5935403404865}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8444524225774235,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.8046875,"distances_sum":1848.4489782766177}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9134532134532145,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.2734375,"distances_sum":2249.119616247254}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9170787545787553,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3359375,"distances_sum":2215.013560719936}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7646702256077264,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.5859375,"distances_sum":1479.4930687315007}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9170787545787553,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3359375,"distances_sum":2215.013560719936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9353823260073264,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.53125,"distances_sum":2451.818861586102}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655682,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2562.6138832585907}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9422103937728943,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.65625,"distances_sum":2390.278255867808}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611727,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2547.275906908979}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9521634615384621,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7109375,"distances_sum":2519.4826076184954}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9463942307692313,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.671875,"distances_sum":2411.2586712542084}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655682,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2562.6138832585907}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655682,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.875,"distances_sum":2562.6138832585907}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8698811605061614,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":1904.2136328258337}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8698811605061614,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":1904.2136328258337}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9046339077589085,"seconds":6.8265944719314575e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.46875,"distances_sum":2100.556177712215}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9321173618048624,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2303.480369977458}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9321173618048624,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":2303.480369977458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617788461538468,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2495.330208706822}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2549.978581345296}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960030594405595,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2481.565930897762}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2549.978581345296}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669871794871798,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2549.978581345296}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.3046875,"distances_sum":863.4818896567324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5205078125,"f1":0.6708381895881901,"seconds":4.347413778305054e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4765625,"distances_sum":1148.0812430028984}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5205078125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5205078125,"f1":0.6708381895881901,"seconds":4.347413778305054e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4765625,"distances_sum":1148.0812430028984}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9245306776556782,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4921875,"distances_sum":2219.9157218481178}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9245306776556782,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4921875,"distances_sum":2219.9157218481178}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.951310668498169,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2373.625854178735}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951310668498169,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2373.625854178735}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.951310668498169,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2373.625854178735}}, n: 9
inertia(cfft.distances) = 18.52625396825397
inertia(cdnet.distances) = 25.507674771010326
inertia(crand.distances) = 20.35542507002801
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.928888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8555555555555555
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 2, 1, 3, 3, 2, 1, 3, 3, 3, 3, 3, 2, 2, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 10, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 2, 3, 3, 2, 3, 2, 2]
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.38966666937505473] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38966666937505473, 0.18046031864305512] ***
*** starting iteration: 2; err: [Inf, 0.38966666937505473, 0.18046031864305512] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245] ***
*** starting iteration: 3; err: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38966666937505473, 0.18046031864305512, 0.1693480246100245, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.1106194909171743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1106194909171743, 0.6337156052899562] ***
*** finished computation of 7 references, err: [Inf, 1.1106194909171743, 0.6337156052899562] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 31]]
** centroid: 2, normalized-entropy: 0.9998182469603427, [(2, 32), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [9, 1, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 9), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.274370629008499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.274370629008499, 0.18914180397729208] ***
*** finished computation of 7 references, err: [Inf, 0.274370629008499, 0.18914180397729208] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 8]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 10), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.373465495717678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.373465495717678, 0.2544606121835064] ***
*** finished computation of 7 references, err: [Inf, 0.373465495717678, 0.2544606121835064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.7005999737991893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7005999737991893, 0.9324552613692085] ***
*** starting iteration: 2; err: [Inf, 3.7005999737991893, 0.9324552613692085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7005999737991893, 0.9324552613692085, 0.6270157369199509] ***
*** starting iteration: 3; err: [Inf, 3.7005999737991893, 0.9324552613692085, 0.6270157369199509] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7005999737991893, 0.9324552613692085, 0.6270157369199509, 0.5771984640905611] ***
*** finished computation of 3 references, err: [Inf, 3.7005999737991893, 0.9324552613692085, 0.6270157369199509, 0.5771984640905611] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.168799997070941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.168799997070941, 0.5196231782778727] ***
*** starting iteration: 2; err: [Inf, 1.168799997070941, 0.5196231782778727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.168799997070941, 0.5196231782778727, 0.5035753205811769] ***
*** starting iteration: 3; err: [Inf, 1.168799997070941, 0.5196231782778727, 0.5035753205811769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.168799997070941, 0.5196231782778727, 0.5035753205811769, 0.5035753205811769] ***
*** finished computation of 3 references, err: [Inf, 1.168799997070941, 0.5196231782778727, 0.5035753205811769, 0.5035753205811769] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.36190007532317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.36190007532317, 2.413286588887419] ***
*** starting iteration: 2; err: [Inf, 10.36190007532317, 2.413286588887419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.36190007532317, 2.413286588887419, 1.2622252113462777] ***
*** starting iteration: 3; err: [Inf, 10.36190007532317, 2.413286588887419, 1.2622252113462777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.36190007532317, 2.413286588887419, 1.2622252113462777, 0.8005416611915469] ***
*** finished computation of 3 references, err: [Inf, 10.36190007532317, 2.413286588887419, 1.2622252113462777, 0.8005416611915469] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 4, 0]]
** centroid: 2, normalized-entropy: 0.4941829348497886, [(1, 33), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 25]]
** centroid: 3, normalized-entropy: 0.9976875760352552, [(2, 28), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.066303853714323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.066303853714323, 0.4978236897676023] ***
*** starting iteration: 2; err: [Inf, 1.066303853714323, 0.4978236897676023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.066303853714323, 0.4978236897676023, 0.3969076274076475] ***
*** starting iteration: 3; err: [Inf, 1.066303853714323, 0.4978236897676023, 0.3969076274076475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.066303853714323, 0.4978236897676023, 0.3969076274076475, 0.33607444236412876] ***
*** finished computation of 7 references, err: [Inf, 1.066303853714323, 0.4978236897676023, 0.3969076274076475, 0.33607444236412876] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 30]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 12), (3, 30)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6340890717951629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6340890717951629, 0.3555257942455401] ***
*** starting iteration: 2; err: [Inf, 0.6340890717951629, 0.3555257942455401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6340890717951629, 0.3555257942455401, 0.32218627976077413] ***
*** starting iteration: 3; err: [Inf, 0.6340890717951629, 0.3555257942455401, 0.32218627976077413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6340890717951629, 0.3555257942455401, 0.32218627976077413, 0.3142065063861862] ***
*** finished computation of 7 references, err: [Inf, 0.6340890717951629, 0.3555257942455401, 0.32218627976077413, 0.3142065063861862] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5774252003301769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5774252003301769, 0.2043819208579181] ***
*** starting iteration: 2; err: [Inf, 0.5774252003301769, 0.2043819208579181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5774252003301769, 0.2043819208579181, 0.15847173496925643] ***
*** starting iteration: 3; err: [Inf, 0.5774252003301769, 0.2043819208579181, 0.15847173496925643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5774252003301769, 0.2043819208579181, 0.15847173496925643, 0.15420779561630127] ***
*** finished computation of 7 references, err: [Inf, 0.5774252003301769, 0.2043819208579181, 0.15847173496925643, 0.15420779561630127] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 4, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 9.227099978434309] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.227099978434309, 1.1493165214569177] ***
*** finished computation of 3 references, err: [Inf, 9.227099978434309, 1.1493165214569177] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 31]]
** centroid: 2, normalized-entropy: 0.9992954443621548, [(2, 33), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.740200018512009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.740200018512009, 1.024503352106059] ***
*** finished computation of 3 references, err: [Inf, 2.740200018512009, 1.024503352106059] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 34]]
** centroid: 2, normalized-entropy: 0.9998484829291058, [(2, 35), (3, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.7117000008112635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.7117000008112635, 0.9483546453512436] ***
*** finished computation of 3 references, err: [Inf, 4.7117000008112635, 0.9483546453512436] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 12]]
** centroid: 2, normalized-entropy: 0.8904916402194913, [(2, 27), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 5, 0]]
** centroid: 3, normalized-entropy: 0.5617526078313283, [(1, 33), (2, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.993299951310605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.993299951310605, 0.839798245252554] ***
*** starting iteration: 2; err: [Inf, 6.993299951310605, 0.839798245252554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774] ***
*** starting iteration: 3; err: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916] ***
*** starting iteration: 4; err: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916, 0.5600271109005317] ***
*** starting iteration: 5; err: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916, 0.5600271109005317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916, 0.5600271109005317, 0.5600271109005317] ***
*** finished computation of 3 references, err: [Inf, 6.993299951310605, 0.839798245252554, 0.5785886369639774, 0.5610773916756916, 0.5600271109005317, 0.5600271109005317] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.589900017507818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.589900017507818, 0.9981948021237023] ***
*** starting iteration: 2; err: [Inf, 2.589900017507818, 0.9981948021237023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998] ***
*** starting iteration: 3; err: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052] ***
*** starting iteration: 4; err: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052, 0.9884940851858302] ***
*** starting iteration: 5; err: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052, 0.9884940851858302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052, 0.9884940851858302, 0.9881371109524983] ***
*** finished computation of 3 references, err: [Inf, 2.589900017507818, 0.9981948021237023, 0.9929311040359998, 0.9897099128268052, 0.9884940851858302, 0.9881371109524983] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 1, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 13), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 34]]
** centroid: 3, normalized-entropy: 1.0, [(2, 34), (3, 34)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.6349000044541375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556] ***
*** starting iteration: 2; err: [Inf, 4.6349000044541375, 1.828461709170556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356] ***
*** starting iteration: 3; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821] ***
*** starting iteration: 4; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349] ***
*** starting iteration: 5; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921] ***
*** starting iteration: 6; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662] ***
*** starting iteration: 7; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662, 0.5004200113314299] ***
*** starting iteration: 8; err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662, 0.5004200113314299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662, 0.5004200113314299, 0.5004200113314299] ***
*** finished computation of 3 references, err: [Inf, 4.6349000044541375, 1.828461709170556, 0.969208330089356, 0.648864675394821, 0.561711855104349, 0.5160594650753921, 0.5050737415480662, 0.5004200113314299, 0.5004200113314299] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9836999870364893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9836999870364893, 0.591100104773857] ***
*** finished computation of 3 references, err: [Inf, 0.9836999870364893, 0.591100104773857] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 30]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 13), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.713500018781471] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.713500018781471, 1.0108413795411983] ***
*** finished computation of 3 references, err: [Inf, 1.713500018781471, 1.0108413795411983] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 1, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 15), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 34]]
** centroid: 3, normalized-entropy: 1.0, [(2, 34), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7376000044815393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7376000044815393, 0.5050456047965842] ***
*** finished computation of 3 references, err: [Inf, 0.7376000044815393, 0.5050456047965842] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.971680241727273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.971680241727273, 0.4339668967854027] ***
*** starting iteration: 2; err: [Inf, 0.971680241727273, 0.4339668967854027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.971680241727273, 0.4339668967854027, 0.25461725328785983] ***
*** starting iteration: 3; err: [Inf, 0.971680241727273, 0.4339668967854027, 0.25461725328785983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.971680241727273, 0.4339668967854027, 0.25461725328785983, 0.24024194913563474] ***
*** finished computation of 7 references, err: [Inf, 0.971680241727273, 0.4339668967854027, 0.25461725328785983, 0.24024194913563474] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 9]]
** centroid: 1, normalized-entropy: 0.8691375806126381, [(2, 22), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9535081654901909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9535081654901909, 0.3193293321869058] ***
*** starting iteration: 2; err: [Inf, 0.9535081654901909, 0.3193293321869058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9535081654901909, 0.3193293321869058, 0.2661091186065131] ***
*** starting iteration: 3; err: [Inf, 0.9535081654901909, 0.3193293321869058, 0.2661091186065131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9535081654901909, 0.3193293321869058, 0.2661091186065131, 0.24869021149579662] ***
*** finished computation of 7 references, err: [Inf, 0.9535081654901909, 0.3193293321869058, 0.2661091186065131, 0.24869021149579662] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3518463038745728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3518463038745728, 0.2542537417234963] ***
*** starting iteration: 2; err: [Inf, 0.3518463038745728, 0.2542537417234963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3518463038745728, 0.2542537417234963, 0.23657291372190736] ***
*** starting iteration: 3; err: [Inf, 0.3518463038745728, 0.2542537417234963, 0.23657291372190736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3518463038745728, 0.2542537417234963, 0.23657291372190736, 0.22139499997132275] ***
*** finished computation of 7 references, err: [Inf, 0.3518463038745728, 0.2542537417234963, 0.23657291372190736, 0.22139499997132275] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 27, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 5, 24]]
** centroid: 6, normalized-entropy: 0.6631968402398286, [(2, 5), (3, 24)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8655000019535154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129] ***
*** starting iteration: 2; err: [Inf, 0.8655000019535154, 0.6091320925300129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399] ***
*** starting iteration: 3; err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225] ***
*** starting iteration: 4; err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884] ***
*** starting iteration: 5; err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675] ***
*** starting iteration: 6; err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675, 0.4610326670088667] ***
*** starting iteration: 7; err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675, 0.4610326670088667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675, 0.4610326670088667, 0.4610326670088667] ***
*** finished computation of 7 references, err: [Inf, 0.8655000019535154, 0.6091320925300129, 0.5267711071601399, 0.48756607459143225, 0.46696538881046884, 0.46208294778402675, 0.4610326670088667, 0.4610326670088667] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8966000016037695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731] ***
*** starting iteration: 2; err: [Inf, 0.8966000016037695, 0.5187314223879731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895] ***
*** starting iteration: 3; err: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733] ***
*** starting iteration: 4; err: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256] ***
*** starting iteration: 5; err: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256, 0.4426780814978551] ***
*** starting iteration: 6; err: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256, 0.4426780814978551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256, 0.4426780814978551, 0.4423734634024622] ***
*** finished computation of 7 references, err: [Inf, 0.8966000016037695, 0.5187314223879731, 0.475890076683895, 0.4516875279325733, 0.44414577991789256, 0.4426780814978551, 0.4423734634024622] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.759999990863898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525] ***
*** starting iteration: 2; err: [Inf, 4.759999990863898, 1.233286919165525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062] ***
*** starting iteration: 3; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794] ***
*** starting iteration: 4; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895] ***
*** starting iteration: 5; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901] ***
*** starting iteration: 6; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033] ***
*** starting iteration: 7; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033, 0.2439767691073601] ***
*** starting iteration: 8; err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033, 0.2439767691073601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033, 0.2439767691073601, 0.2436467889474249] ***
*** finished computation of 7 references, err: [Inf, 4.759999990863898, 1.233286919165525, 0.5060291754592062, 0.3303796430534794, 0.2779958329804895, 0.2578184003475901, 0.2475658412947033, 0.2439767691073601, 0.2436467889474249] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0705649678757017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822] ***
*** starting iteration: 2; err: [Inf, 1.0705649678757017, 0.3994831074353822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693] ***
*** starting iteration: 3; err: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693, 0.39204446561165623] ***
*** finished computation of 3 references, err: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693, 0.39204446561165623] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7048130886871108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7048130886871108, 0.3940631487347918] ***
*** starting iteration: 2; err: [Inf, 0.7048130886871108, 0.3940631487347918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7048130886871108, 0.3940631487347918, 0.36499592264542113] ***
*** starting iteration: 3; err: [Inf, 0.7048130886871108, 0.3940631487347918, 0.36499592264542113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7048130886871108, 0.3940631487347918, 0.36499592264542113, 0.34770370182106475] ***
*** finished computation of 3 references, err: [Inf, 0.7048130886871108, 0.3940631487347918, 0.36499592264542113, 0.34770370182106475] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7760896552106279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760896552106279, 0.382507384710988] ***
*** starting iteration: 2; err: [Inf, 0.7760896552106279, 0.382507384710988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760896552106279, 0.382507384710988, 0.3614654996616736] ***
*** starting iteration: 3; err: [Inf, 0.7760896552106279, 0.382507384710988, 0.3614654996616736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7760896552106279, 0.382507384710988, 0.3614654996616736, 0.3558364345786073] ***
*** finished computation of 3 references, err: [Inf, 0.7760896552106279, 0.382507384710988, 0.3614654996616736, 0.3558364345786073] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8571000012568561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8571000012568561, 0.5836545550451825] ***
*** starting iteration: 2; err: [Inf, 1.8571000012568561, 0.5836545550451825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234] ***
*** starting iteration: 3; err: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916] ***
*** starting iteration: 4; err: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916, 0.5600271109005317] ***
*** starting iteration: 5; err: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916, 0.5600271109005317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916, 0.5600271109005317, 0.5600271109005317] ***
*** finished computation of 3 references, err: [Inf, 1.8571000012568561, 0.5836545550451825, 0.5637707040552234, 0.5610773916756916, 0.5600271109005317, 0.5600271109005317] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2865000119841088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2865000119841088, 0.5657330700160957] ***
*** starting iteration: 2; err: [Inf, 1.2865000119841088, 0.5657330700160957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727] ***
*** starting iteration: 3; err: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727, 0.5035753205811769] ***
*** starting iteration: 4; err: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727, 0.5035753205811769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727, 0.5035753205811769, 0.5035753205811769] ***
*** finished computation of 3 references, err: [Inf, 1.2865000119841088, 0.5657330700160957, 0.5196231782778727, 0.5035753205811769, 0.5035753205811769] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0263000029205165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887] ***
*** starting iteration: 2; err: [Inf, 1.0263000029205165, 0.570279206107887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824] ***
*** starting iteration: 3; err: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269] ***
*** starting iteration: 4; err: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459] ***
*** starting iteration: 5; err: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459, 0.5122554504315936] ***
*** starting iteration: 6; err: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459, 0.5122554504315936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459, 0.5122554504315936, 0.5114046693005918] ***
*** finished computation of 3 references, err: [Inf, 1.0263000029205165, 0.570279206107887, 0.533049806326824, 0.520231833342269, 0.5135296061380459, 0.5122554504315936, 0.5114046693005918] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 34]]
** centroid: 1, normalized-entropy: 0.552495114325111, [(2, 5), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.42770000368331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42770000368331, 0.5725580443578397] ***
*** starting iteration: 2; err: [Inf, 1.42770000368331, 0.5725580443578397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42770000368331, 0.5725580443578397, 0.5610773916756916] ***
*** starting iteration: 3; err: [Inf, 1.42770000368331, 0.5725580443578397, 0.5610773916756916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42770000368331, 0.5725580443578397, 0.5610773916756916, 0.5600271109005317] ***
*** finished computation of 3 references, err: [Inf, 1.42770000368331, 0.5725580443578397, 0.5610773916756916, 0.5600271109005317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5054999983493906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5054999983493906, 0.5325707348201596] ***
*** starting iteration: 2; err: [Inf, 1.5054999983493906, 0.5325707348201596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5054999983493906, 0.5325707348201596, 0.5100807950371525] ***
*** starting iteration: 3; err: [Inf, 1.5054999983493906, 0.5325707348201596, 0.5100807950371525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5054999983493906, 0.5325707348201596, 0.5100807950371525, 0.5036375464924971] ***
*** finished computation of 3 references, err: [Inf, 1.5054999983493906, 0.5325707348201596, 0.5100807950371525, 0.5036375464924971] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8279999960540396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8279999960540396, 0.5253700225830058] ***
*** starting iteration: 2; err: [Inf, 1.8279999960540396, 0.5253700225830058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8279999960540396, 0.5253700225830058, 0.5072195634127918] ***
*** starting iteration: 3; err: [Inf, 1.8279999960540396, 0.5253700225830058, 0.5072195634127918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8279999960540396, 0.5253700225830058, 0.5072195634127918, 0.5025991890053505] ***
*** finished computation of 3 references, err: [Inf, 1.8279999960540396, 0.5253700225830058, 0.5072195634127918, 0.5025991890053505] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0705649678757017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822] ***
*** starting iteration: 2; err: [Inf, 1.0705649678757017, 0.3994831074353822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693] ***
*** starting iteration: 3; err: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693, 0.39204446561165623] ***
*** finished computation of 3 references, err: [Inf, 1.0705649678757017, 0.3994831074353822, 0.3927229123077693, 0.39204446561165623] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6753458760006639] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572] ***
*** starting iteration: 2; err: [Inf, 0.6753458760006639, 0.4122012685849572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975] ***
*** starting iteration: 3; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396] ***
*** starting iteration: 4; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094] ***
*** starting iteration: 5; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864] ***
*** starting iteration: 6; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027] ***
*** starting iteration: 7; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027, 0.3482556590362108] ***
*** starting iteration: 8; err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027, 0.3482556590362108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027, 0.3482556590362108, 0.34770370182106475] ***
*** finished computation of 3 references, err: [Inf, 0.6753458760006639, 0.4122012685849572, 0.3884290563975975, 0.3736129806172396, 0.3582484715117094, 0.3508055495498864, 0.34949491665111027, 0.3482556590362108, 0.34770370182106475] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8157685968928348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206] ***
*** starting iteration: 2; err: [Inf, 0.8157685968928348, 0.42027294759972206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374] ***
*** starting iteration: 3; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736] ***
*** starting iteration: 4; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073] ***
*** starting iteration: 5; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766] ***
*** starting iteration: 6; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594] ***
*** starting iteration: 7; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594, 0.35019940241547504] ***
*** starting iteration: 8; err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594, 0.35019940241547504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594, 0.35019940241547504, 0.3495241055045608] ***
*** finished computation of 3 references, err: [Inf, 0.8157685968928348, 0.42027294759972206, 0.3839185582901374, 0.3614654996616736, 0.3558364345786073, 0.35297966564722766, 0.35133808837191594, 0.35019940241547504, 0.3495241055045608] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 6]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0896840959548186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0896840959548186, 0.3994831074353822] ***
*** finished computation of 3 references, err: [Inf, 1.0896840959548186, 0.3994831074353822] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2892509331961564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2892509331961564, 0.36704588798084886] ***
*** finished computation of 3 references, err: [Inf, 1.2892509331961564, 0.36704588798084886] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1127807299897332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1127807299897332, 0.35961770620378275] ***
*** finished computation of 3 references, err: [Inf, 1.1127807299897332, 0.35961770620378275] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.553700004842046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.553700004842046, 0.2575622113389168] ***
*** starting iteration: 2; err: [Inf, 0.553700004842046, 0.2575622113389168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397] ***
*** starting iteration: 3; err: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127] ***
*** starting iteration: 4; err: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127, 0.22632682311295643] ***
*** starting iteration: 5; err: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127, 0.22632682311295643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127, 0.22632682311295643, 0.22632682311295643] ***
*** finished computation of 7 references, err: [Inf, 0.553700004842046, 0.2575622113389168, 0.23643255002971397, 0.2276422971544127, 0.22632682311295643, 0.22632682311295643] ***
*** center 1: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 3, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6049000064006362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6049000064006362, 0.25941480889294605] ***
*** starting iteration: 2; err: [Inf, 0.6049000064006362, 0.25941480889294605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816] ***
*** starting iteration: 3; err: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816, 0.24089791618884124] ***
*** starting iteration: 4; err: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816, 0.24089791618884124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816, 0.24089791618884124, 0.24089791618884124] ***
*** finished computation of 7 references, err: [Inf, 0.6049000064006362, 0.25941480889294605, 0.246381871155816, 0.24089791618884124, 0.24089791618884124] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 6, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40890000660617476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40890000660617476, 0.2552778164278308] ***
*** starting iteration: 2; err: [Inf, 0.40890000660617476, 0.2552778164278308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495] ***
*** starting iteration: 3; err: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495, 0.23490120824720484] ***
*** starting iteration: 4; err: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495, 0.23490120824720484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495, 0.23490120824720484, 0.23490120824720484] ***
*** finished computation of 7 references, err: [Inf, 0.40890000660617476, 0.2552778164278308, 0.2387910286550495, 0.23490120824720484, 0.23490120824720484] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4068929293654411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4068929293654411, 0.1747134140309088] ***
*** starting iteration: 2; err: [Inf, 0.4068929293654411, 0.1747134140309088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905] ***
*** starting iteration: 3; err: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425] ***
*** starting iteration: 4; err: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425, 0.16140186959631211] ***
*** starting iteration: 5; err: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425, 0.16140186959631211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425, 0.16140186959631211, 0.16140186959631211] ***
*** finished computation of 7 references, err: [Inf, 0.4068929293654411, 0.1747134140309088, 0.1648235600114905, 0.16254919488187425, 0.16140186959631211, 0.16140186959631211] ***
*** center 1: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3036086923237333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3036086923237333, 0.19877085674034184] ***
*** starting iteration: 2; err: [Inf, 0.3036086923237333, 0.19877085674034184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542] ***
*** starting iteration: 3; err: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542, 0.19037154656452887] ***
*** starting iteration: 4; err: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542, 0.19037154656452887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542, 0.19037154656452887, 0.18967435164354438] ***
*** finished computation of 7 references, err: [Inf, 0.3036086923237333, 0.19877085674034184, 0.19240607657572542, 0.19037154656452887, 0.18967435164354438] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 7, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31501411658845524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31501411658845524, 0.1689722722420312] ***
*** starting iteration: 2; err: [Inf, 0.31501411658845524, 0.1689722722420312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409] ***
*** starting iteration: 3; err: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409, 0.15289018333615265] ***
*** starting iteration: 4; err: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409, 0.15289018333615265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409, 0.15289018333615265, 0.15289018333615265] ***
*** finished computation of 7 references, err: [Inf, 0.31501411658845524, 0.1689722722420312, 0.1566704461955409, 0.15289018333615265, 0.15289018333615265] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 11]]
** centroid: 6, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5041000042202772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5041000042202772, 0.2770569800331626] ***
*** finished computation of 7 references, err: [Inf, 0.5041000042202772, 0.2770569800331626] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5601000056972019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5601000056972019, 0.270955347959187] ***
*** finished computation of 7 references, err: [Inf, 0.5601000056972019, 0.270955347959187] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4260000062774529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4260000062774529, 0.24589327974663436] ***
*** finished computation of 7 references, err: [Inf, 0.4260000062774529, 0.24589327974663436] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 12]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 8), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.39744380900888815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744380900888815, 0.19623180485689606] ***
*** starting iteration: 2; err: [Inf, 0.39744380900888815, 0.19623180485689606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672] ***
*** starting iteration: 3; err: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672, 0.17882879203762816] ***
*** starting iteration: 4; err: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672, 0.17882879203762816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672, 0.17882879203762816, 0.17883776557940453] ***
*** finished computation of 7 references, err: [Inf, 0.39744380900888815, 0.19623180485689606, 0.18090716903969672, 0.17882879203762816, 0.17883776557940453] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49198436023370207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49198436023370207, 0.19481638137685503] ***
*** starting iteration: 2; err: [Inf, 0.49198436023370207, 0.19481638137685503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585] ***
*** starting iteration: 3; err: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171] ***
*** starting iteration: 4; err: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171, 0.17031690891500284] ***
*** starting iteration: 5; err: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171, 0.17031690891500284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171, 0.17031690891500284, 0.1698318258757768] ***
*** finished computation of 7 references, err: [Inf, 0.49198436023370207, 0.19481638137685503, 0.18399599003491585, 0.17564884572001171, 0.17031690891500284, 0.1698318258757768] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 4]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2448858244932612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2448858244932612, 0.15973869870454366] ***
*** starting iteration: 2; err: [Inf, 0.2448858244932612, 0.15973869870454366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398] ***
*** starting iteration: 3; err: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398, 0.15087423129474967] ***
*** starting iteration: 4; err: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398, 0.15087423129474967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398, 0.15087423129474967, 0.1508804666359924] ***
*** finished computation of 7 references, err: [Inf, 0.2448858244932612, 0.15973869870454366, 0.1521222782379398, 0.15087423129474967, 0.1508804666359924] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 7]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.46089999962232286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46089999962232286, 0.30345537337851075] ***
*** starting iteration: 2; err: [Inf, 0.46089999962232286, 0.30345537337851075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46089999962232286, 0.30345537337851075, 0.26472220843353433] ***
*** starting iteration: 3; err: [Inf, 0.46089999962232286, 0.30345537337851075, 0.26472220843353433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46089999962232286, 0.30345537337851075, 0.26472220843353433, 0.25744099146078325] ***
*** finished computation of 7 references, err: [Inf, 0.46089999962232286, 0.30345537337851075, 0.26472220843353433, 0.25744099146078325] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6326000083082615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6326000083082615, 0.3783916375242056] ***
*** starting iteration: 2; err: [Inf, 0.6326000083082615, 0.3783916375242056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6326000083082615, 0.3783916375242056, 0.3064332700968434] ***
*** starting iteration: 3; err: [Inf, 0.6326000083082615, 0.3783916375242056, 0.3064332700968434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6326000083082615, 0.3783916375242056, 0.3064332700968434, 0.29783639256218547] ***
*** finished computation of 7 references, err: [Inf, 0.6326000083082615, 0.3783916375242056, 0.3064332700968434, 0.29783639256218547] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36420000361135846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36420000361135846, 0.30316477711149664] ***
*** starting iteration: 2; err: [Inf, 0.36420000361135846, 0.30316477711149664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36420000361135846, 0.30316477711149664, 0.29035277597073295] ***
*** starting iteration: 3; err: [Inf, 0.36420000361135846, 0.30316477711149664, 0.29035277597073295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36420000361135846, 0.30316477711149664, 0.29035277597073295, 0.28356444863101155] ***
*** finished computation of 7 references, err: [Inf, 0.36420000361135846, 0.30316477711149664, 0.29035277597073295, 0.28356444863101155] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35289391556291194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35289391556291194, 0.2089827084583871] ***
*** starting iteration: 2; err: [Inf, 0.35289391556291194, 0.2089827084583871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35289391556291194, 0.2089827084583871, 0.1940138864442299] ***
*** starting iteration: 3; err: [Inf, 0.35289391556291194, 0.2089827084583871, 0.1940138864442299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35289391556291194, 0.2089827084583871, 0.1940138864442299, 0.18898777698750358] ***
*** finished computation of 7 references, err: [Inf, 0.35289391556291194, 0.2089827084583871, 0.1940138864442299, 0.18898777698750358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 22]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 4), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.348511954418514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.348511954418514, 0.22903790289222145] ***
*** starting iteration: 2; err: [Inf, 0.348511954418514, 0.22903790289222145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.348511954418514, 0.22903790289222145, 0.21914594559632725] ***
*** starting iteration: 3; err: [Inf, 0.348511954418514, 0.22903790289222145, 0.21914594559632725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.348511954418514, 0.22903790289222145, 0.21914594559632725, 0.21777395103801875] ***
*** finished computation of 7 references, err: [Inf, 0.348511954418514, 0.22903790289222145, 0.21914594559632725, 0.21777395103801875] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 10]]
** centroid: 4, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3230358248302522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3230358248302522, 0.21309678789526149] ***
*** starting iteration: 2; err: [Inf, 0.3230358248302522, 0.21309678789526149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3230358248302522, 0.21309678789526149, 0.21138723910873794] ***
*** starting iteration: 3; err: [Inf, 0.3230358248302522, 0.21309678789526149, 0.21138723910873794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3230358248302522, 0.21309678789526149, 0.21138723910873794, 0.2098127958727607] ***
*** finished computation of 7 references, err: [Inf, 0.3230358248302522, 0.21309678789526149, 0.21138723910873794, 0.2098127958727607] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 19]]
** centroid: 7, normalized-entropy: 0.9629004147713269, [(2, 12), (3, 19)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5816000068490297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000068490297, 0.25815356146616936] ***
*** starting iteration: 2; err: [Inf, 0.5816000068490297, 0.25815356146616936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643] ***
*** starting iteration: 3; err: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643, 0.22732168576205228] ***
*** starting iteration: 4; err: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643, 0.22732168576205228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643, 0.22732168576205228, 0.22632682311295643] ***
*** finished computation of 7 references, err: [Inf, 0.5816000068490297, 0.25815356146616936, 0.2340209450844643, 0.22732168576205228, 0.22632682311295643] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 6, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5873999994021356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937] ***
*** starting iteration: 2; err: [Inf, 0.5873999994021356, 0.26401292061249937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674] ***
*** starting iteration: 3; err: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433] ***
*** starting iteration: 4; err: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252] ***
*** starting iteration: 5; err: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252, 0.23427343976839385] ***
*** starting iteration: 6; err: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252, 0.23427343976839385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252, 0.23427343976839385, 0.23374500399142314] ***
*** finished computation of 7 references, err: [Inf, 0.5873999994021356, 0.26401292061249937, 0.25018611993012674, 0.24102060063621433, 0.23593376637243252, 0.23427343976839385, 0.23374500399142314] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 4]]
** centroid: 4, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5039000047265874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5039000047265874, 0.24450852381974703] ***
*** starting iteration: 2; err: [Inf, 0.5039000047265874, 0.24450852381974703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382] ***
*** starting iteration: 3; err: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382, 0.22049333832136198] ***
*** starting iteration: 4; err: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382, 0.22049333832136198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382, 0.22049333832136198, 0.22049333832136198] ***
*** finished computation of 7 references, err: [Inf, 0.5039000047265874, 0.24450852381974703, 0.22326842240442382, 0.22049333832136198, 0.22049333832136198] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 12]]
** centroid: 6, normalized-entropy: 0.9986359641585719, [(2, 11), (3, 12)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.422199997461182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.422199997461182, 0.7156623158823463] ***
*** starting iteration: 2; err: [Inf, 1.422199997461182, 0.7156623158823463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.422199997461182, 0.7156623158823463, 0.6221201583190825] ***
*** starting iteration: 3; err: [Inf, 1.422199997461182, 0.7156623158823463, 0.6221201583190825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.422199997461182, 0.7156623158823463, 0.6221201583190825, 0.5725580443578397] ***
*** finished computation of 3 references, err: [Inf, 1.422199997461182, 0.7156623158823463, 0.6221201583190825, 0.5725580443578397] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4469000036984396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4469000036984396, 0.5618620248764665] ***
*** starting iteration: 2; err: [Inf, 1.4469000036984396, 0.5618620248764665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4469000036984396, 0.5618620248764665, 0.5288165209705192] ***
*** starting iteration: 3; err: [Inf, 1.4469000036984396, 0.5618620248764665, 0.5288165209705192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4469000036984396, 0.5618620248764665, 0.5288165209705192, 0.5100807950371525] ***
*** finished computation of 3 references, err: [Inf, 1.4469000036984396, 0.5618620248764665, 0.5288165209705192, 0.5100807950371525] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.254200009036433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.254200009036433, 0.6080414682217357] ***
*** starting iteration: 2; err: [Inf, 1.254200009036433, 0.6080414682217357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.254200009036433, 0.6080414682217357, 0.5542870390445336] ***
*** starting iteration: 3; err: [Inf, 1.254200009036433, 0.6080414682217357, 0.5542870390445336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.254200009036433, 0.6080414682217357, 0.5542870390445336, 0.5160594650753921] ***
*** finished computation of 3 references, err: [Inf, 1.254200009036433, 0.6080414682217357, 0.5542870390445336, 0.5160594650753921] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6990323654803745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6990323654803745, 0.44022932334925235] ***
*** starting iteration: 2; err: [Inf, 0.6990323654803745, 0.44022932334925235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6990323654803745, 0.44022932334925235, 0.4109980480900737] ***
*** starting iteration: 3; err: [Inf, 0.6990323654803745, 0.44022932334925235, 0.4109980480900737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6990323654803745, 0.44022932334925235, 0.4109980480900737, 0.3974153405528057] ***
*** finished computation of 3 references, err: [Inf, 0.6990323654803745, 0.44022932334925235, 0.4109980480900737, 0.3974153405528057] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1270609681697994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1270609681697994, 0.36704588798084886] ***
*** starting iteration: 2; err: [Inf, 1.1270609681697994, 0.36704588798084886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1270609681697994, 0.36704588798084886, 0.3493908240459278] ***
*** starting iteration: 3; err: [Inf, 1.1270609681697994, 0.36704588798084886, 0.3493908240459278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1270609681697994, 0.36704588798084886, 0.3493908240459278, 0.34770370182106475] ***
*** finished computation of 3 references, err: [Inf, 1.1270609681697994, 0.36704588798084886, 0.3493908240459278, 0.34770370182106475] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5861158527589164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861158527589164, 0.3793681492772039] ***
*** starting iteration: 2; err: [Inf, 0.5861158527589164, 0.3793681492772039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861158527589164, 0.3793681492772039, 0.3596890445060001] ***
*** starting iteration: 3; err: [Inf, 0.5861158527589164, 0.3793681492772039, 0.3596890445060001] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5861158527589164, 0.3793681492772039, 0.3596890445060001, 0.3522025492077294] ***
*** finished computation of 3 references, err: [Inf, 0.5861158527589164, 0.3793681492772039, 0.3596890445060001, 0.3522025492077294] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 35]]
** centroid: 1, normalized-entropy: 0.6006085754131871, [(2, 6), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 0]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2) => 0.9733333333333333
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.773076923076923, 3.180769230769231, 1.4192307692307689, 0.2076923076923078], [7.6000000000000005, 3.216666666666667, 6.366666666666667, 2.0500000000000003], [5.700000000000001, 2.685714285714286, 4.228571428571429, 1.3214285714285714], [6.441666666666666, 2.9333333333333336, 4.675000000000001, 1.425], [5.9875, 2.75, 4.9875, 1.8375000000000001], [5.225, 2.4499999999999997, 3.5124999999999997, 1.1125], [5.42, 3.84, 1.56, 0.29000000000000004], [6.550000000000001, 3.04375, 5.4624999999999995, 2.1437500000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.562500000000002, 3.0375, 5.60625, 2.06875], [5.0838709677419365, 3.4516129032258065, 1.4645161290322577, 0.25483870967741945], [5.475, 2.4875, 3.775, 1.1125], [7.525, 2.775, 6.500000000000001, 1.9999999999999998], [5.627272727272727, 2.809090909090909, 4.218181818181818, 1.3454545454545455], [7.5, 3.6000000000000005, 6.3, 2.125], [6.370588235294116, 2.9176470588235297, 4.611764705882353, 1.4647058823529409], [5.944444444444445, 2.6888888888888887, 4.955555555555556, 1.8444444444444446]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.215, 3.6199999999999997, 1.51, 0.29500000000000004], [7.675, 2.85, 6.575000000000001, 2.175], [5.886666666666668, 2.7066666666666666, 4.320000000000001, 1.3], [6.710526315789475, 3.115789473684211, 5.6684210526315795, 2.168421052631579], [5.3428571428571425, 2.4571428571428577, 3.542857142857143, 1.1142857142857143], [6.436363636363635, 3.0545454545454547, 4.7272727272727275, 1.5545454545454545], [6.172727272727272, 2.8454545454545457, 5.109090909090909, 1.8454545454545452], [4.646153846153846, 3.176923076923077, 1.4076923076923076, 0.17692307692307693]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 2, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[39, 17, 1, 1, 32, 1, 1, 32, 22, 23, 15, 26, 29, 3, 25, 11, 28, 28, 18, 21, 30, 33, 21, 18, 6, 38, 42, 41, 29, 21, 18, 37, 29, 25, 46, 26, 3, 3, 22, 31, 29, 26, 17, 43, 3, 20, 25, 6, 23, 26, 12, 38, 24, 16, 37, 39, 32, 30, 30, 19, 29, 27, 17, 41, 52, 15, 2, 37, 38, 1, 26, 31, 41, 67, 44, 19, 42, 19, 31, 54, 31, 4, 38, 54, 31, 40, 39, 45, 43, 25, 37, 25, 30, 47, 43, 41, 60, 23, 51, 1, 33, 35, 26, 35, 33, 49, 80, 33, 42, 50, 40, 48, 24, 1, 42, 28, 65, 48, 20, 32, 40, 33, 33, 42, 32, 45, 22, 32, 35, 44, 31, 29, 1, 39, 26, 31, 40, 39, 32, 1, 14, 1, 30, 49, 38, 41, 21, 24, 49, 43, 51, 83, 49, 35, 29, 14, 41, 29, 33, 28, 31, 15, 28, 34, 38, 22, 36, 67, 42, 34, 38, 29, 36, 63, 36, 39, 23, 19, 20, 35, 45, 41, 26, 35, 44, 26, 34, 47, 29, 53, 30, 49, 37, 29, 54, 46, 31, 34, 53, 59, 33, 22, 61, 51, 49, 33, 20, 39, 40, 26, 38, 15, 29, 29, 36, 34, 39, 38, 43, 41, 27, 10, 42, 37, 23, 34, 9, 37, 83, 16, 51, 76, 23, 33, 59, 37, 44, 54, 24, 47, 33, 34, 53, 42, 53, 28, 23, 29, 25, 18, 39, 13, 27, 64, 38, 49, 43, 32, 39, 49, 47, 47, 47, 42, 2, 32, 31, 42, 52, 50, 42, 43, 23, 60, 54, 25, 36, 35, 63, 18, 39, 44, 29, 43, 40, 19, 28, 47, 36, 39, 30, 45, 28, 29, 49, 32, 38, 15, 24, 34]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5980000000000001, speedup = 0.3521022304673808, eval_ratio = 0.041531)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39019097222222243,"recall":0.38975694444444464,"f1":null,"seconds":9.308941662311554e-5,"exhaustive_search_seconds":0.000871025025844574,"evaluations":339.1875,"distances_sum":1737.427754883905}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5590277777777776,"recall":0.5590277777777776,"f1":0.5590277777777776,"seconds":0.00019655190408229828,"exhaustive_search_seconds":0.000871025025844574,"evaluations":379.328125,"distances_sum":1619.0862905137487}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6501736111111104,"recall":0.6501736111111104,"f1":0.6501736111111104,"seconds":0.00012079067528247833,"exhaustive_search_seconds":0.000871025025844574,"evaluations":418.984375,"distances_sum":1578.792702661035}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7361111111111099,"recall":0.7361111111111099,"f1":0.7361111111111099,"seconds":0.00015380047261714935,"exhaustive_search_seconds":0.000871025025844574,"evaluations":460.484375,"distances_sum":1550.082740182944}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7881944444444432,"recall":0.7881944444444432,"f1":0.7881944444444432,"seconds":0.00017866678535938263,"exhaustive_search_seconds":0.000871025025844574,"evaluations":499.5,"distances_sum":1533.626417643227}
KCenters.DeloneInvIndex> reached performance {"precision":0.8315972222222211,"recall":0.8315972222222211,"f1":0.8315972222222211,"seconds":0.00020589493215084076,"exhaustive_search_seconds":0.000871025025844574,"evaluations":536.140625,"distances_sum":1522.7065157918366}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8039999999999995, speedup = 1.1092534861329006, eval_ratio = 0.053811000000000005)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
