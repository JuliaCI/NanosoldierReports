Julia Version 1.5.0-DEV.13
Commit dfcba8768f (2020-01-06 06:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed CustomUnitRanges ─ v0.2.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [dc8bdbbb] + CustomUnitRanges v0.2.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [dc8bdbbb] + CustomUnitRanges v0.2.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
   Testing CustomUnitRanges
  Updating `/tmp/jl_jXen6z/Project.toml`
 [no changes]
  Updating `/tmp/jl_jXen6z/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_jXen6z/Project.toml`
  [dc8bdbbb] CustomUnitRanges v0.2.0
  [8dfed614] Test 
Test Summary: | Pass  Total
ZeroRange     |   67     67
Test Summary: | Pass  Total
URange        |  112    112
┌ Warning: ZeroTo is deprecated, use ZeroRange instead
│   caller = ZeroTo(::Int64) at ZeroTo.jl:8
└ @ Main.ModZT ~/.julia/packages/CustomUnitRanges/GSpcD/src/ZeroTo.jl:8
   Testing CustomUnitRanges tests passed 
