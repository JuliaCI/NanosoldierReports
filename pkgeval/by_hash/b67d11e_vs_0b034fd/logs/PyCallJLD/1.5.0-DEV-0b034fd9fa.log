Julia Version 1.5.0-DEV.4
Commit 0b034fd9fa (2020-01-03 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed CMakeWrapper ─────── v0.2.3
 Installed URIParser ────────── v0.4.0
 Installed PyCallJLD ────────── v0.1.0
 Installed Compat ───────────── v2.2.0
 Installed JLD ──────────────── v0.9.1
 Installed FileIO ───────────── v1.2.1
 Installed HDF5 ─────────────── v0.12.5
 Installed DataStructures ───── v0.17.7
 Installed Parsers ──────────── v0.3.10
 Installed LegacyStrings ────── v0.4.1
 Installed Conda ────────────── v1.3.0
 Installed BinDeps ──────────── v1.0.0
 Installed BinaryProvider ───── v0.5.8
 Installed CMake ────────────── v1.1.2
 Installed VersionParsing ───── v1.2.0
 Installed PyCall ───────────── v1.91.2
 Installed Blosc ────────────── v0.5.1
 Installed Parameters ───────── v0.12.0
 Installed MacroTools ───────── v0.5.3
 Installed OrderedCollections ─ v1.1.0
 Installed JSON ─────────────── v0.21.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [de320387] + PyCallJLD v0.1.0
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [a74b3585] + Blosc v0.5.1
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.7
  [5789e2e9] + FileIO v1.2.1
  [f67ccb44] + HDF5 v0.12.5
  [4138dd39] + JLD v0.9.1
  [682c06a0] + JSON v0.21.0
  [1b4a561d] + LegacyStrings v0.4.1
  [1914dd2f] + MacroTools v0.5.3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [de320387] + PyCallJLD v0.1.0
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building CMake ─→ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Updating `/tmp/jl_Tq4ajw/Project.toml`
 [no changes]
  Updating `/tmp/jl_Tq4ajw/Manifest.toml`
 [no changes]
  Building Blosc ─→ `~/.julia/packages/Blosc/lzFr0/deps/build.log`
  Updating `/tmp/jl_M5Gk5T/Project.toml`
 [no changes]
  Updating `/tmp/jl_M5Gk5T/Manifest.toml`
 [no changes]
  Building HDF5 ──→ `~/.julia/packages/HDF5/Zh9on/deps/build.log`
  Updating `/tmp/jl_vqIbgl/Project.toml`
 [no changes]
  Updating `/tmp/jl_vqIbgl/Manifest.toml`
 [no changes]
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_UcxOga/Project.toml`
 [no changes]
  Updating `/tmp/jl_UcxOga/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_vdzv20/Project.toml`
 [no changes]
  Updating `/tmp/jl_vdzv20/Manifest.toml`
 [no changes]
   Testing PyCallJLD
  Updating `/tmp/jl_QHqQ7p/Project.toml`
 [no changes]
  Updating `/tmp/jl_QHqQ7p/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_QHqQ7p/Project.toml`
  [4138dd39] JLD v0.9.1
  [438e738f] PyCall v1.91.2
  [de320387] PyCallJLD v0.1.0
  [8dfed614] Test 
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = __init__() at PyCallJLD.jl:12
└ @ PyCallJLD ~/.julia/packages/PyCallJLD/Tfc36/src/PyCallJLD.jl:12
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = __init__() at PyCallJLD.jl:13
└ @ PyCallJLD ~/.julia/packages/PyCallJLD/Tfc36/src/PyCallJLD.jl:13
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = top-level scope at runtests.jl:6
└ @ Core ~/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl:6
Error During Test at /home/pkgeval/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl:11
  Test threw exception
  Expression: load(tmp, "x") == obj
  setfield! immutable struct of type PyObjectSerialization cannot be changed
  Stacktrace:
   [1] macro expansion at /home/pkgeval/.julia/packages/JLD/1BoSz/src/jld_types.jl:434 [inlined]
   [2] jlconvert(::Type{PyCallJLD.PyObjectSerialization}, ::JLD.JldFile, ::Ptr{UInt8}) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/jld_types.jl:560
   [3] read_scalar(::JLD.JldDataset, ::HDF5.HDF5Datatype, ::Type{T} where T) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:398
   [4] read(::JLD.JldDataset) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:370
   [5] read_ref(::JLD.JldFile, ::HDF5.HDF5ReferenceObj) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:502
   [6] read_refs(::JLD.JldDataset, ::Type{PyObject}, ::Int64, ::Int64, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:475
   [7] read_array(::JLD.JldDataset, ::HDF5.HDF5Datatype, ::Int64, ::Int64, ::Tuple{Int64}) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:409
   [8] read_array(::JLD.JldDataset, ::HDF5.HDF5Datatype, ::Int64, ::Int64) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:408
   [9] read(::JLD.JldDataset) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:372
   [10] read(::JLD.JldFile, ::String) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:346
   [11] #42 at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:1240 [inlined]
   [12] jldopen(::JLD.var"#42#43"{String}, ::String, ::Vararg{String,N} where N; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:246
   [13] jldopen at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:244 [inlined]
   [14] load at /home/pkgeval/.julia/packages/JLD/1BoSz/src/JLD.jl:1239 [inlined]
   [15] load(::String, ::String; options::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FileIO/I1ONY/src/loadsave.jl:118
   [16] load(::String, ::String) at /home/pkgeval/.julia/packages/FileIO/I1ONY/src/loadsave.jl:118
   [17] top-level scope at /home/pkgeval/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl:11
   [18] include(::String) at ./client.jl:439
   [19] top-level scope at none:6
   [20] eval(::Module, ::Any) at ./boot.jl:331
   [21] exec_options(::Base.JLOptions) at ./client.jl:264
   [22] _start() at ./client.jl:484
  
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl:8
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/PyCallJLD/Tfc36/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package PyCallJLD errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:292
 [11] top-level scope at none:12
