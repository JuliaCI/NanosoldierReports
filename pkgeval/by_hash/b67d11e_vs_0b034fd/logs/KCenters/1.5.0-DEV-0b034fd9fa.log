Julia Version 1.5.0-DEV.4
Commit 0b034fd9fa (2020-01-03 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed MappedArrays ──────────────── v0.2.2
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed DataStructures ────────────── v0.17.7
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.5
 Installed PooledArrays ──────────────── v0.5.3
 Installed Tables ────────────────────── v0.2.11
 Installed Parsers ───────────────────── v0.3.10
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Reexport ──────────────────── v0.2.0
 Installed DataFrames ────────────────── v0.20.0
 Installed TableTraits ───────────────── v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed OrderedCollections ────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_G8khTb/Project.toml`
 [no changes]
  Updating `/tmp/jl_G8khTb/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_G8khTb/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 134.55000000000007
[ Info: 76.67000000000002
[ Info: 36.95999999999999
[ Info: 25.25000000000001
Test Summary:        | Pass  Total
Clustering with enet |    4      4
Test Summary:        |
Clustering with dnet | No tests
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.66000118590564
inertia(cfft.distances) = 18.807411693858253
inertia(cdnet.distances) = 27.100180956835523
inertia(crand.distances) = 20.653802626273176
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7127447205572212,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.3125,"distances_sum":1528.8051985859775}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.1953125,"distances_sum":1077.0156459870104}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.0234375,"distances_sum":1093.1717748763301}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.921875,"distances_sum":1124.7659786114689}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.57421875,"f1":0.7127447205572212,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.3125,"distances_sum":1528.8051985859775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9362267940392945,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2733.859052022024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9319113178488184,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8125,"distances_sum":2677.748405124062}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9165724900099906,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.765625,"distances_sum":2594.387721271711}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8740769647019656,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.65625,"distances_sum":2337.0892175880635}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9362267940392945,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2733.859052022024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.955380036630037,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9140625,"distances_sum":2892.2787289877833}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584134615384619,"seconds":0.00011489540338516235,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9453125,"distances_sum":2910.6221405201145}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9567193223443227,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.90625,"distances_sum":2898.9431172226778}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9671932234432239,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9765625,"distances_sum":2995.6941037429933}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9706132409257412,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9453125,"distances_sum":3019.6147920466883}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9706132409257412,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9453125,"distances_sum":3019.6147920466883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9706132409257412,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9453125,"distances_sum":3019.6147920466883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.322265625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.322265625,"f1":null,"seconds":3.4403055906295776e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.0625,"distances_sum":857.4488504004389}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7695615148740155,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6015625,"distances_sum":1692.5468853065245}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7695615148740155,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6015625,"distances_sum":1692.5468853065245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8798316267066274,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2421875,"distances_sum":2225.789824749332}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8798316267066274,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2421875,"distances_sum":2225.789824749332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.929962745587746,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4609375,"distances_sum":2605.2352405085494}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9343151640026647,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.515625,"distances_sum":2609.4784111598815}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.90811063936064,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.421875,"distances_sum":2406.710092291366}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.918452901265402,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.515625,"distances_sum":2429.5965461765695}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9343151640026647,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.515625,"distances_sum":2609.4784111598815}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9343151640026647,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.515625,"distances_sum":2609.4784111598815}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.53125,"distances_sum":974.7788613110072}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.820321692196693,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.140625,"distances_sum":1976.3358425874421}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7138671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7138671875,"f1":0.820321692196693,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.140625,"distances_sum":1976.3358425874421}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9127174908424914,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6796875,"distances_sum":2406.787535314313}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9075122793872801,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6484375,"distances_sum":2386.242605320587}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9127174908424914,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6796875,"distances_sum":2406.787535314313}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9574977106227112,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.828125,"distances_sum":2748.7414001560064}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9558836996337,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.78125,"distances_sum":2749.6663163361573}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590029761904766,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2767.4382938705285}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.920547161172162,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.703125,"distances_sum":2483.6660625303466}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9352423618048623,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8203125,"distances_sum":2578.6576453437547}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9590029761904766,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2767.4382938705285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9590029761904766,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8046875,"distances_sum":2767.4382938705285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.322265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.322265625,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.15625,"distances_sum":913.6147287368142}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1591796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1591796875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":4.640625,"distances_sum":422.51886222374935}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.322265625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.322265625,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.15625,"distances_sum":913.6147287368142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3271484375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3271484375,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.21875,"distances_sum":879.8055303930105}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8872969044844053,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.625,"distances_sum":2225.9679818301615}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8661156551781561,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.4765625,"distances_sum":2110.3214787538927}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.792031406093907,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.015625,"distances_sum":1791.7714059618895}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8696756368631379,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.484375,"distances_sum":2173.6800561539094}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8905911796536805,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.59375,"distances_sum":2246.611225541499}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8134765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8134765625,"f1":0.8905911796536805,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.59375,"distances_sum":2246.611225541499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9496940559440564,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.875,"distances_sum":2646.180071751689}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9580414377289383,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8671875,"distances_sum":2718.873464046215}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9496800074925079,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8125,"distances_sum":2710.918737327716}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601820054945059,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.890625,"distances_sum":2721.961132326701}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9557577838827842,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.875,"distances_sum":2713.8719924304205}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601820054945059,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.890625,"distances_sum":2721.961132326701}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601820054945059,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.890625,"distances_sum":2721.961132326701}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9826636904761903,"recall":0.6337890625,"f1":0.7595576298701302,"seconds":1.095794141292572e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.71875,"distances_sum":1613.8523883168218}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6337890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9826636904761903,"recall":0.6337890625,"f1":0.7595576298701302,"seconds":1.095794141292572e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.71875,"distances_sum":1613.8523883168218}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9917689732142858,"recall":0.8203125,"f1":0.8918241263944395,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6015625,"distances_sum":2197.8584167101076}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9873046875000001,"recall":0.9013671875,"f1":0.9389816563644693,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":2532.481056151255}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9873046875000001,"recall":0.9013671875,"f1":0.9389816563644693,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":2532.481056151255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.988374255952381,"recall":0.923828125,"f1":0.9519016140109893,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8125,"distances_sum":2630.625278714251}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":0.9899553571428572,"recall":0.953125,"f1":0.9696256868131873,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2730.9436580827546}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9871372767857143,"recall":0.9423828125,"f1":0.9621487236721614,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":2683.6223225169974}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":0.9949776785714286,"recall":0.9443359375,"f1":0.9659083104395607,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2697.6381363584796}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":0.9899553571428572,"recall":0.953125,"f1":0.9696256868131873,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2730.9436580827546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":0.9899553571428572,"recall":0.953125,"f1":0.9696256868131873,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9140625,"distances_sum":2730.9436580827546}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7843047577422585,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.546875,"distances_sum":1435.7813069354042}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8018434690309698,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.71875,"distances_sum":1536.2662212708512}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3076171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.3076171875,"f1":null,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.4375,"distances_sum":655.8003040761396}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.8018434690309698,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":7.71875,"distances_sum":1536.2662212708512}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9088343947718955,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.4296875,"distances_sum":2038.22635725828}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9009646603396613,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.3984375,"distances_sum":1974.6873518880734}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9533195970695977,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7734375,"distances_sum":2328.5104982693338}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9533195970695977,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.7734375,"distances_sum":2328.5104982693338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603308150183154,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8828125,"distances_sum":2339.8478008315196}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741643772893777,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9453125,"distances_sum":2439.6667071307356}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893777,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9453125,"distances_sum":2439.6667071307356}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893777,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9453125,"distances_sum":2439.6667071307356}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.248046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.25,"distances_sum":555.8150064621134}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.248046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.25,"distances_sum":555.8150064621134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7885083666333673,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.59375,"distances_sum":1418.4624423765674}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6318359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6318359375,"f1":0.7598750208125215,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.3984375,"distances_sum":1333.1437865951978}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7885083666333673,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.59375,"distances_sum":1418.4624423765674}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9351419413919421,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.734375,"distances_sum":2112.29966001892}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9474816849816856,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.7109375,"distances_sum":2225.080522929383}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9474816849816856,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.7109375,"distances_sum":2225.080522929383}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643658424908429,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8828125,"distances_sum":2298.7454506561576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9520375457875462,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8203125,"distances_sum":2188.462795100121}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648637820512826,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8671875,"distances_sum":2312.0090049238115}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643658424908429,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8828125,"distances_sum":2298.7454506561576}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643658424908429,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8828125,"distances_sum":2298.7454506561576}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8546370296370306,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.109375,"distances_sum":1668.9193987867357}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7808918512043519,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7578125,"distances_sum":1377.1982363173295}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8546370296370306,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.109375,"distances_sum":1668.9193987867357}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9016483516483524,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4453125,"distances_sum":1874.316960033631}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9508241758241767,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2134.267419888537}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9508241758241767,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.875,"distances_sum":2134.267419888537}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2249.1347925779883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9619505494505499,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.859375,"distances_sum":2262.1007038684793}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2249.1347925779883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2249.1347925779883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.9453125,"distances_sum":973.5634802663976}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.419921875,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.419921875,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.9453125,"distances_sum":973.5634802663976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8611950549450558,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1899.4402655675515}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7000478687978691,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.953125,"distances_sum":1311.9035295058488}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4482421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4482421875,"f1":0.5922847985347985,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.1640625,"distances_sum":1001.9708531750706}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.1171875,"distances_sum":1010.3118342092547}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7989640567765575,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.6953125,"distances_sum":1589.9643007654925}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7722047050172056,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.4609375,"distances_sum":1469.1770550127076}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7006248959373963,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.0078125,"distances_sum":1255.5947356465708}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8611950549450558,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1899.4402655675515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518486721611727,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2460.447798367729}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8949925074925085,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.265625,"distances_sum":2042.989298507959}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9060782967032974,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3828125,"distances_sum":2091.157081846309}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9518486721611727,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2460.447798367729}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9518486721611727,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2460.447798367729}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.9765625,"distances_sum":849.7346551301378}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7185640748140754,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.046875,"distances_sum":1225.9546723454205}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.583984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.583984375,"f1":0.7185640748140754,"seconds":4.416331648826599e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.046875,"distances_sum":1225.9546723454205}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8819003912753921,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4765625,"distances_sum":1848.1848321780196}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9366503288378295,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7109375,"distances_sum":2203.7209363912884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8885682026307034,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.59375,"distances_sum":1936.9653540011223}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9366503288378295,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7109375,"distances_sum":2203.7209363912884}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978026,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2326.8075732567577}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674336080586086,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2382.3443528522375}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2355.2452376477117}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9674336080586086,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2382.3443528522375}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9674336080586086,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.90625,"distances_sum":2382.3443528522375}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.521484375,"f1":null,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.5,"distances_sum":1102.3155161725103}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2734375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2734375,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.578125,"distances_sum":582.6112355569862}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6961743117993123,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.7109375,"distances_sum":1178.990645963594}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6961743117993123,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.7109375,"distances_sum":1178.990645963594}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8238906926406934,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.75,"distances_sum":1627.4100255955648}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8916125541125551,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.21875,"distances_sum":2006.0336037581415}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9058524808524818,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4375,"distances_sum":2092.611986618588}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9058524808524818,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4375,"distances_sum":2092.611986618588}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623740842490847,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2413.3575480545364}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9402045870795874,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.640625,"distances_sum":2327.110383260223}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575549450549455,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.78125,"distances_sum":2397.0531533071567}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9299793956043965,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.734375,"distances_sum":2221.457680067209}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9367476273726281,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6328125,"distances_sum":2281.3809529005002}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451293498168505,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7578125,"distances_sum":2337.721819814939}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9623740842490847,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2413.3575480545364}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9623740842490847,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2413.3575480545364}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7734943875568885,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.4140625,"distances_sum":1518.5003903559054}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.283203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.283203125,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.859375,"distances_sum":627.3870106298043}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2763671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2763671875,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.6015625,"distances_sum":607.6956037608493}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.7734943875568885,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.4140625,"distances_sum":1518.5003903559054}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9001717032967042,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":2022.6788832841405}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8899355852480861,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.28125,"distances_sum":1984.800438239818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9439076548451554,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2338.457244119577}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8554835789210798,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.0546875,"distances_sum":1787.6666963297723}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9439076548451554,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2338.457244119577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9767857142857146,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.96875,"distances_sum":2508.9005825913737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522206959706966,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7890625,"distances_sum":2392.4996234846135}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9566334706959713,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2423.4911048652193}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.952421016483517,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2359.7367182712874}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9767857142857146,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.96875,"distances_sum":2508.9005825913737}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9767857142857146,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.96875,"distances_sum":2508.9005825913737}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.529296875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.296875,"distances_sum":1070.9172222743664}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6298828125,"f1":0.7586621711621718,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.09375,"distances_sum":1317.6082709452646}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.858771436896438,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0,"distances_sum":1712.3874393534547}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.858771436896438,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0,"distances_sum":1712.3874393534547}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8846101814851822,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1796875,"distances_sum":1849.7136714774967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9161234598734606,"seconds":0.00013804994523525238,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.40625,"distances_sum":2005.718233442064}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9161234598734606,"seconds":0.00013804994523525238,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.40625,"distances_sum":2005.718233442064}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9495337995338,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2199.5183748959994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406707875457883,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.640625,"distances_sum":2139.088015100082}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9397467116217121,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.65625,"distances_sum":2146.805518730096}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9440595862470869,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6171875,"distances_sum":2201.0699165955366}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9495337995338,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2199.5183748959994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9495337995338,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2199.5183748959994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.777456224331225,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":7.359375,"distances_sum":1497.9357542358673}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.777456224331225,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":7.359375,"distances_sum":1497.9357542358673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533711080586085,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.78125,"distances_sum":2366.6538926689345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.840549034299035,"seconds":3.705359995365143e-5,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":7.765625,"distances_sum":1738.451976056774}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8462459415584423,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":7.8203125,"distances_sum":1782.7707139060012}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9533711080586085,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.78125,"distances_sum":2366.6538926689345}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9689388736263742,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.90625,"distances_sum":2456.5168201134934}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614068223443228,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.84375,"distances_sum":2426.478895146216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963450091575092,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.8984375,"distances_sum":2442.082463984335}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9689388736263742,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.90625,"distances_sum":2456.5168201134934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9689388736263742,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":3.324262797832489e-5,"evaluations":8.90625,"distances_sum":2456.5168201134934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8024818931068939,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6640625,"distances_sum":1535.7564500148283}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8024818931068939,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6640625,"distances_sum":1535.7564500148283}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9282108516483526,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.6796875,"distances_sum":2180.2875969703396}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802202,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2336.9347213301776}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802202,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2336.9347213301776}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802202,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2336.9347213301776}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802202,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8125,"distances_sum":2336.9347213301776}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.42578125,"f1":0.5654649170274171,"seconds":3.3490359783172607e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.09375,"distances_sum":952.4582344526367}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7770779567654575,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6015625,"distances_sum":1482.7107308359352}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7770779567654575,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6015625,"distances_sum":1482.7107308359352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9007955586080592,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3828125,"distances_sum":2004.0274454165562}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9007955586080592,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3828125,"distances_sum":2004.0274454165562}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590258699633704,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2393.4099022622017}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9227938727938734,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2114.6602238298665}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9590258699633704,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2393.4099022622017}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9590258699633704,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2393.4099022622017}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8201661186036194,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8828125,"distances_sum":1627.5513060770104}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.7890625,"distances_sum":880.1655567972267}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8201661186036194,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8828125,"distances_sum":1627.5513060770104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9397951007326014,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":2270.961230005549}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9397951007326014,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":2270.961230005549}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2511.3497845722804}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2511.3497845722804}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2511.3497845722804}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2216796875,"f1":null,"seconds":2.818182110786438e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.0859375,"distances_sum":566.1601529699768}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.850653513153514,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7890625,"distances_sum":1828.6753167783681}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.3916015625,"f1":0.5414696414696414,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.734375,"distances_sum":833.7014157064541}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.850653513153514,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7890625,"distances_sum":1828.6753167783681}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8994047619047627,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.03125,"distances_sum":2099.2897114605667}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8556698509823519,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9765625,"distances_sum":1850.669425231024}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8994047619047627,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.03125,"distances_sum":2099.2897114605667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9260931776556783,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3828125,"distances_sum":2271.6419072773406}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9470123626373633,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.703125,"distances_sum":2420.7662324255375}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.932881181318682,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":2313.100626322466}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525011446886451,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2444.52479632582}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9525011446886451,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2444.52479632582}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9525011446886451,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2444.52479632582}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.361328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.361328125,"f1":null,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.0546875,"distances_sum":724.4242418164596}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6904558982683988,"seconds":3.894791007041931e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3125,"distances_sum":1120.8332629036543}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.546875,"f1":0.6904558982683988,"seconds":3.894791007041931e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3125,"distances_sum":1120.8332629036543}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7019124972249978,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3828125,"distances_sum":1182.515567548771}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6279296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6279296875,"f1":0.7561585983460991,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.9609375,"distances_sum":1365.4377600791877}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9261306401931408,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4453125,"distances_sum":2188.360640594484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9114156676656685,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1875,"distances_sum":2042.3749004424508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8705055361305366,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.828125,"distances_sum":1830.1739553468801}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9261306401931408,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4453125,"distances_sum":2188.360640594484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640853937728943,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2439.8599846324023}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620192307692312,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.734375,"distances_sum":2457.5975280806774}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9463255494505499,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.578125,"distances_sum":2352.866655538892}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502060439560445,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.59375,"distances_sum":2401.553094908759}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9640853937728943,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2439.8599846324023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9640853937728943,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.765625,"distances_sum":2439.8599846324023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.28125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.28125,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":5.9140625,"distances_sum":661.2092472721974}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7969858266733274,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":7.296875,"distances_sum":1485.4918565948394}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7969858266733274,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":7.296875,"distances_sum":1485.4918565948394}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9174310064935072,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.3125,"distances_sum":2081.423978633416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9174310064935072,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.3125,"distances_sum":2081.423978633416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9585424991674997,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.75,"distances_sum":2455.3418985765843}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627117673992678,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.75,"distances_sum":2499.1575336258948}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627117673992678,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.75,"distances_sum":2499.1575336258948}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627117673992678,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":2.508983016014099e-6,"evaluations":8.75,"distances_sum":2499.1575336258948}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.46451997756958e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.109375,"distances_sum":555.726330431447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2685546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2685546875,"f1":null,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.1640625,"distances_sum":644.1108343115923}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7835168303918312,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.4296875,"distances_sum":1431.774674715487}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7835168303918312,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.4296875,"distances_sum":1431.774674715487}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8821688727938737,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8203125,"distances_sum":1933.7103744165618}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8696548243423252,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.71875,"distances_sum":1870.895650514471}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7908419705294715,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.421875,"distances_sum":1512.033033247651}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.792411061161062,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.34375,"distances_sum":1463.4329617988478}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8821688727938737,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8203125,"distances_sum":1933.7103744165618}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9467490842490849,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.578125,"distances_sum":2356.2009823018807}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608287545787549,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7890625,"distances_sum":2502.970970158252}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502461080586085,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.6953125,"distances_sum":2428.121405398203}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9167186979686985,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.265625,"distances_sum":2171.5221827522437}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608287545787549,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7890625,"distances_sum":2502.970970158252}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9608287545787549,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7890625,"distances_sum":2502.970970158252}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8549627455877464,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":7.7265625,"distances_sum":1845.1257807000682}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8549627455877464,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":7.7265625,"distances_sum":1845.1257807000682}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9281364468864474,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.5078125,"distances_sum":2302.0210196063153}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9281364468864474,"seconds":6.319954991340637e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.5078125,"distances_sum":2302.0210196063153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.8046875,"distances_sum":2612.4445147199485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607174075924082,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.78125,"distances_sum":2532.3764767286943}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.8046875,"distances_sum":2612.4445147199485}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970203754578755,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":2.3748725652694702e-6,"evaluations":8.8046875,"distances_sum":2612.4445147199485}}, n: 9
inertia(cfft.distances) = 19.32262174553842
inertia(cdnet.distances) = 23.925389761325405
inertia(crand.distances) = 22.475840386221968
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8755555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9
===> k=7
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9355555555555556
===> k=11
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777777
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 1, 3, 3, 3, 2, 3, 3, 1, 3, 2, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 14]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]nc.class_map = [2, 3, 1, 3, 2, 3, 1, 2, 3, 1, 2, 3, 3, 2]
acc = 0.94

*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 14 centroids; started with 12
*** starting iteration: 1; err: [Inf, 0.31660000546250594] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144] ***
*** starting iteration: 2; err: [Inf, 0.31660000546250594, 0.1981707265724144] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177] ***
*** starting iteration: 3; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919] ***
*** starting iteration: 4; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559] ***
*** starting iteration: 5; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559, 0.1595905490043706] ***
*** finished computation of 12 references, err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559, 0.1595905490043706] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
acc = 0.94
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.7225131711037523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7225131711037523, 0.2402801753968225] ***
*** finished computation of 7 references, err: [Inf, 0.7225131711037523, 0.2402801753968225] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5632489708187751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5632489708187751, 0.24914164124226773] ***
*** finished computation of 7 references, err: [Inf, 0.5632489708187751, 0.24914164124226773] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 15]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 12), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2564454410482926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564454410482926, 0.19508131190611053] ***
*** finished computation of 7 references, err: [Inf, 0.2564454410482926, 0.19508131190611053] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7931498592102642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7931498592102642, 0.3212981764441119] ***
*** starting iteration: 2; err: [Inf, 0.7931498592102642, 0.3212981764441119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7931498592102642, 0.3212981764441119, 0.23527204330663473] ***
*** starting iteration: 3; err: [Inf, 0.7931498592102642, 0.3212981764441119, 0.23527204330663473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7931498592102642, 0.3212981764441119, 0.23527204330663473, 0.21402315049645043] ***
*** finished computation of 7 references, err: [Inf, 0.7931498592102642, 0.3212981764441119, 0.23527204330663473, 0.21402315049645043] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 14]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 8), (3, 14)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.015569457389308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.015569457389308, 0.3982359128632221] ***
*** starting iteration: 2; err: [Inf, 2.015569457389308, 0.3982359128632221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.015569457389308, 0.3982359128632221, 0.20262994165900478] ***
*** starting iteration: 3; err: [Inf, 2.015569457389308, 0.3982359128632221, 0.20262994165900478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.015569457389308, 0.3982359128632221, 0.20262994165900478, 0.16906205536961383] ***
*** finished computation of 7 references, err: [Inf, 2.015569457389308, 0.3982359128632221, 0.20262994165900478, 0.16906205536961383] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 11]]
** centroid: 2, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33659459522670204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33659459522670204, 0.23435342267012638] ***
*** starting iteration: 2; err: [Inf, 0.33659459522670204, 0.23435342267012638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33659459522670204, 0.23435342267012638, 0.22147092170822094] ***
*** starting iteration: 3; err: [Inf, 0.33659459522670204, 0.23435342267012638, 0.22147092170822094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33659459522670204, 0.23435342267012638, 0.22147092170822094, 0.1907658468191874] ***
*** finished computation of 7 references, err: [Inf, 0.33659459522670204, 0.23435342267012638, 0.22147092170822094, 0.1907658468191874] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4470103000622268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470103000622268, 0.25798086989597635] ***
*** starting iteration: 2; err: [Inf, 0.4470103000622268, 0.25798086989597635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470103000622268, 0.25798086989597635, 0.2454673717547175] ***
*** starting iteration: 3; err: [Inf, 0.4470103000622268, 0.25798086989597635, 0.2454673717547175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4470103000622268, 0.25798086989597635, 0.2454673717547175, 0.2411809077268846] ***
*** finished computation of 7 references, err: [Inf, 0.4470103000622268, 0.25798086989597635, 0.2454673717547175, 0.2411809077268846] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 20, 8]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 20), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40827738455784823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40827738455784823, 0.22900395107497531] ***
*** starting iteration: 2; err: [Inf, 0.40827738455784823, 0.22900395107497531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40827738455784823, 0.22900395107497531, 0.19860497064829397] ***
*** starting iteration: 3; err: [Inf, 0.40827738455784823, 0.22900395107497531, 0.19860497064829397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40827738455784823, 0.22900395107497531, 0.19860497064829397, 0.18602822614660958] ***
*** finished computation of 7 references, err: [Inf, 0.40827738455784823, 0.22900395107497531, 0.19860497064829397, 0.18602822614660958] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 5, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3122003372566077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3122003372566077, 0.17644852129211797] ***
*** starting iteration: 2; err: [Inf, 0.3122003372566077, 0.17644852129211797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3122003372566077, 0.17644852129211797, 0.16273471382089916] ***
*** starting iteration: 3; err: [Inf, 0.3122003372566077, 0.17644852129211797, 0.16273471382089916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3122003372566077, 0.17644852129211797, 0.16273471382089916, 0.15870449331980724] ***
*** finished computation of 7 references, err: [Inf, 0.3122003372566077, 0.17644852129211797, 0.16273471382089916, 0.15870449331980724] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5862077001171103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5862077001171103, 0.26243053132370064] ***
*** finished computation of 7 references, err: [Inf, 0.5862077001171103, 0.26243053132370064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 2]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4862857877914352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4862857877914352, 0.21725229746487007] ***
*** finished computation of 7 references, err: [Inf, 0.4862857877914352, 0.21725229746487007] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 24]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 8), (3, 24)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2769849232229691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2769849232229691, 0.18980944338378136] ***
*** finished computation of 7 references, err: [Inf, 0.2769849232229691, 0.18980944338378136] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 6, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5992000039661517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992000039661517, 0.33439182749107305] ***
*** starting iteration: 2; err: [Inf, 0.5992000039661517, 0.33439182749107305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992000039661517, 0.33439182749107305, 0.294456311010733] ***
*** starting iteration: 3; err: [Inf, 0.5992000039661517, 0.33439182749107305, 0.294456311010733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5992000039661517, 0.33439182749107305, 0.294456311010733, 0.29069026525258657] ***
*** finished computation of 7 references, err: [Inf, 0.5992000039661517, 0.33439182749107305, 0.294456311010733, 0.29069026525258657] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 13]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4184000020426167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4184000020426167, 0.2818494997769187] ***
*** starting iteration: 2; err: [Inf, 0.4184000020426167, 0.2818494997769187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4184000020426167, 0.2818494997769187, 0.2364544990483996] ***
*** starting iteration: 3; err: [Inf, 0.4184000020426167, 0.2818494997769187, 0.2364544990483996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4184000020426167, 0.2818494997769187, 0.2364544990483996, 0.21971673250455204] ***
*** finished computation of 7 references, err: [Inf, 0.4184000020426167, 0.2818494997769187, 0.2364544990483996, 0.21971673250455204] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 13]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3704999994340086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3704999994340086, 0.26742903793391104] ***
*** starting iteration: 2; err: [Inf, 0.3704999994340086, 0.26742903793391104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3704999994340086, 0.26742903793391104, 0.23189606726140177] ***
*** starting iteration: 3; err: [Inf, 0.3704999994340086, 0.26742903793391104, 0.23189606726140177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3704999994340086, 0.26742903793391104, 0.23189606726140177, 0.20398504341698254] ***
*** finished computation of 7 references, err: [Inf, 0.3704999994340086, 0.26742903793391104, 0.23189606726140177, 0.20398504341698254] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9447999978775399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9447999978775399, 0.6004514772365451] ***
*** starting iteration: 2; err: [Inf, 0.9447999978775399, 0.6004514772365451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9447999978775399, 0.6004514772365451, 0.5367209520273343] ***
*** starting iteration: 3; err: [Inf, 0.9447999978775399, 0.6004514772365451, 0.5367209520273343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9447999978775399, 0.6004514772365451, 0.5367209520273343, 0.529985158293131] ***
*** finished computation of 3 references, err: [Inf, 0.9447999978775399, 0.6004514772365451, 0.5367209520273343, 0.529985158293131] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.1605000162463224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1605000162463224, 0.9266566038811672] ***
*** starting iteration: 2; err: [Inf, 2.1605000162463224, 0.9266566038811672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1605000162463224, 0.9266566038811672, 0.6406144360557717] ***
*** starting iteration: 3; err: [Inf, 2.1605000162463224, 0.9266566038811672, 0.6406144360557717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1605000162463224, 0.9266566038811672, 0.6406144360557717, 0.5801301500708101] ***
*** finished computation of 3 references, err: [Inf, 2.1605000162463224, 0.9266566038811672, 0.6406144360557717, 0.5801301500708101] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 15]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 40), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.796400031531565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.796400031531565, 0.8679241632868805] ***
*** starting iteration: 2; err: [Inf, 1.796400031531565, 0.8679241632868805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.796400031531565, 0.8679241632868805, 0.8148481820269575] ***
*** starting iteration: 3; err: [Inf, 1.796400031531565, 0.8679241632868805, 0.8148481820269575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.796400031531565, 0.8679241632868805, 0.8148481820269575, 0.8074204417108487] ***
*** finished computation of 3 references, err: [Inf, 1.796400031531565, 0.8679241632868805, 0.8148481820269575, 0.8074204417108487] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 33]]
** centroid: 1, normalized-entropy: 0.995148095654003, [(2, 28), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.091837308245507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.091837308245507, 1.8772387557184687] ***
*** starting iteration: 2; err: [Inf, 7.091837308245507, 1.8772387557184687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.091837308245507, 1.8772387557184687, 0.9005938557222705] ***
*** starting iteration: 3; err: [Inf, 7.091837308245507, 1.8772387557184687, 0.9005938557222705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.091837308245507, 1.8772387557184687, 0.9005938557222705, 0.4961371875907553] ***
*** finished computation of 3 references, err: [Inf, 7.091837308245507, 1.8772387557184687, 0.9005938557222705, 0.4961371875907553] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 21]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 28), (3, 21)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 3, 0]]
** centroid: 3, normalized-entropy: 0.39845927409523557, [(1, 35), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6645557157342767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6645557157342767, 0.4115894155226769] ***
*** starting iteration: 2; err: [Inf, 0.6645557157342767, 0.4115894155226769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6645557157342767, 0.4115894155226769, 0.3975085120651666] ***
*** starting iteration: 3; err: [Inf, 0.6645557157342767, 0.4115894155226769, 0.3975085120651666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6645557157342767, 0.4115894155226769, 0.3975085120651666, 0.391951977911744] ***
*** finished computation of 3 references, err: [Inf, 0.6645557157342767, 0.4115894155226769, 0.3975085120651666, 0.391951977911744] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 15]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 40), (3, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7359299165066365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7359299165066365, 0.3280059849580834] ***
*** starting iteration: 2; err: [Inf, 0.7359299165066365, 0.3280059849580834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7359299165066365, 0.3280059849580834, 0.3188246883277214] ***
*** starting iteration: 3; err: [Inf, 0.7359299165066365, 0.3280059849580834, 0.3188246883277214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7359299165066365, 0.3280059849580834, 0.3188246883277214, 0.317678355684032] ***
*** finished computation of 3 references, err: [Inf, 0.7359299165066365, 0.3280059849580834, 0.3188246883277214, 0.317678355684032] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 32]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(2, 3), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5518332684564475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5518332684564475, 0.6994324975473859] ***
*** starting iteration: 2; err: [Inf, 1.5518332684564475, 0.6994324975473859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444] ***
*** starting iteration: 3; err: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444, 0.6729439331918841] ***
*** starting iteration: 4; err: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444, 0.6729439331918841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444, 0.6729439331918841, 0.6729439331918841] ***
*** finished computation of 3 references, err: [Inf, 1.5518332684564475, 0.6994324975473859, 0.6745770980654444, 0.6729439331918841, 0.6729439331918841] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 34]]
** centroid: 2, normalized-entropy: 0.9932338197397066, [(2, 28), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5079135852702708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5079135852702708, 0.6979975286365264] ***
*** starting iteration: 2; err: [Inf, 1.5079135852702708, 0.6979975286365264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5079135852702708, 0.6979975286365264, 0.6964171941262027] ***
*** starting iteration: 3; err: [Inf, 1.5079135852702708, 0.6979975286365264, 0.6964171941262027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5079135852702708, 0.6979975286365264, 0.6964171941262027, 0.6964171941262027] ***
*** finished computation of 3 references, err: [Inf, 1.5079135852702708, 0.6979975286365264, 0.6964171941262027, 0.6964171941262027] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 40, 33]]
** centroid: 3, normalized-entropy: 0.9933570282728464, [(2, 40), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3216190240752332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3216190240752332, 0.45473659605043293] ***
*** starting iteration: 2; err: [Inf, 1.3216190240752332, 0.45473659605043293] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467] ***
*** starting iteration: 3; err: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981] ***
*** starting iteration: 4; err: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981, 0.32071390680883705] ***
*** starting iteration: 5; err: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981, 0.32071390680883705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981, 0.32071390680883705, 0.3197374687280063] ***
*** finished computation of 3 references, err: [Inf, 1.3216190240752332, 0.45473659605043293, 0.32674517605385467, 0.3232964015075981, 0.32071390680883705, 0.3197374687280063] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 31]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(2, 2), (3, 31)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33048291704453275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33048291704453275, 0.20069794969608598] ***
*** starting iteration: 2; err: [Inf, 0.33048291704453275, 0.20069794969608598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33048291704453275, 0.20069794969608598, 0.1920400929065055] ***
*** starting iteration: 3; err: [Inf, 0.33048291704453275, 0.20069794969608598, 0.1920400929065055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33048291704453275, 0.20069794969608598, 0.1920400929065055, 0.1884073609437143] ***
*** finished computation of 7 references, err: [Inf, 0.33048291704453275, 0.20069794969608598, 0.1920400929065055, 0.1884073609437143] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 8]]
** centroid: 2, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 6]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5262867251420403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5262867251420403, 0.25671102189862205] ***
*** starting iteration: 2; err: [Inf, 0.5262867251420403, 0.25671102189862205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5262867251420403, 0.25671102189862205, 0.20091469723247055] ***
*** starting iteration: 3; err: [Inf, 0.5262867251420403, 0.25671102189862205, 0.20091469723247055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5262867251420403, 0.25671102189862205, 0.20091469723247055, 0.19389497922653182] ***
*** finished computation of 7 references, err: [Inf, 0.5262867251420403, 0.25671102189862205, 0.20091469723247055, 0.19389497922653182] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 12]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 5), (3, 12)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7228816269431405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7228816269431405, 0.22771882729650472] ***
*** starting iteration: 2; err: [Inf, 0.7228816269431405, 0.22771882729650472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7228816269431405, 0.22771882729650472, 0.2072282939999365] ***
*** starting iteration: 3; err: [Inf, 0.7228816269431405, 0.22771882729650472, 0.2072282939999365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7228816269431405, 0.22771882729650472, 0.2072282939999365, 0.19428091617173857] ***
*** finished computation of 7 references, err: [Inf, 0.7228816269431405, 0.22771882729650472, 0.2072282939999365, 0.19428091617173857] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 5: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7039111020414994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7039111020414994, 0.3022556991546034] ***
*** starting iteration: 2; err: [Inf, 0.7039111020414994, 0.3022556991546034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026] ***
*** starting iteration: 3; err: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994] ***
*** starting iteration: 4; err: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994, 0.19209147075813424] ***
*** starting iteration: 5; err: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994, 0.19209147075813424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994, 0.19209147075813424, 0.1920921110961668] ***
*** finished computation of 7 references, err: [Inf, 0.7039111020414994, 0.3022556991546034, 0.21776581603957026, 0.19440362124773994, 0.19209147075813424, 0.1920921110961668] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 16]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 22, 9]]
** centroid: 3, normalized-entropy: 0.8691375806126381, [(2, 22), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8291516668617926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325] ***
*** starting iteration: 2; err: [Inf, 0.8291516668617926, 0.38934774157859325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388] ***
*** starting iteration: 3; err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185] ***
*** starting iteration: 4; err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804] ***
*** starting iteration: 5; err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559] ***
*** starting iteration: 6; err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559, 0.358028507959306] ***
*** starting iteration: 7; err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559, 0.358028507959306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559, 0.358028507959306, 0.3570505109858287] ***
*** finished computation of 7 references, err: [Inf, 0.8291516668617926, 0.38934774157859325, 0.374581403297388, 0.36718169646676185, 0.36189770017231804, 0.3593375322934559, 0.358028507959306, 0.3570505109858287] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 12]]
** centroid: 7, normalized-entropy: 0.7950402793845225, [(2, 38), (3, 12)]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3694594828247777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366] ***
*** starting iteration: 2; err: [Inf, 0.3694594828247777, 0.20079484124194366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493] ***
*** starting iteration: 3; err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232] ***
*** starting iteration: 4; err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935] ***
*** starting iteration: 5; err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157] ***
*** starting iteration: 6; err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157, 0.15108029890801386] ***
*** starting iteration: 7; err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157, 0.15108029890801386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157, 0.15108029890801386, 0.15108029890801386] ***
*** finished computation of 7 references, err: [Inf, 0.3694594828247777, 0.20079484124194366, 0.18501712124227493, 0.17272813734683232, 0.16316557879985935, 0.1527166015140157, 0.15108029890801386, 0.15108029890801386] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 5]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6790999952891138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6790999952891138, 0.3290311915623893] ***
*** starting iteration: 2; err: [Inf, 0.6790999952891138, 0.3290311915623893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6790999952891138, 0.3290311915623893, 0.2910401980551452] ***
*** starting iteration: 3; err: [Inf, 0.6790999952891138, 0.3290311915623893, 0.2910401980551452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6790999952891138, 0.3290311915623893, 0.2910401980551452, 0.26251903369134144] ***
*** finished computation of 7 references, err: [Inf, 0.6790999952891138, 0.3290311915623893, 0.2910401980551452, 0.26251903369134144] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49830000361462284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49830000361462284, 0.3051601878678882] ***
*** starting iteration: 2; err: [Inf, 0.49830000361462284, 0.3051601878678882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49830000361462284, 0.3051601878678882, 0.26535807665457545] ***
*** starting iteration: 3; err: [Inf, 0.49830000361462284, 0.3051601878678882, 0.26535807665457545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49830000361462284, 0.3051601878678882, 0.26535807665457545, 0.24835372512042433] ***
*** finished computation of 7 references, err: [Inf, 0.49830000361462284, 0.3051601878678882, 0.26535807665457545, 0.24835372512042433] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 19, 13]]
** centroid: 2, normalized-entropy: 0.9744894033980525, [(2, 19), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.731800008913586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.731800008913586, 0.4054042187494046] ***
*** starting iteration: 2; err: [Inf, 0.731800008913586, 0.4054042187494046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.731800008913586, 0.4054042187494046, 0.3841356734326476] ***
*** starting iteration: 3; err: [Inf, 0.731800008913586, 0.4054042187494046, 0.3841356734326476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.731800008913586, 0.4054042187494046, 0.3841356734326476, 0.37096747764793236] ***
*** finished computation of 7 references, err: [Inf, 0.731800008913586, 0.4054042187494046, 0.3841356734326476, 0.37096747764793236] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 31]]
** centroid: 4, normalized-entropy: 0.32984607020714635, [(2, 2), (3, 31)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 5 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.486400003645212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.486400003645212, 0.29542153663201043] ***
*** finished computation of 7 references, err: [Inf, 0.486400003645212, 0.29542153663201043] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 4]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 2]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 1), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6532000051170557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6532000051170557, 0.39476642128539186] ***
*** finished computation of 7 references, err: [Inf, 0.6532000051170557, 0.39476642128539186] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 19]]
** centroid: 2, normalized-entropy: 0.7382848661434506, [(2, 5), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 35, 6]]
** centroid: 5, normalized-entropy: 0.6006085754131871, [(2, 35), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7933999972529281] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7933999972529281, 0.3136726544001259] ***
*** finished computation of 7 references, err: [Inf, 0.7933999972529281, 0.3136726544001259] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4588973983586137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358] ***
*** starting iteration: 2; err: [Inf, 0.4588973983586137, 0.23474244685730358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255] ***
*** starting iteration: 3; err: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371] ***
*** starting iteration: 4; err: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312] ***
*** starting iteration: 5; err: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312, 0.15845144351052418] ***
*** starting iteration: 6; err: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312, 0.15845144351052418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312, 0.15845144351052418, 0.15845144351052418] ***
*** finished computation of 7 references, err: [Inf, 0.4588973983586137, 0.23474244685730358, 0.18404590850309255, 0.1656689767223371, 0.16083350029618312, 0.15845144351052418, 0.15845144351052418] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 8]]
** centroid: 6, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3912745117469018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675] ***
*** starting iteration: 2; err: [Inf, 0.3912745117469018, 0.2276291706398675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959] ***
*** starting iteration: 3; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962] ***
*** starting iteration: 4; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863] ***
*** starting iteration: 5; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515] ***
*** starting iteration: 6; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916] ***
*** starting iteration: 7; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628] ***
*** starting iteration: 8; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881] ***
*** starting iteration: 9; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881, 0.15172080563725082] ***
*** starting iteration: 10; err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881, 0.15172080563725082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881, 0.15172080563725082, 0.1506150241173373] ***
*** finished computation of 7 references, err: [Inf, 0.3912745117469018, 0.2276291706398675, 0.1913506037745959, 0.18491911149076962, 0.18139583769633863, 0.1782127843930515, 0.17138684739852916, 0.16167062657903628, 0.1543966059716881, 0.15172080563725082, 0.1506150241173373] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 12]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.7251360618662557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7251360618662557, 0.2581327053305923] ***
*** starting iteration: 2; err: [Inf, 3.7251360618662557, 0.2581327053305923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288] ***
*** starting iteration: 3; err: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766] ***
*** starting iteration: 4; err: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766, 0.20735975201572296] ***
*** starting iteration: 5; err: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766, 0.20735975201572296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766, 0.20735975201572296, 0.20652994990845447] ***
*** finished computation of 7 references, err: [Inf, 3.7251360618662557, 0.2581327053305923, 0.22806591952729288, 0.2113874211827766, 0.20735975201572296, 0.20652994990845447] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1543467935002152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1543467935002152, 0.3828390081019958] ***
*** finished computation of 3 references, err: [Inf, 1.1543467935002152, 0.3828390081019958] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7601162994507886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7601162994507886, 0.43306431302943893] ***
*** finished computation of 3 references, err: [Inf, 0.7601162994507886, 0.43306431302943893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 33]]
** centroid: 1, normalized-entropy: 0.9113423759758414, [(2, 16), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0013089940334077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0013089940334077, 0.3293036073049825] ***
*** finished computation of 3 references, err: [Inf, 1.0013089940334077, 0.3293036073049825] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 28]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 5]]
** centroid: 3, normalized-entropy: 0.6024308020404452, [(2, 29), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6229000012785558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6229000012785558, 0.25439323580507545] ***
*** finished computation of 7 references, err: [Inf, 0.6229000012785558, 0.25439323580507545] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5532000062049487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5532000062049487, 0.2833862305012592] ***
*** finished computation of 7 references, err: [Inf, 0.5532000062049487, 0.2833862305012592] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 26, 3]]
** centroid: 5, normalized-entropy: 0.47983202361612853, [(2, 26), (3, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5554000082009413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5554000082009413, 0.24238673708385616] ***
*** finished computation of 7 references, err: [Inf, 0.5554000082009413, 0.24238673708385616] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45118596042879444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45118596042879444, 0.1881146536850339] ***
*** starting iteration: 2; err: [Inf, 0.45118596042879444, 0.1881146536850339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45118596042879444, 0.1881146536850339, 0.17265998206421468] ***
*** starting iteration: 3; err: [Inf, 0.45118596042879444, 0.1881146536850339, 0.17265998206421468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45118596042879444, 0.1881146536850339, 0.17265998206421468, 0.16538652245700314] ***
*** finished computation of 7 references, err: [Inf, 0.45118596042879444, 0.1881146536850339, 0.17265998206421468, 0.16538652245700314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3192059357055659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3192059357055659, 0.1824387612612023] ***
*** starting iteration: 2; err: [Inf, 0.3192059357055659, 0.1824387612612023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3192059357055659, 0.1824387612612023, 0.17688131957296574] ***
*** starting iteration: 3; err: [Inf, 0.3192059357055659, 0.1824387612612023, 0.17688131957296574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3192059357055659, 0.1824387612612023, 0.17688131957296574, 0.17575670299123528] ***
*** finished computation of 7 references, err: [Inf, 0.3192059357055659, 0.1824387612612023, 0.17688131957296574, 0.17575670299123528] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42644318458007135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42644318458007135, 0.18277087434931996] ***
*** starting iteration: 2; err: [Inf, 0.42644318458007135, 0.18277087434931996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42644318458007135, 0.18277087434931996, 0.16946115786268245] ***
*** starting iteration: 3; err: [Inf, 0.42644318458007135, 0.18277087434931996, 0.16946115786268245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42644318458007135, 0.18277087434931996, 0.16946115786268245, 0.15955156741841275] ***
*** finished computation of 7 references, err: [Inf, 0.42644318458007135, 0.18277087434931996, 0.16946115786268245, 0.15955156741841275] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3381864824336951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3381864824336951, 0.21010374204345347] ***
*** finished computation of 7 references, err: [Inf, 0.3381864824336951, 0.21010374204345347] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 19]]
** centroid: 2, normalized-entropy: 0.5746356978376794, [(2, 3), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 23, 9]]
** centroid: 4, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3499707143169421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3499707143169421, 0.2127166957984692] ***
*** finished computation of 7 references, err: [Inf, 0.3499707143169421, 0.2127166957984692] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 9]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 9]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2664068922201843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2664068922201843, 0.17689105773790534] ***
*** finished computation of 7 references, err: [Inf, 0.2664068922201843, 0.17689105773790534] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.46548297176920383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46548297176920383, 0.22342051929851217] ***
*** finished computation of 7 references, err: [Inf, 0.46548297176920383, 0.22342051929851217] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3502532119665696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3502532119665696, 0.18625062465019673] ***
*** finished computation of 7 references, err: [Inf, 0.3502532119665696, 0.18625062465019673] ***
*** center 1: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 13]]
** centroid: 4, normalized-entropy: 0.9876925088958032, [(2, 10), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5022657852241253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5022657852241253, 0.15836678703898036] ***
*** finished computation of 7 references, err: [Inf, 0.5022657852241253, 0.15836678703898036] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 6]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 14), (3, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 18
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.4987000110394766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000110394766, 0.26469652149761574] ***
*** starting iteration: 2; err: [Inf, 0.4987000110394766, 0.26469652149761574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000110394766, 0.26469652149761574, 0.2578075877358605] ***
*** starting iteration: 3; err: [Inf, 0.4987000110394766, 0.26469652149761574, 0.2578075877358605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000110394766, 0.26469652149761574, 0.2578075877358605, 0.2526464528458683] ***
*** finished computation of 7 references, err: [Inf, 0.4987000110394766, 0.26469652149761574, 0.2578075877358605, 0.2526464528458683] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4605000035318901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000035318901, 0.2897469239640405] ***
*** starting iteration: 2; err: [Inf, 0.4605000035318901, 0.2897469239640405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000035318901, 0.2897469239640405, 0.254223973932302] ***
*** starting iteration: 3; err: [Inf, 0.4605000035318901, 0.2897469239640405, 0.254223973932302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4605000035318901, 0.2897469239640405, 0.254223973932302, 0.2463593961550463] ***
*** finished computation of 7 references, err: [Inf, 0.4605000035318901, 0.2897469239640405, 0.254223973932302, 0.2463593961550463] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 13]]
** centroid: 3, normalized-entropy: 0.9672947789468944, [(2, 20), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5640000113268131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5640000113268131, 0.3509298509964114] ***
*** starting iteration: 2; err: [Inf, 0.5640000113268131, 0.3509298509964114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5640000113268131, 0.3509298509964114, 0.29249447505983556] ***
*** starting iteration: 3; err: [Inf, 0.5640000113268131, 0.3509298509964114, 0.29249447505983556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5640000113268131, 0.3509298509964114, 0.29249447505983556, 0.2642071071878152] ***
*** finished computation of 7 references, err: [Inf, 0.5640000113268131, 0.3509298509964114, 0.29249447505983556, 0.2642071071878152] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 5: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 1]]
** centroid: 6, normalized-entropy: 1.0, [(2, 1), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5, 3.7, 1.44, 0.27999999999999997], [5.713333333333332, 2.713333333333334, 4.206666666666667, 1.3566666666666665], [5.042857142857143, 3.5857142857142854, 1.4928571428571427, 0.29285714285714287], [4.6625, 3.0625000000000004, 1.4312500000000001, 0.20000000000000007], [6.5875, 3.0625, 4.7250000000000005, 1.5250000000000001], [6.164285714285714, 2.8000000000000003, 5.178571428571429, 1.8571428571428574], [7.5125, 3.1125, 6.3625, 1.9500000000000002], [6.65, 3.1875, 5.75, 2.3249999999999997]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 1, 1, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.6090909090909085, 2.6772727272727272, 3.9818181818181815, 1.2227272727272729], [6.0625, 2.6999999999999997, 4.7, 1.475], [6.0, 2.772727272727273, 4.972727272727273, 1.8363636363636366], [5.118518518518518, 3.518518518518518, 1.511111111111111, 0.2481481481481482], [6.4, 3.0124999999999997, 5.25, 1.9875000000000003], [6.65, 3.02, 4.61, 1.4300000000000002], [7.6571428571428575, 3.1285714285714286, 6.528571428571428, 2.1], [6.7375, 3.2125000000000004, 5.699999999999999, 2.2624999999999997]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.499999999999999, 3.9111111111111114, 1.4666666666666666, 0.27777777777777785], [5.029411764705882, 3.3529411764705888, 1.5058823529411764, 0.23529411764705888], [6.710344827586208, 3.017241379310345, 5.589655172413793, 2.051724137931034], [6.237500000000001, 2.9125, 4.55, 1.425], [6.083333333333333, 2.6166666666666667, 5.033333333333332, 1.8333333333333333], [4.549999999999999, 2.9899999999999998, 1.34, 0.2], [5.607692307692307, 2.607692307692308, 3.853846153846154, 1.1846153846153846], [4.6, 3.5, 1.2, 0.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 2, 3, 1, 2, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[74, 10, 1, 1, 2, 2, 41, 1, 22, 12, 9, 24, 24, 14, 1, 1, 33, 27, 19, 32, 27, 55, 30, 5, 3, 20, 16, 1, 32, 25, 11, 19, 24, 26, 25, 44, 47, 32, 21, 1, 31, 25, 43, 3, 42, 30, 2, 43, 40, 30, 27, 23, 40, 15, 23, 20, 46, 2, 23, 39, 42, 40, 38, 38, 41, 34, 32, 30, 24, 38, 44, 19, 32, 33, 7, 20, 37, 18, 20, 40, 35, 50, 29, 26, 47, 33, 21, 30, 49, 18, 13, 20, 33, 13, 22, 40, 27, 44, 38, 27, 48, 37, 46, 41, 28, 48, 26, 45, 31, 30, 24, 12, 60, 34, 46, 39, 16, 24, 25, 38, 36, 38, 21, 65, 8, 16, 44, 28, 34, 47, 30, 41, 39, 32, 16, 33, 18, 26, 28, 29, 56, 42, 21, 42, 14, 23, 27, 49, 20, 46, 1, 43, 33, 58, 53, 18, 67, 36, 37, 44, 7, 51, 42, 36, 45, 42, 36, 25, 45, 26, 34, 47, 41, 60, 33, 68, 31, 16, 40, 57, 31, 29, 40, 53, 47, 2, 28, 31, 1, 29, 57, 26, 25, 46, 42, 47, 32, 37, 33, 38, 21, 41, 28, 37, 32, 22, 62, 41, 39, 44, 26, 20, 39, 49, 42, 25, 25, 1, 26, 40, 48, 19, 65, 33, 36, 32, 33, 61, 30, 42, 35, 23, 25, 32, 12, 40, 50, 24, 44, 52, 27, 40, 18, 42, 38, 33, 59, 45, 41, 34, 37, 26, 38, 61, 38, 48, 48, 66, 63, 40, 55, 25, 34, 31, 66, 46, 31, 54, 40, 49, 31, 21, 50, 48, 23, 42, 45, 90, 49, 38, 31, 48, 32, 42, 45, 19, 29, 32, 27, 51, 53, 74, 33, 48, 38, 37, 29, 18, 45, 47]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.565, speedup = 0.42284865353732987, eval_ratio = 0.041389999999999996)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39496527777777785,"recall":0.39496527777777785,"f1":null,"seconds":7.016398012638092e-5,"exhaustive_search_seconds":0.000392938032746315,"evaluations":342.546875,"distances_sum":1742.3980354180587}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.559895833333333,"recall":0.559895833333333,"f1":null,"seconds":0.0001020040363073349,"exhaustive_search_seconds":0.000392938032746315,"evaluations":381.421875,"distances_sum":1630.0983054598926}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6718749999999994,"recall":0.6718749999999994,"f1":0.6718749999999994,"seconds":0.00013409554958343506,"exhaustive_search_seconds":0.000392938032746315,"evaluations":420.546875,"distances_sum":1580.44130633653}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7291666666666661,"recall":0.7291666666666661,"f1":0.7291666666666661,"seconds":0.00030969828367233276,"exhaustive_search_seconds":0.000392938032746315,"evaluations":461.6328125,"distances_sum":1562.3468102271534}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7916666666666659,"recall":0.7916666666666659,"f1":0.7916666666666659,"seconds":0.00019104592502117157,"exhaustive_search_seconds":0.000392938032746315,"evaluations":501.25,"distances_sum":1544.3772486343719}
KCenters.DeloneInvIndex> reached performance {"precision":0.8394097222222215,"recall":0.8394097222222215,"f1":0.8394097222222215,"seconds":0.00022297538816928864,"exhaustive_search_seconds":0.000392938032746315,"evaluations":540.875,"distances_sum":1532.7814027461898}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.773, speedup = 1.790402138515556, eval_ratio = 0.053564)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
