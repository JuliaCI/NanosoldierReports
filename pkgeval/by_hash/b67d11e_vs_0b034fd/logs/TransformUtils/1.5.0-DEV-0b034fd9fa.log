Julia Version 1.5.0-DEV.4
Commit 0b034fd9fa (2020-01-03 14:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_oDMZGg/Project.toml`
 [no changes]
  Updating `/tmp/jl_oDMZGg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_oDMZGg/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.09846706695512138 0.027817758103682706; -0.09846706695512138 0.0 -0.003889102671811111; -0.027817758103682706 0.003889102671811111 0.0])
dAA = so3([0.0 -0.12865573740396385 0.08211930576845669; 0.12865573740396385 0.0 0.07293208694790902; -0.08211930576845669 -0.07293208694790902 0.0])
dAA = so3([0.0 0.148041066626554 -0.10898481482976857; -0.148041066626554 0.0 -0.05689836578548964; 0.10898481482976857 0.05689836578548964 0.0])
dAA = Quaternion(0.9982729640378789, [0.05625123216477786, 0.014142899061453551, -0.00932022301822789])
dAA = SO3([0.9687509187514847 -0.2454924357317662 0.0354276927930519; 0.24006596131133145 0.9639264112631729 0.11495306820162157; -0.06236979748099661 -0.10285590730621644 0.992738974098627])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9282789088260734 -0.3305762817911724 0.17034549992822812; 0.29369876328199207 0.9326644936542616 0.20947071089598243; -0.2281212481889904 -0.14441698028197122 0.9628626236026269]), [0.03889102671811111, 0.27817758103682705, -0.9846706695512137])
xj = SE3(SO3([0.9964389373920461 0.052163444012599106 0.06624514440888701; -0.031747499946832666 0.9599521313531306 -0.2783594829670935; -0.07811235687223703 0.275265109702131 0.9581897406487601]), [0.5689836578548964, -1.0898481482976856, -1.4804106662655399])
Dx = SE3(SO3([0.9334681363910993 0.2675651582688228 -0.23884330516702296; -0.34772809421551465 0.8383163152335225 -0.4198939486424345; 0.08787724868118045 0.4750101490430168 0.8755814910505799]), [0.2033751711925837, -1.3795518018313957, -0.6735919416495433])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
