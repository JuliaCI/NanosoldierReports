Julia Version 1.5.0-DEV.264
Commit 7d47855e1f (2020-02-10 22:29 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_qRmHE2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07306630086612097 0.07829265062189344; -0.07306630086612097 0.0 0.07184272766399051; -0.07829265062189344 -0.07184272766399051 0.0])
dAA = so3([0.0 0.11214878794748062 -0.09353635912385855; -0.11214878794748062 0.0 -0.008534206726517857; 0.09353635912385855 0.008534206726517857 0.0])
dAA = so3([0.0 0.12509840227461755 0.10400470587439835; -0.12509840227461755 0.0 0.15636863304859164; -0.10400470587439835 -0.15636863304859164 0.0])
dAA = Quaternion(0.9878402519663619, [-0.0718123897617938, 0.08784219933453294, 0.10629376880987447])
dAA = SO3([0.9871938978112625 0.1533465987437534 -0.043966223148331936; -0.15635655911218221 0.9847692153276276 -0.0760409032403422; 0.03163596919339289 0.08194152303155404 0.9961349066549491])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9340944804389937 0.2716970169848874 -0.23162088112888304; -0.27663077483289006 0.9609068168665722 0.011554380758258462; 0.22570537439051208 0.0532805805229799 0.9727375101795823]), [-0.718427276639905, 0.7829265062189343, -0.7306630086612097])
xj = SE3(SO3([0.7706694339802462 -0.5295382219258804 0.35448257368754216; 0.38728024129814465 0.8309757200791764 0.39936620705681286; -0.5060460831076727 -0.1704952320696131 0.8454872782087919]), [-1.5636863304859163, 1.0400470587439834, -1.2509840227461755])
Dx = SE3(SO3([0.49852711064954763 -0.7629938777813345 0.41147425486367395; 0.5545663811156257 0.645532193856877 0.5251136216388278; -0.6662783569077808 -0.03359358811632829 0.7449460530493052]), [-0.9781185236964085, -0.010308477520363013, -0.3073852521364976])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
