Julia Version 1.5.0-DEV.264
Commit 7d47855e1f (2020-02-10 22:29 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed YAML ──────────────────────── v0.3.2
  Installed Requires ──────────────────── v1.0.1
  Installed Mustache ──────────────────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed JSON ──────────────────────── v0.21.0
  Installed Highlights ────────────────── v0.4.5
  Installed Weave ─────────────────────── v0.9.1
  Installed DataAPI ───────────────────── v1.1.0
  Installed Compat ────────────────────── v2.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DocStringExtensions ───────── v0.8.1
  Installed Codecs ────────────────────── v0.5.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Tables ────────────────────── v0.2.11
   Updating `~/.julia/environments/v1.5/Project.toml`
  [44d3d7a6] + Weave v0.9.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [19ecbf4d] + Codecs v0.5.0
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [ffbed154] + DocStringExtensions v0.8.1
  [eafb193a] + Highlights v0.4.5
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [ffc61752] + Mustache v1.0.0
  [69de0a69] + Parsers v0.3.11
  [ae029012] + Requires v1.0.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [44d3d7a6] + Weave v0.9.1
  [ddb6d928] + YAML v0.3.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing Weave
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #####################################################                     74.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ########                                                                  11.4%########################                                                  33.7%############################################                              62.4%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##############################################                            64.6%######################################################################## 100.0%
#=#=#                                                                         ########                                                                  12.2%###########################                                               37.6%###################################################                       72.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################    98.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###                                                                        4.5%##########                                                                14.3%###################                                                       27.6%###############################                                           43.9%##############################################                            64.0%#################################################################         90.9%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################                    76.4%######################################################################## 100.0%
#=#=#                                                                         ############                                                              16.8%###################################                                       48.9%##################################################################        92.8%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #########################################                                 57.5%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ###################################################################       94.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ############################                                              39.8%######################################################################## 100.0%
#=#=#                                                                         ####                                                                       5.6%##############################                                            43.0%#######################################################################   99.5%######################################################################## 100.0%
#=#=#                                                                         #####                                                                      7.3%###############                                                           21.2%###########################                                               38.7%##########################################                                59.6%#################################################################         91.4%######################################################################## 100.0%
#=#=#                                                                                                                                                    0.6%########                                                                  11.2%#########################                                                 35.3%############################################                              62.3%######################################################################## 100.0%
#=#=#                                                                         ###############                                                           21.1%########################################                                  55.6%##########################################################                81.2%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##                                                                         3.5%########                                                                  11.5%################                                                          22.2%##########################                                                36.4%#######################################                                   55.2%########################################################                  77.8%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   -=#=#   #   #                                                                 -=O#- #  #    #                                                               -=O=#  #   #   #                                                              ##########                                                                14.1%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       #                                                                          2.7%######                                                                     8.8%###########                                                               15.3%##################                                                        25.6%############################                                              39.2%#############################                                             41.2%##########################################                                58.7%########################################################                  78.0%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #######################                                                   32.4%#####################################################################     96.1%######################################################################## 100.0%
#=#=#                                                                         #############                                                             19.1%######################################################################## 100.0%
#=#=#                                                                         ##############################################                            65.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ########                                                                  11.4%#########################                                                 35.4%#####################################################                     73.9%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ###############                                                           21.5%################################                                          45.3%################################################################          89.4%######################################################################    98.5%######################################################################## 100.0%
#=#=#                                                                         #####                                                                      7.5%##########                                                                14.2%###############                                                           22.2%######################                                                    30.9%############################                                              39.1%###################################                                       48.8%##########################################                                58.4%#################################################                         69.1%#########################################################                 79.5%##################################################################        92.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#####                                                                      7.0%######################################################################## 100.0%
                                                                           1.1%#######################################                                   54.8%######################################################################## 100.0%
                                                                           0.7%#######################                                                   32.0%#################################################################         91.5%######################################################################## 100.0%
Status `/tmp/jl_gjn6yV/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [13072b0f] AxisAlgorithms v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [6e34b625] Bzip2_jll v1.0.6+1
  [159f3aea] Cairo v1.0.2
  [83423d85] Cairo_jll v1.16.0+2
  [324d7699] CategoricalArrays v0.7.7
  [19ecbf4d] Codecs v0.5.0
  [3da002f7] ColorTypes v0.9.1
  [5ae59095] Colors v0.11.2
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a81c6b42] Compose v0.8.1
  [8f4d0f93] Conda v1.4.0
  [d38c429a] Contour v0.5.1
  [7ad07ef1] CoupledFields v0.1.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.22.4
  [ffbed154] DocStringExtensions v0.8.1
  [2e619515] Expat_jll v2.2.7+0
  [c87230d0] FFMPEG v0.2.4
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [53c48c17] FixedPointNumbers v0.7.1
  [a3f928ae] Fontconfig_jll v2.13.1+10
  [f6369f11] ForwardDiff v0.10.9
  [d7e528f0] FreeType2_jll v2.10.1+1
  [559328eb] FriBidi_jll v1.0.5+2
  [28b8d3ca] GR v0.46.0
  [c91e804a] Gadfly v1.2.0
  [4d00f742] GeometryTypes v0.7.7
  [78b55507] Gettext_jll v0.20.1+1
  [7746bdde] Glib_jll v2.59.0+1
  [a2bd30eb] Graphics v1.0.1
  [3b182d85] Graphite2_jll v1.3.13+1
  [2e76f6c2] HarfBuzz_jll v2.6.1+4
  [a1b4810d] Hexagons v0.2.0
  [eafb193a] Highlights v0.4.5
  [7073ff75] IJulia v1.21.1
  [9b13fd28] IndirectArrays v0.5.1
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e5e0dc1b] Juno v0.7.2
  [5ab0869b] KernelDensity v0.5.1
  [dd4b983a] LZO_jll v2.10.0+0
  [e9f186c6] Libffi_jll v3.2.1+0
  [d4300ac3] Libgcrypt_jll v1.8.5+0
  [7add5ba3] Libgpg_error_jll v1.36.0+0
  [94ce4f54] Libiconv_jll v1.16.0+1
  [38a345b3] Libuuid_jll v2.34.0+3
  [d3d80556] LineSearches v7.0.1
  [4345ca2d] Loess v0.5.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [739be429] MbedTLS v0.7.0
  [442fdcdd] Measures v0.3.1
  [e89f7d12] Media v0.5.0
  [e1d29d7a] Missings v0.4.3
  [ffc61752] Mustache v1.0.0
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [2f80f16e] PCRE_jll v8.42.0+1
  [90014a1f] PDMats v0.9.11
  [36c8627f] Pango_jll v1.42.4+7
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [30392449] Pixman_jll v0.38.4+1
  [ccf2f8ad] PlotThemes v1.0.1
  [995b91a9] PlotUtils v0.6.3
  [91a5bcdd] Plots v0.29.1
  [85a6dd25] PositiveFactorizations v0.2.3
  [1fd47b50] QuadGK v2.3.1
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.8.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [992d4aef] Showoff v0.3.1
  [b85f4697] SoftGlobalScope v1.0.10
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [81def892] VersionParsing v1.2.0
  [44d3d7a6] Weave v0.9.1
  [efce3f68] WoodburyMatrices v0.5.0
  [546b0b6d] X11_jll v1.6.8+5
  [02c8fc9c] XML2_jll v2.9.9+1
  [aed1982a] XSLT_jll v1.1.33+0
  [4f6342f7] Xorg_libX11_jll v1.6.9+0
  [0c0b7dd1] Xorg_libXau_jll v1.0.9+1
  [a3789734] Xorg_libXdmcp_jll v1.1.3+1
  [1082639a] Xorg_libXext_jll v1.3.4+1
  [ea2f1a96] Xorg_libXrender_jll v0.9.10+1
  [14d82f49] Xorg_libpthread_stubs_jll v0.1.0+0
  [c7cfdc94] Xorg_libxcb_jll v1.13.0+1
  [21e99dc2] Xorg_renderproto_jll v0.11.1+0
  [7c09cfe3] Xorg_util_macros_jll v1.19.2+0
  [c2e9c405] Xorg_xcb_proto_jll v1.13.0+0
  [d13bc2ba] Xorg_xextproto_jll v7.3.0+0
  [46797783] Xorg_xproto_jll v7.0.31+0
  [c5fb5394] Xorg_xtrans_jll v1.4.0+0
  [ddb6d928] YAML v0.3.2
  [c2297ded] ZMQ v1.2.0
  [8f1865be] ZeroMQ_jll v4.3.1+0
  [83775a58] Zlib_jll v1.2.11+8
  [b53b4c65] libpng_jll v1.6.37+2
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [7b1f6079] FileWatching 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [9abbd945] Profile 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
WARNING: Method definition latex(IO, Markdown.LaTeX) in module Markdown at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Markdown/src/IPython/IPython.jl:28 overwritten in module WeaveMarkdown at /home/pkgeval/.julia/packages/Weave/UOxmI/src/WeaveMarkdown/latex.jl:4.
  ** incremental compilation may be fatally broken for this module **

[ Info: Test: Chunk options
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 6
[ Info: Weaving chunk 3 from line 12
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 31
[ Info: Weaving chunk 7 from line 36
[ Info: Weaving chunk 8 from line 41
[ Info: Weaving chunk 9 from line 47
[ Info: Weaving chunk 10 from line 51
[ Info: Weaving chunk 11 from line 55
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_options.md
[ Info: Writing to file documents/tangle/chunk_options.jl
[ Info: Testing error handling
[ Info: Weaving chunk 1 from line 2
┌ Warning: ERROR: ArgumentError occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 2 from line 6
┌ Warning: ERROR: ErrorException occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 3 from line 11
┌ Warning: ERROR: UndefVarError occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
┌ Warning: ERROR: ErrorException occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 1 from line 2
┌ Warning: ERROR: ArgumentError occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 2 from line 6
┌ Warning: ERROR: ErrorException occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 3 from line 11
┌ Warning: ERROR: UndefVarError occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
┌ Warning: ERROR: ErrorException occurred, including output in Weaved document
└ @ Weave ~/.julia/packages/Weave/UOxmI/src/run.jl:243
[ Info: Weaving chunk 1 from line 1
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 1 from line 1
[ Info: Weaving chunk 2 from line 13
[ Info: Test: Converting
[ Info: Testing formatters
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 6
[ Info: Weaving chunk 3 from line 12
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 31
[ Info: Weaving chunk 7 from line 36
[ Info: Weaving chunk 8 from line 41
[ Info: Weaving chunk 9 from line 47
[ Info: Weaving chunk 10 from line 51
[ Info: Weaving chunk 11 from line 55
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 6
[ Info: Weaving chunk 3 from line 12
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 31
[ Info: Weaving chunk 7 from line 36
[ Info: Weaving chunk 8 from line 41
[ Info: Weaving chunk 9 from line 47
[ Info: Weaving chunk 10 from line 51
[ Info: Weaving chunk 11 from line 55
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 15
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 15
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 15
[ Info: Testing figure formatters
[ Info: Testing rich output
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 43
[ Info: Weaving chunk 3 from line 48
[ Info: Weaving chunk 4 from line 54
[ Info: Report weaved to documents/multimedia/rich_output.html
Rich output: Test Failed at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
  Expression: result == ref
   Evaluated: "\n\n<pre class='hljl'>\n<span class='hljl-k'>import</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/html&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;table&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;tr&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;td&gt;</span><span class='hljl-si'>\$r</span><span class='hljl-s'>&lt;/td&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;/tr&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;/table&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n</span><span class='hljl-cs'>#This isn&#39;t valid latex, doesn&#39;t matter for the test</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/latex&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\</span><span class='hljl-s'>begin{tabular}&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-si'>\$r</span><span class='hljl-s'> &amp; &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\\\\\</span><span class='hljl-s'>&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot; </span><span class='hljl-se'>\\\\</span><span class='hljl-s'>hline&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\</span><span class='hljl-s'>end{tabular&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n</span><span class='hljl-cs'>#This isn&#39;t valid markdown, doesn&#39;t matter for the test</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/markdown&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;-----&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;| &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-si'>\$r</span><span class='hljl-s'> | &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;-----&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n\n</span><span class='hljl-n'>x</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-p'>[</span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-ni'>3</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-ni'>3</span><span class='hljl-p'>)]</span><span class='hljl-t'>\n</span><span class='hljl-n'>ca</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-sc'>&#39;a&#39;</span><span class='hljl-oB'>:</span><span class='hljl-sc'>&#39;d&#39;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-n'>ca</span>\n</pre>\n\n\n\n<table><tr><td>a</td></tr><tr><td>b</td></tr><tr><td>c</td></tr><tr><td>d</td></tr></table>\n\n\n<pre class='hljl'>\n<span class='hljl-nf'>display</span><span class='hljl-p'>(</span><span class='hljl-n'>ca</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-nf'>display</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>)</span>\n</pre>\n\n\n\n<table><tr><td>a</td></tr><tr><td>b</td></tr><tr><td>c</td></tr><tr><td>d</td></tr></table>\n<table><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>2</td></tr><tr><td>3</td><td>3</td></tr></table>\n\n<pre class='hljl'>\n<span class='hljl-nB'>julia&gt; </span><span class='hljl-n'>x</span><span class='hljl-t'>\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\n</span><span class='hljl-nB'>julia&gt; </span><span class='hljl-n'>ca</span><span class='hljl-t'>\n4-element Array{Char,1}:\n &#39;a&#39;: ASCII/Unicode U+0061 (category Ll: Letter, lowercase)\n &#39;b&#39;: ASCII/Unicode U+0062 (category Ll: Letter, lowercase)\n &#39;c&#39;: ASCII/Unicode U+0063 (category Ll: Letter, lowercase)\n &#39;d&#39;: ASCII/Unicode U+0064 (category Ll: Letter, lowercase)</span>\n</pre>\n\n\n<pre class='hljl'>\n<span class='hljl-k'>using</span><span class='hljl-t'> </span><span class='hljl-n'>Markdown</span><span class='hljl-t'>\n</span><span class='hljl-n'>m</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-n'>Markdown</span><span class='hljl-oB'>.</span><span class='hljl-nf'>parse</span><span class='hljl-p'>(</span><span class='hljl-s'>&quot;**Some Markdown**&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-n'>m</span>\n</pre>\n\n\n\n<div class=\"markdown\"><p><strong>Some Markdown</strong></p>\n</div>\n\n" == "\n\n<pre class='hljl'>\n<span class='hljl-k'>import</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/html&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;table&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;tr&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;td&gt;</span><span class='hljl-si'>\$r</span><span class='hljl-s'>&lt;/td&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;/tr&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&lt;/table&gt;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n</span><span class='hljl-cs'>#This isn&#39;t valid latex, doesn&#39;t matter for the test</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/latex&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\</span><span class='hljl-s'>begin{tabular}&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-si'>\$r</span><span class='hljl-s'> &amp; &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\\\\\</span><span class='hljl-s'>&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot; </span><span class='hljl-se'>\\\\</span><span class='hljl-s'>hline&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-se'>\\\\</span><span class='hljl-s'>end{tabular&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n</span><span class='hljl-cs'>#This isn&#39;t valid markdown, doesn&#39;t matter for the test</span><span class='hljl-t'>\n</span><span class='hljl-k'>function</span><span class='hljl-t'> </span><span class='hljl-n'>Base</span><span class='hljl-oB'>.</span><span class='hljl-nf'>show</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-oB'>::</span><span class='hljl-n'>IO</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>m</span><span class='hljl-oB'>::</span><span class='hljl-so'>MIME&quot;text/markdown&quot;</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-oB'>::</span><span class='hljl-n'>Array</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;-----&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>i</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-nf'>size</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>,</span><span class='hljl-ni'>1</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;| &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n        </span><span class='hljl-p'>[</span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;</span><span class='hljl-si'>\$r</span><span class='hljl-s'> | &quot;</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-k'>for</span><span class='hljl-t'> </span><span class='hljl-n'>r</span><span class='hljl-t'> </span><span class='hljl-kp'>in</span><span class='hljl-t'> </span><span class='hljl-n'>x</span><span class='hljl-p'>[</span><span class='hljl-n'>i</span><span class='hljl-p'>,</span><span class='hljl-oB'>:</span><span class='hljl-p'>]]</span><span class='hljl-t'>\n        </span><span class='hljl-nf'>println</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n    </span><span class='hljl-k'>end</span><span class='hljl-t'>\n    </span><span class='hljl-nf'>print</span><span class='hljl-p'>(</span><span class='hljl-n'>io</span><span class='hljl-p'>,</span><span class='hljl-t'> </span><span class='hljl-s'>&quot;-----&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-k'>end</span><span class='hljl-t'>\n\n\n</span><span class='hljl-n'>x</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-p'>[</span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-ni'>3</span><span class='hljl-p'>)</span><span class='hljl-t'> </span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-ni'>1</span><span class='hljl-oB'>:</span><span class='hljl-ni'>3</span><span class='hljl-p'>)]</span><span class='hljl-t'>\n</span><span class='hljl-n'>ca</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-nf'>collect</span><span class='hljl-p'>(</span><span class='hljl-sc'>&#39;a&#39;</span><span class='hljl-oB'>:</span><span class='hljl-sc'>&#39;d&#39;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-n'>ca</span>\n</pre>\n\n\n\n<table><tr><td>a</td></tr><tr><td>b</td></tr><tr><td>c</td></tr><tr><td>d</td></tr></table>\n\n\n<pre class='hljl'>\n<span class='hljl-nf'>display</span><span class='hljl-p'>(</span><span class='hljl-n'>ca</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-nf'>display</span><span class='hljl-p'>(</span><span class='hljl-n'>x</span><span class='hljl-p'>)</span>\n</pre>\n\n\n\n<table><tr><td>a</td></tr><tr><td>b</td></tr><tr><td>c</td></tr><tr><td>d</td></tr></table>\n<table><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>2</td></tr><tr><td>3</td><td>3</td></tr></table>\n\n<pre class='hljl'>\n<span class='hljl-nB'>julia&gt; </span><span class='hljl-n'>x</span><span class='hljl-t'>\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\n</span><span class='hljl-nB'>julia&gt; </span><span class='hljl-n'>ca</span><span class='hljl-t'>\n4-element Array{Char,1}:\n &#39;a&#39;\n &#39;b&#39;\n &#39;c&#39;\n &#39;d&#39;</span>\n</pre>\n\n\n<pre class='hljl'>\n<span class='hljl-k'>using</span><span class='hljl-t'> </span><span class='hljl-n'>Markdown</span><span class='hljl-t'>\n</span><span class='hljl-n'>m</span><span class='hljl-t'> </span><span class='hljl-oB'>=</span><span class='hljl-t'> </span><span class='hljl-n'>Markdown</span><span class='hljl-oB'>.</span><span class='hljl-nf'>parse</span><span class='hljl-p'>(</span><span class='hljl-s'>&quot;**Some Markdown**&quot;</span><span class='hljl-p'>)</span><span class='hljl-t'>\n</span><span class='hljl-n'>m</span>\n</pre>\n\n\n\n<div class=\"markdown\"><p><strong>Some Markdown</strong></p>\n</div>\n\n"
Stacktrace:
 [1] mmtest(::String, ::String, ::String) at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
 [2] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:13
 [3] include(::String) at ./client.jl:439
 [4] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:34
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:33
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:5
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 43
[ Info: Weaving chunk 3 from line 48
[ Info: Weaving chunk 4 from line 54
[ Info: Report weaved to documents/multimedia/rich_output.md
Rich output: Test Failed at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
  Expression: result == ref
   Evaluated: "~~~~{.julia}\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n~~~~~~~~~~~~~\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n\n~~~~{.julia}\ndisplay(ca)\ndisplay(x)\n~~~~~~~~~~~~~\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n-----\n| 1 | 1 | \n| 2 | 2 | \n| 3 | 3 | \n-----\n\n~~~~{.julia}\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a': ASCII/Unicode U+0061 (category Ll: Letter, lowercase)\n 'b': ASCII/Unicode U+0062 (category Ll: Letter, lowercase)\n 'c': ASCII/Unicode U+0063 (category Ll: Letter, lowercase)\n 'd': ASCII/Unicode U+0064 (category Ll: Letter, lowercase)\n\n~~~~~~~~~~~~~\n\n\n\n~~~~{.julia}\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n~~~~~~~~~~~~~\n\n\n\n**Some Markdown**\n\n" == "~~~~{.julia}\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n~~~~~~~~~~~~~\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n\n~~~~{.julia}\ndisplay(ca)\ndisplay(x)\n~~~~~~~~~~~~~\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n-----\n| 1 | 1 | \n| 2 | 2 | \n| 3 | 3 | \n-----\n\n~~~~{.julia}\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a'\n 'b'\n 'c'\n 'd'\n\n~~~~~~~~~~~~~\n\n\n\n~~~~{.julia}\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n~~~~~~~~~~~~~\n\n\n\n**Some Markdown**\n\n"
Stacktrace:
 [1] mmtest(::String, ::String, ::String) at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
 [2] top-level scope at none:14
 [3] include(::String) at ./client.jl:439
 [4] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:34
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:33
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:5
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 43
[ Info: Weaving chunk 3 from line 48
[ Info: Weaving chunk 4 from line 54
[ Info: Report weaved to documents/multimedia/rich_output.tex
Rich output: Test Failed at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
  Expression: result == ref
   Evaluated: "\\begin{juliacode}\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n\\end{juliacode}\n\n\\begin{tabular}\na & \\\\ \\hline\nb & \\\\ \\hline\nc & \\\\ \\hline\nd & \\\\ \\hline\n\\end{tabular\n\n\\begin{juliacode}\ndisplay(ca)\ndisplay(x)\n\\end{juliacode}\n\n\\begin{tabular}\na & \\\\ \\hline\nb & \\\\ \\hline\nc & \\\\ \\hline\nd & \\\\ \\hline\n\\end{tabular\n\\begin{tabular}\n1 & 1 & \\\\ \\hline\n2 & 2 & \\\\ \\hline\n3 & 3 & \\\\ \\hline\n\\end{tabular\n\n\\begin{juliaterm}\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a': ASCII/Unicode U+0061 (category Ll: Letter, lowercase)\n 'b': ASCII/Unicode U+0062 (category Ll: Letter, lowercase)\n 'c': ASCII/Unicode U+0063 (category Ll: Letter, lowercase)\n 'd': ASCII/Unicode U+0064 (category Ll: Letter, lowercase)\n\n\\end{juliaterm}\n\n\\begin{juliacode}\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n\\end{juliacode}\n\n\\textbf{Some Markdown}\n\n\n" == "\\begin{juliacode}\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n\\end{juliacode}\n\n\\begin{tabular}\na & \\\\ \\hline\nb & \\\\ \\hline\nc & \\\\ \\hline\nd & \\\\ \\hline\n\\end{tabular\n\n\\begin{juliacode}\ndisplay(ca)\ndisplay(x)\n\\end{juliacode}\n\n\\begin{tabular}\na & \\\\ \\hline\nb & \\\\ \\hline\nc & \\\\ \\hline\nd & \\\\ \\hline\n\\end{tabular\n\\begin{tabular}\n1 & 1 & \\\\ \\hline\n2 & 2 & \\\\ \\hline\n3 & 3 & \\\\ \\hline\n\\end{tabular\n\n\\begin{juliaterm}\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a'\n 'b'\n 'c'\n 'd'\n\n\\end{juliaterm}\n\n\\begin{juliacode}\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n\\end{juliacode}\n\n\\textbf{Some Markdown}\n\n\n"
Stacktrace:
 [1] mmtest(::String, ::String, ::String) at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
 [2] top-level scope at none:15
 [3] include(::String) at ./client.jl:439
 [4] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:34
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:33
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:5
[ Info: Weaving chunk 1 from line 3
[ Info: Weaving chunk 2 from line 43
[ Info: Weaving chunk 3 from line 48
[ Info: Weaving chunk 4 from line 54
[ Info: Report weaved to documents/multimedia/rich_output.github
Rich output: Test Failed at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
  Expression: result == ref
   Evaluated: "````julia\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n````\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n\n````julia\ndisplay(ca)\ndisplay(x)\n````\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n-----\n| 1 | 1 | \n| 2 | 2 | \n| 3 | 3 | \n-----\n\n````julia\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a': ASCII/Unicode U+0061 (category Ll: Letter, lowercase)\n 'b': ASCII/Unicode U+0062 (category Ll: Letter, lowercase)\n 'c': ASCII/Unicode U+0063 (category Ll: Letter, lowercase)\n 'd': ASCII/Unicode U+0064 (category Ll: Letter, lowercase)\n\n````\n\n\n\n````julia\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n````\n\n\n\n**Some Markdown**\n\n" == "````julia\nimport Base\nfunction Base.show(io::IO, m::MIME\"text/html\", x::Array)\n    print(io, \"<table>\")\n    for i in 1:size(x,1)\n        print(io, \"<tr>\")\n        [print(io, \"<td>\$r</td>\") for r in x[i,:]]\n        print(io, \"</tr>\")\n    end\n    print(io, \"</table>\")\nend\n\n#This isn't valid latex, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/latex\", x::Array)\n    println(io, \"\\\\begin{tabular}\")\n    for i in 1:size(x,1)\n        [print(io, \"\$r & \") for r in x[i,:]]\n        print(io, \"\\\\\\\\\")\n        println(io, \" \\\\hline\")\n    end\n    print(io, \"\\\\end{tabular\")\nend\n\n#This isn't valid markdown, doesn't matter for the test\nfunction Base.show(io::IO, m::MIME\"text/markdown\", x::Array)\n    println(io, \"-----\")\n    for i in 1:size(x,1)\n        print(io, \"| \")\n        [print(io, \"\$r | \") for r in x[i,:]]\n        println(io, \"\")\n    end\n    print(io, \"-----\")\nend\n\n\nx = [collect(1:3) collect(1:3)]\nca = collect('a':'d')\nca\n````\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n\n````julia\ndisplay(ca)\ndisplay(x)\n````\n\n\n\n-----\n| a | \n| b | \n| c | \n| d | \n-----\n-----\n| 1 | 1 | \n| 2 | 2 | \n| 3 | 3 | \n-----\n\n````julia\njulia> x\n3×2 Array{Int64,2}:\n 1  1\n 2  2\n 3  3\n\njulia> ca\n4-element Array{Char,1}:\n 'a'\n 'b'\n 'c'\n 'd'\n\n````\n\n\n\n````julia\nusing Markdown\nm = Markdown.parse(\"**Some Markdown**\")\nm\n````\n\n\n\n**Some Markdown**\n\n"
Stacktrace:
 [1] mmtest(::String, ::String, ::String) at /home/pkgeval/.julia/packages/Weave/UOxmI/test/rich_output.jl:9
 [2] top-level scope at none:16
 [3] include(::String) at ./client.jl:439
 [4] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:34
 [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [6] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:33
 [7] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [8] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:5
[ Info: Test: Weaving with Plots.jl
[ Info: Weaving chunk 1 from line 3
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 2 from line 13
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 3 from line 17
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 4 from line 23
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Report weaved to documents/plotsjl/plotsjl_test_gr.md
[ Info: Weaving chunk 1 from line 3
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 2 from line 13
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 3 from line 17
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 4 from line 23
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Report weaved to documents/plotsjl/plotsjl_test_gr.tex
[ Info: No cached results found, running code
[ Info: Weaving chunk 1 from line 3
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 2 from line 13
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 3 from line 17
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Weaving chunk 4 from line 23
QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-pkgeval'
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/plotsjl_test_gr.html
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/plotsjl_test_gr.html
[ Info: Testing cache
[ Info: No cached results found, running code
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 6
[ Info: Weaving chunk 3 from line 12
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 31
[ Info: Weaving chunk 7 from line 36
[ Info: Weaving chunk 8 from line 41
[ Info: Weaving chunk 9 from line 47
[ Info: Weaving chunk 10 from line 51
[ Info: Weaving chunk 11 from line 55
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_options.md
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_options.md
[ Info: No cached results found, running code
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 8
[ Info: Weaving chunk 3 from line 13
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 32
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_cache.md
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 3 from line 13
[ Info: Weaving chunk 5 from line 25
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_cache.md
[ Info: No cached results found, running code
[ Info: Weaving chunk 1 from line 2
[ Info: Weaving chunk 2 from line 8
[ Info: Weaving chunk 3 from line 13
[ Info: Weaving chunk 4 from line 19
[ Info: Weaving chunk 5 from line 25
[ Info: Weaving chunk 6 from line 32
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_cache.md
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/chunk_cache.md
[ Info: Test: Weaving with Gadfly.jl
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.md
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.md
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.md
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.md
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.md
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.tex
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.tex
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.tex
[ Info: Weaving chunk 1 from line 6
[ Info: Weaving chunk 2 from line 13
[ Info: Weaving chunk 3 from line 17
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/gadfly/gadfly_formats_test.tex
[ Info: Testing header options
[ Info: Testing inline code
[ Info: Weaving chunk 1 from line 8
[ Info: Weaving chunk 2 from line 28
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/inline/markdown_beamer.html
[ Info: Weaving chunk 1 from line 8
[ Info: Weaving chunk 2 from line 28
[ Info: Report weaved to /home/pkgeval/.julia/packages/Weave/UOxmI/test/documents/inline/markdown_beamer.tex
Inline code: Test Failed at /home/pkgeval/.julia/packages/Weave/UOxmI/test/inline_test.jl:42
  Expression: read(out, String) == read(out * ".ref", String)
   Evaluated: "\n\n\n\n\\begin{frame}[fragile]\n\\frametitle{Random plot}\n\nSome inline output\n\n\n\\begin{lstlisting}\n(*@\\HLJLnf{println}@*)(*@\\HLJLp{(}@*)(*@\\HLJLs{\"{}Testing}@*) (*@\\HLJLs{output\"{}}@*)(*@\\HLJLp{)}@*)\n\\end{lstlisting}\n\n\\begin{lstlisting}\nTesting output\n\\end{lstlisting}\n\n\n\n\n\\end{frame}\n\n" == "\n\n\n\n\\begin{frame}[fragile]\n\\frametitle{Random plot}\n\nSome inline output\n\n\n\\begin{lstlisting}\n(*@\\HLJLnf{println}@*)(*@\\HLJLp{(}@*)(*@\\HLJLs{\"Testing output\"}@*)(*@\\HLJLp{)}@*)\n\\end{lstlisting}\n\n\\begin{lstlisting}\nTesting output\n\\end{lstlisting}\n\n\n\n\n\\end{frame}\n\n"
Stacktrace:
 [1] top-level scope at none:42
 [2] include(::String) at ./client.jl:439
 [3] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:59
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:58
 [6] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [7] top-level scope at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:5
Test Summary:     | Pass  Fail  Total
Weave             |  105     5    110
  Chunk options   |    2            2
  Error handling  |    8            8
  Eval in module  |    9            9
  Conversions     |    6            6
  Formatters      |   49           49
  Rich output     |          4      4
  Plots           |    3            3
  Cache           |    3            3
  Gadfly          |   11           11
  Header options  |    5            5
  Inline code     |    9     1     10
ERROR: LoadError: Some tests did not pass: 105 passed, 5 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Weave/UOxmI/test/runtests.jl:4
ERROR: Package Weave errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
