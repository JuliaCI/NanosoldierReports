Julia Version 1.5.0-DEV.269
Commit 2538080e8c (2020-02-12 17:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_eT6LlE/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.021044533709822247 0.07577619270791812; -0.021044533709822247 0.0 -0.035797516044981596; -0.07577619270791812 0.035797516044981596 0.0])
dAA = so3([0.0 0.13883865453924102 0.07236669889902324; -0.13883865453924102 0.0 0.09533717724186855; -0.07236669889902324 -0.09533717724186855 0.0])
dAA = so3([0.0 -0.07267491164914984 0.04101036042220383; 0.07267491164914984 0.0 -0.04694195075538852; -0.04101036042220383 0.04694195075538852 0.0])
dAA = Quaternion(0.9991135241620844, [-0.03758832553137997, 0.0031754940431303986, -0.0186868899967064])
dAA = SO3([0.988898247976168 0.1350115831602288 0.06206551024711182; -0.13575666520448657 0.9907104791630993 0.007929333451149767; -0.0604183995337733 -0.016267110652823612 0.9980405793898294])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9247278297798331 0.31388894710810283 0.21529554039516594; -0.35625978486511506 0.9128987994937983 0.1992354074220842; -0.13400524810074366 -0.2609396688243253 0.9560089344327853]), [0.3579751604498159, 0.7577619270791811, -0.21044533709822244])
xj = SE3(SO3([0.9955249834900296 0.09211922264768316 0.02107263785013364; -0.09443580232157124 0.9779470936359879 0.1862830139567359; -0.0034476785026198416 -0.18743940585616176 0.9822701169460626]), [0.4694195075538852, 0.4101036042220383, 0.7267491164914984])
Dx = SE3(SO3([0.9546953431061019 -0.2381001482626133 -0.17850804253266506; 0.22717359440558724 0.9705923100427758 -0.07964123109717738; 0.19222112229504856 0.03548079879526117 0.9807100249617529]), [0.10132339327449742, -0.5269469271403631, 0.8506938942682611])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
