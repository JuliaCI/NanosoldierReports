Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.1.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.1.13
  Installed Tables ────────────────────── v1.0.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataStructures ────────────── v0.17.9
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Parsers ───────────────────── v0.3.11
  Installed Missings ──────────────────── v0.4.3
  Installed MLDataUtils ───────────────── v0.5.0
  Installed MLDataPattern ─────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed JSON ──────────────────────── v0.21.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed LearnBase ─────────────────── v0.2.2
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.5.0
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed DataFrames ────────────────── v0.18.4
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.13
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.18.4
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.13
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_Espl30/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.18.4
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.13
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8321307849884033
[ Info: 0.5551733379065991
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33252118043601514
mean(cdnet.distances) = 0.39881691440939904
mean(crand.distances) = 0.34758907039960224
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7891911907536915,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.5078125,"distances_sum":1822.2608693704597}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7891911907536915,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.5078125,"distances_sum":1822.2608693704597}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.930743735431236,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.625,"distances_sum":2563.2463939843205}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8444669913419923,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.15625,"distances_sum":2033.7003513167901}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.930743735431236,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.625,"distances_sum":2563.2463939843205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506810897435901,"seconds":6.848946213722229e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2702.0030176304126}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506810897435901,"seconds":6.848946213722229e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2702.0030176304126}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506810897435901,"seconds":6.848946213722229e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2702.0030176304126}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8072849025974035,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.9921875,"distances_sum":1606.9020448859412}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5703125,"f1":null,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.359375,"distances_sum":1310.700173104769}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8072849025974035,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.9921875,"distances_sum":1606.9020448859412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9294221403596409,"seconds":6.861984729766846e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.7421875,"distances_sum":2260.9991677325825}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9229338369963376,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.6171875,"distances_sum":2220.4993451581995}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.909320887445888,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.59375,"distances_sum":2118.0293005266853}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.878946574259075,"seconds":6.487593054771423e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.578125,"distances_sum":1979.3844427872436}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9294221403596409,"seconds":6.861984729766846e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.7421875,"distances_sum":2260.9991677325825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596783424908429,"seconds":7.4375420808792114e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.828125,"distances_sum":2492.777522904352}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971211080586081,"seconds":7.370486855506897e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.90625,"distances_sum":2546.3384356246165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9604739010989015,"seconds":7.2158873081207275e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.84375,"distances_sum":2461.3576452974035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9312442765567773,"seconds":7.0463865995407104e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.6953125,"distances_sum":2278.0563829617486}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711538461538464,"seconds":7.68713653087616e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8671875,"distances_sum":2553.8274646925975}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941398,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.90625,"distances_sum":2568.39508409901}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542639652014658,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8125,"distances_sum":2433.684088077261}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669127747252751,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2520.1973940317416}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941398,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.90625,"distances_sum":2568.39508409901}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941398,"seconds":7.398426532745361e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.90625,"distances_sum":2568.39508409901}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.78125,"distances_sum":846.8046885400234}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4208984375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.78125,"distances_sum":846.8046885400234}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8753616175491182,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5546875,"distances_sum":1857.5558159447694}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8059206418581427,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1328125,"distances_sum":1561.803054138699}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8753616175491182,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5546875,"distances_sum":1857.5558159447694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9070226648351656,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2008.5195594122208}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373631,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.984375,"distances_sum":2339.710391238268}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549736721611728,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.921875,"distances_sum":2342.4482136957945}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669127747252749,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.96875,"distances_sum":2427.339091212566}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669127747252749,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.96875,"distances_sum":2427.339091212566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9669127747252749,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.96875,"distances_sum":2427.339091212566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8323187229437238,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0,"distances_sum":1768.815582570758}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":2.8032809495925903e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":4.6796875,"distances_sum":424.53653452868525}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8501512376512385,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0859375,"distances_sum":1843.3376366226044}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8501512376512385,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0859375,"distances_sum":1843.3376366226044}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8958676739926748,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.390625,"distances_sum":2059.036017283425}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9244193306693315,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6484375,"distances_sum":2255.4457798572025}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.892545475357976,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.2734375,"distances_sum":2086.147784203783}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8792816558441569,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.3671875,"distances_sum":1986.134960363714}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9244193306693315,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6484375,"distances_sum":2255.4457798572025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953019376456877,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2494.0155984967905}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9557005494505499,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.796875,"distances_sum":2463.51227294357}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619052,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9296875,"distances_sum":2585.8714618718955}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572802197802203,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8359375,"distances_sum":2471.7817262218873}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589342948717956,"seconds":7.957220077514648e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.859375,"distances_sum":2501.247473454135}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564789377289383,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.796875,"distances_sum":2506.917534076594}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619052,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9296875,"distances_sum":2585.8714618718955}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619052,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9296875,"distances_sum":2585.8714618718955}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7845845127095135,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.796875,"distances_sum":1480.1845470939704}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8438795579420587,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2578125,"distances_sum":1751.6088269091474}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.1795352697372437e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.390625,"distances_sum":411.37868887421814}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8438795579420587,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.2578125,"distances_sum":1751.6088269091474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9073291292041299,"seconds":8.121132850646973e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6328125,"distances_sum":2053.307518002344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428514194139201,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2338.890275786845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477564102564108,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7734375,"distances_sum":2349.1083724671034}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8639974608724617,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.359375,"distances_sum":1838.9897602867377}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9477564102564108,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7734375,"distances_sum":2349.1083724671034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":2563.1511371836737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.921875,"distances_sum":2531.8315747378183}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179491,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9375,"distances_sum":2543.7657361695806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9725503663003667,"seconds":6.966292858123779e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9609375,"distances_sum":2498.7013122408557}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9559924450549455,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.796875,"distances_sum":2414.360217677134}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":2563.1511371836737}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":2563.1511371836737}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3125,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.4765625,"distances_sum":760.6434825051548}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.770745747308248,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.796875,"distances_sum":1509.930367572189}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.770745747308248,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.796875,"distances_sum":1509.930367572189}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9438472985347992,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5625,"distances_sum":2407.63041771301}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9438472985347992,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.5625,"distances_sum":2407.63041771301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2495.682101746953}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967027243589744,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2479.357713840538}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8671875,"distances_sum":2524.087032804992}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2495.682101746953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2495.682101746953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1611328125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1611328125,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.234375,"distances_sum":369.51298793951366}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.158203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.158203125,"f1":null,"seconds":3.2410025596618652e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.265625,"distances_sum":318.96565007942746}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1611328125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1611328125,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.234375,"distances_sum":369.51298793951366}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1611328125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1611328125,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":4.234375,"distances_sum":369.51298793951366}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.5078125,"distances_sum":772.5700032373383}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.0625,"distances_sum":626.8106985069829}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8533163017538026,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":7.9765625,"distances_sum":1587.0345727800873}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8533163017538026,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":7.9765625,"distances_sum":1587.0345727800873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":2232.8625026233844}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9338198260073264,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.6171875,"distances_sum":2058.216893142607}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":2232.8625026233844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":2232.8625026233844}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.8125,"distances_sum":2232.8625026233844}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7797129953379961,"seconds":4.252418875694275e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.5390625,"distances_sum":1358.3941195616078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8721731393606401,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.109375,"distances_sum":1796.3346777972972}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7723446692196699,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.5,"distances_sum":1339.7853206670122}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8721731393606401,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.109375,"distances_sum":1796.3346777972972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9567937271062278,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2339.4185985782187}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8945856227106235,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.484375,"distances_sum":1934.3827156682958}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9075148809523816,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.515625,"distances_sum":1998.2026506200937}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491872710622716,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2314.9220963332414}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9567937271062278,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2339.4185985782187}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654418498168502,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":2432.424108336081}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642373251748255,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":2406.770823976617}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766025641025643,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2510.8477266463583}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9651842948717952,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2463.402381700137}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9663003663003663,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.890625,"distances_sum":2405.6940432037554}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570570054945059,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7265625,"distances_sum":2374.6444098005345}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766025641025643,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2510.8477266463583}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766025641025643,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2510.8477266463583}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":2.1811574697494507e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":5.484375,"distances_sum":468.68766608056524}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.212890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.212890625,"f1":null,"seconds":2.1811574697494507e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":5.484375,"distances_sum":468.68766608056524}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6803493381618387,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.1171875,"distances_sum":1071.2427731679231}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5361328125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5361328125,"f1":0.6803493381618387,"seconds":3.155320882797241e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.1171875,"distances_sum":1071.2427731679231}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7763489982239989,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":7.75,"distances_sum":1365.265589876053}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.873900405150406,"seconds":4.520639777183533e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.3671875,"distances_sum":1718.630226095628}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8691766566766574,"seconds":3.730878233909607e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.46875,"distances_sum":1689.8290987904159}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.873900405150406,"seconds":4.520639777183533e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.3671875,"distances_sum":1718.630226095628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9339087995338003,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.7578125,"distances_sum":2044.965169175773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.875,"f1":0.9275812728937736,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.5078125,"distances_sum":1998.7132283762026}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9392201548451555,"seconds":4.092231392860413e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.796875,"distances_sum":2092.768730668331}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9034148143523152,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.3671875,"distances_sum":1856.2267744438557}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9424793956043962,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.78125,"distances_sum":2112.951344995467}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9008730852480862,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.4375,"distances_sum":1800.5971866705988}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.859375,"distances_sum":2175.156903961181}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.859375,"distances_sum":2175.156903961181}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.956553342490843,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.0691583156585693e-6,"evaluations":8.859375,"distances_sum":2175.156903961181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8313139985014992,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.7109375,"distances_sum":1681.9149643149249}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3232421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3232421875,"f1":null,"seconds":2.384185791015625e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.078125,"distances_sum":741.2519837448663}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6919901279276284,"seconds":2.8740614652633667e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.578125,"distances_sum":1255.5016060963746}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8101211288711295,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.53125,"distances_sum":1620.6591792827044}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7265625,"f1":0.8313139985014992,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.7109375,"distances_sum":1681.9149643149249}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9278044871794875,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.671875,"distances_sum":2138.626322886529}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9263398060273068,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6875,"distances_sum":2131.167690563629}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.935245483682984,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6953125,"distances_sum":2209.155581811245}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8855696386946392,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.234375,"distances_sum":1911.7066131515219}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9173311063936069,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4140625,"distances_sum":2089.931439776515}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.935245483682984,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6953125,"distances_sum":2209.155581811245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9406192765567771,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.71875,"distances_sum":2234.7059327027814}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2439.3000808966985}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9441620879120884,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7578125,"distances_sum":2238.216922360979}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603823260073265,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8359375,"distances_sum":2334.9245821475756}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965813873626374,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8515625,"distances_sum":2386.4988603267975}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2439.3000808966985}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976339285714286,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2439.3000808966985}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2490234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.890625,"distances_sum":533.6950384764941}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2490234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.890625,"distances_sum":533.6950384764941}}, n: 9
mean(cfft.distances) = 0.3471851662296897
mean(cdnet.distances) = 0.5809816131716813
mean(crand.distances) = 0.6509835616253047
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8422222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8066666666666666
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8666666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9066666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8044444444444444
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9155555555555557
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 1, 3, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 11, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1]
acc = 0.9
*** finished computation of 12 references, err: [Inf, 0.639571085969607] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.39524938521750114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39524938521750114, 0.30146636935118754] ***
*** starting iteration: 2; err: [Inf, 0.39524938521750114, 0.30146636935118754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546] ***
*** starting iteration: 3; err: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546, 0.29444714797403404] ***
*** starting iteration: 4; err: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546, 0.29444714797403404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546, 0.29444714797403404, 0.2946326473711042] ***
*** finished computation of 3 references, err: [Inf, 0.39524938521750114, 0.30146636935118754, 0.2955261980422546, 0.29444714797403404, 0.2946326473711042] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 152, 20]]
** centroid: 1, normalized-entropy: 0.7866487354036231, [(1, 75), (2, 152), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 77, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 121), (2, 77)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2654954382615561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2654954382615561, 0.19767201430927794] ***
*** starting iteration: 2; err: [Inf, 0.2654954382615561, 0.19767201430927794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2654954382615561, 0.19767201430927794, 0.19417484021849102] ***
*** starting iteration: 3; err: [Inf, 0.2654954382615561, 0.19767201430927794, 0.19417484021849102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2654954382615561, 0.19767201430927794, 0.19417484021849102, 0.19320427720902023] ***
*** finished computation of 7 references, err: [Inf, 0.2654954382615561, 0.19767201430927794, 0.19417484021849102, 0.19320427720902023] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 6, 0]]
** centroid: 1, normalized-entropy: 0.40597703847557104, [(1, 68), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [91, 25, 0]]
** centroid: 2, normalized-entropy: 0.7518972278650765, [(1, 91), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 77, 20]]
** centroid: 4, normalized-entropy: 0.7341280428958428, [(2, 77), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 37, 0]]
** centroid: 5, normalized-entropy: 0.9670941140642181, [(1, 57), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 84, 0]]
** centroid: 6, normalized-entropy: 0.21639693245126485, [(1, 3), (2, 84)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24019810878092246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24019810878092246, 0.19186497677949774] ***
*** starting iteration: 2; err: [Inf, 0.24019810878092246, 0.19186497677949774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24019810878092246, 0.19186497677949774, 0.1887975017647671] ***
*** starting iteration: 3; err: [Inf, 0.24019810878092246, 0.19186497677949774, 0.1887975017647671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24019810878092246, 0.19186497677949774, 0.1887975017647671, 0.18852170168057733] ***
*** finished computation of 7 references, err: [Inf, 0.24019810878092246, 0.19186497677949774, 0.1887975017647671, 0.18852170168057733] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 76, 18]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 76), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 17, 0]]
** centroid: 3, normalized-entropy: 0.6695920597928519, [(1, 80), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 43, 0]]
** centroid: 4, normalized-entropy: 0.9208780154383215, [(1, 85), (2, 43)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 32, 0]]
** centroid: 5, normalized-entropy: 0.9252253278054431, [(1, 62), (2, 32)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 65, 1]]
** centroid: 6, normalized-entropy: 0.11327430349709665, [(2, 65), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24140765036650372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24140765036650372, 0.19792799501103173] ***
*** starting iteration: 2; err: [Inf, 0.24140765036650372, 0.19792799501103173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24140765036650372, 0.19792799501103173, 0.19273579629023616] ***
*** starting iteration: 3; err: [Inf, 0.24140765036650372, 0.19792799501103173, 0.19273579629023616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24140765036650372, 0.19792799501103173, 0.19273579629023616, 0.1919681527903178] ***
*** finished computation of 7 references, err: [Inf, 0.24140765036650372, 0.19792799501103173, 0.19273579629023616, 0.1919681527903178] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 91, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 13), (2, 91)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 45, 0]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(1, 75), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 33, 0]]
** centroid: 4, normalized-entropy: 0.9383153522334071, [(1, 60), (2, 33)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 75, 15]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 75), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19964645719246565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964645719246565, 0.14949788879491277] ***
*** starting iteration: 2; err: [Inf, 0.19964645719246565, 0.14949788879491277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964645719246565, 0.14949788879491277, 0.1470293134748768] ***
*** starting iteration: 3; err: [Inf, 0.19964645719246565, 0.14949788879491277, 0.1470293134748768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964645719246565, 0.14949788879491277, 0.1470293134748768, 0.1465647602041305] ***
*** finished computation of 7 references, err: [Inf, 0.19964645719246565, 0.14949788879491277, 0.1470293134748768, 0.1465647602041305] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 83, 20]]
** centroid: 2, normalized-entropy: 0.7101234912653349, [(2, 83), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 30, 0]]
** centroid: 3, normalized-entropy: 0.9330252953592912, [(1, 56), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 40, 0]]
** centroid: 4, normalized-entropy: 0.9238422284571813, [(1, 78), (2, 40)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 76, 0]]
** centroid: 5, normalized-entropy: 0.8502079949955315, [(1, 29), (2, 76)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19010032762353052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19010032762353052, 0.1545820719460542] ***
*** starting iteration: 2; err: [Inf, 0.19010032762353052, 0.1545820719460542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232] ***
*** starting iteration: 3; err: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232, 0.1474645742228481] ***
*** starting iteration: 4; err: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232, 0.1474645742228481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232, 0.1474645742228481, 0.1472258999220457] ***
*** finished computation of 7 references, err: [Inf, 0.19010032762353052, 0.1545820719460542, 0.14868189710174232, 0.1474645742228481, 0.1472258999220457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 19]]
** centroid: 3, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [88, 2, 0]]
** centroid: 5, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 91, 0]]
** centroid: 6, normalized-entropy: 0.493375733509813, [(1, 11), (2, 91)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 83, 0]]
** centroid: 7, normalized-entropy: 0.314682604134666, [(1, 5), (2, 83)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18704552557200718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18704552557200718, 0.15534295403500503] ***
*** starting iteration: 2; err: [Inf, 0.18704552557200718, 0.15534295403500503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456] ***
*** starting iteration: 3; err: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456, 0.1497871254080686] ***
*** starting iteration: 4; err: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456, 0.1497871254080686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456, 0.1497871254080686, 0.14904600162564524] ***
*** finished computation of 7 references, err: [Inf, 0.18704552557200718, 0.15534295403500503, 0.15100122174189456, 0.1497871254080686, 0.14904600162564524] ***
*** center 1: selecting labels [1] (freq >= 1) [from [127, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 62, 15]]
** centroid: 2, normalized-entropy: 0.7114160189012126, [(2, 62), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 11, 0]]
** centroid: 3, normalized-entropy: 0.5643364444932288, [(1, 72), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [19, 81, 0]]
** centroid: 4, normalized-entropy: 0.7014714598838974, [(1, 19), (2, 81)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 90, 0]]
** centroid: 5, normalized-entropy: 0.612196127490834, [(1, 16), (2, 90)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3473295126146673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3473295126146673, 0.2346541436753367] ***
*** finished computation of 3 references, err: [Inf, 0.3473295126146673, 0.2346541436753367] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [100, 153, 20]]
** centroid: 1, normalized-entropy: 0.8045352259273785, [(1, 100), (2, 153), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [123, 76, 0]]
** centroid: 2, normalized-entropy: 0.9593795191444577, [(1, 123), (2, 76)]
*** center 3: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3251639710211459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3251639710211459, 0.24471422407993937] ***
*** finished computation of 3 references, err: [Inf, 0.3251639710211459, 0.24471422407993937] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [119, 187, 19]]
** centroid: 1, normalized-entropy: 0.7754281384776027, [(1, 119), (2, 187), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [98, 46, 0]]
** centroid: 3, normalized-entropy: 0.9037762882345833, [(1, 98), (2, 46)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3205912163874869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3205912163874869, 0.24847954374806455] ***
*** finished computation of 3 references, err: [Inf, 0.3205912163874869, 0.24847954374806455] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [266, 50, 0]]
** centroid: 1, normalized-entropy: 0.6300530983921263, [(1, 266), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [142, 47, 0]]
** centroid: 2, normalized-entropy: 0.8091748739643858, [(1, 142), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 147, 15]]
** centroid: 3, normalized-entropy: 0.44506485705083854, [(2, 147), (3, 15)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3991405460578592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3991405460578592, 0.3027534713379402] ***
*** starting iteration: 2; err: [Inf, 0.3991405460578592, 0.3027534713379402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657] ***
*** starting iteration: 3; err: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657, 0.2900567513093285] ***
*** starting iteration: 4; err: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657, 0.2900567513093285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657, 0.2900567513093285, 0.28988384425422287] ***
*** finished computation of 3 references, err: [Inf, 0.3991405460578592, 0.3027534713379402, 0.29199987573959657, 0.2900567513093285, 0.28988384425422287] ***
*** center 1: selecting labels [1] (freq >= 1) [from [231, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 97, 0]]
** centroid: 2, normalized-entropy: 0.999981029567858, [(1, 98), (2, 97)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [86, 136, 19]]
** centroid: 3, normalized-entropy: 0.8108939363445776, [(1, 86), (2, 136), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4000135369278069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4000135369278069, 0.2983945349944864] ***
*** starting iteration: 2; err: [Inf, 0.4000135369278069, 0.2983945349944864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267] ***
*** starting iteration: 3; err: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267, 0.28862234000312065] ***
*** starting iteration: 4; err: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267, 0.28862234000312065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267, 0.28862234000312065, 0.28839127282085625] ***
*** finished computation of 3 references, err: [Inf, 0.4000135369278069, 0.2983945349944864, 0.2898787007914267, 0.28862234000312065, 0.28839127282085625] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [117, 90, 0]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(1, 117), (2, 90)]
*** center 2: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [77, 154, 15]]
** centroid: 3, normalized-entropy: 0.7530826742911777, [(1, 77), (2, 154), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2281674960098165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2281674960098165, 0.16561687137622544] ***
*** finished computation of 7 references, err: [Inf, 0.2281674960098165, 0.16561687137622544] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 56, 0]]
** centroid: 1, normalized-entropy: 0.9997615248696311, [(1, 54), (2, 56)]
*** center 2: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [158, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 83, 0]]
** centroid: 4, normalized-entropy: 0.6577047787442196, [(1, 17), (2, 83)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [76, 6, 0]]
** centroid: 5, normalized-entropy: 0.3776463213737003, [(1, 76), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 40, 14]]
** centroid: 6, normalized-entropy: 0.8256265261578954, [(2, 40), (3, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 44, 6]]
** centroid: 7, normalized-entropy: 0.5293608652873645, [(2, 44), (3, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23595425676459494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23595425676459494, 0.17041754282215427] ***
*** finished computation of 7 references, err: [Inf, 0.23595425676459494, 0.17041754282215427] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 81, 19]]
** centroid: 1, normalized-entropy: 0.7014714598838974, [(2, 81), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 101, 0]]
** centroid: 3, normalized-entropy: 0.9999306652175605, [(1, 103), (2, 101)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 51, 0]]
** centroid: 6, normalized-entropy: 0.971864344549656, [(1, 76), (2, 51)]
*** center 7: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24023686319092538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24023686319092538, 0.17325380953472816] ***
*** finished computation of 7 references, err: [Inf, 0.24023686319092538, 0.17325380953472816] ***
*** center 1: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 70, 2]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(2, 70), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [9, 123, 0]]
** centroid: 4, normalized-entropy: 0.3591016256485496, [(1, 9), (2, 123)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [109, 9, 0]]
** centroid: 5, normalized-entropy: 0.388902232296877, [(1, 109), (2, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 30, 13]]
** centroid: 6, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [137, 12, 0]]
** centroid: 7, normalized-entropy: 0.4040682159370203, [(1, 137), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4533656402435098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4533656402435098, 0.31455963073499704] ***
*** starting iteration: 2; err: [Inf, 0.4533656402435098, 0.31455963073499704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042] ***
*** starting iteration: 3; err: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042, 0.2952830028421645] ***
*** starting iteration: 4; err: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042, 0.2952830028421645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042, 0.2952830028421645, 0.29480105337991686] ***
*** finished computation of 3 references, err: [Inf, 0.4533656402435098, 0.31455963073499704, 0.2980043423046042, 0.2952830028421645, 0.29480105337991686] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [121, 77, 0]]
** centroid: 1, normalized-entropy: 0.9640787648082293, [(1, 121), (2, 77)]
*** center 2: selecting labels [1] (freq >= 1) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [75, 152, 20]]
** centroid: 3, normalized-entropy: 0.7866487354036231, [(1, 75), (2, 152), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4189743773224226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4189743773224226, 0.3003626932345353] ***
*** starting iteration: 2; err: [Inf, 0.4189743773224226, 0.3003626932345353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931] ***
*** starting iteration: 3; err: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931, 0.28888119891777386] ***
*** starting iteration: 4; err: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931, 0.28888119891777386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931, 0.28888119891777386, 0.28857461603238305] ***
*** finished computation of 3 references, err: [Inf, 0.4189743773224226, 0.3003626932345353, 0.290407486111931, 0.28888119891777386, 0.28857461603238305] ***
*** center 1: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [79, 146, 19]]
** centroid: 2, normalized-entropy: 0.7929965317426968, [(1, 79), (2, 146), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [113, 87, 0]]
** centroid: 3, normalized-entropy: 0.9877746553159469, [(1, 113), (2, 87)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45709852461536965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45709852461536965, 0.3306203760162018] ***
*** starting iteration: 2; err: [Inf, 0.45709852461536965, 0.3306203760162018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551] ***
*** starting iteration: 3; err: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551, 0.29250389187857845] ***
*** starting iteration: 4; err: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551, 0.29250389187857845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551, 0.29250389187857845, 0.2915142274879176] ***
*** finished computation of 3 references, err: [Inf, 0.45709852461536965, 0.3306203760162018, 0.2994053238804551, 0.29250389187857845, 0.2915142274879176] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [92, 111, 0]]
** centroid: 1, normalized-entropy: 0.9936715766821862, [(1, 92), (2, 111)]
*** center 2: selecting labels [1] (freq >= 1) [from [230, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [86, 133, 15]]
** centroid: 3, normalized-entropy: 0.7874506251683877, [(1, 86), (2, 133), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3003987354945179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003987354945179, 0.2416247069316863] ***
*** finished computation of 3 references, err: [Inf, 0.3003987354945179, 0.2416247069316863] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [138, 63, 0]]
** centroid: 1, normalized-entropy: 0.8970964164730478, [(1, 138), (2, 63)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [72, 166, 20]]
** centroid: 2, normalized-entropy: 0.7629039328188729, [(1, 72), (2, 166), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36396570678247414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36396570678247414, 0.24278347281881538] ***
*** finished computation of 3 references, err: [Inf, 0.36396570678247414, 0.24278347281881538] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [130, 102, 4]]
** centroid: 1, normalized-entropy: 0.6919068660979796, [(1, 130), (2, 102), (3, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [133, 131, 15]]
** centroid: 3, normalized-entropy: 0.7876344095285934, [(1, 133), (2, 131), (3, 15)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '2'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2925739056742129] ***[ Info: precision is zero for label '3'; #classes=3 

*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2925739056742129, 0.24506809252469258] ***
*** finished computation of 3 references, err: [Inf, 0.2925739056742129, 0.24506809252469258] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [160, 86, 0]]
** centroid: 1, normalized-entropy: 0.9337044887280268, [(1, 160), (2, 86)]
*** center 2: selecting labels [1] (freq >= 2) [from [174, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [74, 158, 15]]
** centroid: 3, normalized-entropy: 0.7436961604924157, [(1, 74), (2, 158), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24597691712403172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597691712403172, 0.20528754926714543] ***
*** starting iteration: 2; err: [Inf, 0.24597691712403172, 0.20528754926714543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277] ***
*** starting iteration: 3; err: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277, 0.19872540050653276] ***
*** starting iteration: 4; err: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277, 0.19872540050653276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277, 0.19872540050653276, 0.1980242347134999] ***
*** finished computation of 7 references, err: [Inf, 0.24597691712403172, 0.20528754926714543, 0.20033332058466277, 0.19872540050653276, 0.1980242347134999] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 40, 0]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(1, 52), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 48, 0]]
** centroid: 3, normalized-entropy: 0.9629004147713269, [(1, 76), (2, 48)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [103, 3, 0]]
** centroid: 4, normalized-entropy: 0.1858030790723033, [(1, 103), (2, 3)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 21, 0]]
** centroid: 6, normalized-entropy: 0.8019325020834525, [(1, 65), (2, 21)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 117, 20]]
** centroid: 7, normalized-entropy: 0.5997019071283692, [(2, 117), (3, 20)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3556991960585251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518] ***
*** starting iteration: 2; err: [Inf, 0.3556991960585251, 0.2235534352430518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565] ***
*** starting iteration: 3; err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404] ***
*** starting iteration: 4; err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032] ***
*** starting iteration: 5; err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846] ***
*** starting iteration: 6; err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846, 0.19000118938128072] ***
*** starting iteration: 7; err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846, 0.19000118938128072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846, 0.19000118938128072, 0.1893974883730399] ***
*** finished computation of 7 references, err: [Inf, 0.3556991960585251, 0.2235534352430518, 0.21372773051764565, 0.1990267051477404, 0.19267058979812032, 0.19107065298852846, 0.19000118938128072, 0.1893974883730399] ***
*** center 1: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 38, 0]]
** centroid: 2, normalized-entropy: 0.9934472383802028, [(1, 46), (2, 38)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [97, 40, 0]]
** centroid: 3, normalized-entropy: 0.8712534735616518, [(1, 97), (2, 40)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 4, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 71, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [78, 20, 0]]
** centroid: 6, normalized-entropy: 0.7300166301457938, [(1, 78), (2, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2763300382377192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444] ***
*** starting iteration: 2; err: [Inf, 0.2763300382377192, 0.21405691249230444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655] ***
*** starting iteration: 3; err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703] ***
*** starting iteration: 4; err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292] ***
*** starting iteration: 5; err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801] ***
*** starting iteration: 6; err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801, 0.1879737428996874] ***
*** starting iteration: 7; err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801, 0.1879737428996874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801, 0.1879737428996874, 0.187637720360369] ***
*** finished computation of 7 references, err: [Inf, 0.2763300382377192, 0.21405691249230444, 0.20069423209487655, 0.1958391982056703, 0.19149444035828292, 0.188980163461801, 0.1879737428996874, 0.187637720360369] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 68, 15]]
** centroid: 2, normalized-entropy: 0.6816559115981193, [(2, 68), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 82, 0]]
** centroid: 3, normalized-entropy: 0.6800770457282798, [(1, 18), (2, 82)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 6, 0]]
** centroid: 4, normalized-entropy: 0.3843115441264972, [(1, 74), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 88, 0]]
** centroid: 5, normalized-entropy: 0.6388469391771899, [(1, 17), (2, 88)]
*** center 6: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45674949780235197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45674949780235197, 0.30606108545339683] ***
*** finished computation of 3 references, err: [Inf, 0.45674949780235197, 0.30606108545339683] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [19, 168, 20]]
** centroid: 1, normalized-entropy: 0.559282006325723, [(1, 19), (2, 168), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 61, 0]]
** centroid: 2, normalized-entropy: 0.9110000858110296, [(1, 126), (2, 61)]
*** center 3: selecting labels [1] (freq >= 1) [from [272, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3593934643273612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3593934643273612, 0.32209733190542755] ***
*** finished computation of 3 references, err: [Inf, 0.3593934643273612, 0.32209733190542755] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [185, 44, 0]]
** centroid: 1, normalized-entropy: 0.7059262273303116, [(1, 185), (2, 44)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 178, 19]]
** centroid: 2, normalized-entropy: 0.457629619114006, [(2, 178), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [230, 11, 0]]
** centroid: 3, normalized-entropy: 0.2675928236896438, [(1, 230), (2, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41972708084789484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41972708084789484, 0.33312341565897374] ***
*** finished computation of 3 references, err: [Inf, 0.41972708084789484, 0.33312341565897374] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 129, 15]]
** centroid: 1, normalized-entropy: 0.7849609949150503, [(1, 75), (2, 129), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [242, 4, 0]]
** centroid: 2, normalized-entropy: 0.11989294671951675, [(1, 242), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [91, 111, 0]]
** centroid: 3, normalized-entropy: 0.9929170598659379, [(1, 91), (2, 111)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33817378113706326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33817378113706326, 0.24512995729452228] ***
*** finished computation of 3 references, err: [Inf, 0.33817378113706326, 0.24512995729452228] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 84, 0]]
** centroid: 1, normalized-entropy: 0.9301497323974339, [(1, 159), (2, 84)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 130, 20]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 130), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [258, 15, 0]]
** centroid: 3, normalized-entropy: 0.30704288878312236, [(1, 258), (2, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31423225579713504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31423225579713504, 0.24330506841700966] ***
*** finished computation of 3 references, err: [Inf, 0.31423225579713504, 0.24330506841700966] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [36, 128, 19]]
** centroid: 1, normalized-entropy: 0.7327926644656375, [(1, 36), (2, 128), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 93, 0]]
** centroid: 2, normalized-entropy: 0.9977497883918053, [(1, 104), (2, 93)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [275, 12, 0]]
** centroid: 3, normalized-entropy: 0.25053864332391124, [(1, 275), (2, 12)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3812974953397025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3812974953397025, 0.271723328415176] ***
*** finished computation of 3 references, err: [Inf, 0.3812974953397025, 0.271723328415176] ***
*** center 1: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [115, 42, 0]]
** centroid: 2, normalized-entropy: 0.8378775156730851, [(1, 115), (2, 42)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [149, 202, 15]]
** centroid: 3, normalized-entropy: 0.7507856391853961, [(1, 149), (2, 202), (3, 15)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3201645235041598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201645235041598, 0.27722269570868874] ***
*** starting iteration: 2; err: [Inf, 0.3201645235041598, 0.27722269570868874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678] ***
*** starting iteration: 3; err: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308] ***
*** starting iteration: 4; err: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308, 0.23806051511244775] ***
*** starting iteration: 5; err: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308, 0.23806051511244775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308, 0.23806051511244775, 0.2374068114769508] ***
*** finished computation of 3 references, err: [Inf, 0.3201645235041598, 0.27722269570868874, 0.24720787201999678, 0.23917589035282308, 0.23806051511244775, 0.2374068114769508] ***
*** center 1: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [81, 141, 20]]
** centroid: 2, normalized-entropy: 0.8074903627367597, [(1, 81), (2, 141), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [113, 88, 0]]
** centroid: 3, normalized-entropy: 0.988811864348091, [(1, 113), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3244370051996148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3244370051996148, 0.265770484647271] ***
*** starting iteration: 2; err: [Inf, 0.3244370051996148, 0.265770484647271] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974] ***
*** starting iteration: 3; err: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003] ***
*** starting iteration: 4; err: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003, 0.2289190530187745] ***
*** starting iteration: 5; err: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003, 0.2289190530187745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003, 0.2289190530187745, 0.2285465616718873] ***
*** finished computation of 3 references, err: [Inf, 0.3244370051996148, 0.265770484647271, 0.23731934547778974, 0.23003663092564003, 0.2289190530187745, 0.2285465616718873] ***
*** center 1: selecting labels [1] (freq >= 1) [from [219, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [103, 95, 1]]
** centroid: 2, normalized-entropy: 0.6557942905938369, [(1, 103), (2, 95), (3, 1)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [93, 138, 18]]
** centroid: 3, normalized-entropy: 0.8054203110437536, [(1, 93), (2, 138), (3, 18)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2989326135005461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697] ***
*** starting iteration: 2; err: [Inf, 0.2989326135005461, 0.2391346500281697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272] ***
*** starting iteration: 3; err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868] ***
*** starting iteration: 4; err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202] ***
*** starting iteration: 5; err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077] ***
*** starting iteration: 6; err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077, 0.22730861668023972] ***
*** starting iteration: 7; err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077, 0.22730861668023972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077, 0.22730861668023972, 0.22678187629766483] ***
*** finished computation of 3 references, err: [Inf, 0.2989326135005461, 0.2391346500281697, 0.2340123646774272, 0.23222452622029868, 0.23006597309718202, 0.22833099380007077, 0.22730861668023972, 0.22678187629766483] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [127, 80, 0]]
** centroid: 1, normalized-entropy: 0.962485977735779, [(1, 127), (2, 80)]
*** center 2: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [73, 164, 15]]
** centroid: 3, normalized-entropy: 0.7340203209425732, [(1, 73), (2, 164), (3, 15)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.19012624630285008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19012624630285008, 0.15543606372580895] ***
*** starting iteration: 2; err: [Inf, 0.19012624630285008, 0.15543606372580895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017] ***
*** starting iteration: 3; err: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684] ***
*** starting iteration: 4; err: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684, 0.14625437768293661] ***
*** starting iteration: 5; err: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684, 0.14625437768293661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684, 0.14625437768293661, 0.14591744542331644] ***
*** finished computation of 7 references, err: [Inf, 0.19012624630285008, 0.15543606372580895, 0.15062046512072017, 0.14738471243899684, 0.14625437768293661, 0.14591744542331644] ***
*** center 1: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 9, 0]]
** centroid: 2, normalized-entropy: 0.4655024490815131, [(1, 82), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 77, 0]]
** centroid: 4, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 54, 20]]
** centroid: 5, normalized-entropy: 0.8418521897563208, [(2, 54), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 3, 0]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(1, 72), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [28, 86, 0]]
** centroid: 7, normalized-entropy: 0.8042522359016421, [(1, 28), (2, 86)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19347283344944824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19347283344944824, 0.15347300797723223] ***
*** starting iteration: 2; err: [Inf, 0.19347283344944824, 0.15347300797723223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131] ***
*** starting iteration: 3; err: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238] ***
*** starting iteration: 4; err: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238, 0.14734955477413778] ***
*** starting iteration: 5; err: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238, 0.14734955477413778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238, 0.14734955477413778, 0.14663722516963262] ***
*** finished computation of 7 references, err: [Inf, 0.19347283344944824, 0.15347300797723223, 0.15023535080610131, 0.14873531564436238, 0.14734955477413778, 0.14663722516963262] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 62, 19]]
** centroid: 1, normalized-entropy: 0.785889583138768, [(2, 62), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 17, 0]]
** centroid: 2, normalized-entropy: 0.6076407686085387, [(1, 97), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 52, 0]]
** centroid: 3, normalized-entropy: 0.9265044456232997, [(1, 27), (2, 52)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 33, 0]]
** centroid: 5, normalized-entropy: 0.8779620013943914, [(1, 78), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22949710143716082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322] ***
*** starting iteration: 2; err: [Inf, 0.22949710143716082, 0.17383749811523322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345] ***
*** starting iteration: 3; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156] ***
*** starting iteration: 4; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915] ***
*** starting iteration: 5; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596] ***
*** starting iteration: 6; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704] ***
*** starting iteration: 7; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704, 0.1457684993662912] ***
*** starting iteration: 8; err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704, 0.1457684993662912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704, 0.1457684993662912, 0.14534843756469606] ***
*** finished computation of 7 references, err: [Inf, 0.22949710143716082, 0.17383749811523322, 0.16179426780565345, 0.15448043886935156, 0.15036933935865915, 0.14856197980736596, 0.14687242910874704, 0.1457684993662912, 0.14534843756469606] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 14, 0]]
** centroid: 1, normalized-entropy: 0.6365048555378351, [(1, 73), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [20, 90, 0]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(1, 20), (2, 90)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 84, 0]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(1, 3), (2, 84)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 56, 15]]
** centroid: 4, normalized-entropy: 0.743898745288434, [(2, 56), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 14
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9340088591585598, 0.9300018581455708, 0.9269778760796724, 0.9269688850527174, 0.912999826173479, 0.9129968291644938, 0.9129968291644938, 0.9029838221454988, 0.8820497143850438, 0.8720037402672133, 0.8700257143370916, 0.8140026253798709, 0.7650045254835675, 0.7449635264006521]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9340088591585598
finished with 15
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.4207165064150328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4207165064150328, 0.30518564469161424] ***
*** finished computation of 3 references, err: [Inf, 0.4207165064150328, 0.30518564469161424] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [37, 155, 20]]
** centroid: 1, normalized-entropy: 0.6884619674163989, [(1, 37), (2, 155), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [253, 6, 0]]
** centroid: 2, normalized-entropy: 0.15886562590281886, [(1, 253), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [127, 68, 0]]
** centroid: 3, normalized-entropy: 0.9329178602876201, [(1, 127), (2, 68)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3254390266749064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254390266749064, 0.2958321080485853] ***
*** finished computation of 3 references, err: [Inf, 0.3254390266749064, 0.2958321080485853] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [133, 101, 0]]
** centroid: 1, normalized-entropy: 0.9864676098415691, [(1, 133), (2, 101)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [83, 132, 19]]
** centroid: 2, normalized-entropy: 0.8141863340010902, [(1, 83), (2, 132), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36556511595593894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36556511595593894, 0.30400853571684466] ***
*** finished computation of 3 references, err: [Inf, 0.36556511595593894, 0.30400853571684466] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 54, 0]]
** centroid: 1, normalized-entropy: 0.9079908321761869, [(1, 113), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [295, 14, 0]]
** centroid: 2, normalized-entropy: 0.26611850860883557, [(1, 295), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 176, 15]]
** centroid: 3, normalized-entropy: 0.39699257769914087, [(2, 176), (3, 15)]
finished with 5 centroids; started with 3
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.1853131212810986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1853131212810986, 0.15338357819616794] ***
*** starting iteration: 2; err: [Inf, 0.1853131212810986, 0.15338357819616794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443] ***
*** starting iteration: 3; err: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443, 0.14867626259103417] ***
*** starting iteration: 4; err: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443, 0.14867626259103417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443, 0.14867626259103417, 0.14814665783499367] ***
*** finished computation of 7 references, err: [Inf, 0.1853131212810986, 0.15338357819616794, 0.14972265813150443, 0.14867626259103417, 0.14814665783499367] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 132, 27]]
** centroid: 1, normalized-entropy: 0.6572729784684466, [(2, 132), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [150, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 53, 0]]
** centroid: 3, normalized-entropy: 0.9224837120857471, [(1, 104), (2, 53)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [101, 3, 0]]
** centroid: 4, normalized-entropy: 0.18857195602479668, [(1, 101), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 46, 0]]
** centroid: 5, normalized-entropy: 0.9231199835423002, [(1, 90), (2, 46)]
*** center 6: selecting labels [1] (freq >= 1) [from [146, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 119, 0]]
** centroid: 7, normalized-entropy: 0.7137455095995926, [(1, 29), (2, 119)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18694285016134382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18694285016134382, 0.15439438287913798] ***
*** starting iteration: 2; err: [Inf, 0.18694285016134382, 0.15439438287913798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784] ***
*** starting iteration: 3; err: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784, 0.14477311780489982] ***
*** starting iteration: 4; err: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784, 0.14477311780489982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784, 0.14477311780489982, 0.14425656931102276] ***
*** finished computation of 7 references, err: [Inf, 0.18694285016134382, 0.15439438287913798, 0.1470657181441784, 0.14477311780489982, 0.14425656931102276] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 56, 0]]
** centroid: 1, normalized-entropy: 0.9100534290139191, [(1, 27), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 9, 0]]
** centroid: 2, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 16]]
** centroid: 3, normalized-entropy: 0.7930490047779772, [(2, 51), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 64, 0]]
** centroid: 6, normalized-entropy: 0.19590927087360496, [(1, 2), (2, 64)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 6, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19247705493308603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247705493308603, 0.15669972035847604] ***
*** starting iteration: 2; err: [Inf, 0.19247705493308603, 0.15669972035847604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247705493308603, 0.15669972035847604, 0.15178119185753167] ***
*** starting iteration: 3; err: [Inf, 0.19247705493308603, 0.15669972035847604, 0.15178119185753167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19247705493308603, 0.15669972035847604, 0.15178119185753167, 0.15096395338885485] ***
*** finished computation of 7 references, err: [Inf, 0.19247705493308603, 0.15669972035847604, 0.15178119185753167, 0.15096395338885485] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 80, 3]]
** centroid: 1, normalized-entropy: 0.2243269603450881, [(2, 80), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 17, 0]]
** centroid: 2, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 61, 8]]
** centroid: 4, normalized-entropy: 0.5175827525559071, [(2, 61), (3, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [81, 10, 0]]
** centroid: 5, normalized-entropy: 0.49958440742366095, [(1, 81), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 10, 0]]
** centroid: 7, normalized-entropy: 0.7300166301457938, [(1, 39), (2, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1812032620832324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1812032620832324, 0.15114713035710156] ***
*** starting iteration: 2; err: [Inf, 0.1812032620832324, 0.15114713035710156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1812032620832324, 0.15114713035710156, 0.1474234029627405] ***
*** starting iteration: 3; err: [Inf, 0.1812032620832324, 0.15114713035710156, 0.1474234029627405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1812032620832324, 0.15114713035710156, 0.1474234029627405, 0.14692237915843726] ***
*** finished computation of 7 references, err: [Inf, 0.1812032620832324, 0.15114713035710156, 0.1474234029627405, 0.14692237915843726] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 80, 11]]
** centroid: 1, normalized-entropy: 0.5318826028800231, [(2, 80), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [38, 4, 0]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(1, 38), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 26, 0]]
** centroid: 4, normalized-entropy: 0.8714630056611941, [(1, 63), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 5, 0]]
** centroid: 5, normalized-entropy: 0.314682604134666, [(1, 83), (2, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [11, 62, 0]]
** centroid: 7, normalized-entropy: 0.6115516951951333, [(1, 11), (2, 62)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21011185620352626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21011185620352626, 0.15293752584978937] ***
*** starting iteration: 2; err: [Inf, 0.21011185620352626, 0.15293752584978937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21011185620352626, 0.15293752584978937, 0.14828159602917731] ***
*** starting iteration: 3; err: [Inf, 0.21011185620352626, 0.15293752584978937, 0.14828159602917731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21011185620352626, 0.15293752584978937, 0.14828159602917731, 0.1477301899716258] ***
*** finished computation of 7 references, err: [Inf, 0.21011185620352626, 0.15293752584978937, 0.14828159602917731, 0.1477301899716258] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 25, 0]]
** centroid: 1, normalized-entropy: 0.9488482942421287, [(1, 43), (2, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 14]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(2, 58), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 28, 0]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(1, 63), (2, 28)]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 57, 0]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(1, 6), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18487369370181114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18487369370181114, 0.15147645978070795] ***
*** starting iteration: 2; err: [Inf, 0.18487369370181114, 0.15147645978070795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18487369370181114, 0.15147645978070795, 0.1472412849292159] ***
*** starting iteration: 3; err: [Inf, 0.18487369370181114, 0.15147645978070795, 0.1472412849292159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18487369370181114, 0.15147645978070795, 0.1472412849292159, 0.14636659690365195] ***
*** finished computation of 7 references, err: [Inf, 0.18487369370181114, 0.15147645978070795, 0.1472412849292159, 0.14636659690365195] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 63, 11]]
** centroid: 2, normalized-entropy: 0.6064481901491525, [(2, 63), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 26, 0]]
** centroid: 4, normalized-entropy: 0.8589810370425965, [(1, 66), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 53, 0]]
** centroid: 5, normalized-entropy: 0.8729882944709463, [(1, 22), (2, 53)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [14, 46, 0]]
** centroid: 7, normalized-entropy: 0.7837769474847011, [(1, 14), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1879160321925301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879160321925301, 0.1503042318476364] ***
*** starting iteration: 2; err: [Inf, 0.1879160321925301, 0.1503042318476364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879160321925301, 0.1503042318476364, 0.1465596836442128] ***
*** starting iteration: 3; err: [Inf, 0.1879160321925301, 0.1503042318476364, 0.1465596836442128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879160321925301, 0.1503042318476364, 0.1465596836442128, 0.14601795846782625] ***
*** finished computation of 7 references, err: [Inf, 0.1879160321925301, 0.1503042318476364, 0.1465596836442128, 0.14601795846782625] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 49, 0]]
** centroid: 1, normalized-entropy: 0.9979139338855983, [(1, 44), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 4, 0]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(1, 54), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 13]]
** centroid: 4, normalized-entropy: 0.7344461802527668, [(2, 50), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 11, 0]]
** centroid: 5, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 68, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21461267712991686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21461267712991686, 0.15131488077063113] ***
*** starting iteration: 2; err: [Inf, 0.21461267712991686, 0.15131488077063113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21461267712991686, 0.15131488077063113, 0.14712308480218053] ***
*** starting iteration: 3; err: [Inf, 0.21461267712991686, 0.15131488077063113, 0.14712308480218053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21461267712991686, 0.15131488077063113, 0.14712308480218053, 0.14656854390725493] ***
*** finished computation of 7 references, err: [Inf, 0.21461267712991686, 0.15131488077063113, 0.14712308480218053, 0.14656854390725493] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 32, 0]]
** centroid: 2, normalized-entropy: 0.9423094893103273, [(1, 57), (2, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 55, 12]]
** centroid: 4, normalized-entropy: 0.678114052360606, [(2, 55), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 28, 0]]
** centroid: 5, normalized-entropy: 0.9262122127346664, [(1, 54), (2, 28)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 60, 0]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(1, 4), (2, 60)]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18308852095901967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18308852095901967, 0.1498043707087636] ***
*** starting iteration: 2; err: [Inf, 0.18308852095901967, 0.1498043707087636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18308852095901967, 0.1498043707087636, 0.14474037308990956] ***
*** starting iteration: 3; err: [Inf, 0.18308852095901967, 0.1498043707087636, 0.14474037308990956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18308852095901967, 0.1498043707087636, 0.14474037308990956, 0.1439455778375268] ***
*** finished computation of 7 references, err: [Inf, 0.18308852095901967, 0.1498043707087636, 0.14474037308990956, 0.1439455778375268] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 11, 0]]
** centroid: 2, normalized-entropy: 0.7076690004167966, [(1, 46), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 16]]
** centroid: 3, normalized-entropy: 0.8698926856041562, [(2, 39), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [12, 61, 0]]
** centroid: 5, normalized-entropy: 0.644694043811662, [(1, 12), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [23, 63, 0]]
** centroid: 6, normalized-entropy: 0.8377698690066789, [(1, 23), (2, 63)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 2, 0]]
** centroid: 7, normalized-entropy: 0.21357981533827744, [(1, 57), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18559200325794517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18559200325794517, 0.15039288680255414] ***
*** starting iteration: 2; err: [Inf, 0.18559200325794517, 0.15039288680255414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18559200325794517, 0.15039288680255414, 0.14830553511530162] ***
*** starting iteration: 3; err: [Inf, 0.18559200325794517, 0.15039288680255414, 0.14830553511530162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18559200325794517, 0.15039288680255414, 0.14830553511530162, 0.14764308830257505] ***
*** finished computation of 7 references, err: [Inf, 0.18559200325794517, 0.15039288680255414, 0.14830553511530162, 0.14764308830257505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 56, 15]]
** centroid: 2, normalized-entropy: 0.743898745288434, [(2, 56), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 25, 0]]
** centroid: 4, normalized-entropy: 0.8783609387702275, [(1, 59), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 46, 0]]
** centroid: 5, normalized-entropy: 0.980377508715691, [(1, 33), (2, 46)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2111954391412437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111954391412437, 0.1553355108043179] ***
*** starting iteration: 2; err: [Inf, 0.2111954391412437, 0.1553355108043179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111954391412437, 0.1553355108043179, 0.15062725445721298] ***
*** starting iteration: 3; err: [Inf, 0.2111954391412437, 0.1553355108043179, 0.15062725445721298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2111954391412437, 0.1553355108043179, 0.15062725445721298, 0.15001467029354534] ***
*** finished computation of 7 references, err: [Inf, 0.2111954391412437, 0.1553355108043179, 0.15062725445721298, 0.15001467029354534] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 37, 0]]
** centroid: 1, normalized-entropy: 0.9959386076315955, [(1, 43), (2, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 65, 10]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 65), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 30, 0]]
** centroid: 5, normalized-entropy: 0.9971803988942641, [(1, 34), (2, 30)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 50, 0]]
** centroid: 6, normalized-entropy: 0.13923299905509884, [(1, 1), (2, 50)]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18687258398532866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18687258398532866, 0.15112613046169282] ***
*** starting iteration: 2; err: [Inf, 0.18687258398532866, 0.15112613046169282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774] ***
*** starting iteration: 3; err: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774, 0.14654024477675556] ***
*** starting iteration: 4; err: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774, 0.14654024477675556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774, 0.14654024477675556, 0.14607445167005062] ***
*** finished computation of 7 references, err: [Inf, 0.18687258398532866, 0.15112613046169282, 0.14764504927396774, 0.14654024477675556, 0.14607445167005062] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 55, 15]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 55), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 8, 0]]
** centroid: 3, normalized-entropy: 0.5381411852224502, [(1, 57), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [14, 59, 0]]
** centroid: 4, normalized-entropy: 0.7051819722888517, [(1, 14), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 54, 0]]
** centroid: 5, normalized-entropy: 0.8796975782775168, [(1, 23), (2, 54)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 1, 0]]
** centroid: 7, normalized-entropy: 0.1274185117923586, [(1, 56), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18832271638605744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18832271638605744, 0.1449643202465959] ***
*** starting iteration: 2; err: [Inf, 0.18832271638605744, 0.1449643202465959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18832271638605744, 0.1449643202465959, 0.1421717475708574] ***
*** starting iteration: 3; err: [Inf, 0.18832271638605744, 0.1449643202465959, 0.1421717475708574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18832271638605744, 0.1449643202465959, 0.1421717475708574, 0.14203857456333935] ***
*** finished computation of 7 references, err: [Inf, 0.18832271638605744, 0.1449643202465959, 0.1421717475708574, 0.14203857456333935] ***
*** center 1: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 5, 0]]
** centroid: 2, normalized-entropy: 0.4236805715709106, [(1, 53), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 9]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(2, 51), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 59, 0]]
** centroid: 5, normalized-entropy: 0.7668379316856329, [(1, 17), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 55, 0]]
** centroid: 6, normalized-entropy: 0.5086113313826895, [(1, 7), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 1, 0]]
** centroid: 7, normalized-entropy: 0.1274185117923586, [(1, 56), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18460747739486397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18460747739486397, 0.1501507929880172] ***
*** starting iteration: 2; err: [Inf, 0.18460747739486397, 0.1501507929880172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18460747739486397, 0.1501507929880172, 0.1470890406239778] ***
*** starting iteration: 3; err: [Inf, 0.18460747739486397, 0.1501507929880172, 0.1470890406239778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18460747739486397, 0.1501507929880172, 0.1470890406239778, 0.14656101689347997] ***
*** finished computation of 7 references, err: [Inf, 0.18460747739486397, 0.1501507929880172, 0.1470890406239778, 0.14656101689347997] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [79, 1, 0]]
** centroid: 1, normalized-entropy: 0.09694460606247329, [(1, 79), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 13, 0]]
** centroid: 2, normalized-entropy: 0.7473944462440388, [(1, 48), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 16]]
** centroid: 3, normalized-entropy: 0.8835850861052531, [(2, 37), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 74, 0]]
** centroid: 5, normalized-entropy: 0.5558227377664954, [(1, 11), (2, 74)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18946290030144156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946290030144156, 0.15021061071008443] ***
*** starting iteration: 2; err: [Inf, 0.18946290030144156, 0.15021061071008443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946290030144156, 0.15021061071008443, 0.1468367081694305] ***
*** starting iteration: 3; err: [Inf, 0.18946290030144156, 0.15021061071008443, 0.1468367081694305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946290030144156, 0.15021061071008443, 0.1468367081694305, 0.14625022914260627] ***
*** finished computation of 7 references, err: [Inf, 0.18946290030144156, 0.15021061071008443, 0.1468367081694305, 0.14625022914260627] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 69, 16]]
** centroid: 1, normalized-entropy: 0.6977652006354232, [(2, 69), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 26, 0]]
** centroid: 4, normalized-entropy: 0.8841151220488478, [(1, 60), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 14, 0]]
** centroid: 5, normalized-entropy: 0.6944460704939805, [(1, 61), (2, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 60, 1]]
** centroid: 7, normalized-entropy: 0.12068101401352371, [(2, 60), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18117335205245763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18117335205245763, 0.1490647145793773] ***
*** starting iteration: 2; err: [Inf, 0.18117335205245763, 0.1490647145793773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18117335205245763, 0.1490647145793773, 0.14705249770823867] ***
*** starting iteration: 3; err: [Inf, 0.18117335205245763, 0.1490647145793773, 0.14705249770823867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18117335205245763, 0.1490647145793773, 0.14705249770823867, 0.14639125694707036] ***
*** finished computation of 7 references, err: [Inf, 0.18117335205245763, 0.1490647145793773, 0.14705249770823867, 0.14639125694707036] ***
*** center 1: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 37, 12]]
** centroid: 2, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 15, 0]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(1, 51), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 57, 0]]
** centroid: 4, normalized-entropy: 0.6385146263620961, [(1, 11), (2, 57)]
*** center 5: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [20, 64, 0]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(1, 20), (2, 64)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 3, 0]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(1, 51), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1946244897209108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1946244897209108, 0.149046267461963] ***
*** starting iteration: 2; err: [Inf, 0.1946244897209108, 0.149046267461963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1946244897209108, 0.149046267461963, 0.14675102015957237] ***
*** starting iteration: 3; err: [Inf, 0.1946244897209108, 0.149046267461963, 0.14675102015957237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1946244897209108, 0.149046267461963, 0.14675102015957237, 0.14642386539839208] ***
*** finished computation of 7 references, err: [Inf, 0.1946244897209108, 0.149046267461963, 0.14675102015957237, 0.14642386539839208] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 36, 0]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(1, 63), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 13]]
** centroid: 4, normalized-entropy: 0.6550239908788728, [(2, 64), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 52, 0]]
** centroid: 5, normalized-entropy: 0.8779620013943914, [(1, 22), (2, 52)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18279817359521985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18279817359521985, 0.14618517839349807] ***
*** starting iteration: 2; err: [Inf, 0.18279817359521985, 0.14618517839349807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18279817359521985, 0.14618517839349807, 0.14287151552550495] ***
*** starting iteration: 3; err: [Inf, 0.18279817359521985, 0.14618517839349807, 0.14287151552550495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18279817359521985, 0.14618517839349807, 0.14287151552550495, 0.14206597528792916] ***
*** finished computation of 7 references, err: [Inf, 0.18279817359521985, 0.14618517839349807, 0.14287151552550495, 0.14206597528792916] ***
*** center 1: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 13]]
** centroid: 2, normalized-entropy: 0.7158259310602146, [(2, 53), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 34, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 68), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [19, 48, 0]]
** centroid: 5, normalized-entropy: 0.8602858652332406, [(1, 19), (2, 48)]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 42, 0]]
** centroid: 7, normalized-entropy: 0.48890859144051524, [(1, 5), (2, 42)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1835549474665895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835549474665895, 0.14817904366739093] ***
*** starting iteration: 2; err: [Inf, 0.1835549474665895, 0.14817904366739093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835549474665895, 0.14817904366739093, 0.144165433622431] ***
*** starting iteration: 3; err: [Inf, 0.1835549474665895, 0.14817904366739093, 0.144165433622431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835549474665895, 0.14817904366739093, 0.144165433622431, 0.14369824730232358] ***
*** finished computation of 7 references, err: [Inf, 0.1835549474665895, 0.14817904366739093, 0.144165433622431, 0.14369824730232358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 7, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 12]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 42), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 58, 0]]
** centroid: 5, normalized-entropy: 0.710676853856123, [(1, 14), (2, 58)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 67, 0]]
** centroid: 6, normalized-entropy: 0.5869185834047994, [(1, 11), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 1, 0]]
** centroid: 7, normalized-entropy: 0.1274185117923586, [(1, 56), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18643206611648203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18643206611648203, 0.14953116398397834] ***
*** starting iteration: 2; err: [Inf, 0.18643206611648203, 0.14953116398397834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18643206611648203, 0.14953116398397834, 0.1470601535048336] ***
*** starting iteration: 3; err: [Inf, 0.18643206611648203, 0.14953116398397834, 0.1470601535048336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18643206611648203, 0.14953116398397834, 0.1470601535048336, 0.14624299071729183] ***
*** finished computation of 7 references, err: [Inf, 0.18643206611648203, 0.14953116398397834, 0.1470601535048336, 0.14624299071729183] ***
*** center 1: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 50, 18]]
** centroid: 2, normalized-entropy: 0.8337649072106652, [(2, 50), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 30, 0]]
** centroid: 4, normalized-entropy: 0.9474351361840305, [(1, 52), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 46, 0]]
** centroid: 5, normalized-entropy: 0.9568886656798214, [(1, 28), (2, 46)]
*** center 6: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 50, 0]]
** centroid: 7, normalized-entropy: 0.38094658570539014, [(1, 4), (2, 50)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18723604909982533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18723604909982533, 0.15368051860388368] ***
*** starting iteration: 2; err: [Inf, 0.18723604909982533, 0.15368051860388368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655] ***
*** starting iteration: 3; err: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655, 0.1464290690794587] ***
*** starting iteration: 4; err: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655, 0.1464290690794587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655, 0.1464290690794587, 0.14596927429549397] ***
*** finished computation of 7 references, err: [Inf, 0.18723604909982533, 0.15368051860388368, 0.14813949603773655, 0.1464290690794587, 0.14596927429549397] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 59, 15]]
** centroid: 2, normalized-entropy: 0.7273006785144036, [(2, 59), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 8, 0]]
** centroid: 3, normalized-entropy: 0.5491087450260074, [(1, 55), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [50, 1, 0]]
** centroid: 4, normalized-entropy: 0.13923299905509884, [(1, 50), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [10, 62, 0]]
** centroid: 5, normalized-entropy: 0.581321498763703, [(1, 10), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [22, 51, 0]]
** centroid: 6, normalized-entropy: 0.8829589691462253, [(1, 22), (2, 51)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.188678075350821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.188678075350821, 0.1508019041819498] ***
*** starting iteration: 2; err: [Inf, 0.188678075350821, 0.1508019041819498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084] ***
*** starting iteration: 3; err: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084, 0.145834969766438] ***
*** starting iteration: 4; err: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084, 0.145834969766438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084, 0.145834969766438, 0.14551975554693491] ***
*** finished computation of 7 references, err: [Inf, 0.188678075350821, 0.1508019041819498, 0.14688059031777084, 0.145834969766438, 0.14551975554693491] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 66, 0]]
** centroid: 1, normalized-entropy: 0.7665599404543365, [(1, 19), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 3, 0]]
** centroid: 2, normalized-entropy: 0.3138129641688652, [(1, 50), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 41, 12]]
** centroid: 4, normalized-entropy: 0.7717094696953635, [(2, 41), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 4, 0]]
** centroid: 5, normalized-entropy: 0.33352200393097675, [(1, 61), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [17, 58, 0]]
** centroid: 7, normalized-entropy: 0.7721551435804817, [(1, 17), (2, 58)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17409493614267557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17409493614267557, 0.15217733126506208] ***
*** starting iteration: 2; err: [Inf, 0.17409493614267557, 0.15217733126506208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17409493614267557, 0.15217733126506208, 0.15008067316189408] ***
*** starting iteration: 3; err: [Inf, 0.17409493614267557, 0.15217733126506208, 0.15008067316189408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17409493614267557, 0.15217733126506208, 0.15008067316189408, 0.14934522280842066] ***
*** finished computation of 7 references, err: [Inf, 0.17409493614267557, 0.15217733126506208, 0.15008067316189408, 0.14934522280842066] ***
*** center 1: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 16]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 4, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 44), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 5, 0]]
** centroid: 4, normalized-entropy: 0.33426813256179383, [(1, 76), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 62, 0]]
** centroid: 5, normalized-entropy: 0.5484866088431741, [(1, 9), (2, 62)]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 71, 0]]
** centroid: 7, normalized-entropy: 0.18116640155354563, [(1, 2), (2, 71)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19676417143130676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19676417143130676, 0.15473449233733116] ***
*** starting iteration: 2; err: [Inf, 0.19676417143130676, 0.15473449233733116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19676417143130676, 0.15473449233733116, 0.15058877690415828] ***
*** starting iteration: 3; err: [Inf, 0.19676417143130676, 0.15473449233733116, 0.15058877690415828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19676417143130676, 0.15473449233733116, 0.15058877690415828, 0.1498396287281066] ***
*** finished computation of 7 references, err: [Inf, 0.19676417143130676, 0.15473449233733116, 0.15058877690415828, 0.1498396287281066] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 82, 12]]
** centroid: 1, normalized-entropy: 0.5509844433017146, [(2, 82), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 5, 0]]
** centroid: 3, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 27, 0]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(1, 48), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 8, 0]]
** centroid: 5, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 2, 0]]
** centroid: 7, normalized-entropy: 0.2006223243127146, [(1, 62), (2, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1903219223637134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1903219223637134, 0.14730234400182962] ***
*** starting iteration: 2; err: [Inf, 0.1903219223637134, 0.14730234400182962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1903219223637134, 0.14730234400182962, 0.14505098158493637] ***
*** starting iteration: 3; err: [Inf, 0.1903219223637134, 0.14730234400182962, 0.14505098158493637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1903219223637134, 0.14730234400182962, 0.14505098158493637, 0.14435453992336988] ***
*** finished computation of 7 references, err: [Inf, 0.1903219223637134, 0.14730234400182962, 0.14505098158493637, 0.14435453992336988] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 61, 10]]
** centroid: 1, normalized-entropy: 0.5864477034453907, [(2, 61), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 31, 0]]
** centroid: 4, normalized-entropy: 0.9003418708227195, [(1, 67), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 5, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 57, 0]]
** centroid: 6, normalized-entropy: 0.34918437350730797, [(1, 4), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20020597191434353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20020597191434353, 0.15179185047000646] ***
*** starting iteration: 2; err: [Inf, 0.20020597191434353, 0.15179185047000646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20020597191434353, 0.15179185047000646, 0.14731996559724211] ***
*** starting iteration: 3; err: [Inf, 0.20020597191434353, 0.15179185047000646, 0.14731996559724211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20020597191434353, 0.15179185047000646, 0.14731996559724211, 0.1469583804961294] ***
*** finished computation of 7 references, err: [Inf, 0.20020597191434353, 0.15179185047000646, 0.14731996559724211, 0.1469583804961294] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 5, 0]]
** centroid: 1, normalized-entropy: 0.3829576722723533, [(1, 62), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 60, 10]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 60), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 9, 0]]
** centroid: 3, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 37, 0]]
** centroid: 4, normalized-entropy: 0.985909442028652, [(1, 49), (2, 37)]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [8, 69, 0]]
** centroid: 6, normalized-entropy: 0.481225663841737, [(1, 8), (2, 69)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18422327483817935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18422327483817935, 0.15354880551062525] ***
*** starting iteration: 2; err: [Inf, 0.18422327483817935, 0.15354880551062525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554] ***
*** starting iteration: 3; err: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554, 0.14728463053889573] ***
*** starting iteration: 4; err: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554, 0.14728463053889573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554, 0.14728463053889573, 0.14699602399021386] ***
*** finished computation of 7 references, err: [Inf, 0.18422327483817935, 0.15354880551062525, 0.14866938515752554, 0.14728463053889573, 0.14699602399021386] ***
*** center 1: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 13]]
** centroid: 2, normalized-entropy: 0.7746319868686841, [(2, 44), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 8, 0]]
** centroid: 3, normalized-entropy: 0.52764232609436, [(1, 59), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 50, 0]]
** centroid: 4, normalized-entropy: 0.8171387756817725, [(1, 17), (2, 50)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 67, 0]]
** centroid: 5, normalized-entropy: 0.7072324944713736, [(1, 16), (2, 67)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 4, 0]]
** centroid: 7, normalized-entropy: 0.37601985096927276, [(1, 51), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2135828030676348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2135828030676348, 0.15232530467770994] ***
*** starting iteration: 2; err: [Inf, 0.2135828030676348, 0.15232530467770994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2135828030676348, 0.15232530467770994, 0.1496590007022023] ***
*** starting iteration: 3; err: [Inf, 0.2135828030676348, 0.15232530467770994, 0.1496590007022023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2135828030676348, 0.15232530467770994, 0.1496590007022023, 0.1489360039839521] ***
*** finished computation of 7 references, err: [Inf, 0.2135828030676348, 0.15232530467770994, 0.1496590007022023, 0.1489360039839521] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 60, 0]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(1, 18), (2, 60)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [51, 20, 0]]
** centroid: 4, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 47, 14]]
** centroid: 5, normalized-entropy: 0.7771529943226336, [(2, 47), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [21, 51, 0]]
** centroid: 7, normalized-entropy: 0.8708644692353648, [(1, 21), (2, 51)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19459926991281098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19459926991281098, 0.15204967446811496] ***
*** starting iteration: 2; err: [Inf, 0.19459926991281098, 0.15204967446811496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19459926991281098, 0.15204967446811496, 0.14849824023619293] ***
*** starting iteration: 3; err: [Inf, 0.19459926991281098, 0.15204967446811496, 0.14849824023619293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19459926991281098, 0.15204967446811496, 0.14849824023619293, 0.14766956938058137] ***
*** finished computation of 7 references, err: [Inf, 0.19459926991281098, 0.15204967446811496, 0.14849824023619293, 0.14766956938058137] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 62, 10]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 62), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 1, 0]]
** centroid: 3, normalized-entropy: 0.12394986771100755, [(1, 58), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 34, 0]]
** centroid: 4, normalized-entropy: 0.9624127354629922, [(1, 54), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 11, 0]]
** centroid: 5, normalized-entropy: 0.6115516951951333, [(1, 62), (2, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 65, 0]]
** centroid: 7, normalized-entropy: 0.11327430349709665, [(1, 1), (2, 65)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1906417286619544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1906417286619544, 0.15378732884814963] ***
*** starting iteration: 2; err: [Inf, 0.1906417286619544, 0.15378732884814963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1906417286619544, 0.15378732884814963, 0.14885127489920705] ***
*** starting iteration: 3; err: [Inf, 0.1906417286619544, 0.15378732884814963, 0.14885127489920705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1906417286619544, 0.15378732884814963, 0.14885127489920705, 0.14806092462036757] ***
*** finished computation of 7 references, err: [Inf, 0.1906417286619544, 0.15378732884814963, 0.14885127489920705, 0.14806092462036757] ***
*** center 1: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 3, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 48), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 14]]
** centroid: 3, normalized-entropy: 0.7516499461153354, [(2, 51), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 64, 0]]
** centroid: 5, normalized-entropy: 0.6014353864290773, [(1, 11), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 58, 0]]
** centroid: 7, normalized-entropy: 0.6024308020404452, [(1, 10), (2, 58)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1890277523584664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017] ***
*** starting iteration: 2; err: [Inf, 0.1890277523584664, 0.1563738174960017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817] ***
*** starting iteration: 3; err: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487] ***
*** starting iteration: 4; err: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567] ***
*** starting iteration: 5; err: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567, 0.1462821469567716] ***
*** starting iteration: 6; err: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567, 0.1462821469567716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567, 0.1462821469567716, 0.14547276372788473] ***
*** finished computation of 7 references, err: [Inf, 0.1890277523584664, 0.1563738174960017, 0.15193234328366817, 0.14914658979326487, 0.14767649866640567, 0.1462821469567716, 0.14547276372788473] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 4, 0]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 21, 0]]
** centroid: 2, normalized-entropy: 0.8354065254460503, [(1, 58), (2, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 48, 11]]
** centroid: 4, normalized-entropy: 0.693965967334286, [(2, 48), (3, 11)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 48, 0]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(1, 27), (2, 48)]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 52, 0]]
** centroid: 7, normalized-entropy: 0.13503620280212753, [(1, 1), (2, 52)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 353,3 => 27,1 => 620), Dict(2 => 364,3 => 43,1 => 593))
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 1), 0.9340088591585598)
[ Info: ===== scores for single classifier: {"micro_f1":0.931,"precision":0.931,"recall":0.931,"macro_recall":0.94423957155829,"macro_f1":0.8976807941056686,"accuracy":0.931,"class_f1":{"2":0.9015691868758916,"3":0.8349514563106796,"1":0.9565217391304347},"class_precision":{"2":0.9376854599406528,"3":0.7166666666666667,"1":0.9485903814262023},"class_recall":{"2":0.8681318681318682,"3":1.0,"1":0.9645868465430016}}
[ Info: ===== scores for 1: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9686655455999351,"macro_f1":0.9733712756215332,"accuracy":0.969,"class_f1":{"2":0.957004160887656,"3":0.988235294117647,"1":0.9748743718592965},"class_precision":{"2":0.9663865546218487,"3":1.0,"1":0.9683860232945092},"class_recall":{"2":0.9478021978021978,"3":0.9767441860465116,"1":0.9814502529510961}}
[ Info: ===== scores for 5: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9790195751409917,"macro_f1":0.9637370013589992,"accuracy":0.974,"class_f1":{"2":0.9637883008356546,"3":0.945054945054945,"1":0.9823677581863979},"class_precision":{"2":0.9774011299435028,"3":0.8958333333333334,"1":0.9782608695652174},"class_recall":{"2":0.9505494505494505,"3":1.0,"1":0.9865092748735245}}
[ Info: ===== scores for 7: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.976272322393739,"macro_f1":0.9614650006609805,"accuracy":0.971,"class_f1":{"2":0.9594405594405594,"3":0.945054945054945,"1":0.9798994974874372},"class_precision":{"2":0.9772079772079773,"3":0.8958333333333334,"1":0.9733777038269551},"class_recall":{"2":0.9423076923076923,"3":1.0,"1":0.9865092748735245}}
[ Info: ===== scores for 9: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.975356571477988,"macro_f1":0.9607058787467352,"accuracy":0.97,"class_f1":{"2":0.9579831932773109,"3":0.945054945054945,"1":0.9790794979079498},"class_precision":{"2":0.9771428571428571,"3":0.8958333333333334,"1":0.9717607973421927},"class_recall":{"2":0.9395604395604396,"3":1.0,"1":0.9865092748735245}}
[ Info: ===== scores for 11: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9777501868564263,"macro_f1":0.9598058962066397,"accuracy":0.973,"class_f1":{"2":0.9622377622377621,"3":0.9347826086956522,"1":0.9823973176865047},"class_precision":{"2":0.98005698005698,"3":0.8775510204081632,"1":0.9766666666666667},"class_recall":{"2":0.945054945054945,"3":1.0,"1":0.9881956155143339}}
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: ("config: ", "{\"score\":0.979,\"k\":3,\"kernel\":\"direct_kernel\",\"dist\":\"l2_distance\",\"kernel_fun\":\"fun\"}")
[ Info: ===== scores optimized! B: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9843056044573751,"macro_f1":0.9740678666472293,"accuracy":0.979,"class_f1":{"2":0.9711141678129299,"3":0.9662921348314606,"1":0.9847972972972973},"class_precision":{"2":0.9724517906336089,"3":0.9347826086956522,"1":0.9864636209813875},"class_recall":{"2":0.9697802197802198,"3":1.0,"1":0.9831365935919055}}
Test Summary: | Pass  Total
AKNC          |    8      8
    Testing KCenters tests passed 
