Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GenericSVD ────────────────── v0.2.2
  Installed JLD2 ──────────────────────── v0.1.11
  Installed Rmath ─────────────────────── v0.6.0
  Installed MacroTools ────────────────── v0.5.4
  Installed NNlib ─────────────────────── v0.6.4
  Installed DocumenterLaTeX ───────────── v0.2.0
  Installed OpenSpecFun_jll ───────────── v0.5.3+1
  Installed WeakRefStrings ────────────── v0.6.2
  Installed CSV ───────────────────────── v0.5.23
  Installed Distributions ─────────────── v0.21.12
  Installed CUDAdrv ───────────────────── v5.1.0
  Installed PredictMD ─────────────────── v0.34.15
  Installed Tables ────────────────────── v0.2.11
  Installed Arpack ────────────────────── v0.4.0
  Installed ExprTools ─────────────────── v0.1.0
  Installed DocumenterMarkdown ────────── v0.2.0
  Installed TimeZones ─────────────────── v1.0.1
  Installed GLM ───────────────────────── v1.3.6
  Installed FixedPointNumbers ─────────── v0.7.1
  Installed ProgressMeter ─────────────── v1.2.0
  Installed StatsModels ───────────────── v0.6.7
  Installed LIBSVM ────────────────────── v0.4.0
  Installed DataDeps ──────────────────── v0.7.1
  Installed GPUArrays ─────────────────── v2.0.1
  Installed DocStringExtensions ───────── v0.8.1
  Installed DecisionTree ──────────────── v0.10.1
  Installed FFTW ──────────────────────── v1.2.0
  Installed TikzPictures ──────────────── v3.0.5
  Installed TimerOutputs ──────────────── v0.5.3
  Installed CUDAapi ───────────────────── v2.1.0
  Installed GenericSchur ──────────────── v0.3.0
  Installed Adapt ─────────────────────── v1.0.1
  Installed PredictMDAPI ──────────────── v0.3.1
  Installed Polynomials ───────────────── v0.6.0
  Installed FileIO ────────────────────── v1.2.2
  Installed OpenBLAS_jll ──────────────── v0.3.7+5
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed ArgCheck ──────────────────── v1.1.0
  Installed LIBLINEAR ─────────────────── v0.5.1
  Installed EzXML ─────────────────────── v1.1.0
  Installed LLVM ──────────────────────── v1.3.3
  Installed RDatasets ─────────────────── v0.6.6
  Installed Libiconv_jll ──────────────── v1.16.0+1
  Installed CSVFiles ──────────────────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed NumericalIntegration ──────── v0.2.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DefaultApplication ────────── v0.1.3
  Installed SpecialFunctions ──────────── v0.9.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DoubleFloats ──────────────── v0.9.11
  Installed DataStructures ────────────── v0.17.9
  Installed Requires ──────────────────── v1.0.1
  Installed AbstractFFTs ──────────────── v0.5.0
  Installed StatsFuns ─────────────────── v0.9.3
  Installed AutoGrad ──────────────────── v1.2.1
  Installed Cassette ──────────────────── v0.3.1
  Installed CUDAnative ────────────────── v2.9.1
  Installed BSON ──────────────────────── v0.2.5
  Installed GZip ──────────────────────── v0.5.1
  Installed Combinatorics ─────────────── v1.0.0
  Installed TextParse ─────────────────── v1.0.0
  Installed HTTP ──────────────────────── v0.8.8
  Installed BinaryProvider ────────────── v0.5.8
  Installed Parameters ────────────────── v0.12.0
  Installed DataValues ────────────────── v0.4.13
  Installed Documenter ────────────────── v0.24.5
  Installed Parsers ───────────────────── v0.3.11
  Installed InvertedIndices ───────────── v1.0.0
  Installed Zlib_jll ──────────────────── v1.2.11+8
  Installed FFTW_jll ──────────────────── v3.3.9+3
  Installed PDMats ────────────────────── v0.9.11
  Installed IntelOpenMP_jll ───────────── v2018.0.3+0
  Installed TableShowUtils ────────────── v0.2.5
  Installed TranscodingStreams ────────── v0.9.5
  Installed StatsBase ─────────────────── v0.32.0
  Installed JSON ──────────────────────── v0.21.0
  Installed ClassImbalance ────────────── v0.8.1
  Installed CuArrays ──────────────────── v1.7.0
  Installed QuadGK ────────────────────── v2.3.1
  Installed MLBase ────────────────────── v0.8.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed ShiftedArrays ─────────────── v1.0.0
  Installed IterableTables ────────────── v1.0.0
  Installed XML2_jll ──────────────────── v2.9.9+1
  Installed FillArrays ────────────────── v0.8.4
  Installed TableTraitsUtils ──────────── v1.0.1
  Installed FilePathsBase ─────────────── v0.7.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Literate ──────────────────── v2.2.1
  Installed UnicodePlots ──────────────── v1.1.0
  Installed ROCAnalysis ───────────────── v0.3.1
  Installed Nullables ─────────────────── v1.0.0
  Installed Compat ────────────────────── v2.2.0
  Installed Arpack_jll ────────────────── v3.5.0+2
  Installed ValueHistories ────────────── v0.5.1
  Installed OrderedCollections ────────── v1.1.0
  Installed LaTeXStrings ──────────────── v1.0.3
  Installed RecipesBase ───────────────── v0.7.0
  Installed ScikitLearnBase ───────────── v0.5.0
  Installed DataFrames ────────────────── v0.20.0
  Installed IterTools ─────────────────── v1.3.0
  Installed CEnum ─────────────────────── v0.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Mocking ───────────────────── v0.7.1
  Installed MKL_jll ───────────────────── v2019.0.117+2
  Installed Reexport ──────────────────── v0.2.0
  Installed Quadmath ──────────────────── v0.5.2
  Installed RData ─────────────────────── v0.6.3
  Installed PGFPlotsX ─────────────────── v1.2.1
  Installed IniFile ───────────────────── v0.5.0
  Installed MbedTLS ───────────────────── v0.7.0
  Installed CodecZlib ─────────────────── v0.6.0
  Installed Knet ──────────────────────── v1.3.3
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     ######################################################################## 100.0%
#=#=#                                                                         ######                                                                     9.6%#########################                                                 36.1%######################################################                    76.0%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         #############                                                             18.3%######################################################################## 100.0%
#                                                                          2.3%######################################################################## 100.0%
                                                                           0.3%#####################                                                     30.0%######################################################################## 100.0%
#######                                                                   10.8%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [3e7d7328] + PredictMD v0.34.15
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.1
  [dce04be8] + ArgCheck v1.1.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [6710c13c] + AutoGrad v1.2.1
  [fbb218c0] + BSON v0.2.5
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [336ed68f] + CSV v0.5.23
  [5d742f6a] + CSVFiles v1.0.0
  [3895d2a7] + CUDAapi v2.1.0
  [c5f51814] + CUDAdrv v5.1.0
  [be33ccc6] + CUDAnative v2.9.1
  [7057c7e9] + Cassette v0.3.1
  [324d7699] + CategoricalArrays v0.7.7
  [04a18a73] + ClassImbalance v0.8.1
  [944b1d66] + CodecZlib v0.6.0
  [861a8166] + Combinatorics v1.0.0
  [34da2185] + Compat v2.2.0
  [3a865a2d] + CuArrays v1.7.0
  [9a962f9c] + DataAPI v1.1.0
  [124859b0] + DataDeps v0.7.1
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [e7dc6d0d] + DataValues v0.4.13
  [7806a523] + DecisionTree v0.10.1
  [3f0dd361] + DefaultApplication v0.1.3
  [31c24e10] + Distributions v0.21.12
  [ffbed154] + DocStringExtensions v0.8.1
  [e30172f5] + Documenter v0.24.5
  [cd674d7a] + DocumenterLaTeX v0.2.0
  [997ab1e6] + DocumenterMarkdown v0.2.0
  [497a8b3b] + DoubleFloats v0.9.11
  [e2ba6199] + ExprTools v0.1.0
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [5789e2e9] + FileIO v1.2.2
  [48062228] + FilePathsBase v0.7.0
  [1a297f60] + FillArrays v0.8.4
  [53c48c17] + FixedPointNumbers v0.7.1
  [38e38edf] + GLM v1.3.6
  [0c68f7d7] + GPUArrays v2.0.1
  [92fee26a] + GZip v0.5.1
  [01680d73] + GenericSVD v0.2.2
  [c145ed77] + GenericSchur v0.3.0
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [1c8ee90f] + IterableTables v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [033835bb] + JLD2 v0.1.11
  [682c06a0] + JSON v0.21.0
  [1902f260] + Knet v1.3.3
  [2d691ee1] + LIBLINEAR v0.5.1
  [b1bec4e5] + LIBSVM v0.4.0
  [929cbde3] + LLVM v1.3.3
  [b964fa9f] + LaTeXStrings v1.0.3
  [94ce4f54] + Libiconv_jll v1.16.0+1
  [98b081ad] + Literate v2.2.1
  [856f044c] + MKL_jll v2019.0.117+2
  [f0e99cf1] + MLBase v0.8.0
  [1914dd2f] + MacroTools v0.5.4
  [739be429] + MbedTLS v0.7.0
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [872c559c] + NNlib v0.6.4
  [4d1e1d77] + Nullables v1.0.0
  [e7bfaba1] + NumericalIntegration v0.2.0
  [4536629a] + OpenBLAS_jll v0.3.7+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.11
  [8314cec4] + PGFPlotsX v1.2.1
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.11
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.3
  [3e7d7328] + PredictMD v0.34.15
  [df4d2c64] + PredictMDAPI v0.3.1
  [92933f4c] + ProgressMeter v1.2.0
  [1fd47b50] + QuadGK v2.3.1
  [be4d8f0f] + Quadmath v0.5.2
  [df47a6cb] + RData v0.6.3
  [ce6b1742] + RDatasets v0.6.6
  [f535d66d] + ROCAnalysis v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [6e75b9c4] + ScikitLearnBase v0.5.0
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [3eaba693] + StatsModels v0.6.7
  [5e66a065] + TableShowUtils v0.2.5
  [3783bdb8] + TableTraits v1.0.0
  [382cd787] + TableTraitsUtils v1.0.1
  [bd369af6] + Tables v0.2.11
  [e0df1984] + TextParse v1.0.0
  [37f6aa50] + TikzPictures v3.0.5
  [f269a46b] + TimeZones v1.0.1
  [a759f4b9] + TimerOutputs v0.5.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [b8865327] + UnicodePlots v1.1.0
  [98cad3c8] + ValueHistories v0.5.1
  [ea10d353] + WeakRefStrings v0.6.2
  [02c8fc9c] + XML2_jll v2.9.9+1
  [83775a58] + Zlib_jll v1.2.11+8
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath ────→ `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Building NNlib ────→ `~/.julia/packages/NNlib/3krvM/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/zymSN/deps/build.log`
   Building LIBLINEAR → `~/.julia/packages/LIBLINEAR/yTdp5/deps/build.log`
   Building LIBSVM ───→ `~/.julia/packages/LIBSVM/5Z99T/deps/build.log`
   Building FFTW ─────→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
   Building MbedTLS ──→ `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building Knet ─────→ `~/.julia/packages/Knet/2xiR8/deps/build.log`
    Testing PredictMD
Status `/tmp/jl_MhIBoj/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [dce04be8] ArgCheck v1.1.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [6710c13c] AutoGrad v1.2.1
  [fbb218c0] BSON v0.2.5
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [336ed68f] CSV v0.5.23
  [5d742f6a] CSVFiles v1.0.0
  [3895d2a7] CUDAapi v2.1.0
  [c5f51814] CUDAdrv v5.1.0
  [be33ccc6] CUDAnative v2.9.1
  [7057c7e9] Cassette v0.3.1
  [324d7699] CategoricalArrays v0.7.7
  [04a18a73] ClassImbalance v0.8.1
  [aaaa29a8] Clustering v0.13.3
  [944b1d66] CodecZlib v0.6.0
  [19ecbf4d] Codecs v0.5.0
  [3da002f7] ColorTypes v0.8.1
  [861a8166] Combinatorics v1.0.0
  [34da2185] Compat v2.2.0
  [ed09eef8] ComputationalResources v0.3.1
  [187b0558] ConstructionBase v1.0.0
  [a2441757] Coverage v1.0.0
  [c36e975a] CoverageTools v1.1.0
  [a8cc5b0e] Crayons v4.0.1
  [3a865a2d] CuArrays v1.7.0
  [9a962f9c] DataAPI v1.1.0
  [124859b0] DataDeps v0.7.1
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [b905b068] DeIdentification v0.8.1
  [7806a523] DecisionTree v0.10.1
  [3f0dd361] DefaultApplication v0.1.3
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.21.12
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.5
  [cd674d7a] DocumenterLaTeX v0.2.0
  [997ab1e6] DocumenterMarkdown v0.2.0
  [497a8b3b] DoubleFloats v0.9.11
  [e2ba6199] ExprTools v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [5789e2e9] FileIO v1.2.2
  [48062228] FilePathsBase v0.7.0
  [1a297f60] FillArrays v0.8.4
  [53c48c17] FixedPointNumbers v0.7.1
  [59287772] Formatting v0.4.1
  [38e38edf] GLM v1.3.6
  [0c68f7d7] GPUArrays v2.0.1
  [92fee26a] GZip v0.5.1
  [01680d73] GenericSVD v0.2.2
  [c145ed77] GenericSchur v0.3.0
  [c27321d9] Glob v1.2.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [1c8ee90f] IterableTables v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.1.11
  [682c06a0] JSON v0.21.0
  [1902f260] Knet v1.3.3
  [2d691ee1] LIBLINEAR v0.5.1
  [b1bec4e5] LIBSVM v0.4.0
  [929cbde3] LLVM v1.3.3
  [b964fa9f] LaTeXStrings v1.0.3
  [7f8f8fb0] LearnBase v0.2.2
  [94ce4f54] Libiconv_jll v1.16.0+1
  [98b081ad] Literate v2.2.1
  [30fc2ffe] LossFunctions v0.5.1
  [856f044c] MKL_jll v2019.0.117+2
  [f0e99cf1] MLBase v0.8.0
  [add582a8] MLJ v0.7.0
  [a7f614a8] MLJBase v0.10.1
  [d491faf4] MLJModels v0.7.2
  [1914dd2f] MacroTools v0.5.4
  [739be429] MbedTLS v0.7.0
  [f9f48841] MemPool v0.2.0
  [f28f55f0] Memento v0.12.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [6f286f6a] MultivariateStats v0.7.0
  [872c559c] NNlib v0.6.4
  [b8a86587] NearestNeighbors v0.4.4
  [4d1e1d77] Nullables v1.0.0
  [e7bfaba1] NumericalIntegration v0.2.0
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.11
  [8314cec4] PGFPlotsX v1.2.1
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [32113eaa] PkgBenchmark v0.2.6
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [3e7d7328] PredictMD v0.34.15
  [df4d2c64] PredictMDAPI v0.3.1
  [d14d998a] PredictMDExtra v0.13.12
  [08abe8d2] PrettyTables v0.6.0
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [be4d8f0f] Quadmath v0.5.2
  [df47a6cb] RData v0.6.3
  [ce6b1742] RDatasets v0.6.6
  [f535d66d] ROCAnalysis v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [cbe49d4c] RemoteFiles v0.3.1
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [321657f4] ScientificTypes v0.5.1
  [6e75b9c4] ScikitLearnBase v0.5.0
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3eaba693] StatsModels v0.6.7
  [cea106d9] Syslogs v0.3.0
  [5e66a065] TableShowUtils v0.2.5
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v0.2.11
  [e0df1984] TextParse v1.0.0
  [37f6aa50] TikzPictures v3.0.5
  [f269a46b] TimeZones v1.0.1
  [a759f4b9] TimerOutputs v0.5.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [b8865327] UnicodePlots v1.1.0
  [1986cc42] Unitful v1.0.0
  [98cad3c8] ValueHistories v0.5.1
  [ea10d353] WeakRefStrings v0.6.2
  [02c8fc9c] XML2_jll v2.9.9+1
  [ddb6d928] YAML v0.3.2
  [83775a58] Zlib_jll v1.2.11+8
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
[ Info: Model metadata loaded from registry. 
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [aaaa29a8] + Clustering v0.13.3
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [a2441757] + Coverage v1.0.0
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [ade2ca70] + Dates 
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [b905b068] + DeIdentification v0.8.1
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [b4f34e82] + Distances v0.8.2
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [add582a8] + MLJ v0.7.0
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [a7f614a8] + MLJBase v0.10.1
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [d491faf4] + MLJModels v0.7.2
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [f9f48841] + MemPool v0.2.0
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [6f286f6a] + MultivariateStats v0.7.0
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [32113eaa] + PkgBenchmark v0.2.6
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [cbe49d4c] + RemoteFiles v0.3.1
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [79098fc4] + Rmath v0.6.0
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
  Resolving package versions...
   Updating `/tmp/jl_MhIBoj/Project.toml`
  [a759f4b9] + TimerOutputs v0.5.3
   Updating `/tmp/jl_MhIBoj/Manifest.toml`
 [no changes]
[ Info: PREDICTMD_TEST_GROUP: "all"
[ Info: PREDICTMD_TEST_PLOTS: "true"
Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  uname: Linux 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2200 MHz  5216755602 s   23915553 s  660645503 s  4487278684 s          0 s
       
  Memory: 376.5903091430664 GB (91099.73828125 MB free)
  Uptime: 2.603546e6 sec
  Load Avg:  49.4345703125  51.74853515625  46.38916015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_PKGEVAL = true
  JULIA_LOAD_PATH = @:/tmp/jl_MhIBoj
  HOME = /home/pkgeval
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  JULIA_LOAD_PATH = @:/tmp/jl_MhIBoj
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at smote.jl:18
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/classimbalance/smote.jl:18
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at splitdata.jl:3
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/modelselection/splitdata.jl:3
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at dataframecontrasts.jl:6
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/preprocessing/dataframecontrasts.jl:6
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at dataframecontrasts.jl:14
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/preprocessing/dataframecontrasts.jl:14
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at dataframecontrasts.jl:18
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/preprocessing/dataframecontrasts.jl:18
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at constant_columns.jl:47
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/utils/constant_columns.jl:47
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at constant_columns.jl:48
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/utils/constant_columns.jl:48
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = find_constant_columns(::DataFrames.DataFrame) at constant_columns.jl:66
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/constant_columns.jl:66
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predictionsassoctodataframe(::Dict{Symbol,Array{Float64,1}}, ::Array{Symbol,1}) at predictionsassoctodataframe.jl:14
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/predictionsassoctodataframe.jl:14
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = columns_are_linearly_independent(::DataFrames.DataFrame, ::Array{Symbol,1}) at linearly_dependent_columns.jl:40
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/linearly_dependent_columns.jl:40
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = linearly_dependent_columns(::DataFrames.DataFrame, ::Array{Symbol,1}) at linearly_dependent_columns.jl:72
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/linearly_dependent_columns.jl:72
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = top-level scope at test_linearly_dependent_columns.jl:96
└ @ Core ~/.julia/packages/PredictMD/mOU6w/test/unit/toplevel/utils/test_linearly_dependent_columns.jl:96
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/02_linear_regression.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/02_linear_regression.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/03_random_forest_regression.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/03_random_forest_regression.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/04_knet_mlp_regression.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/04_knet_mlp_regression.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/05_compare_models.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/05_compare_models.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/boston_housing/src/06_get_model_output.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/boston_housing/src/06_get_model_output.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/03_logistic_classifier.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/03_logistic_classifier.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/04_random_forest_classifier.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/04_random_forest_classifier.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/05_c_svc_svm_classifier.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/05_c_svc_svm_classifier.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/06_nu_svc_svm_classifier.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/06_nu_svc_svm_classifier.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/07_knet_mlp_classifier.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/07_knet_mlp_classifier.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/08_compare_models.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/08_compare_models.jl`
[ Info: generating plain script file from `~/.julia/packages/PredictMD/mOU6w/templates/examples/cpu_examples/breast_cancer_biopsy/src/09_get_model_output.jl`
[ Info: writing result to `/tmp/jl_gwB1Wo/generate_examples/PredictMDTemp/docs/src/examples/cpu_examples/breast_cancer_biopsy/src/09_get_model_output.jl`
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at 01_preprocess_data.jl:63
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:63
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:67
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:67
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:67
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at 01_preprocess_data.jl:69
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:69
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:73
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:73
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:73
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:73
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::PredictMD.var"#make_continuous_column#187"{DataType}, ::Symbol) at transform_columns.jl:12
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:12
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::PredictMD.var"#make_continuous_column#187"{DataType}, ::Symbol) at transform_columns.jl:13
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:13
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::PredictMD.var"#make_continuous_column#187"{DataType}, ::Symbol) at transform_columns.jl:15
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:15
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::typeof(PredictMD.fix_type), ::Symbol) at transform_columns.jl:12
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:12
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::typeof(PredictMD.fix_type), ::Symbol) at transform_columns.jl:13
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:13
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = transform_columns!(::DataFrames.DataFrame, ::typeof(PredictMD.fix_type), ::Symbol) at transform_columns.jl:15
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:15
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = check_column_types(::DataFrames.DataFrame; categorical_feature_names::Array{Symbol,1}, continuous_feature_names::Array{Symbol,1}, categorical_label_names::Array{Symbol,1}, continuous_label_names::Array{Symbol,1}) at dataframe_column_types.jl:69
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/dataframe_column_types.jl:69
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:150
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:150
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:151
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:151
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:153
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/01_preprocess_data.jl:153
[ Info: Starting to train GLM model.
[ Info: Finished training GLM model.
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.GLMModel, ::DataFrames.DataFrame) at glm.jl:94
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/linearmodel/glm.jl:94
[ Info: Starting to train GLM model.
[ Info: Finished training GLM model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{PredictMDAPI.AbstractFittable,1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:14
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:14
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{PredictMDAPI.AbstractFittable,1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:18
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:18
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{PredictMDAPI.AbstractFittable,1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:33
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:33
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{PredictMDAPI.AbstractFittable,1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:37
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:37
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelregressionmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at singlelabelregressionmetrics.jl:94
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:94
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelregressionmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at singlelabelregressionmetrics.jl:100
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:100
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform(::PredictMD.MutableDataFrame2DecisionTreeTransformer, ::DataFrames.DataFrame, ::DataFrames.DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at dataframetodecisiontree.jl:49
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/preprocessing/dataframetodecisiontree.jl:49
[ Info: Starting to train DecisionTree model.
[ Info: Finished training DecisionTree model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:14
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:14
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.ImmutablePackageSingleLabelPredictionTransformer, ::Array{Float64,1}) at packagesinglelabelpred.jl:24
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/postprocessing/packagesinglelabelpred.jl:24
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:18
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:18
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:33
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:33
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:37
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:37
┌ Warning: optimizers is deprecated, use sgd, adam etc. instead.
└ @ Knet ~/.julia/packages/Knet/2xiR8/src/update.jl:627
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = #162 at none:0 [inlined]
└ @ Core ./none:0
[ Info: Starting to train Knet model. Max epochs: 100.
[ Info: Epoch: 0. Loss (training set): 388.23529143627457. Loss (tuning set): 379.08438862957377.
[ Info: Epoch: 10. Loss (training set): 88.04600781288472. Loss (tuning set): 98.30006254963833.
[ Info: Epoch: 20. Loss (training set): 76.85822115464183. Loss (tuning set): 87.8271289790664.
[ Info: Epoch: 30. Loss (training set): 68.4058973668534. Loss (tuning set): 80.40539067882966.
[ Info: Epoch: 40. Loss (training set): 61.91017974472329. Loss (tuning set): 74.58249845074428.
[ Info: Epoch: 50. Loss (training set): 57.62895856927421. Loss (tuning set): 70.30979538196404.
[ Info: Epoch: 60. Loss (training set): 54.932458651189506. Loss (tuning set): 67.45265660938357.
[ Info: Epoch: 70. Loss (training set): 52.949366018901. Loss (tuning set): 65.29604129987965.
[ Info: Epoch: 80. Loss (training set): 50.77591739783408. Loss (tuning set): 62.83750972495849.
[ Info: Epoch: 90. Loss (training set): 48.41856546675122. Loss (tuning set): 59.64022770929064.
[ Info: Epoch: 100. Loss (training set): 46.49356073314256. Loss (tuning set): 56.23735884389153.
[ Info: Finished training Knet model.
[ Info: Starting to train Knet model. Max epochs: 200.
[ Info: Epoch: 100. Loss (training set): 46.49356073314256. Loss (tuning set): 56.23735884389153.
[ Info: Epoch: 110. Loss (training set): 44.470241104075754. Loss (tuning set): 52.27794608901726.
[ Info: Epoch: 120. Loss (training set): 41.56801476349003. Loss (tuning set): 47.998335905339054.
[ Info: Epoch: 130. Loss (training set): 37.676742166138894. Loss (tuning set): 44.38119935023365.
[ Info: Epoch: 140. Loss (training set): 35.36360133565251. Loss (tuning set): 41.436839289750104.
[ Info: Epoch: 150. Loss (training set): 33.57117207435846. Loss (tuning set): 38.812691399429255.
[ Info: Epoch: 160. Loss (training set): 32.098846877521474. Loss (tuning set): 36.78623858109442.
[ Info: Epoch: 170. Loss (training set): 30.810647676829255. Loss (tuning set): 35.06949105306954.
[ Info: Epoch: 180. Loss (training set): 29.632799665336933. Loss (tuning set): 33.76011165242391.
[ Info: Epoch: 190. Loss (training set): 28.450801508362495. Loss (tuning set): 32.32498615567128.
[ Info: Epoch: 200. Loss (training set): 27.220445113615916. Loss (tuning set): 31.173691853589325.
[ Info: Finished training Knet model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageMultiLabelPredictionTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2RegressionKnetTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:14
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:14
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.ImmutablePackageMultiLabelPredictionTransformer, ::Array{Float64,2}) at packagemultilabelpred.jl:24
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/postprocessing/packagemultilabelpred.jl:24
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelregressiontrueversuspredicted(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageMultiLabelPredictionTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2RegressionKnetTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol; includeorigin::Bool, legend_pos::String) at plotsinglelabelregressiontruevspredicted.jl:18
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelregressiontruevspredicted.jl:18
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageMultiLabelPredictionTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2RegressionKnetTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:33
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:33
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelregressionmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageMultiLabelPredictionTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2RegressionKnetTransformer},1}}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Symbol) at singlelabelregressionmetrics.jl:37
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelregressionmetrics.jl:37
WARNING: using FileIO.filename in module Main conflicts with an existing identifier.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 05_compare_models.jl:250
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/05_compare_models.jl:250
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 05_compare_models.jl:267
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/05_compare_models.jl:267
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 05_compare_models.jl:284
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/boston_housing/src/05_compare_models.jl:284
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at 01_preprocess_data.jl:63
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:63
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:67
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:67
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:67
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = top-level scope at 01_preprocess_data.jl:69
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:69
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:73
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:73
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:73
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:73
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform_columns!(::DataFrame, ::PredictMD.var"#make_categorical_column#186", ::Symbol) at transform_columns.jl:12
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:12
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = transform_columns!(::DataFrame, ::PredictMD.var"#make_categorical_column#186", ::Symbol) at transform_columns.jl:13
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:13
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = transform_columns!(::DataFrame, ::PredictMD.var"#make_categorical_column#186", ::Symbol) at transform_columns.jl:15
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/utils/transform_columns.jl:15
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:139
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:139
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = top-level scope at 01_preprocess_data.jl:140
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/01_preprocess_data.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 02_smote.jl:165
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl:165
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 02_smote.jl:166
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl:166
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = smote(::Random._GLOBAL_RNG, ::DataFrame, ::DataFrame, ::Array{Symbol,1}, ::Symbol; majorityclass::String, minorityclass::String, pct_over::Int64, minority_to_majority_ratio::Float64, k::Int64) at smote.jl:81
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/classimbalance/smote.jl:81
┌ Warning: `getindex(df::DataFrame, col_inds::Union{AbstractVector, Regex, Not})` is deprecated, use `df[:, col_inds]` instead.
│   caller = smote(::Random._GLOBAL_RNG, ::DataFrame, ::DataFrame, ::Array{Symbol,1}, ::Symbol; majorityclass::String, minorityclass::String, pct_over::Int64, minority_to_majority_ratio::Float64, k::Int64) at smote.jl:93
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/classimbalance/smote.jl:93
┌ Warning: In the future setindex! will disallow adding columns to a DataFrame using integer index. Use a Symbol to specify a column name instead.
│   caller = setindex!(::DataFrame, ::Array{Float64,1}, ::Colon, ::Int64) at dataframe.jl:523
└ @ DataFrames ~/.julia/packages/DataFrames/uPgZV/src/dataframe/dataframe.jl:523
┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool = false)` is deprecated, use `rename!(df, vals, makeunique = makeunique)` instead.
│   caller = smote_obs(::DataFrame, ::Int64, ::Int64, ::Array{Symbol,1}) at smote_exs.jl:124
└ @ ClassImbalance ~/.julia/packages/ClassImbalance/EbxpR/src/smote_exs.jl:124
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = smote(::Random._GLOBAL_RNG, ::DataFrame, ::DataFrame, ::Array{Symbol,1}, ::Symbol; majorityclass::String, minorityclass::String, pct_over::Int64, minority_to_majority_ratio::Float64, k::Int64) at smote.jl:114
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/classimbalance/smote.jl:114
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 02_smote.jl:201
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl:201
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 02_smote.jl:202
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/02_smote.jl:202
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.GLMModel, ::DataFrame) at glm.jl:81
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/linearmodel/glm.jl:81
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = predict(::PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, ::DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at predictoutput.jl:51
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/postprocessing/predictoutput.jl:51
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, ::DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at predictoutput.jl:51
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/postprocessing/predictoutput.jl:51
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform(::PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, ::DataFrame, ::DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at dataframetoglm.jl:14
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/preprocessing/dataframetoglm.jl:14
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = transform(::PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, ::DataFrame, ::DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at dataframetoglm.jl:16
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/preprocessing/dataframetoglm.jl:16
[ Info: Starting to train GLM model.
[ Info: Finished training GLM model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelbinaryclassifierhistogram(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::Array{String,1}; num_bins::Int64, closed::Symbol, legend_pos::String, negative_style::String, positive_style::String) at plotsinglelabelbinaryclassifierhistograms.jl:67
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelbinaryclassifierhistograms.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:255
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:255
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:270
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:270
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = probability_calibration_scores_and_fractions(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; window::Float64) at probability_calibration_plots.jl:15
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/probability_calibration_plots.jl:15
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = probability_calibration_metrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String, ::Float64) at probability_calibration_plots.jl:225
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/probability_calibration_plots.jl:225
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = probability_calibration_metrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String, ::Float64) at probability_calibration_plots.jl:232
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/probability_calibration_plots.jl:232
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = probability_calibration_metrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String, ::Float64) at probability_calibration_plots.jl:260
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/probability_calibration_plots.jl:260
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = risk_score_cutoff_values(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; multiply_by::Float64, average_function::Function) at risk_score_cutoff_values.jl:16
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:16
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(mean)) at risk_score_cutoff_values.jl:81
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:81
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(mean)) at risk_score_cutoff_values.jl:86
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:86
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(mean)) at risk_score_cutoff_values.jl:91
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:91
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(mean)) at risk_score_cutoff_values.jl:96
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:96
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(mean)) at risk_score_cutoff_values.jl:102
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:102
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(median)) at risk_score_cutoff_values.jl:81
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:81
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(median)) at risk_score_cutoff_values.jl:86
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:86
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(median)) at risk_score_cutoff_values.jl:91
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:91
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(median)) at risk_score_cutoff_values.jl:96
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:96
┌ Warning: `deletecols!(df::DataFrame, inds)` is deprecated, use `select!(df, Not(inds))` instead.
│   caller = risk_score_cutoff_values(::Array{Int64,1}, ::Array{Float64,1}; multiply_by::Float64, average_function::typeof(median)) at risk_score_cutoff_values.jl:102
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/risk_score_cutoff_values.jl:102
[ Info: Starting to train DecisionTree model.
[ Info: Finished training DecisionTree model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelbinaryclassifierhistogram(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::Array{String,1}; num_bins::Int64, closed::Symbol, legend_pos::String, negative_style::String, positive_style::String) at plotsinglelabelbinaryclassifierhistograms.jl:67
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelbinaryclassifierhistograms.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
[ Info: Starting to train LIBSVM model.
[ Info: Finished training LIBSVM model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelbinaryclassifierhistogram(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutableFeatureArrayTransposerTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.LIBSVMModel, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::Array{String,1}; num_bins::Int64, closed::Symbol, legend_pos::String, negative_style::String, positive_style::String) at plotsinglelabelbinaryclassifierhistograms.jl:67
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelbinaryclassifierhistograms.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutableFeatureArrayTransposerTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.LIBSVMModel, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
[ Info: Starting to train LIBSVM model.
[ Info: Finished training LIBSVM model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform(::PredictMD.MutableDataFrame2ClassificationKnetTransformer, ::DataFrame, ::DataFrame, ::DataFrame, ::DataFrame; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at dataframetoknet.jl:251
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/preprocessing/dataframetoknet.jl:251
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = transform(::PredictMD.MutableDataFrame2ClassificationKnetTransformer, ::DataFrame, ::DataFrame, ::Nothing, ::Nothing; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at dataframetoknet.jl:251
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/preprocessing/dataframetoknet.jl:251
[ Info: Starting to train Knet model. Max epochs: 50.
[ Info: Epoch: 0. Loss (training set): 0.7184266983490579. Loss (tuning set): 0.6862520481561644.
[ Info: Epoch: 1. Loss (training set): 0.35036901645429414. Loss (tuning set): 0.39832843588047173.
[ Info: Epoch: 2. Loss (training set): 0.1772889589571551. Loss (tuning set): 0.2009844103409872.
[ Info: Epoch: 3. Loss (training set): 0.1168087129623587. Loss (tuning set): 0.11789626349554953.
[ Info: Epoch: 4. Loss (training set): 0.12468177319391023. Loss (tuning set): 0.13360561785696198.
[ Info: Epoch: 5. Loss (training set): 0.09356509393136868. Loss (tuning set): 0.0915556260286667.
[ Info: Epoch: 6. Loss (training set): 0.1365021717477241. Loss (tuning set): 0.17834785231560968.
[ Info: Epoch: 7. Loss (training set): 0.08756850854474185. Loss (tuning set): 0.08578417887733626.
[ Info: Epoch: 8. Loss (training set): 0.08106158622214255. Loss (tuning set): 0.07988860206014632.
[ Info: Epoch: 9. Loss (training set): 0.09089528490701552. Loss (tuning set): 0.10919425272052069.
[ Info: Epoch: 10. Loss (training set): 0.07939616566238518. Loss (tuning set): 0.09578081026448719.
[ Info: Epoch: 11. Loss (training set): 0.07203116773595887. Loss (tuning set): 0.08269948679156763.
[ Info: Epoch: 12. Loss (training set): 0.07198859329998468. Loss (tuning set): 0.09602146531152915.
[ Info: Epoch: 13. Loss (training set): 0.07237328486102743. Loss (tuning set): 0.11377827234610048.
[ Info: Epoch: 14. Loss (training set): 0.06608467546232326. Loss (tuning set): 0.11437959181738214.
[ Info: Epoch: 15. Loss (training set): 0.06256292456818822. Loss (tuning set): 0.15628116146796978.
[ Info: Epoch: 16. Loss (training set): 0.05759014585589793. Loss (tuning set): 0.1580006504079877.
[ Info: Epoch: 17. Loss (training set): 0.05046051140404348. Loss (tuning set): 0.17134238201750526.
[ Info: Epoch: 18. Loss (training set): 0.04908088380477094. Loss (tuning set): 0.19870396156180178.
[ Info: Epoch: 19. Loss (training set): 0.05217529078515136. Loss (tuning set): 0.22177423780550187.
[ Info: Epoch: 20. Loss (training set): 0.04910216069948893. Loss (tuning set): 0.22447615473058802.
[ Info: Epoch: 21. Loss (training set): 0.05054676527298252. Loss (tuning set): 0.2971534442832882.
[ Info: Epoch: 22. Loss (training set): 0.0630573006704104. Loss (tuning set): 0.3511034634423404.
[ Info: Epoch: 23. Loss (training set): 0.08305181502815745. Loss (tuning set): 0.3692635066366998.
[ Info: Epoch: 24. Loss (training set): 0.07626030583896988. Loss (tuning set): 0.40376119910307007.
[ Info: Epoch: 25. Loss (training set): 0.12017874507982935. Loss (tuning set): 0.4781293787608937.
[ Info: Epoch: 26. Loss (training set): 0.08639873707585895. Loss (tuning set): 0.41395342103554067.
[ Info: Epoch: 27. Loss (training set): 0.08240655595349713. Loss (tuning set): 0.29005321537655937.
[ Info: Epoch: 28. Loss (training set): 0.0829840739822702. Loss (tuning set): 0.22351060057826813.
[ Info: Epoch: 29. Loss (training set): 0.06726015692093668. Loss (tuning set): 0.17089258481351605.
[ Info: Epoch: 30. Loss (training set): 0.09702631093880956. Loss (tuning set): 0.28895423769036416.
[ Info: Epoch: 31. Loss (training set): 0.08808008324245582. Loss (tuning set): 0.23968651590438037.
[ Info: Epoch: 32. Loss (training set): 0.056565204089582086. Loss (tuning set): 0.14977656813241907.
[ Info: Epoch: 33. Loss (training set): 0.05902528687612819. Loss (tuning set): 0.19020423341313106.
[ Info: Epoch: 34. Loss (training set): 0.047108753238207755. Loss (tuning set): 0.22703844917001634.
[ Info: Epoch: 35. Loss (training set): 0.04276812439234865. Loss (tuning set): 0.2597974245899594.
[ Info: Epoch: 36. Loss (training set): 0.038621721666526276. Loss (tuning set): 0.28892664083866343.
[ Info: Epoch: 37. Loss (training set): 0.03952429249340112. Loss (tuning set): 0.3236026282844431.
[ Info: Epoch: 38. Loss (training set): 0.04125997356433794. Loss (tuning set): 0.339083380179216.
[ Info: Epoch: 39. Loss (training set): 0.04220985107659669. Loss (tuning set): 0.3787613938342504.
[ Info: Epoch: 40. Loss (training set): 0.039087776631219324. Loss (tuning set): 0.34992739088107405.
[ Info: Epoch: 41. Loss (training set): 0.032933361953059244. Loss (tuning set): 0.4193421152839898.
[ Info: Epoch: 42. Loss (training set): 0.03649201466960651. Loss (tuning set): 0.47623442072099703.
[ Info: Epoch: 43. Loss (training set): 0.04728802859995685. Loss (tuning set): 0.46838795824076185.
[ Info: Epoch: 44. Loss (training set): 0.03767945208682561. Loss (tuning set): 0.4890989704847195.
[ Info: Epoch: 45. Loss (training set): 0.043817062729421256. Loss (tuning set): 0.5074261669053851.
[ Info: Epoch: 46. Loss (training set): 0.0473727232208096. Loss (tuning set): 0.3406291974964889.
[ Info: Epoch: 47. Loss (training set): 0.09792226781214489. Loss (tuning set): 0.5070895063530596.
[ Info: Epoch: 48. Loss (training set): 0.06317755228282766. Loss (tuning set): 0.321380832953638.
[ Info: Epoch: 49. Loss (training set): 0.03802293676087274. Loss (tuning set): 0.26877862876242486.
[ Info: Epoch: 50. Loss (training set): 0.06370097004518367. Loss (tuning set): 0.3379468115204276.
[ Info: Finished training Knet model.
[ Info: Starting to train Knet model. Max epochs: 100.
[ Info: Epoch: 50. Loss (training set): 0.06370097004518367. Loss (tuning set): 0.3379468115204276.
[ Info: Epoch: 51. Loss (training set): 0.06198387809639372. Loss (tuning set): 0.2723104887831673.
[ Info: Epoch: 52. Loss (training set): 0.04958506011780714. Loss (tuning set): 0.2945059703967452.
[ Info: Epoch: 53. Loss (training set): 0.033109271502775116. Loss (tuning set): 0.27275691320304846.
[ Info: Epoch: 54. Loss (training set): 0.05475095067656043. Loss (tuning set): 0.35203498426463226.
[ Info: Epoch: 55. Loss (training set): 0.05034421199892204. Loss (tuning set): 0.36302627276042443.
[ Info: Epoch: 56. Loss (training set): 0.03884723644684022. Loss (tuning set): 0.3998314662540692.
[ Info: Epoch: 57. Loss (training set): 0.06725029649934344. Loss (tuning set): 0.45031953824823445.
[ Info: Epoch: 58. Loss (training set): 0.07203708909850853. Loss (tuning set): 0.6206480193239615.
[ Info: Epoch: 59. Loss (training set): 0.1356495999145773. Loss (tuning set): 0.466901872086484.
[ Info: Epoch: 60. Loss (training set): 0.07824593806011226. Loss (tuning set): 0.4021350241535187.
[ Info: Epoch: 61. Loss (training set): 0.06063118374072162. Loss (tuning set): 0.4766758951765245.
[ Info: Epoch: 62. Loss (training set): 0.20654034179549868. Loss (tuning set): 0.3008258554068906.
[ Info: Epoch: 63. Loss (training set): 0.08530493063018113. Loss (tuning set): 0.2865482103414061.
[ Info: Epoch: 64. Loss (training set): 0.08768410743975762. Loss (tuning set): 0.19261334340250577.
[ Info: Epoch: 65. Loss (training set): 0.05929985224968508. Loss (tuning set): 0.12096345009853057.
[ Info: Epoch: 66. Loss (training set): 0.0644995753989717. Loss (tuning set): 0.21606729733171035.
[ Info: Epoch: 67. Loss (training set): 0.0471360482158752. Loss (tuning set): 0.2014702285585906.
[ Info: Epoch: 68. Loss (training set): 0.04588385362357345. Loss (tuning set): 0.2489160279387634.
[ Info: Epoch: 69. Loss (training set): 0.04954830894513763. Loss (tuning set): 0.2871514968097082.
[ Info: Epoch: 70. Loss (training set): 0.041887550797793036. Loss (tuning set): 0.26095506872257307.
[ Info: Epoch: 71. Loss (training set): 0.04743705553782034. Loss (tuning set): 0.3658241496324535.
[ Info: Epoch: 72. Loss (training set): 0.04302902396135839. Loss (tuning set): 0.3824357956109999.
[ Info: Epoch: 73. Loss (training set): 0.037766275113912895. Loss (tuning set): 0.32099526350448926.
[ Info: Epoch: 74. Loss (training set): 0.04285165025253941. Loss (tuning set): 0.41319836813371486.
[ Info: Epoch: 75. Loss (training set): 0.05142480344932686. Loss (tuning set): 0.449204103586801.
[ Info: Epoch: 76. Loss (training set): 0.05403407511553105. Loss (tuning set): 0.41458663619989905.
[ Info: Epoch: 77. Loss (training set): 0.0855724534431005. Loss (tuning set): 0.5306511838160607.
[ Info: Epoch: 78. Loss (training set): 0.04000231804240114. Loss (tuning set): 0.3331066171147174.
[ Info: Epoch: 79. Loss (training set): 0.054473215918978385. Loss (tuning set): 0.4265056977283288.
[ Info: Epoch: 80. Loss (training set): 0.06829282807740127. Loss (tuning set): 0.6574229399526761.
[ Info: Epoch: 81. Loss (training set): 0.04013490568950338. Loss (tuning set): 0.30243770477768817.
[ Info: Epoch: 82. Loss (training set): 0.03879507831244022. Loss (tuning set): 0.36047266159715774.
[ Info: Epoch: 83. Loss (training set): 0.05895501745461501. Loss (tuning set): 0.5205984098016196.
[ Info: Epoch: 84. Loss (training set): 0.03395945027624656. Loss (tuning set): 0.28673582853849344.
[ Info: Epoch: 85. Loss (training set): 0.052946013056379825. Loss (tuning set): 0.37124973912906395.
[ Info: Epoch: 86. Loss (training set): 0.04464765930131704. Loss (tuning set): 0.40155852145605303.
[ Info: Epoch: 87. Loss (training set): 0.032813722762730285. Loss (tuning set): 0.397642197194943.
[ Info: Epoch: 88. Loss (training set): 0.04541915583515393. Loss (tuning set): 0.4079424033831182.
[ Info: Epoch: 89. Loss (training set): 0.06659943446870709. Loss (tuning set): 0.4248094646128965.
[ Info: Epoch: 90. Loss (training set): 0.03544449231670364. Loss (tuning set): 0.3293837195818114.
[ Info: Epoch: 91. Loss (training set): 0.06555945397241869. Loss (tuning set): 0.4928185662038248.
[ Info: Epoch: 92. Loss (training set): 0.05447099738214407. Loss (tuning set): 0.6152559939910451.
[ Info: Epoch: 93. Loss (training set): 0.05246291592208311. Loss (tuning set): 0.2829433985212683.
[ Info: Epoch: 94. Loss (training set): 0.07520840924335154. Loss (tuning set): 0.6210649713334534.
[ Info: Epoch: 95. Loss (training set): 0.045335039662820015. Loss (tuning set): 0.30507975415925276.
[ Info: Epoch: 96. Loss (training set): 0.06962012906151924. Loss (tuning set): 0.3677470642512651.
[ Info: Epoch: 97. Loss (training set): 0.12518005760744447. Loss (tuning set): 0.9758418701030696.
[ Info: Epoch: 98. Loss (training set): 0.06397504264327848. Loss (tuning set): 0.37258456128185713.
[ Info: Epoch: 99. Loss (training set): 0.08430030083540539. Loss (tuning set): 0.3447950596632009.
[ Info: Epoch: 100. Loss (training set): 0.06884075815972013. Loss (tuning set): 0.6059892306709485.
[ Info: Finished training Knet model.
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = plotsinglelabelbinaryclassifierhistogram(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2ClassificationKnetTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::Array{String,1}; num_bins::Int64, closed::Symbol, legend_pos::String, negative_style::String, positive_style::String) at plotsinglelabelbinaryclassifierhistograms.jl:67
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/plotting/plotsinglelabelbinaryclassifierhistograms.jl:67
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2ClassificationKnetTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:sensitivity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutableFeatureArrayTransposerTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.LIBSVMModel, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2ClassificationKnetTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:255
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:255
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:specificity,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:270
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:270
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutableFeatureArrayTransposerTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.LIBSVMModel, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2ClassificationKnetTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:255
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:255
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = singlelabelbinaryclassificationmetrics(::Array{PredictMDAPI.AbstractFittable,1}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Symbol,Tuple{Symbol},NamedTuple{(:maximize,),Tuple{Symbol}}}) at singlelabelbinaryclassificationmetrics.jl:270
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:270
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 08_compare_models.jl:383
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/08_compare_models.jl:383
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 08_compare_models.jl:406
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/08_compare_models.jl:406
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = top-level scope at 08_compare_models.jl:429
└ @ Core /tmp/jl_1eFUoz/generate_examples/PredictMDTEMP/examples/cpu_examples/breast_cancer_biopsy/src/08_compare_models.jl:429
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.GLMModel, PredictMD.ImmutableDataFrame2GLMSingleLabelBinaryClassTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:threshold,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.DecisionTreeModel, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:threshold,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutableFeatureArrayTransposerTransformer, PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.LIBSVMModel, PredictMD.MutableDataFrame2DecisionTreeTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:threshold,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = singlelabelbinaryclassificationmetrics_resultdict(::PredictMD.SimplePipeline{String,Array{Union{PredictMD.ImmutablePackageSingleLabelPredictProbaTransformer, PredictMD.ImmutablePackageSingleLabelPredictionTransformer, PredictMD.ImmutablePredictProbaSingleLabelInt2StringTransformer, PredictMD.ImmutablePredictionsSingleLabelInt2StringTransformer, PredictMD.KnetModel, PredictMD.MutableDataFrame2ClassificationKnetTransformer},1}}, ::DataFrame, ::DataFrame, ::Symbol, ::String; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:threshold,),Tuple{Float64}}}) at singlelabelbinaryclassificationmetrics.jl:140
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/metrics/singlelabelbinaryclassificationmetrics.jl:140
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.ImmutablePackageSingleLabelPredictionTransformer, ::Array{String,1}) at packagesinglelabelpred.jl:24
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/postprocessing/packagesinglelabelpred.jl:24
┌ Warning: `setindex!(df::DataFrame, v::AbstractVector, col_ind::ColumnIndex)` is deprecated, use `begin
│     df[!, col_ind] = v
│     df
│ end` instead.
│   caller = predict(::PredictMD.GLMModel, ::DataFrame, ::Int64, ::Float64) at glm.jl:123
└ @ PredictMD ~/.julia/packages/PredictMD/mOU6w/src/toplevel/always-loaded/linearmodel/glm.jl:123
Test Summary: | Pass  Total
PredictMD.jl  | 5654   5654
    Testing PredictMD tests passed 
