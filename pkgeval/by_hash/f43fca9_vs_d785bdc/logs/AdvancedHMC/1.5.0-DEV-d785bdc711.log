Julia Version 1.5.0-DEV.263
Commit d785bdc711 (2020-02-12 15:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed ArrayLayouts ─────── v0.1.5
  Installed ProgressMeter ────── v1.2.0
  Installed ArgCheck ─────────── v1.1.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Rmath ────────────── v0.6.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed MacroTools ───────── v0.5.4
  Installed DataAPI ──────────── v1.1.0
  Installed SpecialFunctions ─── v0.9.0
  Installed DataStructures ───── v0.17.9
  Installed Requires ─────────── v1.0.1
  Installed Missings ─────────── v0.4.3
  Installed StatsFuns ────────── v0.9.3
  Installed Parameters ───────── v0.12.0
  Installed StaticArrays ─────── v0.12.1
  Installed BinaryProvider ───── v0.5.8
  Installed LazyArrays ───────── v0.14.11
  Installed StatsBase ────────── v0.32.0
  Installed FillArrays ───────── v0.8.4
  Installed OrderedCollections ─ v1.1.0
  Installed InplaceOps ───────── v0.3.0
#=#=#                                                                         #############################################################             85.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   -=#=#   #   #                                                                 -=O#- #  #    #                                                               -=O=#  #   #   #                                                              -=O=-#  #    #   #                                                            -=O=- #   #   #     #                                                         -=O=-   #   #   #     #                                                       -=O=-    #    #    #    #                                                     #                                                                          1.7%####                                                                       6.8%##########                                                                14.1%#################                                                         23.8%########################                                                  34.5%###################################                                       48.8%##############################################                            64.1%#########################################################                 79.7%######################################################################    97.4%######################################################################## 100.0%
#=#=#                                                                         #########                                                                 13.1%##################################################################        92.1%######################################################################## 100.0%
#=#=#                                                                         ######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     ######################################################################## 100.0%
Status `/tmp/jl_xDahvL/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.14.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.161428723
│   t_steps = 0.007921726
└   t_step / t_steps = 20.37797356283214
Sampling  0%|                               |  ETA: 4:26:43[K
  iterations:                    1
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.3124327624777366
  log_density:                   -13.026391663284146
  hamiltonian_energy:            15.42829332422962
  hamiltonian_energy_error:      0.9954365818695354
  max_hamiltonian_energy_error:  3.871636510603885
  tree_depth:                    5
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  6%|██                             |  ETA: 0:00:31[K
  iterations:                    750
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.523912643890757
  hamiltonian_energy:            23.7009406370085
  hamiltonian_energy_error:      -0.3508687748259227
  max_hamiltonian_energy_error:  -0.3508687748259227
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.5410754317741647
  nom_step_size:                 0.5410754317741647
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8975621984684905, 0.9400 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  7%|██▎                            |  ETA: 0:00:28[K
  iterations:                    880
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9898650542898224
  log_density:                   -17.65235515262617
  hamiltonian_energy:            21.016159751173124
  hamiltonian_energy_error:      0.04415281495604617
  max_hamiltonian_energy_error:  -0.07078379837093962
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.3222102573694773
  nom_step_size:                 0.3222102573694773
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0216553524157759, 0.7561 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▋                            |  ETA: 0:00:25[K
  iterations:                    1022
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.9059442358388965
  log_density:                   -18.78878004000064
  hamiltonian_energy:            28.350077949555082
  hamiltonian_energy_error:      -0.26851160879063585
  max_hamiltonian_energy_error:  -0.7804411356447467
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8851547582881755
  nom_step_size:                 0.8851547582881755
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0216553524157759, 0.7561 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▎                           |  ETA: 0:00:20[K
  iterations:                    1260
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9937932113816602
  log_density:                   -15.194892729782632
  hamiltonian_energy:            19.251428076664087
  hamiltonian_energy_error:      -0.05421654047609081
  max_hamiltonian_energy_error:  -0.3586312090336179
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7718634319154215
  nom_step_size:                 0.7718634319154215
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0216553524157759, 0.7561 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:18[K
  iterations:                    1477
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5447706361827789
  log_density:                   -11.377677095166646
  hamiltonian_energy:            16.344604666912836
  hamiltonian_energy_error:      0.08594461156129185
  max_hamiltonian_energy_error:  1.1309912909649746
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.136264263336719
  nom_step_size:                 1.136264263336719
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0216553524157759, 0.7561 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▌                          |  ETA: 0:00:15[K
  iterations:                    1754
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.8992098672602352
  log_density:                   -14.383961481162821
  hamiltonian_energy:            16.111567931654395
  hamiltonian_energy_error:      0.29405827608128554
  max_hamiltonian_energy_error:  0.39810608015947047
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.8573620367936059
  nom_step_size:                 0.8573620367936059
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0216553524157759, 0.7561 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▏                         |  ETA: 0:00:14[K
  iterations:                    1991
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9803848928506775
  log_density:                   -17.41450638374225
  hamiltonian_energy:            20.836561109041924
  hamiltonian_energy_error:      0.09901043520764574
  max_hamiltonian_energy_error:  -0.48167230982536324
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.703757392081218
  nom_step_size:                 0.703757392081218
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 20%|██████▏                        |  ETA: 0:00:11[K
  iterations:                    2363
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9648320933032688
  log_density:                   -14.93172186879354
  hamiltonian_energy:            17.27688320552009
  hamiltonian_energy_error:      0.1209538267046888
  max_hamiltonian_energy_error:  -0.33136566631865705
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▉                        |  ETA: 0:00:10[K
  iterations:                    2679
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.979317546686091
  log_density:                   -13.844153664513698
  hamiltonian_energy:            22.258158215854596
  hamiltonian_energy_error:      -0.5957954394976852
  max_hamiltonian_energy_error:  -0.5957954394976852
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|███████▉                       |  ETA: 0:00:09[K
  iterations:                    3071
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.670421141968983
  hamiltonian_energy:            19.98063185260252
  hamiltonian_energy_error:      -0.46906292778407277
  max_hamiltonian_energy_error:  -0.4922826361572987
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:08[K
  iterations:                    3392
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5230335867329163
  log_density:                   -11.9315868423641
  hamiltonian_energy:            20.57260300933685
  hamiltonian_energy_error:      0.06155326904373837
  max_hamiltonian_energy_error:  1.1881301161222915
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▊                     |  ETA: 0:00:07[K
  iterations:                    3753
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9960422609168053
  log_density:                   -13.055221705647877
  hamiltonian_energy:            18.365323451999043
  hamiltonian_energy_error:      -0.35401430949823265
  max_hamiltonian_energy_error:  -0.41974023196002364
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▌                    |  ETA: 0:00:06[K
  iterations:                    4076
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.828958785562506
  hamiltonian_energy:            22.96611633850926
  hamiltonian_energy_error:      -0.3898356868883255
  max_hamiltonian_energy_error:  -0.5264822905376896
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▋                   |  ETA: 0:00:06[K
  iterations:                    4494
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5767936660929786
  log_density:                   -16.56201343620719
  hamiltonian_energy:            22.3478645323142
  hamiltonian_energy_error:      0.5628815285250788
  max_hamiltonian_energy_error:  1.0310968494091988
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▌                  |  ETA: 0:00:05[K
  iterations:                    4817
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9998582038127323
  log_density:                   -11.627716940734155
  hamiltonian_energy:            15.214708680752917
  hamiltonian_energy_error:      -0.24548781487206028
  max_hamiltonian_energy_error:  -0.24622090343124015
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5170
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7582718930022513
  log_density:                   -14.012441200452116
  hamiltonian_energy:            19.98120254790787
  hamiltonian_energy_error:      0.09316374293121399
  max_hamiltonian_energy_error:  0.5422708717907021
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:04[K
  iterations:                    5597
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9696760669340859
  log_density:                   -15.702989775080098
  hamiltonian_energy:            20.974490197522098
  hamiltonian_energy_error:      0.06136083956428351
  max_hamiltonian_energy_error:  0.08560399909520555
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▋               |  ETA: 0:00:04[K
  iterations:                    6061
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9154087232032031
  log_density:                   -14.403362904814024
  hamiltonian_energy:            18.44513738442048
  hamiltonian_energy_error:      0.06552651051770297
  max_hamiltonian_energy_error:  0.24258328166673948
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▋              |  ETA: 0:00:03[K
  iterations:                    6419
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8600098566011454
  log_density:                   -12.588072094318486
  hamiltonian_energy:            14.374140863280758
  hamiltonian_energy_error:      0.19842953243317396
  max_hamiltonian_energy_error:  0.3669357105551079
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6834
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6632547850283163
  log_density:                   -13.198152799663637
  hamiltonian_energy:            18.552243758377312
  hamiltonian_energy_error:      0.16589962303454442
  max_hamiltonian_energy_error:  0.6189731021150671
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7228
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.968679111938785
  log_density:                   -12.623767860455722
  hamiltonian_energy:            17.140128756723403
  hamiltonian_energy_error:      -0.1455152068642569
  max_hamiltonian_energy_error:  -0.15516001672643043
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▋           |  ETA: 0:00:02[K
  iterations:                    7611
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9063734100347
  log_density:                   -17.018000363852167
  hamiltonian_energy:            26.00964383880701
  hamiltonian_energy_error:      -0.15696974238376527
  max_hamiltonian_energy_error:  0.23252402546736306
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7950
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.641618593984962
  hamiltonian_energy:            16.47312991108894
  hamiltonian_energy_error:      -0.1536758927558779
  max_hamiltonian_energy_error:  -0.17502071905461136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 70%|█████████████████████▋         |  ETA: 0:00:02[K
  iterations:                    8363
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.904077564008578
  hamiltonian_energy:            15.579192915072113
  hamiltonian_energy_error:      -0.05274514042998213
  max_hamiltonian_energy_error:  -0.1874507889194259
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8714
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9706239199051397
  log_density:                   -13.960436055924344
  hamiltonian_energy:            20.75624435641209
  hamiltonian_energy_error:      -0.3507883747934528
  max_hamiltonian_energy_error:  -0.3507883747934528
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    9107
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8077360936850475
  log_density:                   -14.03700418076767
  hamiltonian_energy:            17.145519609081305
  hamiltonian_energy_error:      0.3142031455817431
  max_hamiltonian_energy_error:  0.403085928946723
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:01[K
  iterations:                    9499
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.090178957549389
  hamiltonian_energy:            18.485919122416245
  hamiltonian_energy_error:      -0.5101651920645942
  max_hamiltonian_energy_error:  -0.6820454725504206
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9879
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9413077825885401
  log_density:                   -16.204513228480096
  hamiltonian_energy:            19.58442932752359
  hamiltonian_energy_error:      0.21495834069771647
  max_hamiltonian_energy_error:  -0.2302248279324246
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10312
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9412475838409691
  log_density:                   -12.011556737837545
  hamiltonian_energy:            15.031510610529736
  hamiltonian_energy_error:      -0.010053316244430732
  max_hamiltonian_energy_error:  0.13132504010071777
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10621
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.24522279863843
  hamiltonian_energy:            18.16274666713966
  hamiltonian_energy_error:      -0.014155551908704211
  max_hamiltonian_energy_error:  -0.08550641487128274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:00[K
  iterations:                    11017
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9985789988076672
  log_density:                   -12.143618557513824
  hamiltonian_energy:            16.375030112980653
  hamiltonian_energy_error:      -0.4103671530315509
  max_hamiltonian_energy_error:  -0.5375856175539653
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▍ |  ETA: 0:00:00[K
  iterations:                    11362
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.947018257837479
  log_density:                   -13.40675234040631
  hamiltonian_energy:            16.513068034493735
  hamiltonian_energy_error:      0.03300828795562083
  max_hamiltonian_energy_error:  0.2119942878247798
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11755
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.975509184853007
  log_density:                   -15.09576957088196
  hamiltonian_energy:            18.71705479707513
  hamiltonian_energy_error:      0.06368930569355058
  max_hamiltonian_energy_error:  -0.18999885483169265
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.5682787480114491
  log_density:                   -14.860891021906935
  hamiltonian_energy:            24.895499684415498
  hamiltonian_energy_error:      0.09007120392908874
  max_hamiltonian_energy_error:  1.0834258774780636
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7423284470394127
  nom_step_size:                 0.7423284470394127
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0042563787368286, 1.0507 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.475063468 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0042563787368286, 1.0507 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.742), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0782828428770324
└   average_acceptance_rate = 0.8531364616880566
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.009976325 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [0.01656726592410915 -0.0028793080853898494 … 0.012559675997433467 -0.5753017329335934; 0.019772362050797274 0.015216326772928357 … 0.006413827557291213 0.5816882423224766; … ; -0.007702713097907031 -0.0075359813301627675 … 0.010406650644104261 0.6666694492284; -0.005688312097034362 0.01177837796141364 … 0.00849730081520814 -0.683600204348249] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:6
Matrix mode: Test Failed at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
  Expression: ≈(mean(samples), zeros(D, n_chains), atol = RNDATOL * n_chains)
   Evaluated: [-0.013109462542149695 -0.04472177766730887 … -0.023025589291453936 0.0006028771599908781; -0.005454505455039325 -0.00011177095864102426 … -1.3643179603971793 -0.007682089672892334; … ; 0.007496202989256745 0.0225870179712971 … 0.002109632171929589 0.0031425324986628605; 0.003926873660329605 0.004443003579052796 … -0.22105104719051846 -0.008325401910480344] ≈ [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0] (atol=1.25)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:48
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/sampler_mat.jl:6
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡆⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠘⡄⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢣⠀⠀⣀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠒⠒⢣⠀⠀⡠⠢⠤⡇⠀⠀⠘⠔⠊⠀⠉│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⢠⠃⠀⠀⠀⠱⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⢠⠃⠱⡀⠀⡔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⣀⡠⠇⠀⠀⠱⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢇⠀⠀⠀⠀⡰⠁⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⢆⠀⢀⣜⠔⠒⠤⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⡌⡲⠓⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary:                                            | Pass  Fail  Total
AdvancedHMC                                              | 2873     2   2875
  Online v.s. naive v.s. true var/cov estimation         |   12           12
  Preconditioner constructors                            |    2            2
  Stan HMC adaptors                                      |   12           12
  Adapted mass v.s. true variance                        |   20           20
  Initialisation adaptor by metric                       |    2            2
  rand momentum variables from metric via vector of RNGs |    2            2
  Passing random number generator                        |   12           12
  TreeSampler                                            |    5            5
  TerminationCriterion                                   |    2            2
  Termination                                            |   20           20
  BinaryTree                                             |    4            4
  ClassicNoUTurn                                         |    4            4
  PhasePoint                                             |    4            4
  Metric                                                 |   60           60
  step(::Leapfrog) against step(::Leapfrog)              |    2            2
  jitter                                                 |    4            4
  temper                                                 |    7            7
  Eq (2.11) from (Neal, 2011)                            |    4            4
  `gdemo`                                                |    1            1
  HMC and NUTS                                           | 2664         2664
  drop_warmup                                            |    4            4
  Matrix mode                                            |   26     2     28
ERROR: LoadError: Some tests did not pass: 2873 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdvancedHMC/Sn9Ek/test/runtests.jl:3
ERROR: Package AdvancedHMC errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:13
