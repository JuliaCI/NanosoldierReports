Julia Version 1.5.0-DEV.269
Commit 2538080e8c (2020-02-12 17:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ────── v1.2.0
  Installed Requires ─────────── v1.0.1
  Installed SortingAlgorithms ── v0.3.1
  Installed AdvancedHMC ──────── v0.2.20
  Installed SpecialFunctions ─── v0.9.0
  Installed StatsFuns ────────── v0.9.3
  Installed StaticArrays ─────── v0.12.1
  Installed BinaryProvider ───── v0.5.8
  Installed Rmath ────────────── v0.6.0
  Installed OrderedCollections ─ v1.1.0
  Installed ArrayLayouts ─────── v0.1.5
  Installed LazyArrays ───────── v0.14.11
  Installed Parameters ───────── v0.12.0
  Installed FillArrays ───────── v0.8.4
  Installed DataStructures ───── v0.17.9
  Installed StatsBase ────────── v0.32.0
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.1.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed InplaceOps ───────── v0.3.0
  Installed ArgCheck ─────────── v1.1.0
  Installed MacroTools ───────── v0.5.4
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   -=#=#   #   #                                                                 -=O#- #  #    #                                                               -=O=#  #   #   #                                                              -=O=-#  #    #   #                                                            -=O=- #   #   #     #                                                         -=O=-   #   #   #     #                                                       -=O=-    #    #    #    #                                                     -=O=-      #   #     #    #                                                   -=O=-        #   #     #     #                                                -=O=-         #     #    #     #                                              -=O=-           #     #    #     #                                            -=O=-              #    #     #     #                                         -=O=-                #    #     #     #                                       -=O=-                  #     #     #     #                                    -=O=-                    #     #     #     #                                  -=O=-                      #     #     #      #                               #############################################################             85.0%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     -#O#- #   #                                                                   -=#=#   #   #                                                                 ########                                                                  11.7%###############                                                           21.2%#######################################                                   54.8%################################################                          67.9%#################################################                         68.7%####################################################################      95.0%######################################################################## 100.0%
#=#=#                                                                         #######                                                                   10.8%######################################################################## 100.0%
#=#=#                                                                         ######################################                                    52.9%######################################################################## 100.0%
#=#=#                                                                         #                                                                          2.1%####                                                                       5.8%#######                                                                   10.1%###########                                                               16.5%#################                                                         23.8%#######################                                                   32.7%#################################                                         46.8%#############################################                             62.6%##########################################################                81.7%######################################################################## 100.0%
Status `/tmp/jl_pDMqVX/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.1.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.14.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.2.0
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.1.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.5
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.1
  [c7f686f2] MCMCChains v1.0.2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v1.0.2
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.28.1
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.3
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.0
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.9
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.8.3
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [efce3f68] WoodburyMatrices v0.5.0
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.156789276
│   t_steps = 0.007141596
└   t_step / t_steps = 21.954374904433127
Sampling  0%|                               |  ETA: 5:23:06[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               3.4404026936937603e-6
  log_density:                   -11.033249588415357
  hamiltonian_energy:            19.392658762313136
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  12.579922031309923
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:23[K
  iterations:                    1215
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.615197273628482
  hamiltonian_energy:            20.159727518945296
  hamiltonian_energy_error:      -0.059212089135876056
  max_hamiltonian_energy_error:  -0.4343781471576236
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.5488659204791462
  nom_step_size:                 0.5488659204791462
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9876532226525178, 0.7782 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|███▉                           |  ETA: 0:00:19[K
  iterations:                    1505
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9130459332630753
  log_density:                   -15.592448161695103
  hamiltonian_energy:            16.435649403294157
  hamiltonian_energy_error:      0.3606207615637729
  max_hamiltonian_energy_error:  -0.3753330045028669
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7281229463714222
  nom_step_size:                 0.7281229463714222
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9876532226525178, 0.7782 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▍                          |  ETA: 0:00:17[K
  iterations:                    1677
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8638267286853489
  log_density:                   -12.565609384838035
  hamiltonian_energy:            17.70769857837469
  hamiltonian_energy_error:      -0.08352594621953813
  max_hamiltonian_energy_error:  0.4950682700186846
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8279497226086081
  nom_step_size:                 0.8279497226086081
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9876532226525178, 0.7782 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:15[K
  iterations:                    1940
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.6795055179835818
  log_density:                   -11.390608078178111
  hamiltonian_energy:            15.767316586338026
  hamiltonian_energy_error:      0.1157727552926886
  max_hamiltonian_energy_error:  0.7229063441070274
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8303476984842834
  nom_step_size:                 0.8303476984842834
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.9876532226525178, 0.7782 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▍                         |  ETA: 0:00:14[K
  iterations:                    2091
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8077932890688372
  log_density:                   -14.490137090404907
  hamiltonian_energy:            24.84660281015381
  hamiltonian_energy_error:      -0.06280910466360368
  max_hamiltonian_energy_error:  0.537219686563251
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▍                        |  ETA: 0:00:12[K
  iterations:                    2462
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6870552070737027
  log_density:                   -16.29002790201002
  hamiltonian_energy:            18.129655102491874
  hamiltonian_energy_error:      0.49538383295486454
  max_hamiltonian_energy_error:  0.49538383295486454
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▏                       |  ETA: 0:00:11[K
  iterations:                    2758
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.928335120738262
  log_density:                   -12.859027847826171
  hamiltonian_energy:            16.64082285245692
  hamiltonian_energy_error:      0.056994947902822446
  max_hamiltonian_energy_error:  0.14804289370241008
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 26%|████████▏                      |  ETA: 0:00:09[K
  iterations:                    3146
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8496303080727302
  log_density:                   -12.129311076804793
  hamiltonian_energy:            16.375055680334583
  hamiltonian_energy_error:      0.038305797543703335
  max_hamiltonian_energy_error:  0.25417472847762923
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|████████▉                      |  ETA: 0:00:08[K
  iterations:                    3454
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7997968905828287
  log_density:                   -10.999098118431329
  hamiltonian_energy:            21.247593406278163
  hamiltonian_energy_error:      -0.2911002969072385
  max_hamiltonian_energy_error:  0.6343564868229805
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|█████████▉                     |  ETA: 0:00:08[K
  iterations:                    3832
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9834537565585862
  log_density:                   -16.160983232514624
  hamiltonian_energy:            22.111907220863394
  hamiltonian_energy_error:      -0.09090152685018182
  max_hamiltonian_energy_error:  -0.26359332515154676
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4146
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.096113379477526
  hamiltonian_energy:            17.77723686773609
  hamiltonian_energy_error:      -0.03705695716218216
  max_hamiltonian_energy_error:  -0.14556439301197344
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▊                   |  ETA: 0:00:06[K
  iterations:                    4526
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9087438713530258
  log_density:                   -19.325891124980977
  hamiltonian_energy:            24.434565031489846
  hamiltonian_energy_error:      0.22960943337746187
  max_hamiltonian_energy_error:  0.29798024745253926
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▌                  |  ETA: 0:00:06[K
  iterations:                    4833
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7758450636948717
  log_density:                   -11.310733856493442
  hamiltonian_energy:            18.62112664578906
  hamiltonian_energy_error:      -0.0013595311408174382
  max_hamiltonian_energy_error:  0.6267119379269488
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▍                 |  ETA: 0:00:05[K
  iterations:                    5186
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.831944765012472
  log_density:                   -12.559338839427102
  hamiltonian_energy:            20.55240508377947
  hamiltonian_energy_error:      -0.055762207185015455
  max_hamiltonian_energy_error:  0.5074895419695551
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 45%|██████████████▏                |  ETA: 0:00:05[K
  iterations:                    5450
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9685630580743952
  log_density:                   -15.982821984822536
  hamiltonian_energy:            17.460174819010305
  hamiltonian_energy_error:      0.18677131906286348
  max_hamiltonian_energy_error:  -0.32800114916818757
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████                |  ETA: 0:00:04[K
  iterations:                    5828
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8152209596191995
  log_density:                   -14.311051100578066
  hamiltonian_energy:            21.46498229979126
  hamiltonian_energy_error:      0.036741964630593316
  max_hamiltonian_energy_error:  0.3541947042810776
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▉               |  ETA: 0:00:04[K
  iterations:                    6140
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6704738694462226
  log_density:                   -13.498542579115755
  hamiltonian_energy:            20.29457128189666
  hamiltonian_energy_error:      0.2810126318770081
  max_hamiltonian_energy_error:  0.8250392412502023
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 54%|████████████████▉              |  ETA: 0:00:04[K
  iterations:                    6528
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7210491285461664
  log_density:                   -12.091490012264574
  hamiltonian_energy:            19.540147921279186
  hamiltonian_energy_error:      -0.05054811496269451
  max_hamiltonian_energy_error:  0.5881986863992061
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▋             |  ETA: 0:00:03[K
  iterations:                    6834
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9012478774392522
  log_density:                   -13.992887269282539
  hamiltonian_energy:            17.219648405853768
  hamiltonian_energy_error:      0.16970030019037807
  max_hamiltonian_energy_error:  0.23492249128922182
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▋            |  ETA: 0:00:03[K
  iterations:                    7213
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.967115557052298
  log_density:                   -13.582727083688495
  hamiltonian_energy:            17.410514301352464
  hamiltonian_energy_error:      -0.002435856185169172
  max_hamiltonian_energy_error:  -0.15338171249954513
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▍           |  ETA: 0:00:03[K
  iterations:                    7522
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7133973791352436
  log_density:                   -16.267336997491476
  hamiltonian_energy:            21.804313944460553
  hamiltonian_energy_error:      0.3388350919122729
  max_hamiltonian_energy_error:  0.7638118187148137
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▍          |  ETA: 0:00:02[K
  iterations:                    7901
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9326346640811943
  log_density:                   -12.536764423756384
  hamiltonian_energy:            15.885324410393467
  hamiltonian_energy_error:      0.010587930382643052
  max_hamiltonian_energy_error:  0.1329039859837735
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 68%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8202
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8818903190667592
  log_density:                   -13.186643436342957
  hamiltonian_energy:            17.269179132430022
  hamiltonian_energy_error:      0.1039583905801571
  max_hamiltonian_energy_error:  0.24996463289456017
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|██████████████████████▏        |  ETA: 0:00:02[K
  iterations:                    8560
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8427345713429306
  log_density:                   -13.610273288230378
  hamiltonian_energy:            21.15060050755438
  hamiltonian_energy_error:      -0.006062523021320487
  max_hamiltonian_energy_error:  0.3866016488749189
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8851
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9416988491051629
  log_density:                   -15.984633988144259
  hamiltonian_energy:            18.229470751710036
  hamiltonian_energy_error:      0.2042375554328082
  max_hamiltonian_energy_error:  -0.21752417126158008
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 77%|███████████████████████▉       |  ETA: 0:00:02[K
  iterations:                    9237
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9585247494560495
  log_density:                   -13.667179615331793
  hamiltonian_energy:            19.824416110466963
  hamiltonian_energy_error:      -0.10696702062976371
  max_hamiltonian_energy_error:  0.12956160784125714
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▋      |  ETA: 0:00:01[K
  iterations:                    9548
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -17.477361536108248
  hamiltonian_energy:            20.879683010573665
  hamiltonian_energy_error:      -0.13684636067246814
  max_hamiltonian_energy_error:  -0.7713695577639399
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9936
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9144505681638844
  log_density:                   -13.118240906730637
  hamiltonian_energy:            17.852694045772232
  hamiltonian_energy_error:      0.014544259183772112
  max_hamiltonian_energy_error:  0.2120081710045092
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 85%|██████████████████████████▌    |  ETA: 0:00:01[K
  iterations:                    10246
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9939933966698193
  log_density:                   -9.811324953387128
  hamiltonian_energy:            15.662243393997777
  hamiltonian_energy_error:      -0.5385207857108902
  max_hamiltonian_energy_error:  -0.5385207857108902
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10626
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9677934900790918
  log_density:                   -12.035073631037625
  hamiltonian_energy:            23.56939800952837
  hamiltonian_energy_error:      -0.8140700331497115
  max_hamiltonian_energy_error:  -0.8140700331497115
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:01[K
  iterations:                    10930
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.4523033842894266
  log_density:                   -12.235432892611918
  hamiltonian_energy:            26.616697791144617
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  1.3019119456522326
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▎ |  ETA: 0:00:00[K
  iterations:                    11309
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9375171445247296
  log_density:                   -12.697505820398336
  hamiltonian_energy:            14.790409413077631
  hamiltonian_energy_error:      0.11824411079332364
  max_hamiltonian_energy_error:  0.11824411079332364
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 97%|██████████████████████████████ |  ETA: 0:00:00[K
  iterations:                    11616
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.993921445669266
  log_density:                   -14.966406014072978
  hamiltonian_energy:            16.695371615509956
  hamiltonian_energy_error:      0.04348165360819678
  max_hamiltonian_energy_error:  -0.3560961422331239
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████|  ETA: 0:00:00[K
  iterations:                    11994
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.505478436538736
  hamiltonian_energy:            21.821211696504673
  hamiltonian_energy_error:      -0.8069983138072736
  max_hamiltonian_energy_error:  -0.8069983138072736
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9874951173242857
  log_density:                   -14.560232428292624
  hamiltonian_energy:            17.602613164994715
  hamiltonian_energy_error:      0.05144095311979413
  max_hamiltonian_energy_error:  -0.1304772762687847
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6334524309998099
  nom_step_size:                 0.6334524309998099
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9741568283550298, 1.0309 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.977622064 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9741568283550298, 1.0309 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.633), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0519763033389693
└   average_acceptance_rate = 0.8888524116432717
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.038454945 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⢀⡄⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢇⠀⠀⠀⠀⠀⢠⠊⠱⡀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠸⡀⠀⢠⠒⠒⠃⠀⠀⠱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⢇⢀⠇⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠈⠑⠎⠀⠀⢰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠸⡎⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⡇⠘⡄⠀⠀⣀⠔⠒⠢⠤⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⡸⠀⠀⠱⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⢀⠇⠀⠀⠀⢀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⣣⠀⠀⢀⡔⠁⣀⠔⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠱⣣⢠⠮⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
