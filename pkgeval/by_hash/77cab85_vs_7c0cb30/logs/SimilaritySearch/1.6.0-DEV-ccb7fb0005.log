Julia Version 1.6.0-DEV.608
Commit ccb7fb0005 (2020-08-07 12:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.20
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_paOcn8/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_paOcn8/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(21, 0.0014414787f0), Item(49, 0.013895869f0), Item(43, 0.02562797f0), Item(6, 0.08033216f0)])
Vsorted = Item[Item(21, 0.0014414787f0), Item(49, 0.013895869f0), Item(43, 0.02562797f0), Item(6, 0.08033216f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004346736272176107, 0.004567774136861166, 301.0, 49.14277148246765))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004526027043660482, 0.004006401697794596, 301.0, 72.40307211875916))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004104995727539062, 0.004241236050923665, 301.0, 39.26213002204895))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004358760515848796, 0.003988401095072428, 301.0, 8.708281375817023))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0038439194361368817, 0.005006337165832519, 301.0, 44.20673166960478))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017745494842529296, 0.00014599959055582682, 301.0, 180.02072623372078))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.14166259765625e-5, 0.011562530199686687, 300.0, 30.308075306587853)
p = PerformanceResult(1.0, 1.0, 1.0, 6.431738535563151e-5, 3.236929575602214e-5, 300.0, 30.308075306587853)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0035249948501586913, 0.003503266970316569, 300.0, 2.2711265260564915)
p = PerformanceResult(1.0, 1.0, 1.0, 5.320972866482205e-5, 2.2602081298828124e-5, 300.0, 2.2711265260564915)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.14166259765625e-5, 0.011562530199686687, 300.0, 30.308075306587853), PerformanceResult(1.0, 1.0, 1.0, 6.431738535563151e-5, 3.236929575602214e-5, 300.0, 30.308075306587853), PerformanceResult(1.0, 1.0, 1.0, 0.0035249948501586913, 0.003503266970316569, 300.0, 2.2711265260564915), PerformanceResult(1.0, 1.0, 1.0, 5.320972866482205e-5, 2.2602081298828124e-5, 300.0, 2.2711265260564915))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 117.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009445007642110188, 0.00467533270517985, 346.8333333333333, 28657.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009001541137695312, 0.0040491024653116865, 303.9, 6982.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8363863627115886e-5, 1.2270609537760417e-5, 100.1, 49.177156791090965))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.470811208089193e-5, 1.2238820393880209e-5, 89.8, 72.45100128650665))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.69015630086263e-5, 1.5862782796223958e-5, 93.73333333333333, 39.26914024353027))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.98940658569336e-5, 0.00015783309936523438, 100.23333333333333, 44.230642043054104))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.823333333333333, 0.823333333333333, 0.823333333333333, 5.2142143249511716e-5, 0.00012656847635904948, 73.83333333333333, 188.985400557518))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-07T23:06:36.654
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.922, 0.9179999999999999, 0.9198362573099415, 2.4247169494628907e-5, 2.4290084838867186e-5, 151.81, 49.57065721170511))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4361610412597658e-5, 1.9528865814208984e-5, 155.17, 0.0))
*** advance 1 from 1000; 2020-08-07T23:06:37.557
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9021111111111112, 0.898, 0.8996184210526316, 2.5739669799804686e-5, 2.7790069580078126e-5, 152.28, 75.46181478723884))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6285648345947266e-5, 2.3229122161865236e-5, 155.81, 0.0))
*** advance 1 from 1000; 2020-08-07T23:06:38.368
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9810000000000001, 0.9810000000000001, 0.9810000000000001, 3.3688545227050784e-5, 4.607915878295899e-5, 169.98, 39.6597190592438))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9609203338623046e-5, 3.625869750976563e-5, 175.17, 0.0))
*** advance 1 from 1000; 2020-08-07T23:06:39.066
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8970000000000004, 0.8940000000000002, 0.8953625730994155, 0.00010001659393310547, 0.0004969215393066406, 152.47, 45.524286057800055))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.987115859985351e-5, 0.0005414199829101563, 155.94, 0.0))
*** advance 1 from 1000; 2020-08-07T23:06:39.620
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.97, 0.97, 0.97, 9.592533111572265e-5, 0.00039885044097900393, 167.79, 192.03096237732098))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.604692459106446e-5, 0.0004276585578918457, 172.81, 0.0))
*** advance 1 from 1000; 2020-08-07T23:06:40.648
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.922, 0.9179999999999999, 0.9198362573099415, 3.3431053161621093e-5, 7.432222366333008e-5, 151.81, 49.58063725498505))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.30352783203125e-5, 7.121086120605469e-5, 155.17, 0.0123441583418753))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:42.677
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7499999999999997, 0.7499999999999997, 0.7499999999999997, 0.0015388131141662598, 8.039951324462891e-5, 202.41, 196.7666691094637))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:43.714
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7499999999999999, 0.7499999999999999, 0.7499999999999999, 0.0016448569297790527, 7.884025573730469e-5, 204.47, 110.82539901137352))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:44.587
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6350000000000001, 0.6350000000000001, NaN, 0.0015241122245788575, 8.018970489501953e-5, 291.99, 0.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:45.469
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9650000000000002, 0.9650000000000002, 0.9650000000000002, 0.0014984774589538574, 1.848936080932617e-5, 218.22, 608.0000206232071))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:46.470
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5819999999999997, 0.5819999999999997, 0.5819999999999997, 0.0016559672355651856, 0.0004197192192077637, 261.66, 2348.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:47.442
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37799999999999995, 0.37799999999999995, NaN, 0.0018333125114440919, 0.0005139899253845215, 248.18, 3682.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-07T23:06:48.564
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5860000000000001, 0.5860000000000001, 0.5860000000000001, 0.0018085360527038575, 2.9060840606689453e-5, 252.12, 2375.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.074626865671642, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.921875,"f1":0.95570054945055,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.375,"distances_sum":664.7338740453124}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.921875,"f1":0.95570054945055,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.375,"distances_sum":664.7338740453124}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.921875,"f1":0.95570054945055,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.375,"distances_sum":664.7338740453124}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.074626865671642,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.921875,"f1":0.95570054945055,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.375,"distances_sum":664.7338740453124}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8932291666666655, conf: {"restarts":3}, perf: {"precision":0.8932291666666655,"recall":0.8932291666666655,"f1":0.8932291666666655,"seconds":1.7737969756126404e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":37.5078125,"distances_sum":295.71687092259526}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.053475935828877, conf: {"restarts":8}, perf: {"precision":0.9184027777777769,"recall":0.9184027777777769,"f1":0.9184027777777769,"seconds":2.337247133255005e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":48.2109375,"distances_sum":294.7725990153849}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.053475935828877,"state":{"restarts":8},"perf":{"precision":0.9184027777777769,"recall":0.9184027777777769,"f1":0.9184027777777769,"seconds":2.337247133255005e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":48.2109375,"distances_sum":294.7725990153849}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.2134497816593885, conf: {"restarts":6}, perf: {"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.1502375602722168e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":44.7265625,"distances_sum":296.0452663488686}, best_list's length: 11, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.2134497816593885,"state":{"restarts":6},"perf":{"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.1502375602722168e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":44.7265625,"distances_sum":296.0452663488686}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.2134497816593885,"state":{"restarts":6},"perf":{"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.1502375602722168e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":44.7265625,"distances_sum":296.0452663488686}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.2134497816593885,"state":{"restarts":6},"perf":{"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.1502375602722168e-5,"exhaustive_search_seconds":7.405877113342285e-6,"evaluations":44.7265625,"distances_sum":296.0452663488686}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8776041666666655, conf: {"restarts":16}, perf: {"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.316788494586945e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":163.8515625,"distances_sum":124.80850313976407}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111098, conf: {"restarts":14}, perf: {"precision":0.8689236111111098,"recall":0.8689236111111098,"f1":0.8689236111111098,"seconds":5.5635347962379456e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":151.6796875,"distances_sum":125.4197241961956}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999992, conf: {"restarts":15}, perf: {"precision":0.8671874999999992,"recall":0.8671874999999992,"f1":0.8671874999999992,"seconds":6.18714839220047e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":162.296875,"distances_sum":125.69052429124713}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8776041666666655,"state":{"restarts":16},"perf":{"precision":0.8776041666666655,"recall":0.8776041666666655,"f1":0.8776041666666655,"seconds":6.316788494586945e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":163.8515625,"distances_sum":124.80850313976407}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777765, conf: {"restarts":19}, perf: {"precision":0.8793402777777765,"recall":0.8793402777777765,"f1":0.8793402777777765,"seconds":8.138641715049744e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":184.7890625,"distances_sum":124.73928651586175}, best_list's length: 9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8802083333333323, conf: {"restarts":11}, perf: {"precision":0.8802083333333323,"recall":0.8802083333333323,"f1":0.8802083333333323,"seconds":5.8611854910850525e-5,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":133.4921875,"distances_sum":124.76957242935896}, best_list's length: 10, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8819444444444432, conf: {"restarts":25}, perf: {"precision":0.8819444444444432,"recall":0.8819444444444432,"f1":0.8819444444444432,"seconds":0.00019390694797039032,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":213.078125,"distances_sum":124.74685913696885}, best_list's length: 11, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8819444444444432,"state":{"restarts":25},"perf":{"precision":0.8819444444444432,"recall":0.8819444444444432,"f1":0.8819444444444432,"seconds":0.00019390694797039032,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":213.078125,"distances_sum":124.74685913696885}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8819444444444432,"state":{"restarts":25},"perf":{"precision":0.8819444444444432,"recall":0.8819444444444432,"f1":0.8819444444444432,"seconds":0.00019390694797039032,"exhaustive_search_seconds":2.6592984795570374e-5,"evaluations":213.078125,"distances_sum":124.74685913696885}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777768, conf: {"restarts":26}, perf: {"precision":0.8637152777777768,"recall":0.8637152777777768,"f1":0.8637152777777768,"seconds":0.00017237477004528046,"exhaustive_search_seconds":0.00042446888983249664,"evaluations":350.9453125,"distances_sum":56.91542314970866}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8637152777777768,"state":{"restarts":26},"perf":{"precision":0.8637152777777768,"recall":0.8637152777777768,"f1":0.8637152777777768,"seconds":0.00017237477004528046,"exhaustive_search_seconds":0.00042446888983249664,"evaluations":350.9453125,"distances_sum":56.91542314970866}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8637152777777768,"state":{"restarts":26},"perf":{"precision":0.8637152777777768,"recall":0.8637152777777768,"f1":0.8637152777777768,"seconds":0.00017237477004528046,"exhaustive_search_seconds":0.00042446888983249664,"evaluations":350.9453125,"distances_sum":56.91542314970866}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(26), SatNeighborhood(32), 2020-08-07T23:06:56.787
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2038, 0.04314611f0), Item(940, 0.04704746f0), Item(5436, 0.06283134f0), Item(8899, 0.06359654f0), Item(368, 0.06812293f0), Item(4704, 0.0726586f0), Item(3157, 0.07909911f0), Item(6176, 0.083276175f0), Item(8885, 0.08347584f0), Item(7973, 0.08675218f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.088846880907372, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9443223443223453,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.265625,"distances_sum":649.6860339194536}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9443223443223453,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.265625,"distances_sum":649.6860339194536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9443223443223453,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.265625,"distances_sum":649.6860339194536}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.088846880907372,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9443223443223453,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.8123537302017212e-6,"evaluations":8.265625,"distances_sum":649.6860339194536}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.8650237395432963, conf: {"bsize":4}, perf: {"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":2.037547528743744e-5,"exhaustive_search_seconds":7.716938853263855e-6,"evaluations":34.5546875,"distances_sum":286.194279871881}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8650237395432963,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":2.037547528743744e-5,"exhaustive_search_seconds":7.716938853263855e-6,"evaluations":34.5546875,"distances_sum":286.194279871881}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.8650237395432963,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":2.037547528743744e-5,"exhaustive_search_seconds":7.716938853263855e-6,"evaluations":34.5546875,"distances_sum":286.194279871881}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.8650237395432963,"state":{"bsize":4},"perf":{"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":2.037547528743744e-5,"exhaustive_search_seconds":7.716938853263855e-6,"evaluations":34.5546875,"distances_sum":286.194279871881}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":16.960059910134795,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":3.425218164920807e-5,"exhaustive_search_seconds":2.8772279620170593e-5,"evaluations":62.59375,"distances_sum":121.79987179674208}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":16.960059910134795,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":3.425218164920807e-5,"exhaustive_search_seconds":2.8772279620170593e-5,"evaluations":62.59375,"distances_sum":121.79987179674208}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.13700893863141, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.031671702861786e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":104.0078125,"distances_sum":54.52856813929975}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.13700893863141,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":7.031671702861786e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":104.0078125,"distances_sum":54.52856813929975}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.35351653469958, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.724148988723755e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":100.640625,"distances_sum":54.53436722792685}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.35351653469958,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.724148988723755e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":100.640625,"distances_sum":54.53436722792685}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.35351653469958,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.724148988723755e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":100.640625,"distances_sum":54.53436722792685}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.35351653469958,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.724148988723755e-5,"exhaustive_search_seconds":0.0003833826631307602,"evaluations":100.640625,"distances_sum":54.53436722792685}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-08-07T23:07:01.239
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1373, 0.017598592f0), Item(7900, 0.019575581f0), Item(4338, 0.019910894f0), Item(1710, 0.027848942f0), Item(1284, 0.03647222f0), Item(3326, 0.045134075f0), Item(2718, 0.049434096f0), Item(7000, 0.050063405f0), Item(9109, 0.05156251f0), Item(5885, 0.052653354f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
