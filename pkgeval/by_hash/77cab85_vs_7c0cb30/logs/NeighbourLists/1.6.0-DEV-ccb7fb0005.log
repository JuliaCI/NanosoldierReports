Julia Version 1.6.0-DEV.608
Commit ccb7fb0005 (2020-08-07 12:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed NeighbourLists ─ v0.5.0
  Installed StaticArrays ─── v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [2fcf5ba9] + NeighbourLists v0.5.0
  [90137ffa] + StaticArrays v0.12.4
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing NeighbourLists
Status `/tmp/jl_eBBYOy/Project.toml`
  [b4f34e82] Distances v0.9.0
  [f6369f11] ForwardDiff v0.10.12
  [b8a86587] NearestNeighbors v0.4.6
  [2fcf5ba9] NeighbourLists v0.5.0
  [90137ffa] StaticArrays v0.12.4
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_eBBYOy/Manifest.toml`
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [f6369f11] ForwardDiff v0.10.12
  [1914dd2f] MacroTools v0.5.5
  [77ba4419] NaNMath v0.3.4
  [b8a86587] NearestNeighbors v0.4.6
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
# threads = 2
Checking that `fnbody` is correct...
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody_d(r::SVector{3,Float64}, r0::Float64, rcut::Float64) at test_aux.jl:32
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:32
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody_d(r::SVector{3,Float64}, r0::Float64, rcut::Float64) at test_aux.jl:34
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:34
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = fnbody(r::SVector{3,ForwardDiff.Dual{ForwardDiff.Tag{var"#7#8"{Float64,Float64},Float64},Float64,3}}, r0::Float64, rcut::Float64) at test_aux.jl:26
└ @ Main ~/.julia/packages/NeighbourLists/mW4WV/test/test_aux.jl:26
[ Info: Testing PairList Correctness: 
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64,Int32}, ns_vec::SVector{3,Int32}, bins::SMatrix{3,3,Float64,9}, xyz_range::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{SVector{3,Int32}}) at cell_list.jl:235
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:235
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(i::Int64, clist::NeighbourLists.CellList{Float64,Int32}, ns_vec::SVector{3,Int32}, bins::SMatrix{3,3,Float64,9}, xyz_range::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, first::Vector{Int32}, secnd::Vector{Int32}, shift::Vector{SVector{3,Int32}}) at cell_list.jl:266
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:266
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed
typeof(nlist) = PairList{Float64,Int32}
Test Passed
sorted: Test Passed
neigs: Test Passed

Test Summary:  | Pass  Total
NeighbourLists |   23     23
    Testing NeighbourLists tests passed 
