Julia Version 1.6.0-DEV.608
Commit ccb7fb0005 (2020-08-07 12:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.30
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed DocStringExtensions ─ v0.8.2
  Installed OffsetArrays ──────── v1.1.2
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_TFmshq/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_TFmshq/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [5.0173198928860074e-12, 9.476641693595411e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5505374761914936e-11, 4.053180013841029e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-7.734923812563466e-13, 5.049516360600137e-12, -5.428990590417015e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.216027278871934e-12, -2.542077659484221e-12, 2.010369648530741e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-7.545075675352564e-13, 1.4366285938649526e-13, -1.47137857453572e-12, 2.9909408283401717e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.5282976540429445e-10, -1.458870801940293e-10, 6.860445544987215e-10, -3.0330582490023517e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [4.92783591710122e-12, 3.2613689526783674e-11, 9.339862216961592e-12, 7.04252212102574e-11, 2.249311847890567e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5301872536308565e-11, -1.4297452111122766e-11, -7.102740617881409e-11, -2.982025737452432e-11, 1.4591661212648432e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.5087264770841102e-11, 1.0179412868183135e-11, 1.8497869902489583e-11, 2.8489433034906142e-11, 2.089195483279127e-11, 3.782463231516431e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.224620818784388e-11, -9.038580994769063e-11, 2.3089818945720708e-10, 1.3957102140693678e-10, -1.6621815035477994e-10, 4.756806060157714e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3873457938018419e-11, 2.7448132655649715e-10, 2.581979074989249e-11, -2.0018320334713735e-11, 5.565918836936135e-10, 4.149525167918e-11, -4.823919041996305e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0486966850464796e-10, -2.5641710976742615e-12, -9.13316089423688e-11, -2.2431678736722915e-10, -2.1284085605088876e-12, -1.8683332658753216e-10, -8.122391648157645e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [7.107137101058925e-11, -5.6026072670078975e-11, 1.7372991933939375e-11, -4.9901860421641686e-11, 1.4384493596253378e-10, -1.0636524994112051e-10, 3.413513915972999e-11, -1.0091583124705039e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.794564910705958e-11, 7.432632287418528e-11, -7.254874478945794e-11, 7.769607179852756e-11, -1.284623518671424e-10, 1.4323786601266875e-10, -1.4935042091934747e-10, 1.5688650378820057e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6001423236721166e-13, -2.6078250670025227e-11, -3.8544722968936185e-11, 4.684319598879938e-11, -1.0099698855015049e-11, -5.262512647874473e-11, -8.167144738280285e-11, 8.752754077079317e-11, 2.5346391652192324e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.875367025178548e-12, 2.3210322552813523e-11, 2.1174173525650986e-11, -1.1363798790853252e-11, -1.5237033856863036e-11, 4.920530649599186e-11, 4.090239258403017e-11, -2.35889086042107e-11, -1.074140776324839e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [6.793321460918378e-11, 8.12456768528591e-11, 1.974842511742736e-11, 9.567013847799899e-11, -4.297107114581422e-11, 1.2817702454981372e-10, 1.675333205497509e-10, 3.9404035589996056e-11, 1.99793293020889e-10, -8.178102639533336e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2922007908144906e-10, 1.2472378685401964e-10, 6.289213594357079e-11, -9.840905867974925e-11, -1.9802826045633992e-10, -2.5215918242338375e-10, 2.4211588289801966e-10, 1.3107692709013463e-10, -2.0280532808669705e-10, -3.790753266841307e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [3.9102054927298013e-11, 1.183781961344721e-10, 2.109845631537155e-11, 1.7562840071150276e-11, 3.876832188609569e-11, 6.615996639425248e-11, 2.3025359396910972e-10, 5.42619282839496e-11, 3.412115034961971e-11, 6.736677882202002e-11, 5.5853099922842375e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.6552093856935244e-11, -3.6548208903752766e-11, 5.880540498992559e-11, 1.36300526420996e-10, 7.899014775603064e-11, 6.779776740017951e-11, -7.623068842832481e-11, 1.1637757424409756e-10, 2.728177683763988e-10, 1.5012213694376442e-10, 4.056310842770472e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [5.1535220535470216e-11, -1.370226154762122e-11, -5.036882022579903e-11, -7.105205312996077e-12, 1.3919754238145288e-11, -6.637457250491252e-11, 1.0752310153350209e-10, -2.47434295275184e-11, -9.897915820289427e-11, -1.2667977777880424e-11, 3.147837546180199e-11, -1.2825629447377196e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.465605414807669e-11, -9.583445148564351e-12, -5.65691937737256e-12, -2.7762236953776664e-12, 4.042766121870045e-12, -7.899014775603064e-12, 2.649191976900056e-11, -1.7129742069244003e-11, -9.636735853746359e-12, -4.532152431124814e-12, 8.382183835919932e-12, -1.2704948204600441e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6711521055867706e-11, -1.3076761895547406e-11, 3.4421354655478353e-12, 5.1693538338781764e-11, 7.305733795703873e-11, -4.4563019940824233e-11, -5.302402961149255e-11, -2.296351997443935e-11, 7.640998944680177e-12, 1.0581424625399904e-10, 1.4940826353893044e-10, -8.730238754139918e-11, 2.176836488843037e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.603784351635113e-12, -2.8938296203762093e-11, 1.216355904887223e-10, -2.6221247395596947e-11, 6.583555922645701e-11, -2.3877122501403392e-11, 1.9201529255497007e-11, -5.6552540428356224e-11, 2.4629809303178263e-10, -5.7385318719127554e-11, 1.2893752732168196e-10, -4.496525374264593e-11, -4.80471218367029e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.2941492322227077e-10, 3.0555180607905186e-10, 2.344040517243684e-10, -1.7346180047894677e-10, -1.2773004876009963e-11, 2.8282931552325863e-10, -1.8553603098325766e-11, 2.537605681141031e-10, 6.214466719001166e-10, 4.742581882766217e-10, -3.6843805784059214e-10, -1.6936674285261688e-11, 5.742126774066492e-10, -3.653000124614891e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0500601216610903e-11, -3.3533842369593003e-11, 3.211253485346788e-11, 1.566347052062156e-11, -1.337968624781638e-10, 8.739786672151695e-11, 7.209077779180006e-11, -3.8889336195779833e-11, -6.774492078420735e-11, 6.27422558352464e-11, 5.492872823253947e-11, -2.705978774386608e-10, 1.67133196171676e-10, 1.3577139412745964e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-5.043832018714056e-11, 1.7152723685853744e-11, 3.301248163722903e-11, -5.377298606390468e-11, 8.65085780787922e-13, 4.0103476095509905e-12, 4.859668223389235e-12, -1.0324674448725091e-10, 3.705147300081535e-11, 6.323741530422922e-11, -1.1703604752000274e-10, 7.809530799818276e-12, 7.037259663889017e-12, 9.098055642198233e-12, -7.238765142858483e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.412070543300615e-11, -8.145306651385908e-11, 6.055400625371021e-11, -7.022249448596085e-11, -7.665201806617006e-12, 3.10269587799894e-11, 1.3593348668905492e-11, -4.1906256242896234e-11, -1.5476286918669757e-10, 1.2405676486082484e-10, -1.2639045365858692e-10, -1.8426038472796336e-11, 5.599765096064857e-11, 2.8009816688268074e-11, -2.2711832414756827e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [8.811840146449867e-12, -5.7499671690663945e-11, -1.9873724887986555e-10, 1.6013457226904393e-10, 2.4365998108066833e-10, 5.061795427252491e-11, -6.245515216107833e-11, -2.623326000872339e-10, 1.2527756609870266e-11, -1.1955658685280923e-10, -3.78344244822415e-10, 3.280489213608462e-10, 4.759790339647907e-10, 1.2100032087403179e-10, -1.3220646799538827e-10, -5.341214137644101e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.4880986160269458e-11, -7.0633499049677084e-12, -1.069599964154122e-11, -4.097766570509975e-11, -3.6947112036500585e-12, -9.45010736330687e-12, -1.58656421334058e-11, 5.866862551329177e-12, 4.664957309330475e-11, -1.4059531316945595e-11, -2.091404827098131e-11, -8.455147693098297e-11, -8.65574278918757e-12, -2.066247173360125e-11, -3.3127389720277733e-11, 1.117128611838325e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-6.385192374835924e-11, 4.7303272410204045e-11, 3.491207323236267e-11, -3.46856987576416e-11, -5.405664804669641e-11, 5.309974682177199e-12, -5.3995918847249413e-11, -8.402722961875497e-11, -1.2719514330683523e-10, 9.691980551451707e-11, 7.166933713165236e-11, -6.456934986687202e-11, -1.0919909421147622e-10, 9.877210160880168e-12, -1.0777567727160431e-10, -1.677853411763408e-10, 7.620570841027074e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.785128014996644e-11, 7.825073922163028e-12, -3.194311481991008e-11, -1.250171077771256e-10, 1.0190315258284954e-10, 3.406031012787025e-11, 4.3514081227158385e-12, 2.365463380726851e-11, -1.3250600616743213e-10, 1.9270807172233617e-11, -6.177947042829146e-11, -2.534137344412102e-10, 2.1647239556443765e-10, 6.513212191805451e-11, 8.348877145181177e-12, 5.499800614927608e-11, -8.367750936599805e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-3.499833756137605e-11, -4.1654346638608786e-11, -2.0167423286920894e-11, -3.6210590081964256e-11, 3.36721761584613e-11, -2.1315282872080843e-11, 5.7800209063429975e-11, -1.5309753464975984e-11, 2.4231727735468667e-11, -7.695455384038041e-11, -8.380030003252159e-11, -4.7276738079915503e-11, -8.137290841148115e-11, 6.000755448098971e-11, -4.0857317529230386e-11, 1.0603962152799795e-10, -2.613265159823186e-11, 6.213518588538136e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.663180704269962e-11, 1.1143019840176294e-10, 2.5297541839108817e-12, 7.026157433642766e-11, -2.4365987005836587e-10, -3.496902767352594e-11, -5.662681434870365e-11, -3.488287436681503e-11, -4.2477021899856027e-11, 3.153188821158892e-11, 2.47754261550881e-10, 5.808242775628969e-12, 1.3235634810371266e-10, -4.781076645699045e-10, -6.088263226899926e-11, -1.186426512589378e-10, -7.834211057655693e-11, -9.53460643771109e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [6.561418075534675e-11, -5.500599975505338e-12, 3.334887921369045e-11, -1.0659972904392134e-10, -1.559474771539726e-11, -1.8221091302450532e-11, 2.598388171293209e-11, 1.944044925039634e-11, 3.759970113037525e-11, 1.2417578076906466e-10, -9.924283617124274e-12, 6.72077948848937e-11, -2.220428285681919e-10, -3.936151404815291e-11, -3.1859959115365655e-11, 4.824696198113543e-11, 4.352940230489821e-11, 7.367750853859434e-11, -9.16144937690433e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3872036852546898e-10, 1.354631962158237e-10, -3.355571376317812e-11, -3.3331337689901375e-11, -2.9034219473089706e-11, 1.620192868756476e-10, -1.98507876802978e-13, -9.815792623157904e-11, -5.6949334137357255e-11, 2.762858830607229e-10, 2.6538615749416294e-10, -7.882117181168269e-11, -6.338629621183145e-11, -5.374101164079548e-11, 3.4103897483817036e-10, -2.065447812782395e-11, -2.118473174661517e-10, -9.807454848242969e-11, 1.2741807609017997e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-8.603817658325852e-11, -2.9741098472868543e-11, -1.6082246645510168e-11, 1.2533440951756347e-10, 1.0277600992480984e-10, -4.49259518475742e-11, 6.255640450092415e-11, -3.580169494199481e-11, -8.098410830825742e-12, -1.799451698758503e-10, -1.7315626710256993e-10, -5.945466341472638e-11, -3.551969829374002e-11, 2.433517831690324e-10, 2.0495982688828462e-10, -8.725309363910583e-11, 1.2781264935313175e-10, -6.077627290324017e-11, -1.8930079725976157e-11, -3.732137932033197e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.062306129843819e-11, 8.547407226444648e-11, -5.113998113870366e-11, -3.561451134004301e-11, 1.2199352639186145e-11, -6.712197464509018e-11, -1.7880141811588146e-11, 9.247935750522629e-12, -1.4021728222957108e-10, -8.748468616204264e-11, 1.0504819236700769e-10, 1.7410228814185302e-10, -9.702161296587519e-11, -7.216749420280166e-11, 2.5521584845478174e-11, -1.3459078296307325e-10, -2.61449750738052e-11, 2.1629587010352225e-11, -2.8154023556936636e-10, -1.726895293430175e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8938817181179957e-10, 1.1056089377348144e-10, 8.31483770724617e-11, -1.032369745246342e-10, -6.210887359969774e-11, -7.012768143965786e-11, -1.8086976361075813e-11, -6.386458029083997e-11, 4.986411283880443e-11, -2.738076432251546e-11, -3.6415903625908186e-10, 2.1118573556577758e-10, 1.6153878235058983e-10, -1.9379042814904324e-10, -1.2989809228258764e-10, -1.5739531900038628e-10, -3.181821472963975e-11, -1.456652576337092e-10, 9.381295740240603e-11, -5.940792302538966e-11, -5.12601072699681e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.091416425770603e-12, -1.5621726134895653e-11, 1.6143530956469476e-11, -1.1316170223096833e-11, 1.8186341321779764e-11, -8.993916722488393e-12, -4.004907516730327e-12, -1.937550120345577e-11, -1.2999934462243345e-11, 1.152700157547315e-11, -1.7352230763378884e-11, -3.0682900664658064e-11, 3.083111543844552e-11, -2.5527691072113612e-11, 3.530820080754893e-11, -1.790056991524125e-11, -9.095391106939132e-12, -3.9325431799852595e-11, -2.2942980848483785e-11, 2.5378588119906453e-11, -1.1827872015146568e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.638911228951656e-11, -2.2430612922619275e-11, 1.9772627979364188e-11, -8.111622484818781e-12, 1.244138125855443e-11, 3.133715509306967e-12, -1.5735635017222194e-11, -1.0002776384965273e-11, -2.279887389988744e-11, -6.509270900068032e-11, -1.3040346580339701e-11, 3.431610551274389e-11, -4.886979709795014e-11, 4.0457415195760404e-11, -1.3581025193332152e-11, 2.4546809029857286e-11, 6.8618444259982425e-12, -2.7970625815498806e-11, -1.7415735520387443e-11, -4.521460983397674e-11, -1.259364834638177e-10, -2.962219358693119e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.569678383059e-12, -5.088618415527435e-11, 4.5214942900884125e-12, -7.341294239182616e-11, 3.8222092157980114e-11, -8.862799383280162e-12, -2.3581914199155563e-11, -2.750788485883504e-11, 2.252220632215085e-11, 3.639688550549636e-11, 4.834244116125319e-11, -2.2855273229538398e-11, -1.0092460200894493e-10, 1.8731016737660866e-11, -1.480311428991854e-10, 7.64315277734795e-11, -1.548616790358892e-11, -3.562350414654247e-11, -5.373834710553638e-11, 5.127498425849808e-11, 7.108891253437832e-11, 8.580225419052567e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-2.13556949901772e-11, 9.316991622654314e-12, 4.859490587705295e-11, 3.090150357820676e-11, 3.321676267376006e-11, 3.888733779433551e-11, -5.009659354016094e-12, 4.4215742178721484e-12, -6.3457239463105e-11, -3.638200851696638e-13, -1.9675927553919337e-11, -4.196476499629398e-11, 1.7852608280577442e-11, 9.726841554424936e-11, 6.040612454683014e-11, 6.385980633183408e-11, 7.558731418555453e-11, -1.035216357081481e-11, 1.1191492177431428e-11, -1.275340943962533e-10, -2.4261703757133546e-12, -4.346523141407488e-11, -3.0843105847111474e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5377255024873193e-11, -4.2452708015616736e-12, -4.555189558885786e-11, -3.0042079934844423e-11, -5.945377523630668e-11, -5.0408011098568295e-11, -3.801725600993677e-11, 4.3947512295972047e-11, 5.7652771445759754e-11, -3.674727189206806e-12, -1.8739454432648017e-11, -3.0685565199917164e-11, -1.040867392276823e-11, -9.285994195806779e-11, -6.239841976451999e-11, -1.2020273665314107e-10, -1.0522849258620681e-10, -7.763656384440765e-11, 8.715983490503731e-11, 1.1453882287071337e-10, -3.740341369962152e-12, -3.539435411425984e-11, -1.2841949725839186e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-3.684186289376612e-11, -2.3148150063434514e-11, 9.00568508654942e-12, 3.2879921008088786e-11, 2.687672306933564e-11, 4.944400444628627e-11, -4.703959444185557e-11, -2.3139268279237513e-12, -1.5033863043356632e-11, -1.525835013893584e-11, -3.549716076634013e-11, 2.0019985669250673e-11, -7.434131088501772e-11, -4.641509399050392e-11, 2.174682656175264e-11, 6.543432462535748e-11, 5.26660937083534e-11, 9.949996382374593e-11, -9.412903789751681e-11, -4.1315839638400575e-12, -3.022671002383959e-11, -3.081768173984756e-11, -7.119760336848913e-11, 3.9746428370790454e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.160949445581764e-11, 5.930811397547586e-11, -2.0627388686023096e-11, -2.069585613995173e-10, -2.4985347124584223e-10, 2.169153745512631e-11, 1.0440759368179897e-11, 8.311040744501952e-11, -6.554445874940029e-11, -3.1609714845615144e-11, 7.345657415669393e-11, 1.0588463439376028e-10, -1.0095169145074578e-10, 1.2149126149552103e-10, -3.061728648390272e-11, -3.9258352124704743e-10, -5.139190184522135e-10, 3.1169733460956195e-11, 9.95981075391228e-12, 1.831172991018093e-10, -1.4227874434169507e-10, -7.552525271847799e-11, 1.441271546553935e-10, 2.000337673280228e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
