Julia Version 1.6.0-DEV.603
Commit 7c0cb30f5b (2020-08-07 05:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed UnPack ────────────── v1.0.1
  Installed VectorizationBase ─── v0.12.30
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_LO5HMS/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_LO5HMS/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0922153726464785e-11, -6.2365779207596e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.622591364191521e-11, 1.3159495715342473e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-2.531942433492418e-10, -5.122244850497282e-10, -1.9272472506770555e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.600075958511752e-12, -1.1532219623688889e-11, 5.313749440460924e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-6.791067708178389e-11, 5.503826283614899e-10, -1.4237000467431926e-10, 1.1275400613186548e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0503153902163831e-10, -5.835443239732285e-11, 2.1596591182060365e-10, -1.167488328235322e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8939649848448425e-10, -2.0922963361869051e-10, -3.836145845426131e-10, -4.367878281286153e-10, -1.9575552290262976e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [9.692135982675154e-11, -7.003009283579331e-11, 2.064144410951485e-10, -1.6340206965281823e-10, 6.514810912960911e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [5.069278330438465e-12, 3.5915714846623814e-12, -6.647460359943125e-12, 9.623857266660707e-12, 6.638467553443661e-12, -1.194577770036176e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.06470429431738e-11, 7.072631369453575e-11, -3.212463628443629e-11, -1.217250744645071e-10, 1.353035461448826e-10, -6.533962260135695e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-5.4104498659057754e-11, -5.7529758734631287e-11, 3.375744128675251e-11, -1.0214795675977939e-10, -1.1836354119054704e-10, 7.204215002332148e-11, -1.1691980716932449e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.733325256888747e-12, 5.985656414964069e-12, -6.554756737386924e-12, 1.8284707081761553e-11, 9.96069893233198e-12, -1.456468279315004e-11, -5.947464742916964e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-2.589217729109805e-11, -8.721690036850305e-12, 1.7852386235972517e-12, -1.000177718424311e-11, -6.029887700265135e-11, -1.6057488672061027e-11, 2.091216089183945e-12, -2.0277668433266172e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2518996950205974e-10, -4.0409786628003985e-11, -1.8456969286262392e-10, 1.5270318343141298e-10, -2.617573935381756e-10, -9.438427817087813e-11, -3.836223561037855e-10, 3.12239123445579e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [8.66851035397076e-11, -6.326283941149313e-11, -9.375611398354522e-11, 3.195144149259477e-10, 1.7280266106922682e-10, -1.2241430091819439e-10, -2.0228085872986412e-10, 6.216160919336744e-10, 1.9319656985317124e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.702638692488108e-11, 8.209655177893183e-12, 1.4488787947186665e-10, 9.93246818126181e-10, 1.952471517796539e-10, 1.7511103678202744e-11, 2.9067748208433386e-10, 1.989254316825395e-9, -3.634992307155471e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [1.2991563380637672e-10, -1.2718825992408256e-10, -1.3251255648327742e-10, -1.9892387737030504e-10, 2.654514386080109e-10, 2.5777624479417227e-10, -2.3891710831946966e-10, -2.7971069904708656e-10, -3.963486205904587e-10, 5.166593819438958e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.176170685989746e-12, -2.8801627749430736e-11, 8.504974502443474e-11, 7.139888680285367e-11, 2.4239055207431193e-11, 1.1289191803598442e-11, -5.79707393200124e-11, 1.6967982574556117e-10, 1.4692647098968337e-10, 4.7946757675276785e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4699352846037073e-11, 5.3553383949633826e-11, 2.479771943342257e-11, -5.1595616668009825e-11, -1.2420064976481626e-11, -1.783129199850464e-11, 1.171036601022024e-10, 4.9585002770413666e-11, -1.1129741572801777e-10, -1.6274204206467857e-11, -3.905431533723913e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.637923295940482e-11, -6.694422793884769e-12, 3.6337599595981374e-11, 4.595213098923523e-12, -1.4424728078665794e-10, -6.99590385622173e-11, -1.7925994022505165e-11, 7.148659442179905e-11, 8.095524250961716e-12, -2.716115110601436e-10, 1.0023537555525763e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [1.4334977649355096e-11, 1.0445377895962338e-10, 1.5102363803976004e-10, -2.260691633892975e-11, -3.2164937380230185e-11, 8.315748090126363e-11, 2.7363888932541158e-11, 2.073423654991302e-10, 2.9679547708383325e-10, -2.1122881221913303e-11, -7.2581163301777e-11, 1.6334245067639586e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8968272225426972e-11, 1.0594192190183094e-11, -5.794031920913767e-12, 2.26929586233382e-11, 2.7823299220131048e-11, -5.373368416883295e-12, -5.5289106626332796e-11, 1.9017898367224007e-11, -1.0517475779181495e-11, 4.8073323100084053e-11, 5.669620328774272e-11, -8.788081373722889e-12]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [3.0144997609227175e-11, 4.828342170526412e-10, -2.208124794123023e-10, -7.91184895376773e-11, -1.330673349286826e-10, -8.622802472046942e-11, 6.333644719802578e-11, 9.592664440560839e-10, -4.250680918360672e-10, -1.6241841205300034e-10, -2.571465262946049e-10, -1.7245360695028467e-10, -6.041878108931087e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5139889342208335e-10, 2.0834778347023075e-10, 6.158851206805593e-12, 3.728994890650483e-11, 1.537305838184011e-10, 3.039448692732094e-10, 2.9977798021718627e-10, 3.9768011106389167e-10, 2.918931762962984e-11, 7.565237325479757e-11, 2.91897395143792e-10, 6.283225051362251e-10, 2.6829649613091533e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1882350658964924e-10, 3.989388819292117e-10, 1.4771517342637708e-11, -3.580948870762768e-10, -9.29256671611256e-14, 1.0462808397448953e-10, -9.343470441791624e-11, -2.2636348351312563e-10, 7.808786950391777e-10, 2.8278268615622437e-11, -7.332940921145337e-10, -1.3418155475619642e-11, 1.9357448977075364e-10, -1.9354073899080504e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.674483188362501e-11, -1.7588264178414192e-11, -5.505240707748271e-11, -3.1481262041666014e-11, -3.327471631564549e-11, 5.273137482220136e-11, 7.834266568806925e-11, 1.3286349798136143e-10, -2.863009829212615e-11, -1.0600087474443853e-10, -6.47177866852644e-11, -6.873646096750008e-11, 1.0431011610023688e-10, 1.5430479116673723e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [2.255795550354378e-11, -1.840771979289002e-11, 8.140821350366423e-12, -4.891309579591052e-12, -7.682410263498696e-12, -1.008737537944171e-11, 7.141842672808707e-12, 4.4146464261984875e-11, -3.612210530690163e-11, 1.8664181311578432e-11, -5.945355319170176e-12, -1.3879564164653857e-11, -2.0402568523536502e-11, 1.3349543692697807e-11, 2.419620059868066e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.6799230329620514e-11, -7.718703454173692e-11, -8.753386904203353e-11, -1.2438938767900254e-11, -5.893774357446091e-11, 4.051758928369509e-11, -4.1152525831478215e-11, 7.239053800844886e-11, -1.662990856132751e-10, -1.652485925873748e-10, -3.106048751533308e-11, -1.2025402895687876e-10, 8.004374940639991e-11, -9.189859984104487e-11, -7.455480677265314e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3474000521161997e-11, -1.508365654601107e-10, 2.3982371644137856e-11, 1.2949419314622901e-11, 1.6024559457150644e-10, 2.7761348775356964e-11, 1.7004841978973673e-11, 8.595346656647962e-12, -4.892675153911341e-11, -2.9882840646422437e-10, 4.504219219825245e-11, 2.1831203511624153e-11, 3.3637026497501665e-10, 5.938005642747157e-11, 2.6750379689133297e-11, 2.3214097311097248e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.060296543428876e-11, 5.224332078057614e-11, -7.137623825315131e-11, 1.1321388271312571e-11, 2.7080560016656818e-11, -5.119515922302753e-11, -4.5970005579931694e-11, 4.111710971699267e-11, -8.898226599995951e-11, 1.0231637759261503e-10, -1.3807766041651348e-10, 3.690181493709588e-11, 5.4290794082589855e-11, -1.0832146291051004e-10, -9.828948765999712e-11, 8.429701381373889e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [3.5782488083668795e-11, 6.181899436796812e-11, 1.7136514429694216e-11, -8.745260071663097e-11, -1.9572010678814422e-11, 9.254641497591365e-11, -3.2859603926738146e-11, 3.6623593047124814e-11, 7.440137395064994e-11, 1.1187495374542777e-10, 3.4245717372982654e-11, -1.721043307867376e-10, -1.8550161406949428e-11, 1.7929990825393816e-10, -8.087541747414662e-11, 7.380385191879668e-11, -1.475619626489788e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6411250136627586e-10, 3.6239233835999585e-11, -1.6592371920864935e-10, -3.148100669037035e-10, -1.1063705507297072e-11, 1.2840684071591113e-10, -2.569968682308854e-10, 1.7413959163548043e-10, 3.351872113199761e-10, 8.99176288982062e-11, -3.430286055206011e-10, -6.221793080740667e-10, -2.5641710976742615e-11, 2.5587576502061893e-10, -5.349342080407382e-10, 3.245372859339568e-10, 1.5078160942039176e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-3.4410807536744414e-11, -1.605315880226499e-11, 8.633604942076545e-11, -1.2368384094685325e-10, 7.607980911927825e-11, 1.4892087563112e-11, 1.0110423609432928e-10, 1.274609306989305e-10, 9.321987626265127e-11, -7.536637980365413e-11, -3.176936491655624e-11, 1.6519363654765584e-10, -2.6897917226875734e-10, 1.4595058495103785e-10, 3.7124525675835685e-11, 1.9480306256980384e-10, 2.4663182607298495e-10, 1.8800916379291266e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.381028955753209e-12, 1.576185848506384e-10, 4.27229362998105e-11, 3.397682135641844e-11, 2.158155876230694e-10, 1.1354250872841476e-11, -6.780009886853122e-11, -1.1372014441235478e-10, -3.0612845591804216e-11, -1.8033574633591343e-11, 3.339633014576293e-10, 7.489897591028694e-11, 7.176281791032579e-11, 4.265856556884273e-10, 2.538103061056063e-11, -1.361311063874382e-10, -2.2734281124314748e-10, -5.7080784543472873e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [2.6999291691254257e-11, 6.503597660412197e-11, -2.7310709249661613e-11, -2.358668815816145e-11, -1.5818790721766618e-11, 2.3714363805993344e-11, -2.0109691689640385e-11, 1.5864642932683637e-11, -2.1980972597646087e-11, 5.349365395090899e-11, 1.3336554083309693e-10, -5.433697936041426e-11, -4.586031554509873e-11, -2.5802804337615726e-11, 4.2548853329549274e-11, -4.1120773452973935e-11, 3.290923089593889e-11, -4.2989389825720536e-11, 1.5512036100062687e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.4432011969111045e-11, 5.748534981364628e-11, -3.049505092889149e-11, 1.264595095307186e-10, 4.6939119258126993e-11, -4.9622084219436147e-11, -2.5877522347173e-11, -7.955025527195403e-11, 6.088685111649283e-11, 4.660671848455422e-11, 1.1455791870673693e-10, -6.232070415279622e-11, 2.728532955131868e-10, 9.405720646782356e-11, -9.935074984923631e-11, -5.4315885122946383e-11, -1.6075452080599462e-10, 1.041080555097551e-10, -7.964406911753485e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0564661085131775e-11, 1.5826229216031606e-11, -8.440470544712753e-12, 3.291589223408664e-12, 4.505751327599228e-11, -3.169464690699897e-12, -5.214606524361898e-12, 6.386557949156213e-11, 1.2511325309105814e-11, -8.036016296841808e-12, -4.078082316283371e-11, 3.3335334492790025e-11, -1.6334600339007466e-11, 5.822009541134321e-12, 9.311884596741038e-11, -9.254486066367917e-12, -1.3505196960750254e-11, 1.2805823068617883e-10, 2.561106882126296e-11, -1.3687051492183855e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.473399759623135e-11, 1.5138557074578785e-11, -1.0378697901103351e-11, -4.679689968867251e-11, -1.32971411659355e-12, 1.315370035115393e-11, -5.279943149361088e-11, -3.7992609058790094e-11, 8.533262985110923e-11, 1.3933298959045715e-11, -1.7355905601590393e-10, 3.427080841333918e-11, -1.8901769038848215e-11, -9.068457096361726e-11, -2.2409851752058785e-12, 2.6167290556600165e-11, -9.819811630507047e-11, -7.777567478939318e-11, 1.774356217509876e-10, 3.2975178143601624e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-5.3891335838329724e-11, 3.145594895670456e-11, -3.84570153499908e-12, -1.0163880848068629e-10, 8.253175920458489e-12, -1.2991496767256194e-11, -3.959055305813308e-13, -1.6211587627878998e-11, -1.0308087716737191e-11, 4.316325075137684e-12, -1.0861866961420219e-10, 6.309552880168212e-11, -7.873923735246535e-12, -2.0038048997861324e-10, 1.648214897898015e-11, -2.667766008102035e-11, -2.00273131412132e-12, -3.383382463084672e-11, -1.8698820269946737e-11, 9.169998094193943e-12, 1.4139578397021069e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.4220626332626125e-11, 1.93354221522668e-11, -1.8878676399936012e-11, 1.6425549809184758e-10, 2.3177237906679693e-11, 1.366295965254949e-10, 2.9862556871762536e-11, 2.6956881171713576e-11, 1.0345457823746074e-10, 6.000666630257001e-11, -7.766176590706664e-11, 2.192646064713699e-11, -4.480482651558759e-11, 3.1767455332953887e-10, 5.822586857107126e-11, 2.592066561390993e-10, 5.0602189105575235e-11, 5.8201443664529506e-11, 1.9568680009740547e-10, 1.1426060098074231e-10, -8.016920460818255e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [3.260636205482115e-11, -5.395794921980723e-12, 4.1984860033039695e-11, 8.072320589747051e-11, -2.0942136913504328e-12, 1.1577405700791132e-10, 2.795097486796294e-12, -4.2456260729295536e-11, -5.113331980055591e-11, 3.6627145760803614e-11, 1.0263123684239872e-11, 6.675682229229096e-11, -1.0957013074630595e-11, 8.000156093146416e-11, 1.639752778004322e-10, -3.406941395667218e-12, 2.254649800192965e-10, 6.925571227611726e-13, -9.750800167296347e-11, -1.0296552499511336e-10, 7.05759894970015e-11, 1.4129364345194517e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1177114789262532e-10, -2.825507605663802e-10, -3.073015175658611e-10, -1.678268635174618e-11, 1.0834266817028038e-10, 3.062075037973955e-10, -1.6968881855206064e-10, 1.918967207359401e-10, -1.648149394739562e-10, -1.2966139273373756e-10, 2.0319745885899465e-11, -2.1718560283545685e-10, -5.800786517795586e-10, -5.956530824136053e-10, -3.4902969403560746e-11, 2.1736878963452e-10, 6.235596483605832e-10, -3.4469771481582256e-10, 3.9871772550270634e-10, -3.232776268902171e-10, -2.4917012897418545e-10, 4.357780802877187e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.0643641523699898e-10, 2.914957164534826e-11, 1.813413863516189e-10, -6.832179266780258e-11, 8.730305367521396e-11, -1.4372891765646045e-10, -4.045686008424809e-10, -3.6992187091300366e-11, 2.0655699373151037e-11, -1.2266998528076556e-10, 2.2848434255706707e-10, 1.9468049394788522e-10, 7.873102170208313e-11, 3.815943117047027e-10, -1.4298229267240004e-10, 1.6760770549240078e-10, -2.9229529907581764e-10, -7.974199078830679e-10, -6.96702695535123e-11, 3.598055187126192e-11, -2.5066992925815157e-10, 4.701350420077688e-10, -1.4129808434404367e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.038234439704638e-10, -2.802243992405806e-10, -2.0749113538442998e-10, -3.0216706914387714e-10, -6.969747001761561e-11, -2.99607005871394e-11, -1.9876267298712946e-10, -4.1337722134215937e-10, 8.106049165235163e-11, -3.839116802240028e-10, 5.1481263696473434e-11, -1.3912050400577414e-9, -5.496548771688481e-10, -4.339189008106814e-10, -5.991683815764759e-10, -1.4107004453478567e-10, -6.044520439729695e-11, -3.955386018716922e-10, -8.148469676783066e-10, 1.6860646212535357e-10, -7.66126384554866e-10, 1.0775091929815517e-10, 5.291544979968421e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2004841565271818e-11, 3.200040232798074e-11, -6.997091794858079e-11, 2.30415686530705e-12, -6.517009154549669e-12, 2.0311308190912314e-11, -4.0577430304722384e-11, -9.662448618996677e-11, 2.9612312602012025e-11, 1.0264233907264497e-11, -3.1086799801016696e-11, -8.197331702319843e-12, -2.5213275911539768e-11, 6.297184995673888e-11, -1.3547885036047091e-10, 3.6204372833026355e-12, -1.430733309604193e-11, 4.321054625222587e-11, -8.196521239511867e-11, -1.9027124320558642e-10, 5.028466532053244e-11, 1.9535484341304254e-11, -5.957001558698494e-11, -2.4822588429174175e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.744116541947733e-13, -8.703360254713743e-11, -6.63858967797637e-11, 8.036060705762793e-11, 4.749423077043957e-11, -1.6687573545226542e-10, -1.4765788591830642e-10, 2.9231506104565597e-11, 1.5613510484513426e-11, -6.781797345922769e-12, 1.0595901933641017e-10, 2.4455770741838023e-11, 1.163735774412089e-12, -1.7043932931670724e-10, -1.385479508897447e-10, 1.594753218370215e-10, 9.421396995890063e-11, -3.311457774657356e-10, -2.9981295224246196e-10, 5.842171191261514e-11, 2.2365220786468853e-11, -1.755195988550895e-11, 2.0989365800971882e-10, 4.341682569020122e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
