Julia Version 1.6.0-DEV.608
Commit ccb7fb0005 (2020-08-07 12:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_mlBguF/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_mlBguF/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.847384 seconds (1.34 M allocations: 70.864 MiB, 6.20% gc time)
Running: chebyshev_quadrature with k=1
  1.525154 seconds (2.25 M allocations: 128.858 MiB, 3.04% gc time)
Running: chebyshev_quadrature with k=2
  0.272426 seconds (425.40 k allocations: 24.398 MiB)
Running: chebyshev_quadrature with k=3
  0.359335 seconds (545.34 k allocations: 29.900 MiB, 4.03% gc time)
Running: chebyshev_quadrature with k=4
  0.310180 seconds (488.16 k allocations: 26.448 MiB)
Running: jacobi_quadrature with α=β=1
 38.589680 seconds (39.42 M allocations: 3.140 GiB, 10.69% gc time)
Running: laguerre_quadrature with k=1
  2.748080 seconds (3.34 M allocations: 185.935 MiB, 3.30% gc time)
Running: legendre_quadrature
  0.155368 seconds (215.41 k allocations: 12.339 MiB)
Running: lobatto_quadrature
  0.363366 seconds (344.23 k allocations: 20.613 MiB, 18.95% gc time)
Running: radau_quadrature
  0.247352 seconds (326.53 k allocations: 19.625 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 76.476192 seconds (100.02 M allocations: 1.491 GiB, 0.60% gc time)
Running: rectangle_rule_midpoint.
  0.151511 seconds (173.78 k allocations: 3.889 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 75.908625 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time)
Running: rombergs_method
  0.544500 seconds (753.84 k allocations: 43.371 MiB, 5.65% gc time)
Running: simpsons_rule
  0.038916 seconds (47.41 k allocations: 2.123 MiB)
Running: simpsons38_rule
  0.091070 seconds (113.34 k allocations: 5.986 MiB)
Running: trapezoidal_rule
  0.295467 seconds (1.52 M allocations: 25.805 MiB, 5.31% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.078497 seconds (32.69 k allocations: 1.945 MiB)
Running: chebyshev_quadrature with k=1
  0.402671 seconds (275.15 k allocations: 13.949 MiB)
Running: chebyshev_quadrature with k=2
  0.151025 seconds (115.76 k allocations: 3.795 MiB)
Running: chebyshev_quadrature with k=3
  0.164718 seconds (105.11 k allocations: 3.641 MiB)
Running: chebyshev_quadrature with k=4
  0.165401 seconds (87.72 k allocations: 3.287 MiB)
Running: jacobi_quadrature with α=β=1
  1.753399 seconds (536.48 k allocations: 163.529 MiB, 25.60% gc time)
Running: legendre_quadrature
  0.146526 seconds (62.42 k allocations: 3.482 MiB)
Running: lobatto_quadrature
  0.019958 seconds (16.85 k allocations: 1.040 MiB)
Running: radau_quadrature
  0.020072 seconds (16.84 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 27.291194 seconds (471.41 M allocations: 7.025 GiB, 2.46% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.225269 seconds (476.96 M allocations: 7.107 GiB, 2.06% gc time)
Running: rombergs_method
  0.366184 seconds (360.82 k allocations: 20.343 MiB)
Running: simpsons_rule
  0.000033 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.081137 seconds (19.93 k allocations: 1.196 MiB, 26.16% gc time)
Running: trapezoidal_rule
  0.052255 seconds (18.38 k allocations: 1.101 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028803 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.089545 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.092670 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.101341 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.100334 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.287809 seconds (379.29 k allocations: 19.815 MiB)
Running: legendre_quadrature
  0.059456 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000107 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000506 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000356 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000510 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.069487 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000062 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023985 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021650 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.085745 seconds (75.98 k allocations: 4.409 MiB, 30.96% gc time)
Running: chebyshev_quadrature with k=1
  0.179254 seconds (240.48 k allocations: 13.497 MiB)
Running: chebyshev_quadrature with k=2
  0.211597 seconds (295.72 k allocations: 16.589 MiB)
Running: chebyshev_quadrature with k=3
  0.224185 seconds (275.63 k allocations: 14.993 MiB, 10.51% gc time)
Running: chebyshev_quadrature with k=4
  0.202825 seconds (275.67 k allocations: 14.889 MiB)
Running: jacobi_quadrature with α=β=1
  1.872245 seconds (466.16 k allocations: 164.292 MiB, 4.26% gc time)
Running: legendre_quadrature
  0.144554 seconds (193.22 k allocations: 11.117 MiB)
Running: lobatto_quadrature
  0.155414 seconds (204.45 k allocations: 11.826 MiB)
Running: radau_quadrature
  0.178764 seconds (204.45 k allocations: 11.825 MiB)
Running: rectangle_rule_left
  1.128294 seconds (19.80 k allocations: 1.195 MiB, 1.84% gc time)
Running: rectangle_rule_midpoint
  0.024361 seconds (25.98 k allocations: 1.617 MiB)
Running: rectangle_rule_right
  1.111393 seconds (18.30 k allocations: 1.107 MiB)
Running: rombergs_method
  0.116470 seconds (140.08 k allocations: 8.067 MiB)
Running: simpsons_rule
  0.028951 seconds (29.08 k allocations: 1.804 MiB)
Running: simpsons38_rule
  0.032341 seconds (44.73 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.025788 seconds (45.24 k allocations: 1.826 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037170 seconds (101.48 k allocations: 3.079 MiB)
Running: chebyshev_quadrature with k=1
  0.174076 seconds (247.58 k allocations: 13.602 MiB)
Running: chebyshev_quadrature with k=2
  0.256343 seconds (303.35 k allocations: 16.596 MiB, 7.99% gc time)
Running: chebyshev_quadrature with k=3
  0.197724 seconds (283.05 k allocations: 15.012 MiB)
Running: chebyshev_quadrature with k=4
  0.190320 seconds (283.09 k allocations: 15.021 MiB)
Running: hermite_quadrature with k=2
 14.384377 seconds (22.14 M allocations: 1.148 GiB, 9.99% gc time)
Running: jacobi_quadrature with α=β=1
  0.470962 seconds (476.19 k allocations: 50.466 MiB, 7.48% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.269527 seconds (288.63 k allocations: 15.915 MiB, 13.01% gc time)
Running: legendre_quadrature
  0.168942 seconds (200.29 k allocations: 11.467 MiB)
Running: lobatto_quadrature
  0.238442 seconds (225.97 k allocations: 37.638 MiB, 10.58% gc time)
Running: radau_quadrature
  0.202034 seconds (222.56 k allocations: 30.302 MiB)
Running: rectangle_rule_left
  0.026437 seconds (22.96 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint
  0.025835 seconds (27.93 k allocations: 1.714 MiB)
Running: rectangle_rule_right
  0.022339 seconds (19.52 k allocations: 1.168 MiB)
Running: rombergs_method
  0.108367 seconds (142.90 k allocations: 8.131 MiB)
Running: simpsons_rule
  0.033711 seconds (41.33 k allocations: 2.160 MiB)
Running: simpsons38_rule
  0.037826 seconds (60.12 k allocations: 3.201 MiB)
Running: trapezoidal_rule
  0.026400 seconds (31.62 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041394 seconds (61.58 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=1
  0.188010 seconds (242.71 k allocations: 13.362 MiB)
Running: chebyshev_quadrature with k=2
  0.230804 seconds (298.07 k allocations: 16.327 MiB)
Running: chebyshev_quadrature with k=3
  0.235196 seconds (277.91 k allocations: 14.780 MiB)
Running: chebyshev_quadrature with k=4
  0.224194 seconds (277.94 k allocations: 14.795 MiB)
Running: hermite_quadrature with k=2
  0.140359 seconds (177.91 k allocations: 10.170 MiB)
Running: jacobi_quadrature with α=β=1
  8.238595 seconds (468.75 k allocations: 1.176 GiB, 12.62% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.260138 seconds (283.49 k allocations: 15.706 MiB)
Running: legendre_quadrature
  0.176851 seconds (195.46 k allocations: 11.231 MiB)
Running: lobatto_quadrature
  0.216019 seconds (216.33 k allocations: 23.344 MiB, 8.33% gc time)
Running: radau_quadrature
  0.194048 seconds (215.48 k allocations: 21.274 MiB)
Running: rectangle_rule_left
  0.033024 seconds (20.51 k allocations: 1.237 MiB)
Running: rectangle_rule_midpoint
  0.022226 seconds (26.71 k allocations: 1.655 MiB)
Running: rectangle_rule_right
  0.021148 seconds (18.28 k allocations: 1.107 MiB)
Running: rombergs_method
  0.117153 seconds (138.37 k allocations: 7.933 MiB)
Running: simpsons_rule
  0.051105 seconds (33.56 k allocations: 1.934 MiB, 33.33% gc time)
Running: simpsons38_rule
  0.034532 seconds (50.64 k allocations: 2.943 MiB)
Running: trapezoidal_rule
  0.026202 seconds (26.29 k allocations: 1.595 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032214 seconds (32.54 k allocations: 1.960 MiB)
Running: chebyshev_quadrature with k=1
  0.234947 seconds (241.04 k allocations: 13.582 MiB)
Running: chebyshev_quadrature with k=2
  0.239687 seconds (296.30 k allocations: 16.727 MiB)
Running: chebyshev_quadrature with k=3
  0.281207 seconds (276.23 k allocations: 14.992 MiB, 14.73% gc time)
Running: chebyshev_quadrature with k=4
  0.223578 seconds (276.27 k allocations: 14.824 MiB)
Running: jacobi_quadrature with α=β=1
  2.351483 seconds (466.80 k allocations: 195.267 MiB, 8.23% gc time)
Running: legendre_quadrature
  0.126691 seconds (193.79 k allocations: 11.148 MiB)
Running: lobatto_quadrature
  0.162579 seconds (205.02 k allocations: 11.869 MiB)
Running: radau_quadrature
  0.169264 seconds (205.02 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  0.299442 seconds (20.37 k allocations: 1.224 MiB)
Running: rectangle_rule_midpoint
  0.027174 seconds (26.35 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.100913 seconds (18.68 k allocations: 1.127 MiB)
Running: rombergs_method
  0.206235 seconds (151.46 k allocations: 8.820 MiB, 14.36% gc time)
Running: simpsons_rule
  0.023620 seconds (29.83 k allocations: 1.838 MiB)
Running: simpsons38_rule
  0.037865 seconds (45.51 k allocations: 2.825 MiB)
Running: trapezoidal_rule
  0.026832 seconds (46.24 k allocations: 1.863 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025744 seconds (33.30 k allocations: 1.908 MiB)
Running: chebyshev_quadrature with k=1
  0.195321 seconds (241.60 k allocations: 13.585 MiB)
Running: chebyshev_quadrature with k=2
  0.267804 seconds (296.90 k allocations: 16.579 MiB, 7.43% gc time)
Running: chebyshev_quadrature with k=3
  0.211636 seconds (276.77 k allocations: 14.912 MiB)
Running: chebyshev_quadrature with k=4
  0.201325 seconds (276.81 k allocations: 14.996 MiB)
Running: jacobi_quadrature with α=β=1
  2.123052 seconds (467.46 k allocations: 149.937 MiB, 9.19% gc time)
Running: legendre_quadrature
  0.156848 seconds (194.36 k allocations: 11.165 MiB)
Running: lobatto_quadrature
  0.180413 seconds (205.60 k allocations: 11.870 MiB)
Running: radau_quadrature
  0.192720 seconds (205.59 k allocations: 11.869 MiB)
Running: rectangle_rule_left
  1.134991 seconds (20.64 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint
  0.026048 seconds (26.34 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  1.253360 seconds (18.65 k allocations: 1.125 MiB, 2.40% gc time)
Running: rombergs_method
  0.138791 seconds (141.39 k allocations: 8.144 MiB)
Running: simpsons_rule
  0.035835 seconds (30.58 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.036892 seconds (46.26 k allocations: 2.854 MiB)
Running: trapezoidal_rule
  0.028120 seconds (58.50 k allocations: 2.064 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.156687 seconds (153.20 k allocations: 9.100 MiB)
Running: chebyshev_quadrature with k=1
  0.140300 seconds (91.28 k allocations: 3.297 MiB)
Running: chebyshev_quadrature with k=2
  0.149292 seconds (127.05 k allocations: 3.990 MiB)
Running: chebyshev_quadrature with k=3
  0.187173 seconds (115.62 k allocations: 3.819 MiB)
Running: chebyshev_quadrature with k=4
  0.164183 seconds (95.16 k allocations: 3.413 MiB)
Running: jacobi_quadrature with α=β=1
  2.074772 seconds (510.01 k allocations: 169.317 MiB, 7.40% gc time)
Running: legendre_quadrature
  0.098435 seconds (38.38 k allocations: 2.109 MiB)
Running: lobatto_quadrature
  0.000086 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000042 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 42.043408 seconds (590.00 M allocations: 8.792 GiB, 3.48% gc time)
Running: rectangle_rule_midpoint
  0.000065 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 42.060457 seconds (592.75 M allocations: 8.833 GiB, 3.29% gc time)
Running: rombergs_method
  0.118265 seconds (41.92 k allocations: 2.259 MiB)
Running: simpsons_rule
  0.000037 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024067 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.015195 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.365805 seconds (629.34 M allocations: 9.388 GiB, 4.87% gc time)
Running: chebyshev_quadrature with k=1
  0.481728 seconds (439.73 k allocations: 24.304 MiB, 7.08% gc time)
Running: chebyshev_quadrature with k=2
 12.426836 seconds (497.14 k allocations: 4.042 GiB, 3.94% gc time)
Running: chebyshev_quadrature with k=3
  5.631362 seconds (290.74 k allocations: 1.643 GiB, 5.22% gc time)
Running: chebyshev_quadrature with k=4
  7.104553 seconds (290.77 k allocations: 2.262 GiB, 2.64% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 48.854548 seconds (505.75 k allocations: 13.255 GiB, 3.94% gc time)
Running: legendre_quadrature.
  5.995946 seconds (233.20 k allocations: 1.976 GiB, 2.30% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.140965 seconds (8.24 M allocations: 13.384 GiB, 5.48% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.105901 seconds (7.24 M allocations: 13.369 GiB, 3.96% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.084144 seconds (23.40 k allocations: 1.405 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.548632 seconds (32.03 k allocations: 1.962 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.706946 seconds (23.62 k allocations: 1.416 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.984878 seconds (457.32 k allocations: 153.735 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.198071 seconds (600.04 M allocations: 8.943 GiB, 9.33% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.070176 seconds (600.05 M allocations: 8.944 GiB, 8.63% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.837340 seconds (600.04 M allocations: 8.943 GiB, 8.67% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.071160 seconds (182.59 k allocations: 4.521 MiB)
Running: chebyshev_quadrature with k=1
  0.227940 seconds (258.20 k allocations: 14.091 MiB)
Running: chebyshev_quadrature with k=2
  0.206029 seconds (284.36 k allocations: 15.189 MiB)
Running: chebyshev_quadrature with k=3
  0.189895 seconds (260.81 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=4
  0.188378 seconds (260.84 k allocations: 13.462 MiB)
Running: jacobi_quadrature with α=β=1
  0.391136 seconds (405.67 k allocations: 35.876 MiB)
Running: laguerre_quadrature with k=2
  0.164820 seconds (188.19 k allocations: 10.881 MiB)
Running: legendre_quadrature
  0.108517 seconds (151.89 k allocations: 8.414 MiB)
Running: lobatto_quadrature
  0.036336 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.037317 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.040631 seconds (19.85 k allocations: 1.172 MiB)
Running: rectangle_rule_midpoint
  0.051680 seconds (26.82 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.052636 seconds (18.40 k allocations: 1.096 MiB)
Running: rombergs_method
  0.230967 seconds (170.32 k allocations: 9.696 MiB)
Running: simpsons_rule
  0.002346 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.045515 seconds (81.54 k allocations: 3.524 MiB)
Running: trapezoidal_rule
  0.174453 seconds (2.39 M allocations: 37.759 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002219 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.104512 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.107684 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.115891 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.117135 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  5.601961 seconds (402.46 k allocations: 906.594 MiB, 4.77% gc time)
Running: legendre_quadrature
  0.054648 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000242 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000181 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.242457 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000442 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.132230 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060648 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000803 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000774 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.067241 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.081153 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.082594 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.079846 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.133378 seconds (388.73 k allocations: 253.822 MiB)
Running: legendre_quadrature
  0.057572 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000096 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.312437 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001066 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.560907 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.087697 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000066 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001690 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
