Julia Version 1.6.0-DEV.608
Commit ccb7fb0005 (2020-08-07 12:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Requires ─────── v1.0.1
  Installed PyCallUtils ──── v0.2.2
  Installed BSON ─────────── v0.2.6
  Installed Conda ────────── v1.4.1
  Installed Parsers ──────── v1.0.7
  Installed MacroTools ───── v0.5.5
  Installed PyCall ───────── v1.91.4
  Installed JSON ─────────── v0.21.0
  Installed VersionParsing ─ v1.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [02651160] + PyCallUtils v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fbb218c0] + BSON v0.2.6
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.7
  [438e738f] + PyCall v1.91.4
  [02651160] + PyCallUtils v0.2.2
  [ae029012] + Requires v1.0.1
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing PyCallUtils
Status `/tmp/jl_M2jJzd/Project.toml`
  [fbb218c0] BSON v0.2.6
  [438e738f] PyCall v1.91.4
  [02651160] PyCallUtils v0.2.2
  [ae029012] Requires v1.0.1
  [9a3f8284] Random
  [9e88b42a] Serialization
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_M2jJzd/Manifest.toml`
  [fbb218c0] BSON v0.2.6
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.7
  [438e738f] PyCall v1.91.4
  [02651160] PyCallUtils v0.2.2
  [ae029012] Requires v1.0.1
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
WARNING: Method definition getindex(PyCall.PyObject, Union{AbstractString, Symbol}) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:326 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:45.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Union{AbstractString, Symbol}) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:335 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:46.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:48.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer, Integer) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:49.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition getindex(PyCall.PyObject, Integer...) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:50.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:51.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer, Integer) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:52.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition setindex!(PyCall.PyObject, Any, Integer...) in module PyCall at deprecated.jl:70 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:53.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition jlwrap_iterator(Any) in module PyCall at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/pyiterator.jl:137 overwritten in module PyCallUtils at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:55.
  ** incremental compilation may be fatally broken for this module **

Error During Test at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/test/runtests.jl:14
  Test threw exception
  Expression: convert(SparseMatrixCSC, PyObject(x)) == x
  PyError (PyImport_ImportModule
  
  The Python package scipy.sparse could not be found by pyimport. Usually this means
  that you did not install scipy.sparse in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Python version at:
  
  /usr/bin/python3
  
  and you should use whatever mechanism you usually use (apt-get, pip, conda,
  etcetera) to install the Python package containing the scipy.sparse module.
  
  One alternative is to re-configure PyCall to use a different Python
  version on your system: set ENV["PYTHON"] to the path/name of the python
  executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  Another alternative is to configure PyCall to use a Julia-specific Python
  distribution via the Conda.jl package (which installs a private Anaconda
  Python distribution), which has the advantage that packages can be installed
  and kept up-to-date via Julia.  As explained in the PyCall documentation,
  set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
  To install the scipy.sparse module, you can use `pyimport_conda("scipy.sparse", PKG)`,
  where PKG is the Anaconda package the contains the module scipy.sparse,
  or alternatively you can use the Conda package directly (via
  `using Conda` followed by `Conda.add` etcetera).
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'scipy'",)
  
  Stacktrace:
   [1] pyimport(name::String)
     @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
   [2] PyObject(S::SparseMatrixCSC{Float64,Int64})
     @ PyCallUtils ~/.julia/packages/PyCallUtils/DufyN/src/PyCallUtils.jl:67
   [3] top-level scope
     @ ~/.julia/packages/PyCallUtils/DufyN/test/runtests.jl:14
   [4] include(fname::String)
     @ Base.MainInclude ./client.jl:443
   [5] top-level scope
     @ none:6
   [6] eval(m::Module, e::Any)
     @ Core ./boot.jl:344
   [7] exec_options(opts::Base.JLOptions)
     @ Base ./client.jl:260
   [8] _start()
     @ Base ./client.jl:484
  
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/PyCallUtils/DufyN/test/runtests.jl:14
ERROR: Package PyCallUtils errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
