Julia Version 1.4.0-rc1.4
Commit 3ac20f95d0 (2020-01-26 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed KCenters ──────────────────── v0.1.9
  Installed TableTraits ───────────────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed StatsBase ─────────────────── v0.32.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed Compat ────────────────────── v3.2.0
  Installed JSON ──────────────────────── v0.21.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.9
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataFrames ────────────────── v0.20.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed SimilaritySearch ──────────── v0.3.17
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed Missings ──────────────────── v0.4.3
  Installed Parsers ───────────────────── v0.3.10
  Installed MLDataPattern ─────────────── v0.5.0
  Installed Tables ────────────────────── v0.2.11
   Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.9
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.9
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_GgDlrx/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.9
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 131.83000000000007
[ Info: 78.54000000000003
[ Info: 42.57
[ Info: 24.52
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.56000118283488
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.43565090952681
inertia(cdnet.distances) = 29.313933025435873
inertia(crand.distances) = 25.50381253004696
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1953125,"distances_sum":1129.9119453670132}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.162109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.162109375,"f1":null,"seconds":2.857297658920288e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.3125,"distances_sum":531.8450774636063}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.37109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.37109375,"f1":null,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1953125,"distances_sum":1129.9119453670132}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5302734375,"f1":null,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.1171875,"distances_sum":1606.9138519130477}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7175676753801759,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4453125,"distances_sum":1772.3313279443687}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8980144855144863,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":2811.346196979505}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.55078125,"f1":null,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.203125,"distances_sum":1708.6923613937304}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8980144855144863,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":2811.346196979505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9533882783882791,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":3243.9929244664477}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675995879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":3380.2609767109134}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9065653096903106,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2873.0259799964274}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9421562812187818,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":3168.3565557428483}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.929195804195805,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":3026.8667722870578}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675995879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":3380.2609767109134}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675995879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":3380.2609767109134}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7868376415251425,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9140625,"distances_sum":1913.5087588142032}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.65625,"distances_sum":1127.629322142114}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7868376415251425,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9140625,"distances_sum":1913.5087588142032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9480368589743594,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":3021.389724564084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9568853021978024,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.828125,"distances_sum":3087.6736610052276}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7969389985014993,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.078125,"distances_sum":1917.9839740793668}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9568853021978024,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.828125,"distances_sum":3087.6736610052276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630265567765575,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":3099.2880649115023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759500915750919,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":3210.3013297129023}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759500915750919,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":3210.3013297129023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759500915750919,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9453125,"distances_sum":3210.3013297129023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.046875,"distances_sum":515.4601419018946}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.4384429454803467e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.890625,"distances_sum":497.5738649692691}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1806640625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.046875,"distances_sum":515.4601419018946}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6984414890664896,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.9375,"distances_sum":1494.9658539823536}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7116361069486075,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.1171875,"distances_sum":1543.4669796292558}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8097080003330012,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.8359375,"distances_sum":1994.756513105409}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8824524433899442,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9765625,"distances_sum":2378.693011846543}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7988365800865808,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.7578125,"distances_sum":1948.1679046281363}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8824524433899442,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9765625,"distances_sum":2378.693011846543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157514,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":3122.3172007880157}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603479853479857,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8515625,"distances_sum":3050.4465351515582}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9140396062271069,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.34375,"distances_sum":2661.155445305}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8915985056610064,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.25,"distances_sum":2484.5408962434317}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8961881868131878,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.265625,"distances_sum":2490.380838928542}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157514,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":3122.3172007880157}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9618532509157514,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":3122.3172007880157}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8620754245754254,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.890625,"distances_sum":2411.6913265981384}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8753205128205137,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.046875,"distances_sum":2492.645616937098}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8753205128205137,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.046875,"distances_sum":2492.645616937098}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9127721237096245,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.46875,"distances_sum":2729.7993110440025}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9464342948717954,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6484375,"distances_sum":3009.635108459281}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9571256868131875,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7578125,"distances_sum":3100.7121017463196}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9467891483516493,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.765625,"distances_sum":3004.892467564286}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.942439331501832,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7421875,"distances_sum":2959.7165630691998}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9571256868131875,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7578125,"distances_sum":3100.7121017463196}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646634615384622,"seconds":7.037073373794556e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":3137.090613192038}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973122710622711,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9140625,"distances_sum":3215.151234461313}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9643257783882787,"seconds":6.92903995513916e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":3141.44515520782}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699977106227112,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":3190.811463094383}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":3253.1350269628447}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":3253.1350269628447}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":3253.1350269628447}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.515625,"distances_sum":419.4762426062918}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.4296875,"distances_sum":634.6591853761822}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.3359375,"distances_sum":676.6052330073192}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4140625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4140625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.3359375,"distances_sum":676.6052330073192}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8964525058275067,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4140625,"distances_sum":1709.494336423882}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7901655636030644,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.7265625,"distances_sum":1209.2222710369003}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8617595945720955,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.328125,"distances_sum":1521.895086489275}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8964525058275067,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4140625,"distances_sum":1709.494336423882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682119963369966,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2177.930240305616}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9529678654678658,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2098.18456780738}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.944682921245422,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9375,"distances_sum":1981.8151488961425}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682119963369966,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2177.930240305616}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682119963369966,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2177.930240305616}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7945745226995237,"seconds":4.375353455543518e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9140625,"distances_sum":1318.5727237985084}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":2.9187649488449097e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.1328125,"distances_sum":435.4880430458131}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6875,"distances_sum":666.2346755720768}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7945745226995237,"seconds":4.375353455543518e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9140625,"distances_sum":1318.5727237985084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8828327922077931,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":1699.5911383516889}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.802909070096571,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.859375,"distances_sum":1355.2560234834402}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8840492840492848,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":1694.5311474576204}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8840492840492848,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":1694.5311474576204}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497309981684987,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2083.289888996725}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9624084249084256,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2162.9742546529387}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9641025641025646,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2196.973886343371}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9036661255411262,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7421875,"distances_sum":1755.9437315638868}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9320054945054951,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":1936.799570614528}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514766483516489,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2141.453035271435}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9641025641025646,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2196.973886343371}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9641025641025646,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2196.973886343371}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2021484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.2109375,"distances_sum":368.28772543713444}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2021484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.1385570764541626e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.2109375,"distances_sum":368.28772543713444}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8104145854145863,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.8671875,"distances_sum":1398.2592902497536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7700651778776786,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.703125,"distances_sum":1267.3651227469563}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8104145854145863,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.8671875,"distances_sum":1398.2592902497536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9306604853479862,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":1991.7448825022566}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8928977272727281,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5546875,"distances_sum":1758.991231923858}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9306604853479862,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":1991.7448825022566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573717948717952,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2144.2180649721977}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2272.534334506091}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631925366300372,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2212.7976319103045}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.94945054945055,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2138.2660331571574}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2272.534334506091}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549456,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2272.534334506091}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8014324217449227,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.0859375,"distances_sum":1333.9305579362847}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7880083458208466,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.0078125,"distances_sum":1304.1129487486826}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8014324217449227,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.0859375,"distances_sum":1333.9305579362847}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.952329441391942,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.78125,"distances_sum":2139.3822258536143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9344036172161178,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.65625,"distances_sum":2025.6467308872102}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9330736971361975,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.6875,"distances_sum":2066.663736434889}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.952329441391942,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.78125,"distances_sum":2139.3822258536143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618532509157516,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9296875,"distances_sum":2157.9477864497617}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558665293040299,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8671875,"distances_sum":2137.984402432416}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762477106227108,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.96875,"distances_sum":2275.0516713163834}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762477106227108,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.96875,"distances_sum":2275.0516713163834}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762477106227108,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.96875,"distances_sum":2275.0516713163834}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9765625,"distances_sum":738.1946246445483}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.43359375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.43359375,"f1":null,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9765625,"distances_sum":738.1946246445483}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.43359375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.43359375,"f1":null,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9765625,"distances_sum":738.1946246445483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.43359375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.43359375,"f1":null,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9765625,"distances_sum":738.1946246445483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8543872793872804,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4296875,"distances_sum":1563.9770300938123}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.62890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.62890625,"f1":0.758614302364303,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.765625,"distances_sum":1194.5031534787563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8543872793872804,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4296875,"distances_sum":1563.9770300938123}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9271150724275733,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.65625,"distances_sum":1881.6744253431236}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9481627747252752,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6796875,"distances_sum":2054.2199786182255}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9260936979686984,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.703125,"distances_sum":1865.7757330980241}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9481627747252752,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6796875,"distances_sum":2054.2199786182255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9694768772893778,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.890625,"distances_sum":2145.4317285686416}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9524241383616386,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.828125,"distances_sum":2054.6592715958213}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9647149725274726,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8515625,"distances_sum":2113.555642183474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9618761446886452,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2125.8857943704925}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9694768772893778,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.890625,"distances_sum":2145.4317285686416}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9694768772893778,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.890625,"distances_sum":2145.4317285686416}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8008631993007,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.171875,"distances_sum":1306.7333060264584}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.806306714119215,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1953125,"distances_sum":1305.346424695052}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7061332764457768,"seconds":4.263594746589661e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.4609375,"distances_sum":1001.2691101338696}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.806306714119215,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1953125,"distances_sum":1305.346424695052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9196771978021986,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.765625,"distances_sum":1853.178738948214}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9264995421245429,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":1865.8495361667885}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.923391712454213,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6953125,"distances_sum":1898.394441991336}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9264995421245429,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":1865.8495361667885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9508241758241763,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8046875,"distances_sum":2040.0663252462762}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776041666666669,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2190.7140456778006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454217,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2140.8308339262744}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591002747252749,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.84375,"distances_sum":2095.947974114197}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9440934065934073,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.75,"distances_sum":2013.5147737439743}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675995879120884,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.921875,"distances_sum":2141.3936252491535}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705185439560444,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2153.0073320377096}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525698260073263,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.859375,"distances_sum":2048.830768518137}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776041666666669,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2190.7140456778006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776041666666669,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9296875,"distances_sum":2190.7140456778006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7701199841824851,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5859375,"distances_sum":1262.6730301219493}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.828125,"distances_sum":499.86422902364023}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.638671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.638671875,"f1":0.7701199841824851,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5859375,"distances_sum":1262.6730301219493}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9444113178488186,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2103.5178228875993}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9444113178488186,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2103.5178228875993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622252747252751,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":2204.9929945294116}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8984375,"distances_sum":2325.909190992419}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8984375,"distances_sum":2325.909190992419}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8984375,"distances_sum":2325.909190992419}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7865733225108233,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9140625,"distances_sum":1318.6626500142183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2861328125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2861328125,"f1":null,"seconds":3.6731362342834473e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.265625,"distances_sum":596.379012804625}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7865733225108233,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9140625,"distances_sum":1318.6626500142183}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2295.53623727732}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2295.53623727732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2295.53623727732}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2295.53623727732}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.1640625,"distances_sum":769.8321342014096}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2607421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2607421875,"f1":null,"seconds":3.676861524581909e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.90625,"distances_sum":488.0063090968246}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8434190809190817,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":1606.8450107913084}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8585653929403939,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2734375,"distances_sum":1610.35851582246}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8585653929403939,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2734375,"distances_sum":1610.35851582246}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978029,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2239.8231381572864}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641025641025647,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2240.8674518988946}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.9004979395604404,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6640625,"distances_sum":1810.1791240235013}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9641025641025647,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2240.8674518988946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699404761904765,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2265.317750636643}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681325,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9375,"distances_sum":2239.4659087122027}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715602106227111,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2276.4334143516917}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369966,"seconds":3.518536686897278e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2267.4268942618583}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715602106227111,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2276.4334143516917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9715602106227111,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2276.4334143516917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7636675824175834,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.703125,"distances_sum":1264.2840732702475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.775926157176158,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.7421875,"distances_sum":1300.9240645918774}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":6.09375,"distances_sum":621.6592340232883}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.775926157176158,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.7421875,"distances_sum":1300.9240645918774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9129381035631042,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7890625,"distances_sum":1917.2275753749036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464342948717953,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8203125,"distances_sum":2155.8755811754527}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9005551739926747,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.46875,"distances_sum":1839.604851056077}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8797483766233773,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.328125,"distances_sum":1715.8139561454861}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9455273892773896,"seconds":6.5583735704422e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8046875,"distances_sum":2170.2574305142743}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8379583957708965,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.171875,"distances_sum":1508.6715616366769}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9464342948717953,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8203125,"distances_sum":2155.8755811754527}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.921875,"distances_sum":2337.2380571019344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9509558150183154,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.8359375,"distances_sum":2158.260483333478}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715430402930407,"seconds":6.701797246932983e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.9765625,"distances_sum":2275.9274977087125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9643086080586083,"seconds":6.934627890586853e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.890625,"distances_sum":2255.0343637453934}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.921875,"distances_sum":2337.2380571019344}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084251,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.921875,"distances_sum":2337.2380571019344}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7905833749583757,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.828125,"distances_sum":1363.2690882622426}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7905833749583757,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.828125,"distances_sum":1363.2690882622426}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8410802738927747,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.2109375,"distances_sum":1542.2012535497233}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.734375,"f1":0.8410802738927747,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.2109375,"distances_sum":1542.2012535497233}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.9001774267399275,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.5390625,"distances_sum":1848.359436225321}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624484890109893,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2286.876877220216}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9624484890109893,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2286.876877220216}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9624484890109893,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2286.876877220216}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34765625,"f1":null,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.2109375,"distances_sum":674.6785007784891}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7748184107559115,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.3359375,"distances_sum":1219.3424202005908}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.151836037635803e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.6953125,"distances_sum":1067.9017275701322}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.7748184107559115,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.3359375,"distances_sum":1219.3424202005908}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8426693098568108,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.9453125,"distances_sum":1510.383720587411}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8859628219003227,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.140625,"distances_sum":1728.1862858223801}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.929942453379954,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.734375,"distances_sum":1971.8961098270993}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8849338161838172,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.078125,"distances_sum":1732.6789817768893}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8845243298368306,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.140625,"distances_sum":1690.1810959039267}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8339124417249425,"seconds":4.8138201236724854e-5,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.7734375,"distances_sum":1485.3894585156736}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.929942453379954,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.734375,"distances_sum":1971.8961098270993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543040293040296,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8046875,"distances_sum":2142.106873149548}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588827838827841,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8046875,"distances_sum":2157.9701748880293}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9321517024642029,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8203125,"distances_sum":1964.3659763885}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9375457875457881,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8125,"distances_sum":2000.1506166652475}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542124542124547,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2139.51029459409}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588827838827841,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8046875,"distances_sum":2157.9701748880293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588827838827841,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8046875,"distances_sum":2157.9701748880293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.171875,"distances_sum":830.9457525565787}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.40234375,"f1":null,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.171875,"distances_sum":830.9457525565787}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6987172549672557,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.875,"distances_sum":1152.3890029795498}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6987172549672557,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.875,"distances_sum":1152.3890029795498}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8748829295704303,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.265625,"distances_sum":1736.570749484609}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8748829295704303,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.265625,"distances_sum":1736.570749484609}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8748829295704303,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.265625,"distances_sum":1736.570749484609}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.776954816017317,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.125,"distances_sum":1374.64652458741}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.357421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.357421875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.3359375,"distances_sum":741.4171584885237}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.776954816017317,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.125,"distances_sum":1374.64652458741}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8012414668664677,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.328125,"distances_sum":1443.4156926006428}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502690018315024,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7109375,"distances_sum":2247.10705264721}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7920296717171726,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.2890625,"distances_sum":1483.3732294420743}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9295501373626381,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.46875,"distances_sum":2080.9786226794954}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8048664876789884,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.3984375,"distances_sum":1473.148299066589}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8706068237318245,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.96875,"distances_sum":1748.5476265299346}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8897206959706968,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.2734375,"distances_sum":1843.1587547738104}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9502690018315024,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7109375,"distances_sum":2247.10705264721}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9662202380952387,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2335.0679838243977}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9634329212454218,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.796875,"distances_sum":2333.8344216786268}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9662202380952387,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2335.0679838243977}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9662202380952387,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7890625,"distances_sum":2335.0679838243977}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.866644293206794,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.203125,"distances_sum":1813.7237424877917}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7955195845820853,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":7.5390625,"distances_sum":1462.6470431867924}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.866644293206794,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.203125,"distances_sum":1813.7237424877917}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.893226565101566,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.546875,"distances_sum":1962.361203970247}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9568681318681322,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.859375,"distances_sum":2363.53537959218}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8992309773559781,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.5703125,"distances_sum":2004.9773317899164}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9568681318681322,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.859375,"distances_sum":2363.53537959218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797447344322349,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2535.6543670924225}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9778273809523814,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9609375,"distances_sum":2524.0086280736023}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660542582417588,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.921875,"distances_sum":2439.4755116800125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622252747252752,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.8515625,"distances_sum":2442.324086219758}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600103021978026,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.9453125,"distances_sum":2384.2611786133166}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322349,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2535.6543670924225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322349,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.5404075384140015e-6,"evaluations":8.953125,"distances_sum":2535.6543670924225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8665672868797877,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.234375,"distances_sum":1798.8221655810491}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8665672868797877,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.234375,"distances_sum":1798.8221655810491}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9476820054945062,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.75,"distances_sum":2331.8423625277037}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9476820054945062,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.75,"distances_sum":2331.8423625277037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762648809523812,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.9296875,"distances_sum":2479.1036589608484}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545959249084253,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8046875,"distances_sum":2382.4200775583595}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967037,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.9140625,"distances_sum":2461.381449053897}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762648809523812,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.9296875,"distances_sum":2479.1036589608484}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762648809523812,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.9296875,"distances_sum":2479.1036589608484}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.265625,"f1":null,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.2421875,"distances_sum":605.5156363928196}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7055819180819185,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9453125,"distances_sum":1144.8237503307155}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.359375,"distances_sum":895.0583919047957}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7055819180819185,"seconds":3.982335329055786e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9453125,"distances_sum":1144.8237503307155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7150757228882235,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1015625,"distances_sum":1180.24594049273}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8671110139860149,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2109375,"distances_sum":1737.5040714280624}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8643797175047183,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1796875,"distances_sum":1727.8700706088991}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.897708021145522,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":1856.680037973861}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7977963009213018,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.546875,"distances_sum":1425.245870043989}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8064735611610621,"seconds":4.412606358528137e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.53125,"distances_sum":1461.350065804041}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8754209332334341,"seconds":4.798173904418945e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.25,"distances_sum":1749.9794943799618}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8663638444888454,"seconds":4.816800355911255e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2265625,"distances_sum":1710.5720821476593}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.897708021145522,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.640625,"distances_sum":1856.680037973861}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014658,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2335.3413987787494}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510473901098904,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.875,"distances_sum":2216.4061607993995}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9258704836829845,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6953125,"distances_sum":2025.1292934380756}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954078213453214,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2246.3648145507223}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.904573031135532,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6640625,"distances_sum":1906.9364496330631}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014658,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2335.3413987787494}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652014652014658,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":2335.3413987787494}}, n: 9
inertia(cfft.distances) = 19.30345096631838
inertia(cdnet.distances) = 25.050971501361886
inertia(crand.distances) = 21.515749817282284
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9444444444444443
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8933333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 10, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 2, 3, 1, 3, 2, 3, 2, 2, 3, 3, 1]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.4010666692255003] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4010666692255003, 0.1760802376463254] ***
*** starting iteration: 2; err: [Inf, 0.4010666692255003, 0.1760802376463254] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368] ***
*** starting iteration: 3; err: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** starting iteration: 4; err: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** finished computation of 12 references, err: [Inf, 0.4010666692255003, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.6523000176110372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6523000176110372, 1.0604261019852954] ***
*** finished computation of 3 references, err: [Inf, 1.6523000176110372, 1.0604261019852954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 38]]
** centroid: 1, normalized-entropy: 0.9792415350396869, [(2, 27), (3, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [27, 2, 0]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(1, 27), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.463807062569213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.463807062569213, 0.17707308256169718] ***
*** starting iteration: 2; err: [Inf, 0.463807062569213, 0.17707308256169718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386] ***
*** starting iteration: 3; err: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386, 0.16543136122658558] ***
*** starting iteration: 4; err: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386, 0.16543136122658558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386, 0.16543136122658558, 0.16464918437443363] ***
*** finished computation of 7 references, err: [Inf, 0.463807062569213, 0.17707308256169718, 0.17002950984470386, 0.16543136122658558, 0.16464918437443363] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 14]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 10), (3, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46568130509044947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46568130509044947, 0.20095394442459205] ***
*** starting iteration: 2; err: [Inf, 0.46568130509044947, 0.20095394442459205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964] ***
*** starting iteration: 3; err: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964, 0.16675323787675225] ***
*** starting iteration: 4; err: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964, 0.16675323787675225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964, 0.16675323787675225, 0.166387338453301] ***
*** finished computation of 7 references, err: [Inf, 0.46568130509044947, 0.20095394442459205, 0.17735335542828964, 0.16675323787675225, 0.166387338453301] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 5]]
** centroid: 5, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2666209499913937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617] ***
*** starting iteration: 2; err: [Inf, 0.2666209499913937, 0.18800864628207617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625] ***
*** starting iteration: 3; err: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835] ***
*** starting iteration: 4; err: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819] ***
*** starting iteration: 5; err: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819, 0.16498680104499147] ***
*** starting iteration: 6; err: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819, 0.16498680104499147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819, 0.16498680104499147, 0.16498680104499147] ***
*** finished computation of 7 references, err: [Inf, 0.2666209499913937, 0.18800864628207617, 0.18211720692971625, 0.176406159843835, 0.1669712783751819, 0.16498680104499147, 0.16498680104499147] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34765958490531657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34765958490531657, 0.1685516239066995] ***
*** starting iteration: 2; err: [Inf, 0.34765958490531657, 0.1685516239066995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34765958490531657, 0.1685516239066995, 0.16501487331897846] ***
*** starting iteration: 3; err: [Inf, 0.34765958490531657, 0.1685516239066995, 0.16501487331897846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34765958490531657, 0.1685516239066995, 0.16501487331897846, 0.16447411320835104] ***
*** finished computation of 7 references, err: [Inf, 0.34765958490531657, 0.1685516239066995, 0.16501487331897846, 0.16447411320835104] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4085487815547536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503] ***
*** starting iteration: 2; err: [Inf, 0.4085487815547536, 0.21866433672457503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736] ***
*** starting iteration: 3; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868] ***
*** starting iteration: 4; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197] ***
*** starting iteration: 5; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827] ***
*** starting iteration: 6; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415] ***
*** starting iteration: 7; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788] ***
*** starting iteration: 8; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788, 0.18037682133120303] ***
*** starting iteration: 9; err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788, 0.18037682133120303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788, 0.18037682133120303, 0.17987407802575725] ***
*** finished computation of 7 references, err: [Inf, 0.4085487815547536, 0.21866433672457503, 0.20302985309179736, 0.1919567672817868, 0.18911052010096197, 0.18751922286094827, 0.1850267855641415, 0.18194897839829788, 0.18037682133120303, 0.17987407802575725] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 4, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 10.752999917972097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.752999917972097, 1.1354678496170207] ***
*** finished computation of 3 references, err: [Inf, 10.752999917972097, 1.1354678496170207] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 32]]
** centroid: 2, normalized-entropy: 0.9975025463691153, [(2, 36), (3, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9833000013222004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9833000013222004, 0.8133960811432072] ***
*** finished computation of 3 references, err: [Inf, 2.9833000013222004, 0.8133960811432072] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 30]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 13), (3, 30)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5034685976946883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5034685976946883, 0.39859459959181703] ***
*** starting iteration: 2; err: [Inf, 0.5034685976946883, 0.39859459959181703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5034685976946883, 0.39859459959181703, 0.39859459959181703] ***
*** finished computation of 3 references, err: [Inf, 0.5034685976946883, 0.39859459959181703, 0.39859459959181703] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 10]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 28]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 2), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.44580194973326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037] ***
*** starting iteration: 2; err: [Inf, 9.44580194973326, 0.6810951067761037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127] ***
*** starting iteration: 3; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774] ***
*** starting iteration: 4; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977] ***
*** starting iteration: 5; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791] ***
*** starting iteration: 6; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076] ***
*** starting iteration: 7; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472] ***
*** starting iteration: 8; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472, 0.35654509888035774] ***
*** starting iteration: 9; err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472, 0.35654509888035774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472, 0.35654509888035774, 0.3564968410941632] ***
*** finished computation of 3 references, err: [Inf, 9.44580194973326, 0.6810951067761037, 0.445199260969127, 0.38964666289747774, 0.3744364643455977, 0.3643550403056791, 0.36070628928277076, 0.3576470572651472, 0.35654509888035774, 0.3564968410941632] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 4]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 28]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9486696307653019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527] ***
*** starting iteration: 2; err: [Inf, 0.9486696307653019, 0.4455490139521527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287] ***
*** starting iteration: 3; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872] ***
*** starting iteration: 4; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652] ***
*** starting iteration: 5; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023] ***
*** starting iteration: 6; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147] ***
*** starting iteration: 7; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885] ***
*** starting iteration: 8; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346] ***
*** starting iteration: 9; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738] ***
*** starting iteration: 10; err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426] ***
*** finished computation of 3 references, err: [Inf, 0.9486696307653019, 0.4455490139521527, 0.3868221906609287, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 2, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4453047396163784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453047396163784, 0.35726656157759806] ***
*** starting iteration: 2; err: [Inf, 0.4453047396163784, 0.35726656157759806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453047396163784, 0.35726656157759806, 0.3174577071234741] ***
*** starting iteration: 3; err: [Inf, 0.4453047396163784, 0.35726656157759806, 0.3174577071234741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453047396163784, 0.35726656157759806, 0.3174577071234741, 0.26307531996107997] ***
*** finished computation of 7 references, err: [Inf, 0.4453047396163784, 0.35726656157759806, 0.3174577071234741, 0.26307531996107997] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 11]]
** centroid: 1, normalized-entropy: 0.9283620723948678, [(2, 21), (3, 11)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5405623727158235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5405623727158235, 0.25918376275700583] ***
*** starting iteration: 2; err: [Inf, 0.5405623727158235, 0.25918376275700583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5405623727158235, 0.25918376275700583, 0.2269386723073566] ***
*** starting iteration: 3; err: [Inf, 0.5405623727158235, 0.25918376275700583, 0.2269386723073566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5405623727158235, 0.25918376275700583, 0.2269386723073566, 0.2235760825253669] ***
*** finished computation of 7 references, err: [Inf, 0.5405623727158235, 0.25918376275700583, 0.2269386723073566, 0.2235760825253669] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 1, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27590523353459806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27590523353459806, 0.17565196199384542] ***
*** starting iteration: 2; err: [Inf, 0.27590523353459806, 0.17565196199384542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27590523353459806, 0.17565196199384542, 0.17276149722886888] ***
*** starting iteration: 3; err: [Inf, 0.27590523353459806, 0.17565196199384542, 0.17276149722886888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27590523353459806, 0.17565196199384542, 0.17276149722886888, 0.17210274199717376] ***
*** finished computation of 7 references, err: [Inf, 0.27590523353459806, 0.17565196199384542, 0.17276149722886888, 0.17210274199717376] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5593924607961815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593924607961815, 0.20628993706966864] ***
*** starting iteration: 2; err: [Inf, 0.5593924607961815, 0.20628993706966864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593924607961815, 0.20628993706966864, 0.19137194488292206] ***
*** starting iteration: 3; err: [Inf, 0.5593924607961815, 0.20628993706966864, 0.19137194488292206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593924607961815, 0.20628993706966864, 0.19137194488292206, 0.18313536529475966] ***
*** finished computation of 7 references, err: [Inf, 0.5593924607961815, 0.20628993706966864, 0.19137194488292206, 0.18313536529475966] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 16]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47519256550898203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47519256550898203, 0.28483461015124095] ***
*** starting iteration: 2; err: [Inf, 0.47519256550898203, 0.28483461015124095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47519256550898203, 0.28483461015124095, 0.2101717946827011] ***
*** starting iteration: 3; err: [Inf, 0.47519256550898203, 0.28483461015124095, 0.2101717946827011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47519256550898203, 0.28483461015124095, 0.2101717946827011, 0.1892897816381124] ***
*** finished computation of 7 references, err: [Inf, 0.47519256550898203, 0.28483461015124095, 0.2101717946827011, 0.1892897816381124] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 2]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2844513306102207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2844513306102207, 0.17092586217453148] ***
*** starting iteration: 2; err: [Inf, 0.2844513306102207, 0.17092586217453148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2844513306102207, 0.17092586217453148, 0.1573771863232832] ***
*** starting iteration: 3; err: [Inf, 0.2844513306102207, 0.17092586217453148, 0.1573771863232832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2844513306102207, 0.17092586217453148, 0.1573771863232832, 0.14824523392829303] ***
*** finished computation of 7 references, err: [Inf, 0.2844513306102207, 0.17092586217453148, 0.1573771863232832, 0.14824523392829303] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3837502478865108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837502478865108, 0.22820407322626995] ***
*** starting iteration: 2; err: [Inf, 0.3837502478865108, 0.22820407322626995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837502478865108, 0.22820407322626995, 0.1897296352561355] ***
*** starting iteration: 3; err: [Inf, 0.3837502478865108, 0.22820407322626995, 0.1897296352561355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3837502478865108, 0.22820407322626995, 0.1897296352561355, 0.178274255329495] ***
*** finished computation of 7 references, err: [Inf, 0.3837502478865108, 0.22820407322626995, 0.1897296352561355, 0.178274255329495] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39553367752279217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39553367752279217, 0.23481126450256176] ***
*** starting iteration: 2; err: [Inf, 0.39553367752279217, 0.23481126450256176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39553367752279217, 0.23481126450256176, 0.21399573001308814] ***
*** starting iteration: 3; err: [Inf, 0.39553367752279217, 0.23481126450256176, 0.21399573001308814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39553367752279217, 0.23481126450256176, 0.21399573001308814, 0.20984187313403097] ***
*** finished computation of 7 references, err: [Inf, 0.39553367752279217, 0.23481126450256176, 0.21399573001308814, 0.20984187313403097] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37199871239610716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37199871239610716, 0.22200647817819916] ***
*** starting iteration: 2; err: [Inf, 0.37199871239610716, 0.22200647817819916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37199871239610716, 0.22200647817819916, 0.1990219867226438] ***
*** starting iteration: 3; err: [Inf, 0.37199871239610716, 0.22200647817819916, 0.1990219867226438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37199871239610716, 0.22200647817819916, 0.1990219867226438, 0.17449249248473175] ***
*** finished computation of 7 references, err: [Inf, 0.37199871239610716, 0.22200647817819916, 0.1990219867226438, 0.17449249248473175] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.77051732499311] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.77051732499311, 0.5795699827882528] ***
*** finished computation of 3 references, err: [Inf, 8.77051732499311, 0.5795699827882528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 37]]
** centroid: 2, normalized-entropy: 0.7765557854444601, [(2, 11), (3, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9285956706419084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9285956706419084, 0.3673312262897629] ***
*** finished computation of 3 references, err: [Inf, 0.9285956706419084, 0.3673312262897629] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46409863927226425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46409863927226425, 0.35524894729072787] ***
*** finished computation of 3 references, err: [Inf, 0.46409863927226425, 0.35524894729072787] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 4]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.696399996147492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.696399996147492, 1.0107918497291497] ***
*** starting iteration: 2; err: [Inf, 1.696399996147492, 1.0107918497291497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084] ***
*** starting iteration: 3; err: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305] ***
*** starting iteration: 4; err: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305, 0.9882915702801448] ***
*** starting iteration: 5; err: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305, 0.9882915702801448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305, 0.9882915702801448, 0.9879883531657466] ***
*** finished computation of 3 references, err: [Inf, 1.696399996147492, 1.0107918497291497, 0.9980969423671084, 0.9901026583371305, 0.9882915702801448, 0.9879883531657466] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 3, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 38]]
** centroid: 3, normalized-entropy: 0.9744894033980525, [(2, 26), (3, 38)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3050000098375267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638] ***
*** starting iteration: 2; err: [Inf, 1.3050000098375267, 0.9231615274727638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225] ***
*** starting iteration: 3; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877] ***
*** starting iteration: 4; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278] ***
*** starting iteration: 5; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376] ***
*** starting iteration: 6; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478] ***
*** starting iteration: 7; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149] ***
*** starting iteration: 8; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875] ***
*** starting iteration: 9; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875, 0.5612004287463348] ***
*** starting iteration: 10; err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875, 0.5612004287463348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875, 0.5612004287463348, 0.5439882802989885] ***
*** finished computation of 3 references, err: [Inf, 1.3050000098375267, 0.9231615274727638, 0.9064185085128225, 0.8940276942586877, 0.8909421081681278, 0.8763752781289376, 0.8287515816735478, 0.7202214696262149, 0.6022446908455875, 0.5612004287463348, 0.5439882802989885] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 2]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 30]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.966100018154247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.966100018154247, 0.9598233144656642] ***
*** starting iteration: 2; err: [Inf, 3.966100018154247, 0.9598233144656642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.966100018154247, 0.9598233144656642, 0.950030306238668] ***
*** starting iteration: 3; err: [Inf, 3.966100018154247, 0.9598233144656642, 0.950030306238668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.966100018154247, 0.9598233144656642, 0.950030306238668, 0.9493971016508184] ***
*** finished computation of 3 references, err: [Inf, 3.966100018154247, 0.9598233144656642, 0.950030306238668, 0.9493971016508184] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 30]]
** centroid: 2, normalized-entropy: 0.9971803988942641, [(2, 34), (3, 30)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 1, 0]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(1, 18), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.074800006392089] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.074800006392089, 0.6182424461888902] ***
*** finished computation of 3 references, err: [Inf, 1.074800006392089, 0.6182424461888902] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 14]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 28), (3, 14)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1201999974227377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1201999974227377, 0.9262752664342853] ***
*** finished computation of 3 references, err: [Inf, 1.1201999974227377, 0.9262752664342853] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 32]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 2, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 16), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8809000064230963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8809000064230963, 0.5291781806861776] ***
*** finished computation of 3 references, err: [Inf, 0.8809000064230963, 0.5291781806861776] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40880000246687237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40880000246687237, 0.29593160920097167] ***
*** starting iteration: 2; err: [Inf, 0.40880000246687237, 0.29593160920097167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40880000246687237, 0.29593160920097167, 0.2771316077915881] ***
*** starting iteration: 3; err: [Inf, 0.40880000246687237, 0.29593160920097167, 0.2771316077915881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40880000246687237, 0.29593160920097167, 0.2771316077915881, 0.2563869680474439] ***
*** finished computation of 7 references, err: [Inf, 0.40880000246687237, 0.29593160920097167, 0.2771316077915881, 0.2563869680474439] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 5]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 1), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5670000053040704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5670000053040704, 0.3602889749918852] ***
*** starting iteration: 2; err: [Inf, 0.5670000053040704, 0.3602889749918852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5670000053040704, 0.3602889749918852, 0.31977813731835064] ***
*** starting iteration: 3; err: [Inf, 0.5670000053040704, 0.3602889749918852, 0.31977813731835064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5670000053040704, 0.3602889749918852, 0.31977813731835064, 0.29526729184282535] ***
*** finished computation of 7 references, err: [Inf, 0.5670000053040704, 0.3602889749918852, 0.31977813731835064, 0.29526729184282535] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5238000005945525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5238000005945525, 0.3066535418695203] ***
*** starting iteration: 2; err: [Inf, 0.5238000005945525, 0.3066535418695203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5238000005945525, 0.3066535418695203, 0.2893850642315983] ***
*** starting iteration: 3; err: [Inf, 0.5238000005945525, 0.3066535418695203, 0.2893850642315983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5238000005945525, 0.3066535418695203, 0.2893850642315983, 0.26184869741048394] ***
*** finished computation of 7 references, err: [Inf, 0.5238000005945525, 0.3066535418695203, 0.2893850642315983, 0.26184869741048394] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.9313766641394845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9313766641394845, 0.6922482997911026] ***
*** finished computation of 3 references, err: [Inf, 2.9313766641394845, 0.6922482997911026] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 38]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(2, 28), (3, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 1, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 14), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6934588795208755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6934588795208755, 0.41152034699423523] ***
*** finished computation of 3 references, err: [Inf, 0.6934588795208755, 0.41152034699423523] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 31]]
** centroid: 1, normalized-entropy: 0.9580420222262997, [(2, 19), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9929590220822749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9929590220822749, 0.3645411646716741] ***
*** finished computation of 3 references, err: [Inf, 0.9929590220822749, 0.3645411646716741] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 4]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0767000050982927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0767000050982927, 0.6345235076973615] ***
*** starting iteration: 2; err: [Inf, 1.0767000050982927, 0.6345235076973615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0767000050982927, 0.6345235076973615, 0.595035044420943] ***
*** starting iteration: 3; err: [Inf, 1.0767000050982927, 0.6345235076973615, 0.595035044420943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0767000050982927, 0.6345235076973615, 0.595035044420943, 0.5877373261247508] ***
*** finished computation of 3 references, err: [Inf, 1.0767000050982927, 0.6345235076973615, 0.595035044420943, 0.5877373261247508] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 37]]
** centroid: 3, normalized-entropy: 0.6751914401458716, [(2, 8), (3, 37)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8646000062515047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000062515047, 0.5437541322668565] ***
*** starting iteration: 2; err: [Inf, 0.8646000062515047, 0.5437541322668565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000062515047, 0.5437541322668565, 0.5400560236561073] ***
*** starting iteration: 3; err: [Inf, 0.8646000062515047, 0.5437541322668565, 0.5400560236561073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8646000062515047, 0.5437541322668565, 0.5400560236561073, 0.5345366704265863] ***
*** finished computation of 3 references, err: [Inf, 0.8646000062515047, 0.5437541322668565, 0.5400560236561073, 0.5345366704265863] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 30]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 29), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7050999453062836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7050999453062836, 1.7715044864261678] ***
*** starting iteration: 2; err: [Inf, 3.7050999453062836, 1.7715044864261678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7050999453062836, 1.7715044864261678, 1.051766162470431] ***
*** starting iteration: 3; err: [Inf, 3.7050999453062836, 1.7715044864261678, 1.051766162470431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7050999453062836, 1.7715044864261678, 1.051766162470431, 0.495414514877979] ***
*** finished computation of 3 references, err: [Inf, 3.7050999453062836, 1.7715044864261678, 1.051766162470431, 0.495414514877979] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2442000230041437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2442000230041437, 0.6604778029253865] ***
*** starting iteration: 2; err: [Inf, 2.2442000230041437, 0.6604778029253865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198] ***
*** starting iteration: 3; err: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198, 0.49499262728850596] ***
*** starting iteration: 4; err: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198, 0.49499262728850596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198, 0.49499262728850596, 0.49435338127674755] ***
*** finished computation of 7 references, err: [Inf, 2.2442000230041437, 0.6604778029253865, 0.502534609883198, 0.49499262728850596, 0.49435338127674755] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 37]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(2, 8), (3, 37)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7204000022412235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7204000022412235, 0.3846824278206402] ***
*** starting iteration: 2; err: [Inf, 0.7204000022412235, 0.3846824278206402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474] ***
*** starting iteration: 3; err: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743] ***
*** starting iteration: 4; err: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743, 0.3586412834798444] ***
*** starting iteration: 5; err: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743, 0.3586412834798444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743, 0.3586412834798444, 0.3586412834798444] ***
*** finished computation of 7 references, err: [Inf, 0.7204000022412235, 0.3846824278206402, 0.37016290369441474, 0.3608948520740743, 0.3586412834798444, 0.3586412834798444] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 24]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 24)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5017000049849907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149] ***
*** starting iteration: 2; err: [Inf, 0.5017000049849907, 0.2866804083022149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847] ***
*** starting iteration: 3; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175] ***
*** starting iteration: 4; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107] ***
*** starting iteration: 5; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229] ***
*** starting iteration: 6; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534] ***
*** starting iteration: 7; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306] ***
*** starting iteration: 8; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718] ***
*** starting iteration: 9; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718, 0.24043185496514585] ***
*** starting iteration: 10; err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718, 0.24043185496514585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718, 0.24043185496514585, 0.2373133335817773] ***
*** finished computation of 7 references, err: [Inf, 0.5017000049849907, 0.2866804083022149, 0.27204461334728847, 0.2662294121193175, 0.26137738025924107, 0.2543417911879229, 0.25178930365167534, 0.24750043963789306, 0.2460795929486718, 0.24043185496514585, 0.2373133335817773] ***
*** center 1: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1737727435615701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1737727435615701, 0.4402927381759949] ***
*** starting iteration: 2; err: [Inf, 1.1737727435615701, 0.4402927381759949] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601] ***
*** starting iteration: 3; err: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292] ***
*** starting iteration: 4; err: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292, 0.3993747839090986] ***
*** starting iteration: 5; err: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292, 0.3993747839090986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292, 0.3993747839090986, 0.39904367213978154] ***
*** finished computation of 3 references, err: [Inf, 1.1737727435615701, 0.4402927381759949, 0.4174579779490601, 0.4067064342579292, 0.3993747839090986, 0.39904367213978154] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 11]]
** centroid: 1, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1805431338148207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1805431338148207, 0.6324790459844202] ***
*** starting iteration: 2; err: [Inf, 1.1805431338148207, 0.6324790459844202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168] ***
*** starting iteration: 3; err: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733] ***
*** starting iteration: 4; err: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733, 0.615849819835141] ***
*** starting iteration: 5; err: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733, 0.615849819835141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733, 0.615849819835141, 0.6156518501808159] ***
*** finished computation of 3 references, err: [Inf, 1.1805431338148207, 0.6324790459844202, 0.6219554888568168, 0.6173457708697733, 0.615849819835141, 0.6156518501808159] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 32]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 36), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8503454659127874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929] ***
*** starting iteration: 2; err: [Inf, 0.8503454659127874, 0.3935058944618929] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872] ***
*** starting iteration: 3; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652] ***
*** starting iteration: 4; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023] ***
*** starting iteration: 5; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147] ***
*** starting iteration: 6; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885] ***
*** starting iteration: 7; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346] ***
*** starting iteration: 8; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738] ***
*** starting iteration: 9; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426] ***
*** starting iteration: 10; err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426, 0.3322823905555426] ***
*** finished computation of 3 references, err: [Inf, 0.8503454659127874, 0.3935058944618929, 0.3766112472193872, 0.3638036110372652, 0.3548388010399023, 0.3498545256552147, 0.3397703095277885, 0.33625799654754346, 0.3337219623391738, 0.3322823905555426, 0.3322823905555426] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9147180550980355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9147180550980355, 0.4369618879140677] ***
*** starting iteration: 2; err: [Inf, 0.9147180550980355, 0.4369618879140677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9147180550980355, 0.4369618879140677, 0.4174579779490601] ***
*** starting iteration: 3; err: [Inf, 0.9147180550980355, 0.4369618879140677, 0.4174579779490601] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9147180550980355, 0.4369618879140677, 0.4174579779490601, 0.4067064342579292] ***
*** finished computation of 3 references, err: [Inf, 0.9147180550980355, 0.4369618879140677, 0.4174579779490601, 0.4067064342579292] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 11]]
** centroid: 1, normalized-entropy: 0.8582307926411409, [(2, 28), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8232561268573001] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8232561268573001, 0.43631934411226075] ***
*** starting iteration: 2; err: [Inf, 0.8232561268573001, 0.43631934411226075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8232561268573001, 0.43631934411226075, 0.3974704776617966] ***
*** starting iteration: 3; err: [Inf, 0.8232561268573001, 0.43631934411226075, 0.3974704776617966] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8232561268573001, 0.43631934411226075, 0.3974704776617966, 0.37322780889502455] ***
*** finished computation of 3 references, err: [Inf, 0.8232561268573001, 0.43631934411226075, 0.3974704776617966, 0.37322780889502455] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7072202610367085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7072202610367085, 0.36308313334098324] ***
*** starting iteration: 2; err: [Inf, 0.7072202610367085, 0.36308313334098324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7072202610367085, 0.36308313334098324, 0.33445827922647303] ***
*** starting iteration: 3; err: [Inf, 0.7072202610367085, 0.36308313334098324, 0.33445827922647303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7072202610367085, 0.36308313334098324, 0.33445827922647303, 0.3322823905555426] ***
*** finished computation of 3 references, err: [Inf, 0.7072202610367085, 0.36308313334098324, 0.33445827922647303, 0.3322823905555426] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25815316598422455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815316598422455, 0.18035406795046882] ***
*** starting iteration: 2; err: [Inf, 0.25815316598422455, 0.18035406795046882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597] ***
*** starting iteration: 3; err: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597, 0.16524147952130874] ***
*** starting iteration: 4; err: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597, 0.16524147952130874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597, 0.16524147952130874, 0.16498680104499147] ***
*** finished computation of 7 references, err: [Inf, 0.25815316598422455, 0.18035406795046882, 0.1691164698887597, 0.16524147952130874, 0.16498680104499147] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.7002000073249708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7002000073249708, 0.2549184920366372] ***
*** starting iteration: 2; err: [Inf, 0.7002000073249708, 0.2549184920366372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772] ***
*** starting iteration: 3; err: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384] ***
*** starting iteration: 4; err: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384, 0.2364727404621815] ***
*** starting iteration: 5; err: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384, 0.2364727404621815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384, 0.2364727404621815, 0.2364727404621815] ***
*** finished computation of 7 references, err: [Inf, 0.7002000073249708, 0.2549184920366372, 0.24283133747051772, 0.2381417682007384, 0.2364727404621815, 0.2364727404621815] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 14]]
** centroid: 5, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5070000031195238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713] ***
*** starting iteration: 2; err: [Inf, 0.5070000031195238, 0.29763019006451713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974] ***
*** starting iteration: 3; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509] ***
*** starting iteration: 4; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164] ***
*** starting iteration: 5; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136] ***
*** starting iteration: 6; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935] ***
*** starting iteration: 7; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074] ***
*** starting iteration: 8; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074, 0.26470479520479107] ***
*** starting iteration: 9; err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074, 0.26470479520479107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074, 0.26470479520479107, 0.26396053895897253] ***
*** finished computation of 7 references, err: [Inf, 0.5070000031195238, 0.29763019006451713, 0.29141340546107974, 0.2872760083651509, 0.2819820131054164, 0.2736071275988136, 0.2685715824006935, 0.265969529108074, 0.26470479520479107, 0.26396053895897253] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 6]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3911999996122732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487] ***
*** starting iteration: 2; err: [Inf, 0.3911999996122732, 0.24020274998980487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946] ***
*** starting iteration: 3; err: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746] ***
*** starting iteration: 4; err: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433] ***
*** starting iteration: 5; err: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433, 0.20433671309633258] ***
*** starting iteration: 6; err: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433, 0.20433671309633258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433, 0.20433671309633258, 0.20433671309633258] ***
*** finished computation of 7 references, err: [Inf, 0.3911999996122732, 0.24020274998980487, 0.22515240155128946, 0.2177226723716746, 0.21106388028039433, 0.20433671309633258, 0.20433671309633258] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 3, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.9354999977040819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9354999977040819, 0.26825865509464675] ***
*** finished computation of 7 references, err: [Inf, 0.9354999977040819, 0.26825865509464675] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 13]]
** centroid: 1, normalized-entropy: 1.0, [(2, 13), (3, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9508999957564549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9508999957564549, 0.302343886002891] ***
*** finished computation of 7 references, err: [Inf, 0.9508999957564549, 0.302343886002891] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 2]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 20), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0736999927408608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0736999927408608, 0.43497175987842185] ***
*** finished computation of 7 references, err: [Inf, 1.0736999927408608, 0.43497175987842185] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 6]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(2, 10), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0898966056747519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0898966056747519, 0.4598562806675845] ***
*** finished computation of 7 references, err: [Inf, 1.0898966056747519, 0.4598562806675845] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 37]]
** centroid: 1, normalized-entropy: 0.8667256130949592, [(2, 15), (3, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6872163368808575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6872163368808575, 0.22948835690982233] ***
*** finished computation of 7 references, err: [Inf, 0.6872163368808575, 0.22948835690982233] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 17]]
** centroid: 4, normalized-entropy: 0.9784493292686188, [(2, 12), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 6, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5236380585155842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5236380585155842, 0.20576809274073138] ***
*** finished computation of 7 references, err: [Inf, 0.5236380585155842, 0.20576809274073138] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 4]]
** centroid: 6, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9, 0.8999999999999999, 0.8866666666666667, 0.88, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1) => 0.9733333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.327272727272728, 3.0090909090909093, 6.1909090909090905, 2.1090909090909093], [4.809090909090909, 3.213636363636364, 1.468181818181818, 0.2318181818181819], [6.0, 2.7, 5.1, 1.6], [6.3, 2.5, 5.340000000000001, 1.7], [6.208333333333333, 3.033333333333333, 4.558333333333333, 1.4666666666666668], [5.985714285714286, 2.7714285714285714, 4.942857142857143, 1.8571428571428574], [5.513333333333334, 2.5733333333333333, 3.7599999999999993, 1.146666666666667], [4.9, 2.5, 4.5, 1.7], [5.40909090909091, 3.909090909090909, 1.4909090909090907, 0.2636363636363636], [6.7, 3.0, 5.0, 1.7], [6.4750000000000005, 3.08125, 5.5375000000000005, 2.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 2, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.558333333333334, 3.0083333333333333, 4.716666666666666, 1.5083333333333335], [6.0625, 2.75, 5.062500000000001, 1.8250000000000002], [5.742857142857143, 2.721428571428571, 4.214285714285714, 1.3285714285714285], [5.23888888888889, 3.6500000000000004, 1.4888888888888887, 0.2666666666666668], [6.683333333333333, 3.033333333333333, 5.349999999999999, 2.216666666666667], [7.566666666666667, 3.233333333333334, 6.316666666666667, 2.033333333333333], [4.728571428571428, 3.135714285714286, 1.407142857142857, 0.20714285714285713], [6.666666666666667, 3.25, 5.766666666666667, 2.316666666666667]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 3, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.43, 3.11, 5.58, 2.12], [5.36, 3.7600000000000002, 1.52, 0.29000000000000004], [5.7387096774193544, 2.65483870967742, 4.235483870967743, 1.354838709677419], [6.408333333333332, 2.9416666666666664, 4.675, 1.4416666666666667], [5.95, 2.7375, 5.0125, 1.7750000000000001], [6.725, 2.9749999999999996, 5.25, 2.15], [7.500000000000001, 3.2375000000000003, 6.362500000000001, 2.0374999999999996], [4.848, 3.236, 1.44, 0.23199999999999996]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 2, 3, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :rand, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[60, 1, 13, 17, 34, 1, 24, 22, 6, 17, 1, 30, 26, 12, 22, 1, 33, 15, 29, 1, 32, 1, 42, 2, 28, 23, 2, 14, 1, 34, 34, 28, 5, 27, 29, 27, 47, 59, 36, 28, 38, 16, 31, 1, 29, 28, 26, 32, 31, 43, 20, 36, 38, 31, 41, 49, 40, 20, 36, 26, 44, 30, 33, 38, 39, 23, 34, 36, 30, 34, 25, 38, 45, 39, 31, 35, 49, 57, 39, 68, 38, 36, 19, 31, 24, 41, 34, 32, 14, 64, 58, 26, 38, 49, 1, 33, 34, 33, 49, 32, 36, 38, 50, 32, 34, 26, 30, 50, 53, 30, 29, 26, 18, 32, 2, 47, 42, 40, 46, 48, 34, 9, 29, 38, 34, 24, 50, 27, 36, 22, 46, 29, 28, 41, 35, 39, 15, 48, 38, 36, 28, 21, 31, 29, 22, 33, 55, 19, 1, 36, 68, 53, 22, 44, 34, 41, 35, 44, 32, 22, 48, 13, 18, 37, 33, 48, 28, 37, 39, 37, 47, 39, 61, 49, 36, 36, 33, 14, 55, 45, 13, 55, 43, 12, 25, 38, 31, 40, 68, 13, 31, 36, 40, 32, 46, 1, 38, 20, 12, 21, 31, 26, 35, 54, 35, 54, 37, 33, 50, 50, 26, 33, 21, 35, 27, 26, 54, 24, 85, 30, 27, 26, 30, 24, 28, 30, 40, 46, 49, 41, 34, 1, 31, 36, 46, 24, 32, 41, 34, 59, 26, 74, 51, 42, 27, 38, 25, 25, 56, 35, 46, 43, 1, 4, 29, 44, 39, 60, 47, 27, 38, 22, 29, 50, 32, 42, 49, 27, 41, 47, 57, 43, 54, 49, 36, 36, 57, 19, 25, 52, 29, 34, 39, 39, 70, 41, 33, 24, 11, 35, 1, 42, 50, 20, 42, 34, 55, 32, 12, 34]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6, speedup = 0.287782747535705, eval_ratio = 0.041724000000000004)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3967013888888888,"recall":0.3967013888888888,"f1":null,"seconds":7.051602005958557e-5,"exhaustive_search_seconds":0.0003591720014810562,"evaluations":340.4296875,"distances_sum":1742.9850336753675}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5598958333333334,"recall":0.5598958333333334,"f1":0.5598958333333334,"seconds":0.00010421499609947205,"exhaustive_search_seconds":0.0003591720014810562,"evaluations":379.7109375,"distances_sum":1624.990486226183}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6744791666666665,"recall":0.6744791666666665,"f1":0.6744791666666665,"seconds":0.00013619661331176758,"exhaustive_search_seconds":0.0003591720014810562,"evaluations":418.8125,"distances_sum":1580.0816460454078}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7604166666666659,"recall":0.7604166666666659,"f1":0.7604166666666659,"seconds":0.00016964413225650787,"exhaustive_search_seconds":0.0003591720014810562,"evaluations":457.984375,"distances_sum":1553.2562999715326}
KCenters.DeloneInvIndex> reached performance {"precision":0.8064236111111104,"recall":0.8064236111111104,"f1":0.8064236111111104,"seconds":0.00020570680499076843,"exhaustive_search_seconds":0.0003591720014810562,"evaluations":498.796875,"distances_sum":1539.362847838227}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7320000000000002, speedup = 1.9470045805931928, eval_ratio = 0.049519)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
