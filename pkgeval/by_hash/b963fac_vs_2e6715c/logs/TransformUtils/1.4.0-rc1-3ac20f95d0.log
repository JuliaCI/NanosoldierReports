Julia Version 1.4.0-rc1.4
Commit 3ac20f95d0 (2020-01-26 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.3
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_DOitYl/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.3
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.16162955615695176 0.07056607495746585; 0.16162955615695176 0.0 -0.13255732558268848; -0.07056607495746585 0.13255732558268848 0.0])
dAA = so3([0.0 0.04862484135500163 0.0239821356598498; -0.04862484135500163 0.0 -0.10717661906386403; -0.0239821356598498 0.10717661906386403 0.0])
dAA = so3([0.0 0.1450573711259686 0.14094810595336876; -0.1450573711259686 0.0 0.07471593906807743; -0.14094810595336876 -0.07471593906807743 0.0])
dAA = Quaternion(0.999277039242774, [0.02062305287829461, -0.028829931167291163, 0.013744948201574625])
dAA = SO3([0.9986300292415442 -0.029856365923621432 0.042972806644058434; 0.02630009100741132 0.9963616053232223 0.08106698866205479; -0.04523682029093887 -0.07982574053252907 0.995781844200023])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9908828200569584 0.1277156456778902 0.04289464727736026; -0.11177146150418595 0.9570392466335316 -0.2675500341923746; -0.07522218628295661 0.26031633496997864 0.9625887119837891]), [1.325573255826885, 0.7056607495746584, 1.6162955615695176])
xj = SE3(SO3([0.9872800900818127 -0.07277656004330632 -0.14135627342396487; 0.0580827621185029 0.99272883753396 -0.10543172138003729; 0.14800140699578868 0.09588027657832157 0.9843284797721396]), [-0.7471593906807743, 1.4094810595336875, -1.450573711259686])
Dx = SE3(SO3([0.9606538952289927 -0.19028412012391413 -0.20232658552457122; 0.22020578090955484 0.9657449556235124 0.1372810793290649; 0.16927346996909157 -0.17643308736290847 0.9696483166840519]), [-1.901805582929848, -0.38949289799274234, -3.229350026922364])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
