Julia Version 1.4.0-rc1.4
Commit 3ac20f95d0 (2020-01-26 14:15 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PrettyPrint ──────── v0.1.0
  Installed NameResolution ───── v0.1.3
  Installed OrderedCollections ─ v1.1.0
  Installed DataStructures ───── v0.17.9
   Updating `~/.julia/environments/v1.4/Project.toml`
  [71a1bf82] + NameResolution v0.1.3
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [864edb3b] + DataStructures v0.17.9
  [71a1bf82] + NameResolution v0.1.3
  [bac558e1] + OrderedCollections v1.1.0
  [8162dcfd] + PrettyPrint v0.1.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
    Testing NameResolution
Status `/tmp/jl_JK661N/Manifest.toml`
  [864edb3b] DataStructures v0.17.9
  [71a1bf82] NameResolution v0.1.3
  [bac558e1] OrderedCollections v1.1.0
  [8162dcfd] PrettyPrint v0.1.0
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
test case:
function f(x)
    y = 1 + x
    g -> begin
        y = 2
        y + g
    end
end

f Scope(
  bounds={
    f=>LocalVar(f, is_mutable=false, is_shared=false),
    
    y=>LocalVar(y, is_mutable=true, is_shared=true),
    
    x=>LocalVar(x, is_mutable=false, is_shared=false),
  },
  freevars={},
  parent=nothing,
)
lambda Scope(
  bounds={
    g=>LocalVar(g, is_mutable=false, is_shared=false),
  },
  freevars={
    y=>LocalVar(y, is_mutable=true, is_shared=true),
  },
  parent=Scope(
    bounds={
      f=>LocalVar(f, is_mutable=false, is_shared=false),
      
      y=>LocalVar(y, is_mutable=true, is_shared=true),
      
      x=>LocalVar(x, is_mutable=false, is_shared=false),
    },
    freevars={},
    parent=nothing,
  ),
)
Test Summary: | Pass  Total
share freevar |    3      3
test case:
function f(x)
    y = 1 + x
    g -> begin
        local y = 2
        y + g
    end
end

f Scope(
  bounds={
    f=>LocalVar(f, is_mutable=false, is_shared=false),
    
    y=>LocalVar(y, is_mutable=false, is_shared=false),
    
    x=>LocalVar(x, is_mutable=false, is_shared=false),
  },
  freevars={},
  parent=nothing,
)
lambda Scope(
  bounds={
    y=>LocalVar(y, is_mutable=false, is_shared=false),
    
    g=>LocalVar(g, is_mutable=false, is_shared=false),
  },
  freevars={},
  parent=Scope(
    bounds={
      f=>LocalVar(f, is_mutable=false, is_shared=false),
      
      y=>LocalVar(y, is_mutable=false, is_shared=false),
      
      x=>LocalVar(x, is_mutable=false, is_shared=false),
    },
    freevars={},
    parent=nothing,
  ),
)
Test Summary: | Pass  Total
local         |    2      2
test case:
function f(x)
    y = 1 + x
    g -> begin
        local y = 2
        y += 1
        y + g
    end
end

f Scope(
  bounds={
    f=>LocalVar(f, is_mutable=false, is_shared=false),
    
    y=>LocalVar(y, is_mutable=false, is_shared=false),
    
    x=>LocalVar(x, is_mutable=false, is_shared=false),
  },
  freevars={},
  parent=nothing,
)
lambda Scope(
  bounds={
    y=>LocalVar(y, is_mutable=true, is_shared=false),
    
    g=>LocalVar(g, is_mutable=false, is_shared=false),
  },
  freevars={},
  parent=Scope(
    bounds={
      f=>LocalVar(f, is_mutable=false, is_shared=false),
      
      y=>LocalVar(y, is_mutable=false, is_shared=false),
      
      x=>LocalVar(x, is_mutable=false, is_shared=false),
    },
    freevars={},
    parent=nothing,
  ),
)
Test Summary:   | Pass  Total
local + mutable |    3      3
Test Summary:   | Pass  Total
scope extrusion |    1      1
Test Summary: | Pass  Total
deeper scope  |    1      1
Test Summary: | Pass  Total
uninitialized |    1      1
    Testing NameResolution tests passed 
