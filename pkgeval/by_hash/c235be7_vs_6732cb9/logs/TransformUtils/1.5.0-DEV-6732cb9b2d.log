Julia Version 1.5.0-DEV.439
Commit 6732cb9b2d (2020-03-11 21:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.3
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.3
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.3
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_if282G/Project.toml`
   9b8138ad TransformUtils v0.2.3
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_if282G/Manifest.toml`
   9b8138ad TransformUtils v0.2.3
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/hYnkL/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.16947152128096768 -0.13398041190818533; -0.16947152128096768 0.0 -0.03585095181456936; 0.13398041190818533 0.03585095181456936 0.0])
dAA = so3([0.0 -0.025347210902500646 -0.030507644769251965; 0.025347210902500646 0.0 0.10102462029721167; 0.030507644769251965 -0.10102462029721167 0.0])
dAA = so3([0.0 0.09038432981544234 -0.18015752585689176; -0.09038432981544234 0.0 -0.08334848859522215; 0.18015752585689176 0.08334848859522215 0.0])
dAA = Quaternion(0.9900485966748963, [0.13675272889444032, -0.03235310716549816, 0.007466178321630313])
dAA = SO3([0.9498310487244217 0.2126179227168999 -0.2293787213727901; -0.19070670484452162 0.9749980952732733 0.11405992697189345; 0.2478950011726945 -0.06459359993869003 0.9666311267699539])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9951138449985709 -0.05302098111533023 -0.08328992168160493; 0.07216573987757856 0.9663060530994124 0.24707229252054388; 0.06738354012725775 -0.25187573782522865 0.9654108302763725]), [0.3585095181456936, -1.3398041190818533, -1.6947152128096767])
xj = SE3(SO3([0.9867765227276553 -0.06806172118949577 -0.14710437213842642; -0.04072867108137889 0.7743286042037649 -0.631471605112846; 0.15688616747649284 0.629112720281964 0.7613172240491906]), [0.8334848859522214, -1.8015752585689175, -0.9038432981544233])
Dx = SE3(SO3([0.9895873103645825 0.03054267779232553 -0.14065596325312976; -0.13119203996493964 0.5933888859677259 -0.7941525537702555; 0.05920813977173463 0.8043362324570835 0.5912170678706048]), [0.49262225799906123, -0.6705973542687232, 0.6098647965314024])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
