Julia Version 1.6.0-DEV.1140
Commit 4ccfd37dc9 (2020-10-06 08:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_PBKI30/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_PBKI30/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723314810992797
curgen: 20 fitness: 0.21723314810992797
curgen: 30 fitness: 0.21723314810992797
curgen: 40 fitness: 0.21723314810992797
curgen: 50 fitness: 0.21723314810992797
CoordinateCreature{Vector{Float64}}([-0.2224440632859977], -0.21723314810992797) -0.2224440632859977 -0.21723314810992797
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579561926037033
curgen: 100 fitness: 3.258314744885846
curgen: 150 fitness: 3.258314744885846
curgen: 200 fitness: 3.258323447082658
curgen: 250 fitness: 3.258379860716195
curgen: 300 fitness: 3.258419708079825
curgen: 350 fitness: 3.2584215212811034
curgen: 400 fitness: 3.2584215212811034
curgen: 450 fitness: 3.2584215704697765
curgen: 500 fitness: 3.258434734048682
CoordinateCreature{Vector{Float64}}([0.2223753127851832, -0.22253168704669868, -0.22285591933355486, -0.2225617748794954, -0.221708975344933, 0.22285251231561032, 0.222668427625522, 0.22273557951946915, -0.22249360108179447, -0.22249716351013013, -0.2224080806527251, 0.2228211088313755, 0.2222660157358595, 0.2231960890629392, -0.22258882946969444], -3.258434734048682) [0.2223753127851832, -0.22253168704669868, -0.22285591933355486, -0.2225617748794954, -0.221708975344933, 0.22285251231561032, 0.222668427625522, 0.22273557951946915, -0.22249360108179447, -0.22249716351013013, -0.2224080806527251, 0.2228211088313755, 0.2222660157358595, 0.2231960890629392, -0.22258882946969444] -3.258434734048682
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.006031533043284298
curgen: 100 fitness: -0.0046226815574925695
curgen: 150 fitness: -0.0034842065700786407
curgen: 200 fitness: -0.00347115958413724
curgen: 250 fitness: -0.0015000065772881044
curgen: 300 fitness: -0.0015000065772881044
curgen: 350 fitness: -0.0012115459702783937
curgen: 400 fitness: -0.0012115459702783937
curgen: 450 fitness: -0.0012115459702783937
curgen: 500 fitness: -0.0012115459702783937
CoordinateCreature{Vector{Float64}}([-0.0011934232930413732, 6.233425448264832e-5, 0.0009212669592331673, -4.51344860277126e-5, -0.0004732904619013491, 8.912757400092453e-5, 0.0009648216913196717, 0.00023850300110634303, -0.001122247924681542, -0.0010504896309302394, 0.00013267620752899868, 0.0002831557440280104, 1.7827704570631104e-5, 0.0003790480539730151, -5.895961781043988e-5], 0.0012115459702783937) [-0.0011934232930413732, 6.233425448264832e-5, 0.0009212669592331673, -4.51344860277126e-5, -0.0004732904619013491, 8.912757400092453e-5, 0.0009648216913196717, 0.00023850300110634303, -0.001122247924681542, -0.0010504896309302394, 0.00013267620752899868, 0.0002831557440280104, 1.7827704570631104e-5, 0.0003790480539730151, -5.895961781043988e-5] 0.0012115459702783937
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
