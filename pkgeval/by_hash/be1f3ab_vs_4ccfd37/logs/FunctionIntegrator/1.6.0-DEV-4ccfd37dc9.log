Julia Version 1.6.0-DEV.1140
Commit 4ccfd37dc9 (2020-10-06 08:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_rDxtdY/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_rDxtdY/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.221459 seconds (379.85 k allocations: 15.438 MiB, 5.58% gc time, 92.79% compilation time)
Running: chebyshev_quadrature with k=1
  1.499658 seconds (2.19 M allocations: 126.579 MiB, 3.33% gc time, 97.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.258939 seconds (409.38 k allocations: 23.587 MiB, 87.34% compilation time)
Running: chebyshev_quadrature with k=3
  0.258887 seconds (473.74 k allocations: 26.617 MiB, 8.85% gc time, 88.17% compilation time)
Running: chebyshev_quadrature with k=4
  0.303335 seconds (418.55 k allocations: 23.255 MiB, 8.18% gc time, 92.09% compilation time)
Running: jacobi_quadrature with α=β=1
 30.040467 seconds (36.41 M allocations: 3.000 GiB, 10.80% gc time, 80.13% compilation time)
Running: laguerre_quadrature with k=1
  2.192657 seconds (3.17 M allocations: 177.057 MiB, 2.98% gc time, 99.86% compilation time)
Running: legendre_quadrature
  0.183303 seconds (206.04 k allocations: 11.825 MiB, 99.10% compilation time)
Running: lobatto_quadrature
  0.341457 seconds (329.31 k allocations: 19.881 MiB, 11.18% gc time, 99.35% compilation time)
Running: radau_quadrature
  0.281482 seconds (448.18 k allocations: 27.341 MiB, 99.34% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.715566 seconds (100.02 M allocations: 1.491 GiB, 0.58% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.088807 seconds (172.46 k allocations: 3.827 MiB, 22.36% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 49.597094 seconds (100.02 M allocations: 1.491 GiB, 0.50% gc time, 0.05% compilation time)
Running: rombergs_method
  0.521233 seconds (722.72 k allocations: 41.706 MiB, 4.69% gc time, 99.50% compilation time)
Running: simpsons_rule
  0.031181 seconds (45.77 k allocations: 2.043 MiB, 94.90% compilation time)
Running: simpsons38_rule
  0.092147 seconds (108.48 k allocations: 5.753 MiB, 98.31% compilation time)
Running: trapezoidal_rule
  0.214323 seconds (1.51 M allocations: 25.674 MiB, 7.58% gc time, 35.66% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.063285 seconds (30.96 k allocations: 1.864 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.366761 seconds (292.13 k allocations: 15.440 MiB, 99.52% compilation time)
Running: chebyshev_quadrature with k=2
  0.155738 seconds (93.80 k allocations: 2.675 MiB, 97.98% compilation time)
Running: chebyshev_quadrature with k=3
  0.158096 seconds (82.06 k allocations: 2.476 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=4
  0.304216 seconds (64.67 k allocations: 2.122 MiB, 53.59% gc time, 99.45% compilation time)
Running: jacobi_quadrature with α=β=1
  1.570557 seconds (503.50 k allocations: 161.784 MiB, 2.57% gc time, 22.74% compilation time)
Running: legendre_quadrature
  0.187505 seconds (41.09 k allocations: 2.365 MiB, 99.88% compilation time)
Running: lobatto_quadrature
  0.019600 seconds (15.48 k allocations: 984.872 KiB, 99.31% compilation time)
Running: radau_quadrature
  0.019369 seconds (15.59 k allocations: 992.087 KiB, 99.28% compilation time)
Running: rectangle_rule_left
 13.707975 seconds (471.41 M allocations: 7.025 GiB, 3.83% gc time)
Running: rectangle_rule_midpoint
  0.000016 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.526092 seconds (476.96 M allocations: 7.107 GiB, 3.73% gc time)
Running: rombergs_method
  0.312775 seconds (326.27 k allocations: 18.513 MiB, 2.13% gc time, 99.88% compilation time)
Running: simpsons_rule
  0.000025 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.063166 seconds (18.91 k allocations: 1.146 MiB, 99.86% compilation time)
Running: trapezoidal_rule
  0.052544 seconds (17.40 k allocations: 1.054 MiB, 99.83% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029462 seconds (1.99 k allocations: 53.594 KiB, 99.40% compilation time)
Running: chebyshev_quadrature with k=1
  0.098428 seconds (2.46 k allocations: 116.359 KiB, 99.88% compilation time)
Running: chebyshev_quadrature with k=2
  0.101290 seconds (2.71 k allocations: 124.266 KiB, 99.84% compilation time)
Running: chebyshev_quadrature with k=3
  0.099943 seconds (2.31 k allocations: 109.297 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=4
  0.112762 seconds (2.31 k allocations: 109.297 KiB, 99.89% compilation time)
Running: jacobi_quadrature with α=β=1
  0.257059 seconds (363.66 k allocations: 18.977 MiB, 99.20% compilation time)
Running: legendre_quadrature
  0.078762 seconds (1.28 k allocations: 65.891 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000089 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000379 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000268 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000350 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074350 seconds (1.04 k allocations: 56.531 KiB, 99.71% compilation time)
Running: simpsons_rule
  0.000028 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022552 seconds (923 allocations: 39.281 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.019974 seconds (44.33 k allocations: 704.859 KiB, 93.63% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.045253 seconds (72.31 k allocations: 4.214 MiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.158919 seconds (230.61 k allocations: 12.965 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.171011 seconds (283.17 k allocations: 15.898 MiB, 98.21% compilation time)
Running: chebyshev_quadrature with k=3
  0.141933 seconds (234.76 k allocations: 13.133 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=4
  0.178226 seconds (234.76 k allocations: 13.067 MiB, 18.28% gc time, 98.95% compilation time)
Running: jacobi_quadrature with α=β=1
  0.894008 seconds (446.74 k allocations: 163.188 MiB, 3.52% gc time, 46.55% compilation time)
Running: legendre_quadrature
  0.172635 seconds (185.44 k allocations: 10.708 MiB, 7.79% gc time, 98.90% compilation time)
Running: lobatto_quadrature
  0.175041 seconds (196.62 k allocations: 11.412 MiB, 98.33% compilation time)
Running: radau_quadrature
  0.147293 seconds (196.62 k allocations: 11.410 MiB, 98.49% compilation time)
Running: rectangle_rule_left
  0.655375 seconds (18.82 k allocations: 1.147 MiB, 3.95% compilation time)
Running: rectangle_rule_midpoint
  0.018575 seconds (24.67 k allocations: 1.555 MiB, 99.13% compilation time)
Running: rectangle_rule_right
  0.663926 seconds (17.39 k allocations: 1.065 MiB, 3.23% compilation time)
Running: rombergs_method
  0.107653 seconds (134.27 k allocations: 7.759 MiB, 97.51% compilation time)
Running: simpsons_rule
  0.024219 seconds (27.54 k allocations: 1.729 MiB, 99.30% compilation time)
Running: simpsons38_rule
  0.040448 seconds (42.37 k allocations: 2.678 MiB, 99.42% compilation time)
Running: trapezoidal_rule
  0.046778 seconds (44.10 k allocations: 1.772 MiB, 44.89% gc time, 98.88% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.030844 seconds (99.53 k allocations: 2.979 MiB, 94.37% compilation time)
Running: chebyshev_quadrature with k=1
  0.145639 seconds (237.20 k allocations: 13.054 MiB, 98.73% compilation time)
Running: chebyshev_quadrature with k=2
  0.162791 seconds (290.20 k allocations: 15.872 MiB, 98.46% compilation time)
Running: chebyshev_quadrature with k=3
  0.193097 seconds (241.33 k allocations: 13.117 MiB, 11.42% gc time, 99.05% compilation time)
Running: chebyshev_quadrature with k=4
  0.170256 seconds (241.34 k allocations: 13.121 MiB, 98.91% compilation time)
Running: hermite_quadrature with k=2
 11.324096 seconds (20.10 M allocations: 1.056 GiB, 10.29% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.341422 seconds (455.91 k allocations: 49.406 MiB, 91.62% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.173704 seconds (276.26 k allocations: 15.329 MiB, 98.05% compilation time)
Running: legendre_quadrature
  0.129568 seconds (191.98 k allocations: 11.043 MiB, 98.27% compilation time)
Running: lobatto_quadrature
  0.212314 seconds (217.28 k allocations: 37.185 MiB, 9.46% gc time, 77.40% compilation time)
Running: radau_quadrature
  0.191427 seconds (213.86 k allocations: 29.846 MiB, 8.54% gc time, 89.30% compilation time)
Running: rectangle_rule_left
  0.021812 seconds (21.73 k allocations: 1.293 MiB, 99.33% compilation time)
Running: rectangle_rule_midpoint
  0.021579 seconds (26.47 k allocations: 1.642 MiB, 99.11% compilation time)
Running: rectangle_rule_right
  0.019027 seconds (18.50 k allocations: 1.117 MiB, 99.14% compilation time)
Running: rombergs_method
  0.096133 seconds (136.74 k allocations: 7.809 MiB, 97.61% compilation time)
Running: simpsons_rule
  0.031138 seconds (39.38 k allocations: 2.061 MiB, 98.79% compilation time)
Running: simpsons38_rule
  0.031428 seconds (57.34 k allocations: 3.063 MiB, 98.71% compilation time)
Running: trapezoidal_rule
  0.043900 seconds (30.13 k allocations: 1.697 MiB, 99.34% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.032570 seconds (59.92 k allocations: 2.280 MiB, 96.95% compilation time)
Running: chebyshev_quadrature with k=1
  0.172058 seconds (232.72 k allocations: 12.824 MiB, 10.32% gc time, 98.69% compilation time)
Running: chebyshev_quadrature with k=2
  0.172652 seconds (285.38 k allocations: 15.706 MiB, 98.08% compilation time)
Running: chebyshev_quadrature with k=3
  0.152363 seconds (236.87 k allocations: 12.928 MiB, 98.61% compilation time)
Running: chebyshev_quadrature with k=4
  0.148967 seconds (236.87 k allocations: 12.929 MiB, 98.54% compilation time)
Running: hermite_quadrature with k=2
  0.154686 seconds (170.78 k allocations: 9.790 MiB, 10.99% gc time, 98.72% compilation time)
Running: jacobi_quadrature with α=β=1
  6.822959 seconds (449.18 k allocations: 1.175 GiB, 25.12% gc time, 4.78% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.165022 seconds (271.55 k allocations: 15.063 MiB, 98.02% compilation time)
Running: legendre_quadrature
  0.138138 seconds (187.55 k allocations: 10.817 MiB, 11.73% gc time, 98.52% compilation time)
Running: lobatto_quadrature
  0.156129 seconds (208.03 k allocations: 22.917 MiB, 90.88% compilation time)
Running: radau_quadrature
  0.180337 seconds (207.19 k allocations: 20.844 MiB, 9.60% gc time, 93.02% compilation time)
Running: rectangle_rule_left
  0.020119 seconds (19.52 k allocations: 1.188 MiB, 99.32% compilation time)
Running: rectangle_rule_midpoint
  0.041573 seconds (25.36 k allocations: 1.591 MiB, 99.68% compilation time)
Running: rectangle_rule_right
  0.017563 seconds (17.36 k allocations: 1.062 MiB, 99.22% compilation time)
Running: rombergs_method
  0.091747 seconds (132.58 k allocations: 7.622 MiB, 97.44% compilation time)
Running: simpsons_rule
  0.023334 seconds (31.90 k allocations: 1.853 MiB, 99.00% compilation time)
Running: simpsons38_rule
  0.032092 seconds (48.16 k allocations: 2.821 MiB, 99.09% compilation time)
Running: trapezoidal_rule
  0.031154 seconds (25.05 k allocations: 1.535 MiB, 99.33% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022050 seconds (30.87 k allocations: 1.875 MiB, 99.02% compilation time)
Running: chebyshev_quadrature with k=1
  0.138618 seconds (231.10 k allocations: 13.042 MiB, 98.19% compilation time)
Running: chebyshev_quadrature with k=2
  0.220804 seconds (283.67 k allocations: 15.989 MiB, 7.58% gc time, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.158687 seconds (235.25 k allocations: 13.146 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.149658 seconds (235.25 k allocations: 12.971 MiB, 98.55% compilation time)
Running: jacobi_quadrature with α=β=1
  1.183923 seconds (447.28 k allocations: 194.295 MiB, 8.33% gc time, 34.97% compilation time)
Running: legendre_quadrature
  0.159983 seconds (185.93 k allocations: 10.745 MiB, 98.37% compilation time)
Running: lobatto_quadrature
  0.159797 seconds (197.11 k allocations: 11.441 MiB, 98.18% compilation time)
Running: radau_quadrature
  0.153669 seconds (197.11 k allocations: 11.440 MiB, 98.45% compilation time)
Running: rectangle_rule_left
  0.340430 seconds (19.34 k allocations: 1.173 MiB, 6.90% compilation time)
Running: rectangle_rule_midpoint
  0.039899 seconds (25.01 k allocations: 1.573 MiB, 50.36% gc time, 99.67% compilation time)
Running: rectangle_rule_right
  0.158264 seconds (17.73 k allocations: 1.081 MiB, 12.69% compilation time)
Running: rombergs_method
  0.110115 seconds (145.02 k allocations: 8.483 MiB, 97.05% compilation time)
Running: simpsons_rule
  0.023028 seconds (28.23 k allocations: 1.758 MiB, 99.27% compilation time)
Running: simpsons38_rule
  0.022768 seconds (43.08 k allocations: 2.708 MiB, 99.21% compilation time)
Running: trapezoidal_rule
  0.022428 seconds (45.03 k allocations: 1.805 MiB, 97.82% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.023923 seconds (31.64 k allocations: 1.826 MiB, 98.87% compilation time)
Running: chebyshev_quadrature with k=1
  0.155545 seconds (231.69 k allocations: 12.988 MiB, 98.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.187382 seconds (284.30 k allocations: 15.891 MiB, 8.86% gc time, 98.05% compilation time)
Running: chebyshev_quadrature with k=3
  0.146370 seconds (235.84 k allocations: 13.067 MiB, 98.24% compilation time)
Running: chebyshev_quadrature with k=4
  0.147784 seconds (235.84 k allocations: 13.143 MiB, 98.23% compilation time)
Running: jacobi_quadrature with α=β=1
  1.576002 seconds (447.99 k allocations: 148.917 MiB, 7.69% gc time, 29.33% compilation time)
Running: legendre_quadrature
  0.106383 seconds (186.53 k allocations: 10.766 MiB, 98.04% compilation time)
Running: lobatto_quadrature
  0.139480 seconds (197.71 k allocations: 11.461 MiB, 98.33% compilation time)
Running: radau_quadrature
  0.135614 seconds (197.71 k allocations: 11.454 MiB, 98.37% compilation time)
Running: rectangle_rule_left
  0.684999 seconds (19.59 k allocations: 1.186 MiB, 3.34% compilation time)
Running: rectangle_rule_midpoint
  0.019538 seconds (25.01 k allocations: 1.574 MiB, 98.98% compilation time)
Running: rectangle_rule_right
  0.676067 seconds (17.69 k allocations: 1.078 MiB, 2.96% compilation time)
Running: rombergs_method
  0.126510 seconds (135.49 k allocations: 7.815 MiB, 14.05% gc time, 97.33% compilation time)
Running: simpsons_rule
  0.025159 seconds (28.93 k allocations: 1.785 MiB, 99.13% compilation time)
Running: simpsons38_rule
  0.025761 seconds (43.78 k allocations: 2.734 MiB, 99.20% compilation time)
Running: trapezoidal_rule
  0.019695 seconds (57.27 k allocations: 2.006 MiB, 95.81% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.115665 seconds (146.68 k allocations: 8.788 MiB, 99.75% compilation time)
Running: chebyshev_quadrature with k=1
  0.131844 seconds (69.93 k allocations: 2.205 MiB, 98.33% compilation time)
Running: chebyshev_quadrature with k=2
  0.131350 seconds (105.09 k allocations: 2.868 MiB, 97.53% compilation time)
Running: chebyshev_quadrature with k=3
  0.131299 seconds (92.57 k allocations: 2.654 MiB, 98.37% compilation time)
Running: chebyshev_quadrature with k=4
  0.144354 seconds (72.10 k allocations: 2.248 MiB, 98.45% compilation time)
Running: jacobi_quadrature with α=β=1
  2.361269 seconds (480.00 k allocations: 167.749 MiB, 7.69% gc time, 16.08% compilation time)
Running: legendre_quadrature
  0.100423 seconds (18.73 k allocations: 1.094 MiB, 99.75% compilation time)
Running: lobatto_quadrature
  0.000084 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000035 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 21.587545 seconds (590.00 M allocations: 8.792 GiB, 5.29% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 20.835450 seconds (592.75 M allocations: 8.833 GiB, 5.42% gc time)
Running: rombergs_method
  0.121178 seconds (20.51 k allocations: 1.165 MiB, 9.04% gc time, 99.61% compilation time)
Running: simpsons_rule
  0.000019 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024480 seconds (463 allocations: 22.578 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.019448 seconds (179 allocations: 8.766 KiB, 99.48% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 29.371917 seconds (629.32 M allocations: 9.387 GiB, 4.16% gc time, 0.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.388426 seconds (413.94 k allocations: 23.012 MiB, 4.77% gc time, 99.21% compilation time)
Running: chebyshev_quadrature with k=2
 17.822730 seconds (468.58 k allocations: 4.040 GiB, 2.52% gc time, 2.17% compilation time)
Running: chebyshev_quadrature with k=3
  8.209132 seconds (249.12 k allocations: 1.642 GiB, 3.82% gc time, 2.17% compilation time)
Running: chebyshev_quadrature with k=4
 11.556231 seconds (249.12 k allocations: 2.260 GiB, 1.97% gc time, 1.50% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.211900 seconds (484.00 k allocations: 13.254 GiB, 6.27% gc time, 1.25% compilation time)
Running: legendre_quadrature.
  9.812296 seconds (223.20 k allocations: 1.976 GiB, 3.01% gc time, 1.90% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.983022 seconds (8.23 M allocations: 13.383 GiB, 7.03% gc time, 0.70% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.654105 seconds (7.23 M allocations: 13.369 GiB, 8.08% gc time, 0.59% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.783472 seconds (22.25 k allocations: 1.347 MiB, 0.19% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 15.077128 seconds (30.45 k allocations: 1.884 MiB, 0.22% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.828262 seconds (22.45 k allocations: 1.357 MiB, 0.19% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.889481 seconds (438.04 k allocations: 152.662 MiB, 1.81% gc time, 9.97% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.361973 seconds (600.04 M allocations: 8.943 GiB, 5.95% gc time, 0.14% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.410755 seconds (600.05 M allocations: 8.943 GiB, 5.60% gc time, 0.15% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.020616 seconds (600.03 M allocations: 8.943 GiB, 5.94% gc time, 0.13% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.043687 seconds (180.45 k allocations: 4.406 MiB, 86.14% compilation time)
Running: chebyshev_quadrature with k=1
  0.161988 seconds (247.70 k allocations: 13.449 MiB, 97.55% compilation time)
Running: chebyshev_quadrature with k=2
  0.159472 seconds (272.34 k allocations: 14.523 MiB, 98.43% compilation time)
Running: chebyshev_quadrature with k=3
  0.317633 seconds (220.25 k allocations: 11.631 MiB, 99.57% compilation time)
Running: chebyshev_quadrature with k=4
  0.154902 seconds (220.25 k allocations: 11.626 MiB, 99.15% compilation time)
Running: jacobi_quadrature with α=β=1
  0.293788 seconds (388.85 k allocations: 34.972 MiB, 92.12% compilation time)
Running: laguerre_quadrature with k=2
  0.164477 seconds (180.54 k allocations: 10.477 MiB, 77.44% compilation time)
Running: legendre_quadrature
  0.116347 seconds (145.99 k allocations: 8.082 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.020339 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017541 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.051936 seconds (18.88 k allocations: 1.122 MiB, 59.10% compilation time)
Running: rectangle_rule_midpoint
  0.041686 seconds (25.48 k allocations: 1.576 MiB, 66.59% compilation time)
Running: rectangle_rule_right
  0.045872 seconds (17.48 k allocations: 1.049 MiB, 62.96% compilation time)
Running: rombergs_method
  0.223394 seconds (172.65 k allocations: 9.887 MiB, 98.73% compilation time)
Running: simpsons_rule
  0.000844 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.174901 seconds (78.86 k allocations: 3.384 MiB, 73.61% gc time, 99.41% compilation time)
Running: trapezoidal_rule
  0.101774 seconds (2.39 M allocations: 37.691 MiB, 25.01% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001149 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.113219 seconds (2.46 k allocations: 1.691 MiB, 98.22% compilation time)
Running: chebyshev_quadrature with k=2
  0.107237 seconds (2.71 k allocations: 2.355 MiB, 96.54% compilation time)
Running: chebyshev_quadrature with k=3
  0.093319 seconds (2.31 k allocations: 2.028 MiB, 96.31% compilation time)
Running: chebyshev_quadrature with k=4
  0.090505 seconds (2.31 k allocations: 1.469 MiB, 97.46% compilation time)
Running: jacobi_quadrature with α=β=1
  6.143984 seconds (365.93 k allocations: 904.798 MiB, 5.77% gc time, 6.17% compilation time)
Running: legendre_quadrature
  0.069780 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000164 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000115 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.913746 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000367 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.004428 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.066077 seconds (997 allocations: 56.672 KiB, 98.33% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000593 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000387 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.101302 seconds (2.53 k allocations: 579.203 KiB, 99.25% compilation time)
Running: chebyshev_quadrature with k=2
  0.104429 seconds (2.79 k allocations: 780.188 KiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=3
  0.110795 seconds (2.39 k allocations: 661.047 KiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.096776 seconds (2.39 k allocations: 491.547 KiB, 95.40% compilation time)
Running: jacobi_quadrature with α=β=1
  2.219620 seconds (372.50 k allocations: 252.967 MiB, 9.15% gc time, 15.53% compilation time)
Running: legendre_quadrature
  0.066385 seconds (1.32 k allocations: 67.859 KiB, 99.89% compilation time)
Running: lobatto_quadrature
  0.000083 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000039 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.289473 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000121 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.245125 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.068954 seconds (1.21 k allocations: 64.938 KiB, 99.70% compilation time)
Running: simpsons_rule
  0.000011 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000010 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000273 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
