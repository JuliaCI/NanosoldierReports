Julia Version 1.6.0-DEV.86
Commit 532d4a0aee (2020-05-23 04:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_cZz1W6/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_cZz1W6/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.09954103908295235 -0.3150656881968085; 0.09954103908295235 0.0 0.01913399580150958; 0.3150656881968085 -0.01913399580150958 0.0])
dAA = so3([0.0 0.17136502801021503 0.044060771065116466; -0.17136502801021503 0.0 -0.12443398433202316; -0.044060771065116466 0.12443398433202316 0.0])
dAA = so3([0.0 0.011281106636043928 0.042851241325574684; -0.011281106636043928 0.0 0.12834857034192926; -0.042851241325574684 -0.12834857034192926 0.0])
dAA = Quaternion(0.9944300269378146, [-0.022233880255913756, -0.09377469900563407, 0.04267179302098909])
dAA = SO3([0.9957049037260672 -0.06552378347661408 0.06540931504589129; 0.060888285243660335 0.9956509740370558 0.07051067025031499; -0.06974497412681088 -0.06622515910114371 0.9953641880668997])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9045257761033257 0.42455443044732954 0.03983285016440445; -0.3911148145896233 0.8632269314123846 -0.3191683986438552; -0.16988914671985625 0.27311682568436146 0.94686053743669]), [-0.19133995801509576, -3.150656881968085, 0.9954103908295234])
xj = SE3(SO3([0.8696840280354576 -0.18607361334317882 -0.4571939433079078; 0.24631578823096928 0.9662609598840884 0.07528804601021506; 0.4277595397512223 -0.1780908976373951 0.8861745924650115]), [-1.2834857034192926, 0.4285124132557468, -0.11281106636043928])
Dx = SE3(SO3([0.6176421633693727 -0.5159716450536554 -0.5935414219151228; 0.6986829568778328 0.7064644857641331 0.1129161464205515; 0.361054405591248 -0.4844390486476535 0.7968428479621981]), [-2.19946531552738, 2.3232860862729225, -2.235192174819983])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
