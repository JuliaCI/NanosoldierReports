Julia Version 1.6.0-DEV.81
Commit 11c942f2b2 (2020-05-23 03:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TreeViews ─────────────────── v0.3.0
  Installed DiffEqGPU ─────────────────── v1.3.0
  Installed RecursiveArrayTools ───────── v2.3.3
  Installed Cthulhu ───────────────────── v1.1.1
  Installed ConsoleProgressMonitor ────── v0.1.2
  Installed BinaryProvider ────────────── v0.5.10
  Installed GPUifyLoops ───────────────── v0.2.9
  Installed CUDAdrv ───────────────────── v6.3.0
  Installed MacroTools ────────────────── v0.5.5
  Installed ZygoteRules ───────────────── v0.2.0
  Installed TimerOutputs ──────────────── v0.5.5
  Installed Requires ──────────────────── v1.0.1
  Installed ProgressMeter ─────────────── v1.3.0
  Installed TableTraits ───────────────── v1.0.0
  Installed RecipesBase ───────────────── v1.0.1
  Installed AbstractTrees ─────────────── v0.3.3
  Installed DiffEqBase ────────────────── v6.35.0
  Installed MuladdMacro ───────────────── v0.2.2
  Installed UnPack ────────────────────── v1.0.1
  Installed FunctionWrappers ──────────── v1.1.1
  Installed Cassette ──────────────────── v0.3.3
  Installed TerminalLoggers ───────────── v0.1.1
  Installed StaticArrays ──────────────── v0.12.3
  Installed IterativeSolvers ──────────── v0.8.4
  Installed CUDAnative ────────────────── v3.1.0
  Installed CodeTracking ──────────────── v0.5.11
  Installed ArrayInterface ────────────── v2.8.7
  Installed LeftChildRightSiblingTrees ── v0.1.2
  Installed AbstractFFTs ──────────────── v0.5.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed NNlib ─────────────────────── v0.6.6
  Installed CuArrays ──────────────────── v2.2.0
  Installed DataStructures ────────────── v0.17.16
  Installed LabelledArrays ────────────── v1.2.1
  Installed ExprTools ─────────────────── v0.1.1
  Installed Reexport ──────────────────── v0.2.0
  Installed ChainRulesCore ────────────── v0.8.0
  Installed CUDAapi ───────────────────── v4.0.0
  Installed GPUCompiler ───────────────── v0.2.0
  Installed LLVM ──────────────────────── v1.4.1
  Installed CEnum ─────────────────────── v0.3.0
  Installed OrderedCollections ────────── v1.2.0
  Installed RecursiveFactorization ────── v0.1.0
  Installed Adapt ─────────────────────── v1.0.1
  Installed Parameters ────────────────── v0.12.1
  Installed LoggingExtras ─────────────── v0.4.0
  Installed ProgressLogging ───────────── v0.1.2
  Installed GPUArrays ─────────────────── v3.3.0
  Installed DocStringExtensions ───────── v0.8.1
  Installed Roots ─────────────────────── v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [071ae1c0] + DiffEqGPU v1.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.0.1
  [4fba245c] + ArrayInterface v2.8.7
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.3.0
  [3895d2a7] + CUDAapi v4.0.0
  [c5f51814] + CUDAdrv v6.3.0
  [be33ccc6] + CUDAnative v3.1.0
  [7057c7e9] + Cassette v0.3.3
  [d360d2e6] + ChainRulesCore v0.8.0
  [da1fd8a2] + CodeTracking v0.5.11
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [f68482b8] + Cthulhu v1.1.1
  [3a865a2d] + CuArrays v2.2.0
  [864edb3b] + DataStructures v0.17.16
  [2b5f629d] + DiffEqBase v6.35.0
  [071ae1c0] + DiffEqGPU v1.3.0
  [ffbed154] + DocStringExtensions v0.8.1
  [e2ba6199] + ExprTools v0.1.1
  [069b7b12] + FunctionWrappers v1.1.1
  [0c68f7d7] + GPUArrays v3.3.0
  [61eb1bfa] + GPUCompiler v0.2.0
  [ba82f77b] + GPUifyLoops v0.2.9
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [929cbde3] + LLVM v1.4.1
  [2ee39098] + LabelledArrays v1.2.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [e6f89c97] + LoggingExtras v0.4.0
  [1914dd2f] + MacroTools v0.5.5
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.6.6
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [33c8b6b6] + ProgressLogging v0.1.2
  [92933f4c] + ProgressMeter v1.3.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.3.3
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [f2b01f46] + Roots v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [3783bdb8] + TableTraits v1.0.0
  [5d786b92] + TerminalLoggers v0.1.1
  [a759f4b9] + TimerOutputs v0.5.5
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.1
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing DiffEqGPU
Status `/tmp/jl_8uR9mv/Project.toml`
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.1.0
  [3a865a2d] CuArrays v2.2.0
  [2b5f629d] DiffEqBase v6.35.0
  [071ae1c0] DiffEqGPU v1.3.0
  [f6369f11] ForwardDiff v0.10.10
  [ba82f77b] GPUifyLoops v0.2.9
  [1dea7af3] OrdinaryDiffEq v5.38.2
  [1bc83da4] SafeTestsets v0.0.1
  [789caeaf] StochasticDiffEq v6.23.0
  [1986cc42] Unitful v1.2.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_8uR9mv/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.7
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.3.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.1.0
  [7057c7e9] Cassette v0.3.3
  [d360d2e6] ChainRulesCore v0.8.0
  [da1fd8a2] CodeTracking v0.5.11
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.10.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [f68482b8] Cthulhu v1.1.1
  [3a865a2d] CuArrays v2.2.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.16
  [2b5f629d] DiffEqBase v6.35.0
  [071ae1c0] DiffEqGPU v1.3.0
  [c894b116] DiffEqJump v6.7.5
  [77a26b50] DiffEqNoiseProcess v4.1.4
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [e2ba6199] ExprTools v0.1.1
  [1a297f60] FillArrays v0.8.9
  [6a86dc24] FiniteDiff v2.3.2
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [0c68f7d7] GPUArrays v3.3.0
  [61eb1bfa] GPUCompiler v0.2.0
  [ba82f77b] GPUifyLoops v0.2.9
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [929cbde3] LLVM v1.4.1
  [2ee39098] LabelledArrays v1.2.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [e6f89c97] LoggingExtras v0.4.0
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.38.2
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.3.0
  [1fd47b50] QuadGK v2.3.1
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.3.3
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [ae5879a3] ResettableStacks v1.0.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.8.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [789caeaf] StochasticDiffEq v6.23.0
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [a759f4b9] TimerOutputs v0.5.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Explicit Methods
EnsembleGPUArray: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: MethodError: no method matching inf_for_methodinstance(::Core.MethodInstance, ::UInt64, ::UInt64)
  Closest candidates are:
    inf_for_methodinstance(!Matched::Core.Compiler.AbstractInterpreter, !Matched::Core.MethodInstance, ::UInt64) at compiler/utilities.jl:121
    inf_for_methodinstance(!Matched::Core.Compiler.AbstractInterpreter, !Matched::Core.MethodInstance, ::UInt64, !Matched::UInt64) at compiler/utilities.jl:121
  Stacktrace:
   [1] compile_method_instance(::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/irgen.jl:138
   [2] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/NvIUx/src/TimerOutput.jl:245 [inlined]
   [3] irgen(::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}, ::Core.MethodInstance, ::UInt64) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/irgen.jl:326
   [4] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/NvIUx/src/TimerOutput.jl:245 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/driver.jl:98 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/NvIUx/src/TimerOutput.jl:245 [inlined]
   [7] codegen(::Symbol, ::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/driver.jl:97
   [8] emit_function!(::LLVM.Module, ::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}, ::Function, ::Tuple{DataType}, ::String) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/rtlib.jl:100
   [9] build_runtime(::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/rtlib.jl:135
   [10] (::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams},String,String})() at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/rtlib.jl:175
   [11] get!(::GPUCompiler.var"#52#55"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams},String,String}, ::Dict{String,LLVM.Module}, ::String) at ./dict.jl:450
   [12] load_runtime(::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/rtlib.jl:167
   [13] codegen(::Symbol, ::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/driver.jl:93
   [14] compile(::Symbol, ::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDAnative.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/driver.jl:36
   [15] _cufunction(::GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/e0IdN/src/execution.jl:308
   [16] _cufunction(::GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}) at /home/pkgeval/.julia/packages/CUDAnative/e0IdN/src/execution.jl:302
   [17] (::GPUCompiler.var"#77#78"{Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CUDAnative._cufunction),GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}})() at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/cache.jl:21
   [18] get! at ./dict.jl:450 [inlined]
   [19] macro expansion at ./lock.jl:183 [inlined]
   [20] check_cache(::typeof(CUDAnative._cufunction), ::GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}, ::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/cache.jl:19
   [21] + at ./int.jl:87 [inlined]
   [22] hash_64_64 at ./hashing.jl:35 [inlined]
   [23] hash_uint64 at ./hashing.jl:62 [inlined]
   [24] hx at ./float.jl:568 [inlined]
   [25] hash at ./float.jl:571 [inlined]
   [26] cached_compilation(::typeof(CUDAnative._cufunction), ::GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}, ::UInt64; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/cache.jl:0
   [27] cached_compilation(::Function, ::GPUCompiler.FunctionSpec{GPUArrays.var"#26#27",Tuple{CuArrays.CuKernelContext,CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CUDAnative.CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}, ::UInt64) at /home/pkgeval/.julia/packages/GPUCompiler/bwcs0/src/cache.jl:33
   [28] cufunction(::Function, ::Type{T} where T; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/e0IdN/src/execution.jl:296
   [29] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/e0IdN/src/execution.jl:108 [inlined]
   [30] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArrays.CuArray{Float32,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArrays.CuArray{Float32,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/l0gXB/src/gpuarrays.jl:32
   [31] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/OXvxB/src/device/execution.jl:61 [inlined]
   [32] copyto!(::CuArrays.CuArray{Float32,2,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArrays.CuArray{Float32,2,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/OXvxB/src/host/broadcast.jl:63
   [33] copyto!(::CuArrays.CuArray{Float32,2,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArrays.CuArray{Float32,2,Nothing}}}) at ./broadcast.jl:886
   [34] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArrays.CuArray{Float32,2,Nothing}}}) at ./broadcast.jl:862
   [35] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,typeof(identity),Tuple{CuArrays.CuArray{Float32,2,Nothing}}}) at ./broadcast.jl:837
   [36] copy at /home/pkgeval/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:174 [inlined]
   [37] recursivecopy at /home/pkgeval/.julia/packages/RecursiveArrayTools/wQDaB/src/utils.jl:6 [inlined]
   [38] __init(::DiffEqBase.ODEProblem{CuArrays.CuArray{Float32,2,Nothing},Tuple{Float32,Float32},true,CuArrays.CuArray{Float32,2,Nothing},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#28#32"{typeof(Main.##254.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5, ::Array{CuArrays.CuArray{Float32,2,Nothing},1}, ::Array{Float32,1}, ::Array{Any,1}, ::Type{Val{true}}; saveat::Float32, tstops::Array{Float32,1}, d_discontinuities::Array{Float32,1}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Float32, dtmin::Nothing, dtmax::Float32, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Nothing, reltol::Nothing, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Rational{Int64}, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/JrtsK/src/solve.jl:115
   [39] #__solve#357 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/JrtsK/src/solve.jl:4 [inlined]
   [40] solve_call(::DiffEqBase.ODEProblem{CuArrays.CuArray{Float32,2,Nothing},Tuple{Float32,Float32},true,CuArrays.CuArray{Float32,2,Nothing},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#28#32"{typeof(Main.##254.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Tsit5; merge_callbacks::Bool, kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Float32},Tuple{Symbol,Symbol},NamedTuple{(:callback, :saveat),Tuple{Nothing,Float32}}}) at /home/pkgeval/.julia/packages/DiffEqBase/FfKvH/src/solve.jl:60
   [41] #solve#449 at /home/pkgeval/.julia/packages/DiffEqBase/FfKvH/src/solve.jl:78 [inlined]
   [42] batch_solve(::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##254.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##254.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing}, ::OrdinaryDiffEq.Tsit5, ::DiffEqGPU.EnsembleGPUArray, ::UnitRange{Int64}; kwargs::Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/src/DiffEqGPU.jl:206
   [43] (::DiffEqGPU.var"#4#6"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##254.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##254.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing},OrdinaryDiffEq.Tsit5,DiffEqGPU.EnsembleGPUArray})(::Int64) at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/src/DiffEqGPU.jl:149
   [44] iterate at ./generator.jl:47 [inlined]
   [45] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},DiffEqGPU.var"#4#6"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##254.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##254.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing},OrdinaryDiffEq.Tsit5,DiffEqGPU.EnsembleGPUArray}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:701
   [46] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},DiffEqGPU.var"#4#6"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##254.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##254.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing},OrdinaryDiffEq.Tsit5,DiffEqGPU.EnsembleGPUArray}}) at ./array.jl:630
   [47] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2150
   [48] macro expansion at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/src/DiffEqGPU.jl:143 [inlined]
   [49] macro expansion at ./timing.jl:233 [inlined]
   [50] __solve(::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##254.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##254.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing}, ::OrdinaryDiffEq.Tsit5, ::DiffEqGPU.EnsembleGPUArray; trajectories::Int64, batch_size::Int64, kwargs::Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/src/DiffEqGPU.jl:142
   [51] #solve#450 at /home/pkgeval/.julia/packages/DiffEqBase/FfKvH/src/solve.jl:92 [inlined]
   [52] top-level scope at ./timing.jl:174
   [53] include at ./Base.jl:368 [inlined]
   [54] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [55] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl:17
   [56] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [57] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl:17
   [58] eval(::Module, ::Any) at ./boot.jl:331
   [59] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [60] top-level scope at timing.jl:174
   [61] include(::String) at ./client.jl:446
   [62] top-level scope at none:5
   [63] eval(::Module, ::Any) at ./boot.jl:331
   [64] exec_options(::Base.JLOptions) at ./client.jl:271
  in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/ensemblegpuarray.jl:25
  
Test Summary:    | Error  Total
EnsembleGPUArray |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl:17
ERROR: LoadError: failed process: Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so --depwarn=yes -g1 --startup-file=no --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/DiffEqGPU/senL8/test")
include("/home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl")
'`, ProcessExited(1)) [1]

Stacktrace:
 [1] pipeline_error at ./process.jl:525 [inlined]
 [2] run(::Cmd; wait::Bool) at ./process.jl:440
 [3] run(::Cmd) at ./process.jl:438
 [4] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl:10
 [5] include(::String) at ./client.jl:446
 [6] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/senL8/test/runtests.jl:3
ERROR: Package DiffEqGPU errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
