Julia Version 1.6.0-DEV.81
Commit 11c942f2b2 (2020-05-23 03:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_10JivA/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_10JivA/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723362545553232
curgen: 20 fitness: 0.21723362545553232
curgen: 30 fitness: 0.21723362545553232
curgen: 40 fitness: 0.21723362545553232
curgen: 50 fitness: 0.21723362545553232
CoordinateCreature{Array{Float64,1}}([0.2225560474985969], -0.21723362545553232) 0.2225560474985969 -0.21723362545553232
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257937910765579
curgen: 100 fitness: 3.258154787740415
curgen: 150 fitness: 3.2582163152682595
curgen: 200 fitness: 3.258249781843772
curgen: 250 fitness: 3.258317862200783
curgen: 300 fitness: 3.258380485336949
curgen: 350 fitness: 3.2584333780419015
curgen: 400 fitness: 3.2584468149759
curgen: 450 fitness: 3.2584468149759
curgen: 500 fitness: 3.2584853211294447
CoordinateCreature{Array{Float64,1}}([0.22264768630577872, 0.2225687273302815, -0.22246169873096572, 0.2221970128917104, 0.22258292634580532, 0.2224758781325891, 0.2227542225559402, -0.22260108253200872, 0.22239863812217534, -0.22254960231040086, -0.22272584782594218, -0.22254819888427324, -0.22235233982334784, -0.2221889555641732, 0.2224186867514293], -3.2584853211294447) [0.22264768630577872, 0.2225687273302815, -0.22246169873096572, 0.2221970128917104, 0.22258292634580532, 0.2224758781325891, 0.2227542225559402, -0.22260108253200872, 0.22239863812217534, -0.22254960231040086, -0.22272584782594218, -0.22254819888427324, -0.22235233982334784, -0.2221889555641732, 0.2224186867514293] -3.2584853211294447
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0037615016780705446
curgen: 100 fitness: -0.003444024446480398
curgen: 150 fitness: -0.0029028968827731205
curgen: 200 fitness: -0.0024476728065963016
curgen: 250 fitness: -0.0020820699971864087
curgen: 300 fitness: -0.0020820699971864087
curgen: 350 fitness: -0.001970305440266884
curgen: 400 fitness: -0.0017772656965746592
curgen: 450 fitness: -0.0015688143691079404
curgen: 500 fitness: -0.0012467267127078685
CoordinateCreature{Array{Float64,1}}([-0.001638823592901068, 0.0001824835255954671, 0.00109698506353, 0.0002974498078413927, 0.0005594810007209872, -0.00032023857756022407, -0.00013988702527546748, 0.0009279594597754411, -0.0003595774327373346, -0.0004300215144346157, 0.0003682315344701681, -0.000706034941023323, 0.00014683127318651534, 8.433806649019278e-5, -8.749152403690098e-6], 0.0012467267127078685) [-0.001638823592901068, 0.0001824835255954671, 0.00109698506353, 0.0002974498078413927, 0.0005594810007209872, -0.00032023857756022407, -0.00013988702527546748, 0.0009279594597754411, -0.0003595774327373346, -0.0004300215144346157, 0.0003682315344701681, -0.000706034941023323, 0.00014683127318651534, 8.433806649019278e-5, -8.749152403690098e-6] 0.0012467267127078685
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
