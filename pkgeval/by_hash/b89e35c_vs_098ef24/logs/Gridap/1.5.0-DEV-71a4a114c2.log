Julia Version 1.5.0-DEV.668
Commit 71a4a114c2 (2020-04-23 08:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DiffResults ────────────────── v1.0.2
  Installed NLsolve ────────────────────── v4.3.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed Intervals ──────────────────── v1.1.0
  Installed Gridap ─────────────────────── v0.9.1
  Installed LightXML ───────────────────── v0.8.1
  Installed CodecZlib ──────────────────── v0.7.0
  Installed ArrayInterface ─────────────── v2.8.5
  Installed EzXML ──────────────────────── v1.1.0
  Installed BinaryProvider ─────────────── v0.5.8
  Installed JLD2 ───────────────────────── v0.1.13
  Installed Parameters ─────────────────── v0.12.0
  Installed ExprTools ──────────────────── v0.1.1
  Installed ForwardDiff ────────────────── v0.10.10
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed BSON ───────────────────────── v0.2.6
  Installed StaticArrays ───────────────── v0.12.1
  Installed JSON ───────────────────────── v0.21.0
  Installed TimeZones ──────────────────── v1.1.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed RecipesBase ────────────────── v1.0.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed DiffRules ──────────────────── v1.0.1
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed WriteVTK ───────────────────── v1.4.1
  Installed LineSearches ───────────────── v7.0.1
  Installed Combinatorics ──────────────── v1.0.1
  Installed Distances ──────────────────── v0.8.2
  Installed FillArrays ─────────────────── v0.8.7
  Installed Polynomials ────────────────── v0.8.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed CommonSubexpressions ───────── v0.2.0
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed FileIO ─────────────────────── v1.2.4
  Installed DataStructures ─────────────── v0.17.13
  Installed Reexport ───────────────────── v0.2.0
  Installed Mocking ────────────────────── v0.7.1
  Installed QuadGK ─────────────────────── v2.3.1
  Installed Parsers ────────────────────── v1.0.2
  Installed NLSolversBase ──────────────── v7.6.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [56d4f2e9] + Gridap v0.9.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4fba245c] + ArrayInterface v2.8.5
  [fbb218c0] + BSON v0.2.6
  [b99e7846] + BinaryProvider v0.5.8
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.13
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.2.4
  [1a297f60] + FillArrays v0.8.7
  [6a86dc24] + FiniteDiff v2.3.0
  [f6369f11] + ForwardDiff v0.10.10
  [56d4f2e9] + Gridap v0.9.1
  [d8418881] + Intervals v1.1.0
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [9c8b4983] + LightXML v0.8.1
  [d3d80556] + LineSearches v7.0.1
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.3.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v1.0.2
  [f27b6e38] + Polynomials v0.8.0
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v1.0.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [f269a46b] + TimeZones v1.1.1
  [3bb67fe8] + TranscodingStreams v0.9.5
  [64499a7a] + WriteVTK v1.4.1
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/X323b/deps/build.log`
   Building LightXML ─→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
    Testing Gridap
Status `/tmp/jl_GOdJsv/Project.toml`
  [fbb218c0] BSON v0.2.6
  [861a8166] Combinatorics v1.0.1
  [ffbed154] DocStringExtensions v0.8.1
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.2.4
  [1a297f60] FillArrays v0.8.7
  [56d4f2e9] Gridap v0.9.1
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [d3d80556] LineSearches v7.0.1
  [2774e3e8] NLsolve v4.3.0
  [1fd47b50] QuadGK v2.3.1
  [90137ffa] StaticArrays v0.12.1
  [64499a7a] WriteVTK v1.4.1
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_GOdJsv/Manifest.toml`
  [4fba245c] ArrayInterface v2.8.5
  [fbb218c0] BSON v0.2.6
  [b99e7846] BinaryProvider v0.5.8
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.13
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.2.4
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [f6369f11] ForwardDiff v0.10.10
  [56d4f2e9] Gridap v0.9.1
  [d8418881] Intervals v1.1.0
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [9c8b4983] LightXML v0.8.1
  [d3d80556] LineSearches v7.0.1
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.2
  [f27b6e38] Polynomials v0.8.0
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v1.0.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [f269a46b] TimeZones v1.1.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [64499a7a] WriteVTK v1.4.1
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Helpers       |   13     13
232.284096 seconds (22.49 M allocations: 1.100 GiB, 0.55% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  1.656654 seconds (1.94 M allocations: 99.352 MiB, 1.09% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 26.979122 seconds (29.73 M allocations: 1.387 GiB, 3.14% gc time)
Test Summary: | Pass  Total
Algebra       |  693    693
 69.607553 seconds (79.28 M allocations: 3.632 GiB, 3.76% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 13.887232 seconds (13.24 M allocations: 665.889 MiB, 3.03% gc time)
Test Summary: | Pass  Total
Arrays        |  321    321
 28.679321 seconds (28.10 M allocations: 1.348 GiB, 3.05% gc time)
Test Summary: | Pass  Total
Fields        |  592    592
 59.765100 seconds (50.93 M allocations: 2.444 GiB, 3.37% gc time)
Test Summary: | Pass  Total
Polynomials   |  261    261
 22.305239 seconds (20.56 M allocations: 1002.411 MiB, 3.07% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 16.212672 seconds (29.32 M allocations: 1.293 GiB, 10.75% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  981    981
 85.713802 seconds (78.55 M allocations: 3.814 GiB, 3.88% gc time)
Test Summary: | Pass  Total
Geometry      | 2165   2165
169.001527 seconds (156.12 M allocations: 7.691 GiB, 3.72% gc time)
Test Summary: | Pass  Total
FESpaces      | 1001   1001
365.678974 seconds (290.93 M allocations: 14.115 GiB, 3.34% gc time)
Test Summary: | Pass  Total
MultiField    |  318    318
105.829040 seconds (70.87 M allocations: 3.504 GiB, 2.60% gc time)
Test Summary: |
Visualization | No tests
 22.563579 seconds (14.24 M allocations: 729.650 MiB, 2.45% gc time)
Test Summary: | Pass  Total
Gridap        |   31     31
816.316820 seconds (423.65 M allocations: 21.907 GiB, 2.70% gc time)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000061 seconds (1000 allocations: 31.250 KiB)
  0.000026 seconds
  0.000000 seconds
  0.000030 seconds
  0.000040 seconds
  0.000027 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.005981 seconds (100.00 k allocations: 3.052 MiB)
  0.002718 seconds
  0.000000 seconds
  0.003308 seconds
  0.004060 seconds
  0.002771 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (1 allocation: 32 bytes)
  0.000003 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000006 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000004 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000004 seconds
  0.000005 seconds
  0.000080 seconds (1000 allocations: 31.250 KiB)
  0.000326 seconds (1000 allocations: 31.250 KiB)
  0.000004 seconds
  0.000124 seconds
  0.000228 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000508 seconds
  0.000522 seconds
  0.007590 seconds (100.00 k allocations: 3.052 MiB)
  0.033264 seconds (100.00 k allocations: 3.052 MiB)
  0.000661 seconds
  0.013025 seconds
  0.015791 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000023 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000022 seconds
  0.000023 seconds
  0.000062 seconds
  0.000071 seconds
+++ running suite for n = 100000 +++
  0.002179 seconds
  0.002216 seconds
  0.007591 seconds
  0.007958 seconds
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000014 seconds
  0.000000 seconds
  0.000040 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001930 seconds
  0.000000 seconds
  0.004565 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000002 seconds
  0.000004 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1000 +++
  0.000109 seconds
  0.000129 seconds
  0.000106 seconds
+++ running suite for n = 100000 +++
  0.007794 seconds
  0.009362 seconds
  0.010943 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000004 seconds (30 allocations: 480 bytes)
  0.000002 seconds
  0.000001 seconds
  0.000000 seconds
  0.000006 seconds
  0.000006 seconds
+++ running suite for n = 1000 +++
  0.000030 seconds
  0.000003 seconds
  0.000113 seconds
  0.000120 seconds
  0.000027 seconds
  0.000002 seconds
  0.000137 seconds
  0.000131 seconds
  0.000028 seconds
  0.000009 seconds
  0.000272 seconds (3.49 k allocations: 54.516 KiB)
  0.000115 seconds
  0.000073 seconds
  0.000002 seconds
  0.000493 seconds
  0.000478 seconds
+++ running suite for n = 100000 +++
  0.003033 seconds
  0.000415 seconds
  0.013383 seconds
  0.012426 seconds
  0.002792 seconds
  0.000153 seconds
  0.014171 seconds
  0.013500 seconds
  0.002768 seconds
  0.000971 seconds
  0.026648 seconds (399.49 k allocations: 6.096 MiB)
  0.011641 seconds
  0.007358 seconds
  0.000155 seconds
  0.051270 seconds
  0.062035 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000004 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000004 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000067 seconds
  0.000005 seconds
  0.000204 seconds
  0.000201 seconds (1 allocation: 112 bytes)
  0.000007 seconds
  0.000221 seconds
  0.000241 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.007017 seconds
  0.000487 seconds
  0.022469 seconds
  0.020136 seconds (1 allocation: 112 bytes)
  0.000704 seconds
  0.021578 seconds
  0.018637 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000003 seconds
+++ running suite for n = 1000 +++
  0.000081 seconds
  0.000106 seconds
  0.000289 seconds
  0.000086 seconds
  0.000104 seconds
  0.000263 seconds
  0.000096 seconds
  0.000119 seconds
  0.000094 seconds
  0.000104 seconds
  0.000122 seconds
  0.000093 seconds
  0.000254 seconds
+++ running suite for n = 100000 +++
  0.009007 seconds
  0.010688 seconds
  0.038962 seconds
  0.010001 seconds
  0.010165 seconds
  0.030370 seconds
  0.013410 seconds
  0.016322 seconds
  0.009980 seconds
  0.013476 seconds
  0.015097 seconds
  0.011060 seconds
  0.025688 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000008 seconds
+++ running suite for n = 1000 +++
  0.000082 seconds
  0.000206 seconds
  0.000809 seconds
+++ running suite for n = 100000 +++
  0.007205 seconds
  0.019148 seconds
  0.096245 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000004 seconds (3 allocations: 48 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000007 seconds (30 allocations: 480 bytes)
+++ running suite for n = 1000 +++
  0.000053 seconds
  0.000538 seconds (3.49 k allocations: 54.516 KiB)
+++ running suite for n = 100000 +++
  0.005235 seconds
  0.053767 seconds (399.49 k allocations: 6.096 MiB)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000007 seconds (5 allocations: 96 bytes)
  0.321060 seconds (198.72 k allocations: 9.820 MiB)
  0.000000 seconds
  0.000006 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000005 seconds (5 allocations: 96 bytes)
  0.000009 seconds (5 allocations: 96 bytes)
  0.000000 seconds
  0.000005 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000025 seconds (50 allocations: 960 bytes)
  0.000051 seconds (50 allocations: 960 bytes)
  0.000001 seconds
  0.000014 seconds (50 allocations: 1.250 KiB)
  0.000002 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000025 seconds
  0.000150 seconds
  0.002218 seconds (5.49 k allocations: 101.391 KiB)
  0.004976 seconds (5.49 k allocations: 101.391 KiB)
  0.000033 seconds
  0.001137 seconds (5.49 k allocations: 132.641 KiB)
  0.000004 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.002506 seconds
  0.015123 seconds
  0.228186 seconds (599.49 k allocations: 10.673 MiB)
  0.512541 seconds (599.49 k allocations: 10.673 MiB)
  0.003332 seconds
  0.122210 seconds (599.49 k allocations: 13.725 MiB)
  0.000088 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000004 seconds
  0.000006 seconds
  0.000006 seconds
  0.000010 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000008 seconds
  0.000016 seconds
  0.000013 seconds
  0.000037 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.000740 seconds
  0.001506 seconds
  0.001208 seconds
  0.003343 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.075603 seconds
  0.151437 seconds
  0.149584 seconds
  0.590969 seconds (3.00 M allocations: 137.329 MiB, 25.21% gc time)
    Testing Gridap tests passed 
