Julia Version 1.5.0-DEV.668
Commit 71a4a114c2 (2020-04-23 08:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_4eed1u/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_4eed1u/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.007784801336612549 0.011774474806516437; 0.007784801336612549 0.0 -0.010383705122307213; -0.011774474806516437 0.010383705122307213 0.0])
dAA = so3([0.0 0.09444059880838002 0.13053387677029393; -0.09444059880838002 0.0 0.1408005519179559; -0.13053387677029393 -0.1408005519179559 0.0])
dAA = so3([0.0 -0.018791421837407375 -0.16206869760003742; 0.018791421837407375 0.0 0.09321809123248752; 0.16206869760003742 -0.09321809123248752 0.0])
dAA = Quaternion(0.995418528643936, [-0.039443266836149855, 0.07911019289430046, 0.03643842633622913])
dAA = SO3([0.9991870982426089 0.024583717515545778 -0.03194970326358179; -0.020174576177747268 0.9910896442390101 0.1316598023629109; 0.03490170743048761 -0.13090820415584478 0.9907799518072257])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9207968275932019 0.16892312138246 0.35156533014036234; -0.2810802638777934 0.9122971183329607 0.29783863607625843; -0.2704202055185324 -0.3730669469998415 0.8875212479166525]), [0.10383705122307213, 0.11774474806516436, 0.07784801336612548])
xj = SE3(SO3([0.9065764277604256 -0.19828721983149186 0.3725605441812693; 0.1253936314937876 0.969445221916461 0.21083737544407075; -0.4029833964445013 -0.14442347508227826 0.903740140767916]), [-0.9321809123248751, -1.6206869760003741, 0.18791421837407374])
Dx = SE3(SO3([0.9085018765107871 -0.41601913595100803 0.03940074744158162; 0.41787775402131583 0.9048064111559124 -0.08187515511593524; -0.0015884176022918917 0.09084842791008815 0.9958634645752331]), [-0.49508733220954465, -1.8020357035645842, -0.7843140353713539])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
